; ModuleID = 'sort.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.keyfield = type { i64, i64, i64, i64, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.keyfield* }
%struct.line = type { i8*, i64, i8*, i8* }
%struct.tempnode = type { %struct.tempnode*, i32, i8, [0 x i8] }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.month = type { i8*, i32 }
%struct.md5_ctx = type { i32, i32, i32, i32, [2 x i32], i32, [32 x i32] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.Tokens = type { i64, i8**, i64*, %struct.obstack, %struct.obstack, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sigaction = type { %union.anon.2, %struct.__sigset_t, i32, void ()* }
%union.anon.2 = type { void (i32)* }
%struct.sortfile = type { i8*, %struct.tempnode* }
%struct.cs_status = type { i8, %struct.__sigset_t }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.22 }
%union.anon.22 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0.21 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0.21 = type { [256 x i64] }
%struct.buffer = type { i8*, i64, i64, i64, i64, i64, i8 }
%struct.merge_node_queue = type { %struct.heap*, %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.heap = type { i8**, i64, i64, i32 (i8*, i8*)* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.anon.13 }
%struct.anon.13 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%struct.merge_node = type { %struct.line*, %struct.line*, %struct.line*, %struct.line*, %struct.line**, i64, i64, %struct.merge_node*, %struct.merge_node*, %struct.merge_node*, i32, i8, %union.pthread_mutex_t }
%union.anon.11 = type { i32 }
%struct.thread_args = type { %struct.line*, i64, i64, %struct.merge_node*, %struct.merge_node_queue*, %struct._IO_FILE*, i8* }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.__mbstate_t = type { i32, %union.anon.11 }
%struct.sysinfo = type { i64, [3 x i64], i64, i64, i64, i64, i64, i64, i16, i16, i64, i64, i32, [0 x i8] }
%struct.timezone = type { i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"Usage: %s [OPTION]... [FILE]...\0A  or:  %s [OPTION]... --files0-from=F\0A\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"Write sorted concatenation of all FILE(s) to standard output.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [20 x i8] c"Ordering options:\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [204 x i8] c"  -b, --ignore-leading-blanks  ignore leading blanks\0A  -d, --dictionary-order      consider only blanks and alphanumeric characters\0A  -f, --ignore-case           fold lower case to upper case characters\0A\00", align 1
@.str.5 = private unnamed_addr constant [211 x i8] c"  -g, --general-numeric-sort  compare according to general numerical value\0A  -i, --ignore-nonprinting    consider only printable characters\0A  -M, --month-sort            compare (unknown) < 'JAN' < ... < 'DEC'\0A\00", align 1
@.str.6 = private unnamed_addr constant [76 x i8] c"  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\0A\00", align 1
@.str.7 = private unnamed_addr constant [274 x i8] c"  -n, --numeric-sort          compare according to string numerical value\0A  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\0A      --random-source=FILE    get random bytes from FILE\0A  -r, --reverse               reverse the result of comparisons\0A\00", align 1
@.str.8 = private unnamed_addr constant [278 x i8] c"      --sort=WORD             sort according to WORD:\0A                                general-numeric -g, human-numeric -h, month -M,\0A                                numeric -n, random -R, version -V\0A  -V, --version-sort          natural sort of (version) numbers within text\0A\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"Other options:\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [118 x i8] c"      --batch-size=NMERGE   merge at most NMERGE inputs at once;\0A                            for more use temp files\0A\00", align 1
@.str.11 = private unnamed_addr constant [277 x i8] c"  -c, --check, --check=diagnose-first  check for sorted input; do not sort\0A  -C, --check=quiet, --check=silent  like -c, but do not report first bad line\0A      --compress-program=PROG  compress temporaries with PROG;\0A                              decompress them with PROG -d\0A\00", align 1
@.str.12 = private unnamed_addr constant [348 x i8] c"      --debug               annotate the part of the line used to sort,\0A                              and warn about questionable usage to stderr\0A      --files0-from=F       read input from the files specified by\0A                            NUL-terminated names in file F;\0A                            If F is - then read names from standard input\0A\00", align 1
@.str.13 = private unnamed_addr constant [144 x i8] c"  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and type\0A  -m, --merge               merge already sorted files; do not sort\0A\00", align 1
@.str.14 = private unnamed_addr constant [216 x i8] c"  -o, --output=FILE         write result to FILE instead of standard output\0A  -s, --stable              stabilize sort by disabling last-resort comparison\0A  -S, --buffer-size=SIZE    use SIZE for main memory buffer\0A\00", align 1
@.str.15 = private unnamed_addr constant [453 x i8] c"  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition\0A  -T, --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or %s;\0A                              multiple options specify multiple directories\0A      --parallel=N          change the number of sorts run concurrently to N\0A  -u, --unique              with -c, check for strict ordering;\0A                              without -c, output only the first of an equal run\0A\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@.str.17 = private unnamed_addr constant [64 x i8] c"  -z, --zero-terminated     line delimiter is NUL, not newline\0A\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.19 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.20 = private unnamed_addr constant [604 x i8] c"\0AKEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a\0Afield number and C a character position in the field; both are origin 1, and\0Athe stop position defaults to the line's end.  If neither -t nor -b is in\0Aeffect, characters in a field are counted from the beginning of the preceding\0Awhitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],\0Awhich override global ordering options for that key.  If no key is given, use\0Athe entire line as the key.  Use --debug to diagnose incorrect key usage.\0A\0ASIZE may be followed by the following multiplicative suffixes:\0A\00", align 1
@.str.21 = private unnamed_addr constant [229 x i8] c"% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\0A\0A*** WARNING ***\0AThe locale specified by the environment affects sort order.\0ASet LC_ALL=C to get the traditional sort order that uses\0Anative byte values.\0A\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.77 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.79 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.81 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.82 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.68 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.67 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.66 = private unnamed_addr constant [56 x i8] c"\0AWith no FILE, or when FILE is -, read standard input.\0A\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@hard_LC_COLLATE = internal global i8 0, align 1, !dbg !60, !ctir !102
@hard_LC_TIME = internal global i8 0, align 1, !dbg !714, !ctir !102
@decimal_point = internal global i32 0, align 4, !dbg !710, !ctir !5
@thousands_sep = internal global i32 0, align 4, !dbg !712, !ctir !5
@have_read_stdin = internal global i8 0, align 1, !dbg !726, !ctir !102
@caught_signals = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !734, !ctir !144
@main.sig = internal constant [11 x i32] [i32 14, i32 1, i32 2, i32 13, i32 3, i32 15, i32 29, i32 27, i32 26, i32 24, i32 25], align 16, !dbg !703
@optind = external dso_local global i32, align 4, !ctir !5
@short_options = internal constant [31 x i8] c"-bcCdfghik:mMno:rRsS:t:T:uVy:z\00", align 16, !dbg !748, !ctir !246
@long_options = internal constant [31 x %struct.option] [%struct.option { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.95, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i32 2, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i32 1, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.103, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0), i32 1, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i32 0, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i32 0, i32* null, i32 77 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.111, i32 0, i32 0), i32 1, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 1, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 1, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.120, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.121, i32 0, i32 0), i32 1, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !750, !ctir !249
@optarg = external dso_local global i8*, align 8, !ctir !7
@.str.27 = private unnamed_addr constant [25 x i8] c"invalid number after '-'\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"src/sort.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"invalid number after '.'\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"stray character in field spec\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"--sort\00", align 1
@sort_args = internal constant [7 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8* null], align 16, !dbg !754, !ctir !262
@sort_types = internal constant [6 x i8] c"ghMnRV", align 1, !dbg !752, !ctir !259
@.str.33 = private unnamed_addr constant [8 x i8] c"--check\00", align 1
@check_args = internal constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.133, i32 0, i32 0), i8* null], align 16, !dbg !758, !ctir !274
@check_types = internal constant [3 x i8] c"CCc", align 1, !dbg !756, !ctir !271
@.str.34 = private unnamed_addr constant [3 x i8] c"cC\00", align 1
@compress_program = internal global i8* null, align 8, !dbg !730, !ctir !87
@.str.35 = private unnamed_addr constant [37 x i8] c"multiple compress programs specified\00", align 1
@debug = internal global i8 0, align 1, !dbg !732, !ctir !102
@.str.36 = private unnamed_addr constant [30 x i8] c"invalid number at field start\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"field number is zero\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"character offset is zero\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"invalid number after ','\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"multiple output files specified\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"multiple random sources specified\00", align 1
@stable = internal global i8 0, align 1, !dbg !722, !ctir !102
@.str.42 = private unnamed_addr constant [10 x i8] c"empty tab\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"\5C0\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"multi-character tab %s\00", align 1
@tab = internal global i32 128, align 4, !dbg !760, !ctir !5
@.str.45 = private unnamed_addr constant [18 x i8] c"incompatible tabs\00", align 1
@unique = internal global i8 0, align 1, !dbg !724, !ctir !102
@eolchar = internal global i8 10, align 1, !dbg !766, !ctir !8
@.str.47 = private unnamed_addr constant [13 x i8] c"Mike Haertel\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"Paul Eggert\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.51 = private unnamed_addr constant [52 x i8] c"file operands cannot be combined with --files0-from\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"cannot read file names from %s\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.55 = private unnamed_addr constant [63 x i8] c"when reading file names from stdin, no file name of %s allowed\00", align 1
@.str.56 = private unnamed_addr constant [38 x i8] c"%s:%lu: invalid zero-length file name\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"no input from %s\00", align 1
@keylist = internal global %struct.keyfield* null, align 8, !dbg !728, !ctir !92
@main.opts = internal global [10 x i8] c"X --debug\00", align 1, !dbg !706
@.str.59 = private unnamed_addr constant [21 x i8] c"failed to set locale\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.60 = private unnamed_addr constant [47 x i8] c"text ordering performed using %s sorting rules\00", align 1
@.str.61 = private unnamed_addr constant [53 x i8] c"text ordering performed using simple byte comparison\00", align 1
@reverse = internal global i8 0, align 1, !dbg !720, !ctir !102
@temp_dir_count = internal global i64 0, align 8, !dbg !718, !ctir !52
@.str.62 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@sort_size = internal global i64 0, align 8, !dbg !716, !ctir !52
@nmerge = internal global i32 16, align 4, !dbg !775, !ctir !66
@.str.63 = private unnamed_addr constant [38 x i8] c"extra operand %s not allowed with -%c\00", align 1
@main.opts.64 = internal global [3 x i8] c"\00o\00", align 1, !dbg !708
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.65 = private unnamed_addr constant [13 x i8] c"close failed\00", align 1
@.str.181 = private unnamed_addr constant [16 x i8] c"standard output\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@saved_line = internal global %struct.line zeroinitializer, align 8, !dbg !796, !ctir !442
@.str.167 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@temphead = internal global %struct.tempnode* null, align 8, !dbg !746, !ctir !293
@nprocs = internal global i32 0, align 4, !dbg !783, !ctir !295
@.str.171 = private unnamed_addr constant [20 x i8] c"waiting for %s [-d]\00", align 1
@.str.172 = private unnamed_addr constant [30 x i8] c"%s [-d] terminated abnormally\00", align 1
@proctab = internal global %struct.hash_table* null, align 8, !dbg !781, !ctir !541
@.str.164 = private unnamed_addr constant [13 x i8] c"write failed\00", align 1
@blanks = internal global [256 x i8] zeroinitializer, align 16, !dbg !736, !ctir !318
@unit_order = internal constant <{ [108 x i8], [148 x i8] }> <{ [108 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\03\00\00\00\01\00\02\00\00\05\00\00\00\04\00\00\00\00\08\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [148 x i8] zeroinitializer }>, align 16, !dbg !779, !ctir !479
@.str.165 = private unnamed_addr constant [20 x i8] c"^ no match for key\0A\00", align 1
@monthtab = internal global [12 x %struct.month] [%struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i32 0, i32 0), i32 4 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i32 8 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0), i32 12 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i32 0, i32 0), i32 2 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i32 1 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 7 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i32 0, i32 0), i32 6 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i32 0, i32 0), i32 3 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i32 0, i32 0), i32 5 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i32 0, i32 0), i32 11 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i32 0, i32 0), i32 10 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i32 9 }], align 16, !dbg !744, !ctir !324
@fold_toupper = internal global [256 x i8] zeroinitializer, align 16, !dbg !742, !ctir !323
@.str.83 = private unnamed_addr constant [4 x i8] c"APR\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"AUG\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"DEC\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"FEB\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"JAN\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"JUL\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"JUN\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"MAR\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"MAY\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"NOV\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c"OCT\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"SEP\00", align 1
@random_md5_state = internal global %struct.md5_ctx zeroinitializer, align 4, !dbg !773, !ctir !491
@.str.161 = private unnamed_addr constant [29 x i8] c"string transformation failed\00", align 1
@.str.162 = private unnamed_addr constant [42 x i8] c"set LC_ALL='C' to work around the problem\00", align 1
@.str.163 = private unnamed_addr constant [32 x i8] c"the untransformed string was %s\00", align 1
@.str.176 = private unnamed_addr constant [34 x i8] c"couldn't execute compress program\00", align 1
@.str.177 = private unnamed_addr constant [31 x i8] c"couldn't create temporary file\00", align 1
@.str.173 = private unnamed_addr constant [9 x i8] c": errno \00", align 1
@.str.174 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@temp_dirs = internal global i8** null, align 8, !dbg !764, !ctir !371
@create_temp_file.temp_dir_index = internal global i64 0, align 8, !dbg !791
@create_temp_file.slashbase = internal constant [12 x i8] c"/sortXXXXXX\00", align 1, !dbg !787
@temptail = internal global %struct.tempnode** @temphead, align 8, !dbg !785, !ctir !570
@.str.178 = private unnamed_addr constant [35 x i8] c"cannot create temporary file in %s\00", align 1
@merge_buffer_size = internal global i64 262144, align 8, !dbg !777, !ctir !52
@.str.159 = private unnamed_addr constant [12 x i8] c"read failed\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c"stat failed\00", align 1
@sort_buffer_size.size_bound = internal global i64 0, align 8, !dbg !793
@.str.142 = private unnamed_addr constant [12 x i8] c"open failed\00", align 1
@.str.175 = private unnamed_addr constant [27 x i8] c"warning: cannot remove: %s\00", align 1
@.str.143 = private unnamed_addr constant [21 x i8] c"%s: error truncating\00", align 1
@.str.144 = private unnamed_addr constant [41 x i8] c"!\22unexpected mode passed to stream_open\22\00", align 1
@__PRETTY_FUNCTION__.stream_open = private unnamed_addr constant [46 x i8] c"FILE *stream_open(const char *, const char *)\00", align 1
@get_outstatus.outstat_errno = internal global i32 0, align 4, !dbg !768
@get_outstatus.outstat = internal global %struct.stat zeroinitializer, align 8, !dbg !771
@.str.168 = private unnamed_addr constant [34 x i8] c"couldn't create process for %s -d\00", align 1
@.str.169 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.170 = private unnamed_addr constant [44 x i8] c"couldn't execute compress program (with -d)\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"cannot read\00", align 1
@.str.157 = private unnamed_addr constant [22 x i8] c"%s: %s:%s: disorder: \00", align 1
@.str.158 = private unnamed_addr constant [15 x i8] c"standard error\00", align 1
@.str.146 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"-k \00", align 1
@.str.148 = private unnamed_addr constant [3 x i8] c" -\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.150 = private unnamed_addr constant [45 x i8] c"obsolescent key %s used; consider %s instead\00", align 1
@.str.151 = private unnamed_addr constant [43 x i8] c"key %lu has zero width and will be ignored\00", align 1
@.str.152 = private unnamed_addr constant [72 x i8] c"leading blanks are significant in key %lu; consider also specifying 'b'\00", align 1
@.str.153 = private unnamed_addr constant [45 x i8] c"key %lu is numeric and spans multiple fields\00", align 1
@.str.154 = private unnamed_addr constant [24 x i8] c"option '-%s' is ignored\00", align 1
@.str.155 = private unnamed_addr constant [26 x i8] c"options '-%s' are ignored\00", align 1
@.str.156 = private unnamed_addr constant [51 x i8] c"option '-r' only applies to last-resort comparison\00", align 1
@nondictionary = internal global [256 x i8] zeroinitializer, align 16, !dbg !740, !ctir !318
@nonprinting = internal global [256 x i8] zeroinitializer, align 16, !dbg !738, !ctir !318
@.str.145 = private unnamed_addr constant [14 x i8] c"fflush failed\00", align 1
@.str.141 = private unnamed_addr constant [35 x i8] c"number in parallel must be nonzero\00", align 1
@temp_dir_alloc = internal global i64 0, align 8, !dbg !762, !ctir !52
@.str.140 = private unnamed_addr constant [13 x i8] c"EgGkKmMPtTYZ\00", align 1
@.str.135 = private unnamed_addr constant [25 x i8] c"invalid --%s argument %s\00", align 1
@.str.136 = private unnamed_addr constant [28 x i8] c"minimum --%s argument is %s\00", align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.138 = private unnamed_addr constant [27 x i8] c"--%s argument %s too large\00", align 1
@.str.139 = private unnamed_addr constant [48 x i8] c"maximum --%s argument with current rlimit is %s\00", align 1
@.str.134 = private unnamed_addr constant [31 x i8] c"options '-%s' are incompatible\00", align 1
@.str.131 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.133 = private unnamed_addr constant [15 x i8] c"diagnose-first\00", align 1
@.str.126 = private unnamed_addr constant [16 x i8] c"general-numeric\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"human-numeric\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"numeric\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.125 = private unnamed_addr constant [35 x i8] c"%s: invalid field specification %s\00", align 1
@.str.124 = private unnamed_addr constant [33 x i8] c"%s: invalid count at start of %s\00", align 1
@.str.95 = private unnamed_addr constant [22 x i8] c"ignore-leading-blanks\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"compress-program\00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"dictionary-order\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"ignore-case\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"files0-from\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"general-numeric-sort\00", align 1
@.str.103 = private unnamed_addr constant [19 x i8] c"ignore-nonprinting\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"merge\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"month-sort\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c"numeric-sort\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"human-numeric-sort\00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"version-sort\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"random-sort\00", align 1
@.str.111 = private unnamed_addr constant [14 x i8] c"random-source\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"stable\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"batch-size\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"buffer-size\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"field-separator\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"temporary-directory\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.120 = private unnamed_addr constant [16 x i8] c"zero-terminated\00", align 1
@.str.121 = private unnamed_addr constant [9 x i8] c"parallel\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i32 0, i32 0), align 8, !dbg !798, !ctir !87
@.str.64 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !804, !ctir !266
@.str.160 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.161 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.162 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.163 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.164 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@file_name = internal global i8* null, align 8, !dbg !861, !ctir !87
@ignore_EPIPE = internal global i8 0, align 1, !dbg !907, !ctir !102
@.str.182 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.183 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.184 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@fillbuf.189 = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16, !dbg !910, !ctir !934
@.str.190 = private unnamed_addr constant [4 x i8] c"md5\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !996, !ctir !314
@.str.199 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.200 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.203 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.204 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.205 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.206 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.207 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.208 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !1003, !ctir !1030
@.str.231 = private unnamed_addr constant [16 x i8] c"OMP_NUM_THREADS\00", align 1
@.str.1.232 = private unnamed_addr constant [17 x i8] c"OMP_THREAD_LIMIT\00", align 1
@rpl_pipe2.have_pipe2_really = internal global i32 0, align 4, !dbg !1146
@.str.241 = private unnamed_addr constant [16 x i8] c"_POSIX2_VERSION\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !1156, !ctir !87
@.str.246 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.248 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !7
@program_invocation_name = external dso_local global i8*, align 8, !ctir !7
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.250, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.251, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.252, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.253, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.254, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.255, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.256, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.257, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.258, i32 0, i32 0), i8* null], align 16, !dbg !1201, !ctir !1221
@.str.249 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.250 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.251 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.252 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.253 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.254 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.255 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.256 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.257 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.258 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1322, !ctir !1222
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1324, !ctir !1227
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1326, !ctir !1227
@.str.10.259 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.260 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.261 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.262 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.263 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.264 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.265 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.266 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.267 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1330, !ctir !1257
@nslots = internal global i32 1, align 4, !dbg !1332, !ctir !5
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1328, !ctir !323
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1334, !ctir !1258
@.str.282 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.283 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.284 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.285 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@.str.305 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.306 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.307 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.308 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.309 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.310 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.311 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.312 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.313 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.314 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.315 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.316 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.317 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.318 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.319 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.320 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.323 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.324 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.325 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.326 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.327 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.328 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.329 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1336, !ctir !1341
@.str.1.348 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.349 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.350 = private unnamed_addr constant [25 x i8] c"string comparison failed\00", align 1
@.str.1.351 = private unnamed_addr constant [43 x i8] c"Set LC_ALL='C' to work around the problem.\00", align 1
@.str.2.352 = private unnamed_addr constant [37 x i8] c"The strings compared were %s and %s.\00", align 1
@.str.359 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.360 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.363 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1.364 = private unnamed_addr constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str.2.365 = private unnamed_addr constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 1
@.str.3.366 = private unnamed_addr constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str.369 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.370 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoumax = private unnamed_addr constant [79 x i8] c"strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1344
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !1364, !ctir !166
@.str.1.389 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.390 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.421 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.422 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2341 !ctir !83 {
entry:
  %status.addr = alloca i32, align 4, !ctir !5
  store i32 %status, i32* %status.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2346, metadata !DIExpression()), !dbg !2347
  %0 = load i32, i32* %status.addr, align 4, !dbg !2348, !tbaa !2342
  %cmp = icmp ne i32 %0, 0, !dbg !2350
  br i1 %cmp, label %if.then, label %if.else, !dbg !2351

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2352

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2353, !tbaa !2355
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #12, !dbg !2353
  %2 = load i8*, i8** @program_name, align 8, !dbg !2353, !tbaa !2355
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2353
  br label %do.end, !dbg !2353

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2353

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !2357
  %3 = load i8*, i8** @program_name, align 8, !dbg !2359, !tbaa !2355
  %4 = load i8*, i8** @program_name, align 8, !dbg !2360, !tbaa !2355
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4), !dbg !2361
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !2362
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2362, !tbaa !2355
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %5), !dbg !2362
  call void @emit_stdin_note(), !dbg !2363
  call void @emit_mandatory_arg_note(), !dbg !2364
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !2365
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2365, !tbaa !2355
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %6), !dbg !2365
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !2366
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2366, !tbaa !2355
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %7), !dbg !2366
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([211 x i8], [211 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !2367
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2367, !tbaa !2355
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %8), !dbg !2367
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !2368
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2368, !tbaa !2355
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %9), !dbg !2368
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([274 x i8], [274 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !2369
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2369, !tbaa !2355
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %10), !dbg !2369
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([278 x i8], [278 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !2370
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2370, !tbaa !2355
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %11), !dbg !2370
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !2371
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2371, !tbaa !2355
  %call19 = call i32 @fputs_unlocked(i8* %call18, %struct._IO_FILE* %12), !dbg !2371
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !2372
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2372, !tbaa !2355
  %call21 = call i32 @fputs_unlocked(i8* %call20, %struct._IO_FILE* %13), !dbg !2372
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([277 x i8], [277 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !2373
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2373, !tbaa !2355
  %call23 = call i32 @fputs_unlocked(i8* %call22, %struct._IO_FILE* %14), !dbg !2373
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([348 x i8], [348 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !2374
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2374, !tbaa !2355
  %call25 = call i32 @fputs_unlocked(i8* %call24, %struct._IO_FILE* %15), !dbg !2374
  %call26 = call i8* @gettext(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !2375
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2375, !tbaa !2355
  %call27 = call i32 @fputs_unlocked(i8* %call26, %struct._IO_FILE* %16), !dbg !2375
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([216 x i8], [216 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !2376
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2376, !tbaa !2355
  %call29 = call i32 @fputs_unlocked(i8* %call28, %struct._IO_FILE* %17), !dbg !2376
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([453 x i8], [453 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !2377
  %call31 = call i32 (i8*, ...) @printf(i8* %call30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)), !dbg !2378
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !2379
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2379, !tbaa !2355
  %call33 = call i32 @fputs_unlocked(i8* %call32, %struct._IO_FILE* %18), !dbg !2379
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !2380
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2380, !tbaa !2355
  %call35 = call i32 @fputs_unlocked(i8* %call34, %struct._IO_FILE* %19), !dbg !2380
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !2381
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2381, !tbaa !2355
  %call37 = call i32 @fputs_unlocked(i8* %call36, %struct._IO_FILE* %20), !dbg !2381
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([604 x i8], [604 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !2382
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2382, !tbaa !2355
  %call39 = call i32 @fputs_unlocked(i8* %call38, %struct._IO_FILE* %21), !dbg !2382
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([229 x i8], [229 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !2383
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2383, !tbaa !2355
  %call41 = call i32 @fputs_unlocked(i8* %call40, %struct._IO_FILE* %22), !dbg !2383
  call void @emit_ancillary_info(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)), !dbg !2384
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %23 = load i32, i32* %status.addr, align 4, !dbg !2385, !tbaa !2342
  call void @exit(i32 %23) #13, !dbg !2386
  unreachable, !dbg !2386
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_stdin_note() #4 !dbg !2387 !ctir !167 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !2388
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2388, !tbaa !2355
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2388
  ret void, !dbg !2389
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2390 !ctir !167 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !2391
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2391, !tbaa !2355
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2391
  ret void, !dbg !2392
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !308 !ctir !302 {
entry:
  %program.addr = alloca i8*, align 8, !ctir !87
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !304
  %node = alloca i8*, align 8, !ctir !87
  %map_prog = alloca %struct.infomap*, align 8, !ctir !313
  %lc_messages = alloca i8*, align 8, !ctir !87
  store i8* %program, i8** %program.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2393, metadata !DIExpression()), !dbg !2394
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2395, metadata !DIExpression()), !dbg !2396
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2396
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2397, metadata !DIExpression()), !dbg !2398
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2399, !tbaa !2355
  store i8* %1, i8** %node, align 8, !dbg !2398, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2400, metadata !DIExpression()), !dbg !2401
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2402
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2401, !tbaa !2355
  br label %while.cond, !dbg !2403

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2404, !tbaa !2355
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2405, !ctir !305
  %3 = load i8*, i8** %program1, align 8, !dbg !2405, !tbaa !2406, !ctir !87
  %tobool = icmp ne i8* %3, null, !dbg !2404
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2408

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2409, !tbaa !2355
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2409, !tbaa !2355
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2409, !ctir !305
  %6 = load i8*, i8** %program2, align 8, !dbg !2409, !tbaa !2406, !ctir !87
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2409
  %cmp = icmp eq i32 %call, 0, !dbg !2409
  %lnot = xor i1 %cmp, true, !dbg !2410
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2411
  br i1 %7, label %while.body, label %while.end, !dbg !2403

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2412, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2412
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2412, !tbaa !2355
  br label %while.cond, !dbg !2403, !llvm.loop !2413

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2414, !tbaa !2355
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2416, !ctir !305
  %10 = load i8*, i8** %node3, align 8, !dbg !2416, !tbaa !2417, !ctir !87
  %tobool4 = icmp ne i8* %10, null, !dbg !2414
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2418

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2419, !tbaa !2355
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2420, !ctir !305
  %12 = load i8*, i8** %node5, align 8, !dbg !2420, !tbaa !2417, !ctir !87
  store i8* %12, i8** %node, align 8, !dbg !2421, !tbaa !2355
  br label %if.end, !dbg !2422

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !2423
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i64 0, i64 0)), !dbg !2424
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2425, metadata !DIExpression()), !dbg !2426
  %call8 = call i8* @setlocale(i32 5, i8* null) #12, !dbg !2427
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2426, !tbaa !2355
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2428, !tbaa !2355
  %tobool9 = icmp ne i8* %13, null, !dbg !2428
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2430

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2431, !tbaa !2355
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i64 0, i64 0), i64 3) #14, !dbg !2431
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2431
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2432

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.79, i64 0, i64 0)) #12, !dbg !2433
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2433, !tbaa !2355
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2433
  br label %if.end15, !dbg !2435

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i64 0, i64 0)) #12, !dbg !2436
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2437, !tbaa !2355
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i64 0, i64 0), i8* %16), !dbg !2438
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !2439
  %17 = load i8*, i8** %node, align 8, !dbg !2440, !tbaa !2355
  %18 = load i8*, i8** %node, align 8, !dbg !2441, !tbaa !2355
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2442, !tbaa !2355
  %cmp19 = icmp eq i8* %18, %19, !dbg !2443
  %20 = zext i1 %cmp19 to i64, !dbg !2441
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), !dbg !2441
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2444
  ret void, !dbg !2445
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !705 !ctir !89 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %argc.addr = alloca i32, align 4, !ctir !5
  %argv.addr = alloca i8**, align 8, !ctir !91
  %key = alloca %struct.keyfield*, align 8, !ctir !92
  %key_buf = alloca %struct.keyfield, align 8, !ctir !93
  %gkey = alloca %struct.keyfield, align 8, !ctir !93
  %gkey_only = alloca i8, align 1, !ctir !102
  %s = alloca i8*, align 8, !ctir !87
  %c = alloca i32, align 4, !ctir !5
  %checkonly = alloca i8, align 1, !ctir !8
  %mergeonly = alloca i8, align 1, !ctir !102
  %random_source = alloca i8*, align 8, !ctir !7
  %need_random = alloca i8, align 1, !ctir !102
  %nthreads = alloca i64, align 8, !ctir !52
  %nfiles = alloca i64, align 8, !ctir !52
  %posixly_correct = alloca i8, align 1, !ctir !102
  %posix_ver = alloca i32, align 4, !ctir !5
  %traditional_usage = alloca i8, align 1, !ctir !102
  %files = alloca i8**, align 8, !ctir !91
  %files_from = alloca i8*, align 8, !ctir !7
  %tok = alloca %struct.Tokens, align 8, !ctir !2446
  %outfile = alloca i8*, align 8, !ctir !87
  %locale_ok = alloca i8, align 1, !ctir !102
  %locale = alloca %struct.lconv*, align 8, !ctir !115
  %i = alloca i64, align 8, !ctir !52
  %act = alloca %struct.sigaction, align 8, !ctir !160
  %oi = alloca i32, align 4, !ctir !5
  %minus_pos_usage = alloca i8, align 1, !ctir !102
  %optarg1 = alloca i8*, align 8, !ctir !87
  %str = alloca [2 x i8], align 1, !ctir !268
  %newtab = alloca i8, align 1, !ctir !8
  %p = alloca i8*, align 8, !ctir !87
  %stream = alloca %struct._IO_FILE*, align 8, !ctir !277
  %i412 = alloca i64, align 8, !ctir !52
  %file_number = alloca i64, align 8, !ctir !54
  %tmp_dir = alloca i8*, align 8, !ctir !87
  %sortfiles = alloca %struct.sortfile*, align 8, !ctir !284
  %i600 = alloca i64, align 8, !ctir !52
  %np = alloca i64, align 8, !ctir !54
  %nthreads_max = alloca i64, align 8, !ctir !52
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2487, metadata !DIExpression()), !dbg !2488
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2489, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !2491, metadata !DIExpression()), !dbg !2492
  call void @llvm.dbg.declare(metadata %struct.keyfield* %key_buf, metadata !2493, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.declare(metadata %struct.keyfield* %gkey, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata i8* %gkey_only, metadata !2497, metadata !DIExpression()), !dbg !2498
  store i8 0, i8* %gkey_only, align 1, !dbg !2498, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8** %s, metadata !2501, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2503, metadata !DIExpression()), !dbg !2504
  store i32 0, i32* %c, align 4, !dbg !2504, !tbaa !2342
  call void @llvm.dbg.declare(metadata i8* %checkonly, metadata !2505, metadata !DIExpression()), !dbg !2506
  store i8 0, i8* %checkonly, align 1, !dbg !2506, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %mergeonly, metadata !2508, metadata !DIExpression()), !dbg !2509
  store i8 0, i8* %mergeonly, align 1, !dbg !2509, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8** %random_source, metadata !2510, metadata !DIExpression()), !dbg !2511
  store i8* null, i8** %random_source, align 8, !dbg !2511, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %need_random, metadata !2512, metadata !DIExpression()), !dbg !2513
  store i8 0, i8* %need_random, align 1, !dbg !2513, !tbaa !2499
  call void @llvm.dbg.declare(metadata i64* %nthreads, metadata !2514, metadata !DIExpression()), !dbg !2515
  store i64 0, i64* %nthreads, align 8, !dbg !2515, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles, metadata !2518, metadata !DIExpression()), !dbg !2519
  store i64 0, i64* %nfiles, align 8, !dbg !2519, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8* %posixly_correct, metadata !2520, metadata !DIExpression()), !dbg !2521
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !2522
  %cmp = icmp ne i8* %call, null, !dbg !2523
  %frombool = zext i1 %cmp to i8, !dbg !2521
  store i8 %frombool, i8* %posixly_correct, align 1, !dbg !2521, !tbaa !2499
  call void @llvm.dbg.declare(metadata i32* %posix_ver, metadata !2524, metadata !DIExpression()), !dbg !2525
  %call1 = call i32 @posix2_version(), !dbg !2526
  store i32 %call1, i32* %posix_ver, align 4, !dbg !2525, !tbaa !2342
  call void @llvm.dbg.declare(metadata i8* %traditional_usage, metadata !2527, metadata !DIExpression()), !dbg !2528
  %0 = load i32, i32* %posix_ver, align 4, !dbg !2529, !tbaa !2342
  %cmp2 = icmp sle i32 200112, %0, !dbg !2530
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !2531

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %posix_ver, align 4, !dbg !2532, !tbaa !2342
  %cmp3 = icmp slt i32 %1, 200809, !dbg !2533
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !2534
  %lnot = xor i1 %2, true, !dbg !2535
  %frombool4 = zext i1 %lnot to i8, !dbg !2528
  store i8 %frombool4, i8* %traditional_usage, align 1, !dbg !2528, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8*** %files, metadata !2536, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.declare(metadata i8** %files_from, metadata !2538, metadata !DIExpression()), !dbg !2539
  store i8* null, i8** %files_from, align 8, !dbg !2539, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.Tokens* %tok, metadata !2540, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.declare(metadata i8** %outfile, metadata !2542, metadata !DIExpression()), !dbg !2543
  store i8* null, i8** %outfile, align 8, !dbg !2543, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %locale_ok, metadata !2544, metadata !DIExpression()), !dbg !2545
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2546, !tbaa !2355
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !2546, !ctir !91
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !2546, !tbaa !2355
  call void @set_program_name(i8* %4), !dbg !2547
  %call5 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !2548
  %tobool = icmp ne i8* %call5, null, !dbg !2549
  %lnot6 = xor i1 %tobool, true, !dbg !2549
  %lnot7 = xor i1 %lnot6, true, !dbg !2550
  %frombool8 = zext i1 %lnot7 to i8, !dbg !2551
  store i8 %frombool8, i8* %locale_ok, align 1, !dbg !2551, !tbaa !2499
  %call9 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !2552
  %call10 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !2553
  call void @initialize_exit_failure(i32 2), !dbg !2554
  %call11 = call zeroext i1 @hard_locale(i32 3), !dbg !2555
  %frombool12 = zext i1 %call11 to i8, !dbg !2556
  store i8 %frombool12, i8* @hard_LC_COLLATE, align 1, !dbg !2556, !tbaa !2499
  %call13 = call zeroext i1 @hard_locale(i32 2), !dbg !2557
  %frombool14 = zext i1 %call13 to i8, !dbg !2558
  store i8 %frombool14, i8* @hard_LC_TIME, align 1, !dbg !2558, !tbaa !2499
  call void @llvm.dbg.declare(metadata %struct.lconv** %locale, metadata !2559, metadata !DIExpression()), !dbg !2561
  %call15 = call %struct.lconv* @localeconv() #12, !dbg !2562
  store %struct.lconv* %call15, %struct.lconv** %locale, align 8, !dbg !2561, !tbaa !2355
  %5 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2563, !tbaa !2355
  %decimal_point = getelementptr inbounds %struct.lconv, %struct.lconv* %5, i32 0, i32 0, !dbg !2564, !ctir !116
  %6 = load i8*, i8** %decimal_point, align 8, !dbg !2564, !tbaa !2565, !ctir !7
  %arrayidx16 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !2563, !ctir !7
  %7 = load i8, i8* %arrayidx16, align 1, !dbg !2563, !tbaa !2507
  %call17 = call zeroext i8 @to_uchar(i8 signext %7), !dbg !2567
  %conv = zext i8 %call17 to i32, !dbg !2567
  store i32 %conv, i32* @decimal_point, align 4, !dbg !2568, !tbaa !2342
  %8 = load i32, i32* @decimal_point, align 4, !dbg !2569, !tbaa !2342
  %tobool18 = icmp ne i32 %8, 0, !dbg !2569
  br i1 %tobool18, label %lor.lhs.false, label %if.then, !dbg !2571

lor.lhs.false:                                    ; preds = %land.end
  %9 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2572, !tbaa !2355
  %decimal_point19 = getelementptr inbounds %struct.lconv, %struct.lconv* %9, i32 0, i32 0, !dbg !2573, !ctir !116
  %10 = load i8*, i8** %decimal_point19, align 8, !dbg !2573, !tbaa !2565, !ctir !7
  %arrayidx20 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !2572, !ctir !7
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !2572, !tbaa !2507
  %conv21 = sext i8 %11 to i32, !dbg !2572
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !2572
  br i1 %tobool22, label %if.then, label %if.end, !dbg !2574

if.then:                                          ; preds = %lor.lhs.false, %land.end
  store i32 46, i32* @decimal_point, align 4, !dbg !2575, !tbaa !2342
  br label %if.end, !dbg !2576

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %12 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2577, !tbaa !2355
  %thousands_sep = getelementptr inbounds %struct.lconv, %struct.lconv* %12, i32 0, i32 1, !dbg !2578, !ctir !116
  %13 = load i8*, i8** %thousands_sep, align 8, !dbg !2578, !tbaa !2579, !ctir !7
  %14 = load i8, i8* %13, align 1, !dbg !2580, !tbaa !2507, !ctir !8
  %call23 = call zeroext i8 @to_uchar(i8 signext %14), !dbg !2581
  %conv24 = zext i8 %call23 to i32, !dbg !2581
  store i32 %conv24, i32* @thousands_sep, align 4, !dbg !2582, !tbaa !2342
  %15 = load i32, i32* @thousands_sep, align 4, !dbg !2583, !tbaa !2342
  %tobool25 = icmp ne i32 %15, 0, !dbg !2583
  br i1 %tobool25, label %lor.lhs.false26, label %if.then31, !dbg !2585

lor.lhs.false26:                                  ; preds = %if.end
  %16 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2586, !tbaa !2355
  %thousands_sep27 = getelementptr inbounds %struct.lconv, %struct.lconv* %16, i32 0, i32 1, !dbg !2587, !ctir !116
  %17 = load i8*, i8** %thousands_sep27, align 8, !dbg !2587, !tbaa !2579, !ctir !7
  %arrayidx28 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !2586, !ctir !7
  %18 = load i8, i8* %arrayidx28, align 1, !dbg !2586, !tbaa !2507
  %conv29 = sext i8 %18 to i32, !dbg !2586
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !2586
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !2588

if.then31:                                        ; preds = %lor.lhs.false26, %if.end
  store i32 -1, i32* @thousands_sep, align 4, !dbg !2589, !tbaa !2342
  br label %if.end32, !dbg !2590

if.end32:                                         ; preds = %if.then31, %lor.lhs.false26
  store i8 0, i8* @have_read_stdin, align 1, !dbg !2591, !tbaa !2499
  call void @inittables(), !dbg !2592
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2593, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !2596, metadata !DIExpression()), !dbg !2597
  %call33 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #12, !dbg !2598
  store i64 0, i64* %i, align 8, !dbg !2599, !tbaa !2516
  br label %for.cond, !dbg !2601

for.cond:                                         ; preds = %for.inc, %if.end32
  %19 = load i64, i64* %i, align 8, !dbg !2602, !tbaa !2516
  %cmp34 = icmp ult i64 %19, 11, !dbg !2604
  br i1 %cmp34, label %for.body, label %for.end, !dbg !2605

for.body:                                         ; preds = %for.cond
  %20 = load i64, i64* %i, align 8, !dbg !2606, !tbaa !2516
  %arrayidx36 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %20, !dbg !2608, !ctir !154
  %21 = load i32, i32* %arrayidx36, align 4, !dbg !2608, !tbaa !2342
  %call37 = call i32 @sigaction(i32 %21, %struct.sigaction* null, %struct.sigaction* %act) #12, !dbg !2609
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !2610, !ctir !160
  %sa_handler = bitcast %union.anon.2* %__sigaction_handler to void (i32)**, !dbg !2610
  %22 = load void (i32)*, void (i32)** %sa_handler, align 8, !dbg !2610, !tbaa !2507, !ctir !158
  %cmp38 = icmp ne void (i32)* %22, inttoptr (i64 1 to void (i32)*), !dbg !2612
  br i1 %cmp38, label %if.then40, label %if.end43, !dbg !2613

if.then40:                                        ; preds = %for.body
  %23 = load i64, i64* %i, align 8, !dbg !2614, !tbaa !2516
  %arrayidx41 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %23, !dbg !2615, !ctir !154
  %24 = load i32, i32* %arrayidx41, align 4, !dbg !2615, !tbaa !2342
  %call42 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %24) #12, !dbg !2616
  br label %if.end43, !dbg !2616

if.end43:                                         ; preds = %if.then40, %for.body
  br label %for.inc, !dbg !2617

for.inc:                                          ; preds = %if.end43
  %25 = load i64, i64* %i, align 8, !dbg !2618, !tbaa !2516
  %inc = add i64 %25, 1, !dbg !2618
  store i64 %inc, i64* %i, align 8, !dbg !2618, !tbaa !2516
  br label %for.cond, !dbg !2619, !llvm.loop !2620

for.end:                                          ; preds = %for.cond
  %__sigaction_handler44 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !2622, !ctir !160
  %sa_handler45 = bitcast %union.anon.2* %__sigaction_handler44 to void (i32)**, !dbg !2622
  store void (i32)* @sighandler, void (i32)** %sa_handler45, align 8, !dbg !2623, !tbaa !2507, !ctir !158
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 1, !dbg !2624, !ctir !160
  %26 = bitcast %struct.__sigset_t* %sa_mask to i8*, !dbg !2625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i1 false), !dbg !2625, !tbaa.struct !2626
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 2, !dbg !2627, !ctir !160
  store i32 0, i32* %sa_flags, align 8, !dbg !2628, !tbaa !2629, !ctir !5
  store i64 0, i64* %i, align 8, !dbg !2632, !tbaa !2516
  br label %for.cond46, !dbg !2634

for.cond46:                                       ; preds = %for.inc57, %for.end
  %27 = load i64, i64* %i, align 8, !dbg !2635, !tbaa !2516
  %cmp47 = icmp ult i64 %27, 11, !dbg !2637
  br i1 %cmp47, label %for.body49, label %for.end59, !dbg !2638

for.body49:                                       ; preds = %for.cond46
  %28 = load i64, i64* %i, align 8, !dbg !2639, !tbaa !2516
  %arrayidx50 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %28, !dbg !2641, !ctir !154
  %29 = load i32, i32* %arrayidx50, align 4, !dbg !2641, !tbaa !2342
  %call51 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %29) #12, !dbg !2642
  %tobool52 = icmp ne i32 %call51, 0, !dbg !2642
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !2643

if.then53:                                        ; preds = %for.body49
  %30 = load i64, i64* %i, align 8, !dbg !2644, !tbaa !2516
  %arrayidx54 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %30, !dbg !2645, !ctir !154
  %31 = load i32, i32* %arrayidx54, align 4, !dbg !2645, !tbaa !2342
  %call55 = call i32 @sigaction(i32 %31, %struct.sigaction* %act, %struct.sigaction* null) #12, !dbg !2646
  br label %if.end56, !dbg !2646

if.end56:                                         ; preds = %if.then53, %for.body49
  br label %for.inc57, !dbg !2647

for.inc57:                                        ; preds = %if.end56
  %32 = load i64, i64* %i, align 8, !dbg !2648, !tbaa !2516
  %inc58 = add i64 %32, 1, !dbg !2648
  store i64 %inc58, i64* %i, align 8, !dbg !2648, !tbaa !2516
  br label %for.cond46, !dbg !2649, !llvm.loop !2650

for.end59:                                        ; preds = %for.cond46
  %call60 = call void (i32)* @signal(i32 17, void (i32)* null) #12, !dbg !2652
  %call61 = call i32 @atexit(void ()* @exit_cleanup) #12, !dbg !2653
  %call62 = call %struct.keyfield* @key_init(%struct.keyfield* %gkey), !dbg !2654
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 0, !dbg !2655, !ctir !93
  store i64 -1, i64* %sword, align 8, !dbg !2656, !tbaa !2657, !ctir !52
  %33 = load i32, i32* %argc.addr, align 4, !dbg !2659, !tbaa !2342
  %conv63 = sext i32 %33 to i64, !dbg !2659
  %call64 = call noalias i8* @xnmalloc(i64 %conv63, i64 8), !dbg !2660
  %34 = bitcast i8* %call64 to i8**, !dbg !2660
  store i8** %34, i8*** %files, align 8, !dbg !2661, !tbaa !2355
  br label %while.body, !dbg !2662

while.body:                                       ; preds = %for.end59, %if.end391
  call void @llvm.dbg.declare(metadata i32* %oi, metadata !2663, metadata !DIExpression()), !dbg !2665
  store i32 -1, i32* %oi, align 4, !dbg !2665, !tbaa !2342
  %35 = load i32, i32* %c, align 4, !dbg !2666, !tbaa !2342
  %cmp65 = icmp eq i32 %35, -1, !dbg !2668
  br i1 %cmp65, label %if.then106, label %lor.lhs.false67, !dbg !2669

lor.lhs.false67:                                  ; preds = %while.body
  %36 = load i8, i8* %posixly_correct, align 1, !dbg !2670, !tbaa !2499
  %tobool68 = trunc i8 %36 to i1, !dbg !2670
  br i1 %tobool68, label %land.lhs.true, label %lor.lhs.false102, !dbg !2671

land.lhs.true:                                    ; preds = %lor.lhs.false67
  %37 = load i64, i64* %nfiles, align 8, !dbg !2672, !tbaa !2516
  %cmp70 = icmp ne i64 %37, 0, !dbg !2673
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false102, !dbg !2674

land.lhs.true72:                                  ; preds = %land.lhs.true
  %38 = load i8, i8* %traditional_usage, align 1, !dbg !2675, !tbaa !2499
  %tobool73 = trunc i8 %38 to i1, !dbg !2675
  br i1 %tobool73, label %land.lhs.true75, label %if.then106, !dbg !2676

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %39 = load i8, i8* %checkonly, align 1, !dbg !2677, !tbaa !2507
  %tobool76 = icmp ne i8 %39, 0, !dbg !2677
  br i1 %tobool76, label %if.then106, label %land.lhs.true77, !dbg !2678

land.lhs.true77:                                  ; preds = %land.lhs.true75
  %40 = load i32, i32* @optind, align 4, !dbg !2679, !tbaa !2342
  %41 = load i32, i32* %argc.addr, align 4, !dbg !2680, !tbaa !2342
  %cmp78 = icmp ne i32 %40, %41, !dbg !2681
  br i1 %cmp78, label %land.lhs.true80, label %if.then106, !dbg !2682

land.lhs.true80:                                  ; preds = %land.lhs.true77
  %42 = load i8**, i8*** %argv.addr, align 8, !dbg !2683, !tbaa !2355
  %43 = load i32, i32* @optind, align 4, !dbg !2684, !tbaa !2342
  %idxprom = sext i32 %43 to i64, !dbg !2683
  %arrayidx81 = getelementptr inbounds i8*, i8** %42, i64 %idxprom, !dbg !2683, !ctir !91
  %44 = load i8*, i8** %arrayidx81, align 8, !dbg !2683, !tbaa !2355
  %arrayidx82 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !2683, !ctir !7
  %45 = load i8, i8* %arrayidx82, align 1, !dbg !2683, !tbaa !2507
  %conv83 = sext i8 %45 to i32, !dbg !2683
  %cmp84 = icmp eq i32 %conv83, 45, !dbg !2685
  br i1 %cmp84, label %land.lhs.true86, label %if.then106, !dbg !2686

land.lhs.true86:                                  ; preds = %land.lhs.true80
  %46 = load i8**, i8*** %argv.addr, align 8, !dbg !2687, !tbaa !2355
  %47 = load i32, i32* @optind, align 4, !dbg !2688, !tbaa !2342
  %idxprom87 = sext i32 %47 to i64, !dbg !2687
  %arrayidx88 = getelementptr inbounds i8*, i8** %46, i64 %idxprom87, !dbg !2687, !ctir !91
  %48 = load i8*, i8** %arrayidx88, align 8, !dbg !2687, !tbaa !2355
  %arrayidx89 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !2687, !ctir !7
  %49 = load i8, i8* %arrayidx89, align 1, !dbg !2687, !tbaa !2507
  %conv90 = sext i8 %49 to i32, !dbg !2687
  %cmp91 = icmp eq i32 %conv90, 111, !dbg !2689
  br i1 %cmp91, label %land.lhs.true93, label %if.then106, !dbg !2690

land.lhs.true93:                                  ; preds = %land.lhs.true86
  %50 = load i8**, i8*** %argv.addr, align 8, !dbg !2691, !tbaa !2355
  %51 = load i32, i32* @optind, align 4, !dbg !2692, !tbaa !2342
  %idxprom94 = sext i32 %51 to i64, !dbg !2691
  %arrayidx95 = getelementptr inbounds i8*, i8** %50, i64 %idxprom94, !dbg !2691, !ctir !91
  %52 = load i8*, i8** %arrayidx95, align 8, !dbg !2691, !tbaa !2355
  %arrayidx96 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !2691, !ctir !7
  %53 = load i8, i8* %arrayidx96, align 1, !dbg !2691, !tbaa !2507
  %conv97 = sext i8 %53 to i32, !dbg !2691
  %tobool98 = icmp ne i32 %conv97, 0, !dbg !2691
  br i1 %tobool98, label %lor.lhs.false102, label %lor.lhs.false99, !dbg !2693

lor.lhs.false99:                                  ; preds = %land.lhs.true93
  %54 = load i32, i32* @optind, align 4, !dbg !2694, !tbaa !2342
  %add = add nsw i32 %54, 1, !dbg !2695
  %55 = load i32, i32* %argc.addr, align 4, !dbg !2696, !tbaa !2342
  %cmp100 = icmp ne i32 %add, %55, !dbg !2697
  br i1 %cmp100, label %lor.lhs.false102, label %if.then106, !dbg !2698

lor.lhs.false102:                                 ; preds = %lor.lhs.false99, %land.lhs.true93, %land.lhs.true, %lor.lhs.false67
  %56 = load i32, i32* %argc.addr, align 4, !dbg !2699, !tbaa !2342
  %57 = load i8**, i8*** %argv.addr, align 8, !dbg !2700, !tbaa !2355
  %call103 = call i32 @getopt_long(i32 %56, i8** %57, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @short_options, i64 0, i64 0), %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) #12, !dbg !2701
  store i32 %call103, i32* %c, align 4, !dbg !2702, !tbaa !2342
  %cmp104 = icmp eq i32 %call103, -1, !dbg !2703
  br i1 %cmp104, label %if.then106, label %if.else, !dbg !2704

if.then106:                                       ; preds = %lor.lhs.false102, %lor.lhs.false99, %land.lhs.true86, %land.lhs.true80, %land.lhs.true77, %land.lhs.true75, %land.lhs.true72, %while.body
  %58 = load i32, i32* %argc.addr, align 4, !dbg !2705, !tbaa !2342
  %59 = load i32, i32* @optind, align 4, !dbg !2708, !tbaa !2342
  %cmp107 = icmp sle i32 %58, %59, !dbg !2709
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !2710

if.then109:                                       ; preds = %if.then106
  br label %while.end, !dbg !2711

if.end110:                                        ; preds = %if.then106
  %60 = load i8**, i8*** %argv.addr, align 8, !dbg !2712, !tbaa !2355
  %61 = load i32, i32* @optind, align 4, !dbg !2713, !tbaa !2342
  %inc111 = add nsw i32 %61, 1, !dbg !2713
  store i32 %inc111, i32* @optind, align 4, !dbg !2713, !tbaa !2342
  %idxprom112 = sext i32 %61 to i64, !dbg !2712
  %arrayidx113 = getelementptr inbounds i8*, i8** %60, i64 %idxprom112, !dbg !2712, !ctir !91
  %62 = load i8*, i8** %arrayidx113, align 8, !dbg !2712, !tbaa !2355
  %63 = load i8**, i8*** %files, align 8, !dbg !2714, !tbaa !2355
  %64 = load i64, i64* %nfiles, align 8, !dbg !2715, !tbaa !2516
  %inc114 = add i64 %64, 1, !dbg !2715
  store i64 %inc114, i64* %nfiles, align 8, !dbg !2715, !tbaa !2516
  %arrayidx115 = getelementptr inbounds i8*, i8** %63, i64 %64, !dbg !2714, !ctir !91
  store i8* %62, i8** %arrayidx115, align 8, !dbg !2716, !tbaa !2355
  br label %if.end391, !dbg !2717

if.else:                                          ; preds = %lor.lhs.false102
  %65 = load i32, i32* %c, align 4, !dbg !2718, !tbaa !2342
  switch i32 %65, label %sw.default [
    i32 1, label %sw.bb
    i32 134, label %sw.bb214
    i32 98, label %sw.bb218
    i32 100, label %sw.bb218
    i32 102, label %sw.bb218
    i32 103, label %sw.bb218
    i32 104, label %sw.bb218
    i32 105, label %sw.bb218
    i32 77, label %sw.bb218
    i32 110, label %sw.bb218
    i32 114, label %sw.bb218
    i32 82, label %sw.bb218
    i32 86, label %sw.bb218
    i32 128, label %sw.bb223
    i32 99, label %sw.bb231
    i32 67, label %sw.bb231
    i32 129, label %sw.bb241
    i32 130, label %sw.bb250
    i32 131, label %sw.bb251
    i32 107, label %sw.bb252
    i32 109, label %sw.bb311
    i32 132, label %sw.bb312
    i32 111, label %sw.bb314
    i32 133, label %sw.bb323
    i32 115, label %sw.bb332
    i32 83, label %sw.bb333
    i32 116, label %sw.bb335
    i32 84, label %sw.bb363
    i32 135, label %sw.bb364
    i32 117, label %sw.bb367
    i32 121, label %sw.bb368
    i32 122, label %sw.bb388
    i32 -130, label %sw.bb389
    i32 -131, label %sw.bb390
  ], !dbg !2719

sw.bb:                                            ; preds = %if.else
  store %struct.keyfield* null, %struct.keyfield** %key, align 8, !dbg !2720, !tbaa !2355
  %66 = load i8*, i8** @optarg, align 8, !dbg !2722, !tbaa !2355
  %arrayidx116 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !2722, !ctir !7
  %67 = load i8, i8* %arrayidx116, align 1, !dbg !2722, !tbaa !2507
  %conv117 = sext i8 %67 to i32, !dbg !2722
  %cmp118 = icmp eq i32 %conv117, 43, !dbg !2724
  br i1 %cmp118, label %if.then120, label %if.end208, !dbg !2725

if.then120:                                       ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i8* %minus_pos_usage, metadata !2726, metadata !DIExpression()), !dbg !2728
  %68 = load i32, i32* @optind, align 4, !dbg !2729, !tbaa !2342
  %69 = load i32, i32* %argc.addr, align 4, !dbg !2730, !tbaa !2342
  %cmp121 = icmp ne i32 %68, %69, !dbg !2731
  br i1 %cmp121, label %land.lhs.true123, label %land.end137, !dbg !2732

land.lhs.true123:                                 ; preds = %if.then120
  %70 = load i8**, i8*** %argv.addr, align 8, !dbg !2733, !tbaa !2355
  %71 = load i32, i32* @optind, align 4, !dbg !2734, !tbaa !2342
  %idxprom124 = sext i32 %71 to i64, !dbg !2733
  %arrayidx125 = getelementptr inbounds i8*, i8** %70, i64 %idxprom124, !dbg !2733, !ctir !91
  %72 = load i8*, i8** %arrayidx125, align 8, !dbg !2733, !tbaa !2355
  %arrayidx126 = getelementptr inbounds i8, i8* %72, i64 0, !dbg !2733, !ctir !7
  %73 = load i8, i8* %arrayidx126, align 1, !dbg !2733, !tbaa !2507
  %conv127 = sext i8 %73 to i32, !dbg !2733
  %cmp128 = icmp eq i32 %conv127, 45, !dbg !2735
  br i1 %cmp128, label %land.rhs130, label %land.end137, !dbg !2736

land.rhs130:                                      ; preds = %land.lhs.true123
  %74 = load i8**, i8*** %argv.addr, align 8, !dbg !2737, !tbaa !2355
  %75 = load i32, i32* @optind, align 4, !dbg !2737, !tbaa !2342
  %idxprom131 = sext i32 %75 to i64, !dbg !2737
  %arrayidx132 = getelementptr inbounds i8*, i8** %74, i64 %idxprom131, !dbg !2737, !ctir !91
  %76 = load i8*, i8** %arrayidx132, align 8, !dbg !2737, !tbaa !2355
  %arrayidx133 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !2737, !ctir !7
  %77 = load i8, i8* %arrayidx133, align 1, !dbg !2737, !tbaa !2507
  %conv134 = sext i8 %77 to i32, !dbg !2737
  %sub = sub i32 %conv134, 48, !dbg !2737
  %cmp135 = icmp ule i32 %sub, 9, !dbg !2737
  br label %land.end137

land.end137:                                      ; preds = %land.rhs130, %land.lhs.true123, %if.then120
  %78 = phi i1 [ false, %land.lhs.true123 ], [ false, %if.then120 ], [ %cmp135, %land.rhs130 ], !dbg !2738
  %frombool138 = zext i1 %78 to i8, !dbg !2728
  store i8 %frombool138, i8* %minus_pos_usage, align 1, !dbg !2728, !tbaa !2499
  %79 = load i8, i8* %minus_pos_usage, align 1, !dbg !2739, !tbaa !2499
  %tobool139 = trunc i8 %79 to i1, !dbg !2739
  br i1 %tobool139, label %land.rhs141, label %land.end144, !dbg !2740

land.rhs141:                                      ; preds = %land.end137
  %80 = load i8, i8* %posixly_correct, align 1, !dbg !2741, !tbaa !2499
  %tobool142 = trunc i8 %80 to i1, !dbg !2741
  %lnot143 = xor i1 %tobool142, true, !dbg !2742
  br label %land.end144

land.end144:                                      ; preds = %land.rhs141, %land.end137
  %81 = phi i1 [ false, %land.end137 ], [ %lnot143, %land.rhs141 ], !dbg !2738
  %land.ext = zext i1 %81 to i32, !dbg !2740
  %82 = load i8, i8* %traditional_usage, align 1, !dbg !2743, !tbaa !2499
  %tobool145 = trunc i8 %82 to i1, !dbg !2743
  %conv146 = zext i1 %tobool145 to i32, !dbg !2743
  %or = or i32 %conv146, %land.ext, !dbg !2743
  %tobool147 = icmp ne i32 %or, 0, !dbg !2743
  %frombool148 = zext i1 %tobool147 to i8, !dbg !2743
  store i8 %frombool148, i8* %traditional_usage, align 1, !dbg !2743, !tbaa !2499
  %83 = load i8, i8* %traditional_usage, align 1, !dbg !2744, !tbaa !2499
  %tobool149 = trunc i8 %83 to i1, !dbg !2744
  br i1 %tobool149, label %if.then150, label %if.end207, !dbg !2746

if.then150:                                       ; preds = %land.end144
  %call151 = call %struct.keyfield* @key_init(%struct.keyfield* %key_buf), !dbg !2747
  store %struct.keyfield* %call151, %struct.keyfield** %key, align 8, !dbg !2749, !tbaa !2355
  %84 = load i8*, i8** @optarg, align 8, !dbg !2750, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %84, i64 1, !dbg !2751
  %85 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2752, !tbaa !2355
  %sword152 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %85, i32 0, i32 0, !dbg !2753, !ctir !93
  %call153 = call i8* @parse_field_count(i8* %add.ptr, i64* %sword152, i8* null), !dbg !2754
  store i8* %call153, i8** %s, align 8, !dbg !2755, !tbaa !2355
  %86 = load i8*, i8** %s, align 8, !dbg !2756, !tbaa !2355
  %tobool154 = icmp ne i8* %86, null, !dbg !2756
  br i1 %tobool154, label %land.lhs.true155, label %if.end162, !dbg !2758

land.lhs.true155:                                 ; preds = %if.then150
  %87 = load i8*, i8** %s, align 8, !dbg !2759, !tbaa !2355
  %88 = load i8, i8* %87, align 1, !dbg !2760, !tbaa !2507, !ctir !88
  %conv156 = sext i8 %88 to i32, !dbg !2760
  %cmp157 = icmp eq i32 %conv156, 46, !dbg !2761
  br i1 %cmp157, label %if.then159, label %if.end162, !dbg !2762

if.then159:                                       ; preds = %land.lhs.true155
  %89 = load i8*, i8** %s, align 8, !dbg !2763, !tbaa !2355
  %add.ptr160 = getelementptr inbounds i8, i8* %89, i64 1, !dbg !2764
  %90 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2765, !tbaa !2355
  %schar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %90, i32 0, i32 1, !dbg !2766, !ctir !93
  %call161 = call i8* @parse_field_count(i8* %add.ptr160, i64* %schar, i8* null), !dbg !2767
  store i8* %call161, i8** %s, align 8, !dbg !2768, !tbaa !2355
  br label %if.end162, !dbg !2769

if.end162:                                        ; preds = %if.then159, %land.lhs.true155, %if.then150
  %91 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2770, !tbaa !2355
  %sword163 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %91, i32 0, i32 0, !dbg !2772, !ctir !93
  %92 = load i64, i64* %sword163, align 8, !dbg !2772, !tbaa !2657, !ctir !52
  %tobool164 = icmp ne i64 %92, 0, !dbg !2770
  br i1 %tobool164, label %if.end170, label %lor.lhs.false165, !dbg !2773

lor.lhs.false165:                                 ; preds = %if.end162
  %93 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2774, !tbaa !2355
  %schar166 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %93, i32 0, i32 1, !dbg !2775, !ctir !93
  %94 = load i64, i64* %schar166, align 8, !dbg !2775, !tbaa !2776, !ctir !52
  %tobool167 = icmp ne i64 %94, 0, !dbg !2774
  br i1 %tobool167, label %if.end170, label %if.then168, !dbg !2777

if.then168:                                       ; preds = %lor.lhs.false165
  %95 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2778, !tbaa !2355
  %sword169 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %95, i32 0, i32 0, !dbg !2779, !ctir !93
  store i64 -1, i64* %sword169, align 8, !dbg !2780, !tbaa !2657, !ctir !52
  br label %if.end170, !dbg !2778

if.end170:                                        ; preds = %if.then168, %lor.lhs.false165, %if.end162
  %96 = load i8*, i8** %s, align 8, !dbg !2781, !tbaa !2355
  %tobool171 = icmp ne i8* %96, null, !dbg !2781
  br i1 %tobool171, label %lor.lhs.false172, label %if.then176, !dbg !2783

lor.lhs.false172:                                 ; preds = %if.end170
  %97 = load i8*, i8** %s, align 8, !dbg !2784, !tbaa !2355
  %98 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2785, !tbaa !2355
  %call173 = call i8* @set_ordering(i8* %97, %struct.keyfield* %98, i32 0), !dbg !2786
  %99 = load i8, i8* %call173, align 1, !dbg !2787, !tbaa !2507, !ctir !8
  %conv174 = sext i8 %99 to i32, !dbg !2787
  %tobool175 = icmp ne i32 %conv174, 0, !dbg !2787
  br i1 %tobool175, label %if.then176, label %if.else177, !dbg !2788

if.then176:                                       ; preds = %lor.lhs.false172, %if.end170
  store %struct.keyfield* null, %struct.keyfield** %key, align 8, !dbg !2789, !tbaa !2355
  br label %if.end206, !dbg !2790

if.else177:                                       ; preds = %lor.lhs.false172
  %100 = load i8, i8* %minus_pos_usage, align 1, !dbg !2791, !tbaa !2499
  %tobool178 = trunc i8 %100 to i1, !dbg !2791
  br i1 %tobool178, label %if.then179, label %if.end205, !dbg !2794

if.then179:                                       ; preds = %if.else177
  call void @llvm.dbg.declare(metadata i8** %optarg1, metadata !2795, metadata !DIExpression()), !dbg !2797
  %101 = load i8**, i8*** %argv.addr, align 8, !dbg !2798, !tbaa !2355
  %102 = load i32, i32* @optind, align 4, !dbg !2799, !tbaa !2342
  %inc180 = add nsw i32 %102, 1, !dbg !2799
  store i32 %inc180, i32* @optind, align 4, !dbg !2799, !tbaa !2342
  %idxprom181 = sext i32 %102 to i64, !dbg !2798
  %arrayidx182 = getelementptr inbounds i8*, i8** %101, i64 %idxprom181, !dbg !2798, !ctir !91
  %103 = load i8*, i8** %arrayidx182, align 8, !dbg !2798, !tbaa !2355
  store i8* %103, i8** %optarg1, align 8, !dbg !2797, !tbaa !2355
  %104 = load i8*, i8** %optarg1, align 8, !dbg !2800, !tbaa !2355
  %add.ptr183 = getelementptr inbounds i8, i8* %104, i64 1, !dbg !2801
  %105 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2802, !tbaa !2355
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %105, i32 0, i32 2, !dbg !2803, !ctir !93
  %call184 = call i8* @parse_field_count(i8* %add.ptr183, i64* %eword, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0)), !dbg !2804
  store i8* %call184, i8** %s, align 8, !dbg !2805, !tbaa !2355
  %106 = load i8*, i8** %s, align 8, !dbg !2806, !tbaa !2355
  %tobool185 = icmp ne i8* %106, null, !dbg !2806
  br i1 %tobool185, label %cond.true, label %cond.false, !dbg !2806

cond.true:                                        ; preds = %if.then179
  br label %cond.end, !dbg !2806

cond.false:                                       ; preds = %if.then179
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 4365, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !2806
  unreachable, !dbg !2806

107:                                              ; No predecessors!
  br label %cond.end, !dbg !2806

cond.end:                                         ; preds = %107, %cond.true
  %108 = load i8*, i8** %s, align 8, !dbg !2807, !tbaa !2355
  %109 = load i8, i8* %108, align 1, !dbg !2809, !tbaa !2507, !ctir !88
  %conv186 = sext i8 %109 to i32, !dbg !2809
  %cmp187 = icmp eq i32 %conv186, 46, !dbg !2810
  br i1 %cmp187, label %if.then189, label %if.end192, !dbg !2811

if.then189:                                       ; preds = %cond.end
  %110 = load i8*, i8** %s, align 8, !dbg !2812, !tbaa !2355
  %add.ptr190 = getelementptr inbounds i8, i8* %110, i64 1, !dbg !2813
  %111 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2814, !tbaa !2355
  %echar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %111, i32 0, i32 3, !dbg !2815, !ctir !93
  %call191 = call i8* @parse_field_count(i8* %add.ptr190, i64* %echar, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)), !dbg !2816
  store i8* %call191, i8** %s, align 8, !dbg !2817, !tbaa !2355
  br label %if.end192, !dbg !2818

if.end192:                                        ; preds = %if.then189, %cond.end
  %112 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2819, !tbaa !2355
  %echar193 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %112, i32 0, i32 3, !dbg !2821, !ctir !93
  %113 = load i64, i64* %echar193, align 8, !dbg !2821, !tbaa !2822, !ctir !52
  %tobool194 = icmp ne i64 %113, 0, !dbg !2819
  br i1 %tobool194, label %if.end200, label %land.lhs.true195, !dbg !2823

land.lhs.true195:                                 ; preds = %if.end192
  %114 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2824, !tbaa !2355
  %eword196 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %114, i32 0, i32 2, !dbg !2825, !ctir !93
  %115 = load i64, i64* %eword196, align 8, !dbg !2825, !tbaa !2826, !ctir !52
  %tobool197 = icmp ne i64 %115, 0, !dbg !2824
  br i1 %tobool197, label %if.then198, label %if.end200, !dbg !2827

if.then198:                                       ; preds = %land.lhs.true195
  %116 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2828, !tbaa !2355
  %eword199 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %116, i32 0, i32 2, !dbg !2830, !ctir !93
  %117 = load i64, i64* %eword199, align 8, !dbg !2831, !tbaa !2826, !ctir !52
  %dec = add i64 %117, -1, !dbg !2831
  store i64 %dec, i64* %eword199, align 8, !dbg !2831, !tbaa !2826, !ctir !52
  br label %if.end200, !dbg !2832

if.end200:                                        ; preds = %if.then198, %land.lhs.true195, %if.end192
  %118 = load i8*, i8** %s, align 8, !dbg !2833, !tbaa !2355
  %119 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2835, !tbaa !2355
  %call201 = call i8* @set_ordering(i8* %118, %struct.keyfield* %119, i32 1), !dbg !2836
  %120 = load i8, i8* %call201, align 1, !dbg !2837, !tbaa !2507, !ctir !8
  %tobool202 = icmp ne i8 %120, 0, !dbg !2837
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !2838

if.then203:                                       ; preds = %if.end200
  %121 = load i8*, i8** %optarg1, align 8, !dbg !2839, !tbaa !2355
  call void @badfieldspec(i8* %121, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0)) #15, !dbg !2840
  unreachable, !dbg !2840

if.end204:                                        ; preds = %if.end200
  br label %if.end205, !dbg !2841

if.end205:                                        ; preds = %if.end204, %if.else177
  %122 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2842, !tbaa !2355
  %traditional_used = getelementptr inbounds %struct.keyfield, %struct.keyfield* %122, i32 0, i32 15, !dbg !2843, !ctir !93
  store i8 1, i8* %traditional_used, align 1, !dbg !2844, !tbaa !2845, !ctir !102
  %123 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2846, !tbaa !2355
  call void @insertkey(%struct.keyfield* %123), !dbg !2847
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then176
  br label %if.end207, !dbg !2848

if.end207:                                        ; preds = %if.end206, %land.end144
  br label %if.end208, !dbg !2849

if.end208:                                        ; preds = %if.end207, %sw.bb
  %124 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2850, !tbaa !2355
  %tobool209 = icmp ne %struct.keyfield* %124, null, !dbg !2850
  br i1 %tobool209, label %if.end213, label %if.then210, !dbg !2852

if.then210:                                       ; preds = %if.end208
  %125 = load i8*, i8** @optarg, align 8, !dbg !2853, !tbaa !2355
  %126 = load i8**, i8*** %files, align 8, !dbg !2854, !tbaa !2355
  %127 = load i64, i64* %nfiles, align 8, !dbg !2855, !tbaa !2516
  %inc211 = add i64 %127, 1, !dbg !2855
  store i64 %inc211, i64* %nfiles, align 8, !dbg !2855, !tbaa !2516
  %arrayidx212 = getelementptr inbounds i8*, i8** %126, i64 %127, !dbg !2854, !ctir !91
  store i8* %125, i8** %arrayidx212, align 8, !dbg !2856, !tbaa !2355
  br label %if.end213, !dbg !2854

if.end213:                                        ; preds = %if.then210, %if.end208
  br label %sw.epilog, !dbg !2857

sw.bb214:                                         ; preds = %if.else
  %128 = load i8*, i8** @optarg, align 8, !dbg !2858, !tbaa !2355
  %129 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2858, !tbaa !2355
  %call215 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i8* %128, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @sort_args, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @sort_types, i64 0, i64 0), i64 1, void ()* %129), !dbg !2858
  %arrayidx216 = getelementptr inbounds [6 x i8], [6 x i8]* @sort_types, i64 0, i64 %call215, !dbg !2858, !ctir !259
  %130 = load i8, i8* %arrayidx216, align 1, !dbg !2858, !tbaa !2507
  %conv217 = sext i8 %130 to i32, !dbg !2858
  store i32 %conv217, i32* %c, align 4, !dbg !2859, !tbaa !2342
  br label %sw.bb218, !dbg !2860

sw.bb218:                                         ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %sw.bb214
  call void @llvm.dbg.declare(metadata [2 x i8]* %str, metadata !2861, metadata !DIExpression()), !dbg !2863
  %131 = load i32, i32* %c, align 4, !dbg !2864, !tbaa !2342
  %conv219 = trunc i32 %131 to i8, !dbg !2864
  %arrayidx220 = getelementptr inbounds [2 x i8], [2 x i8]* %str, i64 0, i64 0, !dbg !2865, !ctir !268
  store i8 %conv219, i8* %arrayidx220, align 1, !dbg !2866, !tbaa !2507
  %arrayidx221 = getelementptr inbounds [2 x i8], [2 x i8]* %str, i64 0, i64 1, !dbg !2867, !ctir !268
  store i8 0, i8* %arrayidx221, align 1, !dbg !2868, !tbaa !2507
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %str, i64 0, i64 0, !dbg !2869
  %call222 = call i8* @set_ordering(i8* %arraydecay, %struct.keyfield* %gkey, i32 2), !dbg !2870
  br label %sw.epilog, !dbg !2871

sw.bb223:                                         ; preds = %if.else
  %132 = load i8*, i8** @optarg, align 8, !dbg !2872, !tbaa !2355
  %tobool224 = icmp ne i8* %132, null, !dbg !2872
  br i1 %tobool224, label %cond.true225, label %cond.false229, !dbg !2872

cond.true225:                                     ; preds = %sw.bb223
  %133 = load i8*, i8** @optarg, align 8, !dbg !2873, !tbaa !2355
  %134 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2873, !tbaa !2355
  %call226 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i8* %133, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @check_args, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @check_types, i64 0, i64 0), i64 1, void ()* %134), !dbg !2873
  %arrayidx227 = getelementptr inbounds [3 x i8], [3 x i8]* @check_types, i64 0, i64 %call226, !dbg !2873, !ctir !271
  %135 = load i8, i8* %arrayidx227, align 1, !dbg !2873, !tbaa !2507
  %conv228 = sext i8 %135 to i32, !dbg !2873
  br label %cond.end230, !dbg !2872

cond.false229:                                    ; preds = %sw.bb223
  br label %cond.end230, !dbg !2872

cond.end230:                                      ; preds = %cond.false229, %cond.true225
  %cond = phi i32 [ %conv228, %cond.true225 ], [ 99, %cond.false229 ], !dbg !2872
  store i32 %cond, i32* %c, align 4, !dbg !2874, !tbaa !2342
  br label %sw.bb231, !dbg !2875

sw.bb231:                                         ; preds = %if.else, %if.else, %cond.end230
  %136 = load i8, i8* %checkonly, align 1, !dbg !2876, !tbaa !2507
  %conv232 = sext i8 %136 to i32, !dbg !2876
  %tobool233 = icmp ne i32 %conv232, 0, !dbg !2876
  br i1 %tobool233, label %land.lhs.true234, label %if.end239, !dbg !2878

land.lhs.true234:                                 ; preds = %sw.bb231
  %137 = load i8, i8* %checkonly, align 1, !dbg !2879, !tbaa !2507
  %conv235 = sext i8 %137 to i32, !dbg !2879
  %138 = load i32, i32* %c, align 4, !dbg !2880, !tbaa !2342
  %cmp236 = icmp ne i32 %conv235, %138, !dbg !2881
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !2882

if.then238:                                       ; preds = %land.lhs.true234
  call void @incompatible_options(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #15, !dbg !2883
  unreachable, !dbg !2883

if.end239:                                        ; preds = %land.lhs.true234, %sw.bb231
  %139 = load i32, i32* %c, align 4, !dbg !2884, !tbaa !2342
  %conv240 = trunc i32 %139 to i8, !dbg !2884
  store i8 %conv240, i8* %checkonly, align 1, !dbg !2885, !tbaa !2507
  br label %sw.epilog, !dbg !2886

sw.bb241:                                         ; preds = %if.else
  %140 = load i8*, i8** @compress_program, align 8, !dbg !2887, !tbaa !2355
  %tobool242 = icmp ne i8* %140, null, !dbg !2887
  br i1 %tobool242, label %land.lhs.true243, label %if.end249, !dbg !2889

land.lhs.true243:                                 ; preds = %sw.bb241
  %141 = load i8*, i8** @compress_program, align 8, !dbg !2890, !tbaa !2355
  %142 = load i8*, i8** @optarg, align 8, !dbg !2890, !tbaa !2355
  %call244 = call i32 @strcmp(i8* %141, i8* %142) #14, !dbg !2890
  %cmp245 = icmp eq i32 %call244, 0, !dbg !2890
  br i1 %cmp245, label %if.end249, label %if.then247, !dbg !2891

if.then247:                                       ; preds = %land.lhs.true243
  %call248 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !2892
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call248), !dbg !2892
  unreachable, !dbg !2892

if.end249:                                        ; preds = %land.lhs.true243, %sw.bb241
  %143 = load i8*, i8** @optarg, align 8, !dbg !2893, !tbaa !2355
  store i8* %143, i8** @compress_program, align 8, !dbg !2894, !tbaa !2355
  br label %sw.epilog, !dbg !2895

sw.bb250:                                         ; preds = %if.else
  store i8 1, i8* @debug, align 1, !dbg !2896, !tbaa !2499
  br label %sw.epilog, !dbg !2897

sw.bb251:                                         ; preds = %if.else
  %144 = load i8*, i8** @optarg, align 8, !dbg !2898, !tbaa !2355
  store i8* %144, i8** %files_from, align 8, !dbg !2899, !tbaa !2355
  br label %sw.epilog, !dbg !2900

sw.bb252:                                         ; preds = %if.else
  %call253 = call %struct.keyfield* @key_init(%struct.keyfield* %key_buf), !dbg !2901
  store %struct.keyfield* %call253, %struct.keyfield** %key, align 8, !dbg !2902, !tbaa !2355
  %145 = load i8*, i8** @optarg, align 8, !dbg !2903, !tbaa !2355
  %146 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2904, !tbaa !2355
  %sword254 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %146, i32 0, i32 0, !dbg !2905, !ctir !93
  %call255 = call i8* @parse_field_count(i8* %145, i64* %sword254, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i64 0, i64 0)), !dbg !2906
  store i8* %call255, i8** %s, align 8, !dbg !2907, !tbaa !2355
  %147 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2908, !tbaa !2355
  %sword256 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %147, i32 0, i32 0, !dbg !2910, !ctir !93
  %148 = load i64, i64* %sword256, align 8, !dbg !2911, !tbaa !2657, !ctir !52
  %dec257 = add i64 %148, -1, !dbg !2911
  store i64 %dec257, i64* %sword256, align 8, !dbg !2911, !tbaa !2657, !ctir !52
  %tobool258 = icmp ne i64 %148, 0, !dbg !2911
  br i1 %tobool258, label %if.end260, label %if.then259, !dbg !2912

if.then259:                                       ; preds = %sw.bb252
  %149 = load i8*, i8** @optarg, align 8, !dbg !2913, !tbaa !2355
  call void @badfieldspec(i8* %149, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #15, !dbg !2915
  unreachable, !dbg !2915

if.end260:                                        ; preds = %sw.bb252
  %150 = load i8*, i8** %s, align 8, !dbg !2916, !tbaa !2355
  %151 = load i8, i8* %150, align 1, !dbg !2918, !tbaa !2507, !ctir !88
  %conv261 = sext i8 %151 to i32, !dbg !2918
  %cmp262 = icmp eq i32 %conv261, 46, !dbg !2919
  br i1 %cmp262, label %if.then264, label %if.end273, !dbg !2920

if.then264:                                       ; preds = %if.end260
  %152 = load i8*, i8** %s, align 8, !dbg !2921, !tbaa !2355
  %add.ptr265 = getelementptr inbounds i8, i8* %152, i64 1, !dbg !2923
  %153 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2924, !tbaa !2355
  %schar266 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %153, i32 0, i32 1, !dbg !2925, !ctir !93
  %call267 = call i8* @parse_field_count(i8* %add.ptr265, i64* %schar266, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)), !dbg !2926
  store i8* %call267, i8** %s, align 8, !dbg !2927, !tbaa !2355
  %154 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2928, !tbaa !2355
  %schar268 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %154, i32 0, i32 1, !dbg !2930, !ctir !93
  %155 = load i64, i64* %schar268, align 8, !dbg !2931, !tbaa !2776, !ctir !52
  %dec269 = add i64 %155, -1, !dbg !2931
  store i64 %dec269, i64* %schar268, align 8, !dbg !2931, !tbaa !2776, !ctir !52
  %tobool270 = icmp ne i64 %155, 0, !dbg !2931
  br i1 %tobool270, label %if.end272, label %if.then271, !dbg !2932

if.then271:                                       ; preds = %if.then264
  %156 = load i8*, i8** @optarg, align 8, !dbg !2933, !tbaa !2355
  call void @badfieldspec(i8* %156, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i64 0, i64 0)) #15, !dbg !2935
  unreachable, !dbg !2935

if.end272:                                        ; preds = %if.then264
  br label %if.end273, !dbg !2936

if.end273:                                        ; preds = %if.end272, %if.end260
  %157 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2937, !tbaa !2355
  %sword274 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %157, i32 0, i32 0, !dbg !2939, !ctir !93
  %158 = load i64, i64* %sword274, align 8, !dbg !2939, !tbaa !2657, !ctir !52
  %tobool275 = icmp ne i64 %158, 0, !dbg !2937
  br i1 %tobool275, label %if.end281, label %lor.lhs.false276, !dbg !2940

lor.lhs.false276:                                 ; preds = %if.end273
  %159 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2941, !tbaa !2355
  %schar277 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %159, i32 0, i32 1, !dbg !2942, !ctir !93
  %160 = load i64, i64* %schar277, align 8, !dbg !2942, !tbaa !2776, !ctir !52
  %tobool278 = icmp ne i64 %160, 0, !dbg !2941
  br i1 %tobool278, label %if.end281, label %if.then279, !dbg !2943

if.then279:                                       ; preds = %lor.lhs.false276
  %161 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2944, !tbaa !2355
  %sword280 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %161, i32 0, i32 0, !dbg !2945, !ctir !93
  store i64 -1, i64* %sword280, align 8, !dbg !2946, !tbaa !2657, !ctir !52
  br label %if.end281, !dbg !2944

if.end281:                                        ; preds = %if.then279, %lor.lhs.false276, %if.end273
  %162 = load i8*, i8** %s, align 8, !dbg !2947, !tbaa !2355
  %163 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2948, !tbaa !2355
  %call282 = call i8* @set_ordering(i8* %162, %struct.keyfield* %163, i32 0), !dbg !2949
  store i8* %call282, i8** %s, align 8, !dbg !2950, !tbaa !2355
  %164 = load i8*, i8** %s, align 8, !dbg !2951, !tbaa !2355
  %165 = load i8, i8* %164, align 1, !dbg !2953, !tbaa !2507, !ctir !88
  %conv283 = sext i8 %165 to i32, !dbg !2953
  %cmp284 = icmp ne i32 %conv283, 44, !dbg !2954
  br i1 %cmp284, label %if.then286, label %if.else289, !dbg !2955

if.then286:                                       ; preds = %if.end281
  %166 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2956, !tbaa !2355
  %eword287 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %166, i32 0, i32 2, !dbg !2958, !ctir !93
  store i64 -1, i64* %eword287, align 8, !dbg !2959, !tbaa !2826, !ctir !52
  %167 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2960, !tbaa !2355
  %echar288 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %167, i32 0, i32 3, !dbg !2961, !ctir !93
  store i64 0, i64* %echar288, align 8, !dbg !2962, !tbaa !2822, !ctir !52
  br label %if.end307, !dbg !2963

if.else289:                                       ; preds = %if.end281
  %168 = load i8*, i8** %s, align 8, !dbg !2964, !tbaa !2355
  %add.ptr290 = getelementptr inbounds i8, i8* %168, i64 1, !dbg !2966
  %169 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2967, !tbaa !2355
  %eword291 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %169, i32 0, i32 2, !dbg !2968, !ctir !93
  %call292 = call i8* @parse_field_count(i8* %add.ptr290, i64* %eword291, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i64 0, i64 0)), !dbg !2969
  store i8* %call292, i8** %s, align 8, !dbg !2970, !tbaa !2355
  %170 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2971, !tbaa !2355
  %eword293 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %170, i32 0, i32 2, !dbg !2973, !ctir !93
  %171 = load i64, i64* %eword293, align 8, !dbg !2974, !tbaa !2826, !ctir !52
  %dec294 = add i64 %171, -1, !dbg !2974
  store i64 %dec294, i64* %eword293, align 8, !dbg !2974, !tbaa !2826, !ctir !52
  %tobool295 = icmp ne i64 %171, 0, !dbg !2974
  br i1 %tobool295, label %if.end297, label %if.then296, !dbg !2975

if.then296:                                       ; preds = %if.else289
  %172 = load i8*, i8** @optarg, align 8, !dbg !2976, !tbaa !2355
  call void @badfieldspec(i8* %172, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #15, !dbg !2978
  unreachable, !dbg !2978

if.end297:                                        ; preds = %if.else289
  %173 = load i8*, i8** %s, align 8, !dbg !2979, !tbaa !2355
  %174 = load i8, i8* %173, align 1, !dbg !2981, !tbaa !2507, !ctir !88
  %conv298 = sext i8 %174 to i32, !dbg !2981
  %cmp299 = icmp eq i32 %conv298, 46, !dbg !2982
  br i1 %cmp299, label %if.then301, label %if.end305, !dbg !2983

if.then301:                                       ; preds = %if.end297
  %175 = load i8*, i8** %s, align 8, !dbg !2984, !tbaa !2355
  %add.ptr302 = getelementptr inbounds i8, i8* %175, i64 1, !dbg !2986
  %176 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2987, !tbaa !2355
  %echar303 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %176, i32 0, i32 3, !dbg !2988, !ctir !93
  %call304 = call i8* @parse_field_count(i8* %add.ptr302, i64* %echar303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)), !dbg !2989
  store i8* %call304, i8** %s, align 8, !dbg !2990, !tbaa !2355
  br label %if.end305, !dbg !2991

if.end305:                                        ; preds = %if.then301, %if.end297
  %177 = load i8*, i8** %s, align 8, !dbg !2992, !tbaa !2355
  %178 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2993, !tbaa !2355
  %call306 = call i8* @set_ordering(i8* %177, %struct.keyfield* %178, i32 1), !dbg !2994
  store i8* %call306, i8** %s, align 8, !dbg !2995, !tbaa !2355
  br label %if.end307

if.end307:                                        ; preds = %if.end305, %if.then286
  %179 = load i8*, i8** %s, align 8, !dbg !2996, !tbaa !2355
  %180 = load i8, i8* %179, align 1, !dbg !2998, !tbaa !2507, !ctir !88
  %tobool308 = icmp ne i8 %180, 0, !dbg !2998
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !2999

if.then309:                                       ; preds = %if.end307
  %181 = load i8*, i8** @optarg, align 8, !dbg !3000, !tbaa !2355
  call void @badfieldspec(i8* %181, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0)) #15, !dbg !3001
  unreachable, !dbg !3001

if.end310:                                        ; preds = %if.end307
  %182 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3002, !tbaa !2355
  call void @insertkey(%struct.keyfield* %182), !dbg !3003
  br label %sw.epilog, !dbg !3004

sw.bb311:                                         ; preds = %if.else
  store i8 1, i8* %mergeonly, align 1, !dbg !3005, !tbaa !2499
  br label %sw.epilog, !dbg !3006

sw.bb312:                                         ; preds = %if.else
  %183 = load i32, i32* %oi, align 4, !dbg !3007, !tbaa !2342
  %184 = load i32, i32* %c, align 4, !dbg !3008, !tbaa !2342
  %conv313 = trunc i32 %184 to i8, !dbg !3008
  %185 = load i8*, i8** @optarg, align 8, !dbg !3009, !tbaa !2355
  call void @specify_nmerge(i32 %183, i8 signext %conv313, i8* %185), !dbg !3010
  br label %sw.epilog, !dbg !3011

sw.bb314:                                         ; preds = %if.else
  %186 = load i8*, i8** %outfile, align 8, !dbg !3012, !tbaa !2355
  %tobool315 = icmp ne i8* %186, null, !dbg !3012
  br i1 %tobool315, label %land.lhs.true316, label %if.end322, !dbg !3014

land.lhs.true316:                                 ; preds = %sw.bb314
  %187 = load i8*, i8** %outfile, align 8, !dbg !3015, !tbaa !2355
  %188 = load i8*, i8** @optarg, align 8, !dbg !3015, !tbaa !2355
  %call317 = call i32 @strcmp(i8* %187, i8* %188) #14, !dbg !3015
  %cmp318 = icmp eq i32 %call317, 0, !dbg !3015
  br i1 %cmp318, label %if.end322, label %if.then320, !dbg !3016

if.then320:                                       ; preds = %land.lhs.true316
  %call321 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !3017
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call321), !dbg !3017
  unreachable, !dbg !3017

if.end322:                                        ; preds = %land.lhs.true316, %sw.bb314
  %189 = load i8*, i8** @optarg, align 8, !dbg !3018, !tbaa !2355
  store i8* %189, i8** %outfile, align 8, !dbg !3019, !tbaa !2355
  br label %sw.epilog, !dbg !3020

sw.bb323:                                         ; preds = %if.else
  %190 = load i8*, i8** %random_source, align 8, !dbg !3021, !tbaa !2355
  %tobool324 = icmp ne i8* %190, null, !dbg !3021
  br i1 %tobool324, label %land.lhs.true325, label %if.end331, !dbg !3023

land.lhs.true325:                                 ; preds = %sw.bb323
  %191 = load i8*, i8** %random_source, align 8, !dbg !3024, !tbaa !2355
  %192 = load i8*, i8** @optarg, align 8, !dbg !3024, !tbaa !2355
  %call326 = call i32 @strcmp(i8* %191, i8* %192) #14, !dbg !3024
  %cmp327 = icmp eq i32 %call326, 0, !dbg !3024
  br i1 %cmp327, label %if.end331, label %if.then329, !dbg !3025

if.then329:                                       ; preds = %land.lhs.true325
  %call330 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0)) #12, !dbg !3026
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call330), !dbg !3026
  unreachable, !dbg !3026

if.end331:                                        ; preds = %land.lhs.true325, %sw.bb323
  %193 = load i8*, i8** @optarg, align 8, !dbg !3027, !tbaa !2355
  store i8* %193, i8** %random_source, align 8, !dbg !3028, !tbaa !2355
  br label %sw.epilog, !dbg !3029

sw.bb332:                                         ; preds = %if.else
  store i8 1, i8* @stable, align 1, !dbg !3030, !tbaa !2499
  br label %sw.epilog, !dbg !3031

sw.bb333:                                         ; preds = %if.else
  %194 = load i32, i32* %oi, align 4, !dbg !3032, !tbaa !2342
  %195 = load i32, i32* %c, align 4, !dbg !3033, !tbaa !2342
  %conv334 = trunc i32 %195 to i8, !dbg !3033
  %196 = load i8*, i8** @optarg, align 8, !dbg !3034, !tbaa !2355
  call void @specify_sort_size(i32 %194, i8 signext %conv334, i8* %196), !dbg !3035
  br label %sw.epilog, !dbg !3036

sw.bb335:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %newtab, metadata !3037, metadata !DIExpression()), !dbg !3039
  %197 = load i8*, i8** @optarg, align 8, !dbg !3040, !tbaa !2355
  %arrayidx336 = getelementptr inbounds i8, i8* %197, i64 0, !dbg !3040, !ctir !7
  %198 = load i8, i8* %arrayidx336, align 1, !dbg !3040, !tbaa !2507
  store i8 %198, i8* %newtab, align 1, !dbg !3039, !tbaa !2507
  %199 = load i8, i8* %newtab, align 1, !dbg !3041, !tbaa !2507
  %tobool337 = icmp ne i8 %199, 0, !dbg !3041
  br i1 %tobool337, label %if.end340, label %if.then338, !dbg !3043

if.then338:                                       ; preds = %sw.bb335
  %call339 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !3044
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call339), !dbg !3044
  unreachable, !dbg !3044

if.end340:                                        ; preds = %sw.bb335
  %200 = load i8*, i8** @optarg, align 8, !dbg !3045, !tbaa !2355
  %arrayidx341 = getelementptr inbounds i8, i8* %200, i64 1, !dbg !3045, !ctir !7
  %201 = load i8, i8* %arrayidx341, align 1, !dbg !3045, !tbaa !2507
  %tobool342 = icmp ne i8 %201, 0, !dbg !3045
  br i1 %tobool342, label %if.then343, label %if.end352, !dbg !3047

if.then343:                                       ; preds = %if.end340
  %202 = load i8*, i8** @optarg, align 8, !dbg !3048, !tbaa !2355
  %call344 = call i32 @strcmp(i8* %202, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0)) #14, !dbg !3048
  %cmp345 = icmp eq i32 %call344, 0, !dbg !3048
  br i1 %cmp345, label %if.then347, label %if.else348, !dbg !3051

if.then347:                                       ; preds = %if.then343
  store i8 0, i8* %newtab, align 1, !dbg !3052, !tbaa !2507
  br label %if.end351, !dbg !3053

if.else348:                                       ; preds = %if.then343
  %call349 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !3054
  %203 = load i8*, i8** @optarg, align 8, !dbg !3054, !tbaa !2355
  %call350 = call i8* @quote(i8* %203), !dbg !3054
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call349, i8* %call350), !dbg !3054
  unreachable, !dbg !3054

if.end351:                                        ; preds = %if.then347
  br label %if.end352, !dbg !3056

if.end352:                                        ; preds = %if.end351, %if.end340
  %204 = load i32, i32* @tab, align 4, !dbg !3057, !tbaa !2342
  %cmp353 = icmp ne i32 %204, 128, !dbg !3059
  br i1 %cmp353, label %land.lhs.true355, label %if.end361, !dbg !3060

land.lhs.true355:                                 ; preds = %if.end352
  %205 = load i32, i32* @tab, align 4, !dbg !3061, !tbaa !2342
  %206 = load i8, i8* %newtab, align 1, !dbg !3062, !tbaa !2507
  %conv356 = sext i8 %206 to i32, !dbg !3062
  %cmp357 = icmp ne i32 %205, %conv356, !dbg !3063
  br i1 %cmp357, label %if.then359, label %if.end361, !dbg !3064

if.then359:                                       ; preds = %land.lhs.true355
  %call360 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !3065
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call360), !dbg !3065
  unreachable, !dbg !3065

if.end361:                                        ; preds = %land.lhs.true355, %if.end352
  %207 = load i8, i8* %newtab, align 1, !dbg !3066, !tbaa !2507
  %conv362 = sext i8 %207 to i32, !dbg !3066
  store i32 %conv362, i32* @tab, align 4, !dbg !3067, !tbaa !2342
  br label %sw.epilog, !dbg !3068

sw.bb363:                                         ; preds = %if.else
  %208 = load i8*, i8** @optarg, align 8, !dbg !3069, !tbaa !2355
  call void @add_temp_dir(i8* %208), !dbg !3070
  br label %sw.epilog, !dbg !3071

sw.bb364:                                         ; preds = %if.else
  %209 = load i32, i32* %oi, align 4, !dbg !3072, !tbaa !2342
  %210 = load i32, i32* %c, align 4, !dbg !3073, !tbaa !2342
  %conv365 = trunc i32 %210 to i8, !dbg !3073
  %211 = load i8*, i8** @optarg, align 8, !dbg !3074, !tbaa !2355
  %call366 = call i64 @specify_nthreads(i32 %209, i8 signext %conv365, i8* %211), !dbg !3075
  store i64 %call366, i64* %nthreads, align 8, !dbg !3076, !tbaa !2516
  br label %sw.epilog, !dbg !3077

sw.bb367:                                         ; preds = %if.else
  store i8 1, i8* @unique, align 1, !dbg !3078, !tbaa !2499
  br label %sw.epilog, !dbg !3079

sw.bb368:                                         ; preds = %if.else
  %212 = load i8*, i8** @optarg, align 8, !dbg !3080, !tbaa !2355
  %213 = load i8**, i8*** %argv.addr, align 8, !dbg !3082, !tbaa !2355
  %214 = load i32, i32* @optind, align 4, !dbg !3083, !tbaa !2342
  %sub369 = sub nsw i32 %214, 1, !dbg !3084
  %idxprom370 = sext i32 %sub369 to i64, !dbg !3082
  %arrayidx371 = getelementptr inbounds i8*, i8** %213, i64 %idxprom370, !dbg !3082, !ctir !91
  %215 = load i8*, i8** %arrayidx371, align 8, !dbg !3082, !tbaa !2355
  %cmp372 = icmp eq i8* %212, %215, !dbg !3085
  br i1 %cmp372, label %if.then374, label %if.end387, !dbg !3086

if.then374:                                       ; preds = %sw.bb368
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3087, metadata !DIExpression()), !dbg !3089
  %216 = load i8*, i8** @optarg, align 8, !dbg !3090, !tbaa !2355
  store i8* %216, i8** %p, align 8, !dbg !3092, !tbaa !2355
  br label %for.cond375, !dbg !3093

for.cond375:                                      ; preds = %for.inc381, %if.then374
  %217 = load i8*, i8** %p, align 8, !dbg !3094, !tbaa !2355
  %218 = load i8, i8* %217, align 1, !dbg !3094, !tbaa !2507, !ctir !88
  %conv376 = sext i8 %218 to i32, !dbg !3094
  %sub377 = sub i32 %conv376, 48, !dbg !3094
  %cmp378 = icmp ule i32 %sub377, 9, !dbg !3094
  br i1 %cmp378, label %for.body380, label %for.end382, !dbg !3096

for.body380:                                      ; preds = %for.cond375
  br label %for.inc381, !dbg !3097

for.inc381:                                       ; preds = %for.body380
  %219 = load i8*, i8** %p, align 8, !dbg !3098, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %219, i32 1, !dbg !3098
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3098, !tbaa !2355
  br label %for.cond375, !dbg !3099, !llvm.loop !3100

for.end382:                                       ; preds = %for.cond375
  %220 = load i8*, i8** %p, align 8, !dbg !3102, !tbaa !2355
  %221 = load i8, i8* %220, align 1, !dbg !3103, !tbaa !2507, !ctir !88
  %conv383 = sext i8 %221 to i32, !dbg !3103
  %cmp384 = icmp ne i32 %conv383, 0, !dbg !3104
  %conv385 = zext i1 %cmp384 to i32, !dbg !3104
  %222 = load i32, i32* @optind, align 4, !dbg !3105, !tbaa !2342
  %sub386 = sub nsw i32 %222, %conv385, !dbg !3105
  store i32 %sub386, i32* @optind, align 4, !dbg !3105, !tbaa !2342
  br label %if.end387, !dbg !3106

if.end387:                                        ; preds = %for.end382, %sw.bb368
  br label %sw.epilog, !dbg !3107

sw.bb388:                                         ; preds = %if.else
  store i8 0, i8* @eolchar, align 1, !dbg !3108, !tbaa !2507
  br label %sw.epilog, !dbg !3109

sw.bb389:                                         ; preds = %if.else
  call void @usage(i32 0) #15, !dbg !3110
  unreachable, !dbg !3110

sw.bb390:                                         ; preds = %if.else
  %223 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3111, !tbaa !2355
  %224 = load i8*, i8** @Version, align 8, !dbg !3111, !tbaa !2355
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), i8* %224, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0), i8* null), !dbg !3111
  call void @exit(i32 0) #13, !dbg !3111
  unreachable, !dbg !3111

sw.default:                                       ; preds = %if.else
  call void @usage(i32 2) #15, !dbg !3112
  unreachable, !dbg !3112

sw.epilog:                                        ; preds = %sw.bb388, %if.end387, %sw.bb367, %sw.bb364, %sw.bb363, %if.end361, %sw.bb333, %sw.bb332, %if.end331, %if.end322, %sw.bb312, %sw.bb311, %if.end310, %sw.bb251, %sw.bb250, %if.end249, %if.end239, %sw.bb218, %if.end213
  br label %if.end391

if.end391:                                        ; preds = %sw.epilog, %if.end110
  br label %while.body, !dbg !2662, !llvm.loop !3113

while.end:                                        ; preds = %if.then109
  %225 = load i8*, i8** %files_from, align 8, !dbg !3115, !tbaa !2355
  %tobool392 = icmp ne i8* %225, null, !dbg !3115
  br i1 %tobool392, label %if.then393, label %if.end444, !dbg !3117

if.then393:                                       ; preds = %while.end
  %226 = load i64, i64* %nfiles, align 8, !dbg !3118, !tbaa !2516
  %tobool394 = icmp ne i64 %226, 0, !dbg !3118
  br i1 %tobool394, label %if.then395, label %if.end401, !dbg !3121

if.then395:                                       ; preds = %if.then393
  %call396 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !3122
  %227 = load i8**, i8*** %files, align 8, !dbg !3124, !tbaa !2355
  %arrayidx397 = getelementptr inbounds i8*, i8** %227, i64 0, !dbg !3124, !ctir !91
  %228 = load i8*, i8** %arrayidx397, align 8, !dbg !3124, !tbaa !2355
  %call398 = call i8* @quotearg_style(i32 4, i8* %228), !dbg !3124
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call396, i8* %call398), !dbg !3125
  %229 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3126, !tbaa !2355
  %call399 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !3127
  %call400 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %229, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %call399), !dbg !3128
  call void @usage(i32 2) #15, !dbg !3129
  unreachable, !dbg !3129

if.end401:                                        ; preds = %if.then393
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream, metadata !3130, metadata !DIExpression()), !dbg !3131
  %230 = load i8*, i8** %files_from, align 8, !dbg !3132, !tbaa !2355
  %call402 = call %struct._IO_FILE* @xfopen(i8* %230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !3133
  store %struct._IO_FILE* %call402, %struct._IO_FILE** %stream, align 8, !dbg !3131, !tbaa !2355
  call void @readtokens0_init(%struct.Tokens* %tok), !dbg !3134
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %stream, align 8, !dbg !3135, !tbaa !2355
  %call403 = call zeroext i1 @readtokens0(%struct._IO_FILE* %231, %struct.Tokens* %tok), !dbg !3137
  br i1 %call403, label %if.end407, label %if.then404, !dbg !3138

if.then404:                                       ; preds = %if.end401
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0)) #12, !dbg !3139
  %232 = load i8*, i8** %files_from, align 8, !dbg !3139, !tbaa !2355
  %call406 = call i8* @quotearg_style(i32 4, i8* %232), !dbg !3139
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call405, i8* %call406), !dbg !3139
  unreachable, !dbg !3139

if.end407:                                        ; preds = %if.end401
  %233 = load %struct._IO_FILE*, %struct._IO_FILE** %stream, align 8, !dbg !3140, !tbaa !2355
  %234 = load i8*, i8** %files_from, align 8, !dbg !3141, !tbaa !2355
  call void @xfclose(%struct._IO_FILE* %233, i8* %234), !dbg !3142
  %n_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %tok, i32 0, i32 0, !dbg !3143, !ctir !2446
  %235 = load i64, i64* %n_tok, align 8, !dbg !3143, !tbaa !3145, !ctir !52
  %tobool408 = icmp ne i64 %235, 0, !dbg !3148
  br i1 %tobool408, label %if.then409, label %if.else440, !dbg !3149

if.then409:                                       ; preds = %if.end407
  %236 = load i8**, i8*** %files, align 8, !dbg !3150, !tbaa !2355
  %237 = bitcast i8** %236 to i8*, !dbg !3150
  call void @free(i8* %237) #12, !dbg !3152
  %tok410 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %tok, i32 0, i32 1, !dbg !3153, !ctir !2446
  %238 = load i8**, i8*** %tok410, align 8, !dbg !3153, !tbaa !3154, !ctir !91
  store i8** %238, i8*** %files, align 8, !dbg !3155, !tbaa !2355
  %n_tok411 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %tok, i32 0, i32 0, !dbg !3156, !ctir !2446
  %239 = load i64, i64* %n_tok411, align 8, !dbg !3156, !tbaa !3145, !ctir !52
  store i64 %239, i64* %nfiles, align 8, !dbg !3157, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %i412, metadata !3158, metadata !DIExpression()), !dbg !3160
  store i64 0, i64* %i412, align 8, !dbg !3160, !tbaa !2516
  br label %for.cond413, !dbg !3161

for.cond413:                                      ; preds = %for.inc437, %if.then409
  %240 = load i64, i64* %i412, align 8, !dbg !3162, !tbaa !2516
  %241 = load i64, i64* %nfiles, align 8, !dbg !3164, !tbaa !2516
  %cmp414 = icmp ult i64 %240, %241, !dbg !3165
  br i1 %cmp414, label %for.body416, label %for.end439, !dbg !3166

for.body416:                                      ; preds = %for.cond413
  %242 = load i8**, i8*** %files, align 8, !dbg !3167, !tbaa !2355
  %243 = load i64, i64* %i412, align 8, !dbg !3167, !tbaa !2516
  %arrayidx417 = getelementptr inbounds i8*, i8** %242, i64 %243, !dbg !3167, !ctir !91
  %244 = load i8*, i8** %arrayidx417, align 8, !dbg !3167, !tbaa !2355
  %call418 = call i32 @strcmp(i8* %244, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !3167
  %cmp419 = icmp eq i32 %call418, 0, !dbg !3167
  br i1 %cmp419, label %if.then421, label %if.else425, !dbg !3170

if.then421:                                       ; preds = %for.body416
  %call422 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.55, i64 0, i64 0)) #12, !dbg !3171
  %245 = load i8**, i8*** %files, align 8, !dbg !3171, !tbaa !2355
  %246 = load i64, i64* %i412, align 8, !dbg !3171, !tbaa !2516
  %arrayidx423 = getelementptr inbounds i8*, i8** %245, i64 %246, !dbg !3171, !ctir !91
  %247 = load i8*, i8** %arrayidx423, align 8, !dbg !3171, !tbaa !2355
  %call424 = call i8* @quotearg_style(i32 4, i8* %247), !dbg !3171
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call422, i8* %call424), !dbg !3171
  unreachable, !dbg !3171

if.else425:                                       ; preds = %for.body416
  %248 = load i8**, i8*** %files, align 8, !dbg !3172, !tbaa !2355
  %249 = load i64, i64* %i412, align 8, !dbg !3174, !tbaa !2516
  %arrayidx426 = getelementptr inbounds i8*, i8** %248, i64 %249, !dbg !3172, !ctir !91
  %250 = load i8*, i8** %arrayidx426, align 8, !dbg !3172, !tbaa !2355
  %arrayidx427 = getelementptr inbounds i8, i8* %250, i64 0, !dbg !3172, !ctir !7
  %251 = load i8, i8* %arrayidx427, align 1, !dbg !3172, !tbaa !2507
  %conv428 = sext i8 %251 to i32, !dbg !3172
  %cmp429 = icmp eq i32 %conv428, 0, !dbg !3175
  br i1 %cmp429, label %if.then431, label %if.end435, !dbg !3176

if.then431:                                       ; preds = %if.else425
  call void @llvm.dbg.declare(metadata i64* %file_number, metadata !3177, metadata !DIExpression()), !dbg !3179
  %252 = load i64, i64* %i412, align 8, !dbg !3180, !tbaa !2516
  %add432 = add i64 %252, 1, !dbg !3181
  store i64 %add432, i64* %file_number, align 8, !dbg !3179, !tbaa !2516
  %call433 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.56, i64 0, i64 0)) #12, !dbg !3182
  %253 = load i8*, i8** %files_from, align 8, !dbg !3182, !tbaa !2355
  %call434 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %253), !dbg !3182
  %254 = load i64, i64* %file_number, align 8, !dbg !3182, !tbaa !2516
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call433, i8* %call434, i64 %254), !dbg !3182
  unreachable, !dbg !3182

if.end435:                                        ; preds = %if.else425
  br label %if.end436

if.end436:                                        ; preds = %if.end435
  br label %for.inc437, !dbg !3183

for.inc437:                                       ; preds = %if.end436
  %255 = load i64, i64* %i412, align 8, !dbg !3184, !tbaa !2516
  %inc438 = add i64 %255, 1, !dbg !3184
  store i64 %inc438, i64* %i412, align 8, !dbg !3184, !tbaa !2516
  br label %for.cond413, !dbg !3185, !llvm.loop !3186

for.end439:                                       ; preds = %for.cond413
  br label %if.end443, !dbg !3188

if.else440:                                       ; preds = %if.end407
  %call441 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0)) #12, !dbg !3189
  %256 = load i8*, i8** %files_from, align 8, !dbg !3189, !tbaa !2355
  %call442 = call i8* @quotearg_style(i32 4, i8* %256), !dbg !3189
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call441, i8* %call442), !dbg !3189
  unreachable, !dbg !3189

if.end443:                                        ; preds = %for.end439
  br label %if.end444, !dbg !3190

if.end444:                                        ; preds = %if.end443, %while.end
  %257 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !3191, !tbaa !2355
  store %struct.keyfield* %257, %struct.keyfield** %key, align 8, !dbg !3193, !tbaa !2355
  br label %for.cond445, !dbg !3194

for.cond445:                                      ; preds = %for.inc492, %if.end444
  %258 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3195, !tbaa !2355
  %tobool446 = icmp ne %struct.keyfield* %258, null, !dbg !3197
  br i1 %tobool446, label %for.body447, label %for.end493, !dbg !3197

for.body447:                                      ; preds = %for.cond445
  %259 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3198, !tbaa !2355
  %call448 = call zeroext i1 @default_key_compare(%struct.keyfield* %259), !dbg !3201
  br i1 %call448, label %land.lhs.true450, label %if.end483, !dbg !3202

land.lhs.true450:                                 ; preds = %for.body447
  %260 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3203, !tbaa !2355
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %260, i32 0, i32 13, !dbg !3204, !ctir !93
  %261 = load i8, i8* %reverse, align 1, !dbg !3204, !tbaa !3205
  %tobool451 = trunc i8 %261 to i1, !dbg !3204, !ctir !102
  br i1 %tobool451, label %if.end483, label %if.then452, !dbg !3206

if.then452:                                       ; preds = %land.lhs.true450
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 4, !dbg !3207, !ctir !93
  %262 = load i8*, i8** %ignore, align 8, !dbg !3207, !tbaa !3209, !ctir !100
  %263 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3210, !tbaa !2355
  %ignore453 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %263, i32 0, i32 4, !dbg !3211, !ctir !93
  store i8* %262, i8** %ignore453, align 8, !dbg !3212, !tbaa !3209, !ctir !100
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 5, !dbg !3213, !ctir !93
  %264 = load i8*, i8** %translate, align 8, !dbg !3213, !tbaa !3214, !ctir !87
  %265 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3215, !tbaa !2355
  %translate454 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %265, i32 0, i32 5, !dbg !3216, !ctir !93
  store i8* %264, i8** %translate454, align 8, !dbg !3217, !tbaa !3214, !ctir !87
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 6, !dbg !3218, !ctir !93
  %266 = load i8, i8* %skipsblanks, align 8, !dbg !3218, !tbaa !3219
  %tobool455 = trunc i8 %266 to i1, !dbg !3218, !ctir !102
  %267 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3220, !tbaa !2355
  %skipsblanks456 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %267, i32 0, i32 6, !dbg !3221, !ctir !93
  %frombool457 = zext i1 %tobool455 to i8, !dbg !3222
  store i8 %frombool457, i8* %skipsblanks456, align 8, !dbg !3222, !tbaa !3219, !ctir !102
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 7, !dbg !3223, !ctir !93
  %268 = load i8, i8* %skipeblanks, align 1, !dbg !3223, !tbaa !3224
  %tobool458 = trunc i8 %268 to i1, !dbg !3223, !ctir !102
  %269 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3225, !tbaa !2355
  %skipeblanks459 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %269, i32 0, i32 7, !dbg !3226, !ctir !93
  %frombool460 = zext i1 %tobool458 to i8, !dbg !3227
  store i8 %frombool460, i8* %skipeblanks459, align 1, !dbg !3227, !tbaa !3224, !ctir !102
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 12, !dbg !3228, !ctir !93
  %270 = load i8, i8* %month, align 2, !dbg !3228, !tbaa !3229
  %tobool461 = trunc i8 %270 to i1, !dbg !3228, !ctir !102
  %271 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3230, !tbaa !2355
  %month462 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %271, i32 0, i32 12, !dbg !3231, !ctir !93
  %frombool463 = zext i1 %tobool461 to i8, !dbg !3232
  store i8 %frombool463, i8* %month462, align 2, !dbg !3232, !tbaa !3229, !ctir !102
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 8, !dbg !3233, !ctir !93
  %272 = load i8, i8* %numeric, align 2, !dbg !3233, !tbaa !3234
  %tobool464 = trunc i8 %272 to i1, !dbg !3233, !ctir !102
  %273 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3235, !tbaa !2355
  %numeric465 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %273, i32 0, i32 8, !dbg !3236, !ctir !93
  %frombool466 = zext i1 %tobool464 to i8, !dbg !3237
  store i8 %frombool466, i8* %numeric465, align 2, !dbg !3237, !tbaa !3234, !ctir !102
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 10, !dbg !3238, !ctir !93
  %274 = load i8, i8* %general_numeric, align 4, !dbg !3238, !tbaa !3239
  %tobool467 = trunc i8 %274 to i1, !dbg !3238, !ctir !102
  %275 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3240, !tbaa !2355
  %general_numeric468 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %275, i32 0, i32 10, !dbg !3241, !ctir !93
  %frombool469 = zext i1 %tobool467 to i8, !dbg !3242
  store i8 %frombool469, i8* %general_numeric468, align 4, !dbg !3242, !tbaa !3239, !ctir !102
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 11, !dbg !3243, !ctir !93
  %276 = load i8, i8* %human_numeric, align 1, !dbg !3243, !tbaa !3244
  %tobool470 = trunc i8 %276 to i1, !dbg !3243, !ctir !102
  %277 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3245, !tbaa !2355
  %human_numeric471 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %277, i32 0, i32 11, !dbg !3246, !ctir !93
  %frombool472 = zext i1 %tobool470 to i8, !dbg !3247
  store i8 %frombool472, i8* %human_numeric471, align 1, !dbg !3247, !tbaa !3244, !ctir !102
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 14, !dbg !3248, !ctir !93
  %278 = load i8, i8* %version, align 8, !dbg !3248, !tbaa !3249
  %tobool473 = trunc i8 %278 to i1, !dbg !3248, !ctir !102
  %279 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3250, !tbaa !2355
  %version474 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %279, i32 0, i32 14, !dbg !3251, !ctir !93
  %frombool475 = zext i1 %tobool473 to i8, !dbg !3252
  store i8 %frombool475, i8* %version474, align 8, !dbg !3252, !tbaa !3249, !ctir !102
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 9, !dbg !3253, !ctir !93
  %280 = load i8, i8* %random, align 1, !dbg !3253, !tbaa !3254
  %tobool476 = trunc i8 %280 to i1, !dbg !3253, !ctir !102
  %281 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3255, !tbaa !2355
  %random477 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %281, i32 0, i32 9, !dbg !3256, !ctir !93
  %frombool478 = zext i1 %tobool476 to i8, !dbg !3257
  store i8 %frombool478, i8* %random477, align 1, !dbg !3257, !tbaa !3254, !ctir !102
  %reverse479 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 13, !dbg !3258, !ctir !93
  %282 = load i8, i8* %reverse479, align 1, !dbg !3258, !tbaa !3205
  %tobool480 = trunc i8 %282 to i1, !dbg !3258, !ctir !102
  %283 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3259, !tbaa !2355
  %reverse481 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %283, i32 0, i32 13, !dbg !3260, !ctir !93
  %frombool482 = zext i1 %tobool480 to i8, !dbg !3261
  store i8 %frombool482, i8* %reverse481, align 1, !dbg !3261, !tbaa !3205, !ctir !102
  br label %if.end483, !dbg !3262

if.end483:                                        ; preds = %if.then452, %land.lhs.true450, %for.body447
  %284 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3263, !tbaa !2355
  %random484 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %284, i32 0, i32 9, !dbg !3264, !ctir !93
  %285 = load i8, i8* %random484, align 1, !dbg !3264, !tbaa !3254
  %tobool485 = trunc i8 %285 to i1, !dbg !3264, !ctir !102
  %conv486 = zext i1 %tobool485 to i32, !dbg !3263
  %286 = load i8, i8* %need_random, align 1, !dbg !3265, !tbaa !2499
  %tobool487 = trunc i8 %286 to i1, !dbg !3265
  %conv488 = zext i1 %tobool487 to i32, !dbg !3265
  %or489 = or i32 %conv488, %conv486, !dbg !3265
  %tobool490 = icmp ne i32 %or489, 0, !dbg !3265
  %frombool491 = zext i1 %tobool490 to i8, !dbg !3265
  store i8 %frombool491, i8* %need_random, align 1, !dbg !3265, !tbaa !2499
  br label %for.inc492, !dbg !3266

for.inc492:                                       ; preds = %if.end483
  %287 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3267, !tbaa !2355
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %287, i32 0, i32 16, !dbg !3268, !ctir !93
  %288 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !3268, !tbaa !3269, !ctir !92
  store %struct.keyfield* %288, %struct.keyfield** %key, align 8, !dbg !3270, !tbaa !2355
  br label %for.cond445, !dbg !3271, !llvm.loop !3272

for.end493:                                       ; preds = %for.cond445
  %289 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !3274, !tbaa !2355
  %tobool494 = icmp ne %struct.keyfield* %289, null, !dbg !3274
  br i1 %tobool494, label %if.end506, label %land.lhs.true495, !dbg !3276

land.lhs.true495:                                 ; preds = %for.end493
  %call496 = call zeroext i1 @default_key_compare(%struct.keyfield* %gkey), !dbg !3277
  br i1 %call496, label %if.end506, label %if.then497, !dbg !3278

if.then497:                                       ; preds = %land.lhs.true495
  store i8 1, i8* %gkey_only, align 1, !dbg !3279, !tbaa !2499
  call void @insertkey(%struct.keyfield* %gkey), !dbg !3281
  %random498 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 9, !dbg !3282, !ctir !93
  %290 = load i8, i8* %random498, align 1, !dbg !3282, !tbaa !3254
  %tobool499 = trunc i8 %290 to i1, !dbg !3282, !ctir !102
  %conv500 = zext i1 %tobool499 to i32, !dbg !3283
  %291 = load i8, i8* %need_random, align 1, !dbg !3284, !tbaa !2499
  %tobool501 = trunc i8 %291 to i1, !dbg !3284
  %conv502 = zext i1 %tobool501 to i32, !dbg !3284
  %or503 = or i32 %conv502, %conv500, !dbg !3284
  %tobool504 = icmp ne i32 %or503, 0, !dbg !3284
  %frombool505 = zext i1 %tobool504 to i8, !dbg !3284
  store i8 %frombool505, i8* %need_random, align 1, !dbg !3284, !tbaa !2499
  br label %if.end506, !dbg !3285

if.end506:                                        ; preds = %if.then497, %land.lhs.true495, %for.end493
  call void @check_ordering_compatibility(), !dbg !3286
  %292 = load i8, i8* @debug, align 1, !dbg !3287, !tbaa !2499
  %tobool507 = trunc i8 %292 to i1, !dbg !3287
  br i1 %tobool507, label %if.then508, label %if.end544, !dbg !3289

if.then508:                                       ; preds = %if.end506
  %293 = load i8, i8* %checkonly, align 1, !dbg !3290, !tbaa !2507
  %conv509 = sext i8 %293 to i32, !dbg !3290
  %tobool510 = icmp ne i32 %conv509, 0, !dbg !3290
  br i1 %tobool510, label %if.then513, label %lor.lhs.false511, !dbg !3293

lor.lhs.false511:                                 ; preds = %if.then508
  %294 = load i8*, i8** %outfile, align 8, !dbg !3294, !tbaa !2355
  %tobool512 = icmp ne i8* %294, null, !dbg !3294
  br i1 %tobool512, label %if.then513, label %if.end522, !dbg !3295

if.then513:                                       ; preds = %lor.lhs.false511, %if.then508
  %295 = load i8, i8* %checkonly, align 1, !dbg !3296, !tbaa !2507
  %conv514 = sext i8 %295 to i32, !dbg !3296
  %tobool515 = icmp ne i32 %conv514, 0, !dbg !3296
  br i1 %tobool515, label %cond.true516, label %cond.false518, !dbg !3296

cond.true516:                                     ; preds = %if.then513
  %296 = load i8, i8* %checkonly, align 1, !dbg !3298, !tbaa !2507
  %conv517 = sext i8 %296 to i32, !dbg !3298
  br label %cond.end519, !dbg !3296

cond.false518:                                    ; preds = %if.then513
  br label %cond.end519, !dbg !3296

cond.end519:                                      ; preds = %cond.false518, %cond.true516
  %cond520 = phi i32 [ %conv517, %cond.true516 ], [ 111, %cond.false518 ], !dbg !3296
  %conv521 = trunc i32 %cond520 to i8, !dbg !3299
  store i8 %conv521, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @main.opts, i64 0, i64 0), align 1, !dbg !3300, !tbaa !2507
  call void @incompatible_options(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @main.opts, i64 0, i64 0)) #15, !dbg !3301
  unreachable, !dbg !3301

if.end522:                                        ; preds = %lor.lhs.false511
  %297 = load i8, i8* %locale_ok, align 1, !dbg !3302, !tbaa !2499
  %tobool523 = trunc i8 %297 to i1, !dbg !3302
  br i1 %tobool523, label %if.then524, label %if.end530, !dbg !3304

if.then524:                                       ; preds = %if.end522
  %call525 = call i8* @setlocale(i32 3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !3305
  %tobool526 = icmp ne i8* %call525, null, !dbg !3306
  %lnot527 = xor i1 %tobool526, true, !dbg !3306
  %lnot528 = xor i1 %lnot527, true, !dbg !3307
  %frombool529 = zext i1 %lnot528 to i8, !dbg !3308
  store i8 %frombool529, i8* %locale_ok, align 1, !dbg !3308, !tbaa !2499
  br label %if.end530, !dbg !3309

if.end530:                                        ; preds = %if.then524, %if.end522
  %298 = load i8, i8* %locale_ok, align 1, !dbg !3310, !tbaa !2499
  %tobool531 = trunc i8 %298 to i1, !dbg !3310
  br i1 %tobool531, label %if.end534, label %if.then532, !dbg !3312

if.then532:                                       ; preds = %if.end530
  %call533 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0)) #12, !dbg !3313
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0), i8* %call533), !dbg !3314
  br label %if.end534, !dbg !3314

if.end534:                                        ; preds = %if.then532, %if.end530
  %299 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !3315, !tbaa !2499
  %tobool535 = trunc i8 %299 to i1, !dbg !3315
  br i1 %tobool535, label %if.then536, label %if.else540, !dbg !3317

if.then536:                                       ; preds = %if.end534
  %call537 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.60, i64 0, i64 0)) #12, !dbg !3318
  %call538 = call i8* @setlocale(i32 3, i8* null) #12, !dbg !3319
  %call539 = call i8* @quote(i8* %call538), !dbg !3320
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call537, i8* %call539), !dbg !3321
  br label %if.end542, !dbg !3321

if.else540:                                       ; preds = %if.end534
  %call541 = call i8* @gettext(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.61, i64 0, i64 0)) #12, !dbg !3322
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0), i8* %call541), !dbg !3323
  br label %if.end542

if.end542:                                        ; preds = %if.else540, %if.then536
  %300 = load i8, i8* %gkey_only, align 1, !dbg !3324, !tbaa !2499
  %tobool543 = trunc i8 %300 to i1, !dbg !3324
  call void @key_warnings(%struct.keyfield* %gkey, i1 zeroext %tobool543), !dbg !3325
  br label %if.end544, !dbg !3326

if.end544:                                        ; preds = %if.end542, %if.end506
  %reverse545 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 13, !dbg !3327, !ctir !93
  %301 = load i8, i8* %reverse545, align 1, !dbg !3327, !tbaa !3205
  %tobool546 = trunc i8 %301 to i1, !dbg !3327, !ctir !102
  %frombool547 = zext i1 %tobool546 to i8, !dbg !3328
  store i8 %frombool547, i8* @reverse, align 1, !dbg !3328, !tbaa !2499
  %302 = load i8, i8* %need_random, align 1, !dbg !3329, !tbaa !2499
  %tobool548 = trunc i8 %302 to i1, !dbg !3329
  br i1 %tobool548, label %if.then549, label %if.end550, !dbg !3331

if.then549:                                       ; preds = %if.end544
  %303 = load i8*, i8** %random_source, align 8, !dbg !3332, !tbaa !2355
  call void @random_md5_state_init(i8* %303), !dbg !3333
  br label %if.end550, !dbg !3333

if.end550:                                        ; preds = %if.then549, %if.end544
  %304 = load i64, i64* @temp_dir_count, align 8, !dbg !3334, !tbaa !2516
  %cmp551 = icmp eq i64 %304, 0, !dbg !3336
  br i1 %cmp551, label %if.then553, label %if.end560, !dbg !3337

if.then553:                                       ; preds = %if.end550
  call void @llvm.dbg.declare(metadata i8** %tmp_dir, metadata !3338, metadata !DIExpression()), !dbg !3340
  %call554 = call i8* @getenv(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)) #12, !dbg !3341
  store i8* %call554, i8** %tmp_dir, align 8, !dbg !3340, !tbaa !2355
  %305 = load i8*, i8** %tmp_dir, align 8, !dbg !3342, !tbaa !2355
  %tobool555 = icmp ne i8* %305, null, !dbg !3342
  br i1 %tobool555, label %cond.true556, label %cond.false557, !dbg !3342

cond.true556:                                     ; preds = %if.then553
  %306 = load i8*, i8** %tmp_dir, align 8, !dbg !3343, !tbaa !2355
  br label %cond.end558, !dbg !3342

cond.false557:                                    ; preds = %if.then553
  br label %cond.end558, !dbg !3342

cond.end558:                                      ; preds = %cond.false557, %cond.true556
  %cond559 = phi i8* [ %306, %cond.true556 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), %cond.false557 ], !dbg !3342
  call void @add_temp_dir(i8* %cond559), !dbg !3344
  br label %if.end560, !dbg !3345

if.end560:                                        ; preds = %cond.end558, %if.end550
  %307 = load i64, i64* %nfiles, align 8, !dbg !3346, !tbaa !2516
  %cmp561 = icmp eq i64 %307, 0, !dbg !3348
  br i1 %cmp561, label %if.then563, label %if.end565, !dbg !3349

if.then563:                                       ; preds = %if.end560
  store i64 1, i64* %nfiles, align 8, !dbg !3350, !tbaa !2516
  %308 = load i8**, i8*** %files, align 8, !dbg !3352, !tbaa !2355
  %309 = bitcast i8** %308 to i8*, !dbg !3352
  call void @free(i8* %309) #12, !dbg !3353
  %call564 = call noalias i8* @xmalloc(i64 8), !dbg !3354
  %310 = bitcast i8* %call564 to i8**, !dbg !3354
  store i8** %310, i8*** %files, align 8, !dbg !3355, !tbaa !2355
  %311 = load i8**, i8*** %files, align 8, !dbg !3356, !tbaa !2355
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0), i8** %311, align 8, !dbg !3357, !tbaa !2355, !ctir !7
  br label %if.end565, !dbg !3358

if.end565:                                        ; preds = %if.then563, %if.end560
  %312 = load i64, i64* @sort_size, align 8, !dbg !3359, !tbaa !2516
  %cmp566 = icmp ult i64 0, %312, !dbg !3361
  br i1 %cmp566, label %if.then568, label %if.end578, !dbg !3362

if.then568:                                       ; preds = %if.end565
  %313 = load i64, i64* @sort_size, align 8, !dbg !3363, !tbaa !2516
  %314 = load i32, i32* @nmerge, align 4, !dbg !3363, !tbaa !2342
  %conv569 = zext i32 %314 to i64, !dbg !3363
  %mul = mul i64 %conv569, 34, !dbg !3363
  %cmp570 = icmp ugt i64 %313, %mul, !dbg !3363
  br i1 %cmp570, label %cond.true572, label %cond.false573, !dbg !3363

cond.true572:                                     ; preds = %if.then568
  %315 = load i64, i64* @sort_size, align 8, !dbg !3363, !tbaa !2516
  br label %cond.end576, !dbg !3363

cond.false573:                                    ; preds = %if.then568
  %316 = load i32, i32* @nmerge, align 4, !dbg !3363, !tbaa !2342
  %conv574 = zext i32 %316 to i64, !dbg !3363
  %mul575 = mul i64 %conv574, 34, !dbg !3363
  br label %cond.end576, !dbg !3363

cond.end576:                                      ; preds = %cond.false573, %cond.true572
  %cond577 = phi i64 [ %315, %cond.true572 ], [ %mul575, %cond.false573 ], !dbg !3363
  store i64 %cond577, i64* @sort_size, align 8, !dbg !3364, !tbaa !2516
  br label %if.end578, !dbg !3365

if.end578:                                        ; preds = %cond.end576, %if.end565
  %317 = load i8, i8* %checkonly, align 1, !dbg !3366, !tbaa !2507
  %tobool579 = icmp ne i8 %317, 0, !dbg !3366
  br i1 %tobool579, label %if.then580, label %if.end596, !dbg !3368

if.then580:                                       ; preds = %if.end578
  %318 = load i64, i64* %nfiles, align 8, !dbg !3369, !tbaa !2516
  %cmp581 = icmp ugt i64 %318, 1, !dbg !3372
  br i1 %cmp581, label %if.then583, label %if.end588, !dbg !3373

if.then583:                                       ; preds = %if.then580
  %call584 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !3374
  %319 = load i8**, i8*** %files, align 8, !dbg !3374, !tbaa !2355
  %arrayidx585 = getelementptr inbounds i8*, i8** %319, i64 1, !dbg !3374, !ctir !91
  %320 = load i8*, i8** %arrayidx585, align 8, !dbg !3374, !tbaa !2355
  %call586 = call i8* @quotearg_style(i32 4, i8* %320), !dbg !3374
  %321 = load i8, i8* %checkonly, align 1, !dbg !3374, !tbaa !2507
  %conv587 = sext i8 %321 to i32, !dbg !3374
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call584, i8* %call586, i32 %conv587), !dbg !3374
  unreachable, !dbg !3374

if.end588:                                        ; preds = %if.then580
  %322 = load i8*, i8** %outfile, align 8, !dbg !3375, !tbaa !2355
  %tobool589 = icmp ne i8* %322, null, !dbg !3375
  br i1 %tobool589, label %if.then590, label %if.end591, !dbg !3377

if.then590:                                       ; preds = %if.end588
  %323 = load i8, i8* %checkonly, align 1, !dbg !3378, !tbaa !2507
  store i8 %323, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @main.opts.64, i64 0, i64 0), align 1, !dbg !3380, !tbaa !2507
  call void @incompatible_options(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @main.opts.64, i64 0, i64 0)) #15, !dbg !3381
  unreachable, !dbg !3381

if.end591:                                        ; preds = %if.end588
  %324 = load i8**, i8*** %files, align 8, !dbg !3382, !tbaa !2355
  %arrayidx592 = getelementptr inbounds i8*, i8** %324, i64 0, !dbg !3382, !ctir !91
  %325 = load i8*, i8** %arrayidx592, align 8, !dbg !3382, !tbaa !2355
  %326 = load i8, i8* %checkonly, align 1, !dbg !3383, !tbaa !2507
  %call593 = call zeroext i1 @check(i8* %325, i8 signext %326), !dbg !3384
  %327 = zext i1 %call593 to i64, !dbg !3384
  %cond595 = select i1 %call593, i32 0, i32 1, !dbg !3384
  store i32 %cond595, i32* %retval, align 4, !dbg !3385
  br label %return, !dbg !3385

if.end596:                                        ; preds = %if.end578
  %328 = load i8**, i8*** %files, align 8, !dbg !3386, !tbaa !2355
  %329 = load i64, i64* %nfiles, align 8, !dbg !3387, !tbaa !2516
  call void @check_inputs(i8** %328, i64 %329), !dbg !3388
  %330 = load i8*, i8** %outfile, align 8, !dbg !3389, !tbaa !2355
  call void @check_output(i8* %330), !dbg !3390
  %331 = load i8, i8* %mergeonly, align 1, !dbg !3391, !tbaa !2499
  %tobool597 = trunc i8 %331 to i1, !dbg !3391
  br i1 %tobool597, label %if.then598, label %if.else610, !dbg !3393

if.then598:                                       ; preds = %if.end596
  call void @llvm.dbg.declare(metadata %struct.sortfile** %sortfiles, metadata !3394, metadata !DIExpression()), !dbg !3396
  %332 = load i64, i64* %nfiles, align 8, !dbg !3397, !tbaa !2516
  %call599 = call noalias i8* @xcalloc(i64 %332, i64 16), !dbg !3398
  %333 = bitcast i8* %call599 to %struct.sortfile*, !dbg !3398
  store %struct.sortfile* %333, %struct.sortfile** %sortfiles, align 8, !dbg !3396, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %i600, metadata !3399, metadata !DIExpression()), !dbg !3401
  store i64 0, i64* %i600, align 8, !dbg !3401, !tbaa !2516
  br label %for.cond601, !dbg !3402

for.cond601:                                      ; preds = %for.inc607, %if.then598
  %334 = load i64, i64* %i600, align 8, !dbg !3403, !tbaa !2516
  %335 = load i64, i64* %nfiles, align 8, !dbg !3405, !tbaa !2516
  %cmp602 = icmp ult i64 %334, %335, !dbg !3406
  br i1 %cmp602, label %for.body604, label %for.end609, !dbg !3407

for.body604:                                      ; preds = %for.cond601
  %336 = load i8**, i8*** %files, align 8, !dbg !3408, !tbaa !2355
  %337 = load i64, i64* %i600, align 8, !dbg !3409, !tbaa !2516
  %arrayidx605 = getelementptr inbounds i8*, i8** %336, i64 %337, !dbg !3408, !ctir !91
  %338 = load i8*, i8** %arrayidx605, align 8, !dbg !3408, !tbaa !2355
  %339 = load %struct.sortfile*, %struct.sortfile** %sortfiles, align 8, !dbg !3410, !tbaa !2355
  %340 = load i64, i64* %i600, align 8, !dbg !3411, !tbaa !2516
  %arrayidx606 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %339, i64 %340, !dbg !3410, !ctir !284
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx606, i32 0, i32 0, !dbg !3412, !ctir !285
  store i8* %338, i8** %name, align 8, !dbg !3413, !tbaa !3414, !ctir !87
  br label %for.inc607, !dbg !3410

for.inc607:                                       ; preds = %for.body604
  %341 = load i64, i64* %i600, align 8, !dbg !3416, !tbaa !2516
  %inc608 = add i64 %341, 1, !dbg !3416
  store i64 %inc608, i64* %i600, align 8, !dbg !3416, !tbaa !2516
  br label %for.cond601, !dbg !3417, !llvm.loop !3418

for.end609:                                       ; preds = %for.cond601
  %342 = load %struct.sortfile*, %struct.sortfile** %sortfiles, align 8, !dbg !3420, !tbaa !2355
  %343 = load i64, i64* %nfiles, align 8, !dbg !3421, !tbaa !2516
  %344 = load i8*, i8** %outfile, align 8, !dbg !3422, !tbaa !2355
  call void @merge(%struct.sortfile* %342, i64 0, i64 %343, i8* %344), !dbg !3423
  br label %if.end627, !dbg !3424

if.else610:                                       ; preds = %if.end596
  %345 = load i64, i64* %nthreads, align 8, !dbg !3425, !tbaa !2516
  %tobool611 = icmp ne i64 %345, 0, !dbg !3425
  br i1 %tobool611, label %if.end620, label %if.then612, !dbg !3428

if.then612:                                       ; preds = %if.else610
  call void @llvm.dbg.declare(metadata i64* %np, metadata !3429, metadata !DIExpression()), !dbg !3431
  %call613 = call i64 @num_processors(i32 2), !dbg !3432
  store i64 %call613, i64* %np, align 8, !dbg !3431, !tbaa !2516
  %346 = load i64, i64* %np, align 8, !dbg !3433, !tbaa !2516
  %cmp614 = icmp ult i64 %346, 8, !dbg !3433
  br i1 %cmp614, label %cond.true616, label %cond.false617, !dbg !3433

cond.true616:                                     ; preds = %if.then612
  %347 = load i64, i64* %np, align 8, !dbg !3433, !tbaa !2516
  br label %cond.end618, !dbg !3433

cond.false617:                                    ; preds = %if.then612
  br label %cond.end618, !dbg !3433

cond.end618:                                      ; preds = %cond.false617, %cond.true616
  %cond619 = phi i64 [ %347, %cond.true616 ], [ 8, %cond.false617 ], !dbg !3433
  store i64 %cond619, i64* %nthreads, align 8, !dbg !3434, !tbaa !2516
  br label %if.end620, !dbg !3435

if.end620:                                        ; preds = %cond.end618, %if.else610
  call void @llvm.dbg.declare(metadata i64* %nthreads_max, metadata !3436, metadata !DIExpression()), !dbg !3437
  store i64 72057594037927935, i64* %nthreads_max, align 8, !dbg !3437, !tbaa !2516
  %348 = load i64, i64* %nthreads, align 8, !dbg !3438, !tbaa !2516
  %349 = load i64, i64* %nthreads_max, align 8, !dbg !3438, !tbaa !2516
  %cmp621 = icmp ult i64 %348, %349, !dbg !3438
  br i1 %cmp621, label %cond.true623, label %cond.false624, !dbg !3438

cond.true623:                                     ; preds = %if.end620
  %350 = load i64, i64* %nthreads, align 8, !dbg !3438, !tbaa !2516
  br label %cond.end625, !dbg !3438

cond.false624:                                    ; preds = %if.end620
  %351 = load i64, i64* %nthreads_max, align 8, !dbg !3438, !tbaa !2516
  br label %cond.end625, !dbg !3438

cond.end625:                                      ; preds = %cond.false624, %cond.true623
  %cond626 = phi i64 [ %350, %cond.true623 ], [ %351, %cond.false624 ], !dbg !3438
  store i64 %cond626, i64* %nthreads, align 8, !dbg !3439, !tbaa !2516
  %352 = load i8**, i8*** %files, align 8, !dbg !3440, !tbaa !2355
  %353 = load i64, i64* %nfiles, align 8, !dbg !3441, !tbaa !2516
  %354 = load i8*, i8** %outfile, align 8, !dbg !3442, !tbaa !2355
  %355 = load i64, i64* %nthreads, align 8, !dbg !3443, !tbaa !2516
  call void @sort(i8** %352, i64 %353, i8* %354, i64 %355), !dbg !3444
  br label %if.end627

if.end627:                                        ; preds = %cond.end625, %for.end609
  %356 = load i8, i8* @have_read_stdin, align 1, !dbg !3445, !tbaa !2499
  %tobool628 = trunc i8 %356 to i1, !dbg !3445
  br i1 %tobool628, label %land.lhs.true630, label %if.end636, !dbg !3447

land.lhs.true630:                                 ; preds = %if.end627
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3448, !tbaa !2355
  %call631 = call i32 @rpl_fclose(%struct._IO_FILE* %357), !dbg !3449
  %cmp632 = icmp eq i32 %call631, -1, !dbg !3450
  br i1 %cmp632, label %if.then634, label %if.end636, !dbg !3451

if.then634:                                       ; preds = %land.lhs.true630
  %call635 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !3452
  call void @sort_die(i8* %call635, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #15, !dbg !3453
  unreachable, !dbg !3453

if.end636:                                        ; preds = %land.lhs.true630, %if.end627
  store i32 0, i32* %retval, align 4, !dbg !3454
  br label %return, !dbg !3454

return:                                           ; preds = %if.end636, %if.end591
  %358 = load i32, i32* %retval, align 4, !dbg !3455
  ret i32 %358, !dbg !3455
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_exit_failure(i32 %status) #4 !dbg !3456 !ctir !83 {
entry:
  %status.addr = alloca i32, align 4, !ctir !5
  store i32 %status, i32* %status.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !3457, metadata !DIExpression()), !dbg !3458
  %0 = load i32, i32* %status.addr, align 4, !dbg !3459, !tbaa !2342
  %cmp = icmp ne i32 %0, 1, !dbg !3461
  br i1 %cmp, label %if.then, label %if.end, !dbg !3462

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !3463, !tbaa !2342
  store volatile i32 %1, i32* @exit_failure, align 4, !dbg !3464, !tbaa !2342
  br label %if.end, !dbg !3465

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3466
}

; Function Attrs: nounwind
declare dso_local %struct.lconv* @localeconv() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %ch) #4 !dbg !3467 !ctir !315 {
entry:
  %ch.addr = alloca i8, align 1, !ctir !8
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !3468, metadata !DIExpression()), !dbg !3469
  %0 = load i8, i8* %ch.addr, align 1, !dbg !3470, !tbaa !2507
  ret i8 %0, !dbg !3471
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @inittables() #4 !dbg !3472 !ctir !167 {
entry:
  %i = alloca i64, align 8, !ctir !52
  %s = alloca i8*, align 8, !ctir !87
  %s_len = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %k = alloca i64, align 8, !ctir !52
  %name = alloca i8*, align 8, !ctir !7
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3473, metadata !DIExpression()), !dbg !3474
  store i64 0, i64* %i, align 8, !dbg !3475, !tbaa !2516
  br label %for.cond, !dbg !3477

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !3478, !tbaa !2516
  %cmp = icmp ult i64 %0, 256, !dbg !3480
  br i1 %cmp, label %for.body, label %for.end, !dbg !3481

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %i, align 8, !dbg !3482, !tbaa !2516
  %conv = trunc i64 %1 to i8, !dbg !3482
  %call = call zeroext i1 @field_sep(i8 zeroext %conv), !dbg !3484
  %2 = load i64, i64* %i, align 8, !dbg !3485, !tbaa !2516
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %2, !dbg !3486, !ctir !318
  %frombool = zext i1 %call to i8, !dbg !3487
  store i8 %frombool, i8* %arrayidx, align 1, !dbg !3487, !tbaa !2499
  %call1 = call i16** @__ctype_b_loc() #16, !dbg !3488
  %3 = load i16*, i16** %call1, align 8, !dbg !3488, !tbaa !2355, !ctir !321
  %4 = load i64, i64* %i, align 8, !dbg !3488, !tbaa !2516
  %conv2 = trunc i64 %4 to i32, !dbg !3488
  %idxprom = sext i32 %conv2 to i64, !dbg !3488
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !3488, !ctir !321
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !3488, !tbaa !3489
  %conv4 = zext i16 %5 to i32, !dbg !3488
  %and = and i32 %conv4, 16384, !dbg !3488
  %tobool = icmp ne i32 %and, 0, !dbg !3491
  %lnot = xor i1 %tobool, true, !dbg !3491
  %6 = load i64, i64* %i, align 8, !dbg !3492, !tbaa !2516
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* @nonprinting, i64 0, i64 %6, !dbg !3493, !ctir !318
  %frombool6 = zext i1 %lnot to i8, !dbg !3494
  store i8 %frombool6, i8* %arrayidx5, align 1, !dbg !3494, !tbaa !2499
  %call7 = call i16** @__ctype_b_loc() #16, !dbg !3495
  %7 = load i16*, i16** %call7, align 8, !dbg !3495, !tbaa !2355, !ctir !321
  %8 = load i64, i64* %i, align 8, !dbg !3495, !tbaa !2516
  %conv8 = trunc i64 %8 to i32, !dbg !3495
  %idxprom9 = sext i32 %conv8 to i64, !dbg !3495
  %arrayidx10 = getelementptr inbounds i16, i16* %7, i64 %idxprom9, !dbg !3495, !ctir !321
  %9 = load i16, i16* %arrayidx10, align 2, !dbg !3495, !tbaa !3489
  %conv11 = zext i16 %9 to i32, !dbg !3495
  %and12 = and i32 %conv11, 8, !dbg !3495
  %tobool13 = icmp ne i32 %and12, 0, !dbg !3495
  br i1 %tobool13, label %land.end, label %land.rhs, !dbg !3496

land.rhs:                                         ; preds = %for.body
  %10 = load i64, i64* %i, align 8, !dbg !3497, !tbaa !2516
  %conv14 = trunc i64 %10 to i8, !dbg !3497
  %call15 = call zeroext i1 @field_sep(i8 zeroext %conv14), !dbg !3498
  %lnot16 = xor i1 %call15, true, !dbg !3499
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %11 = phi i1 [ false, %for.body ], [ %lnot16, %land.rhs ], !dbg !3500
  %12 = load i64, i64* %i, align 8, !dbg !3501, !tbaa !2516
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* @nondictionary, i64 0, i64 %12, !dbg !3502, !ctir !318
  %frombool18 = zext i1 %11 to i8, !dbg !3503
  store i8 %frombool18, i8* %arrayidx17, align 1, !dbg !3503, !tbaa !2499
  %13 = load i64, i64* %i, align 8, !dbg !3504, !tbaa !2516
  %conv19 = trunc i64 %13 to i32, !dbg !3504
  %call20 = call i32 @toupper(i32 %conv19) #14, !dbg !3505
  %conv21 = trunc i32 %call20 to i8, !dbg !3505
  %14 = load i64, i64* %i, align 8, !dbg !3506, !tbaa !2516
  %arrayidx22 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %14, !dbg !3507, !ctir !323
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !3508, !tbaa !2507
  br label %for.inc, !dbg !3509

for.inc:                                          ; preds = %land.end
  %15 = load i64, i64* %i, align 8, !dbg !3510, !tbaa !2516
  %inc = add i64 %15, 1, !dbg !3510
  store i64 %inc, i64* %i, align 8, !dbg !3510, !tbaa !2516
  br label %for.cond, !dbg !3511, !llvm.loop !3512

for.end:                                          ; preds = %for.cond
  %16 = load i8, i8* @hard_LC_TIME, align 1, !dbg !3514, !tbaa !2499
  %tobool23 = trunc i8 %16 to i1, !dbg !3514
  br i1 %tobool23, label %if.then, label %if.end65, !dbg !3516

if.then:                                          ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !3517, !tbaa !2516
  br label %for.cond24, !dbg !3520

for.cond24:                                       ; preds = %for.inc62, %if.then
  %17 = load i64, i64* %i, align 8, !dbg !3521, !tbaa !2516
  %cmp25 = icmp ult i64 %17, 12, !dbg !3523
  br i1 %cmp25, label %for.body27, label %for.end64, !dbg !3524

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i8** %s, metadata !3525, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.declare(metadata i64* %s_len, metadata !3528, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.declare(metadata i64* %j, metadata !3530, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.declare(metadata i64* %k, metadata !3532, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3534, metadata !DIExpression()), !dbg !3535
  %18 = load i64, i64* %i, align 8, !dbg !3536, !tbaa !2516
  %add = add i64 131086, %18, !dbg !3537
  %conv28 = trunc i64 %add to i32, !dbg !3538
  %call29 = call i8* @rpl_nl_langinfo(i32 %conv28), !dbg !3539
  store i8* %call29, i8** %s, align 8, !dbg !3540, !tbaa !2355
  %19 = load i8*, i8** %s, align 8, !dbg !3541, !tbaa !2355
  %call30 = call i64 @strlen(i8* %19) #14, !dbg !3542
  store i64 %call30, i64* %s_len, align 8, !dbg !3543, !tbaa !2516
  %20 = load i64, i64* %s_len, align 8, !dbg !3544, !tbaa !2516
  %add31 = add i64 %20, 1, !dbg !3545
  %call32 = call noalias i8* @xmalloc(i64 %add31), !dbg !3546
  store i8* %call32, i8** %name, align 8, !dbg !3547, !tbaa !2355
  %21 = load i64, i64* %i, align 8, !dbg !3548, !tbaa !2516
  %arrayidx33 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %21, !dbg !3549, !ctir !324
  %name34 = getelementptr inbounds %struct.month, %struct.month* %arrayidx33, i32 0, i32 0, !dbg !3550, !ctir !325
  store i8* %call32, i8** %name34, align 16, !dbg !3551, !tbaa !3552, !ctir !87
  %22 = load i64, i64* %i, align 8, !dbg !3554, !tbaa !2516
  %add35 = add i64 %22, 1, !dbg !3555
  %conv36 = trunc i64 %add35 to i32, !dbg !3554
  %23 = load i64, i64* %i, align 8, !dbg !3556, !tbaa !2516
  %arrayidx37 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %23, !dbg !3557, !ctir !324
  %val = getelementptr inbounds %struct.month, %struct.month* %arrayidx37, i32 0, i32 1, !dbg !3558, !ctir !325
  store i32 %conv36, i32* %val, align 8, !dbg !3559, !tbaa !3560, !ctir !5
  store i64 0, i64* %k, align 8, !dbg !3561, !tbaa !2516
  store i64 0, i64* %j, align 8, !dbg !3563, !tbaa !2516
  br label %for.cond38, !dbg !3564

for.cond38:                                       ; preds = %for.inc58, %for.body27
  %24 = load i64, i64* %j, align 8, !dbg !3565, !tbaa !2516
  %25 = load i64, i64* %s_len, align 8, !dbg !3567, !tbaa !2516
  %cmp39 = icmp ult i64 %24, %25, !dbg !3568
  br i1 %cmp39, label %for.body41, label %for.end60, !dbg !3569

for.body41:                                       ; preds = %for.cond38
  %call42 = call i16** @__ctype_b_loc() #16, !dbg !3570
  %26 = load i16*, i16** %call42, align 8, !dbg !3570, !tbaa !2355, !ctir !321
  %27 = load i8*, i8** %s, align 8, !dbg !3570, !tbaa !2355
  %28 = load i64, i64* %j, align 8, !dbg !3570, !tbaa !2516
  %arrayidx43 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !3570, !ctir !87
  %29 = load i8, i8* %arrayidx43, align 1, !dbg !3570, !tbaa !2507
  %call44 = call zeroext i8 @to_uchar(i8 signext %29), !dbg !3570
  %conv45 = zext i8 %call44 to i32, !dbg !3570
  %idxprom46 = sext i32 %conv45 to i64, !dbg !3570
  %arrayidx47 = getelementptr inbounds i16, i16* %26, i64 %idxprom46, !dbg !3570, !ctir !321
  %30 = load i16, i16* %arrayidx47, align 2, !dbg !3570, !tbaa !3489
  %conv48 = zext i16 %30 to i32, !dbg !3570
  %and49 = and i32 %conv48, 1, !dbg !3570
  %tobool50 = icmp ne i32 %and49, 0, !dbg !3570
  br i1 %tobool50, label %if.end, label %if.then51, !dbg !3572

if.then51:                                        ; preds = %for.body41
  %31 = load i8*, i8** %s, align 8, !dbg !3573, !tbaa !2355
  %32 = load i64, i64* %j, align 8, !dbg !3574, !tbaa !2516
  %arrayidx52 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !3573, !ctir !87
  %33 = load i8, i8* %arrayidx52, align 1, !dbg !3573, !tbaa !2507
  %call53 = call zeroext i8 @to_uchar(i8 signext %33), !dbg !3575
  %idxprom54 = zext i8 %call53 to i64, !dbg !3576
  %arrayidx55 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %idxprom54, !dbg !3576, !ctir !323
  %34 = load i8, i8* %arrayidx55, align 1, !dbg !3576, !tbaa !2507
  %35 = load i8*, i8** %name, align 8, !dbg !3577, !tbaa !2355
  %36 = load i64, i64* %k, align 8, !dbg !3578, !tbaa !2516
  %inc56 = add i64 %36, 1, !dbg !3578
  store i64 %inc56, i64* %k, align 8, !dbg !3578, !tbaa !2516
  %arrayidx57 = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !3577, !ctir !7
  store i8 %34, i8* %arrayidx57, align 1, !dbg !3579, !tbaa !2507
  br label %if.end, !dbg !3577

if.end:                                           ; preds = %if.then51, %for.body41
  br label %for.inc58, !dbg !3570

for.inc58:                                        ; preds = %if.end
  %37 = load i64, i64* %j, align 8, !dbg !3580, !tbaa !2516
  %inc59 = add i64 %37, 1, !dbg !3580
  store i64 %inc59, i64* %j, align 8, !dbg !3580, !tbaa !2516
  br label %for.cond38, !dbg !3581, !llvm.loop !3582

for.end60:                                        ; preds = %for.cond38
  %38 = load i8*, i8** %name, align 8, !dbg !3584, !tbaa !2355
  %39 = load i64, i64* %k, align 8, !dbg !3585, !tbaa !2516
  %arrayidx61 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !3584, !ctir !7
  store i8 0, i8* %arrayidx61, align 1, !dbg !3586, !tbaa !2507
  br label %for.inc62, !dbg !3587

for.inc62:                                        ; preds = %for.end60
  %40 = load i64, i64* %i, align 8, !dbg !3588, !tbaa !2516
  %inc63 = add i64 %40, 1, !dbg !3588
  store i64 %inc63, i64* %i, align 8, !dbg !3588, !tbaa !2516
  br label %for.cond24, !dbg !3589, !llvm.loop !3590

for.end64:                                        ; preds = %for.cond24
  call void @qsort(i8* bitcast ([12 x %struct.month]* @monthtab to i8*), i64 12, i64 16, i32 (i8*, i8*)* @struct_month_cmp), !dbg !3592
  br label %if.end65, !dbg !3593

if.end65:                                         ; preds = %for.end64, %for.end
  ret void, !dbg !3594
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighandler(i32 %sig) #4 !dbg !3595 !ctir !83 {
entry:
  %sig.addr = alloca i32, align 4, !ctir !5
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !3596, metadata !DIExpression()), !dbg !3597
  call void @cleanup(), !dbg !3598
  %0 = load i32, i32* %sig.addr, align 4, !dbg !3599, !tbaa !2342
  %call = call void (i32)* @signal(i32 %0, void (i32)* null) #12, !dbg !3600
  %1 = load i32, i32* %sig.addr, align 4, !dbg !3601, !tbaa !2342
  %call1 = call i32 @raise(i32 %1) #12, !dbg !3602
  ret void, !dbg !3603
}

; Function Attrs: nounwind
declare dso_local i32 @sigismember(%struct.__sigset_t*, i32) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @exit_cleanup() #4 !dbg !3604 !ctir !167 {
entry:
  %cs = alloca %struct.cs_status, align 8, !ctir !342
  %0 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !3605, !tbaa !2355
  %tobool = icmp ne %struct.tempnode* %0, null, !dbg !3605
  br i1 %tobool, label %if.then, label %if.end, !dbg !3607

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !3608, metadata !DIExpression()), !dbg !3610
  call void @cs_enter(%struct.cs_status* %cs), !dbg !3611
  call void @cleanup(), !dbg !3612
  call void @cs_leave(%struct.cs_status* %cs), !dbg !3613
  br label %if.end, !dbg !3614

if.end:                                           ; preds = %if.then, %entry
  call void @close_stdout(), !dbg !3615
  ret void, !dbg !3616
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.keyfield* @key_init(%struct.keyfield* %key) #4 !dbg !3617 !ctir !350 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !92
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3620, !tbaa !2355
  %1 = bitcast %struct.keyfield* %0 to i8*, !dbg !3621
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 72, i1 false), !dbg !3621
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3622, !tbaa !2355
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 2, !dbg !3623, !ctir !93
  store i64 -1, i64* %eword, align 8, !dbg !3624, !tbaa !2826, !ctir !52
  %3 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3625, !tbaa !2355
  ret %struct.keyfield* %3, !dbg !3626
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_field_count(i8* %string, i64* %val, i8* %msgid) #4 !dbg !3627 !ctir !352 {
entry:
  %retval = alloca i8*, align 8, !ctir !87
  %string.addr = alloca i8*, align 8, !ctir !87
  %val.addr = alloca i64*, align 8, !ctir !354
  %msgid.addr = alloca i8*, align 8, !ctir !87
  %suffix = alloca i8*, align 8, !ctir !7
  %n = alloca i64, align 8, !ctir !355
  store i8* %string, i8** %string.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3628, metadata !DIExpression()), !dbg !3629
  store i64* %val, i64** %val.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !3630, metadata !DIExpression()), !dbg !3631
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !3632, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !3634, metadata !DIExpression()), !dbg !3635
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3636, metadata !DIExpression()), !dbg !3637
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3638, !tbaa !2355
  %call = call i32 @xstrtoumax(i8* %0, i8** %suffix, i32 10, i64* %n, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)), !dbg !3639
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb1
    i32 4, label %sw.bb2
  ], !dbg !3640

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i64, i64* %n, align 8, !dbg !3641, !tbaa !2516
  %2 = load i64*, i64** %val.addr, align 8, !dbg !3643, !tbaa !2355
  store i64 %1, i64* %2, align 8, !dbg !3644, !tbaa !2516, !ctir !52
  %3 = load i64*, i64** %val.addr, align 8, !dbg !3645, !tbaa !2355
  %4 = load i64, i64* %3, align 8, !dbg !3647, !tbaa !2516, !ctir !52
  %5 = load i64, i64* %n, align 8, !dbg !3648, !tbaa !2516
  %cmp = icmp eq i64 %4, %5, !dbg !3649
  br i1 %cmp, label %if.then, label %if.end, !dbg !3650

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !3651

if.end:                                           ; preds = %sw.bb
  br label %sw.bb1, !dbg !3652

sw.bb1:                                           ; preds = %entry, %entry, %if.end
  %6 = load i64*, i64** %val.addr, align 8, !dbg !3653, !tbaa !2355
  store i64 -1, i64* %6, align 8, !dbg !3654, !tbaa !2516, !ctir !52
  br label %sw.epilog, !dbg !3655

sw.bb2:                                           ; preds = %entry
  %7 = load i8*, i8** %msgid.addr, align 8, !dbg !3656, !tbaa !2355
  %tobool = icmp ne i8* %7, null, !dbg !3656
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !3658

if.then3:                                         ; preds = %sw.bb2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.124, i64 0, i64 0)) #12, !dbg !3659
  %8 = load i8*, i8** %msgid.addr, align 8, !dbg !3659, !tbaa !2355
  %call5 = call i8* @gettext(i8* %8) #12, !dbg !3659
  %9 = load i8*, i8** %string.addr, align 8, !dbg !3659, !tbaa !2355
  %call6 = call i8* @quote(i8* %9), !dbg !3659
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call4, i8* %call5, i8* %call6), !dbg !3659
  unreachable, !dbg !3659

if.end7:                                          ; preds = %sw.bb2
  store i8* null, i8** %retval, align 8, !dbg !3660
  br label %return, !dbg !3660

sw.epilog:                                        ; preds = %entry, %sw.bb1, %if.then
  %10 = load i8*, i8** %suffix, align 8, !dbg !3661, !tbaa !2355
  store i8* %10, i8** %retval, align 8, !dbg !3662
  br label %return, !dbg !3662

return:                                           ; preds = %sw.epilog, %if.end7
  %11 = load i8*, i8** %retval, align 8, !dbg !3663
  ret i8* %11, !dbg !3663
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @set_ordering(i8* %s, %struct.keyfield* %key, i32 %blanktype) #4 !dbg !3664 !ctir !357 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %s.addr = alloca i8*, align 8, !ctir !87
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !92
  %blanktype.addr = alloca i32, align 4, !ctir !65
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !3667, metadata !DIExpression()), !dbg !3668
  store i32 %blanktype, i32* %blanktype.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %blanktype.addr, metadata !3669, metadata !DIExpression()), !dbg !3670
  br label %while.cond, !dbg !3671

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3672, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !3673, !tbaa !2507, !ctir !88
  %tobool = icmp ne i8 %1, 0, !dbg !3671
  br i1 %tobool, label %while.body, label %while.end, !dbg !3671

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !3674, !tbaa !2355
  %3 = load i8, i8* %2, align 1, !dbg !3676, !tbaa !2507, !ctir !88
  %conv = sext i8 %3 to i32, !dbg !3676
  switch i32 %conv, label %sw.default [
    i32 98, label %sw.bb
    i32 100, label %sw.bb11
    i32 102, label %sw.bb12
    i32 103, label %sw.bb13
    i32 104, label %sw.bb14
    i32 105, label %sw.bb15
    i32 77, label %sw.bb21
    i32 110, label %sw.bb22
    i32 82, label %sw.bb23
    i32 114, label %sw.bb24
    i32 86, label %sw.bb25
  ], !dbg !3677

sw.bb:                                            ; preds = %while.body
  %4 = load i32, i32* %blanktype.addr, align 4, !dbg !3678, !tbaa !2507
  %cmp = icmp eq i32 %4, 0, !dbg !3681
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3682

lor.lhs.false:                                    ; preds = %sw.bb
  %5 = load i32, i32* %blanktype.addr, align 4, !dbg !3683, !tbaa !2507
  %cmp2 = icmp eq i32 %5, 2, !dbg !3684
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3685

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %6 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3686, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 6, !dbg !3687, !ctir !93
  store i8 1, i8* %skipsblanks, align 8, !dbg !3688, !tbaa !3219, !ctir !102
  br label %if.end, !dbg !3686

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %7 = load i32, i32* %blanktype.addr, align 4, !dbg !3689, !tbaa !2507
  %cmp4 = icmp eq i32 %7, 1, !dbg !3691
  br i1 %cmp4, label %if.then9, label %lor.lhs.false6, !dbg !3692

lor.lhs.false6:                                   ; preds = %if.end
  %8 = load i32, i32* %blanktype.addr, align 4, !dbg !3693, !tbaa !2507
  %cmp7 = icmp eq i32 %8, 2, !dbg !3694
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !3695

if.then9:                                         ; preds = %lor.lhs.false6, %if.end
  %9 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3696, !tbaa !2355
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 7, !dbg !3697, !ctir !93
  store i8 1, i8* %skipeblanks, align 1, !dbg !3698, !tbaa !3224, !ctir !102
  br label %if.end10, !dbg !3696

if.end10:                                         ; preds = %if.then9, %lor.lhs.false6
  br label %sw.epilog, !dbg !3699

sw.bb11:                                          ; preds = %while.body
  %10 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3700, !tbaa !2355
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %10, i32 0, i32 4, !dbg !3701, !ctir !93
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nondictionary, i64 0, i64 0), i8** %ignore, align 8, !dbg !3702, !tbaa !3209, !ctir !100
  br label %sw.epilog, !dbg !3703

sw.bb12:                                          ; preds = %while.body
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3704, !tbaa !2355
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 5, !dbg !3705, !ctir !93
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 0), i8** %translate, align 8, !dbg !3706, !tbaa !3214, !ctir !87
  br label %sw.epilog, !dbg !3707

sw.bb13:                                          ; preds = %while.body
  %12 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3708, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %12, i32 0, i32 10, !dbg !3709, !ctir !93
  store i8 1, i8* %general_numeric, align 4, !dbg !3710, !tbaa !3239, !ctir !102
  br label %sw.epilog, !dbg !3711

sw.bb14:                                          ; preds = %while.body
  %13 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3712, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %13, i32 0, i32 11, !dbg !3713, !ctir !93
  store i8 1, i8* %human_numeric, align 1, !dbg !3714, !tbaa !3244, !ctir !102
  br label %sw.epilog, !dbg !3715

sw.bb15:                                          ; preds = %while.body
  %14 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3716, !tbaa !2355
  %ignore16 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %14, i32 0, i32 4, !dbg !3718, !ctir !93
  %15 = load i8*, i8** %ignore16, align 8, !dbg !3718, !tbaa !3209, !ctir !100
  %tobool17 = icmp ne i8* %15, null, !dbg !3716
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !3719

if.then18:                                        ; preds = %sw.bb15
  %16 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3720, !tbaa !2355
  %ignore19 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %16, i32 0, i32 4, !dbg !3721, !ctir !93
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nonprinting, i64 0, i64 0), i8** %ignore19, align 8, !dbg !3722, !tbaa !3209, !ctir !100
  br label %if.end20, !dbg !3720

if.end20:                                         ; preds = %if.then18, %sw.bb15
  br label %sw.epilog, !dbg !3723

sw.bb21:                                          ; preds = %while.body
  %17 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3724, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 12, !dbg !3725, !ctir !93
  store i8 1, i8* %month, align 2, !dbg !3726, !tbaa !3229, !ctir !102
  br label %sw.epilog, !dbg !3727

sw.bb22:                                          ; preds = %while.body
  %18 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3728, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %18, i32 0, i32 8, !dbg !3729, !ctir !93
  store i8 1, i8* %numeric, align 2, !dbg !3730, !tbaa !3234, !ctir !102
  br label %sw.epilog, !dbg !3731

sw.bb23:                                          ; preds = %while.body
  %19 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3732, !tbaa !2355
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %19, i32 0, i32 9, !dbg !3733, !ctir !93
  store i8 1, i8* %random, align 1, !dbg !3734, !tbaa !3254, !ctir !102
  br label %sw.epilog, !dbg !3735

sw.bb24:                                          ; preds = %while.body
  %20 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3736, !tbaa !2355
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %20, i32 0, i32 13, !dbg !3737, !ctir !93
  store i8 1, i8* %reverse, align 1, !dbg !3738, !tbaa !3205, !ctir !102
  br label %sw.epilog, !dbg !3739

sw.bb25:                                          ; preds = %while.body
  %21 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3740, !tbaa !2355
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %21, i32 0, i32 14, !dbg !3741, !ctir !93
  store i8 1, i8* %version, align 8, !dbg !3742, !tbaa !3249, !ctir !102
  br label %sw.epilog, !dbg !3743

sw.default:                                       ; preds = %while.body
  %22 = load i8*, i8** %s.addr, align 8, !dbg !3744, !tbaa !2355
  store i8* %22, i8** %retval, align 8, !dbg !3745
  br label %return, !dbg !3745

sw.epilog:                                        ; preds = %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %if.end20, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %if.end10
  %23 = load i8*, i8** %s.addr, align 8, !dbg !3746, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !3746
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !3746, !tbaa !2355
  br label %while.cond, !dbg !3671, !llvm.loop !3747

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %s.addr, align 8, !dbg !3749, !tbaa !2355
  store i8* %24, i8** %retval, align 8, !dbg !3750
  br label %return, !dbg !3750

return:                                           ; preds = %while.end, %sw.default
  %25 = load i8*, i8** %retval, align 8, !dbg !3751
  ret i8* %25, !dbg !3751
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @badfieldspec(i8* %spec, i8* %msgid) #0 !dbg !3752 !ctir !359 {
entry:
  %spec.addr = alloca i8*, align 8, !ctir !87
  %msgid.addr = alloca i8*, align 8, !ctir !87
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !3753, metadata !DIExpression()), !dbg !3754
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !3755, metadata !DIExpression()), !dbg !3756
  %call = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.125, i64 0, i64 0)) #12, !dbg !3757
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !3757, !tbaa !2355
  %call1 = call i8* @gettext(i8* %0) #12, !dbg !3757
  %1 = load i8*, i8** %spec.addr, align 8, !dbg !3757, !tbaa !2355
  %call2 = call i8* @quote(i8* %1), !dbg !3757
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call, i8* %call1, i8* %call2), !dbg !3757
  unreachable, !dbg !3757
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @insertkey(%struct.keyfield* %key_arg) #4 !dbg !3758 !ctir !361 {
entry:
  %key_arg.addr = alloca %struct.keyfield*, align 8, !ctir !92
  %p = alloca %struct.keyfield**, align 8, !ctir !363
  %key = alloca %struct.keyfield*, align 8, !ctir !92
  store %struct.keyfield* %key_arg, %struct.keyfield** %key_arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key_arg.addr, metadata !3759, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.declare(metadata %struct.keyfield*** %p, metadata !3761, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !3763, metadata !DIExpression()), !dbg !3764
  %0 = load %struct.keyfield*, %struct.keyfield** %key_arg.addr, align 8, !dbg !3765, !tbaa !2355
  %1 = bitcast %struct.keyfield* %0 to i8*, !dbg !3765
  %call = call i8* @xmemdup(i8* %1, i64 72), !dbg !3766
  %2 = bitcast i8* %call to %struct.keyfield*, !dbg !3766
  store %struct.keyfield* %2, %struct.keyfield** %key, align 8, !dbg !3764, !tbaa !2355
  store %struct.keyfield** @keylist, %struct.keyfield*** %p, align 8, !dbg !3767, !tbaa !2355
  br label %for.cond, !dbg !3769

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.keyfield**, %struct.keyfield*** %p, align 8, !dbg !3770, !tbaa !2355
  %4 = load %struct.keyfield*, %struct.keyfield** %3, align 8, !dbg !3772, !tbaa !2355, !ctir !92
  %tobool = icmp ne %struct.keyfield* %4, null, !dbg !3773
  br i1 %tobool, label %for.body, label %for.end, !dbg !3773

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !3774

for.inc:                                          ; preds = %for.body
  %5 = load %struct.keyfield**, %struct.keyfield*** %p, align 8, !dbg !3775, !tbaa !2355
  %6 = load %struct.keyfield*, %struct.keyfield** %5, align 8, !dbg !3776, !tbaa !2355, !ctir !92
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 16, !dbg !3777, !ctir !93
  store %struct.keyfield** %next, %struct.keyfield*** %p, align 8, !dbg !3778, !tbaa !2355
  br label %for.cond, !dbg !3779, !llvm.loop !3780

for.end:                                          ; preds = %for.cond
  %7 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3782, !tbaa !2355
  %8 = load %struct.keyfield**, %struct.keyfield*** %p, align 8, !dbg !3783, !tbaa !2355
  store %struct.keyfield* %7, %struct.keyfield** %8, align 8, !dbg !3784, !tbaa !2355, !ctir !92
  %9 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3785, !tbaa !2355
  %next1 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 16, !dbg !3786, !ctir !93
  store %struct.keyfield* null, %struct.keyfield** %next1, align 8, !dbg !3787, !tbaa !3269, !ctir !92
  ret void, !dbg !3788
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @incompatible_options(i8* %opts) #0 !dbg !3789 !ctir !302 {
entry:
  %opts.addr = alloca i8*, align 8, !ctir !87
  store i8* %opts, i8** %opts.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %opts.addr, metadata !3790, metadata !DIExpression()), !dbg !3791
  %call = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.134, i64 0, i64 0)) #12, !dbg !3792
  %0 = load i8*, i8** %opts.addr, align 8, !dbg !3792, !tbaa !2355
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call, i8* %0), !dbg !3792
  unreachable, !dbg !3792
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @specify_nmerge(i32 %oi, i8 signext %c, i8* %s) #4 !dbg !3793 !ctir !364 {
entry:
  %oi.addr = alloca i32, align 4, !ctir !5
  %c.addr = alloca i8, align 1, !ctir !8
  %s.addr = alloca i8*, align 8, !ctir !87
  %n = alloca i64, align 8, !ctir !355
  %rlimit = alloca %struct.timespec, align 8, !ctir !3794
  %e = alloca i32, align 4, !ctir !71
  %max_nmerge = alloca i32, align 4, !ctir !66
  %max_nmerge_buf = alloca [11 x i8], align 1, !ctir !369
  store i32 %oi, i32* %oi.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %oi.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3804, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.declare(metadata %struct.timespec* %rlimit, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3808, metadata !DIExpression()), !dbg !3809
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3810, !tbaa !2355
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 10, i64* %n, i8* null), !dbg !3811
  store i32 %call, i32* %e, align 4, !dbg !3809, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %max_nmerge, metadata !3812, metadata !DIExpression()), !dbg !3813
  %call1 = call i32 @getrlimit(i32 7, %struct.timespec* %rlimit) #12, !dbg !3814
  %cmp = icmp eq i32 %call1, 0, !dbg !3815
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3814

cond.true:                                        ; preds = %entry
  %rlim_cur = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !3816, !ctir !3794
  %1 = load i64, i64* %rlim_cur, align 8, !dbg !3816, !tbaa !3817, !ctir !366
  br label %cond.end, !dbg !3814

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3814

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %1, %cond.true ], [ 20, %cond.false ], !dbg !3814
  %sub = sub i64 %cond, 3, !dbg !3819
  %conv = trunc i64 %sub to i32, !dbg !3820
  store i32 %conv, i32* %max_nmerge, align 4, !dbg !3813, !tbaa !2342
  %2 = load i32, i32* %e, align 4, !dbg !3821, !tbaa !2507
  %cmp2 = icmp eq i32 %2, 0, !dbg !3823
  br i1 %cmp2, label %if.then, label %if.end26, !dbg !3824

if.then:                                          ; preds = %cond.end
  %3 = load i64, i64* %n, align 8, !dbg !3825, !tbaa !2516
  %conv4 = trunc i64 %3 to i32, !dbg !3825
  store i32 %conv4, i32* @nmerge, align 4, !dbg !3827, !tbaa !2342
  %4 = load i32, i32* @nmerge, align 4, !dbg !3828, !tbaa !2342
  %conv5 = zext i32 %4 to i64, !dbg !3828
  %5 = load i64, i64* %n, align 8, !dbg !3830, !tbaa !2516
  %cmp6 = icmp ne i64 %conv5, %5, !dbg !3831
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !3832

if.then8:                                         ; preds = %if.then
  store i32 1, i32* %e, align 4, !dbg !3833, !tbaa !2507
  br label %if.end25, !dbg !3834

if.else:                                          ; preds = %if.then
  %6 = load i32, i32* @nmerge, align 4, !dbg !3835, !tbaa !2342
  %cmp9 = icmp ult i32 %6, 2, !dbg !3838
  br i1 %cmp9, label %if.then11, label %if.else19, !dbg !3839

if.then11:                                        ; preds = %if.else
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.135, i64 0, i64 0)) #12, !dbg !3840
  %7 = load i32, i32* %oi.addr, align 4, !dbg !3842, !tbaa !2342
  %idxprom = sext i32 %7 to i64, !dbg !3843
  %arrayidx = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom, !dbg !3843, !ctir !249
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx, i32 0, i32 0, !dbg !3844, !ctir !250
  %8 = load i8*, i8** %name, align 16, !dbg !3844, !tbaa !3845, !ctir !87
  %9 = load i8*, i8** %s.addr, align 8, !dbg !3847, !tbaa !2355
  %call13 = call i8* @quote(i8* %9), !dbg !3848
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call12, i8* %8, i8* %call13), !dbg !3849
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.136, i64 0, i64 0)) #12, !dbg !3850
  %10 = load i32, i32* %oi.addr, align 4, !dbg !3850, !tbaa !2342
  %idxprom15 = sext i32 %10 to i64, !dbg !3850
  %arrayidx16 = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom15, !dbg !3850, !ctir !249
  %name17 = getelementptr inbounds %struct.option, %struct.option* %arrayidx16, i32 0, i32 0, !dbg !3850, !ctir !250
  %11 = load i8*, i8** %name17, align 16, !dbg !3850, !tbaa !3845, !ctir !87
  %call18 = call i8* @quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.137, i64 0, i64 0)), !dbg !3850
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call14, i8* %11, i8* %call18), !dbg !3850
  unreachable, !dbg !3850

if.else19:                                        ; preds = %if.else
  %12 = load i32, i32* %max_nmerge, align 4, !dbg !3851, !tbaa !2342
  %13 = load i32, i32* @nmerge, align 4, !dbg !3853, !tbaa !2342
  %cmp20 = icmp ult i32 %12, %13, !dbg !3854
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !3855

if.then22:                                        ; preds = %if.else19
  store i32 1, i32* %e, align 4, !dbg !3856, !tbaa !2507
  br label %if.end, !dbg !3858

if.else23:                                        ; preds = %if.else19
  ret void, !dbg !3859

if.end:                                           ; preds = %if.then22
  br label %if.end24

if.end24:                                         ; preds = %if.end
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then8
  br label %if.end26, !dbg !3860

if.end26:                                         ; preds = %if.end25, %cond.end
  %14 = load i32, i32* %e, align 4, !dbg !3861, !tbaa !2507
  %cmp27 = icmp eq i32 %14, 1, !dbg !3863
  br i1 %cmp27, label %if.then29, label %if.else40, !dbg !3864

if.then29:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata [11 x i8]* %max_nmerge_buf, metadata !3865, metadata !DIExpression()), !dbg !3867
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.138, i64 0, i64 0)) #12, !dbg !3868
  %15 = load i32, i32* %oi.addr, align 4, !dbg !3869, !tbaa !2342
  %idxprom31 = sext i32 %15 to i64, !dbg !3870
  %arrayidx32 = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom31, !dbg !3870, !ctir !249
  %name33 = getelementptr inbounds %struct.option, %struct.option* %arrayidx32, i32 0, i32 0, !dbg !3871, !ctir !250
  %16 = load i8*, i8** %name33, align 16, !dbg !3871, !tbaa !3845, !ctir !87
  %17 = load i8*, i8** %s.addr, align 8, !dbg !3872, !tbaa !2355
  %call34 = call i8* @quote(i8* %17), !dbg !3873
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call30, i8* %16, i8* %call34), !dbg !3874
  %call35 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.139, i64 0, i64 0)) #12, !dbg !3875
  %18 = load i32, i32* %oi.addr, align 4, !dbg !3875, !tbaa !2342
  %idxprom36 = sext i32 %18 to i64, !dbg !3875
  %arrayidx37 = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom36, !dbg !3875, !ctir !249
  %name38 = getelementptr inbounds %struct.option, %struct.option* %arrayidx37, i32 0, i32 0, !dbg !3875, !ctir !250
  %19 = load i8*, i8** %name38, align 16, !dbg !3875, !tbaa !3845, !ctir !87
  %20 = load i32, i32* %max_nmerge, align 4, !dbg !3875, !tbaa !2342
  %arraydecay = getelementptr inbounds [11 x i8], [11 x i8]* %max_nmerge_buf, i64 0, i64 0, !dbg !3875
  %call39 = call i8* @uinttostr(i32 %20, i8* %arraydecay), !dbg !3875
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call35, i8* %19, i8* %call39), !dbg !3875
  unreachable, !dbg !3875

if.else40:                                        ; preds = %if.end26
  %21 = load i32, i32* %e, align 4, !dbg !3876, !tbaa !2507
  %22 = load i32, i32* %oi.addr, align 4, !dbg !3877, !tbaa !2342
  %23 = load i8, i8* %c.addr, align 1, !dbg !3878, !tbaa !2507
  %24 = load i8*, i8** %s.addr, align 8, !dbg !3879, !tbaa !2355
  call void @xstrtol_fatal(i32 %21, i32 %22, i8 signext %23, %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i8* %24) #15, !dbg !3880
  unreachable, !dbg !3880
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @specify_sort_size(i32 %oi, i8 signext %c, i8* %s) #4 !dbg !3881 !ctir !364 {
entry:
  %oi.addr = alloca i32, align 4, !ctir !5
  %c.addr = alloca i8, align 1, !ctir !8
  %s.addr = alloca i8*, align 8, !ctir !87
  %n = alloca i64, align 8, !ctir !355
  %suffix = alloca i8*, align 8, !ctir !7
  %e = alloca i32, align 4, !ctir !71
  %mem = alloca double, align 8, !ctir !370
  store i32 %oi, i32* %oi.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %oi.addr, metadata !3882, metadata !DIExpression()), !dbg !3883
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3884, metadata !DIExpression()), !dbg !3885
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3886, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3888, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !3890, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3892, metadata !DIExpression()), !dbg !3893
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3894, !tbaa !2355
  %call = call i32 @xstrtoumax(i8* %0, i8** %suffix, i32 10, i64* %n, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i64 0, i64 0)), !dbg !3895
  store i32 %call, i32* %e, align 4, !dbg !3893, !tbaa !2507
  %1 = load i32, i32* %e, align 4, !dbg !3896, !tbaa !2507
  %cmp = icmp eq i32 %1, 0, !dbg !3898
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !3899

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %suffix, align 8, !dbg !3900, !tbaa !2355
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 -1, !dbg !3900, !ctir !7
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3900, !tbaa !2507
  %conv = sext i8 %3 to i32, !dbg !3900
  %sub = sub i32 %conv, 48, !dbg !3900
  %cmp1 = icmp ule i32 %sub, 9, !dbg !3900
  br i1 %cmp1, label %if.then, label %if.end6, !dbg !3901

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, i64* %n, align 8, !dbg !3902, !tbaa !2516
  %cmp3 = icmp ule i64 %4, 18014398509481983, !dbg !3905
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3906

if.then5:                                         ; preds = %if.then
  %5 = load i64, i64* %n, align 8, !dbg !3907, !tbaa !2516
  %mul = mul i64 %5, 1024, !dbg !3907
  store i64 %mul, i64* %n, align 8, !dbg !3907, !tbaa !2516
  br label %if.end, !dbg !3908

if.else:                                          ; preds = %if.then
  store i32 1, i32* %e, align 4, !dbg !3909, !tbaa !2507
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end6, !dbg !3910

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %6 = load i32, i32* %e, align 4, !dbg !3911, !tbaa !2507
  %cmp7 = icmp eq i32 %6, 2, !dbg !3913
  br i1 %cmp7, label %land.lhs.true9, label %if.end30, !dbg !3914

land.lhs.true9:                                   ; preds = %if.end6
  %7 = load i8*, i8** %suffix, align 8, !dbg !3915, !tbaa !2355
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 -1, !dbg !3915, !ctir !7
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !3915, !tbaa !2507
  %conv11 = sext i8 %8 to i32, !dbg !3915
  %sub12 = sub i32 %conv11, 48, !dbg !3915
  %cmp13 = icmp ule i32 %sub12, 9, !dbg !3915
  br i1 %cmp13, label %land.lhs.true15, label %if.end30, !dbg !3916

land.lhs.true15:                                  ; preds = %land.lhs.true9
  %9 = load i8*, i8** %suffix, align 8, !dbg !3917, !tbaa !2355
  %arrayidx16 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !3917, !ctir !7
  %10 = load i8, i8* %arrayidx16, align 1, !dbg !3917, !tbaa !2507
  %tobool = icmp ne i8 %10, 0, !dbg !3917
  br i1 %tobool, label %if.end30, label %if.then17, !dbg !3918

if.then17:                                        ; preds = %land.lhs.true15
  %11 = load i8*, i8** %suffix, align 8, !dbg !3919, !tbaa !2355
  %arrayidx18 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !3919, !ctir !7
  %12 = load i8, i8* %arrayidx18, align 1, !dbg !3919, !tbaa !2507
  %conv19 = sext i8 %12 to i32, !dbg !3919
  switch i32 %conv19, label %sw.epilog [
    i32 98, label %sw.bb
    i32 37, label %sw.bb20
  ], !dbg !3920

sw.bb:                                            ; preds = %if.then17
  store i32 0, i32* %e, align 4, !dbg !3921, !tbaa !2507
  br label %sw.epilog, !dbg !3923

sw.bb20:                                          ; preds = %if.then17
  call void @llvm.dbg.declare(metadata double* %mem, metadata !3924, metadata !DIExpression()), !dbg !3926
  %call21 = call double @physmem_total(), !dbg !3927
  %13 = load i64, i64* %n, align 8, !dbg !3928, !tbaa !2516
  %conv22 = uitofp i64 %13 to double, !dbg !3928
  %mul23 = fmul double %call21, %conv22, !dbg !3929
  %div = fdiv double %mul23, 1.000000e+02, !dbg !3930
  store double %div, double* %mem, align 8, !dbg !3926, !tbaa !3931
  %14 = load double, double* %mem, align 8, !dbg !3933, !tbaa !3931
  %cmp24 = fcmp olt double %14, 0x43F0000000000000, !dbg !3935
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !3936

if.then26:                                        ; preds = %sw.bb20
  %15 = load double, double* %mem, align 8, !dbg !3937, !tbaa !3931
  %conv27 = fptoui double %15 to i64, !dbg !3937
  store i64 %conv27, i64* %n, align 8, !dbg !3939, !tbaa !2516
  store i32 0, i32* %e, align 4, !dbg !3940, !tbaa !2507
  br label %if.end29, !dbg !3941

if.else28:                                        ; preds = %sw.bb20
  store i32 1, i32* %e, align 4, !dbg !3942, !tbaa !2507
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then26
  br label %sw.epilog, !dbg !3943

sw.epilog:                                        ; preds = %if.then17, %if.end29, %sw.bb
  br label %if.end30, !dbg !3944

if.end30:                                         ; preds = %sw.epilog, %land.lhs.true15, %land.lhs.true9, %if.end6
  %16 = load i32, i32* %e, align 4, !dbg !3945, !tbaa !2507
  %cmp31 = icmp eq i32 %16, 0, !dbg !3947
  br i1 %cmp31, label %if.then33, label %if.end48, !dbg !3948

if.then33:                                        ; preds = %if.end30
  %17 = load i64, i64* %n, align 8, !dbg !3949, !tbaa !2516
  %18 = load i64, i64* @sort_size, align 8, !dbg !3952, !tbaa !2516
  %cmp34 = icmp ult i64 %17, %18, !dbg !3953
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3954

if.then36:                                        ; preds = %if.then33
  br label %return, !dbg !3955

if.end37:                                         ; preds = %if.then33
  %19 = load i64, i64* %n, align 8, !dbg !3956, !tbaa !2516
  store i64 %19, i64* @sort_size, align 8, !dbg !3957, !tbaa !2516
  %20 = load i64, i64* @sort_size, align 8, !dbg !3958, !tbaa !2516
  %21 = load i64, i64* %n, align 8, !dbg !3960, !tbaa !2516
  %cmp38 = icmp eq i64 %20, %21, !dbg !3961
  br i1 %cmp38, label %if.then40, label %if.end47, !dbg !3962

if.then40:                                        ; preds = %if.end37
  %22 = load i64, i64* @sort_size, align 8, !dbg !3963, !tbaa !2516
  %23 = load i32, i32* @nmerge, align 4, !dbg !3963, !tbaa !2342
  %conv41 = zext i32 %23 to i64, !dbg !3963
  %mul42 = mul i64 %conv41, 34, !dbg !3963
  %cmp43 = icmp ugt i64 %22, %mul42, !dbg !3963
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !3963

cond.true:                                        ; preds = %if.then40
  %24 = load i64, i64* @sort_size, align 8, !dbg !3963, !tbaa !2516
  br label %cond.end, !dbg !3963

cond.false:                                       ; preds = %if.then40
  %25 = load i32, i32* @nmerge, align 4, !dbg !3963, !tbaa !2342
  %conv45 = zext i32 %25 to i64, !dbg !3963
  %mul46 = mul i64 %conv45, 34, !dbg !3963
  br label %cond.end, !dbg !3963

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %24, %cond.true ], [ %mul46, %cond.false ], !dbg !3963
  store i64 %cond, i64* @sort_size, align 8, !dbg !3965, !tbaa !2516
  br label %return, !dbg !3966

if.end47:                                         ; preds = %if.end37
  store i32 1, i32* %e, align 4, !dbg !3967, !tbaa !2507
  br label %if.end48, !dbg !3968

if.end48:                                         ; preds = %if.end47, %if.end30
  %26 = load i32, i32* %e, align 4, !dbg !3969, !tbaa !2507
  %27 = load i32, i32* %oi.addr, align 4, !dbg !3970, !tbaa !2342
  %28 = load i8, i8* %c.addr, align 1, !dbg !3971, !tbaa !2507
  %29 = load i8*, i8** %s.addr, align 8, !dbg !3972, !tbaa !2355
  call void @xstrtol_fatal(i32 %26, i32 %27, i8 signext %28, %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i8* %29) #15, !dbg !3973
  unreachable, !dbg !3973

return:                                           ; preds = %cond.end, %if.then36
  ret void, !dbg !3974
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_temp_dir(i8* %dir) #4 !dbg !3975 !ctir !302 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !87
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3976, metadata !DIExpression()), !dbg !3977
  %0 = load i64, i64* @temp_dir_count, align 8, !dbg !3978, !tbaa !2516
  %1 = load i64, i64* @temp_dir_alloc, align 8, !dbg !3980, !tbaa !2516
  %cmp = icmp eq i64 %0, %1, !dbg !3981
  br i1 %cmp, label %if.then, label %if.end, !dbg !3982

if.then:                                          ; preds = %entry
  %2 = load i8**, i8*** @temp_dirs, align 8, !dbg !3983, !tbaa !2355
  %3 = bitcast i8** %2 to i8*, !dbg !3983
  %call = call i8* @x2nrealloc(i8* %3, i64* @temp_dir_alloc, i64 8), !dbg !3983
  %4 = bitcast i8* %call to i8**, !dbg !3983
  store i8** %4, i8*** @temp_dirs, align 8, !dbg !3984, !tbaa !2355
  br label %if.end, !dbg !3985

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !3986, !tbaa !2355
  %6 = load i8**, i8*** @temp_dirs, align 8, !dbg !3987, !tbaa !2355
  %7 = load i64, i64* @temp_dir_count, align 8, !dbg !3988, !tbaa !2516
  %inc = add i64 %7, 1, !dbg !3988
  store i64 %inc, i64* @temp_dir_count, align 8, !dbg !3988, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !3987, !ctir !371
  store i8* %5, i8** %arrayidx, align 8, !dbg !3989, !tbaa !2355
  ret void, !dbg !3990
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @specify_nthreads(i32 %oi, i8 signext %c, i8* %s) #4 !dbg !3991 !ctir !372 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %oi.addr = alloca i32, align 4, !ctir !5
  %c.addr = alloca i8, align 1, !ctir !8
  %s.addr = alloca i8*, align 8, !ctir !87
  %nthreads = alloca i64, align 8, !ctir !54
  %e = alloca i32, align 4, !ctir !71
  store i32 %oi, i32* %oi.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %oi.addr, metadata !3992, metadata !DIExpression()), !dbg !3993
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3996, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.declare(metadata i64* %nthreads, metadata !3998, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4000, metadata !DIExpression()), !dbg !4001
  %0 = load i8*, i8** %s.addr, align 8, !dbg !4002, !tbaa !2355
  %call = call i32 @xstrtoul(i8* %0, i8** null, i32 10, i64* %nthreads, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)), !dbg !4003
  store i32 %call, i32* %e, align 4, !dbg !4001, !tbaa !2507
  %1 = load i32, i32* %e, align 4, !dbg !4004, !tbaa !2507
  %cmp = icmp eq i32 %1, 1, !dbg !4006
  br i1 %cmp, label %if.then, label %if.end, !dbg !4007

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !4008
  br label %return, !dbg !4008

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %e, align 4, !dbg !4009, !tbaa !2507
  %cmp1 = icmp ne i32 %2, 0, !dbg !4011
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4012

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %e, align 4, !dbg !4013, !tbaa !2507
  %4 = load i32, i32* %oi.addr, align 4, !dbg !4014, !tbaa !2342
  %5 = load i8, i8* %c.addr, align 1, !dbg !4015, !tbaa !2507
  %6 = load i8*, i8** %s.addr, align 8, !dbg !4016, !tbaa !2355
  call void @xstrtol_fatal(i32 %3, i32 %4, i8 signext %5, %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i8* %6) #15, !dbg !4017
  unreachable, !dbg !4017

if.end3:                                          ; preds = %if.end
  %7 = load i64, i64* %nthreads, align 8, !dbg !4018, !tbaa !2516
  %cmp4 = icmp ult i64 -1, %7, !dbg !4020
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4021

if.then5:                                         ; preds = %if.end3
  store i64 -1, i64* %nthreads, align 8, !dbg !4022, !tbaa !2516
  br label %if.end6, !dbg !4023

if.end6:                                          ; preds = %if.then5, %if.end3
  %8 = load i64, i64* %nthreads, align 8, !dbg !4024, !tbaa !2516
  %cmp7 = icmp eq i64 %8, 0, !dbg !4026
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !4027

if.then8:                                         ; preds = %if.end6
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.141, i64 0, i64 0)) #12, !dbg !4028
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call9), !dbg !4028
  unreachable, !dbg !4028

if.end10:                                         ; preds = %if.end6
  %9 = load i64, i64* %nthreads, align 8, !dbg !4029, !tbaa !2516
  store i64 %9, i64* %retval, align 8, !dbg !4030
  br label %return, !dbg !4030

return:                                           ; preds = %if.end10, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !4031
  ret i64 %10, !dbg !4031
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @xfopen(i8* %file, i8* %how) #4 !dbg !4032 !ctir !374 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !87
  %how.addr = alloca i8*, align 8, !ctir !87
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !277
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4033, metadata !DIExpression()), !dbg !4034
  store i8* %how, i8** %how.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %how.addr, metadata !4035, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !4037, metadata !DIExpression()), !dbg !4038
  %0 = load i8*, i8** %file.addr, align 8, !dbg !4039, !tbaa !2355
  %1 = load i8*, i8** %how.addr, align 8, !dbg !4040, !tbaa !2355
  %call = call %struct._IO_FILE* @stream_open(i8* %0, i8* %1), !dbg !4041
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !4038, !tbaa !2355
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4042, !tbaa !2355
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !4042
  br i1 %tobool, label %if.end, label %if.then, !dbg !4044

if.then:                                          ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4045
  %3 = load i8*, i8** %file.addr, align 8, !dbg !4046, !tbaa !2355
  call void @sort_die(i8* %call1, i8* %3) #15, !dbg !4047
  unreachable, !dbg !4047

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4048, !tbaa !2355
  ret %struct._IO_FILE* %4, !dbg !4049
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xfclose(%struct._IO_FILE* %fp, i8* %file) #4 !dbg !4050 !ctir !412 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %file.addr = alloca i8*, align 8, !ctir !87
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4053, metadata !DIExpression()), !dbg !4054
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4055, !tbaa !2355
  %call = call i32 @fileno(%struct._IO_FILE* %0) #12, !dbg !4056
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !4057

sw.bb:                                            ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4058, !tbaa !2355
  %call1 = call i32 @feof_unlocked(%struct._IO_FILE* %1) #12, !dbg !4058
  %tobool = icmp ne i32 %call1, 0, !dbg !4058
  br i1 %tobool, label %if.then, label %if.end, !dbg !4061

if.then:                                          ; preds = %sw.bb
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4062, !tbaa !2355
  call void @clearerr_unlocked(%struct._IO_FILE* %2) #12, !dbg !4062
  br label %if.end, !dbg !4062

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !4063

sw.bb2:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4064, !tbaa !2355
  %call3 = call i32 @fflush_unlocked(%struct._IO_FILE* %3), !dbg !4064
  %cmp = icmp ne i32 %call3, 0, !dbg !4066
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !4067

if.then4:                                         ; preds = %sw.bb2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i64 0, i64 0)) #12, !dbg !4068
  %4 = load i8*, i8** %file.addr, align 8, !dbg !4069, !tbaa !2355
  call void @sort_die(i8* %call5, i8* %4) #15, !dbg !4070
  unreachable, !dbg !4070

if.end6:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !4071

sw.default:                                       ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4072, !tbaa !2355
  %call7 = call i32 @rpl_fclose(%struct._IO_FILE* %5), !dbg !4074
  %cmp8 = icmp ne i32 %call7, 0, !dbg !4075
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !4076

if.then9:                                         ; preds = %sw.default
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !4077
  %6 = load i8*, i8** %file.addr, align 8, !dbg !4078, !tbaa !2355
  call void @sort_die(i8* %call10, i8* %6) #15, !dbg !4079
  unreachable, !dbg !4079

if.end11:                                         ; preds = %sw.default
  br label %sw.epilog, !dbg !4080

sw.epilog:                                        ; preds = %if.end11, %if.end6, %if.end
  ret void, !dbg !4081
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @default_key_compare(%struct.keyfield* %key) #4 !dbg !4082 !ctir !414 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !416
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !4083, metadata !DIExpression()), !dbg !4084
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4085, !tbaa !2355
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %0, i32 0, i32 4, !dbg !4086, !ctir !417
  %1 = load i8*, i8** %ignore, align 8, !dbg !4086, !tbaa !3209, !ctir !100
  %tobool = icmp ne i8* %1, null, !dbg !4085
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !4087

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4088, !tbaa !2355
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 5, !dbg !4089, !ctir !417
  %3 = load i8*, i8** %translate, align 8, !dbg !4089, !tbaa !3214, !ctir !87
  %tobool1 = icmp ne i8* %3, null, !dbg !4088
  br i1 %tobool1, label %lor.end, label %lor.lhs.false2, !dbg !4090

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4091, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 6, !dbg !4092, !ctir !417
  %5 = load i8, i8* %skipsblanks, align 8, !dbg !4092, !tbaa !3219
  %tobool3 = trunc i8 %5 to i1, !dbg !4092, !ctir !102
  br i1 %tobool3, label %lor.end, label %lor.lhs.false4, !dbg !4093

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %6 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4094, !tbaa !2355
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 7, !dbg !4095, !ctir !417
  %7 = load i8, i8* %skipeblanks, align 1, !dbg !4095, !tbaa !3224
  %tobool5 = trunc i8 %7 to i1, !dbg !4095, !ctir !102
  br i1 %tobool5, label %lor.end, label %lor.lhs.false6, !dbg !4096

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %8 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4097, !tbaa !2355
  %call = call zeroext i1 @key_numeric(%struct.keyfield* %8), !dbg !4098
  br i1 %call, label %lor.end, label %lor.lhs.false7, !dbg !4099

lor.lhs.false7:                                   ; preds = %lor.lhs.false6
  %9 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4100, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 12, !dbg !4101, !ctir !417
  %10 = load i8, i8* %month, align 2, !dbg !4101, !tbaa !3229
  %tobool8 = trunc i8 %10 to i1, !dbg !4101, !ctir !102
  br i1 %tobool8, label %lor.end, label %lor.lhs.false9, !dbg !4102

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4103, !tbaa !2355
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 14, !dbg !4104, !ctir !417
  %12 = load i8, i8* %version, align 8, !dbg !4104, !tbaa !3249
  %tobool10 = trunc i8 %12 to i1, !dbg !4104, !ctir !102
  br i1 %tobool10, label %lor.end, label %lor.rhs, !dbg !4105

lor.rhs:                                          ; preds = %lor.lhs.false9
  %13 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4106, !tbaa !2355
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %13, i32 0, i32 9, !dbg !4107, !ctir !417
  %14 = load i8, i8* %random, align 1, !dbg !4107, !tbaa !3254
  %tobool11 = trunc i8 %14 to i1, !dbg !4107, !ctir !102
  br label %lor.end, !dbg !4105

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %15 = phi i1 [ true, %lor.lhs.false9 ], [ true, %lor.lhs.false7 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool11, %lor.rhs ]
  %lnot = xor i1 %15, true, !dbg !4108
  ret i1 %lnot, !dbg !4109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_ordering_compatibility() #4 !dbg !4110 !ctir !167 {
entry:
  %key = alloca %struct.keyfield*, align 8, !ctir !92
  %opts = alloca [31 x i8], align 16, !ctir !418
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !4111, metadata !DIExpression()), !dbg !4112
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4113, !tbaa !2355
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !4115, !tbaa !2355
  br label %for.cond, !dbg !4116

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4117, !tbaa !2355
  %tobool = icmp ne %struct.keyfield* %1, null, !dbg !4119
  br i1 %tobool, label %for.body, label %for.end, !dbg !4119

for.body:                                         ; preds = %for.cond
  %2 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4120, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 8, !dbg !4122, !ctir !93
  %3 = load i8, i8* %numeric, align 2, !dbg !4122, !tbaa !3234
  %tobool1 = trunc i8 %3 to i1, !dbg !4122, !ctir !102
  %conv = zext i1 %tobool1 to i32, !dbg !4120
  %4 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4123, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 10, !dbg !4124, !ctir !93
  %5 = load i8, i8* %general_numeric, align 4, !dbg !4124, !tbaa !3239
  %tobool2 = trunc i8 %5 to i1, !dbg !4124, !ctir !102
  %conv3 = zext i1 %tobool2 to i32, !dbg !4123
  %add = add nsw i32 %conv, %conv3, !dbg !4125
  %6 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4126, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 11, !dbg !4127, !ctir !93
  %7 = load i8, i8* %human_numeric, align 1, !dbg !4127, !tbaa !3244
  %tobool4 = trunc i8 %7 to i1, !dbg !4127, !ctir !102
  %conv5 = zext i1 %tobool4 to i32, !dbg !4126
  %add6 = add nsw i32 %add, %conv5, !dbg !4128
  %8 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4129, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %8, i32 0, i32 12, !dbg !4130, !ctir !93
  %9 = load i8, i8* %month, align 2, !dbg !4130, !tbaa !3229
  %tobool7 = trunc i8 %9 to i1, !dbg !4130, !ctir !102
  %conv8 = zext i1 %tobool7 to i32, !dbg !4129
  %add9 = add nsw i32 %add6, %conv8, !dbg !4131
  %10 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4132, !tbaa !2355
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %10, i32 0, i32 14, !dbg !4133, !ctir !93
  %11 = load i8, i8* %version, align 8, !dbg !4133, !tbaa !3249
  %tobool10 = trunc i8 %11 to i1, !dbg !4133, !ctir !102
  %conv11 = zext i1 %tobool10 to i32, !dbg !4132
  %12 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4134, !tbaa !2355
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %12, i32 0, i32 9, !dbg !4135, !ctir !93
  %13 = load i8, i8* %random, align 1, !dbg !4135, !tbaa !3254
  %tobool12 = trunc i8 %13 to i1, !dbg !4135, !ctir !102
  %conv13 = zext i1 %tobool12 to i32, !dbg !4134
  %or = or i32 %conv11, %conv13, !dbg !4136
  %14 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4137, !tbaa !2355
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %14, i32 0, i32 4, !dbg !4138, !ctir !93
  %15 = load i8*, i8** %ignore, align 8, !dbg !4138, !tbaa !3209, !ctir !100
  %tobool14 = icmp ne i8* %15, null, !dbg !4139
  %lnot = xor i1 %tobool14, true, !dbg !4139
  %lnot15 = xor i1 %lnot, true, !dbg !4140
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !4140
  %or16 = or i32 %or, %lnot.ext, !dbg !4141
  %add17 = add nsw i32 %add9, %or16, !dbg !4142
  %cmp = icmp slt i32 1, %add17, !dbg !4143
  br i1 %cmp, label %if.then, label %if.end, !dbg !4144

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [31 x i8]* %opts, metadata !4145, metadata !DIExpression()), !dbg !4147
  %16 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4148, !tbaa !2355
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %16, i32 0, i32 13, !dbg !4149, !ctir !93
  store i8 0, i8* %reverse, align 1, !dbg !4150, !tbaa !3205, !ctir !102
  %17 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4151, !tbaa !2355
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 7, !dbg !4152, !ctir !93
  store i8 0, i8* %skipeblanks, align 1, !dbg !4153, !tbaa !3224, !ctir !102
  %18 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4154, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %18, i32 0, i32 6, !dbg !4155, !ctir !93
  store i8 0, i8* %skipsblanks, align 8, !dbg !4156, !tbaa !3219, !ctir !102
  %19 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4157, !tbaa !2355
  %arraydecay = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4158
  call void @key_to_opts(%struct.keyfield* %19, i8* %arraydecay), !dbg !4159
  %arraydecay19 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4160
  call void @incompatible_options(i8* %arraydecay19) #15, !dbg !4161
  unreachable, !dbg !4161

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4162

for.inc:                                          ; preds = %if.end
  %20 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4163, !tbaa !2355
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %20, i32 0, i32 16, !dbg !4164, !ctir !93
  %21 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !4164, !tbaa !3269, !ctir !92
  store %struct.keyfield* %21, %struct.keyfield** %key, align 8, !dbg !4165, !tbaa !2355
  br label %for.cond, !dbg !4166, !llvm.loop !4167

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4169
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @key_warnings(%struct.keyfield* %gkey, i1 zeroext %gkey_only) #4 !dbg !4170 !ctir !421 {
entry:
  %gkey.addr = alloca %struct.keyfield*, align 8, !ctir !416
  %gkey_only.addr = alloca i8, align 1, !ctir !102
  %key = alloca %struct.keyfield*, align 8, !ctir !416
  %ugkey = alloca %struct.keyfield, align 8, !ctir !93
  %keynum = alloca i64, align 8, !ctir !54
  %sword = alloca i64, align 8, !ctir !52
  %eword = alloca i64, align 8, !ctir !52
  %tmp = alloca [21 x i8], align 16, !ctir !423
  %obuf = alloca [46 x i8], align 16, !ctir !426
  %nbuf = alloca [47 x i8], align 16, !ctir !429
  %po = alloca i8*, align 8, !ctir !7
  %pn = alloca i8*, align 8, !ctir !7
  %zero_width = alloca i8, align 1, !ctir !102
  %implicit_skip = alloca i8, align 1, !ctir !102
  %line_offset = alloca i8, align 1, !ctir !102
  %sword90 = alloca i64, align 8, !ctir !52
  %eword93 = alloca i64, align 8, !ctir !52
  %ugkey_reverse = alloca i8, align 1, !ctir !102
  %opts = alloca [31 x i8], align 16, !ctir !418
  store %struct.keyfield* %gkey, %struct.keyfield** %gkey.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %gkey.addr, metadata !4171, metadata !DIExpression()), !dbg !4172
  %frombool = zext i1 %gkey_only to i8
  store i8 %frombool, i8* %gkey_only.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %gkey_only.addr, metadata !4173, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !4175, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.declare(metadata %struct.keyfield* %ugkey, metadata !4177, metadata !DIExpression()), !dbg !4178
  %0 = load %struct.keyfield*, %struct.keyfield** %gkey.addr, align 8, !dbg !4179, !tbaa !2355
  %1 = bitcast %struct.keyfield* %ugkey to i8*, !dbg !4180
  %2 = bitcast %struct.keyfield* %0 to i8*, !dbg !4180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !4180, !tbaa.struct !4181
  call void @llvm.dbg.declare(metadata i64* %keynum, metadata !4182, metadata !DIExpression()), !dbg !4183
  store i64 1, i64* %keynum, align 8, !dbg !4183, !tbaa !2516
  %3 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4184, !tbaa !2355
  store %struct.keyfield* %3, %struct.keyfield** %key, align 8, !dbg !4186, !tbaa !2355
  br label %for.cond, !dbg !4187

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4188, !tbaa !2355
  %tobool = icmp ne %struct.keyfield* %4, null, !dbg !4190
  br i1 %tobool, label %for.body, label %for.end, !dbg !4190

for.body:                                         ; preds = %for.cond
  %5 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4191, !tbaa !2355
  %traditional_used = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 15, !dbg !4194, !ctir !417
  %6 = load i8, i8* %traditional_used, align 1, !dbg !4194, !tbaa !2845
  %tobool1 = trunc i8 %6 to i1, !dbg !4194, !ctir !102
  br i1 %tobool1, label %if.then, label %if.end35, !dbg !4195

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %sword, metadata !4196, metadata !DIExpression()), !dbg !4198
  %7 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4199, !tbaa !2355
  %sword2 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 0, !dbg !4200, !ctir !417
  %8 = load i64, i64* %sword2, align 8, !dbg !4200, !tbaa !2657, !ctir !52
  store i64 %8, i64* %sword, align 8, !dbg !4198, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %eword, metadata !4201, metadata !DIExpression()), !dbg !4202
  %9 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4203, !tbaa !2355
  %eword3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 2, !dbg !4204, !ctir !417
  %10 = load i64, i64* %eword3, align 8, !dbg !4204, !tbaa !2826, !ctir !52
  store i64 %10, i64* %eword, align 8, !dbg !4202, !tbaa !2516
  call void @llvm.dbg.declare(metadata [21 x i8]* %tmp, metadata !4205, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.declare(metadata [46 x i8]* %obuf, metadata !4207, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.declare(metadata [47 x i8]* %nbuf, metadata !4209, metadata !DIExpression()), !dbg !4210
  call void @llvm.dbg.declare(metadata i8** %po, metadata !4211, metadata !DIExpression()), !dbg !4212
  %arraydecay = getelementptr inbounds [46 x i8], [46 x i8]* %obuf, i64 0, i64 0, !dbg !4213
  store i8* %arraydecay, i8** %po, align 8, !dbg !4212, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %pn, metadata !4214, metadata !DIExpression()), !dbg !4215
  %arraydecay4 = getelementptr inbounds [47 x i8], [47 x i8]* %nbuf, i64 0, i64 0, !dbg !4216
  store i8* %arraydecay4, i8** %pn, align 8, !dbg !4215, !tbaa !2355
  %11 = load i64, i64* %sword, align 8, !dbg !4217, !tbaa !2516
  %cmp = icmp eq i64 %11, -1, !dbg !4219
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4220

if.then5:                                         ; preds = %if.then
  %12 = load i64, i64* %sword, align 8, !dbg !4221, !tbaa !2516
  %inc = add i64 %12, 1, !dbg !4221
  store i64 %inc, i64* %sword, align 8, !dbg !4221, !tbaa !2516
  br label %if.end, !dbg !4222

if.end:                                           ; preds = %if.then5, %if.then
  %13 = load i8*, i8** %po, align 8, !dbg !4223, !tbaa !2355
  %call = call i8* @stpcpy(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i64 0, i64 0)) #12, !dbg !4224
  %14 = load i64, i64* %sword, align 8, !dbg !4225, !tbaa !2516
  %arraydecay6 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4226
  %call7 = call i8* @umaxtostr(i64 %14, i8* %arraydecay6), !dbg !4227
  %call8 = call i8* @stpcpy(i8* %call, i8* %call7) #12, !dbg !4228
  store i8* %call8, i8** %po, align 8, !dbg !4229, !tbaa !2355
  %15 = load i8*, i8** %pn, align 8, !dbg !4230, !tbaa !2355
  %call9 = call i8* @stpcpy(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i64 0, i64 0)) #12, !dbg !4231
  %16 = load i64, i64* %sword, align 8, !dbg !4232, !tbaa !2516
  %add = add i64 %16, 1, !dbg !4233
  %arraydecay10 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4234
  %call11 = call i8* @umaxtostr(i64 %add, i8* %arraydecay10), !dbg !4235
  %call12 = call i8* @stpcpy(i8* %call9, i8* %call11) #12, !dbg !4236
  store i8* %call12, i8** %pn, align 8, !dbg !4237, !tbaa !2355
  %17 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4238, !tbaa !2355
  %eword13 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 2, !dbg !4240, !ctir !417
  %18 = load i64, i64* %eword13, align 8, !dbg !4240, !tbaa !2826, !ctir !52
  %cmp14 = icmp ne i64 %18, -1, !dbg !4241
  br i1 %cmp14, label %if.then15, label %if.end29, !dbg !4242

if.then15:                                        ; preds = %if.end
  %19 = load i8*, i8** %po, align 8, !dbg !4243, !tbaa !2355
  %call16 = call i8* @stpcpy(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i64 0, i64 0)) #12, !dbg !4245
  %20 = load i64, i64* %eword, align 8, !dbg !4246, !tbaa !2516
  %add17 = add i64 %20, 1, !dbg !4247
  %arraydecay18 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4248
  %call19 = call i8* @umaxtostr(i64 %add17, i8* %arraydecay18), !dbg !4249
  %call20 = call i8* @stpcpy(i8* %call16, i8* %call19) #12, !dbg !4250
  %21 = load i8*, i8** %pn, align 8, !dbg !4251, !tbaa !2355
  %call21 = call i8* @stpcpy(i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i64 0, i64 0)) #12, !dbg !4252
  %22 = load i64, i64* %eword, align 8, !dbg !4253, !tbaa !2516
  %add22 = add i64 %22, 1, !dbg !4254
  %23 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4255, !tbaa !2355
  %echar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %23, i32 0, i32 3, !dbg !4256, !ctir !417
  %24 = load i64, i64* %echar, align 8, !dbg !4256, !tbaa !2822, !ctir !52
  %cmp23 = icmp eq i64 %24, -1, !dbg !4257
  %conv = zext i1 %cmp23 to i32, !dbg !4257
  %conv24 = sext i32 %conv to i64, !dbg !4258
  %add25 = add i64 %add22, %conv24, !dbg !4259
  %arraydecay26 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4260
  %call27 = call i8* @umaxtostr(i64 %add25, i8* %arraydecay26), !dbg !4261
  %call28 = call i8* @stpcpy(i8* %call21, i8* %call27) #12, !dbg !4262
  br label %if.end29, !dbg !4263

if.end29:                                         ; preds = %if.then15, %if.end
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.150, i64 0, i64 0)) #12, !dbg !4264
  %arraydecay31 = getelementptr inbounds [46 x i8], [46 x i8]* %obuf, i64 0, i64 0, !dbg !4265
  %call32 = call i8* @quote_n(i32 0, i8* %arraydecay31), !dbg !4266
  %arraydecay33 = getelementptr inbounds [47 x i8], [47 x i8]* %nbuf, i64 0, i64 0, !dbg !4267
  %call34 = call i8* @quote_n(i32 1, i8* %arraydecay33), !dbg !4268
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call30, i8* %call32, i8* %call34), !dbg !4269
  br label %if.end35, !dbg !4270

if.end35:                                         ; preds = %if.end29, %for.body
  call void @llvm.dbg.declare(metadata i8* %zero_width, metadata !4271, metadata !DIExpression()), !dbg !4272
  %25 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4273, !tbaa !2355
  %sword36 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %25, i32 0, i32 0, !dbg !4274, !ctir !417
  %26 = load i64, i64* %sword36, align 8, !dbg !4274, !tbaa !2657, !ctir !52
  %cmp37 = icmp ne i64 %26, -1, !dbg !4275
  br i1 %cmp37, label %land.rhs, label %land.end, !dbg !4276

land.rhs:                                         ; preds = %if.end35
  %27 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4277, !tbaa !2355
  %eword39 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %27, i32 0, i32 2, !dbg !4278, !ctir !417
  %28 = load i64, i64* %eword39, align 8, !dbg !4278, !tbaa !2826, !ctir !52
  %29 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4279, !tbaa !2355
  %sword40 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %29, i32 0, i32 0, !dbg !4280, !ctir !417
  %30 = load i64, i64* %sword40, align 8, !dbg !4280, !tbaa !2657, !ctir !52
  %cmp41 = icmp ult i64 %28, %30, !dbg !4281
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end35
  %31 = phi i1 [ false, %if.end35 ], [ %cmp41, %land.rhs ], !dbg !4282
  %frombool43 = zext i1 %31 to i8, !dbg !4272
  store i8 %frombool43, i8* %zero_width, align 1, !dbg !4272, !tbaa !2499
  %32 = load i8, i8* %zero_width, align 1, !dbg !4283, !tbaa !2499
  %tobool44 = trunc i8 %32 to i1, !dbg !4283
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !4285

if.then45:                                        ; preds = %land.end
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.151, i64 0, i64 0)) #12, !dbg !4286
  %33 = load i64, i64* %keynum, align 8, !dbg !4287, !tbaa !2516
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i64 %33), !dbg !4288
  br label %if.end47, !dbg !4288

if.end47:                                         ; preds = %if.then45, %land.end
  call void @llvm.dbg.declare(metadata i8* %implicit_skip, metadata !4289, metadata !DIExpression()), !dbg !4290
  %34 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4291, !tbaa !2355
  %call48 = call zeroext i1 @key_numeric(%struct.keyfield* %34), !dbg !4292
  br i1 %call48, label %lor.end, label %lor.rhs, !dbg !4293

lor.rhs:                                          ; preds = %if.end47
  %35 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4294, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %35, i32 0, i32 12, !dbg !4295, !ctir !417
  %36 = load i8, i8* %month, align 2, !dbg !4295, !tbaa !3229
  %tobool50 = trunc i8 %36 to i1, !dbg !4295, !ctir !102
  br label %lor.end, !dbg !4293

lor.end:                                          ; preds = %lor.rhs, %if.end47
  %37 = phi i1 [ true, %if.end47 ], [ %tobool50, %lor.rhs ]
  %frombool52 = zext i1 %37 to i8, !dbg !4290
  store i8 %frombool52, i8* %implicit_skip, align 1, !dbg !4290, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %line_offset, metadata !4296, metadata !DIExpression()), !dbg !4297
  %38 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4298, !tbaa !2355
  %eword53 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %38, i32 0, i32 2, !dbg !4299, !ctir !417
  %39 = load i64, i64* %eword53, align 8, !dbg !4299, !tbaa !2826, !ctir !52
  %cmp54 = icmp eq i64 %39, 0, !dbg !4300
  br i1 %cmp54, label %land.rhs56, label %land.end60, !dbg !4301

land.rhs56:                                       ; preds = %lor.end
  %40 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4302, !tbaa !2355
  %echar57 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %40, i32 0, i32 3, !dbg !4303, !ctir !417
  %41 = load i64, i64* %echar57, align 8, !dbg !4303, !tbaa !2822, !ctir !52
  %cmp58 = icmp ne i64 %41, 0, !dbg !4304
  br label %land.end60

land.end60:                                       ; preds = %land.rhs56, %lor.end
  %42 = phi i1 [ false, %lor.end ], [ %cmp58, %land.rhs56 ], !dbg !4282
  %frombool61 = zext i1 %42 to i8, !dbg !4297
  store i8 %frombool61, i8* %line_offset, align 1, !dbg !4297, !tbaa !2499
  %43 = load i8, i8* %zero_width, align 1, !dbg !4305, !tbaa !2499
  %tobool62 = trunc i8 %43 to i1, !dbg !4305
  br i1 %tobool62, label %if.end84, label %land.lhs.true, !dbg !4307

land.lhs.true:                                    ; preds = %land.end60
  %44 = load i8, i8* %gkey_only.addr, align 1, !dbg !4308, !tbaa !2499
  %tobool63 = trunc i8 %44 to i1, !dbg !4308
  br i1 %tobool63, label %if.end84, label %land.lhs.true64, !dbg !4309

land.lhs.true64:                                  ; preds = %land.lhs.true
  %45 = load i32, i32* @tab, align 4, !dbg !4310, !tbaa !2342
  %cmp65 = icmp eq i32 %45, 128, !dbg !4311
  br i1 %cmp65, label %land.lhs.true67, label %if.end84, !dbg !4312

land.lhs.true67:                                  ; preds = %land.lhs.true64
  %46 = load i8, i8* %line_offset, align 1, !dbg !4313, !tbaa !2499
  %tobool68 = trunc i8 %46 to i1, !dbg !4313
  br i1 %tobool68, label %if.end84, label %land.lhs.true69, !dbg !4314

land.lhs.true69:                                  ; preds = %land.lhs.true67
  %47 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4315, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %47, i32 0, i32 6, !dbg !4316, !ctir !417
  %48 = load i8, i8* %skipsblanks, align 8, !dbg !4316, !tbaa !3219
  %tobool70 = trunc i8 %48 to i1, !dbg !4316, !ctir !102
  br i1 %tobool70, label %lor.lhs.false, label %land.lhs.true71, !dbg !4317

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %49 = load i8, i8* %implicit_skip, align 1, !dbg !4318, !tbaa !2499
  %tobool72 = trunc i8 %49 to i1, !dbg !4318
  br i1 %tobool72, label %lor.lhs.false, label %if.then82, !dbg !4319

lor.lhs.false:                                    ; preds = %land.lhs.true71, %land.lhs.true69
  %50 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4320, !tbaa !2355
  %skipsblanks73 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %50, i32 0, i32 6, !dbg !4321, !ctir !417
  %51 = load i8, i8* %skipsblanks73, align 8, !dbg !4321, !tbaa !3219
  %tobool74 = trunc i8 %51 to i1, !dbg !4321, !ctir !102
  br i1 %tobool74, label %lor.lhs.false77, label %land.lhs.true75, !dbg !4322

land.lhs.true75:                                  ; preds = %lor.lhs.false
  %52 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4323, !tbaa !2355
  %schar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %52, i32 0, i32 1, !dbg !4324, !ctir !417
  %53 = load i64, i64* %schar, align 8, !dbg !4324, !tbaa !2776, !ctir !52
  %tobool76 = icmp ne i64 %53, 0, !dbg !4323
  br i1 %tobool76, label %if.then82, label %lor.lhs.false77, !dbg !4325

lor.lhs.false77:                                  ; preds = %land.lhs.true75, %lor.lhs.false
  %54 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4326, !tbaa !2355
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %54, i32 0, i32 7, !dbg !4327, !ctir !417
  %55 = load i8, i8* %skipeblanks, align 1, !dbg !4327, !tbaa !3224
  %tobool78 = trunc i8 %55 to i1, !dbg !4327, !ctir !102
  br i1 %tobool78, label %if.end84, label %land.lhs.true79, !dbg !4328

land.lhs.true79:                                  ; preds = %lor.lhs.false77
  %56 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4329, !tbaa !2355
  %echar80 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %56, i32 0, i32 3, !dbg !4330, !ctir !417
  %57 = load i64, i64* %echar80, align 8, !dbg !4330, !tbaa !2822, !ctir !52
  %tobool81 = icmp ne i64 %57, 0, !dbg !4329
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !4331

if.then82:                                        ; preds = %land.lhs.true79, %land.lhs.true75, %land.lhs.true71
  %call83 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.152, i64 0, i64 0)) #12, !dbg !4332
  %58 = load i64, i64* %keynum, align 8, !dbg !4333, !tbaa !2516
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call83, i64 %58), !dbg !4334
  br label %if.end84, !dbg !4334

if.end84:                                         ; preds = %if.then82, %land.lhs.true79, %lor.lhs.false77, %land.lhs.true67, %land.lhs.true64, %land.lhs.true, %land.end60
  %59 = load i8, i8* %gkey_only.addr, align 1, !dbg !4335, !tbaa !2499
  %tobool85 = trunc i8 %59 to i1, !dbg !4335
  br i1 %tobool85, label %if.end107, label %land.lhs.true86, !dbg !4337

land.lhs.true86:                                  ; preds = %if.end84
  %60 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4338, !tbaa !2355
  %call87 = call zeroext i1 @key_numeric(%struct.keyfield* %60), !dbg !4339
  br i1 %call87, label %if.then89, label %if.end107, !dbg !4340

if.then89:                                        ; preds = %land.lhs.true86
  call void @llvm.dbg.declare(metadata i64* %sword90, metadata !4341, metadata !DIExpression()), !dbg !4343
  %61 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4344, !tbaa !2355
  %sword91 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %61, i32 0, i32 0, !dbg !4345, !ctir !417
  %62 = load i64, i64* %sword91, align 8, !dbg !4345, !tbaa !2657, !ctir !52
  %add92 = add i64 %62, 1, !dbg !4346
  store i64 %add92, i64* %sword90, align 8, !dbg !4343, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %eword93, metadata !4347, metadata !DIExpression()), !dbg !4348
  %63 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4349, !tbaa !2355
  %eword94 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %63, i32 0, i32 2, !dbg !4350, !ctir !417
  %64 = load i64, i64* %eword94, align 8, !dbg !4350, !tbaa !2826, !ctir !52
  %add95 = add i64 %64, 1, !dbg !4351
  store i64 %add95, i64* %eword93, align 8, !dbg !4348, !tbaa !2516
  %65 = load i64, i64* %sword90, align 8, !dbg !4352, !tbaa !2516
  %tobool96 = icmp ne i64 %65, 0, !dbg !4352
  br i1 %tobool96, label %if.end99, label %if.then97, !dbg !4354

if.then97:                                        ; preds = %if.then89
  %66 = load i64, i64* %sword90, align 8, !dbg !4355, !tbaa !2516
  %inc98 = add i64 %66, 1, !dbg !4355
  store i64 %inc98, i64* %sword90, align 8, !dbg !4355, !tbaa !2516
  br label %if.end99, !dbg !4356

if.end99:                                         ; preds = %if.then97, %if.then89
  %67 = load i64, i64* %eword93, align 8, !dbg !4357, !tbaa !2516
  %tobool100 = icmp ne i64 %67, 0, !dbg !4357
  br i1 %tobool100, label %lor.lhs.false101, label %if.then104, !dbg !4359

lor.lhs.false101:                                 ; preds = %if.end99
  %68 = load i64, i64* %sword90, align 8, !dbg !4360, !tbaa !2516
  %69 = load i64, i64* %eword93, align 8, !dbg !4361, !tbaa !2516
  %cmp102 = icmp ult i64 %68, %69, !dbg !4362
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !4363

if.then104:                                       ; preds = %lor.lhs.false101, %if.end99
  %call105 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.153, i64 0, i64 0)) #12, !dbg !4364
  %70 = load i64, i64* %keynum, align 8, !dbg !4365, !tbaa !2516
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call105, i64 %70), !dbg !4366
  br label %if.end106, !dbg !4366

if.end106:                                        ; preds = %if.then104, %lor.lhs.false101
  br label %if.end107, !dbg !4367

if.end107:                                        ; preds = %if.end106, %land.lhs.true86, %if.end84
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 4, !dbg !4368, !ctir !93
  %71 = load i8*, i8** %ignore, align 8, !dbg !4368, !tbaa !3209, !ctir !100
  %tobool108 = icmp ne i8* %71, null, !dbg !4370
  br i1 %tobool108, label %land.lhs.true109, label %if.end116, !dbg !4371

land.lhs.true109:                                 ; preds = %if.end107
  %ignore110 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 4, !dbg !4372, !ctir !93
  %72 = load i8*, i8** %ignore110, align 8, !dbg !4372, !tbaa !3209, !ctir !100
  %73 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4373, !tbaa !2355
  %ignore111 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %73, i32 0, i32 4, !dbg !4374, !ctir !417
  %74 = load i8*, i8** %ignore111, align 8, !dbg !4374, !tbaa !3209, !ctir !100
  %cmp112 = icmp eq i8* %72, %74, !dbg !4375
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !4376

if.then114:                                       ; preds = %land.lhs.true109
  %ignore115 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 4, !dbg !4377, !ctir !93
  store i8* null, i8** %ignore115, align 8, !dbg !4378, !tbaa !3209, !ctir !100
  br label %if.end116, !dbg !4379

if.end116:                                        ; preds = %if.then114, %land.lhs.true109, %if.end107
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 5, !dbg !4380, !ctir !93
  %75 = load i8*, i8** %translate, align 8, !dbg !4380, !tbaa !3214, !ctir !87
  %tobool117 = icmp ne i8* %75, null, !dbg !4382
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !4383

land.lhs.true118:                                 ; preds = %if.end116
  %translate119 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 5, !dbg !4384, !ctir !93
  %76 = load i8*, i8** %translate119, align 8, !dbg !4384, !tbaa !3214, !ctir !87
  %77 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4385, !tbaa !2355
  %translate120 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %77, i32 0, i32 5, !dbg !4386, !ctir !417
  %78 = load i8*, i8** %translate120, align 8, !dbg !4386, !tbaa !3214, !ctir !87
  %cmp121 = icmp eq i8* %76, %78, !dbg !4387
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !4388

if.then123:                                       ; preds = %land.lhs.true118
  %translate124 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 5, !dbg !4389, !ctir !93
  store i8* null, i8** %translate124, align 8, !dbg !4390, !tbaa !3214, !ctir !87
  br label %if.end125, !dbg !4391

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end116
  %79 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4392, !tbaa !2355
  %skipsblanks126 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %79, i32 0, i32 6, !dbg !4393, !ctir !417
  %80 = load i8, i8* %skipsblanks126, align 8, !dbg !4393, !tbaa !3219
  %tobool127 = trunc i8 %80 to i1, !dbg !4393, !ctir !102
  %lnot = xor i1 %tobool127, true, !dbg !4394
  %lnot.ext = zext i1 %lnot to i32, !dbg !4394
  %skipsblanks128 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 6, !dbg !4395, !ctir !93
  %81 = load i8, i8* %skipsblanks128, align 8, !dbg !4396, !tbaa !3219
  %tobool129 = trunc i8 %81 to i1, !dbg !4396, !ctir !102
  %conv130 = zext i1 %tobool129 to i32, !dbg !4396
  %and = and i32 %conv130, %lnot.ext, !dbg !4396
  %tobool131 = icmp ne i32 %and, 0, !dbg !4396
  %frombool132 = zext i1 %tobool131 to i8, !dbg !4396
  store i8 %frombool132, i8* %skipsblanks128, align 8, !dbg !4396, !tbaa !3219, !ctir !102
  %82 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4397, !tbaa !2355
  %skipeblanks133 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %82, i32 0, i32 7, !dbg !4398, !ctir !417
  %83 = load i8, i8* %skipeblanks133, align 1, !dbg !4398, !tbaa !3224
  %tobool134 = trunc i8 %83 to i1, !dbg !4398, !ctir !102
  %lnot135 = xor i1 %tobool134, true, !dbg !4399
  %lnot.ext136 = zext i1 %lnot135 to i32, !dbg !4399
  %skipeblanks137 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 7, !dbg !4400, !ctir !93
  %84 = load i8, i8* %skipeblanks137, align 1, !dbg !4401, !tbaa !3224
  %tobool138 = trunc i8 %84 to i1, !dbg !4401, !ctir !102
  %conv139 = zext i1 %tobool138 to i32, !dbg !4401
  %and140 = and i32 %conv139, %lnot.ext136, !dbg !4401
  %tobool141 = icmp ne i32 %and140, 0, !dbg !4401
  %frombool142 = zext i1 %tobool141 to i8, !dbg !4401
  store i8 %frombool142, i8* %skipeblanks137, align 1, !dbg !4401, !tbaa !3224, !ctir !102
  %85 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4402, !tbaa !2355
  %month143 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %85, i32 0, i32 12, !dbg !4403, !ctir !417
  %86 = load i8, i8* %month143, align 2, !dbg !4403, !tbaa !3229
  %tobool144 = trunc i8 %86 to i1, !dbg !4403, !ctir !102
  %lnot145 = xor i1 %tobool144, true, !dbg !4404
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !4404
  %month147 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 12, !dbg !4405, !ctir !93
  %87 = load i8, i8* %month147, align 2, !dbg !4406, !tbaa !3229
  %tobool148 = trunc i8 %87 to i1, !dbg !4406, !ctir !102
  %conv149 = zext i1 %tobool148 to i32, !dbg !4406
  %and150 = and i32 %conv149, %lnot.ext146, !dbg !4406
  %tobool151 = icmp ne i32 %and150, 0, !dbg !4406
  %frombool152 = zext i1 %tobool151 to i8, !dbg !4406
  store i8 %frombool152, i8* %month147, align 2, !dbg !4406, !tbaa !3229, !ctir !102
  %88 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4407, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %88, i32 0, i32 8, !dbg !4408, !ctir !417
  %89 = load i8, i8* %numeric, align 2, !dbg !4408, !tbaa !3234
  %tobool153 = trunc i8 %89 to i1, !dbg !4408, !ctir !102
  %lnot154 = xor i1 %tobool153, true, !dbg !4409
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !4409
  %numeric156 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 8, !dbg !4410, !ctir !93
  %90 = load i8, i8* %numeric156, align 2, !dbg !4411, !tbaa !3234
  %tobool157 = trunc i8 %90 to i1, !dbg !4411, !ctir !102
  %conv158 = zext i1 %tobool157 to i32, !dbg !4411
  %and159 = and i32 %conv158, %lnot.ext155, !dbg !4411
  %tobool160 = icmp ne i32 %and159, 0, !dbg !4411
  %frombool161 = zext i1 %tobool160 to i8, !dbg !4411
  store i8 %frombool161, i8* %numeric156, align 2, !dbg !4411, !tbaa !3234, !ctir !102
  %91 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4412, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %91, i32 0, i32 10, !dbg !4413, !ctir !417
  %92 = load i8, i8* %general_numeric, align 4, !dbg !4413, !tbaa !3239
  %tobool162 = trunc i8 %92 to i1, !dbg !4413, !ctir !102
  %lnot163 = xor i1 %tobool162, true, !dbg !4414
  %lnot.ext164 = zext i1 %lnot163 to i32, !dbg !4414
  %general_numeric165 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 10, !dbg !4415, !ctir !93
  %93 = load i8, i8* %general_numeric165, align 4, !dbg !4416, !tbaa !3239
  %tobool166 = trunc i8 %93 to i1, !dbg !4416, !ctir !102
  %conv167 = zext i1 %tobool166 to i32, !dbg !4416
  %and168 = and i32 %conv167, %lnot.ext164, !dbg !4416
  %tobool169 = icmp ne i32 %and168, 0, !dbg !4416
  %frombool170 = zext i1 %tobool169 to i8, !dbg !4416
  store i8 %frombool170, i8* %general_numeric165, align 4, !dbg !4416, !tbaa !3239, !ctir !102
  %94 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4417, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %94, i32 0, i32 11, !dbg !4418, !ctir !417
  %95 = load i8, i8* %human_numeric, align 1, !dbg !4418, !tbaa !3244
  %tobool171 = trunc i8 %95 to i1, !dbg !4418, !ctir !102
  %lnot172 = xor i1 %tobool171, true, !dbg !4419
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !4419
  %human_numeric174 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 11, !dbg !4420, !ctir !93
  %96 = load i8, i8* %human_numeric174, align 1, !dbg !4421, !tbaa !3244
  %tobool175 = trunc i8 %96 to i1, !dbg !4421, !ctir !102
  %conv176 = zext i1 %tobool175 to i32, !dbg !4421
  %and177 = and i32 %conv176, %lnot.ext173, !dbg !4421
  %tobool178 = icmp ne i32 %and177, 0, !dbg !4421
  %frombool179 = zext i1 %tobool178 to i8, !dbg !4421
  store i8 %frombool179, i8* %human_numeric174, align 1, !dbg !4421, !tbaa !3244, !ctir !102
  %97 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4422, !tbaa !2355
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %97, i32 0, i32 9, !dbg !4423, !ctir !417
  %98 = load i8, i8* %random, align 1, !dbg !4423, !tbaa !3254
  %tobool180 = trunc i8 %98 to i1, !dbg !4423, !ctir !102
  %lnot181 = xor i1 %tobool180, true, !dbg !4424
  %lnot.ext182 = zext i1 %lnot181 to i32, !dbg !4424
  %random183 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 9, !dbg !4425, !ctir !93
  %99 = load i8, i8* %random183, align 1, !dbg !4426, !tbaa !3254
  %tobool184 = trunc i8 %99 to i1, !dbg !4426, !ctir !102
  %conv185 = zext i1 %tobool184 to i32, !dbg !4426
  %and186 = and i32 %conv185, %lnot.ext182, !dbg !4426
  %tobool187 = icmp ne i32 %and186, 0, !dbg !4426
  %frombool188 = zext i1 %tobool187 to i8, !dbg !4426
  store i8 %frombool188, i8* %random183, align 1, !dbg !4426, !tbaa !3254, !ctir !102
  %100 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4427, !tbaa !2355
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %100, i32 0, i32 14, !dbg !4428, !ctir !417
  %101 = load i8, i8* %version, align 8, !dbg !4428, !tbaa !3249
  %tobool189 = trunc i8 %101 to i1, !dbg !4428, !ctir !102
  %lnot190 = xor i1 %tobool189, true, !dbg !4429
  %lnot.ext191 = zext i1 %lnot190 to i32, !dbg !4429
  %version192 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 14, !dbg !4430, !ctir !93
  %102 = load i8, i8* %version192, align 8, !dbg !4431, !tbaa !3249
  %tobool193 = trunc i8 %102 to i1, !dbg !4431, !ctir !102
  %conv194 = zext i1 %tobool193 to i32, !dbg !4431
  %and195 = and i32 %conv194, %lnot.ext191, !dbg !4431
  %tobool196 = icmp ne i32 %and195, 0, !dbg !4431
  %frombool197 = zext i1 %tobool196 to i8, !dbg !4431
  store i8 %frombool197, i8* %version192, align 8, !dbg !4431, !tbaa !3249, !ctir !102
  %103 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4432, !tbaa !2355
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %103, i32 0, i32 13, !dbg !4433, !ctir !417
  %104 = load i8, i8* %reverse, align 1, !dbg !4433, !tbaa !3205
  %tobool198 = trunc i8 %104 to i1, !dbg !4433, !ctir !102
  %lnot199 = xor i1 %tobool198, true, !dbg !4434
  %lnot.ext200 = zext i1 %lnot199 to i32, !dbg !4434
  %reverse201 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4435, !ctir !93
  %105 = load i8, i8* %reverse201, align 1, !dbg !4436, !tbaa !3205
  %tobool202 = trunc i8 %105 to i1, !dbg !4436, !ctir !102
  %conv203 = zext i1 %tobool202 to i32, !dbg !4436
  %and204 = and i32 %conv203, %lnot.ext200, !dbg !4436
  %tobool205 = icmp ne i32 %and204, 0, !dbg !4436
  %frombool206 = zext i1 %tobool205 to i8, !dbg !4436
  store i8 %frombool206, i8* %reverse201, align 1, !dbg !4436, !tbaa !3205, !ctir !102
  br label %for.inc, !dbg !4437

for.inc:                                          ; preds = %if.end125
  %106 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4438, !tbaa !2355
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %106, i32 0, i32 16, !dbg !4439, !ctir !417
  %107 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !4439, !tbaa !3269, !ctir !92
  store %struct.keyfield* %107, %struct.keyfield** %key, align 8, !dbg !4440, !tbaa !2355
  %108 = load i64, i64* %keynum, align 8, !dbg !4441, !tbaa !2516
  %inc207 = add i64 %108, 1, !dbg !4441
  store i64 %inc207, i64* %keynum, align 8, !dbg !4441, !tbaa !2516
  br label %for.cond, !dbg !4442, !llvm.loop !4443

for.end:                                          ; preds = %for.cond
  %call208 = call zeroext i1 @default_key_compare(%struct.keyfield* %ugkey), !dbg !4445
  br i1 %call208, label %lor.lhs.false209, label %if.then221, !dbg !4447

lor.lhs.false209:                                 ; preds = %for.end
  %reverse210 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4448, !ctir !93
  %109 = load i8, i8* %reverse210, align 1, !dbg !4448, !tbaa !3205
  %tobool211 = trunc i8 %109 to i1, !dbg !4448, !ctir !102
  br i1 %tobool211, label %land.lhs.true213, label %if.end242, !dbg !4449

land.lhs.true213:                                 ; preds = %lor.lhs.false209
  %110 = load i8, i8* @stable, align 1, !dbg !4450, !tbaa !2499
  %tobool214 = trunc i8 %110 to i1, !dbg !4450
  br i1 %tobool214, label %land.lhs.true219, label %lor.lhs.false216, !dbg !4451

lor.lhs.false216:                                 ; preds = %land.lhs.true213
  %111 = load i8, i8* @unique, align 1, !dbg !4452, !tbaa !2499
  %tobool217 = trunc i8 %111 to i1, !dbg !4452
  br i1 %tobool217, label %land.lhs.true219, label %if.end242, !dbg !4453

land.lhs.true219:                                 ; preds = %lor.lhs.false216, %land.lhs.true213
  %112 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4454, !tbaa !2355
  %tobool220 = icmp ne %struct.keyfield* %112, null, !dbg !4454
  br i1 %tobool220, label %if.then221, label %if.end242, !dbg !4455

if.then221:                                       ; preds = %land.lhs.true219, %for.end
  call void @llvm.dbg.declare(metadata i8* %ugkey_reverse, metadata !4456, metadata !DIExpression()), !dbg !4458
  %reverse222 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4459, !ctir !93
  %113 = load i8, i8* %reverse222, align 1, !dbg !4459, !tbaa !3205
  %tobool223 = trunc i8 %113 to i1, !dbg !4459, !ctir !102
  %frombool224 = zext i1 %tobool223 to i8, !dbg !4458
  store i8 %frombool224, i8* %ugkey_reverse, align 1, !dbg !4458, !tbaa !2499
  %114 = load i8, i8* @stable, align 1, !dbg !4460, !tbaa !2499
  %tobool225 = trunc i8 %114 to i1, !dbg !4460
  br i1 %tobool225, label %if.end232, label %lor.lhs.false227, !dbg !4462

lor.lhs.false227:                                 ; preds = %if.then221
  %115 = load i8, i8* @unique, align 1, !dbg !4463, !tbaa !2499
  %tobool228 = trunc i8 %115 to i1, !dbg !4463
  br i1 %tobool228, label %if.end232, label %if.then230, !dbg !4464

if.then230:                                       ; preds = %lor.lhs.false227
  %reverse231 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4465, !ctir !93
  store i8 0, i8* %reverse231, align 1, !dbg !4466, !tbaa !3205, !ctir !102
  br label %if.end232, !dbg !4467

if.end232:                                        ; preds = %if.then230, %lor.lhs.false227, %if.then221
  call void @llvm.dbg.declare(metadata [31 x i8]* %opts, metadata !4468, metadata !DIExpression()), !dbg !4469
  %arraydecay233 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4470
  call void @key_to_opts(%struct.keyfield* %ugkey, i8* %arraydecay233), !dbg !4471
  %arraydecay234 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4472
  %call235 = call i64 @strlen(i8* %arraydecay234) #14, !dbg !4473
  %call236 = call i64 @select_plural(i64 %call235), !dbg !4474
  %call237 = call i8* @ngettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.155, i64 0, i64 0), i64 %call236) #12, !dbg !4475
  %arraydecay238 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4476
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call237, i8* %arraydecay238), !dbg !4477
  %116 = load i8, i8* %ugkey_reverse, align 1, !dbg !4478, !tbaa !2499
  %tobool239 = trunc i8 %116 to i1, !dbg !4478
  %reverse240 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4479, !ctir !93
  %frombool241 = zext i1 %tobool239 to i8, !dbg !4480
  store i8 %frombool241, i8* %reverse240, align 1, !dbg !4480, !tbaa !3205, !ctir !102
  br label %if.end242, !dbg !4481

if.end242:                                        ; preds = %if.end232, %land.lhs.true219, %lor.lhs.false216, %lor.lhs.false209
  %reverse243 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4482, !ctir !93
  %117 = load i8, i8* %reverse243, align 1, !dbg !4482, !tbaa !3205
  %tobool244 = trunc i8 %117 to i1, !dbg !4482, !ctir !102
  br i1 %tobool244, label %land.lhs.true246, label %if.end256, !dbg !4484

land.lhs.true246:                                 ; preds = %if.end242
  %118 = load i8, i8* @stable, align 1, !dbg !4485, !tbaa !2499
  %tobool247 = trunc i8 %118 to i1, !dbg !4485
  br i1 %tobool247, label %if.end256, label %lor.lhs.false249, !dbg !4486

lor.lhs.false249:                                 ; preds = %land.lhs.true246
  %119 = load i8, i8* @unique, align 1, !dbg !4487, !tbaa !2499
  %tobool250 = trunc i8 %119 to i1, !dbg !4487
  br i1 %tobool250, label %if.end256, label %land.lhs.true252, !dbg !4488

land.lhs.true252:                                 ; preds = %lor.lhs.false249
  %120 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4489, !tbaa !2355
  %tobool253 = icmp ne %struct.keyfield* %120, null, !dbg !4489
  br i1 %tobool253, label %if.then254, label %if.end256, !dbg !4490

if.then254:                                       ; preds = %land.lhs.true252
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.156, i64 0, i64 0)) #12, !dbg !4491
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255), !dbg !4492
  br label %if.end256, !dbg !4492

if.end256:                                        ; preds = %if.then254, %land.lhs.true252, %lor.lhs.false249, %land.lhs.true246, %if.end242
  ret void, !dbg !4493
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @random_md5_state_init(i8* %random_source) #4 !dbg !4494 !ctir !302 {
entry:
  %random_source.addr = alloca i8*, align 8, !ctir !87
  %buf = alloca [16 x i8], align 16, !ctir !434
  %r = alloca %struct.randread_source*, align 8, !ctir !435
  store i8* %random_source, i8** %random_source.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %random_source.addr, metadata !4495, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.declare(metadata [16 x i8]* %buf, metadata !4497, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.declare(metadata %struct.randread_source** %r, metadata !4499, metadata !DIExpression()), !dbg !4500
  %0 = load i8*, i8** %random_source.addr, align 8, !dbg !4501, !tbaa !2355
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 16), !dbg !4502
  store %struct.randread_source* %call, %struct.randread_source** %r, align 8, !dbg !4500, !tbaa !2355
  %1 = load %struct.randread_source*, %struct.randread_source** %r, align 8, !dbg !4503, !tbaa !2355
  %tobool = icmp ne %struct.randread_source* %1, null, !dbg !4503
  br i1 %tobool, label %if.end, label %if.then, !dbg !4505

if.then:                                          ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4506
  %2 = load i8*, i8** %random_source.addr, align 8, !dbg !4507, !tbaa !2355
  call void @sort_die(i8* %call1, i8* %2) #15, !dbg !4508
  unreachable, !dbg !4508

if.end:                                           ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %r, align 8, !dbg !4509, !tbaa !2355
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !4510
  call void @randread(%struct.randread_source* %3, i8* %arraydecay, i64 16), !dbg !4511
  %4 = load %struct.randread_source*, %struct.randread_source** %r, align 8, !dbg !4512, !tbaa !2355
  %call2 = call i32 @randread_free(%struct.randread_source* %4), !dbg !4514
  %cmp = icmp ne i32 %call2, 0, !dbg !4515
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !4516

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !4517
  %5 = load i8*, i8** %random_source.addr, align 8, !dbg !4518, !tbaa !2355
  call void @sort_die(i8* %call4, i8* %5) #15, !dbg !4519
  unreachable, !dbg !4519

if.end5:                                          ; preds = %if.end
  call void @md5_init_ctx(%struct.md5_ctx* @random_md5_state) #12, !dbg !4520
  %arraydecay6 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !4521
  call void @md5_process_bytes(i8* %arraydecay6, i64 16, %struct.md5_ctx* @random_md5_state) #12, !dbg !4522
  ret void, !dbg !4523
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check(i8* %file_name, i8 signext %checkonly) #4 !dbg !4524 !ctir !438 {
entry:
  %file_name.addr = alloca i8*, align 8, !ctir !87
  %checkonly.addr = alloca i8, align 1, !ctir !8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %buf = alloca %struct.buffer, align 8, !ctir !451
  %temp = alloca %struct.line, align 8, !ctir !442
  %alloc = alloca i64, align 8, !ctir !52
  %line_number = alloca i64, align 8, !ctir !355
  %key = alloca %struct.keyfield*, align 8, !ctir !416
  %nonunique = alloca i8, align 1, !ctir !102
  %ordered = alloca i8, align 1, !ctir !102
  %line = alloca %struct.line*, align 8, !ctir !440
  %linebase = alloca %struct.line*, align 8, !ctir !440
  %disorder_line = alloca %struct.line*, align 8, !ctir !440
  %disorder_line_number = alloca i64, align 8, !ctir !355
  %hr_buf = alloca [21 x i8], align 16, !ctir !423
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  store i8 %checkonly, i8* %checkonly.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %checkonly.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !4529, metadata !DIExpression()), !dbg !4530
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !4531, !tbaa !2355
  %call = call %struct._IO_FILE* @xfopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !4532
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !4530, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.buffer* %buf, metadata !4533, metadata !DIExpression()), !dbg !4534
  call void @llvm.dbg.declare(metadata %struct.line* %temp, metadata !4535, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata i64* %alloc, metadata !4537, metadata !DIExpression()), !dbg !4538
  store i64 0, i64* %alloc, align 8, !dbg !4538, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %line_number, metadata !4539, metadata !DIExpression()), !dbg !4540
  store i64 0, i64* %line_number, align 8, !dbg !4540, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !4541, metadata !DIExpression()), !dbg !4542
  %1 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4543, !tbaa !2355
  store %struct.keyfield* %1, %struct.keyfield** %key, align 8, !dbg !4542, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %nonunique, metadata !4544, metadata !DIExpression()), !dbg !4545
  %2 = load i8, i8* @unique, align 1, !dbg !4546, !tbaa !2499
  %tobool = trunc i8 %2 to i1, !dbg !4546
  %lnot = xor i1 %tobool, true, !dbg !4547
  %frombool = zext i1 %lnot to i8, !dbg !4545
  store i8 %frombool, i8* %nonunique, align 1, !dbg !4545, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %ordered, metadata !4548, metadata !DIExpression()), !dbg !4549
  store i8 1, i8* %ordered, align 1, !dbg !4549, !tbaa !2499
  %3 = load i64, i64* @merge_buffer_size, align 8, !dbg !4550, !tbaa !2516
  %4 = load i64, i64* @sort_size, align 8, !dbg !4550, !tbaa !2516
  %cmp = icmp ugt i64 %3, %4, !dbg !4550
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4550

cond.true:                                        ; preds = %entry
  %5 = load i64, i64* @merge_buffer_size, align 8, !dbg !4550, !tbaa !2516
  br label %cond.end, !dbg !4550

cond.false:                                       ; preds = %entry
  %6 = load i64, i64* @sort_size, align 8, !dbg !4550, !tbaa !2516
  br label %cond.end, !dbg !4550

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !4550
  call void @initbuf(%struct.buffer* %buf, i64 32, i64 %cond), !dbg !4551
  %text = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4552, !ctir !442
  store i8* null, i8** %text, align 8, !dbg !4553, !tbaa !4554, !ctir !7
  br label %while.cond, !dbg !4556

while.cond:                                       ; preds = %if.end69, %cond.end
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4557, !tbaa !2355
  %8 = load i8*, i8** %file_name.addr, align 8, !dbg !4558, !tbaa !2355
  %call1 = call zeroext i1 @fillbuf(%struct.buffer* %buf, %struct._IO_FILE* %7, i8* %8), !dbg !4559
  br i1 %call1, label %while.body, label %while.end70, !dbg !4556

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !4560, metadata !DIExpression()), !dbg !4562
  %call2 = call %struct.line* @buffer_linelim(%struct.buffer* %buf), !dbg !4563
  store %struct.line* %call2, %struct.line** %line, align 8, !dbg !4562, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %linebase, metadata !4564, metadata !DIExpression()), !dbg !4565
  %9 = load %struct.line*, %struct.line** %line, align 8, !dbg !4566, !tbaa !2355
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !4567, !ctir !451
  %10 = load i64, i64* %nlines, align 8, !dbg !4567, !tbaa !4568, !ctir !52
  %idx.neg = sub i64 0, %10, !dbg !4570
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %9, i64 %idx.neg, !dbg !4570
  store %struct.line* %add.ptr, %struct.line** %linebase, align 8, !dbg !4565, !tbaa !2355
  %11 = load i64, i64* %alloc, align 8, !dbg !4571, !tbaa !2516
  %tobool3 = icmp ne i64 %11, 0, !dbg !4571
  br i1 %tobool3, label %land.lhs.true, label %if.end19, !dbg !4573

land.lhs.true:                                    ; preds = %while.body
  %12 = load i8, i8* %nonunique, align 1, !dbg !4574, !tbaa !2499
  %tobool4 = trunc i8 %12 to i1, !dbg !4574
  %conv = zext i1 %tobool4 to i32, !dbg !4574
  %13 = load %struct.line*, %struct.line** %line, align 8, !dbg !4575, !tbaa !2355
  %add.ptr5 = getelementptr inbounds %struct.line, %struct.line* %13, i64 -1, !dbg !4576
  %call6 = call i32 @compare(%struct.line* %temp, %struct.line* %add.ptr5), !dbg !4577
  %cmp7 = icmp sle i32 %conv, %call6, !dbg !4578
  br i1 %cmp7, label %if.then, label %if.end19, !dbg !4579

if.then:                                          ; preds = %land.lhs.true
  br label %found_disorder, !dbg !4580

found_disorder:                                   ; preds = %if.then30, %if.then
  call void @llvm.dbg.label(metadata !4581), !dbg !4583
  %14 = load i8, i8* %checkonly.addr, align 1, !dbg !4584, !tbaa !2507
  %conv9 = sext i8 %14 to i32, !dbg !4584
  %cmp10 = icmp eq i32 %conv9, 99, !dbg !4587
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !4588

if.then12:                                        ; preds = %found_disorder
  call void @llvm.dbg.declare(metadata %struct.line** %disorder_line, metadata !4589, metadata !DIExpression()), !dbg !4591
  %15 = load %struct.line*, %struct.line** %line, align 8, !dbg !4592, !tbaa !2355
  %add.ptr13 = getelementptr inbounds %struct.line, %struct.line* %15, i64 -1, !dbg !4593
  store %struct.line* %add.ptr13, %struct.line** %disorder_line, align 8, !dbg !4591, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %disorder_line_number, metadata !4594, metadata !DIExpression()), !dbg !4595
  %call14 = call %struct.line* @buffer_linelim(%struct.buffer* %buf), !dbg !4596
  %16 = load %struct.line*, %struct.line** %disorder_line, align 8, !dbg !4597, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint %struct.line* %call14 to i64, !dbg !4598
  %sub.ptr.rhs.cast = ptrtoint %struct.line* %16 to i64, !dbg !4598
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4598
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !4598
  %17 = load i64, i64* %line_number, align 8, !dbg !4599, !tbaa !2516
  %add = add i64 %sub.ptr.div, %17, !dbg !4600
  store i64 %add, i64* %disorder_line_number, align 8, !dbg !4595, !tbaa !2516
  call void @llvm.dbg.declare(metadata [21 x i8]* %hr_buf, metadata !4601, metadata !DIExpression()), !dbg !4602
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4603, !tbaa !2355
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.157, i64 0, i64 0)) #12, !dbg !4604
  %19 = load i8*, i8** @program_name, align 8, !dbg !4605, !tbaa !2355
  %20 = load i8*, i8** %file_name.addr, align 8, !dbg !4606, !tbaa !2355
  %21 = load i64, i64* %disorder_line_number, align 8, !dbg !4607, !tbaa !2516
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %hr_buf, i64 0, i64 0, !dbg !4608
  %call16 = call i8* @umaxtostr(i64 %21, i8* %arraydecay), !dbg !4609
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* %call15, i8* %19, i8* %20, i8* %call16), !dbg !4610
  %22 = load %struct.line*, %struct.line** %disorder_line, align 8, !dbg !4611, !tbaa !2355
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4612, !tbaa !2355
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i64 0, i64 0)) #12, !dbg !4613
  call void @write_line(%struct.line* %22, %struct._IO_FILE* %23, i8* %call18), !dbg !4614
  br label %if.end, !dbg !4615

if.end:                                           ; preds = %if.then12, %found_disorder
  store i8 0, i8* %ordered, align 1, !dbg !4616, !tbaa !2499
  br label %while.end70, !dbg !4617

if.end19:                                         ; preds = %land.lhs.true, %while.body
  br label %while.cond20, !dbg !4618

while.cond20:                                     ; preds = %if.end31, %if.end19
  %24 = load %struct.line*, %struct.line** %linebase, align 8, !dbg !4619, !tbaa !2355
  %25 = load %struct.line*, %struct.line** %line, align 8, !dbg !4620, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.line, %struct.line* %25, i32 -1, !dbg !4620
  store %struct.line* %incdec.ptr, %struct.line** %line, align 8, !dbg !4620, !tbaa !2355
  %cmp21 = icmp ult %struct.line* %24, %incdec.ptr, !dbg !4621
  br i1 %cmp21, label %while.body23, label %while.end, !dbg !4618

while.body23:                                     ; preds = %while.cond20
  %26 = load i8, i8* %nonunique, align 1, !dbg !4622, !tbaa !2499
  %tobool24 = trunc i8 %26 to i1, !dbg !4622
  %conv25 = zext i1 %tobool24 to i32, !dbg !4622
  %27 = load %struct.line*, %struct.line** %line, align 8, !dbg !4624, !tbaa !2355
  %28 = load %struct.line*, %struct.line** %line, align 8, !dbg !4625, !tbaa !2355
  %add.ptr26 = getelementptr inbounds %struct.line, %struct.line* %28, i64 -1, !dbg !4626
  %call27 = call i32 @compare(%struct.line* %27, %struct.line* %add.ptr26), !dbg !4627
  %cmp28 = icmp sle i32 %conv25, %call27, !dbg !4628
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !4629

if.then30:                                        ; preds = %while.body23
  br label %found_disorder, !dbg !4630

if.end31:                                         ; preds = %while.body23
  br label %while.cond20, !dbg !4618, !llvm.loop !4631

while.end:                                        ; preds = %while.cond20
  %nlines32 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !4633, !ctir !451
  %29 = load i64, i64* %nlines32, align 8, !dbg !4633, !tbaa !4568, !ctir !52
  %30 = load i64, i64* %line_number, align 8, !dbg !4634, !tbaa !2516
  %add33 = add i64 %30, %29, !dbg !4634
  store i64 %add33, i64* %line_number, align 8, !dbg !4634, !tbaa !2516
  %31 = load i64, i64* %alloc, align 8, !dbg !4635, !tbaa !2516
  %32 = load %struct.line*, %struct.line** %line, align 8, !dbg !4637, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %32, i32 0, i32 1, !dbg !4638, !ctir !441
  %33 = load i64, i64* %length, align 8, !dbg !4638, !tbaa !4639, !ctir !52
  %cmp34 = icmp ult i64 %31, %33, !dbg !4640
  br i1 %cmp34, label %if.then36, label %if.end47, !dbg !4641

if.then36:                                        ; preds = %while.end
  br label %do.body, !dbg !4642

do.body:                                          ; preds = %do.cond, %if.then36
  %34 = load i64, i64* %alloc, align 8, !dbg !4644, !tbaa !2516
  %mul = mul i64 %34, 2, !dbg !4644
  store i64 %mul, i64* %alloc, align 8, !dbg !4644, !tbaa !2516
  %35 = load i64, i64* %alloc, align 8, !dbg !4646, !tbaa !2516
  %tobool37 = icmp ne i64 %35, 0, !dbg !4646
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !4648

if.then38:                                        ; preds = %do.body
  %36 = load %struct.line*, %struct.line** %line, align 8, !dbg !4649, !tbaa !2355
  %length39 = getelementptr inbounds %struct.line, %struct.line* %36, i32 0, i32 1, !dbg !4651, !ctir !441
  %37 = load i64, i64* %length39, align 8, !dbg !4651, !tbaa !4639, !ctir !52
  store i64 %37, i64* %alloc, align 8, !dbg !4652, !tbaa !2516
  br label %do.end, !dbg !4653

if.end40:                                         ; preds = %do.body
  br label %do.cond, !dbg !4654

do.cond:                                          ; preds = %if.end40
  %38 = load i64, i64* %alloc, align 8, !dbg !4655, !tbaa !2516
  %39 = load %struct.line*, %struct.line** %line, align 8, !dbg !4656, !tbaa !2355
  %length41 = getelementptr inbounds %struct.line, %struct.line* %39, i32 0, i32 1, !dbg !4657, !ctir !441
  %40 = load i64, i64* %length41, align 8, !dbg !4657, !tbaa !4639, !ctir !52
  %cmp42 = icmp ult i64 %38, %40, !dbg !4658
  br i1 %cmp42, label %do.body, label %do.end, !dbg !4654, !llvm.loop !4659

do.end:                                           ; preds = %do.cond, %if.then38
  %text44 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4661, !ctir !442
  %41 = load i8*, i8** %text44, align 8, !dbg !4661, !tbaa !4554, !ctir !7
  call void @free(i8* %41) #12, !dbg !4662
  %42 = load i64, i64* %alloc, align 8, !dbg !4663, !tbaa !2516
  %call45 = call noalias i8* @xmalloc(i64 %42), !dbg !4664
  %text46 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4665, !ctir !442
  store i8* %call45, i8** %text46, align 8, !dbg !4666, !tbaa !4554, !ctir !7
  br label %if.end47, !dbg !4667

if.end47:                                         ; preds = %do.end, %while.end
  %text48 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4668, !ctir !442
  %43 = load i8*, i8** %text48, align 8, !dbg !4668, !tbaa !4554, !ctir !7
  %44 = load %struct.line*, %struct.line** %line, align 8, !dbg !4669, !tbaa !2355
  %text49 = getelementptr inbounds %struct.line, %struct.line* %44, i32 0, i32 0, !dbg !4670, !ctir !441
  %45 = load i8*, i8** %text49, align 8, !dbg !4670, !tbaa !4554, !ctir !7
  %46 = load %struct.line*, %struct.line** %line, align 8, !dbg !4671, !tbaa !2355
  %length50 = getelementptr inbounds %struct.line, %struct.line* %46, i32 0, i32 1, !dbg !4672, !ctir !441
  %47 = load i64, i64* %length50, align 8, !dbg !4672, !tbaa !4639, !ctir !52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %45, i64 %47, i1 false), !dbg !4673
  %48 = load %struct.line*, %struct.line** %line, align 8, !dbg !4674, !tbaa !2355
  %length51 = getelementptr inbounds %struct.line, %struct.line* %48, i32 0, i32 1, !dbg !4675, !ctir !441
  %49 = load i64, i64* %length51, align 8, !dbg !4675, !tbaa !4639, !ctir !52
  %length52 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 1, !dbg !4676, !ctir !442
  store i64 %49, i64* %length52, align 8, !dbg !4677, !tbaa !4639, !ctir !52
  %50 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4678, !tbaa !2355
  %tobool53 = icmp ne %struct.keyfield* %50, null, !dbg !4678
  br i1 %tobool53, label %if.then54, label %if.end69, !dbg !4680

if.then54:                                        ; preds = %if.end47
  %text55 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4681, !ctir !442
  %51 = load i8*, i8** %text55, align 8, !dbg !4681, !tbaa !4554, !ctir !7
  %52 = load %struct.line*, %struct.line** %line, align 8, !dbg !4683, !tbaa !2355
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %52, i32 0, i32 2, !dbg !4684, !ctir !441
  %53 = load i8*, i8** %keybeg, align 8, !dbg !4684, !tbaa !4685, !ctir !7
  %54 = load %struct.line*, %struct.line** %line, align 8, !dbg !4686, !tbaa !2355
  %text56 = getelementptr inbounds %struct.line, %struct.line* %54, i32 0, i32 0, !dbg !4687, !ctir !441
  %55 = load i8*, i8** %text56, align 8, !dbg !4687, !tbaa !4554, !ctir !7
  %sub.ptr.lhs.cast57 = ptrtoint i8* %53 to i64, !dbg !4688
  %sub.ptr.rhs.cast58 = ptrtoint i8* %55 to i64, !dbg !4688
  %sub.ptr.sub59 = sub i64 %sub.ptr.lhs.cast57, %sub.ptr.rhs.cast58, !dbg !4688
  %add.ptr60 = getelementptr inbounds i8, i8* %51, i64 %sub.ptr.sub59, !dbg !4689
  %keybeg61 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 2, !dbg !4690, !ctir !442
  store i8* %add.ptr60, i8** %keybeg61, align 8, !dbg !4691, !tbaa !4685, !ctir !7
  %text62 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4692, !ctir !442
  %56 = load i8*, i8** %text62, align 8, !dbg !4692, !tbaa !4554, !ctir !7
  %57 = load %struct.line*, %struct.line** %line, align 8, !dbg !4693, !tbaa !2355
  %keylim = getelementptr inbounds %struct.line, %struct.line* %57, i32 0, i32 3, !dbg !4694, !ctir !441
  %58 = load i8*, i8** %keylim, align 8, !dbg !4694, !tbaa !4695, !ctir !7
  %59 = load %struct.line*, %struct.line** %line, align 8, !dbg !4696, !tbaa !2355
  %text63 = getelementptr inbounds %struct.line, %struct.line* %59, i32 0, i32 0, !dbg !4697, !ctir !441
  %60 = load i8*, i8** %text63, align 8, !dbg !4697, !tbaa !4554, !ctir !7
  %sub.ptr.lhs.cast64 = ptrtoint i8* %58 to i64, !dbg !4698
  %sub.ptr.rhs.cast65 = ptrtoint i8* %60 to i64, !dbg !4698
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65, !dbg !4698
  %add.ptr67 = getelementptr inbounds i8, i8* %56, i64 %sub.ptr.sub66, !dbg !4699
  %keylim68 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 3, !dbg !4700, !ctir !442
  store i8* %add.ptr67, i8** %keylim68, align 8, !dbg !4701, !tbaa !4695, !ctir !7
  br label %if.end69, !dbg !4702

if.end69:                                         ; preds = %if.then54, %if.end47
  br label %while.cond, !dbg !4556, !llvm.loop !4703

while.end70:                                      ; preds = %if.end, %while.cond
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4705, !tbaa !2355
  %62 = load i8*, i8** %file_name.addr, align 8, !dbg !4706, !tbaa !2355
  call void @xfclose(%struct._IO_FILE* %61, i8* %62), !dbg !4707
  %buf71 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 0, !dbg !4708, !ctir !451
  %63 = load i8*, i8** %buf71, align 8, !dbg !4708, !tbaa !4709, !ctir !7
  call void @free(i8* %63) #12, !dbg !4710
  %text72 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4711, !ctir !442
  %64 = load i8*, i8** %text72, align 8, !dbg !4711, !tbaa !4554, !ctir !7
  call void @free(i8* %64) #12, !dbg !4712
  %65 = load i8, i8* %ordered, align 1, !dbg !4713, !tbaa !2499
  %tobool73 = trunc i8 %65 to i1, !dbg !4713
  ret i1 %tobool73, !dbg !4714
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_inputs(i8** %files, i64 %nfiles) #4 !dbg !4715 !ctir !518 {
entry:
  %files.addr = alloca i8**, align 8, !ctir !520
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  store i8** %files, i8*** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %files.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !4718, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4720, metadata !DIExpression()), !dbg !4722
  store i64 0, i64* %i, align 8, !dbg !4722, !tbaa !2516
  br label %for.cond, !dbg !4723

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !4724, !tbaa !2516
  %1 = load i64, i64* %nfiles.addr, align 8, !dbg !4726, !tbaa !2516
  %cmp = icmp ult i64 %0, %1, !dbg !4727
  br i1 %cmp, label %for.body, label %for.end, !dbg !4728

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %files.addr, align 8, !dbg !4729, !tbaa !2355
  %3 = load i64, i64* %i, align 8, !dbg !4729, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !4729, !ctir !520
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !4729, !tbaa !2355
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !4729
  %cmp1 = icmp eq i32 %call, 0, !dbg !4729
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4732

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !4733

if.end:                                           ; preds = %for.body
  %5 = load i8**, i8*** %files.addr, align 8, !dbg !4734, !tbaa !2355
  %6 = load i64, i64* %i, align 8, !dbg !4736, !tbaa !2516
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 %6, !dbg !4734, !ctir !520
  %7 = load i8*, i8** %arrayidx2, align 8, !dbg !4734, !tbaa !2355
  %call3 = call i32 @euidaccess(i8* %7, i32 4) #12, !dbg !4737
  %cmp4 = icmp ne i32 %call3, 0, !dbg !4738
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !4739

if.then5:                                         ; preds = %if.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i64 0, i64 0)) #12, !dbg !4740
  %8 = load i8**, i8*** %files.addr, align 8, !dbg !4741, !tbaa !2355
  %9 = load i64, i64* %i, align 8, !dbg !4742, !tbaa !2516
  %arrayidx7 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !4741, !ctir !520
  %10 = load i8*, i8** %arrayidx7, align 8, !dbg !4741, !tbaa !2355
  call void @sort_die(i8* %call6, i8* %10) #15, !dbg !4743
  unreachable, !dbg !4743

if.end8:                                          ; preds = %if.end
  br label %for.inc, !dbg !4744

for.inc:                                          ; preds = %if.end8, %if.then
  %11 = load i64, i64* %i, align 8, !dbg !4745, !tbaa !2516
  %inc = add i64 %11, 1, !dbg !4745
  store i64 %inc, i64* %i, align 8, !dbg !4745, !tbaa !2516
  br label %for.cond, !dbg !4746, !llvm.loop !4747

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4749
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_output(i8* %outfile) #4 !dbg !4750 !ctir !302 {
entry:
  %outfile.addr = alloca i8*, align 8, !ctir !87
  %oflags = alloca i32, align 4, !ctir !5
  %outfd = alloca i32, align 4, !ctir !5
  store i8* %outfile, i8** %outfile.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %outfile.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  %0 = load i8*, i8** %outfile.addr, align 8, !dbg !4753, !tbaa !2355
  %tobool = icmp ne i8* %0, null, !dbg !4753
  br i1 %tobool, label %if.then, label %if.end3, !dbg !4755

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %oflags, metadata !4756, metadata !DIExpression()), !dbg !4758
  store i32 524353, i32* %oflags, align 4, !dbg !4758, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %outfd, metadata !4759, metadata !DIExpression()), !dbg !4760
  %1 = load i8*, i8** %outfile.addr, align 8, !dbg !4761, !tbaa !2355
  %2 = load i32, i32* %oflags, align 4, !dbg !4762, !tbaa !2342
  %call = call i32 (i8*, i32, ...) @open(i8* %1, i32 %2, i32 438), !dbg !4763
  store i32 %call, i32* %outfd, align 4, !dbg !4760, !tbaa !2342
  %3 = load i32, i32* %outfd, align 4, !dbg !4764, !tbaa !2342
  %cmp = icmp slt i32 %3, 0, !dbg !4766
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4767

if.then1:                                         ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4768
  %4 = load i8*, i8** %outfile.addr, align 8, !dbg !4769, !tbaa !2355
  call void @sort_die(i8* %call2, i8* %4) #15, !dbg !4770
  unreachable, !dbg !4770

if.end:                                           ; preds = %if.then
  %5 = load i32, i32* %outfd, align 4, !dbg !4771, !tbaa !2342
  call void @move_fd(i32 %5, i32 1), !dbg !4772
  br label %if.end3, !dbg !4773

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !4774
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @merge(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, i8* %output_file) #4 !dbg !4775 !ctir !524 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8, !ctir !284
  %ntemps.addr = alloca i64, align 8, !ctir !52
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %output_file.addr = alloca i8*, align 8, !ctir !87
  %in = alloca i64, align 8, !ctir !52
  %out = alloca i64, align 8, !ctir !52
  %remainder = alloca i64, align 8, !ctir !52
  %cheap_slots = alloca i64, align 8, !ctir !52
  %tfp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp = alloca %struct.tempnode*, align 8, !ctir !289
  %num_merged = alloca i64, align 8, !ctir !52
  %nshortmerge = alloca i64, align 8, !ctir !52
  %tfp32 = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp33 = alloca %struct.tempnode*, align 8, !ctir !289
  %num_merged35 = alloca i64, align 8, !ctir !52
  %fps = alloca %struct._IO_FILE**, align 8, !ctir !526
  %nopened = alloca i64, align 8, !ctir !52
  %ofp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %tfp92 = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp93 = alloca %struct.tempnode*, align 8, !ctir !289
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !4776, metadata !DIExpression()), !dbg !4777
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !4778, metadata !DIExpression()), !dbg !4779
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !4780, metadata !DIExpression()), !dbg !4781
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !4782, metadata !DIExpression()), !dbg !4783
  br label %while.cond, !dbg !4784

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* @nmerge, align 4, !dbg !4785, !tbaa !2342
  %conv = zext i32 %0 to i64, !dbg !4785
  %1 = load i64, i64* %nfiles.addr, align 8, !dbg !4786, !tbaa !2516
  %cmp = icmp ult i64 %conv, %1, !dbg !4787
  br i1 %cmp, label %while.body, label %while.end, !dbg !4784

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %in, metadata !4788, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.declare(metadata i64* %out, metadata !4791, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata i64* %remainder, metadata !4793, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata i64* %cheap_slots, metadata !4795, metadata !DIExpression()), !dbg !4796
  store i64 0, i64* %in, align 8, !dbg !4797, !tbaa !2516
  store i64 0, i64* %out, align 8, !dbg !4799, !tbaa !2516
  br label %for.cond, !dbg !4800

for.cond:                                         ; preds = %for.inc, %while.body
  %2 = load i32, i32* @nmerge, align 4, !dbg !4801, !tbaa !2342
  %conv2 = zext i32 %2 to i64, !dbg !4801
  %3 = load i64, i64* %nfiles.addr, align 8, !dbg !4803, !tbaa !2516
  %4 = load i64, i64* %in, align 8, !dbg !4804, !tbaa !2516
  %sub = sub i64 %3, %4, !dbg !4805
  %cmp3 = icmp ule i64 %conv2, %sub, !dbg !4806
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4807

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp, metadata !4808, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp, metadata !4811, metadata !DIExpression()), !dbg !4812
  %call = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tfp), !dbg !4813
  store %struct.tempnode* %call, %struct.tempnode** %temp, align 8, !dbg !4812, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %num_merged, metadata !4814, metadata !DIExpression()), !dbg !4815
  %5 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4816, !tbaa !2355
  %6 = load i64, i64* %in, align 8, !dbg !4817, !tbaa !2516
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %5, i64 %6, !dbg !4816, !ctir !284
  %7 = load i64, i64* %ntemps.addr, align 8, !dbg !4818, !tbaa !2516
  %8 = load i32, i32* @nmerge, align 4, !dbg !4818, !tbaa !2342
  %conv5 = zext i32 %8 to i64, !dbg !4818
  %cmp6 = icmp ult i64 %7, %conv5, !dbg !4818
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !4818

cond.true:                                        ; preds = %for.body
  %9 = load i64, i64* %ntemps.addr, align 8, !dbg !4818, !tbaa !2516
  br label %cond.end, !dbg !4818

cond.false:                                       ; preds = %for.body
  %10 = load i32, i32* @nmerge, align 4, !dbg !4818, !tbaa !2342
  %conv8 = zext i32 %10 to i64, !dbg !4818
  br label %cond.end, !dbg !4818

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %9, %cond.true ], [ %conv8, %cond.false ], !dbg !4818
  %11 = load i32, i32* @nmerge, align 4, !dbg !4819, !tbaa !2342
  %conv9 = zext i32 %11 to i64, !dbg !4819
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !4820, !tbaa !2355
  %13 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !4821, !tbaa !2355
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %13, i32 0, i32 3, !dbg !4822, !ctir !290
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !4821
  %call10 = call i64 @mergefiles(%struct.sortfile* %arrayidx, i64 %cond, i64 %conv9, %struct._IO_FILE* %12, i8* %arraydecay), !dbg !4823
  store i64 %call10, i64* %num_merged, align 8, !dbg !4815, !tbaa !2516
  %14 = load i64, i64* %ntemps.addr, align 8, !dbg !4824, !tbaa !2516
  %15 = load i64, i64* %num_merged, align 8, !dbg !4824, !tbaa !2516
  %cmp11 = icmp ult i64 %14, %15, !dbg !4824
  br i1 %cmp11, label %cond.true13, label %cond.false14, !dbg !4824

cond.true13:                                      ; preds = %cond.end
  %16 = load i64, i64* %ntemps.addr, align 8, !dbg !4824, !tbaa !2516
  br label %cond.end15, !dbg !4824

cond.false14:                                     ; preds = %cond.end
  %17 = load i64, i64* %num_merged, align 8, !dbg !4824, !tbaa !2516
  br label %cond.end15, !dbg !4824

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %16, %cond.true13 ], [ %17, %cond.false14 ], !dbg !4824
  %18 = load i64, i64* %ntemps.addr, align 8, !dbg !4825, !tbaa !2516
  %sub17 = sub i64 %18, %cond16, !dbg !4825
  store i64 %sub17, i64* %ntemps.addr, align 8, !dbg !4825, !tbaa !2516
  %19 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !4826, !tbaa !2355
  %name18 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %19, i32 0, i32 3, !dbg !4827, !ctir !290
  %arraydecay19 = getelementptr inbounds [0 x i8], [0 x i8]* %name18, i64 0, i64 0, !dbg !4826
  %20 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4828, !tbaa !2355
  %21 = load i64, i64* %out, align 8, !dbg !4829, !tbaa !2516
  %arrayidx20 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %20, i64 %21, !dbg !4828, !ctir !284
  %name21 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx20, i32 0, i32 0, !dbg !4830, !ctir !285
  store i8* %arraydecay19, i8** %name21, align 8, !dbg !4831, !tbaa !3414, !ctir !87
  %22 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !4832, !tbaa !2355
  %23 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4833, !tbaa !2355
  %24 = load i64, i64* %out, align 8, !dbg !4834, !tbaa !2516
  %arrayidx22 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %23, i64 %24, !dbg !4833, !ctir !284
  %temp23 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx22, i32 0, i32 1, !dbg !4835, !ctir !285
  store %struct.tempnode* %22, %struct.tempnode** %temp23, align 8, !dbg !4836, !tbaa !4837, !ctir !289
  %25 = load i64, i64* %num_merged, align 8, !dbg !4838, !tbaa !2516
  %26 = load i64, i64* %in, align 8, !dbg !4839, !tbaa !2516
  %add = add i64 %26, %25, !dbg !4839
  store i64 %add, i64* %in, align 8, !dbg !4839, !tbaa !2516
  br label %for.inc, !dbg !4840

for.inc:                                          ; preds = %cond.end15
  %27 = load i64, i64* %out, align 8, !dbg !4841, !tbaa !2516
  %inc = add i64 %27, 1, !dbg !4841
  store i64 %inc, i64* %out, align 8, !dbg !4841, !tbaa !2516
  br label %for.cond, !dbg !4842, !llvm.loop !4843

for.end:                                          ; preds = %for.cond
  %28 = load i64, i64* %nfiles.addr, align 8, !dbg !4845, !tbaa !2516
  %29 = load i64, i64* %in, align 8, !dbg !4846, !tbaa !2516
  %sub24 = sub i64 %28, %29, !dbg !4847
  store i64 %sub24, i64* %remainder, align 8, !dbg !4848, !tbaa !2516
  %30 = load i32, i32* @nmerge, align 4, !dbg !4849, !tbaa !2342
  %conv25 = zext i32 %30 to i64, !dbg !4849
  %31 = load i64, i64* %out, align 8, !dbg !4850, !tbaa !2516
  %32 = load i32, i32* @nmerge, align 4, !dbg !4851, !tbaa !2342
  %conv26 = zext i32 %32 to i64, !dbg !4851
  %rem = urem i64 %31, %conv26, !dbg !4852
  %sub27 = sub i64 %conv25, %rem, !dbg !4853
  store i64 %sub27, i64* %cheap_slots, align 8, !dbg !4854, !tbaa !2516
  %33 = load i64, i64* %cheap_slots, align 8, !dbg !4855, !tbaa !2516
  %34 = load i64, i64* %remainder, align 8, !dbg !4857, !tbaa !2516
  %cmp28 = icmp ult i64 %33, %34, !dbg !4858
  br i1 %cmp28, label %if.then, label %if.end, !dbg !4859

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %nshortmerge, metadata !4860, metadata !DIExpression()), !dbg !4862
  %35 = load i64, i64* %remainder, align 8, !dbg !4863, !tbaa !2516
  %36 = load i64, i64* %cheap_slots, align 8, !dbg !4864, !tbaa !2516
  %sub30 = sub i64 %35, %36, !dbg !4865
  %add31 = add i64 %sub30, 1, !dbg !4866
  store i64 %add31, i64* %nshortmerge, align 8, !dbg !4862, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp32, metadata !4867, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp33, metadata !4869, metadata !DIExpression()), !dbg !4870
  %call34 = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tfp32), !dbg !4871
  store %struct.tempnode* %call34, %struct.tempnode** %temp33, align 8, !dbg !4870, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %num_merged35, metadata !4872, metadata !DIExpression()), !dbg !4873
  %37 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4874, !tbaa !2355
  %38 = load i64, i64* %in, align 8, !dbg !4875, !tbaa !2516
  %arrayidx36 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %37, i64 %38, !dbg !4874, !ctir !284
  %39 = load i64, i64* %ntemps.addr, align 8, !dbg !4876, !tbaa !2516
  %40 = load i64, i64* %nshortmerge, align 8, !dbg !4876, !tbaa !2516
  %cmp37 = icmp ult i64 %39, %40, !dbg !4876
  br i1 %cmp37, label %cond.true39, label %cond.false40, !dbg !4876

cond.true39:                                      ; preds = %if.then
  %41 = load i64, i64* %ntemps.addr, align 8, !dbg !4876, !tbaa !2516
  br label %cond.end41, !dbg !4876

cond.false40:                                     ; preds = %if.then
  %42 = load i64, i64* %nshortmerge, align 8, !dbg !4876, !tbaa !2516
  br label %cond.end41, !dbg !4876

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond42 = phi i64 [ %41, %cond.true39 ], [ %42, %cond.false40 ], !dbg !4876
  %43 = load i64, i64* %nshortmerge, align 8, !dbg !4877, !tbaa !2516
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp32, align 8, !dbg !4878, !tbaa !2355
  %45 = load %struct.tempnode*, %struct.tempnode** %temp33, align 8, !dbg !4879, !tbaa !2355
  %name43 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %45, i32 0, i32 3, !dbg !4880, !ctir !290
  %arraydecay44 = getelementptr inbounds [0 x i8], [0 x i8]* %name43, i64 0, i64 0, !dbg !4879
  %call45 = call i64 @mergefiles(%struct.sortfile* %arrayidx36, i64 %cond42, i64 %43, %struct._IO_FILE* %44, i8* %arraydecay44), !dbg !4881
  store i64 %call45, i64* %num_merged35, align 8, !dbg !4873, !tbaa !2516
  %46 = load i64, i64* %ntemps.addr, align 8, !dbg !4882, !tbaa !2516
  %47 = load i64, i64* %num_merged35, align 8, !dbg !4882, !tbaa !2516
  %cmp46 = icmp ult i64 %46, %47, !dbg !4882
  br i1 %cmp46, label %cond.true48, label %cond.false49, !dbg !4882

cond.true48:                                      ; preds = %cond.end41
  %48 = load i64, i64* %ntemps.addr, align 8, !dbg !4882, !tbaa !2516
  br label %cond.end50, !dbg !4882

cond.false49:                                     ; preds = %cond.end41
  %49 = load i64, i64* %num_merged35, align 8, !dbg !4882, !tbaa !2516
  br label %cond.end50, !dbg !4882

cond.end50:                                       ; preds = %cond.false49, %cond.true48
  %cond51 = phi i64 [ %48, %cond.true48 ], [ %49, %cond.false49 ], !dbg !4882
  %50 = load i64, i64* %ntemps.addr, align 8, !dbg !4883, !tbaa !2516
  %sub52 = sub i64 %50, %cond51, !dbg !4883
  store i64 %sub52, i64* %ntemps.addr, align 8, !dbg !4883, !tbaa !2516
  %51 = load %struct.tempnode*, %struct.tempnode** %temp33, align 8, !dbg !4884, !tbaa !2355
  %name53 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %51, i32 0, i32 3, !dbg !4885, !ctir !290
  %arraydecay54 = getelementptr inbounds [0 x i8], [0 x i8]* %name53, i64 0, i64 0, !dbg !4884
  %52 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4886, !tbaa !2355
  %53 = load i64, i64* %out, align 8, !dbg !4887, !tbaa !2516
  %arrayidx55 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %52, i64 %53, !dbg !4886, !ctir !284
  %name56 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx55, i32 0, i32 0, !dbg !4888, !ctir !285
  store i8* %arraydecay54, i8** %name56, align 8, !dbg !4889, !tbaa !3414, !ctir !87
  %54 = load %struct.tempnode*, %struct.tempnode** %temp33, align 8, !dbg !4890, !tbaa !2355
  %55 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4891, !tbaa !2355
  %56 = load i64, i64* %out, align 8, !dbg !4892, !tbaa !2516
  %inc57 = add i64 %56, 1, !dbg !4892
  store i64 %inc57, i64* %out, align 8, !dbg !4892, !tbaa !2516
  %arrayidx58 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %55, i64 %56, !dbg !4891, !ctir !284
  %temp59 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx58, i32 0, i32 1, !dbg !4893, !ctir !285
  store %struct.tempnode* %54, %struct.tempnode** %temp59, align 8, !dbg !4894, !tbaa !4837, !ctir !289
  %57 = load i64, i64* %num_merged35, align 8, !dbg !4895, !tbaa !2516
  %58 = load i64, i64* %in, align 8, !dbg !4896, !tbaa !2516
  %add60 = add i64 %58, %57, !dbg !4896
  store i64 %add60, i64* %in, align 8, !dbg !4896, !tbaa !2516
  br label %if.end, !dbg !4897

if.end:                                           ; preds = %cond.end50, %for.end
  %59 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4898, !tbaa !2355
  %60 = load i64, i64* %out, align 8, !dbg !4899, !tbaa !2516
  %arrayidx61 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %59, i64 %60, !dbg !4898, !ctir !284
  %61 = bitcast %struct.sortfile* %arrayidx61 to i8*, !dbg !4900
  %62 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4901, !tbaa !2355
  %63 = load i64, i64* %in, align 8, !dbg !4902, !tbaa !2516
  %arrayidx62 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %62, i64 %63, !dbg !4901, !ctir !284
  %64 = bitcast %struct.sortfile* %arrayidx62 to i8*, !dbg !4900
  %65 = load i64, i64* %nfiles.addr, align 8, !dbg !4903, !tbaa !2516
  %66 = load i64, i64* %in, align 8, !dbg !4904, !tbaa !2516
  %sub63 = sub i64 %65, %66, !dbg !4905
  %mul = mul i64 %sub63, 16, !dbg !4906
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %64, i64 %mul, i1 false), !dbg !4900
  %67 = load i64, i64* %out, align 8, !dbg !4907, !tbaa !2516
  %68 = load i64, i64* %ntemps.addr, align 8, !dbg !4908, !tbaa !2516
  %add64 = add i64 %68, %67, !dbg !4908
  store i64 %add64, i64* %ntemps.addr, align 8, !dbg !4908, !tbaa !2516
  %69 = load i64, i64* %in, align 8, !dbg !4909, !tbaa !2516
  %70 = load i64, i64* %out, align 8, !dbg !4910, !tbaa !2516
  %sub65 = sub i64 %69, %70, !dbg !4911
  %71 = load i64, i64* %nfiles.addr, align 8, !dbg !4912, !tbaa !2516
  %sub66 = sub i64 %71, %sub65, !dbg !4912
  store i64 %sub66, i64* %nfiles.addr, align 8, !dbg !4912, !tbaa !2516
  br label %while.cond, !dbg !4784, !llvm.loop !4913

while.end:                                        ; preds = %while.cond
  %72 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4915, !tbaa !2355
  %73 = load i64, i64* %ntemps.addr, align 8, !dbg !4916, !tbaa !2516
  %74 = load i64, i64* %nfiles.addr, align 8, !dbg !4917, !tbaa !2516
  %75 = load i8*, i8** %output_file.addr, align 8, !dbg !4918, !tbaa !2355
  call void @avoid_trashing_input(%struct.sortfile* %72, i64 %73, i64 %74, i8* %75), !dbg !4919
  br label %while.body68, !dbg !4920

while.body68:                                     ; preds = %while.end, %cond.end115
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps, metadata !4921, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i64* %nopened, metadata !4924, metadata !DIExpression()), !dbg !4925
  %76 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4926, !tbaa !2355
  %77 = load i64, i64* %nfiles.addr, align 8, !dbg !4927, !tbaa !2516
  %call69 = call i64 @open_input_files(%struct.sortfile* %76, i64 %77, %struct._IO_FILE*** %fps), !dbg !4928
  store i64 %call69, i64* %nopened, align 8, !dbg !4925, !tbaa !2516
  %78 = load i64, i64* %nopened, align 8, !dbg !4929, !tbaa !2516
  %79 = load i64, i64* %nfiles.addr, align 8, !dbg !4931, !tbaa !2516
  %cmp70 = icmp eq i64 %78, %79, !dbg !4932
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !4933

if.then72:                                        ; preds = %while.body68
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %ofp, metadata !4934, metadata !DIExpression()), !dbg !4936
  %80 = load i8*, i8** %output_file.addr, align 8, !dbg !4937, !tbaa !2355
  %call73 = call %struct._IO_FILE* @stream_open(i8* %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i64 0, i64 0)), !dbg !4938
  store %struct._IO_FILE* %call73, %struct._IO_FILE** %ofp, align 8, !dbg !4936, !tbaa !2355
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp, align 8, !dbg !4939, !tbaa !2355
  %tobool = icmp ne %struct._IO_FILE* %81, null, !dbg !4939
  br i1 %tobool, label %if.then74, label %if.end75, !dbg !4941

if.then74:                                        ; preds = %if.then72
  %82 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4942, !tbaa !2355
  %83 = load i64, i64* %ntemps.addr, align 8, !dbg !4944, !tbaa !2516
  %84 = load i64, i64* %nfiles.addr, align 8, !dbg !4945, !tbaa !2516
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp, align 8, !dbg !4946, !tbaa !2355
  %86 = load i8*, i8** %output_file.addr, align 8, !dbg !4947, !tbaa !2355
  %87 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !4948, !tbaa !2355
  call void @mergefps(%struct.sortfile* %82, i64 %83, i64 %84, %struct._IO_FILE* %85, i8* %86, %struct._IO_FILE** %87), !dbg !4949
  br label %while.end131, !dbg !4950

if.end75:                                         ; preds = %if.then72
  %call76 = call i32* @__errno_location() #16, !dbg !4951
  %88 = load i32, i32* %call76, align 4, !dbg !4951, !tbaa !2342, !ctir !5
  %cmp77 = icmp ne i32 %88, 24, !dbg !4953
  br i1 %cmp77, label %if.then81, label %lor.lhs.false, !dbg !4954

lor.lhs.false:                                    ; preds = %if.end75
  %89 = load i64, i64* %nopened, align 8, !dbg !4955, !tbaa !2516
  %cmp79 = icmp ule i64 %89, 2, !dbg !4956
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !4957

if.then81:                                        ; preds = %lor.lhs.false, %if.end75
  %call82 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4958
  %90 = load i8*, i8** %output_file.addr, align 8, !dbg !4959, !tbaa !2355
  call void @sort_die(i8* %call82, i8* %90) #15, !dbg !4960
  unreachable, !dbg !4960

if.end83:                                         ; preds = %lor.lhs.false
  br label %if.end91, !dbg !4961

if.else:                                          ; preds = %while.body68
  %91 = load i64, i64* %nopened, align 8, !dbg !4962, !tbaa !2516
  %cmp84 = icmp ule i64 %91, 2, !dbg !4964
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !4965

if.then86:                                        ; preds = %if.else
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4966
  %92 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4967, !tbaa !2355
  %93 = load i64, i64* %nopened, align 8, !dbg !4968, !tbaa !2516
  %arrayidx88 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %92, i64 %93, !dbg !4967, !ctir !284
  %name89 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx88, i32 0, i32 0, !dbg !4969, !ctir !285
  %94 = load i8*, i8** %name89, align 8, !dbg !4969, !tbaa !3414, !ctir !87
  call void @sort_die(i8* %call87, i8* %94) #15, !dbg !4970
  unreachable, !dbg !4970

if.end90:                                         ; preds = %if.else
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end83
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp92, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp93, metadata !4973, metadata !DIExpression()), !dbg !4974
  br label %do.body, !dbg !4975

do.body:                                          ; preds = %do.cond, %if.end91
  %95 = load i64, i64* %nopened, align 8, !dbg !4976, !tbaa !2516
  %dec = add i64 %95, -1, !dbg !4976
  store i64 %dec, i64* %nopened, align 8, !dbg !4976, !tbaa !2516
  %96 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !4978, !tbaa !2355
  %97 = load i64, i64* %nopened, align 8, !dbg !4979, !tbaa !2516
  %arrayidx94 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %96, i64 %97, !dbg !4978, !ctir !526
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx94, align 8, !dbg !4978, !tbaa !2355
  %99 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4980, !tbaa !2355
  %100 = load i64, i64* %nopened, align 8, !dbg !4981, !tbaa !2516
  %arrayidx95 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %99, i64 %100, !dbg !4980, !ctir !284
  %name96 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx95, i32 0, i32 0, !dbg !4982, !ctir !285
  %101 = load i8*, i8** %name96, align 8, !dbg !4982, !tbaa !3414, !ctir !87
  call void @xfclose(%struct._IO_FILE* %98, i8* %101), !dbg !4983
  %102 = load i64, i64* %nopened, align 8, !dbg !4984, !tbaa !2516
  %cmp97 = icmp ule i64 %102, 2, !dbg !4985
  %lnot = xor i1 %cmp97, true, !dbg !4986
  %call99 = call %struct.tempnode* @maybe_create_temp(%struct._IO_FILE** %tfp92, i1 zeroext %lnot), !dbg !4987
  store %struct.tempnode* %call99, %struct.tempnode** %temp93, align 8, !dbg !4988, !tbaa !2355
  br label %do.cond, !dbg !4989

do.cond:                                          ; preds = %do.body
  %103 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !4990, !tbaa !2355
  %tobool100 = icmp ne %struct.tempnode* %103, null, !dbg !4991
  %lnot101 = xor i1 %tobool100, true, !dbg !4991
  br i1 %lnot101, label %do.body, label %do.end, !dbg !4989, !llvm.loop !4992

do.end:                                           ; preds = %do.cond
  %104 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4994, !tbaa !2355
  %arrayidx102 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %104, i64 0, !dbg !4994, !ctir !284
  %105 = load i64, i64* %ntemps.addr, align 8, !dbg !4995, !tbaa !2516
  %106 = load i64, i64* %nopened, align 8, !dbg !4995, !tbaa !2516
  %cmp103 = icmp ult i64 %105, %106, !dbg !4995
  br i1 %cmp103, label %cond.true105, label %cond.false106, !dbg !4995

cond.true105:                                     ; preds = %do.end
  %107 = load i64, i64* %ntemps.addr, align 8, !dbg !4995, !tbaa !2516
  br label %cond.end107, !dbg !4995

cond.false106:                                    ; preds = %do.end
  %108 = load i64, i64* %nopened, align 8, !dbg !4995, !tbaa !2516
  br label %cond.end107, !dbg !4995

cond.end107:                                      ; preds = %cond.false106, %cond.true105
  %cond108 = phi i64 [ %107, %cond.true105 ], [ %108, %cond.false106 ], !dbg !4995
  %109 = load i64, i64* %nopened, align 8, !dbg !4996, !tbaa !2516
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp92, align 8, !dbg !4997, !tbaa !2355
  %111 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !4998, !tbaa !2355
  %name109 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %111, i32 0, i32 3, !dbg !4999, !ctir !290
  %arraydecay110 = getelementptr inbounds [0 x i8], [0 x i8]* %name109, i64 0, i64 0, !dbg !4998
  %112 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !5000, !tbaa !2355
  call void @mergefps(%struct.sortfile* %arrayidx102, i64 %cond108, i64 %109, %struct._IO_FILE* %110, i8* %arraydecay110, %struct._IO_FILE** %112), !dbg !5001
  %113 = load i64, i64* %ntemps.addr, align 8, !dbg !5002, !tbaa !2516
  %114 = load i64, i64* %nopened, align 8, !dbg !5002, !tbaa !2516
  %cmp111 = icmp ult i64 %113, %114, !dbg !5002
  br i1 %cmp111, label %cond.true113, label %cond.false114, !dbg !5002

cond.true113:                                     ; preds = %cond.end107
  %115 = load i64, i64* %ntemps.addr, align 8, !dbg !5002, !tbaa !2516
  br label %cond.end115, !dbg !5002

cond.false114:                                    ; preds = %cond.end107
  %116 = load i64, i64* %nopened, align 8, !dbg !5002, !tbaa !2516
  br label %cond.end115, !dbg !5002

cond.end115:                                      ; preds = %cond.false114, %cond.true113
  %cond116 = phi i64 [ %115, %cond.true113 ], [ %116, %cond.false114 ], !dbg !5002
  %117 = load i64, i64* %ntemps.addr, align 8, !dbg !5003, !tbaa !2516
  %sub117 = sub i64 %117, %cond116, !dbg !5003
  store i64 %sub117, i64* %ntemps.addr, align 8, !dbg !5003, !tbaa !2516
  %118 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !5004, !tbaa !2355
  %name118 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %118, i32 0, i32 3, !dbg !5005, !ctir !290
  %arraydecay119 = getelementptr inbounds [0 x i8], [0 x i8]* %name118, i64 0, i64 0, !dbg !5004
  %119 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !5006, !tbaa !2355
  %arrayidx120 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %119, i64 0, !dbg !5006, !ctir !284
  %name121 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx120, i32 0, i32 0, !dbg !5007, !ctir !285
  store i8* %arraydecay119, i8** %name121, align 8, !dbg !5008, !tbaa !3414, !ctir !87
  %120 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !5009, !tbaa !2355
  %121 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !5010, !tbaa !2355
  %arrayidx122 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %121, i64 0, !dbg !5010, !ctir !284
  %temp123 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx122, i32 0, i32 1, !dbg !5011, !ctir !285
  store %struct.tempnode* %120, %struct.tempnode** %temp123, align 8, !dbg !5012, !tbaa !4837, !ctir !289
  %122 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !5013, !tbaa !2355
  %arrayidx124 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %122, i64 1, !dbg !5013, !ctir !284
  %123 = bitcast %struct.sortfile* %arrayidx124 to i8*, !dbg !5014
  %124 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !5015, !tbaa !2355
  %125 = load i64, i64* %nopened, align 8, !dbg !5016, !tbaa !2516
  %arrayidx125 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %124, i64 %125, !dbg !5015, !ctir !284
  %126 = bitcast %struct.sortfile* %arrayidx125 to i8*, !dbg !5014
  %127 = load i64, i64* %nfiles.addr, align 8, !dbg !5017, !tbaa !2516
  %128 = load i64, i64* %nopened, align 8, !dbg !5018, !tbaa !2516
  %sub126 = sub i64 %127, %128, !dbg !5019
  %mul127 = mul i64 %sub126, 16, !dbg !5020
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %126, i64 %mul127, i1 false), !dbg !5014
  %129 = load i64, i64* %ntemps.addr, align 8, !dbg !5021, !tbaa !2516
  %inc128 = add i64 %129, 1, !dbg !5021
  store i64 %inc128, i64* %ntemps.addr, align 8, !dbg !5021, !tbaa !2516
  %130 = load i64, i64* %nopened, align 8, !dbg !5022, !tbaa !2516
  %sub129 = sub i64 %130, 1, !dbg !5023
  %131 = load i64, i64* %nfiles.addr, align 8, !dbg !5024, !tbaa !2516
  %sub130 = sub i64 %131, %sub129, !dbg !5024
  store i64 %sub130, i64* %nfiles.addr, align 8, !dbg !5024, !tbaa !2516
  br label %while.body68, !dbg !4920, !llvm.loop !5025

while.end131:                                     ; preds = %if.then74
  ret void, !dbg !5027
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sort(i8** %files, i64 %nfiles, i8* %output_file, i64 %nthreads) #4 !dbg !5028 !ctir !575 {
entry:
  %files.addr = alloca i8**, align 8, !ctir !520
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %output_file.addr = alloca i8*, align 8, !ctir !87
  %nthreads.addr = alloca i64, align 8, !ctir !52
  %buf = alloca %struct.buffer, align 8, !ctir !451
  %ntemps = alloca i64, align 8, !ctir !52
  %output_file_created = alloca i8, align 1, !ctir !102
  %temp_output = alloca i8*, align 8, !ctir !87
  %file = alloca i8*, align 8, !ctir !87
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %tfp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %bytes_per_line = alloca i64, align 8, !ctir !52
  %tmp = alloca i64, align 8, !ctir !52
  %mult = alloca i64, align 8, !ctir !52
  %line = alloca %struct.line*, align 8, !ctir !462
  %queue = alloca %struct.merge_node_queue, align 8, !ctir !631
  %merge_tree = alloca %struct.merge_node*, align 8, !ctir !577
  %node = alloca %struct.tempnode*, align 8, !ctir !289
  %tempfiles = alloca %struct.sortfile*, align 8, !ctir !284
  %i = alloca i64, align 8, !ctir !52
  store i8** %files, i8*** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %files.addr, metadata !5029, metadata !DIExpression()), !dbg !5030
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !5031, metadata !DIExpression()), !dbg !5032
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !5033, metadata !DIExpression()), !dbg !5034
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5035, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.declare(metadata %struct.buffer* %buf, metadata !5037, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.declare(metadata i64* %ntemps, metadata !5039, metadata !DIExpression()), !dbg !5040
  store i64 0, i64* %ntemps, align 8, !dbg !5040, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8* %output_file_created, metadata !5041, metadata !DIExpression()), !dbg !5042
  store i8 0, i8* %output_file_created, align 1, !dbg !5042, !tbaa !2499
  %alloc = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 3, !dbg !5043, !ctir !451
  store i64 0, i64* %alloc, align 8, !dbg !5044, !tbaa !5045, !ctir !52
  br label %while.cond, !dbg !5046

while.cond:                                       ; preds = %while.end52, %entry
  %0 = load i64, i64* %nfiles.addr, align 8, !dbg !5047, !tbaa !2516
  %tobool = icmp ne i64 %0, 0, !dbg !5046
  br i1 %tobool, label %while.body, label %while.end53, !dbg !5046

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %temp_output, metadata !5048, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata i8** %file, metadata !5051, metadata !DIExpression()), !dbg !5052
  %1 = load i8**, i8*** %files.addr, align 8, !dbg !5053, !tbaa !2355
  %2 = load i8*, i8** %1, align 8, !dbg !5054, !tbaa !2355, !ctir !521
  store i8* %2, i8** %file, align 8, !dbg !5052, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !5055, metadata !DIExpression()), !dbg !5056
  %3 = load i8*, i8** %file, align 8, !dbg !5057, !tbaa !2355
  %call = call %struct._IO_FILE* @xfopen(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !5058
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !5056, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp, metadata !5059, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.declare(metadata i64* %bytes_per_line, metadata !5061, metadata !DIExpression()), !dbg !5062
  %4 = load i64, i64* %nthreads.addr, align 8, !dbg !5063, !tbaa !2516
  %cmp = icmp ugt i64 %4, 1, !dbg !5065
  br i1 %cmp, label %if.then, label %if.else, !dbg !5066

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !5067, metadata !DIExpression()), !dbg !5069
  store i64 1, i64* %tmp, align 8, !dbg !5069, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %mult, metadata !5070, metadata !DIExpression()), !dbg !5071
  store i64 1, i64* %mult, align 8, !dbg !5071, !tbaa !2516
  br label %while.cond1, !dbg !5072

while.cond1:                                      ; preds = %while.body3, %if.then
  %5 = load i64, i64* %tmp, align 8, !dbg !5073, !tbaa !2516
  %6 = load i64, i64* %nthreads.addr, align 8, !dbg !5074, !tbaa !2516
  %cmp2 = icmp ult i64 %5, %6, !dbg !5075
  br i1 %cmp2, label %while.body3, label %while.end, !dbg !5072

while.body3:                                      ; preds = %while.cond1
  %7 = load i64, i64* %tmp, align 8, !dbg !5076, !tbaa !2516
  %mul = mul i64 %7, 2, !dbg !5076
  store i64 %mul, i64* %tmp, align 8, !dbg !5076, !tbaa !2516
  %8 = load i64, i64* %mult, align 8, !dbg !5078, !tbaa !2516
  %inc = add i64 %8, 1, !dbg !5078
  store i64 %inc, i64* %mult, align 8, !dbg !5078, !tbaa !2516
  br label %while.cond1, !dbg !5072, !llvm.loop !5079

while.end:                                        ; preds = %while.cond1
  %9 = load i64, i64* %mult, align 8, !dbg !5081, !tbaa !2516
  %mul4 = mul i64 %9, 32, !dbg !5082
  store i64 %mul4, i64* %bytes_per_line, align 8, !dbg !5083, !tbaa !2516
  br label %if.end, !dbg !5084

if.else:                                          ; preds = %while.body
  store i64 48, i64* %bytes_per_line, align 8, !dbg !5085, !tbaa !2516
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  %alloc5 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 3, !dbg !5086, !ctir !451
  %10 = load i64, i64* %alloc5, align 8, !dbg !5086, !tbaa !5045, !ctir !52
  %tobool6 = icmp ne i64 %10, 0, !dbg !5088
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !5089

if.then7:                                         ; preds = %if.end
  %11 = load i64, i64* %bytes_per_line, align 8, !dbg !5090, !tbaa !2516
  %12 = load i8**, i8*** %files.addr, align 8, !dbg !5091, !tbaa !2355
  %13 = load i64, i64* %nfiles.addr, align 8, !dbg !5092, !tbaa !2516
  %14 = load i64, i64* %bytes_per_line, align 8, !dbg !5093, !tbaa !2516
  %call8 = call i64 @sort_buffer_size(%struct._IO_FILE** %fp, i64 1, i8** %12, i64 %13, i64 %14), !dbg !5094
  call void @initbuf(%struct.buffer* %buf, i64 %11, i64 %call8), !dbg !5095
  br label %if.end9, !dbg !5095

if.end9:                                          ; preds = %if.then7, %if.end
  %eof = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 6, !dbg !5096, !ctir !451
  store i8 0, i8* %eof, align 8, !dbg !5097, !tbaa !5098, !ctir !102
  %15 = load i8**, i8*** %files.addr, align 8, !dbg !5099, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8*, i8** %15, i32 1, !dbg !5099
  store i8** %incdec.ptr, i8*** %files.addr, align 8, !dbg !5099, !tbaa !2355
  %16 = load i64, i64* %nfiles.addr, align 8, !dbg !5100, !tbaa !2516
  %dec = add i64 %16, -1, !dbg !5100
  store i64 %dec, i64* %nfiles.addr, align 8, !dbg !5100, !tbaa !2516
  br label %while.cond10, !dbg !5101

while.cond10:                                     ; preds = %if.end51, %if.end9
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !5102, !tbaa !2355
  %18 = load i8*, i8** %file, align 8, !dbg !5103, !tbaa !2355
  %call11 = call zeroext i1 @fillbuf(%struct.buffer* %buf, %struct._IO_FILE* %17, i8* %18), !dbg !5104
  br i1 %call11, label %while.body12, label %while.end52, !dbg !5101

while.body12:                                     ; preds = %while.cond10
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !5105, metadata !DIExpression()), !dbg !5107
  %eof13 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 6, !dbg !5108, !ctir !451
  %19 = load i8, i8* %eof13, align 8, !dbg !5108, !tbaa !5098
  %tobool14 = trunc i8 %19 to i1, !dbg !5108, !ctir !102
  br i1 %tobool14, label %land.lhs.true, label %if.end23, !dbg !5110

land.lhs.true:                                    ; preds = %while.body12
  %20 = load i64, i64* %nfiles.addr, align 8, !dbg !5111, !tbaa !2516
  %tobool15 = icmp ne i64 %20, 0, !dbg !5111
  br i1 %tobool15, label %land.lhs.true16, label %if.end23, !dbg !5112

land.lhs.true16:                                  ; preds = %land.lhs.true
  %21 = load i64, i64* %bytes_per_line, align 8, !dbg !5113, !tbaa !2516
  %add = add i64 %21, 1, !dbg !5114
  %alloc17 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 3, !dbg !5115, !ctir !451
  %22 = load i64, i64* %alloc17, align 8, !dbg !5115, !tbaa !5045, !ctir !52
  %used = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 1, !dbg !5116, !ctir !451
  %23 = load i64, i64* %used, align 8, !dbg !5116, !tbaa !5117, !ctir !52
  %sub = sub i64 %22, %23, !dbg !5118
  %24 = load i64, i64* %bytes_per_line, align 8, !dbg !5119, !tbaa !2516
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5120, !ctir !451
  %25 = load i64, i64* %nlines, align 8, !dbg !5120, !tbaa !4568, !ctir !52
  %mul18 = mul i64 %24, %25, !dbg !5121
  %sub19 = sub i64 %sub, %mul18, !dbg !5122
  %cmp20 = icmp ult i64 %add, %sub19, !dbg !5123
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !5124

if.then21:                                        ; preds = %land.lhs.true16
  %used22 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 1, !dbg !5125, !ctir !451
  %26 = load i64, i64* %used22, align 8, !dbg !5125, !tbaa !5117, !ctir !52
  %left = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 4, !dbg !5127, !ctir !451
  store i64 %26, i64* %left, align 8, !dbg !5128, !tbaa !5129, !ctir !52
  br label %while.end52, !dbg !5130

if.end23:                                         ; preds = %land.lhs.true16, %land.lhs.true, %while.body12
  store i8* null, i8** getelementptr inbounds (%struct.line, %struct.line* @saved_line, i32 0, i32 0), align 8, !dbg !5131, !tbaa !4554, !ctir !7
  %call24 = call %struct.line* @buffer_linelim(%struct.buffer* %buf), !dbg !5132
  store %struct.line* %call24, %struct.line** %line, align 8, !dbg !5133, !tbaa !2355
  %eof25 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 6, !dbg !5134, !ctir !451
  %27 = load i8, i8* %eof25, align 8, !dbg !5134, !tbaa !5098
  %tobool26 = trunc i8 %27 to i1, !dbg !5134, !ctir !102
  br i1 %tobool26, label %land.lhs.true27, label %if.else36, !dbg !5136

land.lhs.true27:                                  ; preds = %if.end23
  %28 = load i64, i64* %nfiles.addr, align 8, !dbg !5137, !tbaa !2516
  %tobool28 = icmp ne i64 %28, 0, !dbg !5137
  br i1 %tobool28, label %if.else36, label %land.lhs.true29, !dbg !5138

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %29 = load i64, i64* %ntemps, align 8, !dbg !5139, !tbaa !2516
  %tobool30 = icmp ne i64 %29, 0, !dbg !5139
  br i1 %tobool30, label %if.else36, label %land.lhs.true31, !dbg !5140

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %left32 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 4, !dbg !5141, !ctir !451
  %30 = load i64, i64* %left32, align 8, !dbg !5141, !tbaa !5129, !ctir !52
  %tobool33 = icmp ne i64 %30, 0, !dbg !5142
  br i1 %tobool33, label %if.else36, label %if.then34, !dbg !5143

if.then34:                                        ; preds = %land.lhs.true31
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !5144, !tbaa !2355
  %32 = load i8*, i8** %file, align 8, !dbg !5146, !tbaa !2355
  call void @xfclose(%struct._IO_FILE* %31, i8* %32), !dbg !5147
  %33 = load i8*, i8** %output_file.addr, align 8, !dbg !5148, !tbaa !2355
  %call35 = call %struct._IO_FILE* @xfopen(i8* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i64 0, i64 0)), !dbg !5149
  store %struct._IO_FILE* %call35, %struct._IO_FILE** %tfp, align 8, !dbg !5150, !tbaa !2355
  %34 = load i8*, i8** %output_file.addr, align 8, !dbg !5151, !tbaa !2355
  store i8* %34, i8** %temp_output, align 8, !dbg !5152, !tbaa !2355
  store i8 1, i8* %output_file_created, align 1, !dbg !5153, !tbaa !2499
  br label %if.end39, !dbg !5154

if.else36:                                        ; preds = %land.lhs.true31, %land.lhs.true29, %land.lhs.true27, %if.end23
  %35 = load i64, i64* %ntemps, align 8, !dbg !5155, !tbaa !2516
  %inc37 = add i64 %35, 1, !dbg !5155
  store i64 %inc37, i64* %ntemps, align 8, !dbg !5155, !tbaa !2516
  %call38 = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tfp), !dbg !5157
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %call38, i32 0, i32 3, !dbg !5158, !ctir !290
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !5157
  store i8* %arraydecay, i8** %temp_output, align 8, !dbg !5159, !tbaa !2355
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.then34
  %nlines40 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5160, !ctir !451
  %36 = load i64, i64* %nlines40, align 8, !dbg !5160, !tbaa !4568, !ctir !52
  %cmp41 = icmp ult i64 1, %36, !dbg !5162
  br i1 %cmp41, label %if.then42, label %if.else46, !dbg !5163

if.then42:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue* %queue, metadata !5164, metadata !DIExpression()), !dbg !5166
  %37 = load i64, i64* %nthreads.addr, align 8, !dbg !5167, !tbaa !2516
  call void @queue_init(%struct.merge_node_queue* %queue, i64 %37), !dbg !5168
  call void @llvm.dbg.declare(metadata %struct.merge_node** %merge_tree, metadata !5169, metadata !DIExpression()), !dbg !5170
  %38 = load i64, i64* %nthreads.addr, align 8, !dbg !5171, !tbaa !2516
  %nlines43 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5172, !ctir !451
  %39 = load i64, i64* %nlines43, align 8, !dbg !5172, !tbaa !4568, !ctir !52
  %40 = load %struct.line*, %struct.line** %line, align 8, !dbg !5173, !tbaa !2355
  %call44 = call %struct.merge_node* @merge_tree_init(i64 %38, i64 %39, %struct.line* %40), !dbg !5174
  store %struct.merge_node* %call44, %struct.merge_node** %merge_tree, align 8, !dbg !5170, !tbaa !2355
  %41 = load %struct.line*, %struct.line** %line, align 8, !dbg !5175, !tbaa !2355
  %42 = load i64, i64* %nthreads.addr, align 8, !dbg !5176, !tbaa !2516
  %nlines45 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5177, !ctir !451
  %43 = load i64, i64* %nlines45, align 8, !dbg !5177, !tbaa !4568, !ctir !52
  %44 = load %struct.merge_node*, %struct.merge_node** %merge_tree, align 8, !dbg !5178, !tbaa !2355
  %add.ptr = getelementptr inbounds %struct.merge_node, %struct.merge_node* %44, i64 1, !dbg !5179
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !5180, !tbaa !2355
  %46 = load i8*, i8** %temp_output, align 8, !dbg !5181, !tbaa !2355
  call void @sortlines(%struct.line* %41, i64 %42, i64 %43, %struct.merge_node* %add.ptr, %struct.merge_node_queue* %queue, %struct._IO_FILE* %45, i8* %46), !dbg !5182
  br label %if.end48, !dbg !5183

if.else46:                                        ; preds = %if.end39
  %47 = load %struct.line*, %struct.line** %line, align 8, !dbg !5184, !tbaa !2355
  %add.ptr47 = getelementptr inbounds %struct.line, %struct.line* %47, i64 -1, !dbg !5185
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !5186, !tbaa !2355
  %49 = load i8*, i8** %temp_output, align 8, !dbg !5187, !tbaa !2355
  call void @write_unique(%struct.line* %add.ptr47, %struct._IO_FILE* %48, i8* %49), !dbg !5188
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then42
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !5189, !tbaa !2355
  %51 = load i8*, i8** %temp_output, align 8, !dbg !5190, !tbaa !2355
  call void @xfclose(%struct._IO_FILE* %50, i8* %51), !dbg !5191
  %52 = load i8, i8* %output_file_created, align 1, !dbg !5192, !tbaa !2499
  %tobool49 = trunc i8 %52 to i1, !dbg !5192
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !5194

if.then50:                                        ; preds = %if.end48
  br label %finish, !dbg !5195

if.end51:                                         ; preds = %if.end48
  br label %while.cond10, !dbg !5101, !llvm.loop !5196

while.end52:                                      ; preds = %if.then21, %while.cond10
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !5198, !tbaa !2355
  %54 = load i8*, i8** %file, align 8, !dbg !5199, !tbaa !2355
  call void @xfclose(%struct._IO_FILE* %53, i8* %54), !dbg !5200
  br label %while.cond, !dbg !5046, !llvm.loop !5201

while.end53:                                      ; preds = %while.cond
  br label %finish, !dbg !5046

finish:                                           ; preds = %while.end53, %if.then50
  call void @llvm.dbg.label(metadata !5203), !dbg !5204
  %buf54 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 0, !dbg !5205, !ctir !451
  %55 = load i8*, i8** %buf54, align 8, !dbg !5205, !tbaa !4709, !ctir !7
  call void @free(i8* %55) #12, !dbg !5206
  %56 = load i8, i8* %output_file_created, align 1, !dbg !5207, !tbaa !2499
  %tobool55 = trunc i8 %56 to i1, !dbg !5207
  br i1 %tobool55, label %if.end64, label %if.then56, !dbg !5209

if.then56:                                        ; preds = %finish
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !5210, metadata !DIExpression()), !dbg !5212
  %57 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !5213, !tbaa !2355
  store %struct.tempnode* %57, %struct.tempnode** %node, align 8, !dbg !5212, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.sortfile** %tempfiles, metadata !5214, metadata !DIExpression()), !dbg !5215
  %58 = load i64, i64* %ntemps, align 8, !dbg !5216, !tbaa !2516
  %call57 = call noalias i8* @xnmalloc(i64 %58, i64 16), !dbg !5217
  %59 = bitcast i8* %call57 to %struct.sortfile*, !dbg !5217
  store %struct.sortfile* %59, %struct.sortfile** %tempfiles, align 8, !dbg !5215, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5218, metadata !DIExpression()), !dbg !5220
  store i64 0, i64* %i, align 8, !dbg !5220, !tbaa !2516
  br label %for.cond, !dbg !5221

for.cond:                                         ; preds = %for.inc, %if.then56
  %60 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5222, !tbaa !2355
  %tobool58 = icmp ne %struct.tempnode* %60, null, !dbg !5224
  br i1 %tobool58, label %for.body, label %for.end, !dbg !5224

for.body:                                         ; preds = %for.cond
  %61 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5225, !tbaa !2355
  %name59 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %61, i32 0, i32 3, !dbg !5227, !ctir !290
  %arraydecay60 = getelementptr inbounds [0 x i8], [0 x i8]* %name59, i64 0, i64 0, !dbg !5225
  %62 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5228, !tbaa !2355
  %63 = load i64, i64* %i, align 8, !dbg !5229, !tbaa !2516
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %62, i64 %63, !dbg !5228, !ctir !284
  %name61 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 0, !dbg !5230, !ctir !285
  store i8* %arraydecay60, i8** %name61, align 8, !dbg !5231, !tbaa !3414, !ctir !87
  %64 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5232, !tbaa !2355
  %65 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5233, !tbaa !2355
  %66 = load i64, i64* %i, align 8, !dbg !5234, !tbaa !2516
  %arrayidx62 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %65, i64 %66, !dbg !5233, !ctir !284
  %temp = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx62, i32 0, i32 1, !dbg !5235, !ctir !285
  store %struct.tempnode* %64, %struct.tempnode** %temp, align 8, !dbg !5236, !tbaa !4837, !ctir !289
  %67 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5237, !tbaa !2355
  %next = getelementptr inbounds %struct.tempnode, %struct.tempnode* %67, i32 0, i32 0, !dbg !5238, !ctir !290
  %68 = load volatile %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !5238, !tbaa !2355, !ctir !293
  store %struct.tempnode* %68, %struct.tempnode** %node, align 8, !dbg !5239, !tbaa !2355
  br label %for.inc, !dbg !5240

for.inc:                                          ; preds = %for.body
  %69 = load i64, i64* %i, align 8, !dbg !5241, !tbaa !2516
  %inc63 = add i64 %69, 1, !dbg !5241
  store i64 %inc63, i64* %i, align 8, !dbg !5241, !tbaa !2516
  br label %for.cond, !dbg !5242, !llvm.loop !5243

for.end:                                          ; preds = %for.cond
  %70 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5245, !tbaa !2355
  %71 = load i64, i64* %ntemps, align 8, !dbg !5246, !tbaa !2516
  %72 = load i64, i64* %ntemps, align 8, !dbg !5247, !tbaa !2516
  %73 = load i8*, i8** %output_file.addr, align 8, !dbg !5248, !tbaa !2355
  call void @merge(%struct.sortfile* %70, i64 %71, i64 %72, i8* %73), !dbg !5249
  %74 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5250, !tbaa !2355
  %75 = bitcast %struct.sortfile* %74 to i8*, !dbg !5250
  call void @free(i8* %75) #12, !dbg !5251
  br label %if.end64, !dbg !5252

if.end64:                                         ; preds = %for.end, %finish
  call void @reap_all(), !dbg !5253
  ret void, !dbg !5254
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @sort_die(i8* %message, i8* %file) #0 !dbg !5255 !ctir !359 {
entry:
  %message.addr = alloca i8*, align 8, !ctir !87
  %file.addr = alloca i8*, align 8, !ctir !87
  store i8* %message, i8** %message.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5258, metadata !DIExpression()), !dbg !5259
  %call = call i32* @__errno_location() #16, !dbg !5260
  %0 = load i32, i32* %call, align 4, !dbg !5260, !tbaa !2342, !ctir !5
  %1 = load i8*, i8** %message.addr, align 8, !dbg !5260, !tbaa !2355
  %2 = load i8*, i8** %file.addr, align 8, !dbg !5260, !tbaa !2355
  %tobool = icmp ne i8* %2, null, !dbg !5260
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5260

cond.true:                                        ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !5260, !tbaa !2355
  br label %cond.end, !dbg !5260

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.181, i64 0, i64 0)) #12, !dbg !5260
  br label %cond.end, !dbg !5260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %call1, %cond.false ], !dbg !5260
  %call2 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %cond), !dbg !5260
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i64 0, i64 0), i8* %1, i8* %call2), !dbg !5260
  unreachable, !dbg !5260
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @sort_buffer_size(%struct._IO_FILE** %fps, i64 %nfps, i8** %files, i64 %nfiles, i64 %line_bytes) #4 !dbg !795 !ctir !620 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %fps.addr = alloca %struct._IO_FILE**, align 8, !ctir !622
  %nfps.addr = alloca i64, align 8, !ctir !52
  %files.addr = alloca i8**, align 8, !ctir !520
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %line_bytes.addr = alloca i64, align 8, !ctir !52
  %worst_case_per_input_byte = alloca i64, align 8, !ctir !52
  %size = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %st = alloca %struct.stat, align 8, !ctir !377
  %file_size = alloca i64, align 8, !ctir !624
  %worst_case = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE** %fps, %struct._IO_FILE*** %fps.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps.addr, metadata !5261, metadata !DIExpression()), !dbg !5262
  store i64 %nfps, i64* %nfps.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfps.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  store i8** %files, i8*** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %files.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  store i64 %line_bytes, i64* %line_bytes.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %line_bytes.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i64* %worst_case_per_input_byte, metadata !5271, metadata !DIExpression()), !dbg !5272
  %0 = load i64, i64* %line_bytes.addr, align 8, !dbg !5273, !tbaa !2516
  %add = add i64 %0, 1, !dbg !5274
  store i64 %add, i64* %worst_case_per_input_byte, align 8, !dbg !5272, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5275, metadata !DIExpression()), !dbg !5276
  %1 = load i64, i64* %worst_case_per_input_byte, align 8, !dbg !5277, !tbaa !2516
  %add1 = add i64 %1, 1, !dbg !5278
  store i64 %add1, i64* %size, align 8, !dbg !5276, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5279, metadata !DIExpression()), !dbg !5281
  store i64 0, i64* %i, align 8, !dbg !5281, !tbaa !2516
  br label %for.cond, !dbg !5282

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !5283, !tbaa !2516
  %3 = load i64, i64* %nfiles.addr, align 8, !dbg !5285, !tbaa !2516
  %cmp = icmp ult i64 %2, %3, !dbg !5286
  br i1 %cmp, label %for.body, label %for.end, !dbg !5287

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !5288, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.declare(metadata i64* %file_size, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata i64* %worst_case, metadata !5293, metadata !DIExpression()), !dbg !5294
  %4 = load i64, i64* %i, align 8, !dbg !5295, !tbaa !2516
  %5 = load i64, i64* %nfps.addr, align 8, !dbg !5297, !tbaa !2516
  %cmp2 = icmp ult i64 %4, %5, !dbg !5298
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !5295

cond.true:                                        ; preds = %for.body
  %6 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !5299, !tbaa !2355
  %7 = load i64, i64* %i, align 8, !dbg !5300, !tbaa !2516
  %arrayidx = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %6, i64 %7, !dbg !5299, !ctir !622
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx, align 8, !dbg !5299, !tbaa !2355
  %call = call i32 @fileno(%struct._IO_FILE* %8) #12, !dbg !5301
  %call3 = call i32 @fstat(i32 %call, %struct.stat* %st) #12, !dbg !5302
  br label %cond.end12, !dbg !5295

cond.false:                                       ; preds = %for.body
  %9 = load i8**, i8*** %files.addr, align 8, !dbg !5303, !tbaa !2355
  %10 = load i64, i64* %i, align 8, !dbg !5303, !tbaa !2516
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !5303, !ctir !520
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !5303, !tbaa !2355
  %call5 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !5303
  %cmp6 = icmp eq i32 %call5, 0, !dbg !5303
  br i1 %cmp6, label %cond.true7, label %cond.false9, !dbg !5303

cond.true7:                                       ; preds = %cond.false
  %call8 = call i32 @fstat(i32 0, %struct.stat* %st) #12, !dbg !5304
  br label %cond.end, !dbg !5303

cond.false9:                                      ; preds = %cond.false
  %12 = load i8**, i8*** %files.addr, align 8, !dbg !5305, !tbaa !2355
  %13 = load i64, i64* %i, align 8, !dbg !5306, !tbaa !2516
  %arrayidx10 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !5305, !ctir !520
  %14 = load i8*, i8** %arrayidx10, align 8, !dbg !5305, !tbaa !2355
  %call11 = call i32 @stat(i8* %14, %struct.stat* %st) #12, !dbg !5307
  br label %cond.end, !dbg !5303

cond.end:                                         ; preds = %cond.false9, %cond.true7
  %cond = phi i32 [ %call8, %cond.true7 ], [ %call11, %cond.false9 ], !dbg !5303
  br label %cond.end12, !dbg !5295

cond.end12:                                       ; preds = %cond.end, %cond.true
  %cond13 = phi i32 [ %call3, %cond.true ], [ %cond, %cond.end ], !dbg !5295
  %cmp14 = icmp ne i32 %cond13, 0, !dbg !5308
  br i1 %cmp14, label %if.then, label %if.end, !dbg !5309

if.then:                                          ; preds = %cond.end12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i64 0, i64 0)) #12, !dbg !5310
  %15 = load i8**, i8*** %files.addr, align 8, !dbg !5311, !tbaa !2355
  %16 = load i64, i64* %i, align 8, !dbg !5312, !tbaa !2516
  %arrayidx16 = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !5311, !ctir !520
  %17 = load i8*, i8** %arrayidx16, align 8, !dbg !5311, !tbaa !2355
  call void @sort_die(i8* %call15, i8* %17) #15, !dbg !5313
  unreachable, !dbg !5313

if.end:                                           ; preds = %cond.end12
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !5314, !ctir !377
  %18 = load i32, i32* %st_mode, align 8, !dbg !5314, !tbaa !5316, !ctir !387
  %and = and i32 %18, 61440, !dbg !5314
  %cmp17 = icmp eq i32 %and, 32768, !dbg !5314
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !5319

if.then18:                                        ; preds = %if.end
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5320, !ctir !377
  %19 = load i64, i64* %st_size, align 8, !dbg !5320, !tbaa !5321, !ctir !30
  store i64 %19, i64* %file_size, align 8, !dbg !5322, !tbaa !2516
  br label %if.end21, !dbg !5323

if.else:                                          ; preds = %if.end
  %20 = load i64, i64* @sort_size, align 8, !dbg !5324, !tbaa !2516
  %tobool = icmp ne i64 %20, 0, !dbg !5324
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !5327

if.then19:                                        ; preds = %if.else
  %21 = load i64, i64* @sort_size, align 8, !dbg !5328, !tbaa !2516
  store i64 %21, i64* %retval, align 8, !dbg !5329
  br label %return, !dbg !5329

if.end20:                                         ; preds = %if.else
  store i64 131072, i64* %file_size, align 8, !dbg !5330, !tbaa !2516
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then18
  %22 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5331, !tbaa !2516
  %tobool22 = icmp ne i64 %22, 0, !dbg !5331
  br i1 %tobool22, label %if.end28, label %if.then23, !dbg !5333

if.then23:                                        ; preds = %if.end21
  %23 = load i64, i64* @sort_size, align 8, !dbg !5334, !tbaa !2516
  store i64 %23, i64* @sort_buffer_size.size_bound, align 8, !dbg !5336, !tbaa !2516
  %24 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5337, !tbaa !2516
  %tobool24 = icmp ne i64 %24, 0, !dbg !5337
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !5339

if.then25:                                        ; preds = %if.then23
  %call26 = call i64 @default_sort_size(), !dbg !5340
  store i64 %call26, i64* @sort_buffer_size.size_bound, align 8, !dbg !5341, !tbaa !2516
  br label %if.end27, !dbg !5342

if.end27:                                         ; preds = %if.then25, %if.then23
  br label %if.end28, !dbg !5343

if.end28:                                         ; preds = %if.end27, %if.end21
  %25 = load i64, i64* %file_size, align 8, !dbg !5344, !tbaa !2516
  %26 = load i64, i64* %worst_case_per_input_byte, align 8, !dbg !5345, !tbaa !2516
  %mul = mul i64 %25, %26, !dbg !5346
  %add29 = add i64 %mul, 1, !dbg !5347
  store i64 %add29, i64* %worst_case, align 8, !dbg !5348, !tbaa !2516
  %27 = load i64, i64* %file_size, align 8, !dbg !5349, !tbaa !2516
  %28 = load i64, i64* %worst_case, align 8, !dbg !5351, !tbaa !2516
  %29 = load i64, i64* %worst_case_per_input_byte, align 8, !dbg !5352, !tbaa !2516
  %div = udiv i64 %28, %29, !dbg !5353
  %cmp30 = icmp ne i64 %27, %div, !dbg !5354
  br i1 %cmp30, label %if.then32, label %lor.lhs.false, !dbg !5355

lor.lhs.false:                                    ; preds = %if.end28
  %30 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5356, !tbaa !2516
  %31 = load i64, i64* %size, align 8, !dbg !5357, !tbaa !2516
  %sub = sub i64 %30, %31, !dbg !5358
  %32 = load i64, i64* %worst_case, align 8, !dbg !5359, !tbaa !2516
  %cmp31 = icmp ule i64 %sub, %32, !dbg !5360
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !5361

if.then32:                                        ; preds = %lor.lhs.false, %if.end28
  %33 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5362, !tbaa !2516
  store i64 %33, i64* %retval, align 8, !dbg !5363
  br label %return, !dbg !5363

if.end33:                                         ; preds = %lor.lhs.false
  %34 = load i64, i64* %worst_case, align 8, !dbg !5364, !tbaa !2516
  %35 = load i64, i64* %size, align 8, !dbg !5365, !tbaa !2516
  %add34 = add i64 %35, %34, !dbg !5365
  store i64 %add34, i64* %size, align 8, !dbg !5365, !tbaa !2516
  br label %for.inc, !dbg !5366

for.inc:                                          ; preds = %if.end33
  %36 = load i64, i64* %i, align 8, !dbg !5367, !tbaa !2516
  %inc = add i64 %36, 1, !dbg !5367
  store i64 %inc, i64* %i, align 8, !dbg !5367, !tbaa !2516
  br label %for.cond, !dbg !5368, !llvm.loop !5369

for.end:                                          ; preds = %for.cond
  %37 = load i64, i64* %size, align 8, !dbg !5371, !tbaa !2516
  store i64 %37, i64* %retval, align 8, !dbg !5372
  br label %return, !dbg !5372

return:                                           ; preds = %for.end, %if.then32, %if.then19
  %38 = load i64, i64* %retval, align 8, !dbg !5373
  ret i64 %38, !dbg !5373
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initbuf(%struct.buffer* %buf, i64 %line_bytes, i64 %alloc) #4 !dbg !5374 !ctir !448 {
entry:
  %buf.addr = alloca %struct.buffer*, align 8, !ctir !450
  %line_bytes.addr = alloca i64, align 8, !ctir !52
  %alloc.addr = alloca i64, align 8, !ctir !52
  store %struct.buffer* %buf, %struct.buffer** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.buffer** %buf.addr, metadata !5375, metadata !DIExpression()), !dbg !5376
  store i64 %line_bytes, i64* %line_bytes.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %line_bytes.addr, metadata !5377, metadata !DIExpression()), !dbg !5378
  store i64 %alloc, i64* %alloc.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %alloc.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  br label %while.body, !dbg !5381

while.body:                                       ; preds = %entry, %if.end5
  %0 = load i64, i64* %alloc.addr, align 8, !dbg !5382, !tbaa !2516
  %rem = urem i64 %0, 32, !dbg !5384
  %sub = sub i64 32, %rem, !dbg !5385
  %1 = load i64, i64* %alloc.addr, align 8, !dbg !5386, !tbaa !2516
  %add = add i64 %1, %sub, !dbg !5386
  store i64 %add, i64* %alloc.addr, align 8, !dbg !5386, !tbaa !2516
  %2 = load i64, i64* %alloc.addr, align 8, !dbg !5387, !tbaa !2516
  %call = call noalias i8* @malloc(i64 %2) #12, !dbg !5388
  %3 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5389, !tbaa !2355
  %buf1 = getelementptr inbounds %struct.buffer, %struct.buffer* %3, i32 0, i32 0, !dbg !5390, !ctir !451
  store i8* %call, i8** %buf1, align 8, !dbg !5391, !tbaa !4709, !ctir !7
  %4 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5392, !tbaa !2355
  %buf2 = getelementptr inbounds %struct.buffer, %struct.buffer* %4, i32 0, i32 0, !dbg !5394, !ctir !451
  %5 = load i8*, i8** %buf2, align 8, !dbg !5394, !tbaa !4709, !ctir !7
  %tobool = icmp ne i8* %5, null, !dbg !5392
  br i1 %tobool, label %if.then, label %if.end, !dbg !5395

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !5396

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %alloc.addr, align 8, !dbg !5397, !tbaa !2516
  %div = udiv i64 %6, 2, !dbg !5397
  store i64 %div, i64* %alloc.addr, align 8, !dbg !5397, !tbaa !2516
  %7 = load i64, i64* %alloc.addr, align 8, !dbg !5398, !tbaa !2516
  %8 = load i64, i64* %line_bytes.addr, align 8, !dbg !5400, !tbaa !2516
  %add3 = add i64 %8, 1, !dbg !5401
  %cmp = icmp ule i64 %7, %add3, !dbg !5402
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5403

if.then4:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !5404
  unreachable, !dbg !5404

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !5381, !llvm.loop !5405

while.end:                                        ; preds = %if.then
  %9 = load i64, i64* %line_bytes.addr, align 8, !dbg !5407, !tbaa !2516
  %10 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5408, !tbaa !2355
  %line_bytes6 = getelementptr inbounds %struct.buffer, %struct.buffer* %10, i32 0, i32 5, !dbg !5409, !ctir !451
  store i64 %9, i64* %line_bytes6, align 8, !dbg !5410, !tbaa !5411, !ctir !52
  %11 = load i64, i64* %alloc.addr, align 8, !dbg !5412, !tbaa !2516
  %12 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5413, !tbaa !2355
  %alloc7 = getelementptr inbounds %struct.buffer, %struct.buffer* %12, i32 0, i32 3, !dbg !5414, !ctir !451
  store i64 %11, i64* %alloc7, align 8, !dbg !5415, !tbaa !5045, !ctir !52
  %13 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5416, !tbaa !2355
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %13, i32 0, i32 2, !dbg !5417, !ctir !451
  store i64 0, i64* %nlines, align 8, !dbg !5418, !tbaa !4568, !ctir !52
  %14 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5419, !tbaa !2355
  %left = getelementptr inbounds %struct.buffer, %struct.buffer* %14, i32 0, i32 4, !dbg !5420, !ctir !451
  store i64 0, i64* %left, align 8, !dbg !5421, !tbaa !5129, !ctir !52
  %15 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5422, !tbaa !2355
  %used = getelementptr inbounds %struct.buffer, %struct.buffer* %15, i32 0, i32 1, !dbg !5423, !ctir !451
  store i64 0, i64* %used, align 8, !dbg !5424, !tbaa !5117, !ctir !52
  %16 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5425, !tbaa !2355
  %eof = getelementptr inbounds %struct.buffer, %struct.buffer* %16, i32 0, i32 6, !dbg !5426, !ctir !451
  store i8 0, i8* %eof, align 8, !dbg !5427, !tbaa !5098, !ctir !102
  ret void, !dbg !5428
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fillbuf(%struct.buffer* %buf, %struct._IO_FILE* %fp, i8* %file) #4 !dbg !5429 !ctir !460 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %buf.addr = alloca %struct.buffer*, align 8, !ctir !450
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %file.addr = alloca i8*, align 8, !ctir !87
  %key = alloca %struct.keyfield*, align 8, !ctir !416
  %eol = alloca i8, align 1, !ctir !8
  %line_bytes = alloca i64, align 8, !ctir !52
  %mergesize = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !7
  %linelim = alloca %struct.line*, align 8, !ctir !462
  %line = alloca %struct.line*, align 8, !ctir !462
  %avail = alloca i64, align 8, !ctir !52
  %line_start = alloca i8*, align 8, !ctir !7
  %readsize = alloca i64, align 8, !ctir !52
  %bytes_read = alloca i64, align 8, !ctir !52
  %ptrlim = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  %line_alloc = alloca i64, align 8, !ctir !52
  store %struct.buffer* %buf, %struct.buffer** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.buffer** %buf.addr, metadata !5430, metadata !DIExpression()), !dbg !5431
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !5432, metadata !DIExpression()), !dbg !5433
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5434, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !5436, metadata !DIExpression()), !dbg !5437
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !5438, !tbaa !2355
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !5437, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %eol, metadata !5439, metadata !DIExpression()), !dbg !5440
  %1 = load i8, i8* @eolchar, align 1, !dbg !5441, !tbaa !2507
  store i8 %1, i8* %eol, align 1, !dbg !5440, !tbaa !2507
  call void @llvm.dbg.declare(metadata i64* %line_bytes, metadata !5442, metadata !DIExpression()), !dbg !5443
  %2 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5444, !tbaa !2355
  %line_bytes1 = getelementptr inbounds %struct.buffer, %struct.buffer* %2, i32 0, i32 5, !dbg !5445, !ctir !451
  %3 = load i64, i64* %line_bytes1, align 8, !dbg !5445, !tbaa !5411, !ctir !52
  store i64 %3, i64* %line_bytes, align 8, !dbg !5443, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %mergesize, metadata !5446, metadata !DIExpression()), !dbg !5447
  %4 = load i64, i64* @merge_buffer_size, align 8, !dbg !5448, !tbaa !2516
  %sub = sub i64 %4, 34, !dbg !5449
  store i64 %sub, i64* %mergesize, align 8, !dbg !5447, !tbaa !2516
  %5 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5450, !tbaa !2355
  %eof = getelementptr inbounds %struct.buffer, %struct.buffer* %5, i32 0, i32 6, !dbg !5452, !ctir !451
  %6 = load i8, i8* %eof, align 8, !dbg !5452, !tbaa !5098
  %tobool = trunc i8 %6 to i1, !dbg !5452, !ctir !102
  br i1 %tobool, label %if.then, label %if.end, !dbg !5453

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5454
  br label %return, !dbg !5454

if.end:                                           ; preds = %entry
  %7 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5455, !tbaa !2355
  %used = getelementptr inbounds %struct.buffer, %struct.buffer* %7, i32 0, i32 1, !dbg !5457, !ctir !451
  %8 = load i64, i64* %used, align 8, !dbg !5457, !tbaa !5117, !ctir !52
  %9 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5458, !tbaa !2355
  %left = getelementptr inbounds %struct.buffer, %struct.buffer* %9, i32 0, i32 4, !dbg !5459, !ctir !451
  %10 = load i64, i64* %left, align 8, !dbg !5459, !tbaa !5129, !ctir !52
  %cmp = icmp ne i64 %8, %10, !dbg !5460
  br i1 %cmp, label %if.then2, label %if.end11, !dbg !5461

if.then2:                                         ; preds = %if.end
  %11 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5462, !tbaa !2355
  %buf3 = getelementptr inbounds %struct.buffer, %struct.buffer* %11, i32 0, i32 0, !dbg !5464, !ctir !451
  %12 = load i8*, i8** %buf3, align 8, !dbg !5464, !tbaa !4709, !ctir !7
  %13 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5465, !tbaa !2355
  %buf4 = getelementptr inbounds %struct.buffer, %struct.buffer* %13, i32 0, i32 0, !dbg !5466, !ctir !451
  %14 = load i8*, i8** %buf4, align 8, !dbg !5466, !tbaa !4709, !ctir !7
  %15 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5467, !tbaa !2355
  %used5 = getelementptr inbounds %struct.buffer, %struct.buffer* %15, i32 0, i32 1, !dbg !5468, !ctir !451
  %16 = load i64, i64* %used5, align 8, !dbg !5468, !tbaa !5117, !ctir !52
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !5469
  %17 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5470, !tbaa !2355
  %left6 = getelementptr inbounds %struct.buffer, %struct.buffer* %17, i32 0, i32 4, !dbg !5471, !ctir !451
  %18 = load i64, i64* %left6, align 8, !dbg !5471, !tbaa !5129, !ctir !52
  %idx.neg = sub i64 0, %18, !dbg !5472
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !5472
  %19 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5473, !tbaa !2355
  %left8 = getelementptr inbounds %struct.buffer, %struct.buffer* %19, i32 0, i32 4, !dbg !5474, !ctir !451
  %20 = load i64, i64* %left8, align 8, !dbg !5474, !tbaa !5129, !ctir !52
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr7, i64 %20, i1 false), !dbg !5475
  %21 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5476, !tbaa !2355
  %left9 = getelementptr inbounds %struct.buffer, %struct.buffer* %21, i32 0, i32 4, !dbg !5477, !ctir !451
  %22 = load i64, i64* %left9, align 8, !dbg !5477, !tbaa !5129, !ctir !52
  %23 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5478, !tbaa !2355
  %used10 = getelementptr inbounds %struct.buffer, %struct.buffer* %23, i32 0, i32 1, !dbg !5479, !ctir !451
  store i64 %22, i64* %used10, align 8, !dbg !5480, !tbaa !5117, !ctir !52
  %24 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5481, !tbaa !2355
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %24, i32 0, i32 2, !dbg !5482, !ctir !451
  store i64 0, i64* %nlines, align 8, !dbg !5483, !tbaa !4568, !ctir !52
  br label %if.end11, !dbg !5484

if.end11:                                         ; preds = %if.then2, %if.end
  br label %while.body, !dbg !5485

while.body:                                       ; preds = %if.end11, %if.end130
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5486, metadata !DIExpression()), !dbg !5488
  %25 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5489, !tbaa !2355
  %buf12 = getelementptr inbounds %struct.buffer, %struct.buffer* %25, i32 0, i32 0, !dbg !5490, !ctir !451
  %26 = load i8*, i8** %buf12, align 8, !dbg !5490, !tbaa !4709, !ctir !7
  %27 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5491, !tbaa !2355
  %used13 = getelementptr inbounds %struct.buffer, %struct.buffer* %27, i32 0, i32 1, !dbg !5492, !ctir !451
  %28 = load i64, i64* %used13, align 8, !dbg !5492, !tbaa !5117, !ctir !52
  %add.ptr14 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !5493
  store i8* %add.ptr14, i8** %ptr, align 8, !dbg !5488, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %linelim, metadata !5494, metadata !DIExpression()), !dbg !5495
  %29 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5496, !tbaa !2355
  %call = call %struct.line* @buffer_linelim(%struct.buffer* %29), !dbg !5497
  store %struct.line* %call, %struct.line** %linelim, align 8, !dbg !5495, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !5498, metadata !DIExpression()), !dbg !5499
  %30 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !5500, !tbaa !2355
  %31 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5501, !tbaa !2355
  %nlines15 = getelementptr inbounds %struct.buffer, %struct.buffer* %31, i32 0, i32 2, !dbg !5502, !ctir !451
  %32 = load i64, i64* %nlines15, align 8, !dbg !5502, !tbaa !4568, !ctir !52
  %idx.neg16 = sub i64 0, %32, !dbg !5503
  %add.ptr17 = getelementptr inbounds %struct.line, %struct.line* %30, i64 %idx.neg16, !dbg !5503
  store %struct.line* %add.ptr17, %struct.line** %line, align 8, !dbg !5499, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !5504, metadata !DIExpression()), !dbg !5505
  %33 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !5506, !tbaa !2355
  %34 = bitcast %struct.line* %33 to i8*, !dbg !5507
  %35 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5508, !tbaa !2355
  %nlines18 = getelementptr inbounds %struct.buffer, %struct.buffer* %35, i32 0, i32 2, !dbg !5509, !ctir !451
  %36 = load i64, i64* %nlines18, align 8, !dbg !5509, !tbaa !4568, !ctir !52
  %37 = load i64, i64* %line_bytes, align 8, !dbg !5510, !tbaa !2516
  %mul = mul i64 %36, %37, !dbg !5511
  %idx.neg19 = sub i64 0, %mul, !dbg !5512
  %add.ptr20 = getelementptr inbounds i8, i8* %34, i64 %idx.neg19, !dbg !5512
  %38 = load i8*, i8** %ptr, align 8, !dbg !5513, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr20 to i64, !dbg !5514
  %sub.ptr.rhs.cast = ptrtoint i8* %38 to i64, !dbg !5514
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5514
  store i64 %sub.ptr.sub, i64* %avail, align 8, !dbg !5505, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %line_start, metadata !5515, metadata !DIExpression()), !dbg !5516
  %39 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5517, !tbaa !2355
  %nlines21 = getelementptr inbounds %struct.buffer, %struct.buffer* %39, i32 0, i32 2, !dbg !5518, !ctir !451
  %40 = load i64, i64* %nlines21, align 8, !dbg !5518, !tbaa !4568, !ctir !52
  %tobool22 = icmp ne i64 %40, 0, !dbg !5517
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !5517

cond.true:                                        ; preds = %while.body
  %41 = load %struct.line*, %struct.line** %line, align 8, !dbg !5519, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %41, i32 0, i32 0, !dbg !5520, !ctir !442
  %42 = load i8*, i8** %text, align 8, !dbg !5520, !tbaa !4554, !ctir !7
  %43 = load %struct.line*, %struct.line** %line, align 8, !dbg !5521, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %43, i32 0, i32 1, !dbg !5522, !ctir !442
  %44 = load i64, i64* %length, align 8, !dbg !5522, !tbaa !4639, !ctir !52
  %add.ptr23 = getelementptr inbounds i8, i8* %42, i64 %44, !dbg !5523
  br label %cond.end, !dbg !5517

cond.false:                                       ; preds = %while.body
  %45 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5524, !tbaa !2355
  %buf24 = getelementptr inbounds %struct.buffer, %struct.buffer* %45, i32 0, i32 0, !dbg !5525, !ctir !451
  %46 = load i8*, i8** %buf24, align 8, !dbg !5525, !tbaa !4709, !ctir !7
  br label %cond.end, !dbg !5517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr23, %cond.true ], [ %46, %cond.false ], !dbg !5517
  store i8* %cond, i8** %line_start, align 8, !dbg !5516, !tbaa !2355
  br label %while.cond25, !dbg !5526

while.cond25:                                     ; preds = %if.end109, %cond.end
  %47 = load i64, i64* %line_bytes, align 8, !dbg !5527, !tbaa !2516
  %add = add i64 %47, 1, !dbg !5528
  %48 = load i64, i64* %avail, align 8, !dbg !5529, !tbaa !2516
  %cmp26 = icmp ult i64 %add, %48, !dbg !5530
  br i1 %cmp26, label %while.body27, label %while.end110, !dbg !5526

while.body27:                                     ; preds = %while.cond25
  call void @llvm.dbg.declare(metadata i64* %readsize, metadata !5531, metadata !DIExpression()), !dbg !5533
  %49 = load i64, i64* %avail, align 8, !dbg !5534, !tbaa !2516
  %sub28 = sub i64 %49, 1, !dbg !5535
  %50 = load i64, i64* %line_bytes, align 8, !dbg !5536, !tbaa !2516
  %add29 = add i64 %50, 1, !dbg !5537
  %div = udiv i64 %sub28, %add29, !dbg !5538
  store i64 %div, i64* %readsize, align 8, !dbg !5533, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !5539, metadata !DIExpression()), !dbg !5540
  %51 = load i8*, i8** %ptr, align 8, !dbg !5541, !tbaa !2355
  %52 = load i64, i64* %readsize, align 8, !dbg !5541, !tbaa !2516
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5541, !tbaa !2355
  %call30 = call i64 @fread_unlocked(i8* %51, i64 1, i64 %52, %struct._IO_FILE* %53), !dbg !5541
  store i64 %call30, i64* %bytes_read, align 8, !dbg !5540, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %ptrlim, metadata !5542, metadata !DIExpression()), !dbg !5543
  %54 = load i8*, i8** %ptr, align 8, !dbg !5544, !tbaa !2355
  %55 = load i64, i64* %bytes_read, align 8, !dbg !5545, !tbaa !2516
  %add.ptr31 = getelementptr inbounds i8, i8* %54, i64 %55, !dbg !5546
  store i8* %add.ptr31, i8** %ptrlim, align 8, !dbg !5543, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5547, metadata !DIExpression()), !dbg !5548
  %56 = load i64, i64* %bytes_read, align 8, !dbg !5549, !tbaa !2516
  %57 = load i64, i64* %avail, align 8, !dbg !5550, !tbaa !2516
  %sub32 = sub i64 %57, %56, !dbg !5550
  store i64 %sub32, i64* %avail, align 8, !dbg !5550, !tbaa !2516
  %58 = load i64, i64* %bytes_read, align 8, !dbg !5551, !tbaa !2516
  %59 = load i64, i64* %readsize, align 8, !dbg !5553, !tbaa !2516
  %cmp33 = icmp ne i64 %58, %59, !dbg !5554
  br i1 %cmp33, label %if.then34, label %if.end55, !dbg !5555

if.then34:                                        ; preds = %while.body27
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5556, !tbaa !2355
  %call35 = call i32 @ferror_unlocked(%struct._IO_FILE* %60) #12, !dbg !5556
  %tobool36 = icmp ne i32 %call35, 0, !dbg !5556
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !5559

if.then37:                                        ; preds = %if.then34
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0)) #12, !dbg !5560
  %61 = load i8*, i8** %file.addr, align 8, !dbg !5561, !tbaa !2355
  call void @sort_die(i8* %call38, i8* %61) #15, !dbg !5562
  unreachable, !dbg !5562

if.end39:                                         ; preds = %if.then34
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5563, !tbaa !2355
  %call40 = call i32 @feof_unlocked(%struct._IO_FILE* %62) #12, !dbg !5563
  %tobool41 = icmp ne i32 %call40, 0, !dbg !5563
  br i1 %tobool41, label %if.then42, label %if.end54, !dbg !5565

if.then42:                                        ; preds = %if.end39
  %63 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5566, !tbaa !2355
  %eof43 = getelementptr inbounds %struct.buffer, %struct.buffer* %63, i32 0, i32 6, !dbg !5568, !ctir !451
  store i8 1, i8* %eof43, align 8, !dbg !5569, !tbaa !5098, !ctir !102
  %64 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5570, !tbaa !2355
  %buf44 = getelementptr inbounds %struct.buffer, %struct.buffer* %64, i32 0, i32 0, !dbg !5572, !ctir !451
  %65 = load i8*, i8** %buf44, align 8, !dbg !5572, !tbaa !4709, !ctir !7
  %66 = load i8*, i8** %ptrlim, align 8, !dbg !5573, !tbaa !2355
  %cmp45 = icmp eq i8* %65, %66, !dbg !5574
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !5575

if.then46:                                        ; preds = %if.then42
  store i1 false, i1* %retval, align 1, !dbg !5576
  br label %return, !dbg !5576

if.end47:                                         ; preds = %if.then42
  %67 = load i8*, i8** %line_start, align 8, !dbg !5577, !tbaa !2355
  %68 = load i8*, i8** %ptrlim, align 8, !dbg !5579, !tbaa !2355
  %cmp48 = icmp ne i8* %67, %68, !dbg !5580
  br i1 %cmp48, label %land.lhs.true, label %if.end53, !dbg !5581

land.lhs.true:                                    ; preds = %if.end47
  %69 = load i8*, i8** %ptrlim, align 8, !dbg !5582, !tbaa !2355
  %arrayidx = getelementptr inbounds i8, i8* %69, i64 -1, !dbg !5582, !ctir !7
  %70 = load i8, i8* %arrayidx, align 1, !dbg !5582, !tbaa !2507
  %conv = sext i8 %70 to i32, !dbg !5582
  %71 = load i8, i8* %eol, align 1, !dbg !5583, !tbaa !2507
  %conv49 = sext i8 %71 to i32, !dbg !5583
  %cmp50 = icmp ne i32 %conv, %conv49, !dbg !5584
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !5585

if.then52:                                        ; preds = %land.lhs.true
  %72 = load i8, i8* %eol, align 1, !dbg !5586, !tbaa !2507
  %73 = load i8*, i8** %ptrlim, align 8, !dbg !5587, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %73, i32 1, !dbg !5587
  store i8* %incdec.ptr, i8** %ptrlim, align 8, !dbg !5587, !tbaa !2355
  store i8 %72, i8* %73, align 1, !dbg !5588, !tbaa !2507, !ctir !8
  br label %if.end53, !dbg !5589

if.end53:                                         ; preds = %if.then52, %land.lhs.true, %if.end47
  br label %if.end54, !dbg !5590

if.end54:                                         ; preds = %if.end53, %if.end39
  br label %if.end55, !dbg !5591

if.end55:                                         ; preds = %if.end54, %while.body27
  br label %while.cond56, !dbg !5592

while.cond56:                                     ; preds = %if.end104, %if.end55
  %74 = load i8*, i8** %ptr, align 8, !dbg !5593, !tbaa !2355
  %75 = load i8, i8* %eol, align 1, !dbg !5594, !tbaa !2507
  %conv57 = sext i8 %75 to i32, !dbg !5594
  %76 = load i8*, i8** %ptrlim, align 8, !dbg !5595, !tbaa !2355
  %77 = load i8*, i8** %ptr, align 8, !dbg !5596, !tbaa !2355
  %sub.ptr.lhs.cast58 = ptrtoint i8* %76 to i64, !dbg !5597
  %sub.ptr.rhs.cast59 = ptrtoint i8* %77 to i64, !dbg !5597
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59, !dbg !5597
  %call61 = call i8* @memchr(i8* %74, i32 %conv57, i64 %sub.ptr.sub60) #14, !dbg !5598
  store i8* %call61, i8** %p, align 8, !dbg !5599, !tbaa !2355
  %tobool62 = icmp ne i8* %call61, null, !dbg !5592
  br i1 %tobool62, label %while.body63, label %while.end105, !dbg !5592

while.body63:                                     ; preds = %while.cond56
  %78 = load i8*, i8** %p, align 8, !dbg !5600, !tbaa !2355
  store i8 0, i8* %78, align 1, !dbg !5602, !tbaa !2507, !ctir !8
  %79 = load i8*, i8** %p, align 8, !dbg !5603, !tbaa !2355
  %add.ptr64 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !5604
  store i8* %add.ptr64, i8** %ptr, align 8, !dbg !5605, !tbaa !2355
  %80 = load %struct.line*, %struct.line** %line, align 8, !dbg !5606, !tbaa !2355
  %incdec.ptr65 = getelementptr inbounds %struct.line, %struct.line* %80, i32 -1, !dbg !5606
  store %struct.line* %incdec.ptr65, %struct.line** %line, align 8, !dbg !5606, !tbaa !2355
  %81 = load i8*, i8** %line_start, align 8, !dbg !5607, !tbaa !2355
  %82 = load %struct.line*, %struct.line** %line, align 8, !dbg !5608, !tbaa !2355
  %text66 = getelementptr inbounds %struct.line, %struct.line* %82, i32 0, i32 0, !dbg !5609, !ctir !442
  store i8* %81, i8** %text66, align 8, !dbg !5610, !tbaa !4554, !ctir !7
  %83 = load i8*, i8** %ptr, align 8, !dbg !5611, !tbaa !2355
  %84 = load i8*, i8** %line_start, align 8, !dbg !5612, !tbaa !2355
  %sub.ptr.lhs.cast67 = ptrtoint i8* %83 to i64, !dbg !5613
  %sub.ptr.rhs.cast68 = ptrtoint i8* %84 to i64, !dbg !5613
  %sub.ptr.sub69 = sub i64 %sub.ptr.lhs.cast67, %sub.ptr.rhs.cast68, !dbg !5613
  %85 = load %struct.line*, %struct.line** %line, align 8, !dbg !5614, !tbaa !2355
  %length70 = getelementptr inbounds %struct.line, %struct.line* %85, i32 0, i32 1, !dbg !5615, !ctir !442
  store i64 %sub.ptr.sub69, i64* %length70, align 8, !dbg !5616, !tbaa !4639, !ctir !52
  %86 = load i64, i64* %mergesize, align 8, !dbg !5617, !tbaa !2516
  %87 = load %struct.line*, %struct.line** %line, align 8, !dbg !5617, !tbaa !2355
  %length71 = getelementptr inbounds %struct.line, %struct.line* %87, i32 0, i32 1, !dbg !5617, !ctir !442
  %88 = load i64, i64* %length71, align 8, !dbg !5617, !tbaa !4639, !ctir !52
  %cmp72 = icmp ugt i64 %86, %88, !dbg !5617
  br i1 %cmp72, label %cond.true74, label %cond.false75, !dbg !5617

cond.true74:                                      ; preds = %while.body63
  %89 = load i64, i64* %mergesize, align 8, !dbg !5617, !tbaa !2516
  br label %cond.end77, !dbg !5617

cond.false75:                                     ; preds = %while.body63
  %90 = load %struct.line*, %struct.line** %line, align 8, !dbg !5617, !tbaa !2355
  %length76 = getelementptr inbounds %struct.line, %struct.line* %90, i32 0, i32 1, !dbg !5617, !ctir !442
  %91 = load i64, i64* %length76, align 8, !dbg !5617, !tbaa !4639, !ctir !52
  br label %cond.end77, !dbg !5617

cond.end77:                                       ; preds = %cond.false75, %cond.true74
  %cond78 = phi i64 [ %89, %cond.true74 ], [ %91, %cond.false75 ], !dbg !5617
  store i64 %cond78, i64* %mergesize, align 8, !dbg !5618, !tbaa !2516
  %92 = load i64, i64* %line_bytes, align 8, !dbg !5619, !tbaa !2516
  %93 = load i64, i64* %avail, align 8, !dbg !5620, !tbaa !2516
  %sub79 = sub i64 %93, %92, !dbg !5620
  store i64 %sub79, i64* %avail, align 8, !dbg !5620, !tbaa !2516
  %94 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5621, !tbaa !2355
  %tobool80 = icmp ne %struct.keyfield* %94, null, !dbg !5621
  br i1 %tobool80, label %if.then81, label %if.end104, !dbg !5623

if.then81:                                        ; preds = %cond.end77
  %95 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5624, !tbaa !2355
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %95, i32 0, i32 2, !dbg !5626, !ctir !417
  %96 = load i64, i64* %eword, align 8, !dbg !5626, !tbaa !2826, !ctir !52
  %cmp82 = icmp eq i64 %96, -1, !dbg !5627
  br i1 %cmp82, label %cond.true84, label %cond.false85, !dbg !5624

cond.true84:                                      ; preds = %if.then81
  %97 = load i8*, i8** %p, align 8, !dbg !5628, !tbaa !2355
  br label %cond.end87, !dbg !5624

cond.false85:                                     ; preds = %if.then81
  %98 = load %struct.line*, %struct.line** %line, align 8, !dbg !5629, !tbaa !2355
  %99 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5630, !tbaa !2355
  %call86 = call i8* @limfield(%struct.line* %98, %struct.keyfield* %99), !dbg !5631
  br label %cond.end87, !dbg !5624

cond.end87:                                       ; preds = %cond.false85, %cond.true84
  %cond88 = phi i8* [ %97, %cond.true84 ], [ %call86, %cond.false85 ], !dbg !5624
  %100 = load %struct.line*, %struct.line** %line, align 8, !dbg !5632, !tbaa !2355
  %keylim = getelementptr inbounds %struct.line, %struct.line* %100, i32 0, i32 3, !dbg !5633, !ctir !442
  store i8* %cond88, i8** %keylim, align 8, !dbg !5634, !tbaa !4695, !ctir !7
  %101 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5635, !tbaa !2355
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %101, i32 0, i32 0, !dbg !5637, !ctir !417
  %102 = load i64, i64* %sword, align 8, !dbg !5637, !tbaa !2657, !ctir !52
  %cmp89 = icmp ne i64 %102, -1, !dbg !5638
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !5639

if.then91:                                        ; preds = %cond.end87
  %103 = load %struct.line*, %struct.line** %line, align 8, !dbg !5640, !tbaa !2355
  %104 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5641, !tbaa !2355
  %call92 = call i8* @begfield(%struct.line* %103, %struct.keyfield* %104), !dbg !5642
  %105 = load %struct.line*, %struct.line** %line, align 8, !dbg !5643, !tbaa !2355
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %105, i32 0, i32 2, !dbg !5644, !ctir !442
  store i8* %call92, i8** %keybeg, align 8, !dbg !5645, !tbaa !4685, !ctir !7
  br label %if.end103, !dbg !5643

if.else:                                          ; preds = %cond.end87
  %106 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5646, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %106, i32 0, i32 6, !dbg !5649, !ctir !417
  %107 = load i8, i8* %skipsblanks, align 8, !dbg !5649, !tbaa !3219
  %tobool93 = trunc i8 %107 to i1, !dbg !5649, !ctir !102
  br i1 %tobool93, label %if.then94, label %if.end101, !dbg !5650

if.then94:                                        ; preds = %if.else
  br label %while.cond95, !dbg !5651

while.cond95:                                     ; preds = %while.body99, %if.then94
  %108 = load i8*, i8** %line_start, align 8, !dbg !5652, !tbaa !2355
  %109 = load i8, i8* %108, align 1, !dbg !5653, !tbaa !2507, !ctir !8
  %call96 = call zeroext i8 @to_uchar(i8 signext %109), !dbg !5654
  %idxprom = zext i8 %call96 to i64, !dbg !5655
  %arrayidx97 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !5655, !ctir !318
  %110 = load i8, i8* %arrayidx97, align 1, !dbg !5655, !tbaa !2499
  %tobool98 = trunc i8 %110 to i1, !dbg !5655
  br i1 %tobool98, label %while.body99, label %while.end, !dbg !5651

while.body99:                                     ; preds = %while.cond95
  %111 = load i8*, i8** %line_start, align 8, !dbg !5656, !tbaa !2355
  %incdec.ptr100 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !5656
  store i8* %incdec.ptr100, i8** %line_start, align 8, !dbg !5656, !tbaa !2355
  br label %while.cond95, !dbg !5651, !llvm.loop !5657

while.end:                                        ; preds = %while.cond95
  br label %if.end101, !dbg !5651

if.end101:                                        ; preds = %while.end, %if.else
  %112 = load i8*, i8** %line_start, align 8, !dbg !5658, !tbaa !2355
  %113 = load %struct.line*, %struct.line** %line, align 8, !dbg !5659, !tbaa !2355
  %keybeg102 = getelementptr inbounds %struct.line, %struct.line* %113, i32 0, i32 2, !dbg !5660, !ctir !442
  store i8* %112, i8** %keybeg102, align 8, !dbg !5661, !tbaa !4685, !ctir !7
  br label %if.end103

if.end103:                                        ; preds = %if.end101, %if.then91
  br label %if.end104, !dbg !5662

if.end104:                                        ; preds = %if.end103, %cond.end77
  %114 = load i8*, i8** %ptr, align 8, !dbg !5663, !tbaa !2355
  store i8* %114, i8** %line_start, align 8, !dbg !5664, !tbaa !2355
  br label %while.cond56, !dbg !5592, !llvm.loop !5665

while.end105:                                     ; preds = %while.cond56
  %115 = load i8*, i8** %ptrlim, align 8, !dbg !5667, !tbaa !2355
  store i8* %115, i8** %ptr, align 8, !dbg !5668, !tbaa !2355
  %116 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5669, !tbaa !2355
  %eof106 = getelementptr inbounds %struct.buffer, %struct.buffer* %116, i32 0, i32 6, !dbg !5671, !ctir !451
  %117 = load i8, i8* %eof106, align 8, !dbg !5671, !tbaa !5098
  %tobool107 = trunc i8 %117 to i1, !dbg !5671, !ctir !102
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !5672

if.then108:                                       ; preds = %while.end105
  br label %while.end110, !dbg !5673

if.end109:                                        ; preds = %while.end105
  br label %while.cond25, !dbg !5526, !llvm.loop !5674

while.end110:                                     ; preds = %if.then108, %while.cond25
  %118 = load i8*, i8** %ptr, align 8, !dbg !5676, !tbaa !2355
  %119 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5677, !tbaa !2355
  %buf111 = getelementptr inbounds %struct.buffer, %struct.buffer* %119, i32 0, i32 0, !dbg !5678, !ctir !451
  %120 = load i8*, i8** %buf111, align 8, !dbg !5678, !tbaa !4709, !ctir !7
  %sub.ptr.lhs.cast112 = ptrtoint i8* %118 to i64, !dbg !5679
  %sub.ptr.rhs.cast113 = ptrtoint i8* %120 to i64, !dbg !5679
  %sub.ptr.sub114 = sub i64 %sub.ptr.lhs.cast112, %sub.ptr.rhs.cast113, !dbg !5679
  %121 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5680, !tbaa !2355
  %used115 = getelementptr inbounds %struct.buffer, %struct.buffer* %121, i32 0, i32 1, !dbg !5681, !ctir !451
  store i64 %sub.ptr.sub114, i64* %used115, align 8, !dbg !5682, !tbaa !5117, !ctir !52
  %122 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5683, !tbaa !2355
  %call116 = call %struct.line* @buffer_linelim(%struct.buffer* %122), !dbg !5684
  %123 = load %struct.line*, %struct.line** %line, align 8, !dbg !5685, !tbaa !2355
  %sub.ptr.lhs.cast117 = ptrtoint %struct.line* %call116 to i64, !dbg !5686
  %sub.ptr.rhs.cast118 = ptrtoint %struct.line* %123 to i64, !dbg !5686
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !5686
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub119, 32, !dbg !5686
  %124 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5687, !tbaa !2355
  %nlines120 = getelementptr inbounds %struct.buffer, %struct.buffer* %124, i32 0, i32 2, !dbg !5688, !ctir !451
  store i64 %sub.ptr.div, i64* %nlines120, align 8, !dbg !5689, !tbaa !4568, !ctir !52
  %125 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5690, !tbaa !2355
  %nlines121 = getelementptr inbounds %struct.buffer, %struct.buffer* %125, i32 0, i32 2, !dbg !5692, !ctir !451
  %126 = load i64, i64* %nlines121, align 8, !dbg !5692, !tbaa !4568, !ctir !52
  %cmp122 = icmp ne i64 %126, 0, !dbg !5693
  br i1 %cmp122, label %if.then124, label %if.end130, !dbg !5694

if.then124:                                       ; preds = %while.end110
  %127 = load i8*, i8** %ptr, align 8, !dbg !5695, !tbaa !2355
  %128 = load i8*, i8** %line_start, align 8, !dbg !5697, !tbaa !2355
  %sub.ptr.lhs.cast125 = ptrtoint i8* %127 to i64, !dbg !5698
  %sub.ptr.rhs.cast126 = ptrtoint i8* %128 to i64, !dbg !5698
  %sub.ptr.sub127 = sub i64 %sub.ptr.lhs.cast125, %sub.ptr.rhs.cast126, !dbg !5698
  %129 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5699, !tbaa !2355
  %left128 = getelementptr inbounds %struct.buffer, %struct.buffer* %129, i32 0, i32 4, !dbg !5700, !ctir !451
  store i64 %sub.ptr.sub127, i64* %left128, align 8, !dbg !5701, !tbaa !5129, !ctir !52
  %130 = load i64, i64* %mergesize, align 8, !dbg !5702, !tbaa !2516
  %add129 = add i64 %130, 34, !dbg !5703
  store i64 %add129, i64* @merge_buffer_size, align 8, !dbg !5704, !tbaa !2516
  store i1 true, i1* %retval, align 1, !dbg !5705
  br label %return, !dbg !5705

if.end130:                                        ; preds = %while.end110
  call void @llvm.dbg.declare(metadata i64* %line_alloc, metadata !5706, metadata !DIExpression()), !dbg !5708
  %131 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5709, !tbaa !2355
  %alloc = getelementptr inbounds %struct.buffer, %struct.buffer* %131, i32 0, i32 3, !dbg !5710, !ctir !451
  %132 = load i64, i64* %alloc, align 8, !dbg !5710, !tbaa !5045, !ctir !52
  %div131 = udiv i64 %132, 32, !dbg !5711
  store i64 %div131, i64* %line_alloc, align 8, !dbg !5708, !tbaa !2516
  %133 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5712, !tbaa !2355
  %buf132 = getelementptr inbounds %struct.buffer, %struct.buffer* %133, i32 0, i32 0, !dbg !5713, !ctir !451
  %134 = load i8*, i8** %buf132, align 8, !dbg !5713, !tbaa !4709, !ctir !7
  %call133 = call i8* @x2nrealloc(i8* %134, i64* %line_alloc, i64 32), !dbg !5714
  %135 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5715, !tbaa !2355
  %buf134 = getelementptr inbounds %struct.buffer, %struct.buffer* %135, i32 0, i32 0, !dbg !5716, !ctir !451
  store i8* %call133, i8** %buf134, align 8, !dbg !5717, !tbaa !4709, !ctir !7
  %136 = load i64, i64* %line_alloc, align 8, !dbg !5718, !tbaa !2516
  %mul135 = mul i64 %136, 32, !dbg !5719
  %137 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5720, !tbaa !2355
  %alloc136 = getelementptr inbounds %struct.buffer, %struct.buffer* %137, i32 0, i32 3, !dbg !5721, !ctir !451
  store i64 %mul135, i64* %alloc136, align 8, !dbg !5722, !tbaa !5045, !ctir !52
  br label %while.body, !dbg !5485, !llvm.loop !5723

return:                                           ; preds = %if.then124, %if.then46, %if.then
  %138 = load i1, i1* %retval, align 1, !dbg !5725
  ret i1 %138, !dbg !5725
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.line* @buffer_linelim(%struct.buffer* %buf) #4 !dbg !5726 !ctir !465 {
entry:
  %buf.addr = alloca %struct.buffer*, align 8, !ctir !467
  %linelim = alloca i8*, align 8, !ctir !47
  store %struct.buffer* %buf, %struct.buffer** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.buffer** %buf.addr, metadata !5727, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.declare(metadata i8** %linelim, metadata !5729, metadata !DIExpression()), !dbg !5730
  %0 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5731, !tbaa !2355
  %buf1 = getelementptr inbounds %struct.buffer, %struct.buffer* %0, i32 0, i32 0, !dbg !5732, !ctir !468
  %1 = load i8*, i8** %buf1, align 8, !dbg !5732, !tbaa !4709, !ctir !7
  %2 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5733, !tbaa !2355
  %alloc = getelementptr inbounds %struct.buffer, %struct.buffer* %2, i32 0, i32 3, !dbg !5734, !ctir !468
  %3 = load i64, i64* %alloc, align 8, !dbg !5734, !tbaa !5045, !ctir !52
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %3, !dbg !5735
  store i8* %add.ptr, i8** %linelim, align 8, !dbg !5730, !tbaa !2355
  %4 = load i8*, i8** %linelim, align 8, !dbg !5736, !tbaa !2355
  %5 = bitcast i8* %4 to %struct.line*, !dbg !5736
  ret %struct.line* %5, !dbg !5737
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tempnode* @create_temp(%struct._IO_FILE** %pfp) #4 !dbg !5738 !ctir !527 {
entry:
  %pfp.addr = alloca %struct._IO_FILE**, align 8, !ctir !526
  store %struct._IO_FILE** %pfp, %struct._IO_FILE*** %pfp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %pfp.addr, metadata !5739, metadata !DIExpression()), !dbg !5740
  %0 = load %struct._IO_FILE**, %struct._IO_FILE*** %pfp.addr, align 8, !dbg !5741, !tbaa !2355
  %call = call %struct.tempnode* @maybe_create_temp(%struct._IO_FILE** %0, i1 zeroext false), !dbg !5742
  ret %struct.tempnode* %call, !dbg !5743
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_init(%struct.merge_node_queue* %queue, i64 %nthreads) #4 !dbg !5744 !ctir !628 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %nthreads.addr = alloca i64, align 8, !ctir !52
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  %0 = load i64, i64* %nthreads.addr, align 8, !dbg !5749, !tbaa !2516
  %mul = mul i64 2, %0, !dbg !5750
  %call = call %struct.heap* @heap_alloc(i32 (i8*, i8*)* @compare_nodes, i64 %mul), !dbg !5751
  %1 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5752, !tbaa !2355
  %priority_queue = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %1, i32 0, i32 0, !dbg !5753, !ctir !631
  store %struct.heap* %call, %struct.heap** %priority_queue, align 8, !dbg !5754, !tbaa !5755, !ctir !634
  %2 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5757, !tbaa !2355
  %mutex = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %2, i32 0, i32 1, !dbg !5758, !ctir !631
  %call1 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %mutex, %union.anon.11* null) #12, !dbg !5759
  %3 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5760, !tbaa !2355
  %cond = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %3, i32 0, i32 2, !dbg !5761, !ctir !631
  %call2 = call i32 @pthread_cond_init(%union.pthread_cond_t* %cond, %union.anon.11* null) #12, !dbg !5762
  ret void, !dbg !5763
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.merge_node* @merge_tree_init(i64 %nthreads, i64 %nlines, %struct.line* %dest) #4 !dbg !5764 !ctir !662 {
entry:
  %nthreads.addr = alloca i64, align 8, !ctir !52
  %nlines.addr = alloca i64, align 8, !ctir !52
  %dest.addr = alloca %struct.line*, align 8, !ctir !462
  %merge_tree = alloca %struct.merge_node*, align 8, !ctir !577
  %root = alloca %struct.merge_node*, align 8, !ctir !577
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5765, metadata !DIExpression()), !dbg !5766
  store i64 %nlines, i64* %nlines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nlines.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  store %struct.line* %dest, %struct.line** %dest.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %dest.addr, metadata !5769, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata %struct.merge_node** %merge_tree, metadata !5771, metadata !DIExpression()), !dbg !5772
  %0 = load i64, i64* %nthreads.addr, align 8, !dbg !5773, !tbaa !2516
  %mul = mul i64 256, %0, !dbg !5774
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !5775
  %1 = bitcast i8* %call to %struct.merge_node*, !dbg !5775
  store %struct.merge_node* %1, %struct.merge_node** %merge_tree, align 8, !dbg !5772, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %root, metadata !5776, metadata !DIExpression()), !dbg !5777
  %2 = load %struct.merge_node*, %struct.merge_node** %merge_tree, align 8, !dbg !5778, !tbaa !2355
  store %struct.merge_node* %2, %struct.merge_node** %root, align 8, !dbg !5777, !tbaa !2355
  %3 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5779, !tbaa !2355
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %3, i32 0, i32 3, !dbg !5780, !ctir !578
  store %struct.line* null, %struct.line** %end_hi, align 8, !dbg !5781, !tbaa !5782, !ctir !462
  %4 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5784, !tbaa !2355
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %4, i32 0, i32 2, !dbg !5785, !ctir !578
  store %struct.line* null, %struct.line** %end_lo, align 8, !dbg !5786, !tbaa !5787, !ctir !462
  %5 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5788, !tbaa !2355
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 1, !dbg !5789, !ctir !578
  store %struct.line* null, %struct.line** %hi, align 8, !dbg !5790, !tbaa !5791, !ctir !462
  %6 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5792, !tbaa !2355
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %6, i32 0, i32 0, !dbg !5793, !ctir !578
  store %struct.line* null, %struct.line** %lo, align 8, !dbg !5794, !tbaa !5795, !ctir !462
  %7 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5796, !tbaa !2355
  %dest1 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %7, i32 0, i32 4, !dbg !5797, !ctir !578
  store %struct.line** null, %struct.line*** %dest1, align 8, !dbg !5798, !tbaa !5799, !ctir !585
  %8 = load i64, i64* %nlines.addr, align 8, !dbg !5800, !tbaa !2516
  %9 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5801, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %9, i32 0, i32 6, !dbg !5802, !ctir !578
  store i64 %8, i64* %nhi, align 8, !dbg !5803, !tbaa !5804, !ctir !52
  %10 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5805, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %10, i32 0, i32 5, !dbg !5806, !ctir !578
  store i64 %8, i64* %nlo, align 8, !dbg !5807, !tbaa !5808, !ctir !52
  %11 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5809, !tbaa !2355
  %parent = getelementptr inbounds %struct.merge_node, %struct.merge_node* %11, i32 0, i32 7, !dbg !5810, !ctir !578
  store %struct.merge_node* null, %struct.merge_node** %parent, align 8, !dbg !5811, !tbaa !5812, !ctir !577
  %12 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5813, !tbaa !2355
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 10, !dbg !5814, !ctir !578
  store i32 0, i32* %level, align 8, !dbg !5815, !tbaa !5816, !ctir !66
  %13 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5817, !tbaa !2355
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %13, i32 0, i32 11, !dbg !5818, !ctir !578
  store i8 0, i8* %queued, align 4, !dbg !5819, !tbaa !5820, !ctir !102
  %14 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5821, !tbaa !2355
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 12, !dbg !5822, !ctir !578
  %call2 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %lock, %union.anon.11* null) #12, !dbg !5823
  %15 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5824, !tbaa !2355
  %16 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5825, !tbaa !2355
  %add.ptr = getelementptr inbounds %struct.merge_node, %struct.merge_node* %16, i64 1, !dbg !5826
  %17 = load %struct.line*, %struct.line** %dest.addr, align 8, !dbg !5827, !tbaa !2355
  %18 = load i64, i64* %nthreads.addr, align 8, !dbg !5828, !tbaa !2516
  %19 = load i64, i64* %nlines.addr, align 8, !dbg !5829, !tbaa !2516
  %call3 = call %struct.merge_node* @init_node(%struct.merge_node* %15, %struct.merge_node* %add.ptr, %struct.line* %17, i64 %18, i64 %19, i1 zeroext false), !dbg !5830
  %20 = load %struct.merge_node*, %struct.merge_node** %merge_tree, align 8, !dbg !5831, !tbaa !2355
  ret %struct.merge_node* %20, !dbg !5832
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sortlines(%struct.line* noalias %lines, i64 %nthreads, i64 %total_lines, %struct.merge_node* %node, %struct.merge_node_queue* %queue, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !5833 !ctir !667 {
entry:
  %lines.addr = alloca %struct.line*, align 8, !ctir !669
  %nthreads.addr = alloca i64, align 8, !ctir !52
  %total_lines.addr = alloca i64, align 8, !ctir !52
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !577
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %tfp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp_output.addr = alloca i8*, align 8, !ctir !87
  %nlines = alloca i64, align 8, !ctir !52
  %lo_threads = alloca i64, align 8, !ctir !52
  %hi_threads = alloca i64, align 8, !ctir !52
  %thread = alloca i64, align 8, !ctir !670
  %args = alloca %struct.thread_args, align 8, !ctir !675
  %nlo12 = alloca i64, align 8, !ctir !52
  %nhi14 = alloca i64, align 8, !ctir !52
  %temp = alloca %struct.line*, align 8, !ctir !462
  store %struct.line* %lines, %struct.line** %lines.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %lines.addr, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !5840, metadata !DIExpression()), !dbg !5841
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !5842, metadata !DIExpression()), !dbg !5843
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !5844, metadata !DIExpression()), !dbg !5845
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata i64* %nlines, metadata !5848, metadata !DIExpression()), !dbg !5849
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5850, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 5, !dbg !5851, !ctir !578
  %1 = load i64, i64* %nlo, align 8, !dbg !5851, !tbaa !5808, !ctir !52
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5852, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 6, !dbg !5853, !ctir !578
  %3 = load i64, i64* %nhi, align 8, !dbg !5853, !tbaa !5804, !ctir !52
  %add = add i64 %1, %3, !dbg !5854
  store i64 %add, i64* %nlines, align 8, !dbg !5849, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %lo_threads, metadata !5855, metadata !DIExpression()), !dbg !5856
  %4 = load i64, i64* %nthreads.addr, align 8, !dbg !5857, !tbaa !2516
  %div = udiv i64 %4, 2, !dbg !5858
  store i64 %div, i64* %lo_threads, align 8, !dbg !5856, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %hi_threads, metadata !5859, metadata !DIExpression()), !dbg !5860
  %5 = load i64, i64* %nthreads.addr, align 8, !dbg !5861, !tbaa !2516
  %6 = load i64, i64* %lo_threads, align 8, !dbg !5862, !tbaa !2516
  %sub = sub i64 %5, %6, !dbg !5863
  store i64 %sub, i64* %hi_threads, align 8, !dbg !5860, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %thread, metadata !5864, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.declare(metadata %struct.thread_args* %args, metadata !5866, metadata !DIExpression()), !dbg !5867
  %lines1 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 0, !dbg !5868
  %7 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5869, !tbaa !2355
  store %struct.line* %7, %struct.line** %lines1, align 8, !dbg !5868, !tbaa !5870
  %nthreads2 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 1, !dbg !5868
  %8 = load i64, i64* %lo_threads, align 8, !dbg !5872, !tbaa !2516
  store i64 %8, i64* %nthreads2, align 8, !dbg !5868, !tbaa !5873
  %total_lines3 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 2, !dbg !5868
  %9 = load i64, i64* %total_lines.addr, align 8, !dbg !5874, !tbaa !2516
  store i64 %9, i64* %total_lines3, align 8, !dbg !5868, !tbaa !5875
  %node4 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 3, !dbg !5868
  %10 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5876, !tbaa !2355
  %lo_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %10, i32 0, i32 8, !dbg !5877, !ctir !578
  %11 = load %struct.merge_node*, %struct.merge_node** %lo_child, align 8, !dbg !5877, !tbaa !5878, !ctir !577
  store %struct.merge_node* %11, %struct.merge_node** %node4, align 8, !dbg !5868, !tbaa !5879
  %queue5 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 4, !dbg !5868
  %12 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5880, !tbaa !2355
  store %struct.merge_node_queue* %12, %struct.merge_node_queue** %queue5, align 8, !dbg !5868, !tbaa !5881
  %tfp6 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 5, !dbg !5868
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5882, !tbaa !2355
  store %struct._IO_FILE* %13, %struct._IO_FILE** %tfp6, align 8, !dbg !5868, !tbaa !5883
  %output_temp = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 6, !dbg !5868
  %14 = load i8*, i8** %temp_output.addr, align 8, !dbg !5884, !tbaa !2355
  store i8* %14, i8** %output_temp, align 8, !dbg !5868, !tbaa !5885
  %15 = load i64, i64* %nthreads.addr, align 8, !dbg !5886, !tbaa !2516
  %cmp = icmp ugt i64 %15, 1, !dbg !5888
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5889

land.lhs.true:                                    ; preds = %entry
  %16 = load i64, i64* %nlines, align 8, !dbg !5890, !tbaa !2516
  %cmp7 = icmp ule i64 131072, %16, !dbg !5891
  br i1 %cmp7, label %land.lhs.true8, label %if.else, !dbg !5892

land.lhs.true8:                                   ; preds = %land.lhs.true
  %17 = bitcast %struct.thread_args* %args to i8*, !dbg !5893
  %call = call i32 @pthread_create(i64* %thread, %union.pthread_attr_t* null, i8* (i8*)* @sortlines_thread, i8* %17) #12, !dbg !5894
  %cmp9 = icmp eq i32 %call, 0, !dbg !5895
  br i1 %cmp9, label %if.then, label %if.else, !dbg !5896

if.then:                                          ; preds = %land.lhs.true8
  %18 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5897, !tbaa !2355
  %19 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5899, !tbaa !2355
  %nlo10 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %19, i32 0, i32 5, !dbg !5900, !ctir !578
  %20 = load i64, i64* %nlo10, align 8, !dbg !5900, !tbaa !5808, !ctir !52
  %idx.neg = sub i64 0, %20, !dbg !5901
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %18, i64 %idx.neg, !dbg !5901
  %21 = load i64, i64* %hi_threads, align 8, !dbg !5902, !tbaa !2516
  %22 = load i64, i64* %total_lines.addr, align 8, !dbg !5903, !tbaa !2516
  %23 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5904, !tbaa !2355
  %hi_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %23, i32 0, i32 9, !dbg !5905, !ctir !578
  %24 = load %struct.merge_node*, %struct.merge_node** %hi_child, align 8, !dbg !5905, !tbaa !5906, !ctir !577
  %25 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5907, !tbaa !2355
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5908, !tbaa !2355
  %27 = load i8*, i8** %temp_output.addr, align 8, !dbg !5909, !tbaa !2355
  call void @sortlines(%struct.line* %add.ptr, i64 %21, i64 %22, %struct.merge_node* %24, %struct.merge_node_queue* %25, %struct._IO_FILE* %26, i8* %27), !dbg !5910
  %28 = load i64, i64* %thread, align 8, !dbg !5911, !tbaa !2516
  %call11 = call i32 @pthread_join(i64 %28, i8** null), !dbg !5912
  br label %if.end36, !dbg !5913

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %nlo12, metadata !5914, metadata !DIExpression()), !dbg !5916
  %29 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5917, !tbaa !2355
  %nlo13 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %29, i32 0, i32 5, !dbg !5918, !ctir !578
  %30 = load i64, i64* %nlo13, align 8, !dbg !5918, !tbaa !5808, !ctir !52
  store i64 %30, i64* %nlo12, align 8, !dbg !5916, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nhi14, metadata !5919, metadata !DIExpression()), !dbg !5920
  %31 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5921, !tbaa !2355
  %nhi15 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %31, i32 0, i32 6, !dbg !5922, !ctir !578
  %32 = load i64, i64* %nhi15, align 8, !dbg !5922, !tbaa !5804, !ctir !52
  store i64 %32, i64* %nhi14, align 8, !dbg !5920, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.line** %temp, metadata !5923, metadata !DIExpression()), !dbg !5924
  %33 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5925, !tbaa !2355
  %34 = load i64, i64* %total_lines.addr, align 8, !dbg !5926, !tbaa !2516
  %idx.neg16 = sub i64 0, %34, !dbg !5927
  %add.ptr17 = getelementptr inbounds %struct.line, %struct.line* %33, i64 %idx.neg16, !dbg !5927
  store %struct.line* %add.ptr17, %struct.line** %temp, align 8, !dbg !5924, !tbaa !2355
  %35 = load i64, i64* %nhi14, align 8, !dbg !5928, !tbaa !2516
  %cmp18 = icmp ult i64 1, %35, !dbg !5930
  br i1 %cmp18, label %if.then19, label %if.end, !dbg !5931

if.then19:                                        ; preds = %if.else
  %36 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5932, !tbaa !2355
  %37 = load i64, i64* %nlo12, align 8, !dbg !5933, !tbaa !2516
  %idx.neg20 = sub i64 0, %37, !dbg !5934
  %add.ptr21 = getelementptr inbounds %struct.line, %struct.line* %36, i64 %idx.neg20, !dbg !5934
  %38 = load i64, i64* %nhi14, align 8, !dbg !5935, !tbaa !2516
  %39 = load %struct.line*, %struct.line** %temp, align 8, !dbg !5936, !tbaa !2355
  %40 = load i64, i64* %nlo12, align 8, !dbg !5937, !tbaa !2516
  %div22 = udiv i64 %40, 2, !dbg !5938
  %idx.neg23 = sub i64 0, %div22, !dbg !5939
  %add.ptr24 = getelementptr inbounds %struct.line, %struct.line* %39, i64 %idx.neg23, !dbg !5939
  call void @sequential_sort(%struct.line* %add.ptr21, i64 %38, %struct.line* %add.ptr24, i1 zeroext false), !dbg !5940
  br label %if.end, !dbg !5940

if.end:                                           ; preds = %if.then19, %if.else
  %41 = load i64, i64* %nlo12, align 8, !dbg !5941, !tbaa !2516
  %cmp25 = icmp ult i64 1, %41, !dbg !5943
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5944

if.then26:                                        ; preds = %if.end
  %42 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5945, !tbaa !2355
  %43 = load i64, i64* %nlo12, align 8, !dbg !5946, !tbaa !2516
  %44 = load %struct.line*, %struct.line** %temp, align 8, !dbg !5947, !tbaa !2355
  call void @sequential_sort(%struct.line* %42, i64 %43, %struct.line* %44, i1 zeroext false), !dbg !5948
  br label %if.end27, !dbg !5948

if.end27:                                         ; preds = %if.then26, %if.end
  %45 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5949, !tbaa !2355
  %46 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5950, !tbaa !2355
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %46, i32 0, i32 0, !dbg !5951, !ctir !578
  store %struct.line* %45, %struct.line** %lo, align 8, !dbg !5952, !tbaa !5795, !ctir !462
  %47 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5953, !tbaa !2355
  %48 = load i64, i64* %nlo12, align 8, !dbg !5954, !tbaa !2516
  %idx.neg28 = sub i64 0, %48, !dbg !5955
  %add.ptr29 = getelementptr inbounds %struct.line, %struct.line* %47, i64 %idx.neg28, !dbg !5955
  %49 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5956, !tbaa !2355
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %49, i32 0, i32 1, !dbg !5957, !ctir !578
  store %struct.line* %add.ptr29, %struct.line** %hi, align 8, !dbg !5958, !tbaa !5791, !ctir !462
  %50 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5959, !tbaa !2355
  %51 = load i64, i64* %nlo12, align 8, !dbg !5960, !tbaa !2516
  %idx.neg30 = sub i64 0, %51, !dbg !5961
  %add.ptr31 = getelementptr inbounds %struct.line, %struct.line* %50, i64 %idx.neg30, !dbg !5961
  %52 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5962, !tbaa !2355
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %52, i32 0, i32 2, !dbg !5963, !ctir !578
  store %struct.line* %add.ptr31, %struct.line** %end_lo, align 8, !dbg !5964, !tbaa !5787, !ctir !462
  %53 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5965, !tbaa !2355
  %54 = load i64, i64* %nlo12, align 8, !dbg !5966, !tbaa !2516
  %idx.neg32 = sub i64 0, %54, !dbg !5967
  %add.ptr33 = getelementptr inbounds %struct.line, %struct.line* %53, i64 %idx.neg32, !dbg !5967
  %55 = load i64, i64* %nhi14, align 8, !dbg !5968, !tbaa !2516
  %idx.neg34 = sub i64 0, %55, !dbg !5969
  %add.ptr35 = getelementptr inbounds %struct.line, %struct.line* %add.ptr33, i64 %idx.neg34, !dbg !5969
  %56 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5970, !tbaa !2355
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %56, i32 0, i32 3, !dbg !5971, !ctir !578
  store %struct.line* %add.ptr35, %struct.line** %end_hi, align 8, !dbg !5972, !tbaa !5782, !ctir !462
  %57 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5973, !tbaa !2355
  %58 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5974, !tbaa !2355
  call void @queue_insert(%struct.merge_node_queue* %57, %struct.merge_node* %58), !dbg !5975
  %59 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5976, !tbaa !2355
  %60 = load i64, i64* %total_lines.addr, align 8, !dbg !5977, !tbaa !2516
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5978, !tbaa !2355
  %62 = load i8*, i8** %temp_output.addr, align 8, !dbg !5979, !tbaa !2355
  call void @merge_loop(%struct.merge_node_queue* %59, i64 %60, %struct._IO_FILE* %61, i8* %62), !dbg !5980
  br label %if.end36

if.end36:                                         ; preds = %if.end27, %if.then
  ret void, !dbg !5981
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_unique(%struct.line* %line, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !5982 !ctir !508 {
entry:
  %line.addr = alloca %struct.line*, align 8, !ctir !440
  %tfp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp_output.addr = alloca i8*, align 8, !ctir !87
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !5983, metadata !DIExpression()), !dbg !5984
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !5985, metadata !DIExpression()), !dbg !5986
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  %0 = load i8, i8* @unique, align 1, !dbg !5989, !tbaa !2499
  %tobool = trunc i8 %0 to i1, !dbg !5989
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5991

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.line, %struct.line* @saved_line, i32 0, i32 0), align 8, !dbg !5992, !tbaa !4554, !ctir !7
  %tobool1 = icmp ne i8* %1, null, !dbg !5995
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !5996

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !5997, !tbaa !2355
  %call = call i32 @compare(%struct.line* %2, %struct.line* @saved_line), !dbg !5998
  %tobool2 = icmp ne i32 %call, 0, !dbg !5998
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !5999

if.then3:                                         ; preds = %land.lhs.true
  br label %return, !dbg !6000

if.end:                                           ; preds = %land.lhs.true, %if.then
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6001, !tbaa !2355
  %4 = bitcast %struct.line* %3 to i8*, !dbg !6002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.line* @saved_line to i8*), i8* align 8 %4, i64 32, i1 false), !dbg !6002, !tbaa.struct !6003
  br label %if.end4, !dbg !6004

if.end4:                                          ; preds = %if.end, %entry
  %5 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6005, !tbaa !2355
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !6006, !tbaa !2355
  %7 = load i8*, i8** %temp_output.addr, align 8, !dbg !6007, !tbaa !2355
  call void @write_line(%struct.line* %5, %struct._IO_FILE* %6, i8* %7), !dbg !6008
  br label %return, !dbg !6009

return:                                           ; preds = %if.end4, %if.then3
  ret void, !dbg !6009
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reap_all() #4 !dbg !6010 !ctir !167 {
entry:
  br label %while.cond, !dbg !6011

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* @nprocs, align 4, !dbg !6012, !tbaa !2342
  %cmp = icmp slt i32 0, %0, !dbg !6013
  br i1 %cmp, label %while.body, label %while.end, !dbg !6011

while.body:                                       ; preds = %while.cond
  %call = call i32 @reap(i32 -1), !dbg !6014
  br label %while.cond, !dbg !6011, !llvm.loop !6015

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6017
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reap(i32 %pid) #4 !dbg !548 !ctir !545 {
entry:
  %pid.addr = alloca i32, align 4, !ctir !295
  %status = alloca i32, align 4, !ctir !5
  %cpid = alloca i32, align 4, !ctir !295
  %.compoundliteral = alloca %union.anon.11, align 4, !ctir !547
  %.compoundliteral12 = alloca %union.anon.11, align 4, !ctir !552
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6020, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.declare(metadata i32* %cpid, metadata !6022, metadata !DIExpression()), !dbg !6023
  %0 = load i32, i32* %pid.addr, align 4, !dbg !6024, !tbaa !2342
  %tobool = icmp ne i32 %0, 0, !dbg !6024
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6024

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %pid.addr, align 4, !dbg !6025, !tbaa !2342
  br label %cond.end, !dbg !6024

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6024

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ -1, %cond.false ], !dbg !6024
  %2 = load i32, i32* %pid.addr, align 4, !dbg !6026, !tbaa !2342
  %tobool1 = icmp ne i32 %2, 0, !dbg !6026
  %3 = zext i1 %tobool1 to i64, !dbg !6026
  %cond2 = select i1 %tobool1, i32 0, i32 1, !dbg !6026
  %call = call i32 @waitpid(i32 %cond, i32* %status, i32 %cond2), !dbg !6027
  store i32 %call, i32* %cpid, align 4, !dbg !6023, !tbaa !2342
  %4 = load i32, i32* %cpid, align 4, !dbg !6028, !tbaa !2342
  %cmp = icmp slt i32 %4, 0, !dbg !6030
  br i1 %cmp, label %if.then, label %if.else, !dbg !6031

if.then:                                          ; preds = %cond.end
  %call3 = call i32* @__errno_location() #16, !dbg !6032
  %5 = load i32, i32* %call3, align 4, !dbg !6032, !tbaa !2342, !ctir !5
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.171, i64 0, i64 0)) #12, !dbg !6032
  %6 = load i8*, i8** @compress_program, align 8, !dbg !6032, !tbaa !2355
  %call5 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6032
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %5, i8* %call4, i8* %call5), !dbg !6032
  unreachable, !dbg !6032

if.else:                                          ; preds = %cond.end
  %7 = load i32, i32* %cpid, align 4, !dbg !6033, !tbaa !2342
  %cmp6 = icmp slt i32 0, %7, !dbg !6035
  br i1 %cmp6, label %land.lhs.true, label %if.end20, !dbg !6036

land.lhs.true:                                    ; preds = %if.else
  %8 = load i32, i32* %pid.addr, align 4, !dbg !6037, !tbaa !2342
  %cmp7 = icmp slt i32 0, %8, !dbg !6038
  br i1 %cmp7, label %if.then9, label %lor.lhs.false, !dbg !6039

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i32, i32* %cpid, align 4, !dbg !6040, !tbaa !2342
  %call8 = call zeroext i1 @delete_proc(i32 %9), !dbg !6041
  br i1 %call8, label %if.then9, label %if.end20, !dbg !6042

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %__in = bitcast %union.anon.11* %.compoundliteral to i32*, !dbg !6043
  %10 = load i32, i32* %status, align 4, !dbg !6043, !tbaa !2342
  store i32 %10, i32* %__in, align 4, !dbg !6043, !tbaa !2507
  %__i = bitcast %union.anon.11* %.compoundliteral to i32*, !dbg !6043
  %11 = load i32, i32* %__i, align 4, !dbg !6043, !tbaa !2507, !ctir !547
  %and = and i32 %11, 127, !dbg !6043
  %cmp10 = icmp eq i32 %and, 0, !dbg !6043
  br i1 %cmp10, label %lor.lhs.false11, label %if.then17, !dbg !6046

lor.lhs.false11:                                  ; preds = %if.then9
  %__in13 = bitcast %union.anon.11* %.compoundliteral12 to i32*, !dbg !6047
  %12 = load i32, i32* %status, align 4, !dbg !6047, !tbaa !2342
  store i32 %12, i32* %__in13, align 4, !dbg !6047, !tbaa !2507
  %__i14 = bitcast %union.anon.11* %.compoundliteral12 to i32*, !dbg !6047
  %13 = load i32, i32* %__i14, align 4, !dbg !6047, !tbaa !2507, !ctir !552
  %and15 = and i32 %13, 65280, !dbg !6047
  %shr = ashr i32 %and15, 8, !dbg !6047
  %tobool16 = icmp ne i32 %shr, 0, !dbg !6047
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !6048

if.then17:                                        ; preds = %lor.lhs.false11, %if.then9
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.172, i64 0, i64 0)) #12, !dbg !6049
  %14 = load i8*, i8** @compress_program, align 8, !dbg !6049, !tbaa !2355
  %call19 = call i8* @quotearg_style(i32 4, i8* %14), !dbg !6049
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call18, i8* %call19), !dbg !6049
  unreachable, !dbg !6049

if.end:                                           ; preds = %lor.lhs.false11
  %15 = load i32, i32* @nprocs, align 4, !dbg !6050, !tbaa !2342
  %dec = add nsw i32 %15, -1, !dbg !6050
  store i32 %dec, i32* @nprocs, align 4, !dbg !6050, !tbaa !2342
  br label %if.end20, !dbg !6051

if.end20:                                         ; preds = %if.end, %lor.lhs.false, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  %16 = load i32, i32* %cpid, align 4, !dbg !6052, !tbaa !2342
  ret i32 %16, !dbg !6053
}

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @delete_proc(i32 %pid) #4 !dbg !6054 !ctir !539 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %pid.addr = alloca i32, align 4, !ctir !295
  %test = alloca %struct.tempnode, align 8, !ctir !290
  %node = alloca %struct.tempnode*, align 8, !ctir !289
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata %struct.tempnode* %test, metadata !6057, metadata !DIExpression()), !dbg !6058
  %0 = load i32, i32* %pid.addr, align 4, !dbg !6059, !tbaa !2342
  %pid1 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %test, i32 0, i32 1, !dbg !6060, !ctir !290
  store i32 %0, i32* %pid1, align 8, !dbg !6061, !tbaa !2342, !ctir !295
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !6062, metadata !DIExpression()), !dbg !6063
  %1 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !6064, !tbaa !2355
  %2 = bitcast %struct.tempnode* %test to i8*, !dbg !6065
  %call = call i8* @hash_delete(%struct.hash_table* %1, i8* %2), !dbg !6066
  %3 = bitcast i8* %call to %struct.tempnode*, !dbg !6066
  store %struct.tempnode* %3, %struct.tempnode** %node, align 8, !dbg !6063, !tbaa !2355
  %4 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !6067, !tbaa !2355
  %tobool = icmp ne %struct.tempnode* %4, null, !dbg !6067
  br i1 %tobool, label %if.end, label %if.then, !dbg !6069

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6070
  br label %return, !dbg !6070

if.end:                                           ; preds = %entry
  %5 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !6071, !tbaa !2355
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %5, i32 0, i32 2, !dbg !6072, !ctir !290
  store i8 2, i8* %state, align 4, !dbg !6073, !tbaa !2507, !ctir !8
  store i1 true, i1* %retval, align 1, !dbg !6074
  br label %return, !dbg !6074

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !6075
  ret i1 %6, !dbg !6075
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare(%struct.line* %a, %struct.line* %b) #4 !dbg !6076 !ctir !469 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %a.addr = alloca %struct.line*, align 8, !ctir !440
  %b.addr = alloca %struct.line*, align 8, !ctir !440
  %diff = alloca i32, align 4, !ctir !5
  %alen = alloca i64, align 8, !ctir !52
  %blen = alloca i64, align 8, !ctir !52
  store %struct.line* %a, %struct.line** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %a.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  store %struct.line* %b, %struct.line** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %b.addr, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6081, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.declare(metadata i64* %alen, metadata !6083, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !6085, metadata !DIExpression()), !dbg !6086
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !6087, !tbaa !2355
  %tobool = icmp ne %struct.keyfield* %0, null, !dbg !6087
  br i1 %tobool, label %if.then, label %if.end6, !dbg !6089

if.then:                                          ; preds = %entry
  %1 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6090, !tbaa !2355
  %2 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6092, !tbaa !2355
  %call = call i32 @keycompare(%struct.line* %1, %struct.line* %2), !dbg !6093
  store i32 %call, i32* %diff, align 4, !dbg !6094, !tbaa !2342
  %3 = load i32, i32* %diff, align 4, !dbg !6095, !tbaa !2342
  %tobool1 = icmp ne i32 %3, 0, !dbg !6095
  br i1 %tobool1, label %if.then5, label %lor.lhs.false, !dbg !6097

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i8, i8* @unique, align 1, !dbg !6098, !tbaa !2499
  %tobool2 = trunc i8 %4 to i1, !dbg !6098
  br i1 %tobool2, label %if.then5, label %lor.lhs.false3, !dbg !6099

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %5 = load i8, i8* @stable, align 1, !dbg !6100, !tbaa !2499
  %tobool4 = trunc i8 %5 to i1, !dbg !6100
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6101

if.then5:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %6 = load i32, i32* %diff, align 4, !dbg !6102, !tbaa !2342
  store i32 %6, i32* %retval, align 4, !dbg !6103
  br label %return, !dbg !6103

if.end:                                           ; preds = %lor.lhs.false3
  br label %if.end6, !dbg !6104

if.end6:                                          ; preds = %if.end, %entry
  %7 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6105, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %7, i32 0, i32 1, !dbg !6106, !ctir !441
  %8 = load i64, i64* %length, align 8, !dbg !6106, !tbaa !4639, !ctir !52
  %sub = sub i64 %8, 1, !dbg !6107
  store i64 %sub, i64* %alen, align 8, !dbg !6108, !tbaa !2516
  %9 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6109, !tbaa !2355
  %length7 = getelementptr inbounds %struct.line, %struct.line* %9, i32 0, i32 1, !dbg !6110, !ctir !441
  %10 = load i64, i64* %length7, align 8, !dbg !6110, !tbaa !4639, !ctir !52
  %sub8 = sub i64 %10, 1, !dbg !6111
  store i64 %sub8, i64* %blen, align 8, !dbg !6112, !tbaa !2516
  %11 = load i64, i64* %alen, align 8, !dbg !6113, !tbaa !2516
  %cmp = icmp eq i64 %11, 0, !dbg !6115
  br i1 %cmp, label %if.then9, label %if.else, !dbg !6116

if.then9:                                         ; preds = %if.end6
  %12 = load i64, i64* %blen, align 8, !dbg !6117, !tbaa !2516
  %cmp10 = icmp ne i64 %12, 0, !dbg !6117
  %conv = zext i1 %cmp10 to i32, !dbg !6117
  %sub11 = sub nsw i32 0, %conv, !dbg !6118
  store i32 %sub11, i32* %diff, align 4, !dbg !6119, !tbaa !2342
  br label %if.end40, !dbg !6120

if.else:                                          ; preds = %if.end6
  %13 = load i64, i64* %blen, align 8, !dbg !6121, !tbaa !2516
  %cmp12 = icmp eq i64 %13, 0, !dbg !6123
  br i1 %cmp12, label %if.then14, label %if.else15, !dbg !6124

if.then14:                                        ; preds = %if.else
  store i32 1, i32* %diff, align 4, !dbg !6125, !tbaa !2342
  br label %if.end39, !dbg !6126

if.else15:                                        ; preds = %if.else
  %14 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !6127, !tbaa !2499
  %tobool16 = trunc i8 %14 to i1, !dbg !6127
  br i1 %tobool16, label %if.then17, label %if.else21, !dbg !6129

if.then17:                                        ; preds = %if.else15
  %15 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6130, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %15, i32 0, i32 0, !dbg !6132, !ctir !441
  %16 = load i8*, i8** %text, align 8, !dbg !6132, !tbaa !4554, !ctir !7
  %17 = load i64, i64* %alen, align 8, !dbg !6133, !tbaa !2516
  %add = add i64 %17, 1, !dbg !6134
  %18 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6135, !tbaa !2355
  %text18 = getelementptr inbounds %struct.line, %struct.line* %18, i32 0, i32 0, !dbg !6136, !ctir !441
  %19 = load i8*, i8** %text18, align 8, !dbg !6136, !tbaa !4554, !ctir !7
  %20 = load i64, i64* %blen, align 8, !dbg !6137, !tbaa !2516
  %add19 = add i64 %20, 1, !dbg !6138
  %call20 = call i32 @xmemcoll0(i8* %16, i64 %add, i8* %19, i64 %add19), !dbg !6139
  store i32 %call20, i32* %diff, align 4, !dbg !6140, !tbaa !2342
  br label %if.end38, !dbg !6141

if.else21:                                        ; preds = %if.else15
  %21 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6142, !tbaa !2355
  %text22 = getelementptr inbounds %struct.line, %struct.line* %21, i32 0, i32 0, !dbg !6144, !ctir !441
  %22 = load i8*, i8** %text22, align 8, !dbg !6144, !tbaa !4554, !ctir !7
  %23 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6145, !tbaa !2355
  %text23 = getelementptr inbounds %struct.line, %struct.line* %23, i32 0, i32 0, !dbg !6146, !ctir !441
  %24 = load i8*, i8** %text23, align 8, !dbg !6146, !tbaa !4554, !ctir !7
  %25 = load i64, i64* %alen, align 8, !dbg !6147, !tbaa !2516
  %26 = load i64, i64* %blen, align 8, !dbg !6147, !tbaa !2516
  %cmp24 = icmp ult i64 %25, %26, !dbg !6147
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !6147

cond.true:                                        ; preds = %if.else21
  %27 = load i64, i64* %alen, align 8, !dbg !6147, !tbaa !2516
  br label %cond.end, !dbg !6147

cond.false:                                       ; preds = %if.else21
  %28 = load i64, i64* %blen, align 8, !dbg !6147, !tbaa !2516
  br label %cond.end, !dbg !6147

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %27, %cond.true ], [ %28, %cond.false ], !dbg !6147
  %call26 = call i32 @memcmp(i8* %22, i8* %24, i64 %cond) #14, !dbg !6148
  store i32 %call26, i32* %diff, align 4, !dbg !6149, !tbaa !2342
  %tobool27 = icmp ne i32 %call26, 0, !dbg !6149
  br i1 %tobool27, label %if.end37, label %if.then28, !dbg !6150

if.then28:                                        ; preds = %cond.end
  %29 = load i64, i64* %alen, align 8, !dbg !6151, !tbaa !2516
  %30 = load i64, i64* %blen, align 8, !dbg !6152, !tbaa !2516
  %cmp29 = icmp ult i64 %29, %30, !dbg !6153
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !6151

cond.true31:                                      ; preds = %if.then28
  br label %cond.end35, !dbg !6151

cond.false32:                                     ; preds = %if.then28
  %31 = load i64, i64* %alen, align 8, !dbg !6154, !tbaa !2516
  %32 = load i64, i64* %blen, align 8, !dbg !6155, !tbaa !2516
  %cmp33 = icmp ne i64 %31, %32, !dbg !6156
  %conv34 = zext i1 %cmp33 to i32, !dbg !6156
  br label %cond.end35, !dbg !6151

cond.end35:                                       ; preds = %cond.false32, %cond.true31
  %cond36 = phi i32 [ -1, %cond.true31 ], [ %conv34, %cond.false32 ], !dbg !6151
  store i32 %cond36, i32* %diff, align 4, !dbg !6157, !tbaa !2342
  br label %if.end37, !dbg !6158

if.end37:                                         ; preds = %cond.end35, %cond.end
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then17
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then14
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then9
  %33 = load i8, i8* @reverse, align 1, !dbg !6159, !tbaa !2499
  %tobool41 = trunc i8 %33 to i1, !dbg !6159
  br i1 %tobool41, label %cond.true43, label %cond.false45, !dbg !6159

cond.true43:                                      ; preds = %if.end40
  %34 = load i32, i32* %diff, align 4, !dbg !6160, !tbaa !2342
  %sub44 = sub nsw i32 0, %34, !dbg !6161
  br label %cond.end46, !dbg !6159

cond.false45:                                     ; preds = %if.end40
  %35 = load i32, i32* %diff, align 4, !dbg !6162, !tbaa !2342
  br label %cond.end46, !dbg !6159

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi i32 [ %sub44, %cond.true43 ], [ %35, %cond.false45 ], !dbg !6159
  store i32 %cond47, i32* %retval, align 4, !dbg !6163
  br label %return, !dbg !6163

return:                                           ; preds = %cond.end46, %if.then5
  %36 = load i32, i32* %retval, align 4, !dbg !6164
  ret i32 %36, !dbg !6164
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_line(%struct.line* %line, %struct._IO_FILE* %fp, i8* %output_file) #4 !dbg !6165 !ctir !508 {
entry:
  %line.addr = alloca %struct.line*, align 8, !ctir !440
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %output_file.addr = alloca i8*, align 8, !ctir !87
  %buf = alloca i8*, align 8, !ctir !7
  %n_bytes = alloca i64, align 8, !ctir !52
  %ebuf = alloca i8*, align 8, !ctir !7
  %c = alloca i8*, align 8, !ctir !87
  %wc = alloca i8, align 1, !ctir !8
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !6168, metadata !DIExpression()), !dbg !6169
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !6170, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6172, metadata !DIExpression()), !dbg !6173
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6174, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6175, !ctir !441
  %1 = load i8*, i8** %text, align 8, !dbg !6175, !tbaa !4554, !ctir !7
  store i8* %1, i8** %buf, align 8, !dbg !6173, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %n_bytes, metadata !6176, metadata !DIExpression()), !dbg !6177
  %2 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6178, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %2, i32 0, i32 1, !dbg !6179, !ctir !441
  %3 = load i64, i64* %length, align 8, !dbg !6179, !tbaa !4639, !ctir !52
  store i64 %3, i64* %n_bytes, align 8, !dbg !6177, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %ebuf, metadata !6180, metadata !DIExpression()), !dbg !6181
  %4 = load i8*, i8** %buf, align 8, !dbg !6182, !tbaa !2355
  %5 = load i64, i64* %n_bytes, align 8, !dbg !6183, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !6184
  store i8* %add.ptr, i8** %ebuf, align 8, !dbg !6181, !tbaa !2355
  %6 = load i8*, i8** %output_file.addr, align 8, !dbg !6185, !tbaa !2355
  %tobool = icmp ne i8* %6, null, !dbg !6185
  br i1 %tobool, label %if.else15, label %land.lhs.true, !dbg !6187

land.lhs.true:                                    ; preds = %entry
  %7 = load i8, i8* @debug, align 1, !dbg !6188, !tbaa !2499
  %tobool1 = trunc i8 %7 to i1, !dbg !6188
  br i1 %tobool1, label %if.then, label %if.else15, !dbg !6189

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %c, metadata !6190, metadata !DIExpression()), !dbg !6192
  %8 = load i8*, i8** %buf, align 8, !dbg !6193, !tbaa !2355
  store i8* %8, i8** %c, align 8, !dbg !6192, !tbaa !2355
  br label %while.cond, !dbg !6194

while.cond:                                       ; preds = %if.end14, %if.then
  %9 = load i8*, i8** %c, align 8, !dbg !6195, !tbaa !2355
  %10 = load i8*, i8** %ebuf, align 8, !dbg !6196, !tbaa !2355
  %cmp = icmp ult i8* %9, %10, !dbg !6197
  br i1 %cmp, label %while.body, label %while.end, !dbg !6194

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %wc, metadata !6198, metadata !DIExpression()), !dbg !6200
  %11 = load i8*, i8** %c, align 8, !dbg !6201, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6201
  store i8* %incdec.ptr, i8** %c, align 8, !dbg !6201, !tbaa !2355
  %12 = load i8, i8* %11, align 1, !dbg !6202, !tbaa !2507, !ctir !88
  store i8 %12, i8* %wc, align 1, !dbg !6200, !tbaa !2507
  %13 = load i8, i8* %wc, align 1, !dbg !6203, !tbaa !2507
  %conv = sext i8 %13 to i32, !dbg !6203
  %cmp2 = icmp eq i32 %conv, 9, !dbg !6205
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !6206

if.then4:                                         ; preds = %while.body
  store i8 62, i8* %wc, align 1, !dbg !6207, !tbaa !2507
  br label %if.end8, !dbg !6208

if.else:                                          ; preds = %while.body
  %14 = load i8*, i8** %c, align 8, !dbg !6209, !tbaa !2355
  %15 = load i8*, i8** %ebuf, align 8, !dbg !6211, !tbaa !2355
  %cmp5 = icmp eq i8* %14, %15, !dbg !6212
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !6213

if.then7:                                         ; preds = %if.else
  store i8 10, i8* %wc, align 1, !dbg !6214, !tbaa !2507
  br label %if.end, !dbg !6215

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  %16 = load i8, i8* %wc, align 1, !dbg !6216, !tbaa !2507
  %conv9 = sext i8 %16 to i32, !dbg !6216
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6216, !tbaa !2355
  %call = call i32 @fputc_unlocked(i32 %conv9, %struct._IO_FILE* %17), !dbg !6216
  %cmp10 = icmp eq i32 %call, -1, !dbg !6218
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !6219

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i64 0, i64 0)) #12, !dbg !6220
  %18 = load i8*, i8** %output_file.addr, align 8, !dbg !6221, !tbaa !2355
  call void @sort_die(i8* %call13, i8* %18) #15, !dbg !6222
  unreachable, !dbg !6222

if.end14:                                         ; preds = %if.end8
  br label %while.cond, !dbg !6194, !llvm.loop !6223

while.end:                                        ; preds = %while.cond
  %19 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6225, !tbaa !2355
  call void @debug_line(%struct.line* %19), !dbg !6226
  br label %if.end23, !dbg !6227

if.else15:                                        ; preds = %land.lhs.true, %entry
  %20 = load i8, i8* @eolchar, align 1, !dbg !6228, !tbaa !2507
  %21 = load i8*, i8** %ebuf, align 8, !dbg !6230, !tbaa !2355
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !6230, !ctir !7
  store i8 %20, i8* %arrayidx, align 1, !dbg !6231, !tbaa !2507
  %22 = load i8*, i8** %buf, align 8, !dbg !6232, !tbaa !2355
  %23 = load i64, i64* %n_bytes, align 8, !dbg !6232, !tbaa !2516
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6232, !tbaa !2355
  %call16 = call i64 @fwrite_unlocked(i8* %22, i64 1, i64 %23, %struct._IO_FILE* %24), !dbg !6232
  %25 = load i64, i64* %n_bytes, align 8, !dbg !6234, !tbaa !2516
  %cmp17 = icmp ne i64 %call16, %25, !dbg !6235
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !6236

if.then19:                                        ; preds = %if.else15
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i64 0, i64 0)) #12, !dbg !6237
  %26 = load i8*, i8** %output_file.addr, align 8, !dbg !6238, !tbaa !2355
  call void @sort_die(i8* %call20, i8* %26) #15, !dbg !6239
  unreachable, !dbg !6239

if.end21:                                         ; preds = %if.else15
  %27 = load i8*, i8** %ebuf, align 8, !dbg !6240, !tbaa !2355
  %arrayidx22 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !6240, !ctir !7
  store i8 0, i8* %arrayidx22, align 1, !dbg !6241, !tbaa !2507
  br label %if.end23

if.end23:                                         ; preds = %if.end21, %while.end
  ret void, !dbg !6242
}

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_line(%struct.line* %line) #4 !dbg !6243 !ctir !510 {
entry:
  %line.addr = alloca %struct.line*, align 8, !ctir !440
  %key = alloca %struct.keyfield*, align 8, !ctir !416
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !6246, metadata !DIExpression()), !dbg !6247
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !6248, !tbaa !2355
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !6247, !tbaa !2355
  br label %do.body, !dbg !6249

do.body:                                          ; preds = %land.end, %entry
  %1 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6250, !tbaa !2355
  %2 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6251, !tbaa !2355
  call void @debug_key(%struct.line* %1, %struct.keyfield* %2), !dbg !6252
  br label %do.cond, !dbg !6252

do.cond:                                          ; preds = %do.body
  %3 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6253, !tbaa !2355
  %tobool = icmp ne %struct.keyfield* %3, null, !dbg !6253
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6254

land.rhs:                                         ; preds = %do.cond
  %4 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6255, !tbaa !2355
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 16, !dbg !6256, !ctir !417
  %5 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !6256, !tbaa !3269, !ctir !92
  store %struct.keyfield* %5, %struct.keyfield** %key, align 8, !dbg !6257, !tbaa !2355
  %tobool1 = icmp ne %struct.keyfield* %5, null, !dbg !6257
  br i1 %tobool1, label %lor.end5, label %lor.rhs, !dbg !6258

lor.rhs:                                          ; preds = %land.rhs
  %6 = load i8, i8* @unique, align 1, !dbg !6259, !tbaa !2499
  %tobool2 = trunc i8 %6 to i1, !dbg !6259
  br i1 %tobool2, label %lor.end, label %lor.rhs3, !dbg !6260

lor.rhs3:                                         ; preds = %lor.rhs
  %7 = load i8, i8* @stable, align 1, !dbg !6261, !tbaa !2499
  %tobool4 = trunc i8 %7 to i1, !dbg !6261
  br label %lor.end, !dbg !6260

lor.end:                                          ; preds = %lor.rhs3, %lor.rhs
  %8 = phi i1 [ true, %lor.rhs ], [ %tobool4, %lor.rhs3 ]
  %lnot = xor i1 %8, true, !dbg !6262
  br label %lor.end5, !dbg !6258

lor.end5:                                         ; preds = %lor.end, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %lnot, %lor.end ]
  br label %land.end

land.end:                                         ; preds = %lor.end5, %do.cond
  %10 = phi i1 [ false, %do.cond ], [ %9, %lor.end5 ], !dbg !6263
  br i1 %10, label %do.body, label %do.end, !dbg !6252, !llvm.loop !6264

do.end:                                           ; preds = %land.end
  ret void, !dbg !6266
}

declare dso_local i64 @fwrite_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_key(%struct.line* %line, %struct.keyfield* %key) #4 !dbg !6267 !ctir !512 {
entry:
  %line.addr = alloca %struct.line*, align 8, !ctir !440
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !416
  %text = alloca i8*, align 8, !ctir !7
  %beg = alloca i8*, align 8, !ctir !7
  %lim = alloca i8*, align 8, !ctir !7
  %saved = alloca i8, align 1, !ctir !8
  %tighter_lim = alloca i8*, align 8, !ctir !7
  %__x = alloca x86_fp80, align 16, !ctir !476
  %p = alloca i8*, align 8, !ctir !87
  %max_digit = alloca i8, align 1, !ctir !317
  %ch = alloca i8, align 1, !ctir !317
  %offset = alloca i64, align 8, !ctir !52
  %width = alloca i64, align 8, !ctir !52
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6268, metadata !DIExpression()), !dbg !6269
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6270, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.declare(metadata i8** %text, metadata !6272, metadata !DIExpression()), !dbg !6273
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6274, !tbaa !2355
  %text1 = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6275, !ctir !441
  %1 = load i8*, i8** %text1, align 8, !dbg !6275, !tbaa !4554, !ctir !7
  store i8* %1, i8** %text, align 8, !dbg !6273, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %beg, metadata !6276, metadata !DIExpression()), !dbg !6277
  %2 = load i8*, i8** %text, align 8, !dbg !6278, !tbaa !2355
  store i8* %2, i8** %beg, align 8, !dbg !6277, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %lim, metadata !6279, metadata !DIExpression()), !dbg !6280
  %3 = load i8*, i8** %text, align 8, !dbg !6281, !tbaa !2355
  %4 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6282, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %4, i32 0, i32 1, !dbg !6283, !ctir !441
  %5 = load i64, i64* %length, align 8, !dbg !6283, !tbaa !4639, !ctir !52
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %5, !dbg !6284
  %add.ptr2 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !6285
  store i8* %add.ptr2, i8** %lim, align 8, !dbg !6280, !tbaa !2355
  %6 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6286, !tbaa !2355
  %tobool = icmp ne %struct.keyfield* %6, null, !dbg !6286
  br i1 %tobool, label %if.then, label %if.end60, !dbg !6288

if.then:                                          ; preds = %entry
  %7 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6289, !tbaa !2355
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 0, !dbg !6292, !ctir !417
  %8 = load i64, i64* %sword, align 8, !dbg !6292, !tbaa !2657, !ctir !52
  %cmp = icmp ne i64 %8, -1, !dbg !6293
  br i1 %cmp, label %if.then3, label %if.end, !dbg !6294

if.then3:                                         ; preds = %if.then
  %9 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6295, !tbaa !2355
  %10 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6296, !tbaa !2355
  %call = call i8* @begfield(%struct.line* %9, %struct.keyfield* %10), !dbg !6297
  store i8* %call, i8** %beg, align 8, !dbg !6298, !tbaa !2355
  br label %if.end, !dbg !6299

if.end:                                           ; preds = %if.then3, %if.then
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6300, !tbaa !2355
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 2, !dbg !6302, !ctir !417
  %12 = load i64, i64* %eword, align 8, !dbg !6302, !tbaa !2826, !ctir !52
  %cmp4 = icmp ne i64 %12, -1, !dbg !6303
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6304

if.then5:                                         ; preds = %if.end
  %13 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6305, !tbaa !2355
  %14 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6306, !tbaa !2355
  %call6 = call i8* @limfield(%struct.line* %13, %struct.keyfield* %14), !dbg !6307
  store i8* %call6, i8** %lim, align 8, !dbg !6308, !tbaa !2355
  br label %if.end7, !dbg !6309

if.end7:                                          ; preds = %if.then5, %if.end
  %15 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6310, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %15, i32 0, i32 6, !dbg !6312, !ctir !417
  %16 = load i8, i8* %skipsblanks, align 8, !dbg !6312, !tbaa !3219
  %tobool8 = trunc i8 %16 to i1, !dbg !6312, !ctir !102
  br i1 %tobool8, label %land.lhs.true, label %lor.lhs.false, !dbg !6313

land.lhs.true:                                    ; preds = %if.end7
  %17 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6314, !tbaa !2355
  %sword9 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 0, !dbg !6315, !ctir !417
  %18 = load i64, i64* %sword9, align 8, !dbg !6315, !tbaa !2657, !ctir !52
  %cmp10 = icmp eq i64 %18, -1, !dbg !6316
  br i1 %cmp10, label %if.then14, label %lor.lhs.false, !dbg !6317

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end7
  %19 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6318, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %19, i32 0, i32 12, !dbg !6319, !ctir !417
  %20 = load i8, i8* %month, align 2, !dbg !6319, !tbaa !3229
  %tobool11 = trunc i8 %20 to i1, !dbg !6319, !ctir !102
  br i1 %tobool11, label %if.then14, label %lor.lhs.false12, !dbg !6320

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %21 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6321, !tbaa !2355
  %call13 = call zeroext i1 @key_numeric(%struct.keyfield* %21), !dbg !6322
  br i1 %call13, label %if.then14, label %if.end59, !dbg !6323

if.then14:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %saved, metadata !6324, metadata !DIExpression()), !dbg !6326
  %22 = load i8*, i8** %lim, align 8, !dbg !6327, !tbaa !2355
  %23 = load i8, i8* %22, align 1, !dbg !6328, !tbaa !2507, !ctir !8
  store i8 %23, i8* %saved, align 1, !dbg !6326, !tbaa !2507
  %24 = load i8*, i8** %lim, align 8, !dbg !6329, !tbaa !2355
  store i8 0, i8* %24, align 1, !dbg !6330, !tbaa !2507, !ctir !8
  br label %while.cond, !dbg !6331

while.cond:                                       ; preds = %while.body, %if.then14
  %25 = load i8*, i8** %beg, align 8, !dbg !6332, !tbaa !2355
  %26 = load i8, i8* %25, align 1, !dbg !6333, !tbaa !2507, !ctir !8
  %call15 = call zeroext i8 @to_uchar(i8 signext %26), !dbg !6334
  %idxprom = zext i8 %call15 to i64, !dbg !6335
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6335, !ctir !318
  %27 = load i8, i8* %arrayidx, align 1, !dbg !6335, !tbaa !2499
  %tobool16 = trunc i8 %27 to i1, !dbg !6335
  br i1 %tobool16, label %while.body, label %while.end, !dbg !6331

while.body:                                       ; preds = %while.cond
  %28 = load i8*, i8** %beg, align 8, !dbg !6336, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6336
  store i8* %incdec.ptr, i8** %beg, align 8, !dbg !6336, !tbaa !2355
  br label %while.cond, !dbg !6331, !llvm.loop !6337

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %tighter_lim, metadata !6338, metadata !DIExpression()), !dbg !6339
  %29 = load i8*, i8** %beg, align 8, !dbg !6340, !tbaa !2355
  store i8* %29, i8** %tighter_lim, align 8, !dbg !6339, !tbaa !2355
  %30 = load i8*, i8** %lim, align 8, !dbg !6341, !tbaa !2355
  %31 = load i8*, i8** %beg, align 8, !dbg !6343, !tbaa !2355
  %cmp17 = icmp ult i8* %30, %31, !dbg !6344
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !6345

if.then18:                                        ; preds = %while.end
  %32 = load i8*, i8** %lim, align 8, !dbg !6346, !tbaa !2355
  store i8* %32, i8** %tighter_lim, align 8, !dbg !6347, !tbaa !2355
  br label %if.end58, !dbg !6348

if.else:                                          ; preds = %while.end
  %33 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6349, !tbaa !2355
  %month19 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %33, i32 0, i32 12, !dbg !6351, !ctir !417
  %34 = load i8, i8* %month19, align 2, !dbg !6351, !tbaa !3229
  %tobool20 = trunc i8 %34 to i1, !dbg !6351, !ctir !102
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !6352

if.then21:                                        ; preds = %if.else
  %35 = load i8*, i8** %beg, align 8, !dbg !6353, !tbaa !2355
  %call22 = call i32 @getmonth(i8* %35, i8** %tighter_lim), !dbg !6354
  br label %if.end57, !dbg !6354

if.else23:                                        ; preds = %if.else
  %36 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6355, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %36, i32 0, i32 10, !dbg !6357, !ctir !417
  %37 = load i8, i8* %general_numeric, align 4, !dbg !6357, !tbaa !3239
  %tobool24 = trunc i8 %37 to i1, !dbg !6357, !ctir !102
  br i1 %tobool24, label %if.then25, label %if.else27, !dbg !6358

if.then25:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata x86_fp80* %__x, metadata !6359, metadata !DIExpression()), !dbg !6361
  %38 = load i8*, i8** %beg, align 8, !dbg !6361, !tbaa !2355
  %call26 = call x86_fp80 @strtold(i8* %38, i8** %tighter_lim) #12, !dbg !6361
  store x86_fp80 %call26, x86_fp80* %__x, align 16, !dbg !6361, !tbaa !6362
  %39 = load x86_fp80, x86_fp80* %__x, align 16, !dbg !6361, !tbaa !6362
  br label %if.end56, !dbg !6364

if.else27:                                        ; preds = %if.else23
  %40 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6365, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %40, i32 0, i32 8, !dbg !6367, !ctir !417
  %41 = load i8, i8* %numeric, align 2, !dbg !6367, !tbaa !3234
  %tobool28 = trunc i8 %41 to i1, !dbg !6367, !ctir !102
  br i1 %tobool28, label %if.then31, label %lor.lhs.false29, !dbg !6368

lor.lhs.false29:                                  ; preds = %if.else27
  %42 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6369, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %42, i32 0, i32 11, !dbg !6370, !ctir !417
  %43 = load i8, i8* %human_numeric, align 1, !dbg !6370, !tbaa !3244
  %tobool30 = trunc i8 %43 to i1, !dbg !6370, !ctir !102
  br i1 %tobool30, label %if.then31, label %if.else54, !dbg !6371

if.then31:                                        ; preds = %lor.lhs.false29, %if.else27
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6372, metadata !DIExpression()), !dbg !6374
  %44 = load i8*, i8** %beg, align 8, !dbg !6375, !tbaa !2355
  %45 = load i8*, i8** %beg, align 8, !dbg !6376, !tbaa !2355
  %46 = load i8*, i8** %lim, align 8, !dbg !6377, !tbaa !2355
  %cmp32 = icmp ult i8* %45, %46, !dbg !6378
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !6379

land.rhs:                                         ; preds = %if.then31
  %47 = load i8*, i8** %beg, align 8, !dbg !6380, !tbaa !2355
  %48 = load i8, i8* %47, align 1, !dbg !6381, !tbaa !2507, !ctir !8
  %conv = sext i8 %48 to i32, !dbg !6381
  %cmp33 = icmp eq i32 %conv, 45, !dbg !6382
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then31
  %49 = phi i1 [ false, %if.then31 ], [ %cmp33, %land.rhs ], !dbg !6383
  %land.ext = zext i1 %49 to i32, !dbg !6379
  %idx.ext = sext i32 %land.ext to i64, !dbg !6384
  %add.ptr35 = getelementptr inbounds i8, i8* %44, i64 %idx.ext, !dbg !6384
  store i8* %add.ptr35, i8** %p, align 8, !dbg !6374, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %max_digit, metadata !6385, metadata !DIExpression()), !dbg !6386
  %call36 = call zeroext i8 @traverse_raw_number(i8** %p), !dbg !6387
  store i8 %call36, i8* %max_digit, align 1, !dbg !6386, !tbaa !2507
  %50 = load i8, i8* %max_digit, align 1, !dbg !6388, !tbaa !2507
  %conv37 = zext i8 %50 to i32, !dbg !6388
  %cmp38 = icmp sle i32 48, %conv37, !dbg !6390
  br i1 %cmp38, label %if.then40, label %if.end53, !dbg !6391

if.then40:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !6392, metadata !DIExpression()), !dbg !6394
  %51 = load i8*, i8** %p, align 8, !dbg !6395, !tbaa !2355
  %52 = load i8, i8* %51, align 1, !dbg !6396, !tbaa !2507, !ctir !88
  store i8 %52, i8* %ch, align 1, !dbg !6394, !tbaa !2507
  %53 = load i8*, i8** %p, align 8, !dbg !6397, !tbaa !2355
  %54 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6398, !tbaa !2355
  %human_numeric41 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %54, i32 0, i32 11, !dbg !6399, !ctir !417
  %55 = load i8, i8* %human_numeric41, align 1, !dbg !6399, !tbaa !3244
  %tobool42 = trunc i8 %55 to i1, !dbg !6399, !ctir !102
  br i1 %tobool42, label %land.rhs44, label %land.end49, !dbg !6400

land.rhs44:                                       ; preds = %if.then40
  %56 = load i8, i8* %ch, align 1, !dbg !6401, !tbaa !2507
  %idxprom45 = zext i8 %56 to i64, !dbg !6402
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [108 x i8], [148 x i8] }>* @unit_order to [256 x i8]*), i64 0, i64 %idxprom45, !dbg !6402, !ctir !479
  %57 = load i8, i8* %arrayidx46, align 1, !dbg !6402, !tbaa !2507
  %conv47 = sext i8 %57 to i32, !dbg !6402
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !6400
  br label %land.end49

land.end49:                                       ; preds = %land.rhs44, %if.then40
  %58 = phi i1 [ false, %if.then40 ], [ %tobool48, %land.rhs44 ], !dbg !6403
  %land.ext50 = zext i1 %58 to i32, !dbg !6400
  %idx.ext51 = sext i32 %land.ext50 to i64, !dbg !6404
  %add.ptr52 = getelementptr inbounds i8, i8* %53, i64 %idx.ext51, !dbg !6404
  store i8* %add.ptr52, i8** %tighter_lim, align 8, !dbg !6405, !tbaa !2355
  br label %if.end53, !dbg !6406

if.end53:                                         ; preds = %land.end49, %land.end
  br label %if.end55, !dbg !6407

if.else54:                                        ; preds = %lor.lhs.false29
  %59 = load i8*, i8** %lim, align 8, !dbg !6408, !tbaa !2355
  store i8* %59, i8** %tighter_lim, align 8, !dbg !6409, !tbaa !2355
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.end53
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then25
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then21
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then18
  %60 = load i8, i8* %saved, align 1, !dbg !6410, !tbaa !2507
  %61 = load i8*, i8** %lim, align 8, !dbg !6411, !tbaa !2355
  store i8 %60, i8* %61, align 1, !dbg !6412, !tbaa !2507, !ctir !8
  %62 = load i8*, i8** %tighter_lim, align 8, !dbg !6413, !tbaa !2355
  store i8* %62, i8** %lim, align 8, !dbg !6414, !tbaa !2355
  br label %if.end59, !dbg !6415

if.end59:                                         ; preds = %if.end58, %lor.lhs.false12
  br label %if.end60, !dbg !6416

if.end60:                                         ; preds = %if.end59, %entry
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !6417, metadata !DIExpression()), !dbg !6418
  %63 = load i8*, i8** %text, align 8, !dbg !6419, !tbaa !2355
  %64 = load i8*, i8** %beg, align 8, !dbg !6420, !tbaa !2355
  %call61 = call i64 @debug_width(i8* %63, i8* %64), !dbg !6421
  store i64 %call61, i64* %offset, align 8, !dbg !6418, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6422, metadata !DIExpression()), !dbg !6423
  %65 = load i8*, i8** %beg, align 8, !dbg !6424, !tbaa !2355
  %66 = load i8*, i8** %lim, align 8, !dbg !6425, !tbaa !2355
  %call62 = call i64 @debug_width(i8* %65, i8* %66), !dbg !6426
  store i64 %call62, i64* %width, align 8, !dbg !6423, !tbaa !2516
  %67 = load i64, i64* %offset, align 8, !dbg !6427, !tbaa !2516
  %68 = load i64, i64* %width, align 8, !dbg !6428, !tbaa !2516
  call void @mark_key(i64 %67, i64 %68), !dbg !6429
  ret void, !dbg !6430
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @begfield(%struct.line* %line, %struct.keyfield* %key) #4 !dbg !6431 !ctir !463 {
entry:
  %line.addr = alloca %struct.line*, align 8, !ctir !440
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !416
  %ptr = alloca i8*, align 8, !ctir !7
  %lim = alloca i8*, align 8, !ctir !7
  %sword = alloca i64, align 8, !ctir !52
  %schar = alloca i64, align 8, !ctir !52
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6432, metadata !DIExpression()), !dbg !6433
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6436, metadata !DIExpression()), !dbg !6437
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6438, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6439, !ctir !441
  %1 = load i8*, i8** %text, align 8, !dbg !6439, !tbaa !4554, !ctir !7
  store i8* %1, i8** %ptr, align 8, !dbg !6437, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %lim, metadata !6440, metadata !DIExpression()), !dbg !6441
  %2 = load i8*, i8** %ptr, align 8, !dbg !6442, !tbaa !2355
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6443, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 1, !dbg !6444, !ctir !441
  %4 = load i64, i64* %length, align 8, !dbg !6444, !tbaa !4639, !ctir !52
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4, !dbg !6445
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !6446
  store i8* %add.ptr1, i8** %lim, align 8, !dbg !6441, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %sword, metadata !6447, metadata !DIExpression()), !dbg !6448
  %5 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6449, !tbaa !2355
  %sword2 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 0, !dbg !6450, !ctir !417
  %6 = load i64, i64* %sword2, align 8, !dbg !6450, !tbaa !2657, !ctir !52
  store i64 %6, i64* %sword, align 8, !dbg !6448, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %schar, metadata !6451, metadata !DIExpression()), !dbg !6452
  %7 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6453, !tbaa !2355
  %schar3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 1, !dbg !6454, !ctir !417
  %8 = load i64, i64* %schar3, align 8, !dbg !6454, !tbaa !2776, !ctir !52
  store i64 %8, i64* %schar, align 8, !dbg !6452, !tbaa !2516
  %9 = load i32, i32* @tab, align 4, !dbg !6455, !tbaa !2342
  %cmp = icmp ne i32 %9, 128, !dbg !6457
  br i1 %cmp, label %if.then, label %if.else, !dbg !6458

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !6459

while.cond:                                       ; preds = %if.end, %if.then
  %10 = load i8*, i8** %ptr, align 8, !dbg !6460, !tbaa !2355
  %11 = load i8*, i8** %lim, align 8, !dbg !6461, !tbaa !2355
  %cmp4 = icmp ult i8* %10, %11, !dbg !6462
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !6463

land.rhs:                                         ; preds = %while.cond
  %12 = load i64, i64* %sword, align 8, !dbg !6464, !tbaa !2516
  %dec = add i64 %12, -1, !dbg !6464
  store i64 %dec, i64* %sword, align 8, !dbg !6464, !tbaa !2516
  %tobool = icmp ne i64 %12, 0, !dbg !6463
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !6465
  br i1 %13, label %while.body, label %while.end16, !dbg !6459

while.body:                                       ; preds = %land.end
  br label %while.cond5, !dbg !6466

while.cond5:                                      ; preds = %while.body11, %while.body
  %14 = load i8*, i8** %ptr, align 8, !dbg !6468, !tbaa !2355
  %15 = load i8*, i8** %lim, align 8, !dbg !6469, !tbaa !2355
  %cmp6 = icmp ult i8* %14, %15, !dbg !6470
  br i1 %cmp6, label %land.rhs7, label %land.end10, !dbg !6471

land.rhs7:                                        ; preds = %while.cond5
  %16 = load i8*, i8** %ptr, align 8, !dbg !6472, !tbaa !2355
  %17 = load i8, i8* %16, align 1, !dbg !6473, !tbaa !2507, !ctir !8
  %conv = sext i8 %17 to i32, !dbg !6473
  %18 = load i32, i32* @tab, align 4, !dbg !6474, !tbaa !2342
  %cmp8 = icmp ne i32 %conv, %18, !dbg !6475
  br label %land.end10

land.end10:                                       ; preds = %land.rhs7, %while.cond5
  %19 = phi i1 [ false, %while.cond5 ], [ %cmp8, %land.rhs7 ], !dbg !6476
  br i1 %19, label %while.body11, label %while.end, !dbg !6466

while.body11:                                     ; preds = %land.end10
  %20 = load i8*, i8** %ptr, align 8, !dbg !6477, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !6477
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !6477, !tbaa !2355
  br label %while.cond5, !dbg !6466, !llvm.loop !6478

while.end:                                        ; preds = %land.end10
  %21 = load i8*, i8** %ptr, align 8, !dbg !6480, !tbaa !2355
  %22 = load i8*, i8** %lim, align 8, !dbg !6482, !tbaa !2355
  %cmp12 = icmp ult i8* %21, %22, !dbg !6483
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !6484

if.then14:                                        ; preds = %while.end
  %23 = load i8*, i8** %ptr, align 8, !dbg !6485, !tbaa !2355
  %incdec.ptr15 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6485
  store i8* %incdec.ptr15, i8** %ptr, align 8, !dbg !6485, !tbaa !2355
  br label %if.end, !dbg !6485

if.end:                                           ; preds = %if.then14, %while.end
  br label %while.cond, !dbg !6459, !llvm.loop !6486

while.end16:                                      ; preds = %land.end
  br label %if.end48, !dbg !6459

if.else:                                          ; preds = %entry
  br label %while.cond17, !dbg !6488

while.cond17:                                     ; preds = %while.end46, %if.else
  %24 = load i8*, i8** %ptr, align 8, !dbg !6489, !tbaa !2355
  %25 = load i8*, i8** %lim, align 8, !dbg !6490, !tbaa !2355
  %cmp18 = icmp ult i8* %24, %25, !dbg !6491
  br i1 %cmp18, label %land.rhs20, label %land.end23, !dbg !6492

land.rhs20:                                       ; preds = %while.cond17
  %26 = load i64, i64* %sword, align 8, !dbg !6493, !tbaa !2516
  %dec21 = add i64 %26, -1, !dbg !6493
  store i64 %dec21, i64* %sword, align 8, !dbg !6493, !tbaa !2516
  %tobool22 = icmp ne i64 %26, 0, !dbg !6492
  br label %land.end23

land.end23:                                       ; preds = %land.rhs20, %while.cond17
  %27 = phi i1 [ false, %while.cond17 ], [ %tobool22, %land.rhs20 ], !dbg !6465
  br i1 %27, label %while.body24, label %while.end47, !dbg !6488

while.body24:                                     ; preds = %land.end23
  br label %while.cond25, !dbg !6494

while.cond25:                                     ; preds = %while.body32, %while.body24
  %28 = load i8*, i8** %ptr, align 8, !dbg !6496, !tbaa !2355
  %29 = load i8*, i8** %lim, align 8, !dbg !6497, !tbaa !2355
  %cmp26 = icmp ult i8* %28, %29, !dbg !6498
  br i1 %cmp26, label %land.rhs28, label %land.end31, !dbg !6499

land.rhs28:                                       ; preds = %while.cond25
  %30 = load i8*, i8** %ptr, align 8, !dbg !6500, !tbaa !2355
  %31 = load i8, i8* %30, align 1, !dbg !6501, !tbaa !2507, !ctir !8
  %call = call zeroext i8 @to_uchar(i8 signext %31), !dbg !6502
  %idxprom = zext i8 %call to i64, !dbg !6503
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6503, !ctir !318
  %32 = load i8, i8* %arrayidx, align 1, !dbg !6503, !tbaa !2499
  %tobool29 = trunc i8 %32 to i1, !dbg !6503
  br label %land.end31

land.end31:                                       ; preds = %land.rhs28, %while.cond25
  %33 = phi i1 [ false, %while.cond25 ], [ %tobool29, %land.rhs28 ], !dbg !6504
  br i1 %33, label %while.body32, label %while.end34, !dbg !6494

while.body32:                                     ; preds = %land.end31
  %34 = load i8*, i8** %ptr, align 8, !dbg !6505, !tbaa !2355
  %incdec.ptr33 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !6505
  store i8* %incdec.ptr33, i8** %ptr, align 8, !dbg !6505, !tbaa !2355
  br label %while.cond25, !dbg !6494, !llvm.loop !6506

while.end34:                                      ; preds = %land.end31
  br label %while.cond35, !dbg !6508

while.cond35:                                     ; preds = %while.body44, %while.end34
  %35 = load i8*, i8** %ptr, align 8, !dbg !6509, !tbaa !2355
  %36 = load i8*, i8** %lim, align 8, !dbg !6510, !tbaa !2355
  %cmp36 = icmp ult i8* %35, %36, !dbg !6511
  br i1 %cmp36, label %land.rhs38, label %land.end43, !dbg !6512

land.rhs38:                                       ; preds = %while.cond35
  %37 = load i8*, i8** %ptr, align 8, !dbg !6513, !tbaa !2355
  %38 = load i8, i8* %37, align 1, !dbg !6514, !tbaa !2507, !ctir !8
  %call39 = call zeroext i8 @to_uchar(i8 signext %38), !dbg !6515
  %idxprom40 = zext i8 %call39 to i64, !dbg !6516
  %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom40, !dbg !6516, !ctir !318
  %39 = load i8, i8* %arrayidx41, align 1, !dbg !6516, !tbaa !2499
  %tobool42 = trunc i8 %39 to i1, !dbg !6516
  %lnot = xor i1 %tobool42, true, !dbg !6517
  br label %land.end43

land.end43:                                       ; preds = %land.rhs38, %while.cond35
  %40 = phi i1 [ false, %while.cond35 ], [ %lnot, %land.rhs38 ], !dbg !6504
  br i1 %40, label %while.body44, label %while.end46, !dbg !6508

while.body44:                                     ; preds = %land.end43
  %41 = load i8*, i8** %ptr, align 8, !dbg !6518, !tbaa !2355
  %incdec.ptr45 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !6518
  store i8* %incdec.ptr45, i8** %ptr, align 8, !dbg !6518, !tbaa !2355
  br label %while.cond35, !dbg !6508, !llvm.loop !6519

while.end46:                                      ; preds = %land.end43
  br label %while.cond17, !dbg !6488, !llvm.loop !6521

while.end47:                                      ; preds = %land.end23
  br label %if.end48

if.end48:                                         ; preds = %while.end47, %while.end16
  %42 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6523, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %42, i32 0, i32 6, !dbg !6525, !ctir !417
  %43 = load i8, i8* %skipsblanks, align 8, !dbg !6525, !tbaa !3219
  %tobool49 = trunc i8 %43 to i1, !dbg !6525, !ctir !102
  br i1 %tobool49, label %if.then50, label %if.end64, !dbg !6526

if.then50:                                        ; preds = %if.end48
  br label %while.cond51, !dbg !6527

while.cond51:                                     ; preds = %while.body61, %if.then50
  %44 = load i8*, i8** %ptr, align 8, !dbg !6528, !tbaa !2355
  %45 = load i8*, i8** %lim, align 8, !dbg !6529, !tbaa !2355
  %cmp52 = icmp ult i8* %44, %45, !dbg !6530
  br i1 %cmp52, label %land.rhs54, label %land.end60, !dbg !6531

land.rhs54:                                       ; preds = %while.cond51
  %46 = load i8*, i8** %ptr, align 8, !dbg !6532, !tbaa !2355
  %47 = load i8, i8* %46, align 1, !dbg !6533, !tbaa !2507, !ctir !8
  %call55 = call zeroext i8 @to_uchar(i8 signext %47), !dbg !6534
  %idxprom56 = zext i8 %call55 to i64, !dbg !6535
  %arrayidx57 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom56, !dbg !6535, !ctir !318
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !6535, !tbaa !2499
  %tobool58 = trunc i8 %48 to i1, !dbg !6535
  br label %land.end60

land.end60:                                       ; preds = %land.rhs54, %while.cond51
  %49 = phi i1 [ false, %while.cond51 ], [ %tobool58, %land.rhs54 ], !dbg !6536
  br i1 %49, label %while.body61, label %while.end63, !dbg !6527

while.body61:                                     ; preds = %land.end60
  %50 = load i8*, i8** %ptr, align 8, !dbg !6537, !tbaa !2355
  %incdec.ptr62 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !6537
  store i8* %incdec.ptr62, i8** %ptr, align 8, !dbg !6537, !tbaa !2355
  br label %while.cond51, !dbg !6527, !llvm.loop !6538

while.end63:                                      ; preds = %land.end60
  br label %if.end64, !dbg !6527

if.end64:                                         ; preds = %while.end63, %if.end48
  %51 = load i8*, i8** %lim, align 8, !dbg !6540, !tbaa !2355
  %52 = load i8*, i8** %ptr, align 8, !dbg !6540, !tbaa !2355
  %53 = load i64, i64* %schar, align 8, !dbg !6540, !tbaa !2516
  %add.ptr65 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !6540
  %cmp66 = icmp ult i8* %51, %add.ptr65, !dbg !6540
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !6540

cond.true:                                        ; preds = %if.end64
  %54 = load i8*, i8** %lim, align 8, !dbg !6540, !tbaa !2355
  br label %cond.end, !dbg !6540

cond.false:                                       ; preds = %if.end64
  %55 = load i8*, i8** %ptr, align 8, !dbg !6540, !tbaa !2355
  %56 = load i64, i64* %schar, align 8, !dbg !6540, !tbaa !2516
  %add.ptr68 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !6540
  br label %cond.end, !dbg !6540

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %54, %cond.true ], [ %add.ptr68, %cond.false ], !dbg !6540
  store i8* %cond, i8** %ptr, align 8, !dbg !6541, !tbaa !2355
  %57 = load i8*, i8** %ptr, align 8, !dbg !6542, !tbaa !2355
  ret i8* %57, !dbg !6543
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @limfield(%struct.line* %line, %struct.keyfield* %key) #4 !dbg !6544 !ctir !463 {
entry:
  %line.addr = alloca %struct.line*, align 8, !ctir !440
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !416
  %ptr = alloca i8*, align 8, !ctir !7
  %lim = alloca i8*, align 8, !ctir !7
  %eword = alloca i64, align 8, !ctir !52
  %echar = alloca i64, align 8, !ctir !52
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6545, metadata !DIExpression()), !dbg !6546
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6549, metadata !DIExpression()), !dbg !6550
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6551, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6552, !ctir !441
  %1 = load i8*, i8** %text, align 8, !dbg !6552, !tbaa !4554, !ctir !7
  store i8* %1, i8** %ptr, align 8, !dbg !6550, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %lim, metadata !6553, metadata !DIExpression()), !dbg !6554
  %2 = load i8*, i8** %ptr, align 8, !dbg !6555, !tbaa !2355
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6556, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 1, !dbg !6557, !ctir !441
  %4 = load i64, i64* %length, align 8, !dbg !6557, !tbaa !4639, !ctir !52
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4, !dbg !6558
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !6559
  store i8* %add.ptr1, i8** %lim, align 8, !dbg !6554, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %eword, metadata !6560, metadata !DIExpression()), !dbg !6561
  %5 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6562, !tbaa !2355
  %eword2 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 2, !dbg !6563, !ctir !417
  %6 = load i64, i64* %eword2, align 8, !dbg !6563, !tbaa !2826, !ctir !52
  store i64 %6, i64* %eword, align 8, !dbg !6561, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %echar, metadata !6564, metadata !DIExpression()), !dbg !6565
  %7 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6566, !tbaa !2355
  %echar3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 3, !dbg !6567, !ctir !417
  %8 = load i64, i64* %echar3, align 8, !dbg !6567, !tbaa !2822, !ctir !52
  store i64 %8, i64* %echar, align 8, !dbg !6565, !tbaa !2516
  %9 = load i64, i64* %echar, align 8, !dbg !6568, !tbaa !2516
  %cmp = icmp eq i64 %9, 0, !dbg !6570
  br i1 %cmp, label %if.then, label %if.end, !dbg !6571

if.then:                                          ; preds = %entry
  %10 = load i64, i64* %eword, align 8, !dbg !6572, !tbaa !2516
  %inc = add i64 %10, 1, !dbg !6572
  store i64 %inc, i64* %eword, align 8, !dbg !6572, !tbaa !2516
  br label %if.end, !dbg !6573

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* @tab, align 4, !dbg !6574, !tbaa !2342
  %cmp4 = icmp ne i32 %11, 128, !dbg !6576
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !6577

if.then5:                                         ; preds = %if.end
  br label %while.cond, !dbg !6578

while.cond:                                       ; preds = %if.end20, %if.then5
  %12 = load i8*, i8** %ptr, align 8, !dbg !6579, !tbaa !2355
  %13 = load i8*, i8** %lim, align 8, !dbg !6580, !tbaa !2355
  %cmp6 = icmp ult i8* %12, %13, !dbg !6581
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !6582

land.rhs:                                         ; preds = %while.cond
  %14 = load i64, i64* %eword, align 8, !dbg !6583, !tbaa !2516
  %dec = add i64 %14, -1, !dbg !6583
  store i64 %dec, i64* %eword, align 8, !dbg !6583, !tbaa !2516
  %tobool = icmp ne i64 %14, 0, !dbg !6582
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %15 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !6584
  br i1 %15, label %while.body, label %while.end21, !dbg !6578

while.body:                                       ; preds = %land.end
  br label %while.cond7, !dbg !6585

while.cond7:                                      ; preds = %while.body13, %while.body
  %16 = load i8*, i8** %ptr, align 8, !dbg !6587, !tbaa !2355
  %17 = load i8*, i8** %lim, align 8, !dbg !6588, !tbaa !2355
  %cmp8 = icmp ult i8* %16, %17, !dbg !6589
  br i1 %cmp8, label %land.rhs9, label %land.end12, !dbg !6590

land.rhs9:                                        ; preds = %while.cond7
  %18 = load i8*, i8** %ptr, align 8, !dbg !6591, !tbaa !2355
  %19 = load i8, i8* %18, align 1, !dbg !6592, !tbaa !2507, !ctir !8
  %conv = sext i8 %19 to i32, !dbg !6592
  %20 = load i32, i32* @tab, align 4, !dbg !6593, !tbaa !2342
  %cmp10 = icmp ne i32 %conv, %20, !dbg !6594
  br label %land.end12

land.end12:                                       ; preds = %land.rhs9, %while.cond7
  %21 = phi i1 [ false, %while.cond7 ], [ %cmp10, %land.rhs9 ], !dbg !6595
  br i1 %21, label %while.body13, label %while.end, !dbg !6585

while.body13:                                     ; preds = %land.end12
  %22 = load i8*, i8** %ptr, align 8, !dbg !6596, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !6596
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !6596, !tbaa !2355
  br label %while.cond7, !dbg !6585, !llvm.loop !6597

while.end:                                        ; preds = %land.end12
  %23 = load i8*, i8** %ptr, align 8, !dbg !6599, !tbaa !2355
  %24 = load i8*, i8** %lim, align 8, !dbg !6601, !tbaa !2355
  %cmp14 = icmp ult i8* %23, %24, !dbg !6602
  br i1 %cmp14, label %land.lhs.true, label %if.end20, !dbg !6603

land.lhs.true:                                    ; preds = %while.end
  %25 = load i64, i64* %eword, align 8, !dbg !6604, !tbaa !2516
  %tobool16 = icmp ne i64 %25, 0, !dbg !6604
  br i1 %tobool16, label %if.then18, label %lor.lhs.false, !dbg !6605

lor.lhs.false:                                    ; preds = %land.lhs.true
  %26 = load i64, i64* %echar, align 8, !dbg !6606, !tbaa !2516
  %tobool17 = icmp ne i64 %26, 0, !dbg !6606
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6607

if.then18:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i8*, i8** %ptr, align 8, !dbg !6608, !tbaa !2355
  %incdec.ptr19 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !6608
  store i8* %incdec.ptr19, i8** %ptr, align 8, !dbg !6608, !tbaa !2355
  br label %if.end20, !dbg !6608

if.end20:                                         ; preds = %if.then18, %lor.lhs.false, %while.end
  br label %while.cond, !dbg !6578, !llvm.loop !6609

while.end21:                                      ; preds = %land.end
  br label %if.end53, !dbg !6578

if.else:                                          ; preds = %if.end
  br label %while.cond22, !dbg !6611

while.cond22:                                     ; preds = %while.end51, %if.else
  %28 = load i8*, i8** %ptr, align 8, !dbg !6612, !tbaa !2355
  %29 = load i8*, i8** %lim, align 8, !dbg !6613, !tbaa !2355
  %cmp23 = icmp ult i8* %28, %29, !dbg !6614
  br i1 %cmp23, label %land.rhs25, label %land.end28, !dbg !6615

land.rhs25:                                       ; preds = %while.cond22
  %30 = load i64, i64* %eword, align 8, !dbg !6616, !tbaa !2516
  %dec26 = add i64 %30, -1, !dbg !6616
  store i64 %dec26, i64* %eword, align 8, !dbg !6616, !tbaa !2516
  %tobool27 = icmp ne i64 %30, 0, !dbg !6615
  br label %land.end28

land.end28:                                       ; preds = %land.rhs25, %while.cond22
  %31 = phi i1 [ false, %while.cond22 ], [ %tobool27, %land.rhs25 ], !dbg !6584
  br i1 %31, label %while.body29, label %while.end52, !dbg !6611

while.body29:                                     ; preds = %land.end28
  br label %while.cond30, !dbg !6617

while.cond30:                                     ; preds = %while.body37, %while.body29
  %32 = load i8*, i8** %ptr, align 8, !dbg !6619, !tbaa !2355
  %33 = load i8*, i8** %lim, align 8, !dbg !6620, !tbaa !2355
  %cmp31 = icmp ult i8* %32, %33, !dbg !6621
  br i1 %cmp31, label %land.rhs33, label %land.end36, !dbg !6622

land.rhs33:                                       ; preds = %while.cond30
  %34 = load i8*, i8** %ptr, align 8, !dbg !6623, !tbaa !2355
  %35 = load i8, i8* %34, align 1, !dbg !6624, !tbaa !2507, !ctir !8
  %call = call zeroext i8 @to_uchar(i8 signext %35), !dbg !6625
  %idxprom = zext i8 %call to i64, !dbg !6626
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6626, !ctir !318
  %36 = load i8, i8* %arrayidx, align 1, !dbg !6626, !tbaa !2499
  %tobool34 = trunc i8 %36 to i1, !dbg !6626
  br label %land.end36

land.end36:                                       ; preds = %land.rhs33, %while.cond30
  %37 = phi i1 [ false, %while.cond30 ], [ %tobool34, %land.rhs33 ], !dbg !6627
  br i1 %37, label %while.body37, label %while.end39, !dbg !6617

while.body37:                                     ; preds = %land.end36
  %38 = load i8*, i8** %ptr, align 8, !dbg !6628, !tbaa !2355
  %incdec.ptr38 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !6628
  store i8* %incdec.ptr38, i8** %ptr, align 8, !dbg !6628, !tbaa !2355
  br label %while.cond30, !dbg !6617, !llvm.loop !6629

while.end39:                                      ; preds = %land.end36
  br label %while.cond40, !dbg !6631

while.cond40:                                     ; preds = %while.body49, %while.end39
  %39 = load i8*, i8** %ptr, align 8, !dbg !6632, !tbaa !2355
  %40 = load i8*, i8** %lim, align 8, !dbg !6633, !tbaa !2355
  %cmp41 = icmp ult i8* %39, %40, !dbg !6634
  br i1 %cmp41, label %land.rhs43, label %land.end48, !dbg !6635

land.rhs43:                                       ; preds = %while.cond40
  %41 = load i8*, i8** %ptr, align 8, !dbg !6636, !tbaa !2355
  %42 = load i8, i8* %41, align 1, !dbg !6637, !tbaa !2507, !ctir !8
  %call44 = call zeroext i8 @to_uchar(i8 signext %42), !dbg !6638
  %idxprom45 = zext i8 %call44 to i64, !dbg !6639
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom45, !dbg !6639, !ctir !318
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !6639, !tbaa !2499
  %tobool47 = trunc i8 %43 to i1, !dbg !6639
  %lnot = xor i1 %tobool47, true, !dbg !6640
  br label %land.end48

land.end48:                                       ; preds = %land.rhs43, %while.cond40
  %44 = phi i1 [ false, %while.cond40 ], [ %lnot, %land.rhs43 ], !dbg !6627
  br i1 %44, label %while.body49, label %while.end51, !dbg !6631

while.body49:                                     ; preds = %land.end48
  %45 = load i8*, i8** %ptr, align 8, !dbg !6641, !tbaa !2355
  %incdec.ptr50 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !6641
  store i8* %incdec.ptr50, i8** %ptr, align 8, !dbg !6641, !tbaa !2355
  br label %while.cond40, !dbg !6631, !llvm.loop !6642

while.end51:                                      ; preds = %land.end48
  br label %while.cond22, !dbg !6611, !llvm.loop !6644

while.end52:                                      ; preds = %land.end28
  br label %if.end53

if.end53:                                         ; preds = %while.end52, %while.end21
  %46 = load i64, i64* %echar, align 8, !dbg !6646, !tbaa !2516
  %cmp54 = icmp ne i64 %46, 0, !dbg !6648
  br i1 %cmp54, label %if.then56, label %if.end77, !dbg !6649

if.then56:                                        ; preds = %if.end53
  %47 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6650, !tbaa !2355
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %47, i32 0, i32 7, !dbg !6653, !ctir !417
  %48 = load i8, i8* %skipeblanks, align 1, !dbg !6653, !tbaa !3224
  %tobool57 = trunc i8 %48 to i1, !dbg !6653, !ctir !102
  br i1 %tobool57, label %if.then58, label %if.end72, !dbg !6654

if.then58:                                        ; preds = %if.then56
  br label %while.cond59, !dbg !6655

while.cond59:                                     ; preds = %while.body69, %if.then58
  %49 = load i8*, i8** %ptr, align 8, !dbg !6656, !tbaa !2355
  %50 = load i8*, i8** %lim, align 8, !dbg !6657, !tbaa !2355
  %cmp60 = icmp ult i8* %49, %50, !dbg !6658
  br i1 %cmp60, label %land.rhs62, label %land.end68, !dbg !6659

land.rhs62:                                       ; preds = %while.cond59
  %51 = load i8*, i8** %ptr, align 8, !dbg !6660, !tbaa !2355
  %52 = load i8, i8* %51, align 1, !dbg !6661, !tbaa !2507, !ctir !8
  %call63 = call zeroext i8 @to_uchar(i8 signext %52), !dbg !6662
  %idxprom64 = zext i8 %call63 to i64, !dbg !6663
  %arrayidx65 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom64, !dbg !6663, !ctir !318
  %53 = load i8, i8* %arrayidx65, align 1, !dbg !6663, !tbaa !2499
  %tobool66 = trunc i8 %53 to i1, !dbg !6663
  br label %land.end68

land.end68:                                       ; preds = %land.rhs62, %while.cond59
  %54 = phi i1 [ false, %while.cond59 ], [ %tobool66, %land.rhs62 ], !dbg !6664
  br i1 %54, label %while.body69, label %while.end71, !dbg !6655

while.body69:                                     ; preds = %land.end68
  %55 = load i8*, i8** %ptr, align 8, !dbg !6665, !tbaa !2355
  %incdec.ptr70 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !6665
  store i8* %incdec.ptr70, i8** %ptr, align 8, !dbg !6665, !tbaa !2355
  br label %while.cond59, !dbg !6655, !llvm.loop !6666

while.end71:                                      ; preds = %land.end68
  br label %if.end72, !dbg !6655

if.end72:                                         ; preds = %while.end71, %if.then56
  %56 = load i8*, i8** %lim, align 8, !dbg !6668, !tbaa !2355
  %57 = load i8*, i8** %ptr, align 8, !dbg !6668, !tbaa !2355
  %58 = load i64, i64* %echar, align 8, !dbg !6668, !tbaa !2516
  %add.ptr73 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !6668
  %cmp74 = icmp ult i8* %56, %add.ptr73, !dbg !6668
  br i1 %cmp74, label %cond.true, label %cond.false, !dbg !6668

cond.true:                                        ; preds = %if.end72
  %59 = load i8*, i8** %lim, align 8, !dbg !6668, !tbaa !2355
  br label %cond.end, !dbg !6668

cond.false:                                       ; preds = %if.end72
  %60 = load i8*, i8** %ptr, align 8, !dbg !6668, !tbaa !2355
  %61 = load i64, i64* %echar, align 8, !dbg !6668, !tbaa !2516
  %add.ptr76 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !6668
  br label %cond.end, !dbg !6668

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %59, %cond.true ], [ %add.ptr76, %cond.false ], !dbg !6668
  store i8* %cond, i8** %ptr, align 8, !dbg !6669, !tbaa !2355
  br label %if.end77, !dbg !6670

if.end77:                                         ; preds = %cond.end, %if.end53
  %62 = load i8*, i8** %ptr, align 8, !dbg !6671, !tbaa !2355
  ret i8* %62, !dbg !6672
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @key_numeric(%struct.keyfield* %key) #4 !dbg !6673 !ctir !414 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !416
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6676, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %0, i32 0, i32 8, !dbg !6677, !ctir !417
  %1 = load i8, i8* %numeric, align 2, !dbg !6677, !tbaa !3234
  %tobool = trunc i8 %1 to i1, !dbg !6677, !ctir !102
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !6678

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6679, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 10, !dbg !6680, !ctir !417
  %3 = load i8, i8* %general_numeric, align 4, !dbg !6680, !tbaa !3239
  %tobool1 = trunc i8 %3 to i1, !dbg !6680, !ctir !102
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !6681

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6682, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 11, !dbg !6683, !ctir !417
  %5 = load i8, i8* %human_numeric, align 1, !dbg !6683, !tbaa !3244
  %tobool2 = trunc i8 %5 to i1, !dbg !6683, !ctir !102
  br label %lor.end, !dbg !6681

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool2, %lor.rhs ]
  ret i1 %6, !dbg !6684
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getmonth(i8* %month, i8** %ea) #4 !dbg !6685 !ctir !482 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %month.addr = alloca i8*, align 8, !ctir !87
  %ea.addr = alloca i8**, align 8, !ctir !91
  %lo = alloca i64, align 8, !ctir !52
  %hi = alloca i64, align 8, !ctir !52
  %ix = alloca i64, align 8, !ctir !52
  %m = alloca i8*, align 8, !ctir !87
  %n = alloca i8*, align 8, !ctir !87
  store i8* %month, i8** %month.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %month.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  store i8** %ea, i8*** %ea.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %ea.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !6690, metadata !DIExpression()), !dbg !6691
  store i64 0, i64* %lo, align 8, !dbg !6691, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !6692, metadata !DIExpression()), !dbg !6693
  store i64 12, i64* %hi, align 8, !dbg !6693, !tbaa !2516
  br label %while.cond, !dbg !6694

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %month.addr, align 8, !dbg !6695, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !6696, !tbaa !2507, !ctir !88
  %call = call zeroext i8 @to_uchar(i8 signext %1), !dbg !6697
  %idxprom = zext i8 %call to i64, !dbg !6698
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6698, !ctir !318
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6698, !tbaa !2499
  %tobool = trunc i8 %2 to i1, !dbg !6698
  br i1 %tobool, label %while.body, label %while.end, !dbg !6694

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %month.addr, align 8, !dbg !6699, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !6699
  store i8* %incdec.ptr, i8** %month.addr, align 8, !dbg !6699, !tbaa !2355
  br label %while.cond, !dbg !6694, !llvm.loop !6700

while.end:                                        ; preds = %while.cond
  br label %do.body, !dbg !6701

do.body:                                          ; preds = %do.cond, %while.end
  call void @llvm.dbg.declare(metadata i64* %ix, metadata !6702, metadata !DIExpression()), !dbg !6704
  %4 = load i64, i64* %lo, align 8, !dbg !6705, !tbaa !2516
  %5 = load i64, i64* %hi, align 8, !dbg !6706, !tbaa !2516
  %add = add i64 %4, %5, !dbg !6707
  %div = udiv i64 %add, 2, !dbg !6708
  store i64 %div, i64* %ix, align 8, !dbg !6704, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %m, metadata !6709, metadata !DIExpression()), !dbg !6710
  %6 = load i8*, i8** %month.addr, align 8, !dbg !6711, !tbaa !2355
  store i8* %6, i8** %m, align 8, !dbg !6710, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %n, metadata !6712, metadata !DIExpression()), !dbg !6713
  %7 = load i64, i64* %ix, align 8, !dbg !6714, !tbaa !2516
  %arrayidx1 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %7, !dbg !6715, !ctir !324
  %name = getelementptr inbounds %struct.month, %struct.month* %arrayidx1, i32 0, i32 0, !dbg !6716, !ctir !325
  %8 = load i8*, i8** %name, align 16, !dbg !6716, !tbaa !3552, !ctir !87
  store i8* %8, i8** %n, align 8, !dbg !6713, !tbaa !2355
  br label %for.cond, !dbg !6717

for.cond:                                         ; preds = %for.inc, %do.body
  %9 = load i8*, i8** %n, align 8, !dbg !6718, !tbaa !2355
  %10 = load i8, i8* %9, align 1, !dbg !6723, !tbaa !2507, !ctir !88
  %tobool2 = icmp ne i8 %10, 0, !dbg !6723
  br i1 %tobool2, label %if.end6, label %if.then, !dbg !6724

if.then:                                          ; preds = %for.cond
  %11 = load i8**, i8*** %ea.addr, align 8, !dbg !6725, !tbaa !2355
  %tobool3 = icmp ne i8** %11, null, !dbg !6725
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6728

if.then4:                                         ; preds = %if.then
  %12 = load i8*, i8** %m, align 8, !dbg !6729, !tbaa !2355
  %13 = load i8**, i8*** %ea.addr, align 8, !dbg !6730, !tbaa !2355
  store i8* %12, i8** %13, align 8, !dbg !6731, !tbaa !2355, !ctir !7
  br label %if.end, !dbg !6732

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load i64, i64* %ix, align 8, !dbg !6733, !tbaa !2516
  %arrayidx5 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %14, !dbg !6734, !ctir !324
  %val = getelementptr inbounds %struct.month, %struct.month* %arrayidx5, i32 0, i32 1, !dbg !6735, !ctir !325
  %15 = load i32, i32* %val, align 8, !dbg !6735, !tbaa !3560, !ctir !5
  store i32 %15, i32* %retval, align 4, !dbg !6736
  br label %return, !dbg !6736

if.end6:                                          ; preds = %for.cond
  %16 = load i8*, i8** %m, align 8, !dbg !6737, !tbaa !2355
  %17 = load i8, i8* %16, align 1, !dbg !6739, !tbaa !2507, !ctir !88
  %call7 = call zeroext i8 @to_uchar(i8 signext %17), !dbg !6740
  %idxprom8 = zext i8 %call7 to i64, !dbg !6741
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %idxprom8, !dbg !6741, !ctir !323
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !6741, !tbaa !2507
  %call10 = call zeroext i8 @to_uchar(i8 signext %18), !dbg !6742
  %conv = zext i8 %call10 to i32, !dbg !6742
  %19 = load i8*, i8** %n, align 8, !dbg !6743, !tbaa !2355
  %20 = load i8, i8* %19, align 1, !dbg !6744, !tbaa !2507, !ctir !88
  %call11 = call zeroext i8 @to_uchar(i8 signext %20), !dbg !6745
  %conv12 = zext i8 %call11 to i32, !dbg !6745
  %cmp = icmp slt i32 %conv, %conv12, !dbg !6746
  br i1 %cmp, label %if.then14, label %if.else, !dbg !6747

if.then14:                                        ; preds = %if.end6
  %21 = load i64, i64* %ix, align 8, !dbg !6748, !tbaa !2516
  store i64 %21, i64* %hi, align 8, !dbg !6750, !tbaa !2516
  br label %for.end, !dbg !6751

if.else:                                          ; preds = %if.end6
  %22 = load i8*, i8** %m, align 8, !dbg !6752, !tbaa !2355
  %23 = load i8, i8* %22, align 1, !dbg !6754, !tbaa !2507, !ctir !88
  %call15 = call zeroext i8 @to_uchar(i8 signext %23), !dbg !6755
  %idxprom16 = zext i8 %call15 to i64, !dbg !6756
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %idxprom16, !dbg !6756, !ctir !323
  %24 = load i8, i8* %arrayidx17, align 1, !dbg !6756, !tbaa !2507
  %call18 = call zeroext i8 @to_uchar(i8 signext %24), !dbg !6757
  %conv19 = zext i8 %call18 to i32, !dbg !6757
  %25 = load i8*, i8** %n, align 8, !dbg !6758, !tbaa !2355
  %26 = load i8, i8* %25, align 1, !dbg !6759, !tbaa !2507, !ctir !88
  %call20 = call zeroext i8 @to_uchar(i8 signext %26), !dbg !6760
  %conv21 = zext i8 %call20 to i32, !dbg !6760
  %cmp22 = icmp sgt i32 %conv19, %conv21, !dbg !6761
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !6762

if.then24:                                        ; preds = %if.else
  %27 = load i64, i64* %ix, align 8, !dbg !6763, !tbaa !2516
  %add25 = add i64 %27, 1, !dbg !6765
  store i64 %add25, i64* %lo, align 8, !dbg !6766, !tbaa !2516
  br label %for.end, !dbg !6767

if.end26:                                         ; preds = %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  br label %for.inc, !dbg !6768

for.inc:                                          ; preds = %if.end27
  %28 = load i8*, i8** %m, align 8, !dbg !6769, !tbaa !2355
  %incdec.ptr28 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6769
  store i8* %incdec.ptr28, i8** %m, align 8, !dbg !6769, !tbaa !2355
  %29 = load i8*, i8** %n, align 8, !dbg !6770, !tbaa !2355
  %incdec.ptr29 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !6770
  store i8* %incdec.ptr29, i8** %n, align 8, !dbg !6770, !tbaa !2355
  br label %for.cond, !dbg !6771, !llvm.loop !6772

for.end:                                          ; preds = %if.then24, %if.then14
  br label %do.cond, !dbg !6775

do.cond:                                          ; preds = %for.end
  %30 = load i64, i64* %lo, align 8, !dbg !6776, !tbaa !2516
  %31 = load i64, i64* %hi, align 8, !dbg !6777, !tbaa !2516
  %cmp30 = icmp ult i64 %30, %31, !dbg !6778
  br i1 %cmp30, label %do.body, label %do.end, !dbg !6775, !llvm.loop !6779

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !6781
  br label %return, !dbg !6781

return:                                           ; preds = %do.end, %if.end
  %32 = load i32, i32* %retval, align 4, !dbg !6782
  ret i32 %32, !dbg !6782
}

; Function Attrs: nounwind
declare dso_local x86_fp80 @strtold(i8*, i8**) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @traverse_raw_number(i8** %number) #4 !dbg !6783 !ctir !480 {
entry:
  %retval = alloca i8, align 1, !ctir !317
  %number.addr = alloca i8**, align 8, !ctir !371
  %p = alloca i8*, align 8, !ctir !87
  %ch = alloca i8, align 1, !ctir !317
  %max_digit = alloca i8, align 1, !ctir !317
  %ends_with_thousands_sep = alloca i8, align 1, !ctir !102
  store i8** %number, i8*** %number.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %number.addr, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6786, metadata !DIExpression()), !dbg !6787
  %0 = load i8**, i8*** %number.addr, align 8, !dbg !6788, !tbaa !2355
  %1 = load i8*, i8** %0, align 8, !dbg !6789, !tbaa !2355, !ctir !87
  store i8* %1, i8** %p, align 8, !dbg !6787, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata i8* %max_digit, metadata !6792, metadata !DIExpression()), !dbg !6793
  store i8 0, i8* %max_digit, align 1, !dbg !6793, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %ends_with_thousands_sep, metadata !6794, metadata !DIExpression()), !dbg !6795
  store i8 0, i8* %ends_with_thousands_sep, align 1, !dbg !6795, !tbaa !2499
  br label %while.cond, !dbg !6796

while.cond:                                       ; preds = %if.end11, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !6797, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !6797
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6797, !tbaa !2355
  %3 = load i8, i8* %2, align 1, !dbg !6797, !tbaa !2507, !ctir !88
  store i8 %3, i8* %ch, align 1, !dbg !6797, !tbaa !2507
  %conv = zext i8 %3 to i32, !dbg !6797
  %sub = sub i32 %conv, 48, !dbg !6797
  %cmp = icmp ule i32 %sub, 9, !dbg !6797
  br i1 %cmp, label %while.body, label %while.end, !dbg !6796

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %max_digit, align 1, !dbg !6798, !tbaa !2507
  %conv2 = zext i8 %4 to i32, !dbg !6798
  %5 = load i8, i8* %ch, align 1, !dbg !6801, !tbaa !2507
  %conv3 = zext i8 %5 to i32, !dbg !6801
  %cmp4 = icmp slt i32 %conv2, %conv3, !dbg !6802
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6803

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %ch, align 1, !dbg !6804, !tbaa !2507
  store i8 %6, i8* %max_digit, align 1, !dbg !6805, !tbaa !2507
  br label %if.end, !dbg !6806

if.end:                                           ; preds = %if.then, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !6807, !tbaa !2355
  %8 = load i8, i8* %7, align 1, !dbg !6808, !tbaa !2507, !ctir !88
  %conv6 = sext i8 %8 to i32, !dbg !6808
  %9 = load i32, i32* @thousands_sep, align 4, !dbg !6809, !tbaa !2342
  %cmp7 = icmp eq i32 %conv6, %9, !dbg !6810
  %frombool = zext i1 %cmp7 to i8, !dbg !6811
  store i8 %frombool, i8* %ends_with_thousands_sep, align 1, !dbg !6811, !tbaa !2499
  %10 = load i8, i8* %ends_with_thousands_sep, align 1, !dbg !6812, !tbaa !2499
  %tobool = trunc i8 %10 to i1, !dbg !6812
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !6814

if.then9:                                         ; preds = %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !6815, !tbaa !2355
  %incdec.ptr10 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6815
  store i8* %incdec.ptr10, i8** %p, align 8, !dbg !6815, !tbaa !2355
  br label %if.end11, !dbg !6815

if.end11:                                         ; preds = %if.then9, %if.end
  br label %while.cond, !dbg !6796, !llvm.loop !6816

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ends_with_thousands_sep, align 1, !dbg !6818, !tbaa !2499
  %tobool12 = trunc i8 %12 to i1, !dbg !6818
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6820

if.then13:                                        ; preds = %while.end
  %13 = load i8*, i8** %p, align 8, !dbg !6821, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 -2, !dbg !6823
  %14 = load i8**, i8*** %number.addr, align 8, !dbg !6824, !tbaa !2355
  store i8* %add.ptr, i8** %14, align 8, !dbg !6825, !tbaa !2355, !ctir !87
  %15 = load i8, i8* %max_digit, align 1, !dbg !6826, !tbaa !2507
  store i8 %15, i8* %retval, align 1, !dbg !6827
  br label %return, !dbg !6827

if.end14:                                         ; preds = %while.end
  %16 = load i8, i8* %ch, align 1, !dbg !6828, !tbaa !2507
  %conv15 = zext i8 %16 to i32, !dbg !6828
  %17 = load i32, i32* @decimal_point, align 4, !dbg !6830, !tbaa !2342
  %cmp16 = icmp eq i32 %conv15, %17, !dbg !6831
  br i1 %cmp16, label %if.then18, label %if.end33, !dbg !6832

if.then18:                                        ; preds = %if.end14
  br label %while.cond19, !dbg !6833

while.cond19:                                     ; preds = %if.end31, %if.then18
  %18 = load i8*, i8** %p, align 8, !dbg !6834, !tbaa !2355
  %incdec.ptr20 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6834
  store i8* %incdec.ptr20, i8** %p, align 8, !dbg !6834, !tbaa !2355
  %19 = load i8, i8* %18, align 1, !dbg !6834, !tbaa !2507, !ctir !88
  store i8 %19, i8* %ch, align 1, !dbg !6834, !tbaa !2507
  %conv21 = zext i8 %19 to i32, !dbg !6834
  %sub22 = sub i32 %conv21, 48, !dbg !6834
  %cmp23 = icmp ule i32 %sub22, 9, !dbg !6834
  br i1 %cmp23, label %while.body25, label %while.end32, !dbg !6833

while.body25:                                     ; preds = %while.cond19
  %20 = load i8, i8* %max_digit, align 1, !dbg !6835, !tbaa !2507
  %conv26 = zext i8 %20 to i32, !dbg !6835
  %21 = load i8, i8* %ch, align 1, !dbg !6837, !tbaa !2507
  %conv27 = zext i8 %21 to i32, !dbg !6837
  %cmp28 = icmp slt i32 %conv26, %conv27, !dbg !6838
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6839

if.then30:                                        ; preds = %while.body25
  %22 = load i8, i8* %ch, align 1, !dbg !6840, !tbaa !2507
  store i8 %22, i8* %max_digit, align 1, !dbg !6841, !tbaa !2507
  br label %if.end31, !dbg !6842

if.end31:                                         ; preds = %if.then30, %while.body25
  br label %while.cond19, !dbg !6833, !llvm.loop !6843

while.end32:                                      ; preds = %while.cond19
  br label %if.end33, !dbg !6833

if.end33:                                         ; preds = %while.end32, %if.end14
  %23 = load i8*, i8** %p, align 8, !dbg !6845, !tbaa !2355
  %add.ptr34 = getelementptr inbounds i8, i8* %23, i64 -1, !dbg !6846
  %24 = load i8**, i8*** %number.addr, align 8, !dbg !6847, !tbaa !2355
  store i8* %add.ptr34, i8** %24, align 8, !dbg !6848, !tbaa !2355, !ctir !87
  %25 = load i8, i8* %max_digit, align 1, !dbg !6849, !tbaa !2507
  store i8 %25, i8* %retval, align 1, !dbg !6850
  br label %return, !dbg !6850

return:                                           ; preds = %if.end33, %if.then13
  %26 = load i8, i8* %retval, align 1, !dbg !6851
  ret i8 %26, !dbg !6851
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @debug_width(i8* %text, i8* %lim) #4 !dbg !6852 !ctir !514 {
entry:
  %text.addr = alloca i8*, align 8, !ctir !87
  %lim.addr = alloca i8*, align 8, !ctir !87
  %width = alloca i64, align 8, !ctir !52
  store i8* %text, i8** %text.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %text.addr, metadata !6853, metadata !DIExpression()), !dbg !6854
  store i8* %lim, i8** %lim.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %lim.addr, metadata !6855, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6857, metadata !DIExpression()), !dbg !6858
  %0 = load i8*, i8** %text.addr, align 8, !dbg !6859, !tbaa !2355
  %1 = load i8*, i8** %lim.addr, align 8, !dbg !6860, !tbaa !2355
  %2 = load i8*, i8** %text.addr, align 8, !dbg !6861, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !6862
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !6862
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6862
  %call = call i32 @mbsnwidth(i8* %0, i64 %sub.ptr.sub, i32 0), !dbg !6863
  %conv = sext i32 %call to i64, !dbg !6863
  store i64 %conv, i64* %width, align 8, !dbg !6858, !tbaa !2516
  br label %while.cond, !dbg !6864

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i8*, i8** %text.addr, align 8, !dbg !6865, !tbaa !2355
  %4 = load i8*, i8** %lim.addr, align 8, !dbg !6866, !tbaa !2355
  %cmp = icmp ult i8* %3, %4, !dbg !6867
  br i1 %cmp, label %while.body, label %while.end, !dbg !6864

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %text.addr, align 8, !dbg !6868, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6868
  store i8* %incdec.ptr, i8** %text.addr, align 8, !dbg !6868, !tbaa !2355
  %6 = load i8, i8* %5, align 1, !dbg !6869, !tbaa !2507, !ctir !88
  %conv2 = sext i8 %6 to i32, !dbg !6869
  %cmp3 = icmp eq i32 %conv2, 9, !dbg !6870
  %conv4 = zext i1 %cmp3 to i32, !dbg !6870
  %conv5 = sext i32 %conv4 to i64, !dbg !6871
  %7 = load i64, i64* %width, align 8, !dbg !6872, !tbaa !2516
  %add = add i64 %7, %conv5, !dbg !6872
  store i64 %add, i64* %width, align 8, !dbg !6872, !tbaa !2516
  br label %while.cond, !dbg !6864, !llvm.loop !6873

while.end:                                        ; preds = %while.cond
  %8 = load i64, i64* %width, align 8, !dbg !6875, !tbaa !2516
  ret i64 %8, !dbg !6876
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_key(i64 %offset, i64 %width) #4 !dbg !6877 !ctir !516 {
entry:
  %offset.addr = alloca i64, align 8, !ctir !52
  %width.addr = alloca i64, align 8, !ctir !52
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  store i64 %width, i64* %width.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  br label %while.cond, !dbg !6882

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %offset.addr, align 8, !dbg !6883, !tbaa !2516
  %dec = add i64 %0, -1, !dbg !6883
  store i64 %dec, i64* %offset.addr, align 8, !dbg !6883, !tbaa !2516
  %tobool = icmp ne i64 %0, 0, !dbg !6882
  br i1 %tobool, label %while.body, label %while.end, !dbg !6882

while.body:                                       ; preds = %while.cond
  %call = call i32 @putchar_unlocked(i32 32), !dbg !6884
  br label %while.cond, !dbg !6882, !llvm.loop !6885

while.end:                                        ; preds = %while.cond
  %1 = load i64, i64* %width.addr, align 8, !dbg !6886, !tbaa !2516
  %tobool1 = icmp ne i64 %1, 0, !dbg !6886
  br i1 %tobool1, label %if.else, label %if.then, !dbg !6888

if.then:                                          ; preds = %while.end
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.165, i64 0, i64 0)) #12, !dbg !6889
  %call3 = call i32 (i8*, ...) @printf(i8* %call2), !dbg !6890
  br label %if.end, !dbg !6890

if.else:                                          ; preds = %while.end
  br label %do.body, !dbg !6891

do.body:                                          ; preds = %do.cond, %if.else
  %call4 = call i32 @putchar_unlocked(i32 95), !dbg !6893
  br label %do.cond, !dbg !6893

do.cond:                                          ; preds = %do.body
  %2 = load i64, i64* %width.addr, align 8, !dbg !6894, !tbaa !2516
  %dec5 = add i64 %2, -1, !dbg !6894
  store i64 %dec5, i64* %width.addr, align 8, !dbg !6894, !tbaa !2516
  %tobool6 = icmp ne i64 %dec5, 0, !dbg !6893
  br i1 %tobool6, label %do.body, label %do.end, !dbg !6893, !llvm.loop !6895

do.end:                                           ; preds = %do.cond
  %call7 = call i32 @putchar_unlocked(i32 10), !dbg !6897
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  ret void, !dbg !6898
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @keycompare(%struct.line* %a, %struct.line* %b) #4 !dbg !6899 !ctir !469 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %a.addr = alloca %struct.line*, align 8, !ctir !440
  %b.addr = alloca %struct.line*, align 8, !ctir !440
  %key = alloca %struct.keyfield*, align 8, !ctir !92
  %texta = alloca i8*, align 8, !ctir !7
  %textb = alloca i8*, align 8, !ctir !7
  %lima = alloca i8*, align 8, !ctir !7
  %limb = alloca i8*, align 8, !ctir !7
  %diff = alloca i32, align 4, !ctir !5
  %translate = alloca i8*, align 8, !ctir !87
  %ignore = alloca i8*, align 8, !ctir !100
  %lena = alloca i64, align 8, !ctir !52
  %lenb = alloca i64, align 8, !ctir !52
  %ta = alloca i8*, align 8, !ctir !7
  %tb = alloca i8*, align 8, !ctir !7
  %tlena = alloca i64, align 8, !ctir !52
  %tlenb = alloca i64, align 8, !ctir !52
  %enda = alloca i8, align 1, !ctir !8
  %endb = alloca i8, align 1, !ctir !8
  %allocated = alloca i8*, align 8, !ctir !47
  %stackbuf = alloca [4000 x i8], align 16, !ctir !471
  %i = alloca i64, align 8, !ctir !52
  %size = alloca i64, align 8, !ctir !52
  store %struct.line* %a, %struct.line** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %a.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store %struct.line* %b, %struct.line** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %b.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !6904, metadata !DIExpression()), !dbg !6905
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !6906, !tbaa !2355
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !6905, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %texta, metadata !6907, metadata !DIExpression()), !dbg !6908
  %1 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6909, !tbaa !2355
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %1, i32 0, i32 2, !dbg !6910, !ctir !441
  %2 = load i8*, i8** %keybeg, align 8, !dbg !6910, !tbaa !4685, !ctir !7
  store i8* %2, i8** %texta, align 8, !dbg !6908, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %textb, metadata !6911, metadata !DIExpression()), !dbg !6912
  %3 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6913, !tbaa !2355
  %keybeg1 = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 2, !dbg !6914, !ctir !441
  %4 = load i8*, i8** %keybeg1, align 8, !dbg !6914, !tbaa !4685, !ctir !7
  store i8* %4, i8** %textb, align 8, !dbg !6912, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %lima, metadata !6915, metadata !DIExpression()), !dbg !6916
  %5 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6917, !tbaa !2355
  %keylim = getelementptr inbounds %struct.line, %struct.line* %5, i32 0, i32 3, !dbg !6918, !ctir !441
  %6 = load i8*, i8** %keylim, align 8, !dbg !6918, !tbaa !4695, !ctir !7
  store i8* %6, i8** %lima, align 8, !dbg !6916, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %limb, metadata !6919, metadata !DIExpression()), !dbg !6920
  %7 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6921, !tbaa !2355
  %keylim2 = getelementptr inbounds %struct.line, %struct.line* %7, i32 0, i32 3, !dbg !6922, !ctir !441
  %8 = load i8*, i8** %keylim2, align 8, !dbg !6922, !tbaa !4695, !ctir !7
  store i8* %8, i8** %limb, align 8, !dbg !6920, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6923, metadata !DIExpression()), !dbg !6924
  br label %while.body, !dbg !6925

while.body:                                       ; preds = %entry, %if.end380
  call void @llvm.dbg.declare(metadata i8** %translate, metadata !6926, metadata !DIExpression()), !dbg !6928
  %9 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6929, !tbaa !2355
  %translate3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 5, !dbg !6930, !ctir !93
  %10 = load i8*, i8** %translate3, align 8, !dbg !6930, !tbaa !3214, !ctir !87
  store i8* %10, i8** %translate, align 8, !dbg !6928, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %ignore, metadata !6931, metadata !DIExpression()), !dbg !6932
  %11 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6933, !tbaa !2355
  %ignore4 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 4, !dbg !6934, !ctir !93
  %12 = load i8*, i8** %ignore4, align 8, !dbg !6934, !tbaa !3209, !ctir !100
  store i8* %12, i8** %ignore, align 8, !dbg !6932, !tbaa !2355
  %13 = load i8*, i8** %texta, align 8, !dbg !6935, !tbaa !2355
  %14 = load i8*, i8** %lima, align 8, !dbg !6935, !tbaa !2355
  %cmp = icmp ugt i8* %13, %14, !dbg !6935
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6935

cond.true:                                        ; preds = %while.body
  %15 = load i8*, i8** %texta, align 8, !dbg !6935, !tbaa !2355
  br label %cond.end, !dbg !6935

cond.false:                                       ; preds = %while.body
  %16 = load i8*, i8** %lima, align 8, !dbg !6935, !tbaa !2355
  br label %cond.end, !dbg !6935

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %15, %cond.true ], [ %16, %cond.false ], !dbg !6935
  store i8* %cond, i8** %lima, align 8, !dbg !6936, !tbaa !2355
  %17 = load i8*, i8** %textb, align 8, !dbg !6937, !tbaa !2355
  %18 = load i8*, i8** %limb, align 8, !dbg !6937, !tbaa !2355
  %cmp5 = icmp ugt i8* %17, %18, !dbg !6937
  br i1 %cmp5, label %cond.true6, label %cond.false7, !dbg !6937

cond.true6:                                       ; preds = %cond.end
  %19 = load i8*, i8** %textb, align 8, !dbg !6937, !tbaa !2355
  br label %cond.end8, !dbg !6937

cond.false7:                                      ; preds = %cond.end
  %20 = load i8*, i8** %limb, align 8, !dbg !6937, !tbaa !2355
  br label %cond.end8, !dbg !6937

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i8* [ %19, %cond.true6 ], [ %20, %cond.false7 ], !dbg !6937
  store i8* %cond9, i8** %limb, align 8, !dbg !6938, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %lena, metadata !6939, metadata !DIExpression()), !dbg !6940
  %21 = load i8*, i8** %lima, align 8, !dbg !6941, !tbaa !2355
  %22 = load i8*, i8** %texta, align 8, !dbg !6942, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !6943
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !6943
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6943
  store i64 %sub.ptr.sub, i64* %lena, align 8, !dbg !6940, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %lenb, metadata !6944, metadata !DIExpression()), !dbg !6945
  %23 = load i8*, i8** %limb, align 8, !dbg !6946, !tbaa !2355
  %24 = load i8*, i8** %textb, align 8, !dbg !6947, !tbaa !2355
  %sub.ptr.lhs.cast10 = ptrtoint i8* %23 to i64, !dbg !6948
  %sub.ptr.rhs.cast11 = ptrtoint i8* %24 to i64, !dbg !6948
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !6948
  store i64 %sub.ptr.sub12, i64* %lenb, align 8, !dbg !6945, !tbaa !2516
  %25 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !6949, !tbaa !2499
  %tobool = trunc i8 %25 to i1, !dbg !6949
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6951

lor.lhs.false:                                    ; preds = %cond.end8
  %26 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6952, !tbaa !2355
  %call = call zeroext i1 @key_numeric(%struct.keyfield* %26), !dbg !6953
  br i1 %call, label %if.then, label %lor.lhs.false13, !dbg !6954

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %27 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6955, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %27, i32 0, i32 12, !dbg !6956, !ctir !93
  %28 = load i8, i8* %month, align 2, !dbg !6956, !tbaa !3229
  %tobool14 = trunc i8 %28 to i1, !dbg !6956, !ctir !102
  br i1 %tobool14, label %if.then, label %lor.lhs.false15, !dbg !6957

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %29 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6958, !tbaa !2355
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %29, i32 0, i32 9, !dbg !6959, !ctir !93
  %30 = load i8, i8* %random, align 1, !dbg !6959, !tbaa !3254
  %tobool16 = trunc i8 %30 to i1, !dbg !6959, !ctir !102
  br i1 %tobool16, label %if.then, label %lor.lhs.false17, !dbg !6960

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %31 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6961, !tbaa !2355
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %31, i32 0, i32 14, !dbg !6962, !ctir !93
  %32 = load i8, i8* %version, align 8, !dbg !6962, !tbaa !3249
  %tobool18 = trunc i8 %32 to i1, !dbg !6962, !ctir !102
  br i1 %tobool18, label %if.then, label %if.else148, !dbg !6963

if.then:                                          ; preds = %lor.lhs.false17, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false, %cond.end8
  call void @llvm.dbg.declare(metadata i8** %ta, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.declare(metadata i8** %tb, metadata !6967, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.declare(metadata i64* %tlena, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i64* %tlenb, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i8* %enda, metadata !6973, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.declare(metadata i8* %endb, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata i8** %allocated, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata [4000 x i8]* %stackbuf, metadata !6979, metadata !DIExpression()), !dbg !6980
  %33 = load i8*, i8** %ignore, align 8, !dbg !6981, !tbaa !2355
  %tobool19 = icmp ne i8* %33, null, !dbg !6981
  br i1 %tobool19, label %if.then22, label %lor.lhs.false20, !dbg !6983

lor.lhs.false20:                                  ; preds = %if.then
  %34 = load i8*, i8** %translate, align 8, !dbg !6984, !tbaa !2355
  %tobool21 = icmp ne i8* %34, null, !dbg !6984
  br i1 %tobool21, label %if.then22, label %if.else84, !dbg !6985

if.then22:                                        ; preds = %lor.lhs.false20, %if.then
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6986, metadata !DIExpression()), !dbg !6988
  call void @llvm.dbg.declare(metadata i64* %size, metadata !6989, metadata !DIExpression()), !dbg !6990
  %35 = load i64, i64* %lena, align 8, !dbg !6991, !tbaa !2516
  %add = add i64 %35, 1, !dbg !6992
  %36 = load i64, i64* %lenb, align 8, !dbg !6993, !tbaa !2516
  %add23 = add i64 %add, %36, !dbg !6994
  %add24 = add i64 %add23, 1, !dbg !6995
  store i64 %add24, i64* %size, align 8, !dbg !6990, !tbaa !2516
  %37 = load i64, i64* %size, align 8, !dbg !6996, !tbaa !2516
  %cmp25 = icmp ule i64 %37, 4000, !dbg !6998
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !6999

if.then26:                                        ; preds = %if.then22
  %arraydecay = getelementptr inbounds [4000 x i8], [4000 x i8]* %stackbuf, i64 0, i64 0, !dbg !7000
  store i8* %arraydecay, i8** %ta, align 8, !dbg !7001, !tbaa !2355
  store i8* null, i8** %allocated, align 8, !dbg !7002, !tbaa !2355
  br label %if.end, !dbg !7003

if.else:                                          ; preds = %if.then22
  %38 = load i64, i64* %size, align 8, !dbg !7004, !tbaa !2516
  %call27 = call noalias i8* @xmalloc(i64 %38), !dbg !7005
  store i8* %call27, i8** %allocated, align 8, !dbg !7006, !tbaa !2355
  store i8* %call27, i8** %ta, align 8, !dbg !7007, !tbaa !2355
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then26
  %39 = load i8*, i8** %ta, align 8, !dbg !7008, !tbaa !2355
  %40 = load i64, i64* %lena, align 8, !dbg !7009, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !7010
  %add.ptr28 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !7011
  store i8* %add.ptr28, i8** %tb, align 8, !dbg !7012, !tbaa !2355
  store i64 0, i64* %i, align 8, !dbg !7013, !tbaa !2516
  store i64 0, i64* %tlena, align 8, !dbg !7015, !tbaa !2516
  br label %for.cond, !dbg !7016

for.cond:                                         ; preds = %for.inc, %if.end
  %41 = load i64, i64* %i, align 8, !dbg !7017, !tbaa !2516
  %42 = load i64, i64* %lena, align 8, !dbg !7019, !tbaa !2516
  %cmp29 = icmp ult i64 %41, %42, !dbg !7020
  br i1 %cmp29, label %for.body, label %for.end, !dbg !7021

for.body:                                         ; preds = %for.cond
  %43 = load i8*, i8** %ignore, align 8, !dbg !7022, !tbaa !2355
  %tobool30 = icmp ne i8* %43, null, !dbg !7022
  br i1 %tobool30, label %land.lhs.true, label %if.then34, !dbg !7024

land.lhs.true:                                    ; preds = %for.body
  %44 = load i8*, i8** %ignore, align 8, !dbg !7025, !tbaa !2355
  %45 = load i8*, i8** %texta, align 8, !dbg !7026, !tbaa !2355
  %46 = load i64, i64* %i, align 8, !dbg !7027, !tbaa !2516
  %arrayidx = getelementptr inbounds i8, i8* %45, i64 %46, !dbg !7026, !ctir !7
  %47 = load i8, i8* %arrayidx, align 1, !dbg !7026, !tbaa !2507
  %call31 = call zeroext i8 @to_uchar(i8 signext %47), !dbg !7028
  %idxprom = zext i8 %call31 to i64, !dbg !7025
  %arrayidx32 = getelementptr inbounds i8, i8* %44, i64 %idxprom, !dbg !7025, !ctir !100
  %48 = load i8, i8* %arrayidx32, align 1, !dbg !7025, !tbaa !2499
  %tobool33 = trunc i8 %48 to i1, !dbg !7025
  br i1 %tobool33, label %if.end48, label %if.then34, !dbg !7029

if.then34:                                        ; preds = %land.lhs.true, %for.body
  %49 = load i8*, i8** %translate, align 8, !dbg !7030, !tbaa !2355
  %tobool35 = icmp ne i8* %49, null, !dbg !7030
  br i1 %tobool35, label %cond.true36, label %cond.false41, !dbg !7030

cond.true36:                                      ; preds = %if.then34
  %50 = load i8*, i8** %translate, align 8, !dbg !7031, !tbaa !2355
  %51 = load i8*, i8** %texta, align 8, !dbg !7032, !tbaa !2355
  %52 = load i64, i64* %i, align 8, !dbg !7033, !tbaa !2516
  %arrayidx37 = getelementptr inbounds i8, i8* %51, i64 %52, !dbg !7032, !ctir !7
  %53 = load i8, i8* %arrayidx37, align 1, !dbg !7032, !tbaa !2507
  %call38 = call zeroext i8 @to_uchar(i8 signext %53), !dbg !7034
  %idxprom39 = zext i8 %call38 to i64, !dbg !7031
  %arrayidx40 = getelementptr inbounds i8, i8* %50, i64 %idxprom39, !dbg !7031, !ctir !87
  %54 = load i8, i8* %arrayidx40, align 1, !dbg !7031, !tbaa !2507
  %conv = sext i8 %54 to i32, !dbg !7031
  br label %cond.end44, !dbg !7030

cond.false41:                                     ; preds = %if.then34
  %55 = load i8*, i8** %texta, align 8, !dbg !7035, !tbaa !2355
  %56 = load i64, i64* %i, align 8, !dbg !7036, !tbaa !2516
  %arrayidx42 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !7035, !ctir !7
  %57 = load i8, i8* %arrayidx42, align 1, !dbg !7035, !tbaa !2507
  %conv43 = sext i8 %57 to i32, !dbg !7035
  br label %cond.end44, !dbg !7030

cond.end44:                                       ; preds = %cond.false41, %cond.true36
  %cond45 = phi i32 [ %conv, %cond.true36 ], [ %conv43, %cond.false41 ], !dbg !7030
  %conv46 = trunc i32 %cond45 to i8, !dbg !7037
  %58 = load i8*, i8** %ta, align 8, !dbg !7038, !tbaa !2355
  %59 = load i64, i64* %tlena, align 8, !dbg !7039, !tbaa !2516
  %inc = add i64 %59, 1, !dbg !7039
  store i64 %inc, i64* %tlena, align 8, !dbg !7039, !tbaa !2516
  %arrayidx47 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !7038, !ctir !7
  store i8 %conv46, i8* %arrayidx47, align 1, !dbg !7040, !tbaa !2507
  br label %if.end48, !dbg !7038

if.end48:                                         ; preds = %cond.end44, %land.lhs.true
  br label %for.inc, !dbg !7041

for.inc:                                          ; preds = %if.end48
  %60 = load i64, i64* %i, align 8, !dbg !7042, !tbaa !2516
  %inc49 = add i64 %60, 1, !dbg !7042
  store i64 %inc49, i64* %i, align 8, !dbg !7042, !tbaa !2516
  br label %for.cond, !dbg !7043, !llvm.loop !7044

for.end:                                          ; preds = %for.cond
  %61 = load i8*, i8** %ta, align 8, !dbg !7046, !tbaa !2355
  %62 = load i64, i64* %tlena, align 8, !dbg !7047, !tbaa !2516
  %arrayidx50 = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !7046, !ctir !7
  store i8 0, i8* %arrayidx50, align 1, !dbg !7048, !tbaa !2507
  store i64 0, i64* %i, align 8, !dbg !7049, !tbaa !2516
  store i64 0, i64* %tlenb, align 8, !dbg !7051, !tbaa !2516
  br label %for.cond51, !dbg !7052

for.cond51:                                       ; preds = %for.inc80, %for.end
  %63 = load i64, i64* %i, align 8, !dbg !7053, !tbaa !2516
  %64 = load i64, i64* %lenb, align 8, !dbg !7055, !tbaa !2516
  %cmp52 = icmp ult i64 %63, %64, !dbg !7056
  br i1 %cmp52, label %for.body54, label %for.end82, !dbg !7057

for.body54:                                       ; preds = %for.cond51
  %65 = load i8*, i8** %ignore, align 8, !dbg !7058, !tbaa !2355
  %tobool55 = icmp ne i8* %65, null, !dbg !7058
  br i1 %tobool55, label %land.lhs.true56, label %if.then63, !dbg !7060

land.lhs.true56:                                  ; preds = %for.body54
  %66 = load i8*, i8** %ignore, align 8, !dbg !7061, !tbaa !2355
  %67 = load i8*, i8** %textb, align 8, !dbg !7062, !tbaa !2355
  %68 = load i64, i64* %i, align 8, !dbg !7063, !tbaa !2516
  %arrayidx57 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !7062, !ctir !7
  %69 = load i8, i8* %arrayidx57, align 1, !dbg !7062, !tbaa !2507
  %call58 = call zeroext i8 @to_uchar(i8 signext %69), !dbg !7064
  %idxprom59 = zext i8 %call58 to i64, !dbg !7061
  %arrayidx60 = getelementptr inbounds i8, i8* %66, i64 %idxprom59, !dbg !7061, !ctir !100
  %70 = load i8, i8* %arrayidx60, align 1, !dbg !7061, !tbaa !2499
  %tobool61 = trunc i8 %70 to i1, !dbg !7061
  br i1 %tobool61, label %if.end79, label %if.then63, !dbg !7065

if.then63:                                        ; preds = %land.lhs.true56, %for.body54
  %71 = load i8*, i8** %translate, align 8, !dbg !7066, !tbaa !2355
  %tobool64 = icmp ne i8* %71, null, !dbg !7066
  br i1 %tobool64, label %cond.true65, label %cond.false71, !dbg !7066

cond.true65:                                      ; preds = %if.then63
  %72 = load i8*, i8** %translate, align 8, !dbg !7067, !tbaa !2355
  %73 = load i8*, i8** %textb, align 8, !dbg !7068, !tbaa !2355
  %74 = load i64, i64* %i, align 8, !dbg !7069, !tbaa !2516
  %arrayidx66 = getelementptr inbounds i8, i8* %73, i64 %74, !dbg !7068, !ctir !7
  %75 = load i8, i8* %arrayidx66, align 1, !dbg !7068, !tbaa !2507
  %call67 = call zeroext i8 @to_uchar(i8 signext %75), !dbg !7070
  %idxprom68 = zext i8 %call67 to i64, !dbg !7067
  %arrayidx69 = getelementptr inbounds i8, i8* %72, i64 %idxprom68, !dbg !7067, !ctir !87
  %76 = load i8, i8* %arrayidx69, align 1, !dbg !7067, !tbaa !2507
  %conv70 = sext i8 %76 to i32, !dbg !7067
  br label %cond.end74, !dbg !7066

cond.false71:                                     ; preds = %if.then63
  %77 = load i8*, i8** %textb, align 8, !dbg !7071, !tbaa !2355
  %78 = load i64, i64* %i, align 8, !dbg !7072, !tbaa !2516
  %arrayidx72 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !7071, !ctir !7
  %79 = load i8, i8* %arrayidx72, align 1, !dbg !7071, !tbaa !2507
  %conv73 = sext i8 %79 to i32, !dbg !7071
  br label %cond.end74, !dbg !7066

cond.end74:                                       ; preds = %cond.false71, %cond.true65
  %cond75 = phi i32 [ %conv70, %cond.true65 ], [ %conv73, %cond.false71 ], !dbg !7066
  %conv76 = trunc i32 %cond75 to i8, !dbg !7073
  %80 = load i8*, i8** %tb, align 8, !dbg !7074, !tbaa !2355
  %81 = load i64, i64* %tlenb, align 8, !dbg !7075, !tbaa !2516
  %inc77 = add i64 %81, 1, !dbg !7075
  store i64 %inc77, i64* %tlenb, align 8, !dbg !7075, !tbaa !2516
  %arrayidx78 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !7074, !ctir !7
  store i8 %conv76, i8* %arrayidx78, align 1, !dbg !7076, !tbaa !2507
  br label %if.end79, !dbg !7074

if.end79:                                         ; preds = %cond.end74, %land.lhs.true56
  br label %for.inc80, !dbg !7077

for.inc80:                                        ; preds = %if.end79
  %82 = load i64, i64* %i, align 8, !dbg !7078, !tbaa !2516
  %inc81 = add i64 %82, 1, !dbg !7078
  store i64 %inc81, i64* %i, align 8, !dbg !7078, !tbaa !2516
  br label %for.cond51, !dbg !7079, !llvm.loop !7080

for.end82:                                        ; preds = %for.cond51
  %83 = load i8*, i8** %tb, align 8, !dbg !7082, !tbaa !2355
  %84 = load i64, i64* %tlenb, align 8, !dbg !7083, !tbaa !2516
  %arrayidx83 = getelementptr inbounds i8, i8* %83, i64 %84, !dbg !7082, !ctir !7
  store i8 0, i8* %arrayidx83, align 1, !dbg !7084, !tbaa !2507
  br label %if.end89, !dbg !7085

if.else84:                                        ; preds = %lor.lhs.false20
  %85 = load i8*, i8** %texta, align 8, !dbg !7086, !tbaa !2355
  store i8* %85, i8** %ta, align 8, !dbg !7088, !tbaa !2355
  %86 = load i64, i64* %lena, align 8, !dbg !7089, !tbaa !2516
  store i64 %86, i64* %tlena, align 8, !dbg !7090, !tbaa !2516
  %87 = load i8*, i8** %ta, align 8, !dbg !7091, !tbaa !2355
  %88 = load i64, i64* %tlena, align 8, !dbg !7092, !tbaa !2516
  %arrayidx85 = getelementptr inbounds i8, i8* %87, i64 %88, !dbg !7091, !ctir !7
  %89 = load i8, i8* %arrayidx85, align 1, !dbg !7091, !tbaa !2507
  store i8 %89, i8* %enda, align 1, !dbg !7093, !tbaa !2507
  %90 = load i8*, i8** %ta, align 8, !dbg !7094, !tbaa !2355
  %91 = load i64, i64* %tlena, align 8, !dbg !7095, !tbaa !2516
  %arrayidx86 = getelementptr inbounds i8, i8* %90, i64 %91, !dbg !7094, !ctir !7
  store i8 0, i8* %arrayidx86, align 1, !dbg !7096, !tbaa !2507
  %92 = load i8*, i8** %textb, align 8, !dbg !7097, !tbaa !2355
  store i8* %92, i8** %tb, align 8, !dbg !7098, !tbaa !2355
  %93 = load i64, i64* %lenb, align 8, !dbg !7099, !tbaa !2516
  store i64 %93, i64* %tlenb, align 8, !dbg !7100, !tbaa !2516
  %94 = load i8*, i8** %tb, align 8, !dbg !7101, !tbaa !2355
  %95 = load i64, i64* %tlenb, align 8, !dbg !7102, !tbaa !2516
  %arrayidx87 = getelementptr inbounds i8, i8* %94, i64 %95, !dbg !7101, !ctir !7
  %96 = load i8, i8* %arrayidx87, align 1, !dbg !7101, !tbaa !2507
  store i8 %96, i8* %endb, align 1, !dbg !7103, !tbaa !2507
  %97 = load i8*, i8** %tb, align 8, !dbg !7104, !tbaa !2355
  %98 = load i64, i64* %tlenb, align 8, !dbg !7105, !tbaa !2516
  %arrayidx88 = getelementptr inbounds i8, i8* %97, i64 %98, !dbg !7104, !ctir !7
  store i8 0, i8* %arrayidx88, align 1, !dbg !7106, !tbaa !2507
  br label %if.end89

if.end89:                                         ; preds = %if.else84, %for.end82
  %99 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7107, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %99, i32 0, i32 8, !dbg !7109, !ctir !93
  %100 = load i8, i8* %numeric, align 2, !dbg !7109, !tbaa !3234
  %tobool90 = trunc i8 %100 to i1, !dbg !7109, !ctir !102
  br i1 %tobool90, label %if.then91, label %if.else93, !dbg !7110

if.then91:                                        ; preds = %if.end89
  %101 = load i8*, i8** %ta, align 8, !dbg !7111, !tbaa !2355
  %102 = load i8*, i8** %tb, align 8, !dbg !7112, !tbaa !2355
  %call92 = call i32 @numcompare(i8* %101, i8* %102), !dbg !7113
  store i32 %call92, i32* %diff, align 4, !dbg !7114, !tbaa !2342
  br label %if.end139, !dbg !7115

if.else93:                                        ; preds = %if.end89
  %103 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7116, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %103, i32 0, i32 10, !dbg !7118, !ctir !93
  %104 = load i8, i8* %general_numeric, align 4, !dbg !7118, !tbaa !3239
  %tobool94 = trunc i8 %104 to i1, !dbg !7118, !ctir !102
  br i1 %tobool94, label %if.then95, label %if.else97, !dbg !7119

if.then95:                                        ; preds = %if.else93
  %105 = load i8*, i8** %ta, align 8, !dbg !7120, !tbaa !2355
  %106 = load i8*, i8** %tb, align 8, !dbg !7121, !tbaa !2355
  %call96 = call i32 @general_numcompare(i8* %105, i8* %106), !dbg !7122
  store i32 %call96, i32* %diff, align 4, !dbg !7123, !tbaa !2342
  br label %if.end138, !dbg !7124

if.else97:                                        ; preds = %if.else93
  %107 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7125, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %107, i32 0, i32 11, !dbg !7127, !ctir !93
  %108 = load i8, i8* %human_numeric, align 1, !dbg !7127, !tbaa !3244
  %tobool98 = trunc i8 %108 to i1, !dbg !7127, !ctir !102
  br i1 %tobool98, label %if.then99, label %if.else101, !dbg !7128

if.then99:                                        ; preds = %if.else97
  %109 = load i8*, i8** %ta, align 8, !dbg !7129, !tbaa !2355
  %110 = load i8*, i8** %tb, align 8, !dbg !7130, !tbaa !2355
  %call100 = call i32 @human_numcompare(i8* %109, i8* %110), !dbg !7131
  store i32 %call100, i32* %diff, align 4, !dbg !7132, !tbaa !2342
  br label %if.end137, !dbg !7133

if.else101:                                       ; preds = %if.else97
  %111 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7134, !tbaa !2355
  %month102 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %111, i32 0, i32 12, !dbg !7136, !ctir !93
  %112 = load i8, i8* %month102, align 2, !dbg !7136, !tbaa !3229
  %tobool103 = trunc i8 %112 to i1, !dbg !7136, !ctir !102
  br i1 %tobool103, label %if.then104, label %if.else107, !dbg !7137

if.then104:                                       ; preds = %if.else101
  %113 = load i8*, i8** %ta, align 8, !dbg !7138, !tbaa !2355
  %call105 = call i32 @getmonth(i8* %113, i8** null), !dbg !7139
  %114 = load i8*, i8** %tb, align 8, !dbg !7140, !tbaa !2355
  %call106 = call i32 @getmonth(i8* %114, i8** null), !dbg !7141
  %sub = sub nsw i32 %call105, %call106, !dbg !7142
  store i32 %sub, i32* %diff, align 4, !dbg !7143, !tbaa !2342
  br label %if.end136, !dbg !7144

if.else107:                                       ; preds = %if.else101
  %115 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7145, !tbaa !2355
  %random108 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %115, i32 0, i32 9, !dbg !7147, !ctir !93
  %116 = load i8, i8* %random108, align 1, !dbg !7147, !tbaa !3254
  %tobool109 = trunc i8 %116 to i1, !dbg !7147, !ctir !102
  br i1 %tobool109, label %if.then110, label %if.else112, !dbg !7148

if.then110:                                       ; preds = %if.else107
  %117 = load i8*, i8** %ta, align 8, !dbg !7149, !tbaa !2355
  %118 = load i64, i64* %tlena, align 8, !dbg !7150, !tbaa !2516
  %119 = load i8*, i8** %tb, align 8, !dbg !7151, !tbaa !2355
  %120 = load i64, i64* %tlenb, align 8, !dbg !7152, !tbaa !2516
  %call111 = call i32 @compare_random(i8* %117, i64 %118, i8* %119, i64 %120), !dbg !7153
  store i32 %call111, i32* %diff, align 4, !dbg !7154, !tbaa !2342
  br label %if.end135, !dbg !7155

if.else112:                                       ; preds = %if.else107
  %121 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7156, !tbaa !2355
  %version113 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %121, i32 0, i32 14, !dbg !7158, !ctir !93
  %122 = load i8, i8* %version113, align 8, !dbg !7158, !tbaa !3249
  %tobool114 = trunc i8 %122 to i1, !dbg !7158, !ctir !102
  br i1 %tobool114, label %if.then115, label %if.else117, !dbg !7159

if.then115:                                       ; preds = %if.else112
  %123 = load i8*, i8** %ta, align 8, !dbg !7160, !tbaa !2355
  %124 = load i8*, i8** %tb, align 8, !dbg !7161, !tbaa !2355
  %call116 = call i32 @filevercmp(i8* %123, i8* %124) #14, !dbg !7162
  store i32 %call116, i32* %diff, align 4, !dbg !7163, !tbaa !2342
  br label %if.end134, !dbg !7164

if.else117:                                       ; preds = %if.else112
  %125 = load i64, i64* %tlena, align 8, !dbg !7165, !tbaa !2516
  %cmp118 = icmp eq i64 %125, 0, !dbg !7168
  br i1 %cmp118, label %if.then120, label %if.else124, !dbg !7169

if.then120:                                       ; preds = %if.else117
  %126 = load i64, i64* %tlenb, align 8, !dbg !7170, !tbaa !2516
  %cmp121 = icmp ne i64 %126, 0, !dbg !7170
  %conv122 = zext i1 %cmp121 to i32, !dbg !7170
  %sub123 = sub nsw i32 0, %conv122, !dbg !7171
  store i32 %sub123, i32* %diff, align 4, !dbg !7172, !tbaa !2342
  br label %if.end133, !dbg !7173

if.else124:                                       ; preds = %if.else117
  %127 = load i64, i64* %tlenb, align 8, !dbg !7174, !tbaa !2516
  %cmp125 = icmp eq i64 %127, 0, !dbg !7176
  br i1 %cmp125, label %if.then127, label %if.else128, !dbg !7177

if.then127:                                       ; preds = %if.else124
  store i32 1, i32* %diff, align 4, !dbg !7178, !tbaa !2342
  br label %if.end132, !dbg !7179

if.else128:                                       ; preds = %if.else124
  %128 = load i8*, i8** %ta, align 8, !dbg !7180, !tbaa !2355
  %129 = load i64, i64* %tlena, align 8, !dbg !7181, !tbaa !2516
  %add129 = add i64 %129, 1, !dbg !7182
  %130 = load i8*, i8** %tb, align 8, !dbg !7183, !tbaa !2355
  %131 = load i64, i64* %tlenb, align 8, !dbg !7184, !tbaa !2516
  %add130 = add i64 %131, 1, !dbg !7185
  %call131 = call i32 @xmemcoll0(i8* %128, i64 %add129, i8* %130, i64 %add130), !dbg !7186
  store i32 %call131, i32* %diff, align 4, !dbg !7187, !tbaa !2342
  br label %if.end132

if.end132:                                        ; preds = %if.else128, %if.then127
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then120
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then115
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then110
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then104
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then99
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then95
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then91
  %132 = load i8*, i8** %ignore, align 8, !dbg !7188, !tbaa !2355
  %tobool140 = icmp ne i8* %132, null, !dbg !7188
  br i1 %tobool140, label %if.then143, label %lor.lhs.false141, !dbg !7190

lor.lhs.false141:                                 ; preds = %if.end139
  %133 = load i8*, i8** %translate, align 8, !dbg !7191, !tbaa !2355
  %tobool142 = icmp ne i8* %133, null, !dbg !7191
  br i1 %tobool142, label %if.then143, label %if.else144, !dbg !7192

if.then143:                                       ; preds = %lor.lhs.false141, %if.end139
  %134 = load i8*, i8** %allocated, align 8, !dbg !7193, !tbaa !2355
  call void @free(i8* %134) #12, !dbg !7194
  br label %if.end147, !dbg !7194

if.else144:                                       ; preds = %lor.lhs.false141
  %135 = load i8, i8* %enda, align 1, !dbg !7195, !tbaa !2507
  %136 = load i8*, i8** %ta, align 8, !dbg !7197, !tbaa !2355
  %137 = load i64, i64* %tlena, align 8, !dbg !7198, !tbaa !2516
  %arrayidx145 = getelementptr inbounds i8, i8* %136, i64 %137, !dbg !7197, !ctir !7
  store i8 %135, i8* %arrayidx145, align 1, !dbg !7199, !tbaa !2507
  %138 = load i8, i8* %endb, align 1, !dbg !7200, !tbaa !2507
  %139 = load i8*, i8** %tb, align 8, !dbg !7201, !tbaa !2355
  %140 = load i64, i64* %tlenb, align 8, !dbg !7202, !tbaa !2516
  %arrayidx146 = getelementptr inbounds i8, i8* %139, i64 %140, !dbg !7201, !ctir !7
  store i8 %138, i8* %arrayidx146, align 1, !dbg !7203, !tbaa !2507
  br label %if.end147

if.end147:                                        ; preds = %if.else144, %if.then143
  br label %if.end323, !dbg !7204

if.else148:                                       ; preds = %lor.lhs.false17
  %141 = load i8*, i8** %ignore, align 8, !dbg !7205, !tbaa !2355
  %tobool149 = icmp ne i8* %141, null, !dbg !7205
  br i1 %tobool149, label %if.then150, label %if.else261, !dbg !7207

if.then150:                                       ; preds = %if.else148
  %142 = load i8*, i8** %translate, align 8, !dbg !7208, !tbaa !2355
  %tobool151 = icmp ne i8* %142, null, !dbg !7208
  br i1 %tobool151, label %if.then152, label %if.else206, !dbg !7211

if.then152:                                       ; preds = %if.then150
  br label %do.body, !dbg !7212

do.body:                                          ; preds = %if.then152
  br label %while.body154, !dbg !7213

while.body154:                                    ; preds = %do.body, %if.end197
  br label %while.cond155, !dbg !7215

while.cond155:                                    ; preds = %while.body163, %while.body154
  %143 = load i8*, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  %144 = load i8*, i8** %lima, align 8, !dbg !7215, !tbaa !2355
  %cmp156 = icmp ult i8* %143, %144, !dbg !7215
  br i1 %cmp156, label %land.rhs, label %land.end, !dbg !7215

land.rhs:                                         ; preds = %while.cond155
  %145 = load i8*, i8** %ignore, align 8, !dbg !7215, !tbaa !2355
  %146 = load i8*, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  %147 = load i8, i8* %146, align 1, !dbg !7215, !tbaa !2507, !ctir !8
  %call158 = call zeroext i8 @to_uchar(i8 signext %147), !dbg !7215
  %idxprom159 = zext i8 %call158 to i64, !dbg !7215
  %arrayidx160 = getelementptr inbounds i8, i8* %145, i64 %idxprom159, !dbg !7215, !ctir !100
  %148 = load i8, i8* %arrayidx160, align 1, !dbg !7215, !tbaa !2499
  %tobool161 = trunc i8 %148 to i1, !dbg !7215
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond155
  %149 = phi i1 [ false, %while.cond155 ], [ %tobool161, %land.rhs ], !dbg !7217
  br i1 %149, label %while.body163, label %while.end, !dbg !7215

while.body163:                                    ; preds = %land.end
  %150 = load i8*, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %150, i32 1, !dbg !7215
  store i8* %incdec.ptr, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  br label %while.cond155, !dbg !7215, !llvm.loop !7218

while.end:                                        ; preds = %land.end
  br label %while.cond164, !dbg !7215

while.cond164:                                    ; preds = %while.body174, %while.end
  %151 = load i8*, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  %152 = load i8*, i8** %limb, align 8, !dbg !7215, !tbaa !2355
  %cmp165 = icmp ult i8* %151, %152, !dbg !7215
  br i1 %cmp165, label %land.rhs167, label %land.end173, !dbg !7215

land.rhs167:                                      ; preds = %while.cond164
  %153 = load i8*, i8** %ignore, align 8, !dbg !7215, !tbaa !2355
  %154 = load i8*, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  %155 = load i8, i8* %154, align 1, !dbg !7215, !tbaa !2507, !ctir !8
  %call168 = call zeroext i8 @to_uchar(i8 signext %155), !dbg !7215
  %idxprom169 = zext i8 %call168 to i64, !dbg !7215
  %arrayidx170 = getelementptr inbounds i8, i8* %153, i64 %idxprom169, !dbg !7215, !ctir !100
  %156 = load i8, i8* %arrayidx170, align 1, !dbg !7215, !tbaa !2499
  %tobool171 = trunc i8 %156 to i1, !dbg !7215
  br label %land.end173

land.end173:                                      ; preds = %land.rhs167, %while.cond164
  %157 = phi i1 [ false, %while.cond164 ], [ %tobool171, %land.rhs167 ], !dbg !7217
  br i1 %157, label %while.body174, label %while.end176, !dbg !7215

while.body174:                                    ; preds = %land.end173
  %158 = load i8*, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  %incdec.ptr175 = getelementptr inbounds i8, i8* %158, i32 1, !dbg !7215
  store i8* %incdec.ptr175, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  br label %while.cond164, !dbg !7215, !llvm.loop !7219

while.end176:                                     ; preds = %land.end173
  %159 = load i8*, i8** %texta, align 8, !dbg !7220, !tbaa !2355
  %160 = load i8*, i8** %lima, align 8, !dbg !7220, !tbaa !2355
  %cmp177 = icmp ult i8* %159, %160, !dbg !7220
  br i1 %cmp177, label %land.lhs.true179, label %if.then182, !dbg !7220

land.lhs.true179:                                 ; preds = %while.end176
  %161 = load i8*, i8** %textb, align 8, !dbg !7220, !tbaa !2355
  %162 = load i8*, i8** %limb, align 8, !dbg !7220, !tbaa !2355
  %cmp180 = icmp ult i8* %161, %162, !dbg !7220
  br i1 %cmp180, label %if.end183, label %if.then182, !dbg !7215

if.then182:                                       ; preds = %land.lhs.true179, %while.end176
  br label %while.end200, !dbg !7220

if.end183:                                        ; preds = %land.lhs.true179
  %163 = load i8*, i8** %translate, align 8, !dbg !7215, !tbaa !2355
  %164 = load i8*, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  %165 = load i8, i8* %164, align 1, !dbg !7215, !tbaa !2507, !ctir !8
  %call184 = call zeroext i8 @to_uchar(i8 signext %165), !dbg !7215
  %idxprom185 = zext i8 %call184 to i64, !dbg !7215
  %arrayidx186 = getelementptr inbounds i8, i8* %163, i64 %idxprom185, !dbg !7215, !ctir !87
  %166 = load i8, i8* %arrayidx186, align 1, !dbg !7215, !tbaa !2507
  %call187 = call zeroext i8 @to_uchar(i8 signext %166), !dbg !7215
  %conv188 = zext i8 %call187 to i32, !dbg !7215
  %167 = load i8*, i8** %translate, align 8, !dbg !7215, !tbaa !2355
  %168 = load i8*, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  %169 = load i8, i8* %168, align 1, !dbg !7215, !tbaa !2507, !ctir !8
  %call189 = call zeroext i8 @to_uchar(i8 signext %169), !dbg !7215
  %idxprom190 = zext i8 %call189 to i64, !dbg !7215
  %arrayidx191 = getelementptr inbounds i8, i8* %167, i64 %idxprom190, !dbg !7215, !ctir !87
  %170 = load i8, i8* %arrayidx191, align 1, !dbg !7215, !tbaa !2507
  %call192 = call zeroext i8 @to_uchar(i8 signext %170), !dbg !7215
  %conv193 = zext i8 %call192 to i32, !dbg !7215
  %sub194 = sub nsw i32 %conv188, %conv193, !dbg !7215
  store i32 %sub194, i32* %diff, align 4, !dbg !7215, !tbaa !2342
  %171 = load i32, i32* %diff, align 4, !dbg !7222, !tbaa !2342
  %tobool195 = icmp ne i32 %171, 0, !dbg !7222
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !7215

if.then196:                                       ; preds = %if.end183
  br label %not_equal, !dbg !7222

if.end197:                                        ; preds = %if.end183
  %172 = load i8*, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  %incdec.ptr198 = getelementptr inbounds i8, i8* %172, i32 1, !dbg !7215
  store i8* %incdec.ptr198, i8** %texta, align 8, !dbg !7215, !tbaa !2355
  %173 = load i8*, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  %incdec.ptr199 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !7215
  store i8* %incdec.ptr199, i8** %textb, align 8, !dbg !7215, !tbaa !2355
  br label %while.body154, !dbg !7213, !llvm.loop !7224

while.end200:                                     ; preds = %if.then182
  %174 = load i8*, i8** %texta, align 8, !dbg !7213, !tbaa !2355
  %175 = load i8*, i8** %lima, align 8, !dbg !7213, !tbaa !2355
  %cmp201 = icmp ult i8* %174, %175, !dbg !7213
  %conv202 = zext i1 %cmp201 to i32, !dbg !7213
  %176 = load i8*, i8** %textb, align 8, !dbg !7213, !tbaa !2355
  %177 = load i8*, i8** %limb, align 8, !dbg !7213, !tbaa !2355
  %cmp203 = icmp ult i8* %176, %177, !dbg !7213
  %conv204 = zext i1 %cmp203 to i32, !dbg !7213
  %sub205 = sub nsw i32 %conv202, %conv204, !dbg !7213
  store i32 %sub205, i32* %diff, align 4, !dbg !7213, !tbaa !2342
  br label %do.end, !dbg !7213

do.end:                                           ; preds = %while.end200
  br label %if.end260, !dbg !7213

if.else206:                                       ; preds = %if.then150
  br label %do.body207, !dbg !7225

do.body207:                                       ; preds = %if.else206
  br label %while.body209, !dbg !7226

while.body209:                                    ; preds = %do.body207, %if.end250
  br label %while.cond210, !dbg !7228

while.cond210:                                    ; preds = %while.body220, %while.body209
  %178 = load i8*, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  %179 = load i8*, i8** %lima, align 8, !dbg !7228, !tbaa !2355
  %cmp211 = icmp ult i8* %178, %179, !dbg !7228
  br i1 %cmp211, label %land.rhs213, label %land.end219, !dbg !7228

land.rhs213:                                      ; preds = %while.cond210
  %180 = load i8*, i8** %ignore, align 8, !dbg !7228, !tbaa !2355
  %181 = load i8*, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  %182 = load i8, i8* %181, align 1, !dbg !7228, !tbaa !2507, !ctir !8
  %call214 = call zeroext i8 @to_uchar(i8 signext %182), !dbg !7228
  %idxprom215 = zext i8 %call214 to i64, !dbg !7228
  %arrayidx216 = getelementptr inbounds i8, i8* %180, i64 %idxprom215, !dbg !7228, !ctir !100
  %183 = load i8, i8* %arrayidx216, align 1, !dbg !7228, !tbaa !2499
  %tobool217 = trunc i8 %183 to i1, !dbg !7228
  br label %land.end219

land.end219:                                      ; preds = %land.rhs213, %while.cond210
  %184 = phi i1 [ false, %while.cond210 ], [ %tobool217, %land.rhs213 ], !dbg !7230
  br i1 %184, label %while.body220, label %while.end222, !dbg !7228

while.body220:                                    ; preds = %land.end219
  %185 = load i8*, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  %incdec.ptr221 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !7228
  store i8* %incdec.ptr221, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  br label %while.cond210, !dbg !7228, !llvm.loop !7231

while.end222:                                     ; preds = %land.end219
  br label %while.cond223, !dbg !7228

while.cond223:                                    ; preds = %while.body233, %while.end222
  %186 = load i8*, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  %187 = load i8*, i8** %limb, align 8, !dbg !7228, !tbaa !2355
  %cmp224 = icmp ult i8* %186, %187, !dbg !7228
  br i1 %cmp224, label %land.rhs226, label %land.end232, !dbg !7228

land.rhs226:                                      ; preds = %while.cond223
  %188 = load i8*, i8** %ignore, align 8, !dbg !7228, !tbaa !2355
  %189 = load i8*, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  %190 = load i8, i8* %189, align 1, !dbg !7228, !tbaa !2507, !ctir !8
  %call227 = call zeroext i8 @to_uchar(i8 signext %190), !dbg !7228
  %idxprom228 = zext i8 %call227 to i64, !dbg !7228
  %arrayidx229 = getelementptr inbounds i8, i8* %188, i64 %idxprom228, !dbg !7228, !ctir !100
  %191 = load i8, i8* %arrayidx229, align 1, !dbg !7228, !tbaa !2499
  %tobool230 = trunc i8 %191 to i1, !dbg !7228
  br label %land.end232

land.end232:                                      ; preds = %land.rhs226, %while.cond223
  %192 = phi i1 [ false, %while.cond223 ], [ %tobool230, %land.rhs226 ], !dbg !7230
  br i1 %192, label %while.body233, label %while.end235, !dbg !7228

while.body233:                                    ; preds = %land.end232
  %193 = load i8*, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  %incdec.ptr234 = getelementptr inbounds i8, i8* %193, i32 1, !dbg !7228
  store i8* %incdec.ptr234, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  br label %while.cond223, !dbg !7228, !llvm.loop !7232

while.end235:                                     ; preds = %land.end232
  %194 = load i8*, i8** %texta, align 8, !dbg !7233, !tbaa !2355
  %195 = load i8*, i8** %lima, align 8, !dbg !7233, !tbaa !2355
  %cmp236 = icmp ult i8* %194, %195, !dbg !7233
  br i1 %cmp236, label %land.lhs.true238, label %if.then241, !dbg !7233

land.lhs.true238:                                 ; preds = %while.end235
  %196 = load i8*, i8** %textb, align 8, !dbg !7233, !tbaa !2355
  %197 = load i8*, i8** %limb, align 8, !dbg !7233, !tbaa !2355
  %cmp239 = icmp ult i8* %196, %197, !dbg !7233
  br i1 %cmp239, label %if.end242, label %if.then241, !dbg !7228

if.then241:                                       ; preds = %land.lhs.true238, %while.end235
  br label %while.end253, !dbg !7233

if.end242:                                        ; preds = %land.lhs.true238
  %198 = load i8*, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  %199 = load i8, i8* %198, align 1, !dbg !7228, !tbaa !2507, !ctir !8
  %call243 = call zeroext i8 @to_uchar(i8 signext %199), !dbg !7228
  %conv244 = zext i8 %call243 to i32, !dbg !7228
  %200 = load i8*, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  %201 = load i8, i8* %200, align 1, !dbg !7228, !tbaa !2507, !ctir !8
  %call245 = call zeroext i8 @to_uchar(i8 signext %201), !dbg !7228
  %conv246 = zext i8 %call245 to i32, !dbg !7228
  %sub247 = sub nsw i32 %conv244, %conv246, !dbg !7228
  store i32 %sub247, i32* %diff, align 4, !dbg !7228, !tbaa !2342
  %202 = load i32, i32* %diff, align 4, !dbg !7235, !tbaa !2342
  %tobool248 = icmp ne i32 %202, 0, !dbg !7235
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !7228

if.then249:                                       ; preds = %if.end242
  br label %not_equal, !dbg !7235

if.end250:                                        ; preds = %if.end242
  %203 = load i8*, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  %incdec.ptr251 = getelementptr inbounds i8, i8* %203, i32 1, !dbg !7228
  store i8* %incdec.ptr251, i8** %texta, align 8, !dbg !7228, !tbaa !2355
  %204 = load i8*, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  %incdec.ptr252 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !7228
  store i8* %incdec.ptr252, i8** %textb, align 8, !dbg !7228, !tbaa !2355
  br label %while.body209, !dbg !7226, !llvm.loop !7237

while.end253:                                     ; preds = %if.then241
  %205 = load i8*, i8** %texta, align 8, !dbg !7226, !tbaa !2355
  %206 = load i8*, i8** %lima, align 8, !dbg !7226, !tbaa !2355
  %cmp254 = icmp ult i8* %205, %206, !dbg !7226
  %conv255 = zext i1 %cmp254 to i32, !dbg !7226
  %207 = load i8*, i8** %textb, align 8, !dbg !7226, !tbaa !2355
  %208 = load i8*, i8** %limb, align 8, !dbg !7226, !tbaa !2355
  %cmp256 = icmp ult i8* %207, %208, !dbg !7226
  %conv257 = zext i1 %cmp256 to i32, !dbg !7226
  %sub258 = sub nsw i32 %conv255, %conv257, !dbg !7226
  store i32 %sub258, i32* %diff, align 4, !dbg !7226, !tbaa !2342
  br label %do.end259, !dbg !7226

do.end259:                                        ; preds = %while.end253
  br label %if.end260

if.end260:                                        ; preds = %do.end259, %do.end
  br label %if.end322, !dbg !7238

if.else261:                                       ; preds = %if.else148
  %209 = load i64, i64* %lena, align 8, !dbg !7239, !tbaa !2516
  %cmp262 = icmp eq i64 %209, 0, !dbg !7241
  br i1 %cmp262, label %if.then264, label %if.else268, !dbg !7242

if.then264:                                       ; preds = %if.else261
  %210 = load i64, i64* %lenb, align 8, !dbg !7243, !tbaa !2516
  %cmp265 = icmp ne i64 %210, 0, !dbg !7243
  %conv266 = zext i1 %cmp265 to i32, !dbg !7243
  %sub267 = sub nsw i32 0, %conv266, !dbg !7244
  store i32 %sub267, i32* %diff, align 4, !dbg !7245, !tbaa !2342
  br label %if.end321, !dbg !7246

if.else268:                                       ; preds = %if.else261
  %211 = load i64, i64* %lenb, align 8, !dbg !7247, !tbaa !2516
  %cmp269 = icmp eq i64 %211, 0, !dbg !7249
  br i1 %cmp269, label %if.then271, label %if.else272, !dbg !7250

if.then271:                                       ; preds = %if.else268
  br label %greater, !dbg !7251

if.else272:                                       ; preds = %if.else268
  %212 = load i8*, i8** %translate, align 8, !dbg !7252, !tbaa !2355
  %tobool273 = icmp ne i8* %212, null, !dbg !7252
  br i1 %tobool273, label %if.then274, label %if.else300, !dbg !7255

if.then274:                                       ; preds = %if.else272
  br label %while.cond275, !dbg !7256

while.cond275:                                    ; preds = %if.end298, %if.then274
  %213 = load i8*, i8** %texta, align 8, !dbg !7258, !tbaa !2355
  %214 = load i8*, i8** %lima, align 8, !dbg !7259, !tbaa !2355
  %cmp276 = icmp ult i8* %213, %214, !dbg !7260
  br i1 %cmp276, label %land.rhs278, label %land.end281, !dbg !7261

land.rhs278:                                      ; preds = %while.cond275
  %215 = load i8*, i8** %textb, align 8, !dbg !7262, !tbaa !2355
  %216 = load i8*, i8** %limb, align 8, !dbg !7263, !tbaa !2355
  %cmp279 = icmp ult i8* %215, %216, !dbg !7264
  br label %land.end281

land.end281:                                      ; preds = %land.rhs278, %while.cond275
  %217 = phi i1 [ false, %while.cond275 ], [ %cmp279, %land.rhs278 ], !dbg !7265
  br i1 %217, label %while.body282, label %while.end299, !dbg !7256

while.body282:                                    ; preds = %land.end281
  %218 = load i8*, i8** %translate, align 8, !dbg !7266, !tbaa !2355
  %219 = load i8*, i8** %texta, align 8, !dbg !7268, !tbaa !2355
  %incdec.ptr283 = getelementptr inbounds i8, i8* %219, i32 1, !dbg !7268
  store i8* %incdec.ptr283, i8** %texta, align 8, !dbg !7268, !tbaa !2355
  %220 = load i8, i8* %219, align 1, !dbg !7269, !tbaa !2507, !ctir !8
  %call284 = call zeroext i8 @to_uchar(i8 signext %220), !dbg !7270
  %idxprom285 = zext i8 %call284 to i64, !dbg !7266
  %arrayidx286 = getelementptr inbounds i8, i8* %218, i64 %idxprom285, !dbg !7266, !ctir !87
  %221 = load i8, i8* %arrayidx286, align 1, !dbg !7266, !tbaa !2507
  %call287 = call zeroext i8 @to_uchar(i8 signext %221), !dbg !7271
  %conv288 = zext i8 %call287 to i32, !dbg !7271
  %222 = load i8*, i8** %translate, align 8, !dbg !7272, !tbaa !2355
  %223 = load i8*, i8** %textb, align 8, !dbg !7273, !tbaa !2355
  %incdec.ptr289 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !7273
  store i8* %incdec.ptr289, i8** %textb, align 8, !dbg !7273, !tbaa !2355
  %224 = load i8, i8* %223, align 1, !dbg !7274, !tbaa !2507, !ctir !8
  %call290 = call zeroext i8 @to_uchar(i8 signext %224), !dbg !7275
  %idxprom291 = zext i8 %call290 to i64, !dbg !7272
  %arrayidx292 = getelementptr inbounds i8, i8* %222, i64 %idxprom291, !dbg !7272, !ctir !87
  %225 = load i8, i8* %arrayidx292, align 1, !dbg !7272, !tbaa !2507
  %call293 = call zeroext i8 @to_uchar(i8 signext %225), !dbg !7276
  %conv294 = zext i8 %call293 to i32, !dbg !7276
  %sub295 = sub nsw i32 %conv288, %conv294, !dbg !7277
  store i32 %sub295, i32* %diff, align 4, !dbg !7278, !tbaa !2342
  %226 = load i32, i32* %diff, align 4, !dbg !7279, !tbaa !2342
  %tobool296 = icmp ne i32 %226, 0, !dbg !7279
  br i1 %tobool296, label %if.then297, label %if.end298, !dbg !7281

if.then297:                                       ; preds = %while.body282
  br label %not_equal, !dbg !7282

if.end298:                                        ; preds = %while.body282
  br label %while.cond275, !dbg !7256, !llvm.loop !7283

while.end299:                                     ; preds = %land.end281
  br label %if.end311, !dbg !7285

if.else300:                                       ; preds = %if.else272
  %227 = load i8*, i8** %texta, align 8, !dbg !7286, !tbaa !2355
  %228 = load i8*, i8** %textb, align 8, !dbg !7288, !tbaa !2355
  %229 = load i64, i64* %lena, align 8, !dbg !7289, !tbaa !2516
  %230 = load i64, i64* %lenb, align 8, !dbg !7289, !tbaa !2516
  %cmp301 = icmp ult i64 %229, %230, !dbg !7289
  br i1 %cmp301, label %cond.true303, label %cond.false304, !dbg !7289

cond.true303:                                     ; preds = %if.else300
  %231 = load i64, i64* %lena, align 8, !dbg !7289, !tbaa !2516
  br label %cond.end305, !dbg !7289

cond.false304:                                    ; preds = %if.else300
  %232 = load i64, i64* %lenb, align 8, !dbg !7289, !tbaa !2516
  br label %cond.end305, !dbg !7289

cond.end305:                                      ; preds = %cond.false304, %cond.true303
  %cond306 = phi i64 [ %231, %cond.true303 ], [ %232, %cond.false304 ], !dbg !7289
  %call307 = call i32 @memcmp(i8* %227, i8* %228, i64 %cond306) #14, !dbg !7290
  store i32 %call307, i32* %diff, align 4, !dbg !7291, !tbaa !2342
  %233 = load i32, i32* %diff, align 4, !dbg !7292, !tbaa !2342
  %tobool308 = icmp ne i32 %233, 0, !dbg !7292
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !7294

if.then309:                                       ; preds = %cond.end305
  br label %not_equal, !dbg !7295

if.end310:                                        ; preds = %cond.end305
  br label %if.end311

if.end311:                                        ; preds = %if.end310, %while.end299
  %234 = load i64, i64* %lena, align 8, !dbg !7296, !tbaa !2516
  %235 = load i64, i64* %lenb, align 8, !dbg !7297, !tbaa !2516
  %cmp312 = icmp ult i64 %234, %235, !dbg !7298
  br i1 %cmp312, label %cond.true314, label %cond.false315, !dbg !7296

cond.true314:                                     ; preds = %if.end311
  br label %cond.end318, !dbg !7296

cond.false315:                                    ; preds = %if.end311
  %236 = load i64, i64* %lena, align 8, !dbg !7299, !tbaa !2516
  %237 = load i64, i64* %lenb, align 8, !dbg !7300, !tbaa !2516
  %cmp316 = icmp ne i64 %236, %237, !dbg !7301
  %conv317 = zext i1 %cmp316 to i32, !dbg !7301
  br label %cond.end318, !dbg !7296

cond.end318:                                      ; preds = %cond.false315, %cond.true314
  %cond319 = phi i32 [ -1, %cond.true314 ], [ %conv317, %cond.false315 ], !dbg !7296
  store i32 %cond319, i32* %diff, align 4, !dbg !7302, !tbaa !2342
  br label %if.end320

if.end320:                                        ; preds = %cond.end318
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then264
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.end260
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.end147
  %238 = load i32, i32* %diff, align 4, !dbg !7303, !tbaa !2342
  %tobool324 = icmp ne i32 %238, 0, !dbg !7303
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !7305

if.then325:                                       ; preds = %if.end323
  br label %not_equal, !dbg !7306

if.end326:                                        ; preds = %if.end323
  %239 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7307, !tbaa !2355
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %239, i32 0, i32 16, !dbg !7308, !ctir !93
  %240 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !7308, !tbaa !3269, !ctir !92
  store %struct.keyfield* %240, %struct.keyfield** %key, align 8, !dbg !7309, !tbaa !2355
  %241 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7310, !tbaa !2355
  %tobool327 = icmp ne %struct.keyfield* %241, null, !dbg !7310
  br i1 %tobool327, label %if.end329, label %if.then328, !dbg !7312

if.then328:                                       ; preds = %if.end326
  br label %while.end381, !dbg !7313

if.end329:                                        ; preds = %if.end326
  %242 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7314, !tbaa !2355
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %242, i32 0, i32 2, !dbg !7316, !ctir !93
  %243 = load i64, i64* %eword, align 8, !dbg !7316, !tbaa !2826, !ctir !52
  %cmp330 = icmp ne i64 %243, -1, !dbg !7317
  br i1 %cmp330, label %if.then332, label %if.else335, !dbg !7318

if.then332:                                       ; preds = %if.end329
  %244 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7319, !tbaa !2355
  %245 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7320, !tbaa !2355
  %call333 = call i8* @limfield(%struct.line* %244, %struct.keyfield* %245), !dbg !7321
  store i8* %call333, i8** %lima, align 8, !dbg !7322, !tbaa !2355
  %246 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7323, !tbaa !2355
  %247 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7324, !tbaa !2355
  %call334 = call i8* @limfield(%struct.line* %246, %struct.keyfield* %247), !dbg !7325
  store i8* %call334, i8** %limb, align 8, !dbg !7326, !tbaa !2355
  br label %if.end342, !dbg !7327

if.else335:                                       ; preds = %if.end329
  %248 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7328, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %248, i32 0, i32 0, !dbg !7329, !ctir !441
  %249 = load i8*, i8** %text, align 8, !dbg !7329, !tbaa !4554, !ctir !7
  %250 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7330, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %250, i32 0, i32 1, !dbg !7331, !ctir !441
  %251 = load i64, i64* %length, align 8, !dbg !7331, !tbaa !4639, !ctir !52
  %add.ptr336 = getelementptr inbounds i8, i8* %249, i64 %251, !dbg !7332
  %add.ptr337 = getelementptr inbounds i8, i8* %add.ptr336, i64 -1, !dbg !7333
  store i8* %add.ptr337, i8** %lima, align 8, !dbg !7334, !tbaa !2355
  %252 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7335, !tbaa !2355
  %text338 = getelementptr inbounds %struct.line, %struct.line* %252, i32 0, i32 0, !dbg !7336, !ctir !441
  %253 = load i8*, i8** %text338, align 8, !dbg !7336, !tbaa !4554, !ctir !7
  %254 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7337, !tbaa !2355
  %length339 = getelementptr inbounds %struct.line, %struct.line* %254, i32 0, i32 1, !dbg !7338, !ctir !441
  %255 = load i64, i64* %length339, align 8, !dbg !7338, !tbaa !4639, !ctir !52
  %add.ptr340 = getelementptr inbounds i8, i8* %253, i64 %255, !dbg !7339
  %add.ptr341 = getelementptr inbounds i8, i8* %add.ptr340, i64 -1, !dbg !7340
  store i8* %add.ptr341, i8** %limb, align 8, !dbg !7341, !tbaa !2355
  br label %if.end342

if.end342:                                        ; preds = %if.else335, %if.then332
  %256 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7342, !tbaa !2355
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %256, i32 0, i32 0, !dbg !7344, !ctir !93
  %257 = load i64, i64* %sword, align 8, !dbg !7344, !tbaa !2657, !ctir !52
  %cmp343 = icmp ne i64 %257, -1, !dbg !7345
  br i1 %cmp343, label %if.then345, label %if.else348, !dbg !7346

if.then345:                                       ; preds = %if.end342
  %258 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7347, !tbaa !2355
  %259 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7348, !tbaa !2355
  %call346 = call i8* @begfield(%struct.line* %258, %struct.keyfield* %259), !dbg !7349
  store i8* %call346, i8** %texta, align 8, !dbg !7350, !tbaa !2355
  %260 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7351, !tbaa !2355
  %261 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7352, !tbaa !2355
  %call347 = call i8* @begfield(%struct.line* %260, %struct.keyfield* %261), !dbg !7353
  store i8* %call347, i8** %textb, align 8, !dbg !7354, !tbaa !2355
  br label %if.end380, !dbg !7355

if.else348:                                       ; preds = %if.end342
  %262 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7356, !tbaa !2355
  %text349 = getelementptr inbounds %struct.line, %struct.line* %262, i32 0, i32 0, !dbg !7358, !ctir !441
  %263 = load i8*, i8** %text349, align 8, !dbg !7358, !tbaa !4554, !ctir !7
  store i8* %263, i8** %texta, align 8, !dbg !7359, !tbaa !2355
  %264 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7360, !tbaa !2355
  %text350 = getelementptr inbounds %struct.line, %struct.line* %264, i32 0, i32 0, !dbg !7361, !ctir !441
  %265 = load i8*, i8** %text350, align 8, !dbg !7361, !tbaa !4554, !ctir !7
  store i8* %265, i8** %textb, align 8, !dbg !7362, !tbaa !2355
  %266 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7363, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %266, i32 0, i32 6, !dbg !7365, !ctir !93
  %267 = load i8, i8* %skipsblanks, align 8, !dbg !7365, !tbaa !3219
  %tobool351 = trunc i8 %267 to i1, !dbg !7365, !ctir !102
  br i1 %tobool351, label %if.then352, label %if.end379, !dbg !7366

if.then352:                                       ; preds = %if.else348
  br label %while.cond353, !dbg !7367

while.cond353:                                    ; preds = %while.body363, %if.then352
  %268 = load i8*, i8** %texta, align 8, !dbg !7369, !tbaa !2355
  %269 = load i8*, i8** %lima, align 8, !dbg !7370, !tbaa !2355
  %cmp354 = icmp ult i8* %268, %269, !dbg !7371
  br i1 %cmp354, label %land.rhs356, label %land.end362, !dbg !7372

land.rhs356:                                      ; preds = %while.cond353
  %270 = load i8*, i8** %texta, align 8, !dbg !7373, !tbaa !2355
  %271 = load i8, i8* %270, align 1, !dbg !7374, !tbaa !2507, !ctir !8
  %call357 = call zeroext i8 @to_uchar(i8 signext %271), !dbg !7375
  %idxprom358 = zext i8 %call357 to i64, !dbg !7376
  %arrayidx359 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom358, !dbg !7376, !ctir !318
  %272 = load i8, i8* %arrayidx359, align 1, !dbg !7376, !tbaa !2499
  %tobool360 = trunc i8 %272 to i1, !dbg !7376
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %while.cond353
  %273 = phi i1 [ false, %while.cond353 ], [ %tobool360, %land.rhs356 ], !dbg !7377
  br i1 %273, label %while.body363, label %while.end365, !dbg !7367

while.body363:                                    ; preds = %land.end362
  %274 = load i8*, i8** %texta, align 8, !dbg !7378, !tbaa !2355
  %incdec.ptr364 = getelementptr inbounds i8, i8* %274, i32 1, !dbg !7378
  store i8* %incdec.ptr364, i8** %texta, align 8, !dbg !7378, !tbaa !2355
  br label %while.cond353, !dbg !7367, !llvm.loop !7379

while.end365:                                     ; preds = %land.end362
  br label %while.cond366, !dbg !7381

while.cond366:                                    ; preds = %while.body376, %while.end365
  %275 = load i8*, i8** %textb, align 8, !dbg !7382, !tbaa !2355
  %276 = load i8*, i8** %limb, align 8, !dbg !7383, !tbaa !2355
  %cmp367 = icmp ult i8* %275, %276, !dbg !7384
  br i1 %cmp367, label %land.rhs369, label %land.end375, !dbg !7385

land.rhs369:                                      ; preds = %while.cond366
  %277 = load i8*, i8** %textb, align 8, !dbg !7386, !tbaa !2355
  %278 = load i8, i8* %277, align 1, !dbg !7387, !tbaa !2507, !ctir !8
  %call370 = call zeroext i8 @to_uchar(i8 signext %278), !dbg !7388
  %idxprom371 = zext i8 %call370 to i64, !dbg !7389
  %arrayidx372 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom371, !dbg !7389, !ctir !318
  %279 = load i8, i8* %arrayidx372, align 1, !dbg !7389, !tbaa !2499
  %tobool373 = trunc i8 %279 to i1, !dbg !7389
  br label %land.end375

land.end375:                                      ; preds = %land.rhs369, %while.cond366
  %280 = phi i1 [ false, %while.cond366 ], [ %tobool373, %land.rhs369 ], !dbg !7377
  br i1 %280, label %while.body376, label %while.end378, !dbg !7381

while.body376:                                    ; preds = %land.end375
  %281 = load i8*, i8** %textb, align 8, !dbg !7390, !tbaa !2355
  %incdec.ptr377 = getelementptr inbounds i8, i8* %281, i32 1, !dbg !7390
  store i8* %incdec.ptr377, i8** %textb, align 8, !dbg !7390, !tbaa !2355
  br label %while.cond366, !dbg !7381, !llvm.loop !7391

while.end378:                                     ; preds = %land.end375
  br label %if.end379, !dbg !7393

if.end379:                                        ; preds = %while.end378, %if.else348
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.then345
  br label %while.body, !dbg !6925, !llvm.loop !7394

while.end381:                                     ; preds = %if.then328
  store i32 0, i32* %retval, align 4, !dbg !7396
  br label %return, !dbg !7396

greater:                                          ; preds = %if.then271
  call void @llvm.dbg.label(metadata !7397), !dbg !7398
  store i32 1, i32* %diff, align 4, !dbg !7399, !tbaa !2342
  br label %not_equal, !dbg !7400

not_equal:                                        ; preds = %greater, %if.then325, %if.then309, %if.then297, %if.then249, %if.then196
  call void @llvm.dbg.label(metadata !7401), !dbg !7402
  %282 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7403, !tbaa !2355
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %282, i32 0, i32 13, !dbg !7404, !ctir !93
  %283 = load i8, i8* %reverse, align 1, !dbg !7404, !tbaa !3205
  %tobool382 = trunc i8 %283 to i1, !dbg !7404, !ctir !102
  br i1 %tobool382, label %cond.true384, label %cond.false386, !dbg !7403

cond.true384:                                     ; preds = %not_equal
  %284 = load i32, i32* %diff, align 4, !dbg !7405, !tbaa !2342
  %sub385 = sub nsw i32 0, %284, !dbg !7406
  br label %cond.end387, !dbg !7403

cond.false386:                                    ; preds = %not_equal
  %285 = load i32, i32* %diff, align 4, !dbg !7407, !tbaa !2342
  br label %cond.end387, !dbg !7403

cond.end387:                                      ; preds = %cond.false386, %cond.true384
  %cond388 = phi i32 [ %sub385, %cond.true384 ], [ %285, %cond.false386 ], !dbg !7403
  store i32 %cond388, i32* %retval, align 4, !dbg !7408
  br label %return, !dbg !7408

return:                                           ; preds = %cond.end387, %while.end381
  %286 = load i32, i32* %retval, align 4, !dbg !7409
  ret i32 %286, !dbg !7409
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numcompare(i8* %a, i8* %b) #4 !dbg !7410 !ctir !474 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !87
  %b.addr = alloca i8*, align 8, !ctir !87
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %while.cond, !dbg !7415

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7416, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !7417, !tbaa !2507, !ctir !88
  %call = call zeroext i8 @to_uchar(i8 signext %1), !dbg !7418
  %idxprom = zext i8 %call to i64, !dbg !7419
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !7419, !ctir !318
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7419, !tbaa !2499
  %tobool = trunc i8 %2 to i1, !dbg !7419
  br i1 %tobool, label %while.body, label %while.end, !dbg !7415

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %a.addr, align 8, !dbg !7420, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7420
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !7420, !tbaa !2355
  br label %while.cond, !dbg !7415, !llvm.loop !7421

while.end:                                        ; preds = %while.cond
  br label %while.cond1, !dbg !7422

while.cond1:                                      ; preds = %while.body6, %while.end
  %4 = load i8*, i8** %b.addr, align 8, !dbg !7423, !tbaa !2355
  %5 = load i8, i8* %4, align 1, !dbg !7424, !tbaa !2507, !ctir !88
  %call2 = call zeroext i8 @to_uchar(i8 signext %5), !dbg !7425
  %idxprom3 = zext i8 %call2 to i64, !dbg !7426
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom3, !dbg !7426, !ctir !318
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !7426, !tbaa !2499
  %tobool5 = trunc i8 %6 to i1, !dbg !7426
  br i1 %tobool5, label %while.body6, label %while.end8, !dbg !7422

while.body6:                                      ; preds = %while.cond1
  %7 = load i8*, i8** %b.addr, align 8, !dbg !7427, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7427
  store i8* %incdec.ptr7, i8** %b.addr, align 8, !dbg !7427, !tbaa !2355
  br label %while.cond1, !dbg !7422, !llvm.loop !7428

while.end8:                                       ; preds = %while.cond1
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7429, !tbaa !2355
  %9 = load i8*, i8** %b.addr, align 8, !dbg !7430, !tbaa !2355
  %10 = load i32, i32* @decimal_point, align 4, !dbg !7431, !tbaa !2342
  %11 = load i32, i32* @thousands_sep, align 4, !dbg !7432, !tbaa !2342
  %call9 = call i32 @strnumcmp(i8* %8, i8* %9, i32 %10, i32 %11), !dbg !7433
  ret i32 %call9, !dbg !7434
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @general_numcompare(i8* %sa, i8* %sb) #4 !dbg !7435 !ctir !474 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %sa.addr = alloca i8*, align 8, !ctir !87
  %sb.addr = alloca i8*, align 8, !ctir !87
  %ea = alloca i8*, align 8, !ctir !7
  %eb = alloca i8*, align 8, !ctir !7
  %a = alloca x86_fp80, align 16, !ctir !476
  %b = alloca x86_fp80, align 16, !ctir !476
  store i8* %sa, i8** %sa.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %sa.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  store i8* %sb, i8** %sb.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %sb.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata i8** %ea, metadata !7440, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.declare(metadata i8** %eb, metadata !7442, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.declare(metadata x86_fp80* %a, metadata !7444, metadata !DIExpression()), !dbg !7445
  %0 = load i8*, i8** %sa.addr, align 8, !dbg !7446, !tbaa !2355
  %call = call x86_fp80 @strtold(i8* %0, i8** %ea) #12, !dbg !7447
  store x86_fp80 %call, x86_fp80* %a, align 16, !dbg !7445, !tbaa !6362
  call void @llvm.dbg.declare(metadata x86_fp80* %b, metadata !7448, metadata !DIExpression()), !dbg !7449
  %1 = load i8*, i8** %sb.addr, align 8, !dbg !7450, !tbaa !2355
  %call1 = call x86_fp80 @strtold(i8* %1, i8** %eb) #12, !dbg !7451
  store x86_fp80 %call1, x86_fp80* %b, align 16, !dbg !7449, !tbaa !6362
  %2 = load i8*, i8** %sa.addr, align 8, !dbg !7452, !tbaa !2355
  %3 = load i8*, i8** %ea, align 8, !dbg !7454, !tbaa !2355
  %cmp = icmp eq i8* %2, %3, !dbg !7455
  br i1 %cmp, label %if.then, label %if.end, !dbg !7456

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %sb.addr, align 8, !dbg !7457, !tbaa !2355
  %5 = load i8*, i8** %eb, align 8, !dbg !7458, !tbaa !2355
  %cmp2 = icmp eq i8* %4, %5, !dbg !7459
  %6 = zext i1 %cmp2 to i64, !dbg !7457
  %cond = select i1 %cmp2, i32 0, i32 -1, !dbg !7457
  store i32 %cond, i32* %retval, align 4, !dbg !7460
  br label %return, !dbg !7460

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %sb.addr, align 8, !dbg !7461, !tbaa !2355
  %8 = load i8*, i8** %eb, align 8, !dbg !7463, !tbaa !2355
  %cmp3 = icmp eq i8* %7, %8, !dbg !7464
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7465

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7466
  br label %return, !dbg !7466

if.end5:                                          ; preds = %if.end
  %9 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7467, !tbaa !6362
  %10 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7468, !tbaa !6362
  %cmp6 = fcmp olt x86_fp80 %9, %10, !dbg !7469
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !7467

cond.true:                                        ; preds = %if.end5
  br label %cond.end27, !dbg !7467

cond.false:                                       ; preds = %if.end5
  %11 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7470, !tbaa !6362
  %12 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7471, !tbaa !6362
  %cmp7 = fcmp ogt x86_fp80 %11, %12, !dbg !7472
  br i1 %cmp7, label %cond.true8, label %cond.false9, !dbg !7470

cond.true8:                                       ; preds = %cond.false
  br label %cond.end25, !dbg !7470

cond.false9:                                      ; preds = %cond.false
  %13 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7473, !tbaa !6362
  %14 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7474, !tbaa !6362
  %cmp10 = fcmp oeq x86_fp80 %13, %14, !dbg !7475
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !7473

cond.true11:                                      ; preds = %cond.false9
  br label %cond.end23, !dbg !7473

cond.false12:                                     ; preds = %cond.false9
  %15 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7476, !tbaa !6362
  %16 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7477, !tbaa !6362
  %cmp13 = fcmp oeq x86_fp80 %15, %16, !dbg !7478
  br i1 %cmp13, label %cond.true14, label %cond.false15, !dbg !7476

cond.true14:                                      ; preds = %cond.false12
  br label %cond.end21, !dbg !7476

cond.false15:                                     ; preds = %cond.false12
  %17 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7479, !tbaa !6362
  %18 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7480, !tbaa !6362
  %cmp16 = fcmp oeq x86_fp80 %17, %18, !dbg !7481
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !7479

cond.true17:                                      ; preds = %cond.false15
  br label %cond.end, !dbg !7479

cond.false18:                                     ; preds = %cond.false15
  %19 = load i8*, i8** %sa.addr, align 8, !dbg !7482, !tbaa !2355
  %20 = load i8*, i8** %sb.addr, align 8, !dbg !7483, !tbaa !2355
  %call19 = call i32 @nan_compare(i8* %19, i8* %20), !dbg !7484
  br label %cond.end, !dbg !7479

cond.end:                                         ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 1, %cond.true17 ], [ %call19, %cond.false18 ], !dbg !7479
  br label %cond.end21, !dbg !7476

cond.end21:                                       ; preds = %cond.end, %cond.true14
  %cond22 = phi i32 [ -1, %cond.true14 ], [ %cond20, %cond.end ], !dbg !7476
  br label %cond.end23, !dbg !7473

cond.end23:                                       ; preds = %cond.end21, %cond.true11
  %cond24 = phi i32 [ 0, %cond.true11 ], [ %cond22, %cond.end21 ], !dbg !7473
  br label %cond.end25, !dbg !7470

cond.end25:                                       ; preds = %cond.end23, %cond.true8
  %cond26 = phi i32 [ 1, %cond.true8 ], [ %cond24, %cond.end23 ], !dbg !7470
  br label %cond.end27, !dbg !7467

cond.end27:                                       ; preds = %cond.end25, %cond.true
  %cond28 = phi i32 [ -1, %cond.true ], [ %cond26, %cond.end25 ], !dbg !7467
  store i32 %cond28, i32* %retval, align 4, !dbg !7485
  br label %return, !dbg !7485

return:                                           ; preds = %cond.end27, %if.then4, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7486
  ret i32 %21, !dbg !7486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @human_numcompare(i8* %a, i8* %b) #4 !dbg !7487 !ctir !474 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !87
  %b.addr = alloca i8*, align 8, !ctir !87
  %diff = alloca i32, align 4, !ctir !5
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7488, metadata !DIExpression()), !dbg !7489
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7490, metadata !DIExpression()), !dbg !7491
  br label %while.cond, !dbg !7492

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7493, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !7494, !tbaa !2507, !ctir !88
  %call = call zeroext i8 @to_uchar(i8 signext %1), !dbg !7495
  %idxprom = zext i8 %call to i64, !dbg !7496
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !7496, !ctir !318
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7496, !tbaa !2499
  %tobool = trunc i8 %2 to i1, !dbg !7496
  br i1 %tobool, label %while.body, label %while.end, !dbg !7492

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %a.addr, align 8, !dbg !7497, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7497
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !7497, !tbaa !2355
  br label %while.cond, !dbg !7492, !llvm.loop !7498

while.end:                                        ; preds = %while.cond
  br label %while.cond1, !dbg !7499

while.cond1:                                      ; preds = %while.body6, %while.end
  %4 = load i8*, i8** %b.addr, align 8, !dbg !7500, !tbaa !2355
  %5 = load i8, i8* %4, align 1, !dbg !7501, !tbaa !2507, !ctir !88
  %call2 = call zeroext i8 @to_uchar(i8 signext %5), !dbg !7502
  %idxprom3 = zext i8 %call2 to i64, !dbg !7503
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom3, !dbg !7503, !ctir !318
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !7503, !tbaa !2499
  %tobool5 = trunc i8 %6 to i1, !dbg !7503
  br i1 %tobool5, label %while.body6, label %while.end8, !dbg !7499

while.body6:                                      ; preds = %while.cond1
  %7 = load i8*, i8** %b.addr, align 8, !dbg !7504, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7504
  store i8* %incdec.ptr7, i8** %b.addr, align 8, !dbg !7504, !tbaa !2355
  br label %while.cond1, !dbg !7499, !llvm.loop !7505

while.end8:                                       ; preds = %while.cond1
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7506, metadata !DIExpression()), !dbg !7507
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7508, !tbaa !2355
  %call9 = call i32 @find_unit_order(i8* %8) #14, !dbg !7509
  %9 = load i8*, i8** %b.addr, align 8, !dbg !7510, !tbaa !2355
  %call10 = call i32 @find_unit_order(i8* %9) #14, !dbg !7511
  %sub = sub nsw i32 %call9, %call10, !dbg !7512
  store i32 %sub, i32* %diff, align 4, !dbg !7507, !tbaa !2342
  %10 = load i32, i32* %diff, align 4, !dbg !7513, !tbaa !2342
  %tobool11 = icmp ne i32 %10, 0, !dbg !7513
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !7513

cond.true:                                        ; preds = %while.end8
  %11 = load i32, i32* %diff, align 4, !dbg !7514, !tbaa !2342
  br label %cond.end, !dbg !7513

cond.false:                                       ; preds = %while.end8
  %12 = load i8*, i8** %a.addr, align 8, !dbg !7515, !tbaa !2355
  %13 = load i8*, i8** %b.addr, align 8, !dbg !7516, !tbaa !2355
  %14 = load i32, i32* @decimal_point, align 4, !dbg !7517, !tbaa !2342
  %15 = load i32, i32* @thousands_sep, align 4, !dbg !7518, !tbaa !2342
  %call12 = call i32 @strnumcmp(i8* %12, i8* %13, i32 %14, i32 %15), !dbg !7519
  br label %cond.end, !dbg !7513

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %call12, %cond.false ], !dbg !7513
  ret i32 %cond, !dbg !7520
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare_random(i8* noalias %texta, i64 %lena, i8* noalias %textb, i64 %lenb) #4 !dbg !7521 !ctir !484 {
entry:
  %texta.addr = alloca i8*, align 8, !ctir !486
  %lena.addr = alloca i64, align 8, !ctir !52
  %textb.addr = alloca i8*, align 8, !ctir !486
  %lenb.addr = alloca i64, align 8, !ctir !52
  %xfrm_diff = alloca i32, align 4, !ctir !5
  %stackbuf = alloca [4000 x i8], align 16, !ctir !471
  %buf = alloca i8*, align 8, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !52
  %allocated = alloca i8*, align 8, !ctir !47
  %dig = alloca [2 x [4 x i32]], align 16, !ctir !487
  %s = alloca [2 x %struct.md5_ctx], align 16, !ctir !490
  %lima = alloca i8*, align 8, !ctir !87
  %limb = alloca i8*, align 8, !ctir !87
  %guess_bufsize = alloca i64, align 8, !ctir !52
  %sizea = alloca i64, align 8, !ctir !52
  %a_fits = alloca i8, align 1, !ctir !102
  %sizeb = alloca i64, align 8, !ctir !52
  %diff = alloca i32, align 4, !ctir !5
  store i8* %texta, i8** %texta.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %texta.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  store i64 %lena, i64* %lena.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %lena.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  store i8* %textb, i8** %textb.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %textb.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store i64 %lenb, i64* %lenb.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %lenb.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.declare(metadata i32* %xfrm_diff, metadata !7530, metadata !DIExpression()), !dbg !7531
  store i32 0, i32* %xfrm_diff, align 4, !dbg !7531, !tbaa !2342
  call void @llvm.dbg.declare(metadata [4000 x i8]* %stackbuf, metadata !7532, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7534, metadata !DIExpression()), !dbg !7535
  %arraydecay = getelementptr inbounds [4000 x i8], [4000 x i8]* %stackbuf, i64 0, i64 0, !dbg !7536
  store i8* %arraydecay, i8** %buf, align 8, !dbg !7535, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !7537, metadata !DIExpression()), !dbg !7538
  store i64 4000, i64* %bufsize, align 8, !dbg !7538, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %allocated, metadata !7539, metadata !DIExpression()), !dbg !7540
  store i8* null, i8** %allocated, align 8, !dbg !7540, !tbaa !2355
  call void @llvm.dbg.declare(metadata [2 x [4 x i32]]* %dig, metadata !7541, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata [2 x %struct.md5_ctx]* %s, metadata !7543, metadata !DIExpression()), !dbg !7544
  %arrayidx = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7545, !ctir !490
  %arrayidx1 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7546, !ctir !490
  %0 = bitcast %struct.md5_ctx* %arrayidx1 to i8*, !dbg !7547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast (%struct.md5_ctx* @random_md5_state to i8*), i64 156, i1 false), !dbg !7547, !tbaa.struct !7548
  %1 = bitcast %struct.md5_ctx* %arrayidx to i8*, !dbg !7549
  %2 = bitcast %struct.md5_ctx* %arrayidx1 to i8*, !dbg !7549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 4 %2, i64 156, i1 false), !dbg !7549, !tbaa.struct !7548
  %3 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !7550, !tbaa !2499
  %tobool = trunc i8 %3 to i1, !dbg !7550
  br i1 %tobool, label %if.then, label %if.end97, !dbg !7552

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %lima, metadata !7553, metadata !DIExpression()), !dbg !7555
  %4 = load i8*, i8** %texta.addr, align 8, !dbg !7556, !tbaa !2355
  %5 = load i64, i64* %lena.addr, align 8, !dbg !7557, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !7558
  store i8* %add.ptr, i8** %lima, align 8, !dbg !7555, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %limb, metadata !7559, metadata !DIExpression()), !dbg !7560
  %6 = load i8*, i8** %textb.addr, align 8, !dbg !7561, !tbaa !2355
  %7 = load i64, i64* %lenb.addr, align 8, !dbg !7562, !tbaa !2516
  %add.ptr2 = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !7563
  store i8* %add.ptr2, i8** %limb, align 8, !dbg !7560, !tbaa !2355
  br label %while.body, !dbg !7564

while.body:                                       ; preds = %if.then, %if.end96
  call void @llvm.dbg.declare(metadata i64* %guess_bufsize, metadata !7565, metadata !DIExpression()), !dbg !7567
  %8 = load i64, i64* %lena.addr, align 8, !dbg !7568, !tbaa !2516
  %9 = load i64, i64* %lenb.addr, align 8, !dbg !7569, !tbaa !2516
  %add = add i64 %8, %9, !dbg !7570
  %mul = mul i64 3, %add, !dbg !7571
  %add3 = add i64 %mul, 2, !dbg !7572
  store i64 %add3, i64* %guess_bufsize, align 8, !dbg !7567, !tbaa !2516
  %10 = load i64, i64* %bufsize, align 8, !dbg !7573, !tbaa !2516
  %11 = load i64, i64* %guess_bufsize, align 8, !dbg !7575, !tbaa !2516
  %cmp = icmp ult i64 %10, %11, !dbg !7576
  br i1 %cmp, label %if.then4, label %if.end12, !dbg !7577

if.then4:                                         ; preds = %while.body
  %12 = load i64, i64* %guess_bufsize, align 8, !dbg !7578, !tbaa !2516
  %13 = load i64, i64* %bufsize, align 8, !dbg !7578, !tbaa !2516
  %mul5 = mul i64 %13, 3, !dbg !7578
  %div = udiv i64 %mul5, 2, !dbg !7578
  %cmp6 = icmp ugt i64 %12, %div, !dbg !7578
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !7578

cond.true:                                        ; preds = %if.then4
  %14 = load i64, i64* %guess_bufsize, align 8, !dbg !7578, !tbaa !2516
  br label %cond.end, !dbg !7578

cond.false:                                       ; preds = %if.then4
  %15 = load i64, i64* %bufsize, align 8, !dbg !7578, !tbaa !2516
  %mul7 = mul i64 %15, 3, !dbg !7578
  %div8 = udiv i64 %mul7, 2, !dbg !7578
  br label %cond.end, !dbg !7578

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %14, %cond.true ], [ %div8, %cond.false ], !dbg !7578
  store i64 %cond, i64* %bufsize, align 8, !dbg !7580, !tbaa !2516
  %16 = load i8*, i8** %allocated, align 8, !dbg !7581, !tbaa !2355
  call void @free(i8* %16) #12, !dbg !7582
  %17 = load i64, i64* %bufsize, align 8, !dbg !7583, !tbaa !2516
  %call = call noalias i8* @malloc(i64 %17) #12, !dbg !7584
  store i8* %call, i8** %allocated, align 8, !dbg !7585, !tbaa !2355
  store i8* %call, i8** %buf, align 8, !dbg !7586, !tbaa !2355
  %18 = load i8*, i8** %buf, align 8, !dbg !7587, !tbaa !2355
  %tobool9 = icmp ne i8* %18, null, !dbg !7587
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !7589

if.then10:                                        ; preds = %cond.end
  %arraydecay11 = getelementptr inbounds [4000 x i8], [4000 x i8]* %stackbuf, i64 0, i64 0, !dbg !7590
  store i8* %arraydecay11, i8** %buf, align 8, !dbg !7592, !tbaa !2355
  store i64 4000, i64* %bufsize, align 8, !dbg !7593, !tbaa !2516
  br label %if.end, !dbg !7594

if.end:                                           ; preds = %if.then10, %cond.end
  br label %if.end12, !dbg !7595

if.end12:                                         ; preds = %if.end, %while.body
  call void @llvm.dbg.declare(metadata i64* %sizea, metadata !7596, metadata !DIExpression()), !dbg !7597
  %19 = load i8*, i8** %texta.addr, align 8, !dbg !7598, !tbaa !2355
  %20 = load i8*, i8** %lima, align 8, !dbg !7599, !tbaa !2355
  %cmp13 = icmp ult i8* %19, %20, !dbg !7600
  br i1 %cmp13, label %cond.true14, label %cond.false17, !dbg !7598

cond.true14:                                      ; preds = %if.end12
  %21 = load i8*, i8** %buf, align 8, !dbg !7601, !tbaa !2355
  %22 = load i8*, i8** %texta.addr, align 8, !dbg !7602, !tbaa !2355
  %23 = load i64, i64* %bufsize, align 8, !dbg !7603, !tbaa !2516
  %call15 = call i64 @xstrxfrm(i8* %21, i8* %22, i64 %23), !dbg !7604
  %add16 = add i64 %call15, 1, !dbg !7605
  br label %cond.end18, !dbg !7598

cond.false17:                                     ; preds = %if.end12
  br label %cond.end18, !dbg !7598

cond.end18:                                       ; preds = %cond.false17, %cond.true14
  %cond19 = phi i64 [ %add16, %cond.true14 ], [ 0, %cond.false17 ], !dbg !7598
  store i64 %cond19, i64* %sizea, align 8, !dbg !7597, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8* %a_fits, metadata !7606, metadata !DIExpression()), !dbg !7607
  %24 = load i64, i64* %sizea, align 8, !dbg !7608, !tbaa !2516
  %25 = load i64, i64* %bufsize, align 8, !dbg !7609, !tbaa !2516
  %cmp20 = icmp ule i64 %24, %25, !dbg !7610
  %frombool = zext i1 %cmp20 to i8, !dbg !7607
  store i8 %frombool, i8* %a_fits, align 1, !dbg !7607, !tbaa !2499
  call void @llvm.dbg.declare(metadata i64* %sizeb, metadata !7611, metadata !DIExpression()), !dbg !7612
  %26 = load i8*, i8** %textb.addr, align 8, !dbg !7613, !tbaa !2355
  %27 = load i8*, i8** %limb, align 8, !dbg !7614, !tbaa !2355
  %cmp21 = icmp ult i8* %26, %27, !dbg !7615
  br i1 %cmp21, label %cond.true22, label %cond.false36, !dbg !7613

cond.true22:                                      ; preds = %cond.end18
  %28 = load i8, i8* %a_fits, align 1, !dbg !7616, !tbaa !2499
  %tobool23 = trunc i8 %28 to i1, !dbg !7616
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !7616

cond.true24:                                      ; preds = %cond.true22
  %29 = load i8*, i8** %buf, align 8, !dbg !7617, !tbaa !2355
  %30 = load i64, i64* %sizea, align 8, !dbg !7618, !tbaa !2516
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !7619
  br label %cond.end27, !dbg !7616

cond.false26:                                     ; preds = %cond.true22
  br label %cond.end27, !dbg !7616

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i8* [ %add.ptr25, %cond.true24 ], [ null, %cond.false26 ], !dbg !7616
  %31 = load i8*, i8** %textb.addr, align 8, !dbg !7620, !tbaa !2355
  %32 = load i8, i8* %a_fits, align 1, !dbg !7621, !tbaa !2499
  %tobool29 = trunc i8 %32 to i1, !dbg !7621
  br i1 %tobool29, label %cond.true30, label %cond.false31, !dbg !7621

cond.true30:                                      ; preds = %cond.end27
  %33 = load i64, i64* %bufsize, align 8, !dbg !7622, !tbaa !2516
  %34 = load i64, i64* %sizea, align 8, !dbg !7623, !tbaa !2516
  %sub = sub i64 %33, %34, !dbg !7624
  br label %cond.end32, !dbg !7621

cond.false31:                                     ; preds = %cond.end27
  br label %cond.end32, !dbg !7621

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i64 [ %sub, %cond.true30 ], [ 0, %cond.false31 ], !dbg !7621
  %call34 = call i64 @xstrxfrm(i8* %cond28, i8* %31, i64 %cond33), !dbg !7625
  %add35 = add i64 %call34, 1, !dbg !7626
  br label %cond.end37, !dbg !7613

cond.false36:                                     ; preds = %cond.end18
  br label %cond.end37, !dbg !7613

cond.end37:                                       ; preds = %cond.false36, %cond.end32
  %cond38 = phi i64 [ %add35, %cond.end32 ], [ 0, %cond.false36 ], !dbg !7613
  store i64 %cond38, i64* %sizeb, align 8, !dbg !7612, !tbaa !2516
  %35 = load i8, i8* %a_fits, align 1, !dbg !7627, !tbaa !2499
  %tobool39 = trunc i8 %35 to i1, !dbg !7627
  br i1 %tobool39, label %land.lhs.true, label %if.then42, !dbg !7629

land.lhs.true:                                    ; preds = %cond.end37
  %36 = load i64, i64* %sizea, align 8, !dbg !7630, !tbaa !2516
  %37 = load i64, i64* %sizeb, align 8, !dbg !7631, !tbaa !2516
  %add40 = add i64 %36, %37, !dbg !7632
  %38 = load i64, i64* %bufsize, align 8, !dbg !7633, !tbaa !2516
  %cmp41 = icmp ule i64 %add40, %38, !dbg !7634
  br i1 %cmp41, label %if.end59, label %if.then42, !dbg !7635

if.then42:                                        ; preds = %land.lhs.true, %cond.end37
  %39 = load i64, i64* %sizea, align 8, !dbg !7636, !tbaa !2516
  %40 = load i64, i64* %sizeb, align 8, !dbg !7638, !tbaa !2516
  %add43 = add i64 %39, %40, !dbg !7639
  store i64 %add43, i64* %bufsize, align 8, !dbg !7640, !tbaa !2516
  %41 = load i64, i64* %bufsize, align 8, !dbg !7641, !tbaa !2516
  %cmp44 = icmp ult i64 %41, 6148914691236517205, !dbg !7643
  br i1 %cmp44, label %if.then45, label %if.end48, !dbg !7644

if.then45:                                        ; preds = %if.then42
  %42 = load i64, i64* %bufsize, align 8, !dbg !7645, !tbaa !2516
  %mul46 = mul i64 %42, 3, !dbg !7646
  %div47 = udiv i64 %mul46, 2, !dbg !7647
  store i64 %div47, i64* %bufsize, align 8, !dbg !7648, !tbaa !2516
  br label %if.end48, !dbg !7649

if.end48:                                         ; preds = %if.then45, %if.then42
  %43 = load i8*, i8** %allocated, align 8, !dbg !7650, !tbaa !2355
  call void @free(i8* %43) #12, !dbg !7651
  %44 = load i64, i64* %bufsize, align 8, !dbg !7652, !tbaa !2516
  %call49 = call noalias i8* @xmalloc(i64 %44), !dbg !7653
  store i8* %call49, i8** %allocated, align 8, !dbg !7654, !tbaa !2355
  store i8* %call49, i8** %buf, align 8, !dbg !7655, !tbaa !2355
  %45 = load i8*, i8** %texta.addr, align 8, !dbg !7656, !tbaa !2355
  %46 = load i8*, i8** %lima, align 8, !dbg !7658, !tbaa !2355
  %cmp50 = icmp ult i8* %45, %46, !dbg !7659
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !7660

if.then51:                                        ; preds = %if.end48
  %47 = load i8*, i8** %buf, align 8, !dbg !7661, !tbaa !2355
  %48 = load i8*, i8** %texta.addr, align 8, !dbg !7662, !tbaa !2355
  %49 = load i64, i64* %sizea, align 8, !dbg !7663, !tbaa !2516
  %call52 = call i64 @strxfrm(i8* %47, i8* %48, i64 %49) #12, !dbg !7664
  br label %if.end53, !dbg !7664

if.end53:                                         ; preds = %if.then51, %if.end48
  %50 = load i8*, i8** %textb.addr, align 8, !dbg !7665, !tbaa !2355
  %51 = load i8*, i8** %limb, align 8, !dbg !7667, !tbaa !2355
  %cmp54 = icmp ult i8* %50, %51, !dbg !7668
  br i1 %cmp54, label %if.then55, label %if.end58, !dbg !7669

if.then55:                                        ; preds = %if.end53
  %52 = load i8*, i8** %buf, align 8, !dbg !7670, !tbaa !2355
  %53 = load i64, i64* %sizea, align 8, !dbg !7671, !tbaa !2516
  %add.ptr56 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !7672
  %54 = load i8*, i8** %textb.addr, align 8, !dbg !7673, !tbaa !2355
  %55 = load i64, i64* %sizeb, align 8, !dbg !7674, !tbaa !2516
  %call57 = call i64 @strxfrm(i8* %add.ptr56, i8* %54, i64 %55) #12, !dbg !7675
  br label %if.end58, !dbg !7675

if.end58:                                         ; preds = %if.then55, %if.end53
  br label %if.end59, !dbg !7676

if.end59:                                         ; preds = %if.end58, %land.lhs.true
  %56 = load i8*, i8** %texta.addr, align 8, !dbg !7677, !tbaa !2355
  %57 = load i8*, i8** %lima, align 8, !dbg !7679, !tbaa !2355
  %cmp60 = icmp ult i8* %56, %57, !dbg !7680
  br i1 %cmp60, label %if.then61, label %if.end65, !dbg !7681

if.then61:                                        ; preds = %if.end59
  %58 = load i8*, i8** %texta.addr, align 8, !dbg !7682, !tbaa !2355
  %call62 = call i64 @strlen(i8* %58) #14, !dbg !7683
  %add63 = add i64 %call62, 1, !dbg !7684
  %59 = load i8*, i8** %texta.addr, align 8, !dbg !7685, !tbaa !2355
  %add.ptr64 = getelementptr inbounds i8, i8* %59, i64 %add63, !dbg !7685
  store i8* %add.ptr64, i8** %texta.addr, align 8, !dbg !7685, !tbaa !2355
  br label %if.end65, !dbg !7686

if.end65:                                         ; preds = %if.then61, %if.end59
  %60 = load i8*, i8** %textb.addr, align 8, !dbg !7687, !tbaa !2355
  %61 = load i8*, i8** %limb, align 8, !dbg !7689, !tbaa !2355
  %cmp66 = icmp ult i8* %60, %61, !dbg !7690
  br i1 %cmp66, label %if.then67, label %if.end71, !dbg !7691

if.then67:                                        ; preds = %if.end65
  %62 = load i8*, i8** %textb.addr, align 8, !dbg !7692, !tbaa !2355
  %call68 = call i64 @strlen(i8* %62) #14, !dbg !7693
  %add69 = add i64 %call68, 1, !dbg !7694
  %63 = load i8*, i8** %textb.addr, align 8, !dbg !7695, !tbaa !2355
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %add69, !dbg !7695
  store i8* %add.ptr70, i8** %textb.addr, align 8, !dbg !7695, !tbaa !2355
  br label %if.end71, !dbg !7696

if.end71:                                         ; preds = %if.then67, %if.end65
  %64 = load i8*, i8** %texta.addr, align 8, !dbg !7697, !tbaa !2355
  %65 = load i8*, i8** %lima, align 8, !dbg !7699, !tbaa !2355
  %cmp72 = icmp ult i8* %64, %65, !dbg !7700
  br i1 %cmp72, label %if.end76, label %lor.lhs.false, !dbg !7701

lor.lhs.false:                                    ; preds = %if.end71
  %66 = load i8*, i8** %textb.addr, align 8, !dbg !7702, !tbaa !2355
  %67 = load i8*, i8** %limb, align 8, !dbg !7703, !tbaa !2355
  %cmp73 = icmp ult i8* %66, %67, !dbg !7704
  br i1 %cmp73, label %if.end76, label %if.then74, !dbg !7705

if.then74:                                        ; preds = %lor.lhs.false
  %68 = load i64, i64* %sizea, align 8, !dbg !7706, !tbaa !2516
  store i64 %68, i64* %lena.addr, align 8, !dbg !7708, !tbaa !2516
  %69 = load i8*, i8** %buf, align 8, !dbg !7709, !tbaa !2355
  store i8* %69, i8** %texta.addr, align 8, !dbg !7710, !tbaa !2355
  %70 = load i64, i64* %sizeb, align 8, !dbg !7711, !tbaa !2516
  store i64 %70, i64* %lenb.addr, align 8, !dbg !7712, !tbaa !2516
  %71 = load i8*, i8** %buf, align 8, !dbg !7713, !tbaa !2355
  %72 = load i64, i64* %sizea, align 8, !dbg !7714, !tbaa !2516
  %add.ptr75 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !7715
  store i8* %add.ptr75, i8** %textb.addr, align 8, !dbg !7716, !tbaa !2355
  br label %while.end, !dbg !7717

if.end76:                                         ; preds = %lor.lhs.false, %if.end71
  %73 = load i8*, i8** %buf, align 8, !dbg !7718, !tbaa !2355
  %74 = load i64, i64* %sizea, align 8, !dbg !7719, !tbaa !2516
  %arrayidx77 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7720, !ctir !490
  call void @md5_process_bytes(i8* %73, i64 %74, %struct.md5_ctx* %arrayidx77) #12, !dbg !7721
  %75 = load i8*, i8** %buf, align 8, !dbg !7722, !tbaa !2355
  %76 = load i64, i64* %sizea, align 8, !dbg !7723, !tbaa !2516
  %add.ptr78 = getelementptr inbounds i8, i8* %75, i64 %76, !dbg !7724
  %77 = load i64, i64* %sizeb, align 8, !dbg !7725, !tbaa !2516
  %arrayidx79 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7726, !ctir !490
  call void @md5_process_bytes(i8* %add.ptr78, i64 %77, %struct.md5_ctx* %arrayidx79) #12, !dbg !7727
  %78 = load i32, i32* %xfrm_diff, align 4, !dbg !7728, !tbaa !2342
  %tobool80 = icmp ne i32 %78, 0, !dbg !7728
  br i1 %tobool80, label %if.end96, label %if.then81, !dbg !7730

if.then81:                                        ; preds = %if.end76
  %79 = load i8*, i8** %buf, align 8, !dbg !7731, !tbaa !2355
  %80 = load i8*, i8** %buf, align 8, !dbg !7733, !tbaa !2355
  %81 = load i64, i64* %sizea, align 8, !dbg !7734, !tbaa !2516
  %add.ptr82 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !7735
  %82 = load i64, i64* %sizea, align 8, !dbg !7736, !tbaa !2516
  %83 = load i64, i64* %sizeb, align 8, !dbg !7736, !tbaa !2516
  %cmp83 = icmp ult i64 %82, %83, !dbg !7736
  br i1 %cmp83, label %cond.true84, label %cond.false85, !dbg !7736

cond.true84:                                      ; preds = %if.then81
  %84 = load i64, i64* %sizea, align 8, !dbg !7736, !tbaa !2516
  br label %cond.end86, !dbg !7736

cond.false85:                                     ; preds = %if.then81
  %85 = load i64, i64* %sizeb, align 8, !dbg !7736, !tbaa !2516
  br label %cond.end86, !dbg !7736

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %cond87 = phi i64 [ %84, %cond.true84 ], [ %85, %cond.false85 ], !dbg !7736
  %call88 = call i32 @memcmp(i8* %79, i8* %add.ptr82, i64 %cond87) #14, !dbg !7737
  store i32 %call88, i32* %xfrm_diff, align 4, !dbg !7738, !tbaa !2342
  %86 = load i32, i32* %xfrm_diff, align 4, !dbg !7739, !tbaa !2342
  %tobool89 = icmp ne i32 %86, 0, !dbg !7739
  br i1 %tobool89, label %if.end95, label %if.then90, !dbg !7741

if.then90:                                        ; preds = %cond.end86
  %87 = load i64, i64* %sizea, align 8, !dbg !7742, !tbaa !2516
  %88 = load i64, i64* %sizeb, align 8, !dbg !7743, !tbaa !2516
  %cmp91 = icmp ugt i64 %87, %88, !dbg !7744
  %conv = zext i1 %cmp91 to i32, !dbg !7744
  %89 = load i64, i64* %sizea, align 8, !dbg !7745, !tbaa !2516
  %90 = load i64, i64* %sizeb, align 8, !dbg !7746, !tbaa !2516
  %cmp92 = icmp ult i64 %89, %90, !dbg !7747
  %conv93 = zext i1 %cmp92 to i32, !dbg !7747
  %sub94 = sub nsw i32 %conv, %conv93, !dbg !7748
  store i32 %sub94, i32* %xfrm_diff, align 4, !dbg !7749, !tbaa !2342
  br label %if.end95, !dbg !7750

if.end95:                                         ; preds = %if.then90, %cond.end86
  br label %if.end96, !dbg !7751

if.end96:                                         ; preds = %if.end95, %if.end76
  br label %while.body, !dbg !7564, !llvm.loop !7752

while.end:                                        ; preds = %if.then74
  br label %if.end97, !dbg !7754

if.end97:                                         ; preds = %while.end, %entry
  %91 = load i8*, i8** %texta.addr, align 8, !dbg !7755, !tbaa !2355
  %92 = load i64, i64* %lena.addr, align 8, !dbg !7756, !tbaa !2516
  %arrayidx98 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7757, !ctir !490
  call void @md5_process_bytes(i8* %91, i64 %92, %struct.md5_ctx* %arrayidx98) #12, !dbg !7758
  %arrayidx99 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7759, !ctir !490
  %arrayidx100 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 0, !dbg !7760, !ctir !487
  %arraydecay101 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx100, i64 0, i64 0, !dbg !7760
  %93 = bitcast i32* %arraydecay101 to i8*, !dbg !7760
  %call102 = call i8* @md5_finish_ctx(%struct.md5_ctx* %arrayidx99, i8* %93) #12, !dbg !7761
  %94 = load i8*, i8** %textb.addr, align 8, !dbg !7762, !tbaa !2355
  %95 = load i64, i64* %lenb.addr, align 8, !dbg !7763, !tbaa !2516
  %arrayidx103 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7764, !ctir !490
  call void @md5_process_bytes(i8* %94, i64 %95, %struct.md5_ctx* %arrayidx103) #12, !dbg !7765
  %arrayidx104 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7766, !ctir !490
  %arrayidx105 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 1, !dbg !7767, !ctir !487
  %arraydecay106 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx105, i64 0, i64 0, !dbg !7767
  %96 = bitcast i32* %arraydecay106 to i8*, !dbg !7767
  %call107 = call i8* @md5_finish_ctx(%struct.md5_ctx* %arrayidx104, i8* %96) #12, !dbg !7768
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7769, metadata !DIExpression()), !dbg !7770
  %arrayidx108 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 0, !dbg !7771, !ctir !487
  %arraydecay109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx108, i64 0, i64 0, !dbg !7771
  %97 = bitcast i32* %arraydecay109 to i8*, !dbg !7771
  %arrayidx110 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 1, !dbg !7772, !ctir !487
  %arraydecay111 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx110, i64 0, i64 0, !dbg !7772
  %98 = bitcast i32* %arraydecay111 to i8*, !dbg !7772
  %call112 = call i32 @memcmp(i8* %97, i8* %98, i64 16) #14, !dbg !7773
  store i32 %call112, i32* %diff, align 4, !dbg !7770, !tbaa !2342
  %99 = load i32, i32* %diff, align 4, !dbg !7774, !tbaa !2342
  %tobool113 = icmp ne i32 %99, 0, !dbg !7774
  br i1 %tobool113, label %if.end133, label %if.then114, !dbg !7776

if.then114:                                       ; preds = %if.end97
  %100 = load i32, i32* %xfrm_diff, align 4, !dbg !7777, !tbaa !2342
  %tobool115 = icmp ne i32 %100, 0, !dbg !7777
  br i1 %tobool115, label %if.end132, label %if.then116, !dbg !7780

if.then116:                                       ; preds = %if.then114
  %101 = load i8*, i8** %texta.addr, align 8, !dbg !7781, !tbaa !2355
  %102 = load i8*, i8** %textb.addr, align 8, !dbg !7783, !tbaa !2355
  %103 = load i64, i64* %lena.addr, align 8, !dbg !7784, !tbaa !2516
  %104 = load i64, i64* %lenb.addr, align 8, !dbg !7784, !tbaa !2516
  %cmp117 = icmp ult i64 %103, %104, !dbg !7784
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !7784

cond.true119:                                     ; preds = %if.then116
  %105 = load i64, i64* %lena.addr, align 8, !dbg !7784, !tbaa !2516
  br label %cond.end121, !dbg !7784

cond.false120:                                    ; preds = %if.then116
  %106 = load i64, i64* %lenb.addr, align 8, !dbg !7784, !tbaa !2516
  br label %cond.end121, !dbg !7784

cond.end121:                                      ; preds = %cond.false120, %cond.true119
  %cond122 = phi i64 [ %105, %cond.true119 ], [ %106, %cond.false120 ], !dbg !7784
  %call123 = call i32 @memcmp(i8* %101, i8* %102, i64 %cond122) #14, !dbg !7785
  store i32 %call123, i32* %xfrm_diff, align 4, !dbg !7786, !tbaa !2342
  %107 = load i32, i32* %xfrm_diff, align 4, !dbg !7787, !tbaa !2342
  %tobool124 = icmp ne i32 %107, 0, !dbg !7787
  br i1 %tobool124, label %if.end131, label %if.then125, !dbg !7789

if.then125:                                       ; preds = %cond.end121
  %108 = load i64, i64* %lena.addr, align 8, !dbg !7790, !tbaa !2516
  %109 = load i64, i64* %lenb.addr, align 8, !dbg !7791, !tbaa !2516
  %cmp126 = icmp ugt i64 %108, %109, !dbg !7792
  %conv127 = zext i1 %cmp126 to i32, !dbg !7792
  %110 = load i64, i64* %lena.addr, align 8, !dbg !7793, !tbaa !2516
  %111 = load i64, i64* %lenb.addr, align 8, !dbg !7794, !tbaa !2516
  %cmp128 = icmp ult i64 %110, %111, !dbg !7795
  %conv129 = zext i1 %cmp128 to i32, !dbg !7795
  %sub130 = sub nsw i32 %conv127, %conv129, !dbg !7796
  store i32 %sub130, i32* %xfrm_diff, align 4, !dbg !7797, !tbaa !2342
  br label %if.end131, !dbg !7798

if.end131:                                        ; preds = %if.then125, %cond.end121
  br label %if.end132, !dbg !7799

if.end132:                                        ; preds = %if.end131, %if.then114
  %112 = load i32, i32* %xfrm_diff, align 4, !dbg !7800, !tbaa !2342
  store i32 %112, i32* %diff, align 4, !dbg !7801, !tbaa !2342
  br label %if.end133, !dbg !7802

if.end133:                                        ; preds = %if.end132, %if.end97
  %113 = load i8*, i8** %allocated, align 8, !dbg !7803, !tbaa !2355
  call void @free(i8* %113) #12, !dbg !7804
  %114 = load i32, i32* %diff, align 4, !dbg !7805, !tbaa !2342
  ret i32 %114, !dbg !7806
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @xstrxfrm(i8* noalias %dest, i8* noalias %src, i64 %destsize) #4 !dbg !7807 !ctir !505 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !486
  %src.addr = alloca i8*, align 8, !ctir !507
  %destsize.addr = alloca i64, align 8, !ctir !52
  %translated_size = alloca i64, align 8, !ctir !52
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store i8* %src, i8** %src.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  store i64 %destsize, i64* %destsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %destsize.addr, metadata !7812, metadata !DIExpression()), !dbg !7813
  %call = call i32* @__errno_location() #16, !dbg !7814
  store i32 0, i32* %call, align 4, !dbg !7815, !tbaa !2342, !ctir !5
  call void @llvm.dbg.declare(metadata i64* %translated_size, metadata !7816, metadata !DIExpression()), !dbg !7817
  %0 = load i8*, i8** %dest.addr, align 8, !dbg !7818, !tbaa !2355
  %1 = load i8*, i8** %src.addr, align 8, !dbg !7819, !tbaa !2355
  %2 = load i64, i64* %destsize.addr, align 8, !dbg !7820, !tbaa !2516
  %call1 = call i64 @strxfrm(i8* %0, i8* %1, i64 %2) #12, !dbg !7821
  store i64 %call1, i64* %translated_size, align 8, !dbg !7817, !tbaa !2516
  %call2 = call i32* @__errno_location() #16, !dbg !7822
  %3 = load i32, i32* %call2, align 4, !dbg !7822, !tbaa !2342, !ctir !5
  %tobool = icmp ne i32 %3, 0, !dbg !7822
  br i1 %tobool, label %if.then, label %if.end, !dbg !7824

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !7825
  %4 = load i32, i32* %call3, align 4, !dbg !7825, !tbaa !2342, !ctir !5
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i64 0, i64 0)) #12, !dbg !7827
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call4), !dbg !7828
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.162, i64 0, i64 0)) #12, !dbg !7829
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call5), !dbg !7830
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.163, i64 0, i64 0)) #12, !dbg !7831
  %5 = load i8*, i8** %src.addr, align 8, !dbg !7831, !tbaa !2355
  %call7 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %5), !dbg !7831
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call6, i8* %call7), !dbg !7831
  unreachable, !dbg !7831

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %translated_size, align 8, !dbg !7832, !tbaa !2516
  ret i64 %6, !dbg !7833
}

; Function Attrs: nounwind
declare dso_local i64 @strxfrm(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @find_unit_order(i8* %number) #9 !dbg !7834 !ctir !477 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %number.addr = alloca i8*, align 8, !ctir !87
  %minus_sign = alloca i8, align 1, !ctir !102
  %p = alloca i8*, align 8, !ctir !87
  %max_digit = alloca i8, align 1, !ctir !317
  %ch = alloca i8, align 1, !ctir !317
  %order = alloca i32, align 4, !ctir !5
  store i8* %number, i8** %number.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %number.addr, metadata !7835, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.declare(metadata i8* %minus_sign, metadata !7837, metadata !DIExpression()), !dbg !7838
  %0 = load i8*, i8** %number.addr, align 8, !dbg !7839, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !7840, !tbaa !2507, !ctir !88
  %conv = sext i8 %1 to i32, !dbg !7840
  %cmp = icmp eq i32 %conv, 45, !dbg !7841
  %frombool = zext i1 %cmp to i8, !dbg !7838
  store i8 %frombool, i8* %minus_sign, align 1, !dbg !7838, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7842, metadata !DIExpression()), !dbg !7843
  %2 = load i8*, i8** %number.addr, align 8, !dbg !7844, !tbaa !2355
  %3 = load i8, i8* %minus_sign, align 1, !dbg !7845, !tbaa !2499
  %tobool = trunc i8 %3 to i1, !dbg !7845
  %conv2 = zext i1 %tobool to i32, !dbg !7845
  %idx.ext = sext i32 %conv2 to i64, !dbg !7846
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !7846
  store i8* %add.ptr, i8** %p, align 8, !dbg !7843, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %max_digit, metadata !7847, metadata !DIExpression()), !dbg !7848
  %call = call zeroext i8 @traverse_raw_number(i8** %p), !dbg !7849
  store i8 %call, i8* %max_digit, align 1, !dbg !7848, !tbaa !2507
  %4 = load i8, i8* %max_digit, align 1, !dbg !7850, !tbaa !2507
  %conv3 = zext i8 %4 to i32, !dbg !7850
  %cmp4 = icmp slt i32 48, %conv3, !dbg !7852
  br i1 %cmp4, label %if.then, label %if.else, !dbg !7853

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !7854, metadata !DIExpression()), !dbg !7856
  %5 = load i8*, i8** %p, align 8, !dbg !7857, !tbaa !2355
  %6 = load i8, i8* %5, align 1, !dbg !7858, !tbaa !2507, !ctir !88
  store i8 %6, i8* %ch, align 1, !dbg !7856, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %order, metadata !7859, metadata !DIExpression()), !dbg !7860
  %7 = load i8, i8* %ch, align 1, !dbg !7861, !tbaa !2507
  %idxprom = zext i8 %7 to i64, !dbg !7862
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [108 x i8], [148 x i8] }>* @unit_order to [256 x i8]*), i64 0, i64 %idxprom, !dbg !7862, !ctir !479
  %8 = load i8, i8* %arrayidx, align 1, !dbg !7862, !tbaa !2507
  %conv6 = sext i8 %8 to i32, !dbg !7862
  store i32 %conv6, i32* %order, align 4, !dbg !7860, !tbaa !2342
  %9 = load i8, i8* %minus_sign, align 1, !dbg !7863, !tbaa !2499
  %tobool7 = trunc i8 %9 to i1, !dbg !7863
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !7863

cond.true:                                        ; preds = %if.then
  %10 = load i32, i32* %order, align 4, !dbg !7864, !tbaa !2342
  %sub = sub nsw i32 0, %10, !dbg !7865
  br label %cond.end, !dbg !7863

cond.false:                                       ; preds = %if.then
  %11 = load i32, i32* %order, align 4, !dbg !7866, !tbaa !2342
  br label %cond.end, !dbg !7863

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %11, %cond.false ], !dbg !7863
  store i32 %cond, i32* %retval, align 4, !dbg !7867
  br label %return, !dbg !7867

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7868
  br label %return, !dbg !7868

return:                                           ; preds = %if.else, %cond.end
  %12 = load i32, i32* %retval, align 4, !dbg !7869
  ret i32 %12, !dbg !7869
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @nan_compare(i8* %sa, i8* %sb) #4 !dbg !7870 !ctir !474 {
entry:
  %sa.addr = alloca i8*, align 8, !ctir !87
  %sb.addr = alloca i8*, align 8, !ctir !87
  %a = alloca x86_fp80, align 16, !ctir !476
  %b = alloca x86_fp80, align 16, !ctir !476
  store i8* %sa, i8** %sa.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %sa.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  store i8* %sb, i8** %sb.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %sb.addr, metadata !7873, metadata !DIExpression()), !dbg !7874
  call void @llvm.dbg.declare(metadata x86_fp80* %a, metadata !7875, metadata !DIExpression()), !dbg !7876
  %0 = bitcast x86_fp80* %a to i8*, !dbg !7877
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !7877
  %1 = load i8*, i8** %sa.addr, align 8, !dbg !7878, !tbaa !2355
  %call = call x86_fp80 @strtold(i8* %1, i8** null) #12, !dbg !7879
  store x86_fp80 %call, x86_fp80* %a, align 16, !dbg !7880, !tbaa !6362
  call void @llvm.dbg.declare(metadata x86_fp80* %b, metadata !7881, metadata !DIExpression()), !dbg !7882
  %2 = bitcast x86_fp80* %b to i8*, !dbg !7883
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false), !dbg !7883
  %3 = load i8*, i8** %sb.addr, align 8, !dbg !7884, !tbaa !2355
  %call1 = call x86_fp80 @strtold(i8* %3, i8** null) #12, !dbg !7885
  store x86_fp80 %call1, x86_fp80* %b, align 16, !dbg !7886, !tbaa !6362
  %4 = bitcast x86_fp80* %a to i8*, !dbg !7887
  %5 = bitcast x86_fp80* %b to i8*, !dbg !7888
  %call2 = call i32 @memcmp(i8* %4, i8* %5, i64 16) #14, !dbg !7889
  ret i32 %call2, !dbg !7890
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @sortlines_thread(i8* %data) #4 !dbg !7891 !ctir !671 {
entry:
  %data.addr = alloca i8*, align 8, !ctir !47
  %args = alloca %struct.thread_args*, align 8, !ctir !673
  store i8* %data, i8** %data.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.declare(metadata %struct.thread_args** %args, metadata !7894, metadata !DIExpression()), !dbg !7895
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7896, !tbaa !2355
  %1 = bitcast i8* %0 to %struct.thread_args*, !dbg !7896
  store %struct.thread_args* %1, %struct.thread_args** %args, align 8, !dbg !7895, !tbaa !2355
  %2 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7897, !tbaa !2355
  %lines = getelementptr inbounds %struct.thread_args, %struct.thread_args* %2, i32 0, i32 0, !dbg !7898, !ctir !674
  %3 = load %struct.line*, %struct.line** %lines, align 8, !dbg !7898, !tbaa !5870, !ctir !462
  %4 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7899, !tbaa !2355
  %nthreads = getelementptr inbounds %struct.thread_args, %struct.thread_args* %4, i32 0, i32 1, !dbg !7900, !ctir !674
  %5 = load i64, i64* %nthreads, align 8, !dbg !7900, !tbaa !5873, !ctir !52
  %6 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7901, !tbaa !2355
  %total_lines = getelementptr inbounds %struct.thread_args, %struct.thread_args* %6, i32 0, i32 2, !dbg !7902, !ctir !674
  %7 = load i64, i64* %total_lines, align 8, !dbg !7902, !tbaa !5875, !ctir !680
  %8 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7903, !tbaa !2355
  %node = getelementptr inbounds %struct.thread_args, %struct.thread_args* %8, i32 0, i32 3, !dbg !7904, !ctir !674
  %9 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !7904, !tbaa !5879, !ctir !682
  %10 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7905, !tbaa !2355
  %queue = getelementptr inbounds %struct.thread_args, %struct.thread_args* %10, i32 0, i32 4, !dbg !7906, !ctir !674
  %11 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue, align 8, !dbg !7906, !tbaa !5881, !ctir !684
  %12 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7907, !tbaa !2355
  %tfp = getelementptr inbounds %struct.thread_args, %struct.thread_args* %12, i32 0, i32 5, !dbg !7908, !ctir !674
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !7908, !tbaa !5883, !ctir !277
  %14 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7909, !tbaa !2355
  %output_temp = getelementptr inbounds %struct.thread_args, %struct.thread_args* %14, i32 0, i32 6, !dbg !7910, !ctir !674
  %15 = load i8*, i8** %output_temp, align 8, !dbg !7910, !tbaa !5885, !ctir !87
  call void @sortlines(%struct.line* %3, i64 %5, i64 %7, %struct.merge_node* %9, %struct.merge_node_queue* %11, %struct._IO_FILE* %13, i8* %15), !dbg !7911
  ret i8* null, !dbg !7912
}

; Function Attrs: nounwind
declare !callback !7913 dso_local i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #2

declare dso_local i32 @pthread_join(i64, i8**) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sequential_sort(%struct.line* noalias %lines, i64 %nlines, %struct.line* noalias %temp, i1 zeroext %to_temp) #4 !dbg !7915 !ctir !687 {
entry:
  %lines.addr = alloca %struct.line*, align 8, !ctir !669
  %nlines.addr = alloca i64, align 8, !ctir !52
  %temp.addr = alloca %struct.line*, align 8, !ctir !669
  %to_temp.addr = alloca i8, align 1, !ctir !102
  %swap = alloca i32, align 4, !ctir !5
  %nlo = alloca i64, align 8, !ctir !52
  %nhi = alloca i64, align 8, !ctir !52
  %lo = alloca %struct.line*, align 8, !ctir !462
  %hi = alloca %struct.line*, align 8, !ctir !462
  %dest = alloca %struct.line*, align 8, !ctir !462
  %sorted_lo = alloca %struct.line*, align 8, !ctir !440
  store %struct.line* %lines, %struct.line** %lines.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %lines.addr, metadata !7916, metadata !DIExpression()), !dbg !7917
  store i64 %nlines, i64* %nlines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nlines.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store %struct.line* %temp, %struct.line** %temp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %temp.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  %frombool = zext i1 %to_temp to i8
  store i8 %frombool, i8* %to_temp.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %to_temp.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  %0 = load i64, i64* %nlines.addr, align 8, !dbg !7924, !tbaa !2516
  %cmp = icmp eq i64 %0, 2, !dbg !7926
  br i1 %cmp, label %if.then, label %if.else18, !dbg !7927

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %swap, metadata !7928, metadata !DIExpression()), !dbg !7930
  %1 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7931, !tbaa !2355
  %arrayidx = getelementptr inbounds %struct.line, %struct.line* %1, i64 -1, !dbg !7931, !ctir !462
  %2 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7932, !tbaa !2355
  %arrayidx1 = getelementptr inbounds %struct.line, %struct.line* %2, i64 -2, !dbg !7932, !ctir !462
  %call = call i32 @compare(%struct.line* %arrayidx, %struct.line* %arrayidx1), !dbg !7933
  %cmp2 = icmp slt i32 0, %call, !dbg !7934
  %conv = zext i1 %cmp2 to i32, !dbg !7934
  store i32 %conv, i32* %swap, align 4, !dbg !7930, !tbaa !2342
  %3 = load i8, i8* %to_temp.addr, align 1, !dbg !7935, !tbaa !2499
  %tobool = trunc i8 %3 to i1, !dbg !7935
  br i1 %tobool, label %if.then3, label %if.else, !dbg !7937

if.then3:                                         ; preds = %if.then
  %4 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7938, !tbaa !2355
  %arrayidx4 = getelementptr inbounds %struct.line, %struct.line* %4, i64 -1, !dbg !7938, !ctir !462
  %5 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7940, !tbaa !2355
  %6 = load i32, i32* %swap, align 4, !dbg !7941, !tbaa !2342
  %sub = sub nsw i32 -1, %6, !dbg !7942
  %idxprom = sext i32 %sub to i64, !dbg !7940
  %arrayidx5 = getelementptr inbounds %struct.line, %struct.line* %5, i64 %idxprom, !dbg !7940, !ctir !462
  %7 = bitcast %struct.line* %arrayidx4 to i8*, !dbg !7940
  %8 = bitcast %struct.line* %arrayidx5 to i8*, !dbg !7940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !7940, !tbaa.struct !6003
  %9 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7943, !tbaa !2355
  %arrayidx6 = getelementptr inbounds %struct.line, %struct.line* %9, i64 -2, !dbg !7943, !ctir !462
  %10 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7944, !tbaa !2355
  %11 = load i32, i32* %swap, align 4, !dbg !7945, !tbaa !2342
  %add = add nsw i32 -2, %11, !dbg !7946
  %idxprom7 = sext i32 %add to i64, !dbg !7944
  %arrayidx8 = getelementptr inbounds %struct.line, %struct.line* %10, i64 %idxprom7, !dbg !7944, !ctir !462
  %12 = bitcast %struct.line* %arrayidx6 to i8*, !dbg !7944
  %13 = bitcast %struct.line* %arrayidx8 to i8*, !dbg !7944
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !7944, !tbaa.struct !6003
  br label %if.end17, !dbg !7947

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %swap, align 4, !dbg !7948, !tbaa !2342
  %tobool9 = icmp ne i32 %14, 0, !dbg !7948
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7950

if.then10:                                        ; preds = %if.else
  %15 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7951, !tbaa !2355
  %arrayidx11 = getelementptr inbounds %struct.line, %struct.line* %15, i64 -1, !dbg !7951, !ctir !462
  %16 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7953, !tbaa !2355
  %arrayidx12 = getelementptr inbounds %struct.line, %struct.line* %16, i64 -1, !dbg !7953, !ctir !462
  %17 = bitcast %struct.line* %arrayidx11 to i8*, !dbg !7953
  %18 = bitcast %struct.line* %arrayidx12 to i8*, !dbg !7953
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false), !dbg !7953, !tbaa.struct !6003
  %19 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7954, !tbaa !2355
  %arrayidx13 = getelementptr inbounds %struct.line, %struct.line* %19, i64 -1, !dbg !7954, !ctir !462
  %20 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7955, !tbaa !2355
  %arrayidx14 = getelementptr inbounds %struct.line, %struct.line* %20, i64 -2, !dbg !7955, !ctir !462
  %21 = bitcast %struct.line* %arrayidx13 to i8*, !dbg !7955
  %22 = bitcast %struct.line* %arrayidx14 to i8*, !dbg !7955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false), !dbg !7955, !tbaa.struct !6003
  %23 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7956, !tbaa !2355
  %arrayidx15 = getelementptr inbounds %struct.line, %struct.line* %23, i64 -2, !dbg !7956, !ctir !462
  %24 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7957, !tbaa !2355
  %arrayidx16 = getelementptr inbounds %struct.line, %struct.line* %24, i64 -1, !dbg !7957, !ctir !462
  %25 = bitcast %struct.line* %arrayidx15 to i8*, !dbg !7957
  %26 = bitcast %struct.line* %arrayidx16 to i8*, !dbg !7957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false), !dbg !7957, !tbaa.struct !6003
  br label %if.end, !dbg !7958

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then3
  br label %if.end40, !dbg !7959

if.else18:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %nlo, metadata !7960, metadata !DIExpression()), !dbg !7962
  %27 = load i64, i64* %nlines.addr, align 8, !dbg !7963, !tbaa !2516
  %div = udiv i64 %27, 2, !dbg !7964
  store i64 %div, i64* %nlo, align 8, !dbg !7962, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nhi, metadata !7965, metadata !DIExpression()), !dbg !7966
  %28 = load i64, i64* %nlines.addr, align 8, !dbg !7967, !tbaa !2516
  %29 = load i64, i64* %nlo, align 8, !dbg !7968, !tbaa !2516
  %sub19 = sub i64 %28, %29, !dbg !7969
  store i64 %sub19, i64* %nhi, align 8, !dbg !7966, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.line** %lo, metadata !7970, metadata !DIExpression()), !dbg !7971
  %30 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7972, !tbaa !2355
  store %struct.line* %30, %struct.line** %lo, align 8, !dbg !7971, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %hi, metadata !7973, metadata !DIExpression()), !dbg !7974
  %31 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7975, !tbaa !2355
  %32 = load i64, i64* %nlo, align 8, !dbg !7976, !tbaa !2516
  %idx.neg = sub i64 0, %32, !dbg !7977
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %31, i64 %idx.neg, !dbg !7977
  store %struct.line* %add.ptr, %struct.line** %hi, align 8, !dbg !7974, !tbaa !2355
  %33 = load %struct.line*, %struct.line** %hi, align 8, !dbg !7978, !tbaa !2355
  %34 = load i64, i64* %nhi, align 8, !dbg !7979, !tbaa !2516
  %35 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7980, !tbaa !2355
  %36 = load i8, i8* %to_temp.addr, align 1, !dbg !7981, !tbaa !2499
  %tobool20 = trunc i8 %36 to i1, !dbg !7981
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !7981

cond.true:                                        ; preds = %if.else18
  %37 = load i64, i64* %nlo, align 8, !dbg !7982, !tbaa !2516
  br label %cond.end, !dbg !7981

cond.false:                                       ; preds = %if.else18
  br label %cond.end, !dbg !7981

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %37, %cond.true ], [ 0, %cond.false ], !dbg !7981
  %idx.neg22 = sub i64 0, %cond, !dbg !7983
  %add.ptr23 = getelementptr inbounds %struct.line, %struct.line* %35, i64 %idx.neg22, !dbg !7983
  %38 = load i8, i8* %to_temp.addr, align 1, !dbg !7984, !tbaa !2499
  %tobool24 = trunc i8 %38 to i1, !dbg !7984
  call void @sequential_sort(%struct.line* %33, i64 %34, %struct.line* %add.ptr23, i1 zeroext %tobool24), !dbg !7985
  %39 = load i64, i64* %nlo, align 8, !dbg !7986, !tbaa !2516
  %cmp25 = icmp ult i64 1, %39, !dbg !7988
  br i1 %cmp25, label %if.then27, label %if.else29, !dbg !7989

if.then27:                                        ; preds = %cond.end
  %40 = load %struct.line*, %struct.line** %lo, align 8, !dbg !7990, !tbaa !2355
  %41 = load i64, i64* %nlo, align 8, !dbg !7991, !tbaa !2516
  %42 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7992, !tbaa !2355
  %43 = load i8, i8* %to_temp.addr, align 1, !dbg !7993, !tbaa !2499
  %tobool28 = trunc i8 %43 to i1, !dbg !7993
  %lnot = xor i1 %tobool28, true, !dbg !7994
  call void @sequential_sort(%struct.line* %40, i64 %41, %struct.line* %42, i1 zeroext %lnot), !dbg !7995
  br label %if.end35, !dbg !7995

if.else29:                                        ; preds = %cond.end
  %44 = load i8, i8* %to_temp.addr, align 1, !dbg !7996, !tbaa !2499
  %tobool30 = trunc i8 %44 to i1, !dbg !7996
  br i1 %tobool30, label %if.end34, label %if.then31, !dbg !7998

if.then31:                                        ; preds = %if.else29
  %45 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7999, !tbaa !2355
  %arrayidx32 = getelementptr inbounds %struct.line, %struct.line* %45, i64 -1, !dbg !7999, !ctir !462
  %46 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8000, !tbaa !2355
  %arrayidx33 = getelementptr inbounds %struct.line, %struct.line* %46, i64 -1, !dbg !8000, !ctir !462
  %47 = bitcast %struct.line* %arrayidx32 to i8*, !dbg !8000
  %48 = bitcast %struct.line* %arrayidx33 to i8*, !dbg !8000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 32, i1 false), !dbg !8000, !tbaa.struct !6003
  br label %if.end34, !dbg !7999

if.end34:                                         ; preds = %if.then31, %if.else29
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then27
  call void @llvm.dbg.declare(metadata %struct.line** %dest, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata %struct.line** %sorted_lo, metadata !8003, metadata !DIExpression()), !dbg !8004
  %49 = load i8, i8* %to_temp.addr, align 1, !dbg !8005, !tbaa !2499
  %tobool36 = trunc i8 %49 to i1, !dbg !8005
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !8007

if.then37:                                        ; preds = %if.end35
  %50 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !8008, !tbaa !2355
  store %struct.line* %50, %struct.line** %dest, align 8, !dbg !8010, !tbaa !2355
  %51 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !8011, !tbaa !2355
  store %struct.line* %51, %struct.line** %sorted_lo, align 8, !dbg !8012, !tbaa !2355
  br label %if.end39, !dbg !8013

if.else38:                                        ; preds = %if.end35
  %52 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !8014, !tbaa !2355
  store %struct.line* %52, %struct.line** %dest, align 8, !dbg !8016, !tbaa !2355
  %53 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !8017, !tbaa !2355
  store %struct.line* %53, %struct.line** %sorted_lo, align 8, !dbg !8018, !tbaa !2355
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then37
  %54 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8019, !tbaa !2355
  %55 = load i64, i64* %nlines.addr, align 8, !dbg !8020, !tbaa !2516
  %56 = load %struct.line*, %struct.line** %sorted_lo, align 8, !dbg !8021, !tbaa !2355
  call void @mergelines(%struct.line* %54, i64 %55, %struct.line* %56), !dbg !8022
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end17
  ret void, !dbg !8023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_insert(%struct.merge_node_queue* %queue, %struct.merge_node* %node) #4 !dbg !8024 !ctir !692 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !577
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8025, metadata !DIExpression()), !dbg !8026
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8027, metadata !DIExpression()), !dbg !8028
  %0 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8029, !tbaa !2355
  %mutex = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %0, i32 0, i32 1, !dbg !8030, !ctir !631
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %mutex) #12, !dbg !8031
  %1 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8032, !tbaa !2355
  %priority_queue = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %1, i32 0, i32 0, !dbg !8033, !ctir !631
  %2 = load %struct.heap*, %struct.heap** %priority_queue, align 8, !dbg !8033, !tbaa !5755, !ctir !634
  %3 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8034, !tbaa !2355
  %4 = bitcast %struct.merge_node* %3 to i8*, !dbg !8034
  %call1 = call i32 @heap_insert(%struct.heap* %2, i8* %4), !dbg !8035
  %5 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8036, !tbaa !2355
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 11, !dbg !8037, !ctir !578
  store i8 1, i8* %queued, align 4, !dbg !8038, !tbaa !5820, !ctir !102
  %6 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8039, !tbaa !2355
  %cond = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %6, i32 0, i32 2, !dbg !8040, !ctir !631
  %call2 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %cond) #12, !dbg !8041
  %7 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8042, !tbaa !2355
  %mutex3 = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %7, i32 0, i32 1, !dbg !8043, !ctir !631
  %call4 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %mutex3) #12, !dbg !8044
  ret void, !dbg !8045
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @merge_loop(%struct.merge_node_queue* %queue, i64 %total_lines, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !8046 !ctir !694 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %total_lines.addr = alloca i64, align 8, !ctir !52
  %tfp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp_output.addr = alloca i8*, align 8, !ctir !87
  %node = alloca %struct.merge_node*, align 8, !ctir !577
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !8049, metadata !DIExpression()), !dbg !8050
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !8051, metadata !DIExpression()), !dbg !8052
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  br label %while.body, !dbg !8055

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node, metadata !8056, metadata !DIExpression()), !dbg !8058
  %0 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8059, !tbaa !2355
  %call = call %struct.merge_node* @queue_pop(%struct.merge_node_queue* %0), !dbg !8060
  store %struct.merge_node* %call, %struct.merge_node** %node, align 8, !dbg !8058, !tbaa !2355
  %1 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8061, !tbaa !2355
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %1, i32 0, i32 10, !dbg !8063, !ctir !578
  %2 = load i32, i32* %level, align 8, !dbg !8063, !tbaa !5816, !ctir !66
  %cmp = icmp eq i32 %2, 0, !dbg !8064
  br i1 %cmp, label %if.then, label %if.end, !dbg !8065

if.then:                                          ; preds = %while.body
  %3 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8066, !tbaa !2355
  call void @unlock_node(%struct.merge_node* %3), !dbg !8068
  %4 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8069, !tbaa !2355
  %5 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8070, !tbaa !2355
  call void @queue_insert(%struct.merge_node_queue* %4, %struct.merge_node* %5), !dbg !8071
  br label %while.end, !dbg !8072

if.end:                                           ; preds = %while.body
  %6 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8073, !tbaa !2355
  %7 = load i64, i64* %total_lines.addr, align 8, !dbg !8074, !tbaa !2516
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8075, !tbaa !2355
  %9 = load i8*, i8** %temp_output.addr, align 8, !dbg !8076, !tbaa !2355
  call void @mergelines_node(%struct.merge_node* %6, i64 %7, %struct._IO_FILE* %8, i8* %9), !dbg !8077
  %10 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8078, !tbaa !2355
  %11 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8079, !tbaa !2355
  call void @queue_check_insert(%struct.merge_node_queue* %10, %struct.merge_node* %11), !dbg !8080
  %12 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8081, !tbaa !2355
  %13 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8082, !tbaa !2355
  call void @queue_check_insert_parent(%struct.merge_node_queue* %12, %struct.merge_node* %13), !dbg !8083
  %14 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8084, !tbaa !2355
  call void @unlock_node(%struct.merge_node* %14), !dbg !8085
  br label %while.body, !dbg !8055, !llvm.loop !8086

while.end:                                        ; preds = %if.then
  ret void, !dbg !8088
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.merge_node* @queue_pop(%struct.merge_node_queue* %queue) #4 !dbg !8089 !ctir !696 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %node = alloca %struct.merge_node*, align 8, !ctir !577
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8090, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node, metadata !8092, metadata !DIExpression()), !dbg !8093
  %0 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8094, !tbaa !2355
  %mutex = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %0, i32 0, i32 1, !dbg !8095, !ctir !631
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %mutex) #12, !dbg !8096
  br label %while.cond, !dbg !8097

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8098, !tbaa !2355
  %priority_queue = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %1, i32 0, i32 0, !dbg !8099, !ctir !631
  %2 = load %struct.heap*, %struct.heap** %priority_queue, align 8, !dbg !8099, !tbaa !5755, !ctir !634
  %call1 = call i8* @heap_remove_top(%struct.heap* %2), !dbg !8100
  %3 = bitcast i8* %call1 to %struct.merge_node*, !dbg !8100
  store %struct.merge_node* %3, %struct.merge_node** %node, align 8, !dbg !8101, !tbaa !2355
  %tobool = icmp ne %struct.merge_node* %3, null, !dbg !8102
  %lnot = xor i1 %tobool, true, !dbg !8102
  br i1 %lnot, label %while.body, label %while.end, !dbg !8097

while.body:                                       ; preds = %while.cond
  %4 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8103, !tbaa !2355
  %cond = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %4, i32 0, i32 2, !dbg !8104, !ctir !631
  %5 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8105, !tbaa !2355
  %mutex2 = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %5, i32 0, i32 1, !dbg !8106, !ctir !631
  %call3 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %cond, %union.pthread_mutex_t* %mutex2), !dbg !8107
  br label %while.cond, !dbg !8097, !llvm.loop !8108

while.end:                                        ; preds = %while.cond
  %6 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8110, !tbaa !2355
  %mutex4 = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %6, i32 0, i32 1, !dbg !8111, !ctir !631
  %call5 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %mutex4) #12, !dbg !8112
  %7 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8113, !tbaa !2355
  call void @lock_node(%struct.merge_node* %7), !dbg !8114
  %8 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8115, !tbaa !2355
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %8, i32 0, i32 11, !dbg !8116, !ctir !578
  store i8 0, i8* %queued, align 4, !dbg !8117, !tbaa !5820, !ctir !102
  %9 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8118, !tbaa !2355
  ret %struct.merge_node* %9, !dbg !8119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @unlock_node(%struct.merge_node* %node) #4 !dbg !8120 !ctir !698 {
entry:
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !577
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8123, !tbaa !2355
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 12, !dbg !8124, !ctir !578
  %call = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %lock) #12, !dbg !8125
  ret void, !dbg !8126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mergelines_node(%struct.merge_node* noalias %node, i64 %total_lines, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !8127 !ctir !700 {
entry:
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !666
  %total_lines.addr = alloca i64, align 8, !ctir !52
  %tfp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp_output.addr = alloca i8*, align 8, !ctir !87
  %lo_orig = alloca %struct.line*, align 8, !ctir !462
  %hi_orig = alloca %struct.line*, align 8, !ctir !462
  %to_merge = alloca i64, align 8, !ctir !52
  %merged_lo = alloca i64, align 8, !ctir !52
  %merged_hi = alloca i64, align 8, !ctir !52
  %dest = alloca %struct.line*, align 8, !ctir !462
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !8130, metadata !DIExpression()), !dbg !8131
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.declare(metadata %struct.line** %lo_orig, metadata !8136, metadata !DIExpression()), !dbg !8137
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8138, !tbaa !2355
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 0, !dbg !8139, !ctir !578
  %1 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8139, !tbaa !5795, !ctir !462
  store %struct.line* %1, %struct.line** %lo_orig, align 8, !dbg !8137, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %hi_orig, metadata !8140, metadata !DIExpression()), !dbg !8141
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8142, !tbaa !2355
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 1, !dbg !8143, !ctir !578
  %3 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8143, !tbaa !5791, !ctir !462
  store %struct.line* %3, %struct.line** %hi_orig, align 8, !dbg !8141, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %to_merge, metadata !8144, metadata !DIExpression()), !dbg !8145
  %4 = load i64, i64* %total_lines.addr, align 8, !dbg !8146, !tbaa !2516
  %5 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8146, !tbaa !2355
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 10, !dbg !8146, !ctir !578
  %6 = load i32, i32* %level, align 8, !dbg !8146, !tbaa !5816, !ctir !66
  %add = add i32 %6, 1, !dbg !8146
  %mul = mul i32 2, %add, !dbg !8146
  %sh_prom = zext i32 %mul to i64, !dbg !8146
  %shr = lshr i64 %4, %sh_prom, !dbg !8146
  %add1 = add i64 %shr, 1, !dbg !8146
  store i64 %add1, i64* %to_merge, align 8, !dbg !8145, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %merged_lo, metadata !8147, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.declare(metadata i64* %merged_hi, metadata !8149, metadata !DIExpression()), !dbg !8150
  %7 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8151, !tbaa !2355
  %level2 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %7, i32 0, i32 10, !dbg !8153, !ctir !578
  %8 = load i32, i32* %level2, align 8, !dbg !8153, !tbaa !5816, !ctir !66
  %cmp = icmp ugt i32 %8, 1, !dbg !8154
  br i1 %cmp, label %if.then, label %if.else58, !dbg !8155

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.line** %dest, metadata !8156, metadata !DIExpression()), !dbg !8158
  %9 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8159, !tbaa !2355
  %dest3 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %9, i32 0, i32 4, !dbg !8160, !ctir !578
  %10 = load %struct.line**, %struct.line*** %dest3, align 8, !dbg !8160, !tbaa !5799, !ctir !585
  %11 = load %struct.line*, %struct.line** %10, align 8, !dbg !8161, !tbaa !2355, !ctir !462
  store %struct.line* %11, %struct.line** %dest, align 8, !dbg !8158, !tbaa !2355
  br label %while.cond, !dbg !8162

while.cond:                                       ; preds = %if.end, %if.then
  %12 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8163, !tbaa !2355
  %lo4 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 0, !dbg !8164, !ctir !578
  %13 = load %struct.line*, %struct.line** %lo4, align 8, !dbg !8164, !tbaa !5795, !ctir !462
  %14 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8165, !tbaa !2355
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 2, !dbg !8166, !ctir !578
  %15 = load %struct.line*, %struct.line** %end_lo, align 8, !dbg !8166, !tbaa !5787, !ctir !462
  %cmp5 = icmp ne %struct.line* %13, %15, !dbg !8167
  br i1 %cmp5, label %land.lhs.true, label %land.end, !dbg !8168

land.lhs.true:                                    ; preds = %while.cond
  %16 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8169, !tbaa !2355
  %hi6 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %16, i32 0, i32 1, !dbg !8170, !ctir !578
  %17 = load %struct.line*, %struct.line** %hi6, align 8, !dbg !8170, !tbaa !5791, !ctir !462
  %18 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8171, !tbaa !2355
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %18, i32 0, i32 3, !dbg !8172, !ctir !578
  %19 = load %struct.line*, %struct.line** %end_hi, align 8, !dbg !8172, !tbaa !5782, !ctir !462
  %cmp7 = icmp ne %struct.line* %17, %19, !dbg !8173
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !8174

land.rhs:                                         ; preds = %land.lhs.true
  %20 = load i64, i64* %to_merge, align 8, !dbg !8175, !tbaa !2516
  %dec = add i64 %20, -1, !dbg !8175
  store i64 %dec, i64* %to_merge, align 8, !dbg !8175, !tbaa !2516
  %tobool = icmp ne i64 %20, 0, !dbg !8174
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %21 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !8176
  br i1 %21, label %while.body, label %while.end, !dbg !8162

while.body:                                       ; preds = %land.end
  %22 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8177, !tbaa !2355
  %lo8 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %22, i32 0, i32 0, !dbg !8179, !ctir !578
  %23 = load %struct.line*, %struct.line** %lo8, align 8, !dbg !8179, !tbaa !5795, !ctir !462
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %23, i64 -1, !dbg !8180
  %24 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8181, !tbaa !2355
  %hi9 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %24, i32 0, i32 1, !dbg !8182, !ctir !578
  %25 = load %struct.line*, %struct.line** %hi9, align 8, !dbg !8182, !tbaa !5791, !ctir !462
  %add.ptr10 = getelementptr inbounds %struct.line, %struct.line* %25, i64 -1, !dbg !8183
  %call = call i32 @compare(%struct.line* %add.ptr, %struct.line* %add.ptr10), !dbg !8184
  %cmp11 = icmp sle i32 %call, 0, !dbg !8185
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !8186

if.then12:                                        ; preds = %while.body
  %26 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8187, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.line, %struct.line* %26, i32 -1, !dbg !8187
  store %struct.line* %incdec.ptr, %struct.line** %dest, align 8, !dbg !8187, !tbaa !2355
  %27 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8188, !tbaa !2355
  %lo13 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %27, i32 0, i32 0, !dbg !8189, !ctir !578
  %28 = load %struct.line*, %struct.line** %lo13, align 8, !dbg !8190, !tbaa !5795, !ctir !462
  %incdec.ptr14 = getelementptr inbounds %struct.line, %struct.line* %28, i32 -1, !dbg !8190
  store %struct.line* %incdec.ptr14, %struct.line** %lo13, align 8, !dbg !8190, !tbaa !5795, !ctir !462
  %29 = bitcast %struct.line* %incdec.ptr to i8*, !dbg !8191
  %30 = bitcast %struct.line* %incdec.ptr14 to i8*, !dbg !8191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 32, i1 false), !dbg !8191, !tbaa.struct !6003
  br label %if.end, !dbg !8192

if.else:                                          ; preds = %while.body
  %31 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8193, !tbaa !2355
  %incdec.ptr15 = getelementptr inbounds %struct.line, %struct.line* %31, i32 -1, !dbg !8193
  store %struct.line* %incdec.ptr15, %struct.line** %dest, align 8, !dbg !8193, !tbaa !2355
  %32 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8194, !tbaa !2355
  %hi16 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %32, i32 0, i32 1, !dbg !8195, !ctir !578
  %33 = load %struct.line*, %struct.line** %hi16, align 8, !dbg !8196, !tbaa !5791, !ctir !462
  %incdec.ptr17 = getelementptr inbounds %struct.line, %struct.line* %33, i32 -1, !dbg !8196
  store %struct.line* %incdec.ptr17, %struct.line** %hi16, align 8, !dbg !8196, !tbaa !5791, !ctir !462
  %34 = bitcast %struct.line* %incdec.ptr15 to i8*, !dbg !8197
  %35 = bitcast %struct.line* %incdec.ptr17 to i8*, !dbg !8197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 32, i1 false), !dbg !8197, !tbaa.struct !6003
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  br label %while.cond, !dbg !8162, !llvm.loop !8198

while.end:                                        ; preds = %land.end
  %36 = load %struct.line*, %struct.line** %lo_orig, align 8, !dbg !8200, !tbaa !2355
  %37 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8201, !tbaa !2355
  %lo18 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %37, i32 0, i32 0, !dbg !8202, !ctir !578
  %38 = load %struct.line*, %struct.line** %lo18, align 8, !dbg !8202, !tbaa !5795, !ctir !462
  %sub.ptr.lhs.cast = ptrtoint %struct.line* %36 to i64, !dbg !8203
  %sub.ptr.rhs.cast = ptrtoint %struct.line* %38 to i64, !dbg !8203
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8203
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !8203
  store i64 %sub.ptr.div, i64* %merged_lo, align 8, !dbg !8204, !tbaa !2516
  %39 = load %struct.line*, %struct.line** %hi_orig, align 8, !dbg !8205, !tbaa !2355
  %40 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8206, !tbaa !2355
  %hi19 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %40, i32 0, i32 1, !dbg !8207, !ctir !578
  %41 = load %struct.line*, %struct.line** %hi19, align 8, !dbg !8207, !tbaa !5791, !ctir !462
  %sub.ptr.lhs.cast20 = ptrtoint %struct.line* %39 to i64, !dbg !8208
  %sub.ptr.rhs.cast21 = ptrtoint %struct.line* %41 to i64, !dbg !8208
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !8208
  %sub.ptr.div23 = sdiv exact i64 %sub.ptr.sub22, 32, !dbg !8208
  store i64 %sub.ptr.div23, i64* %merged_hi, align 8, !dbg !8209, !tbaa !2516
  %42 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8210, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %42, i32 0, i32 6, !dbg !8212, !ctir !578
  %43 = load i64, i64* %nhi, align 8, !dbg !8212, !tbaa !5804, !ctir !52
  %44 = load i64, i64* %merged_hi, align 8, !dbg !8213, !tbaa !2516
  %cmp24 = icmp eq i64 %43, %44, !dbg !8214
  br i1 %cmp24, label %if.then25, label %if.else39, !dbg !8215

if.then25:                                        ; preds = %while.end
  br label %while.cond26, !dbg !8216

while.cond26:                                     ; preds = %while.body34, %if.then25
  %45 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8217, !tbaa !2355
  %lo27 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %45, i32 0, i32 0, !dbg !8218, !ctir !578
  %46 = load %struct.line*, %struct.line** %lo27, align 8, !dbg !8218, !tbaa !5795, !ctir !462
  %47 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8219, !tbaa !2355
  %end_lo28 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %47, i32 0, i32 2, !dbg !8220, !ctir !578
  %48 = load %struct.line*, %struct.line** %end_lo28, align 8, !dbg !8220, !tbaa !5787, !ctir !462
  %cmp29 = icmp ne %struct.line* %46, %48, !dbg !8221
  br i1 %cmp29, label %land.rhs30, label %land.end33, !dbg !8222

land.rhs30:                                       ; preds = %while.cond26
  %49 = load i64, i64* %to_merge, align 8, !dbg !8223, !tbaa !2516
  %dec31 = add i64 %49, -1, !dbg !8223
  store i64 %dec31, i64* %to_merge, align 8, !dbg !8223, !tbaa !2516
  %tobool32 = icmp ne i64 %49, 0, !dbg !8222
  br label %land.end33

land.end33:                                       ; preds = %land.rhs30, %while.cond26
  %50 = phi i1 [ false, %while.cond26 ], [ %tobool32, %land.rhs30 ], !dbg !8224
  br i1 %50, label %while.body34, label %while.end38, !dbg !8216

while.body34:                                     ; preds = %land.end33
  %51 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8225, !tbaa !2355
  %incdec.ptr35 = getelementptr inbounds %struct.line, %struct.line* %51, i32 -1, !dbg !8225
  store %struct.line* %incdec.ptr35, %struct.line** %dest, align 8, !dbg !8225, !tbaa !2355
  %52 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8226, !tbaa !2355
  %lo36 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %52, i32 0, i32 0, !dbg !8227, !ctir !578
  %53 = load %struct.line*, %struct.line** %lo36, align 8, !dbg !8228, !tbaa !5795, !ctir !462
  %incdec.ptr37 = getelementptr inbounds %struct.line, %struct.line* %53, i32 -1, !dbg !8228
  store %struct.line* %incdec.ptr37, %struct.line** %lo36, align 8, !dbg !8228, !tbaa !5795, !ctir !462
  %54 = bitcast %struct.line* %incdec.ptr35 to i8*, !dbg !8229
  %55 = bitcast %struct.line* %incdec.ptr37 to i8*, !dbg !8229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false), !dbg !8229, !tbaa.struct !6003
  br label %while.cond26, !dbg !8216, !llvm.loop !8230

while.end38:                                      ; preds = %land.end33
  br label %if.end56, !dbg !8216

if.else39:                                        ; preds = %while.end
  %56 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8231, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %56, i32 0, i32 5, !dbg !8233, !ctir !578
  %57 = load i64, i64* %nlo, align 8, !dbg !8233, !tbaa !5808, !ctir !52
  %58 = load i64, i64* %merged_lo, align 8, !dbg !8234, !tbaa !2516
  %cmp40 = icmp eq i64 %57, %58, !dbg !8235
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !8236

if.then41:                                        ; preds = %if.else39
  br label %while.cond42, !dbg !8237

while.cond42:                                     ; preds = %while.body50, %if.then41
  %59 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8238, !tbaa !2355
  %hi43 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %59, i32 0, i32 1, !dbg !8239, !ctir !578
  %60 = load %struct.line*, %struct.line** %hi43, align 8, !dbg !8239, !tbaa !5791, !ctir !462
  %61 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8240, !tbaa !2355
  %end_hi44 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %61, i32 0, i32 3, !dbg !8241, !ctir !578
  %62 = load %struct.line*, %struct.line** %end_hi44, align 8, !dbg !8241, !tbaa !5782, !ctir !462
  %cmp45 = icmp ne %struct.line* %60, %62, !dbg !8242
  br i1 %cmp45, label %land.rhs46, label %land.end49, !dbg !8243

land.rhs46:                                       ; preds = %while.cond42
  %63 = load i64, i64* %to_merge, align 8, !dbg !8244, !tbaa !2516
  %dec47 = add i64 %63, -1, !dbg !8244
  store i64 %dec47, i64* %to_merge, align 8, !dbg !8244, !tbaa !2516
  %tobool48 = icmp ne i64 %63, 0, !dbg !8243
  br label %land.end49

land.end49:                                       ; preds = %land.rhs46, %while.cond42
  %64 = phi i1 [ false, %while.cond42 ], [ %tobool48, %land.rhs46 ], !dbg !8245
  br i1 %64, label %while.body50, label %while.end54, !dbg !8237

while.body50:                                     ; preds = %land.end49
  %65 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8246, !tbaa !2355
  %incdec.ptr51 = getelementptr inbounds %struct.line, %struct.line* %65, i32 -1, !dbg !8246
  store %struct.line* %incdec.ptr51, %struct.line** %dest, align 8, !dbg !8246, !tbaa !2355
  %66 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8247, !tbaa !2355
  %hi52 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %66, i32 0, i32 1, !dbg !8248, !ctir !578
  %67 = load %struct.line*, %struct.line** %hi52, align 8, !dbg !8249, !tbaa !5791, !ctir !462
  %incdec.ptr53 = getelementptr inbounds %struct.line, %struct.line* %67, i32 -1, !dbg !8249
  store %struct.line* %incdec.ptr53, %struct.line** %hi52, align 8, !dbg !8249, !tbaa !5791, !ctir !462
  %68 = bitcast %struct.line* %incdec.ptr51 to i8*, !dbg !8250
  %69 = bitcast %struct.line* %incdec.ptr53 to i8*, !dbg !8250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 32, i1 false), !dbg !8250, !tbaa.struct !6003
  br label %while.cond42, !dbg !8237, !llvm.loop !8251

while.end54:                                      ; preds = %land.end49
  br label %if.end55, !dbg !8237

if.end55:                                         ; preds = %while.end54, %if.else39
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %while.end38
  %70 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8252, !tbaa !2355
  %71 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8253, !tbaa !2355
  %dest57 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %71, i32 0, i32 4, !dbg !8254, !ctir !578
  %72 = load %struct.line**, %struct.line*** %dest57, align 8, !dbg !8254, !tbaa !5799, !ctir !585
  store %struct.line* %70, %struct.line** %72, align 8, !dbg !8255, !tbaa !2355, !ctir !462
  br label %if.end129, !dbg !8256

if.else58:                                        ; preds = %entry
  br label %while.cond59, !dbg !8257

while.cond59:                                     ; preds = %if.end84, %if.else58
  %73 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8259, !tbaa !2355
  %lo60 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %73, i32 0, i32 0, !dbg !8260, !ctir !578
  %74 = load %struct.line*, %struct.line** %lo60, align 8, !dbg !8260, !tbaa !5795, !ctir !462
  %75 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8261, !tbaa !2355
  %end_lo61 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %75, i32 0, i32 2, !dbg !8262, !ctir !578
  %76 = load %struct.line*, %struct.line** %end_lo61, align 8, !dbg !8262, !tbaa !5787, !ctir !462
  %cmp62 = icmp ne %struct.line* %74, %76, !dbg !8263
  br i1 %cmp62, label %land.lhs.true63, label %land.end70, !dbg !8264

land.lhs.true63:                                  ; preds = %while.cond59
  %77 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8265, !tbaa !2355
  %hi64 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %77, i32 0, i32 1, !dbg !8266, !ctir !578
  %78 = load %struct.line*, %struct.line** %hi64, align 8, !dbg !8266, !tbaa !5791, !ctir !462
  %79 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8267, !tbaa !2355
  %end_hi65 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %79, i32 0, i32 3, !dbg !8268, !ctir !578
  %80 = load %struct.line*, %struct.line** %end_hi65, align 8, !dbg !8268, !tbaa !5782, !ctir !462
  %cmp66 = icmp ne %struct.line* %78, %80, !dbg !8269
  br i1 %cmp66, label %land.rhs67, label %land.end70, !dbg !8270

land.rhs67:                                       ; preds = %land.lhs.true63
  %81 = load i64, i64* %to_merge, align 8, !dbg !8271, !tbaa !2516
  %dec68 = add i64 %81, -1, !dbg !8271
  store i64 %dec68, i64* %to_merge, align 8, !dbg !8271, !tbaa !2516
  %tobool69 = icmp ne i64 %81, 0, !dbg !8270
  br label %land.end70

land.end70:                                       ; preds = %land.rhs67, %land.lhs.true63, %while.cond59
  %82 = phi i1 [ false, %land.lhs.true63 ], [ false, %while.cond59 ], [ %tobool69, %land.rhs67 ], !dbg !8272
  br i1 %82, label %while.body71, label %while.end85, !dbg !8257

while.body71:                                     ; preds = %land.end70
  %83 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8273, !tbaa !2355
  %lo72 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %83, i32 0, i32 0, !dbg !8276, !ctir !578
  %84 = load %struct.line*, %struct.line** %lo72, align 8, !dbg !8276, !tbaa !5795, !ctir !462
  %add.ptr73 = getelementptr inbounds %struct.line, %struct.line* %84, i64 -1, !dbg !8277
  %85 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8278, !tbaa !2355
  %hi74 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %85, i32 0, i32 1, !dbg !8279, !ctir !578
  %86 = load %struct.line*, %struct.line** %hi74, align 8, !dbg !8279, !tbaa !5791, !ctir !462
  %add.ptr75 = getelementptr inbounds %struct.line, %struct.line* %86, i64 -1, !dbg !8280
  %call76 = call i32 @compare(%struct.line* %add.ptr73, %struct.line* %add.ptr75), !dbg !8281
  %cmp77 = icmp sle i32 %call76, 0, !dbg !8282
  br i1 %cmp77, label %if.then78, label %if.else81, !dbg !8283

if.then78:                                        ; preds = %while.body71
  %87 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8284, !tbaa !2355
  %lo79 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %87, i32 0, i32 0, !dbg !8285, !ctir !578
  %88 = load %struct.line*, %struct.line** %lo79, align 8, !dbg !8286, !tbaa !5795, !ctir !462
  %incdec.ptr80 = getelementptr inbounds %struct.line, %struct.line* %88, i32 -1, !dbg !8286
  store %struct.line* %incdec.ptr80, %struct.line** %lo79, align 8, !dbg !8286, !tbaa !5795, !ctir !462
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8287, !tbaa !2355
  %90 = load i8*, i8** %temp_output.addr, align 8, !dbg !8288, !tbaa !2355
  call void @write_unique(%struct.line* %incdec.ptr80, %struct._IO_FILE* %89, i8* %90), !dbg !8289
  br label %if.end84, !dbg !8289

if.else81:                                        ; preds = %while.body71
  %91 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8290, !tbaa !2355
  %hi82 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %91, i32 0, i32 1, !dbg !8291, !ctir !578
  %92 = load %struct.line*, %struct.line** %hi82, align 8, !dbg !8292, !tbaa !5791, !ctir !462
  %incdec.ptr83 = getelementptr inbounds %struct.line, %struct.line* %92, i32 -1, !dbg !8292
  store %struct.line* %incdec.ptr83, %struct.line** %hi82, align 8, !dbg !8292, !tbaa !5791, !ctir !462
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8293, !tbaa !2355
  %94 = load i8*, i8** %temp_output.addr, align 8, !dbg !8294, !tbaa !2355
  call void @write_unique(%struct.line* %incdec.ptr83, %struct._IO_FILE* %93, i8* %94), !dbg !8295
  br label %if.end84

if.end84:                                         ; preds = %if.else81, %if.then78
  br label %while.cond59, !dbg !8257, !llvm.loop !8296

while.end85:                                      ; preds = %land.end70
  %95 = load %struct.line*, %struct.line** %lo_orig, align 8, !dbg !8298, !tbaa !2355
  %96 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8299, !tbaa !2355
  %lo86 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %96, i32 0, i32 0, !dbg !8300, !ctir !578
  %97 = load %struct.line*, %struct.line** %lo86, align 8, !dbg !8300, !tbaa !5795, !ctir !462
  %sub.ptr.lhs.cast87 = ptrtoint %struct.line* %95 to i64, !dbg !8301
  %sub.ptr.rhs.cast88 = ptrtoint %struct.line* %97 to i64, !dbg !8301
  %sub.ptr.sub89 = sub i64 %sub.ptr.lhs.cast87, %sub.ptr.rhs.cast88, !dbg !8301
  %sub.ptr.div90 = sdiv exact i64 %sub.ptr.sub89, 32, !dbg !8301
  store i64 %sub.ptr.div90, i64* %merged_lo, align 8, !dbg !8302, !tbaa !2516
  %98 = load %struct.line*, %struct.line** %hi_orig, align 8, !dbg !8303, !tbaa !2355
  %99 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8304, !tbaa !2355
  %hi91 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %99, i32 0, i32 1, !dbg !8305, !ctir !578
  %100 = load %struct.line*, %struct.line** %hi91, align 8, !dbg !8305, !tbaa !5791, !ctir !462
  %sub.ptr.lhs.cast92 = ptrtoint %struct.line* %98 to i64, !dbg !8306
  %sub.ptr.rhs.cast93 = ptrtoint %struct.line* %100 to i64, !dbg !8306
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93, !dbg !8306
  %sub.ptr.div95 = sdiv exact i64 %sub.ptr.sub94, 32, !dbg !8306
  store i64 %sub.ptr.div95, i64* %merged_hi, align 8, !dbg !8307, !tbaa !2516
  %101 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8308, !tbaa !2355
  %nhi96 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %101, i32 0, i32 6, !dbg !8310, !ctir !578
  %102 = load i64, i64* %nhi96, align 8, !dbg !8310, !tbaa !5804, !ctir !52
  %103 = load i64, i64* %merged_hi, align 8, !dbg !8311, !tbaa !2516
  %cmp97 = icmp eq i64 %102, %103, !dbg !8312
  br i1 %cmp97, label %if.then98, label %if.else111, !dbg !8313

if.then98:                                        ; preds = %while.end85
  br label %while.cond99, !dbg !8314

while.cond99:                                     ; preds = %while.body107, %if.then98
  %104 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8316, !tbaa !2355
  %lo100 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %104, i32 0, i32 0, !dbg !8317, !ctir !578
  %105 = load %struct.line*, %struct.line** %lo100, align 8, !dbg !8317, !tbaa !5795, !ctir !462
  %106 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8318, !tbaa !2355
  %end_lo101 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %106, i32 0, i32 2, !dbg !8319, !ctir !578
  %107 = load %struct.line*, %struct.line** %end_lo101, align 8, !dbg !8319, !tbaa !5787, !ctir !462
  %cmp102 = icmp ne %struct.line* %105, %107, !dbg !8320
  br i1 %cmp102, label %land.rhs103, label %land.end106, !dbg !8321

land.rhs103:                                      ; preds = %while.cond99
  %108 = load i64, i64* %to_merge, align 8, !dbg !8322, !tbaa !2516
  %dec104 = add i64 %108, -1, !dbg !8322
  store i64 %dec104, i64* %to_merge, align 8, !dbg !8322, !tbaa !2516
  %tobool105 = icmp ne i64 %108, 0, !dbg !8321
  br label %land.end106

land.end106:                                      ; preds = %land.rhs103, %while.cond99
  %109 = phi i1 [ false, %while.cond99 ], [ %tobool105, %land.rhs103 ], !dbg !8323
  br i1 %109, label %while.body107, label %while.end110, !dbg !8314

while.body107:                                    ; preds = %land.end106
  %110 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8324, !tbaa !2355
  %lo108 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %110, i32 0, i32 0, !dbg !8325, !ctir !578
  %111 = load %struct.line*, %struct.line** %lo108, align 8, !dbg !8326, !tbaa !5795, !ctir !462
  %incdec.ptr109 = getelementptr inbounds %struct.line, %struct.line* %111, i32 -1, !dbg !8326
  store %struct.line* %incdec.ptr109, %struct.line** %lo108, align 8, !dbg !8326, !tbaa !5795, !ctir !462
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8327, !tbaa !2355
  %113 = load i8*, i8** %temp_output.addr, align 8, !dbg !8328, !tbaa !2355
  call void @write_unique(%struct.line* %incdec.ptr109, %struct._IO_FILE* %112, i8* %113), !dbg !8329
  br label %while.cond99, !dbg !8314, !llvm.loop !8330

while.end110:                                     ; preds = %land.end106
  br label %if.end128, !dbg !8332

if.else111:                                       ; preds = %while.end85
  %114 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8333, !tbaa !2355
  %nlo112 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %114, i32 0, i32 5, !dbg !8335, !ctir !578
  %115 = load i64, i64* %nlo112, align 8, !dbg !8335, !tbaa !5808, !ctir !52
  %116 = load i64, i64* %merged_lo, align 8, !dbg !8336, !tbaa !2516
  %cmp113 = icmp eq i64 %115, %116, !dbg !8337
  br i1 %cmp113, label %if.then114, label %if.end127, !dbg !8338

if.then114:                                       ; preds = %if.else111
  br label %while.cond115, !dbg !8339

while.cond115:                                    ; preds = %while.body123, %if.then114
  %117 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8341, !tbaa !2355
  %hi116 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %117, i32 0, i32 1, !dbg !8342, !ctir !578
  %118 = load %struct.line*, %struct.line** %hi116, align 8, !dbg !8342, !tbaa !5791, !ctir !462
  %119 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8343, !tbaa !2355
  %end_hi117 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %119, i32 0, i32 3, !dbg !8344, !ctir !578
  %120 = load %struct.line*, %struct.line** %end_hi117, align 8, !dbg !8344, !tbaa !5782, !ctir !462
  %cmp118 = icmp ne %struct.line* %118, %120, !dbg !8345
  br i1 %cmp118, label %land.rhs119, label %land.end122, !dbg !8346

land.rhs119:                                      ; preds = %while.cond115
  %121 = load i64, i64* %to_merge, align 8, !dbg !8347, !tbaa !2516
  %dec120 = add i64 %121, -1, !dbg !8347
  store i64 %dec120, i64* %to_merge, align 8, !dbg !8347, !tbaa !2516
  %tobool121 = icmp ne i64 %121, 0, !dbg !8346
  br label %land.end122

land.end122:                                      ; preds = %land.rhs119, %while.cond115
  %122 = phi i1 [ false, %while.cond115 ], [ %tobool121, %land.rhs119 ], !dbg !8348
  br i1 %122, label %while.body123, label %while.end126, !dbg !8339

while.body123:                                    ; preds = %land.end122
  %123 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8349, !tbaa !2355
  %hi124 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %123, i32 0, i32 1, !dbg !8350, !ctir !578
  %124 = load %struct.line*, %struct.line** %hi124, align 8, !dbg !8351, !tbaa !5791, !ctir !462
  %incdec.ptr125 = getelementptr inbounds %struct.line, %struct.line* %124, i32 -1, !dbg !8351
  store %struct.line* %incdec.ptr125, %struct.line** %hi124, align 8, !dbg !8351, !tbaa !5791, !ctir !462
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8352, !tbaa !2355
  %126 = load i8*, i8** %temp_output.addr, align 8, !dbg !8353, !tbaa !2355
  call void @write_unique(%struct.line* %incdec.ptr125, %struct._IO_FILE* %125, i8* %126), !dbg !8354
  br label %while.cond115, !dbg !8339, !llvm.loop !8355

while.end126:                                     ; preds = %land.end122
  br label %if.end127, !dbg !8357

if.end127:                                        ; preds = %while.end126, %if.else111
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %while.end110
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end56
  %127 = load %struct.line*, %struct.line** %lo_orig, align 8, !dbg !8358, !tbaa !2355
  %128 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8359, !tbaa !2355
  %lo130 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %128, i32 0, i32 0, !dbg !8360, !ctir !578
  %129 = load %struct.line*, %struct.line** %lo130, align 8, !dbg !8360, !tbaa !5795, !ctir !462
  %sub.ptr.lhs.cast131 = ptrtoint %struct.line* %127 to i64, !dbg !8361
  %sub.ptr.rhs.cast132 = ptrtoint %struct.line* %129 to i64, !dbg !8361
  %sub.ptr.sub133 = sub i64 %sub.ptr.lhs.cast131, %sub.ptr.rhs.cast132, !dbg !8361
  %sub.ptr.div134 = sdiv exact i64 %sub.ptr.sub133, 32, !dbg !8361
  store i64 %sub.ptr.div134, i64* %merged_lo, align 8, !dbg !8362, !tbaa !2516
  %130 = load %struct.line*, %struct.line** %hi_orig, align 8, !dbg !8363, !tbaa !2355
  %131 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8364, !tbaa !2355
  %hi135 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %131, i32 0, i32 1, !dbg !8365, !ctir !578
  %132 = load %struct.line*, %struct.line** %hi135, align 8, !dbg !8365, !tbaa !5791, !ctir !462
  %sub.ptr.lhs.cast136 = ptrtoint %struct.line* %130 to i64, !dbg !8366
  %sub.ptr.rhs.cast137 = ptrtoint %struct.line* %132 to i64, !dbg !8366
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !8366
  %sub.ptr.div139 = sdiv exact i64 %sub.ptr.sub138, 32, !dbg !8366
  store i64 %sub.ptr.div139, i64* %merged_hi, align 8, !dbg !8367, !tbaa !2516
  %133 = load i64, i64* %merged_lo, align 8, !dbg !8368, !tbaa !2516
  %134 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8369, !tbaa !2355
  %nlo140 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %134, i32 0, i32 5, !dbg !8370, !ctir !578
  %135 = load i64, i64* %nlo140, align 8, !dbg !8371, !tbaa !5808, !ctir !52
  %sub = sub i64 %135, %133, !dbg !8371
  store i64 %sub, i64* %nlo140, align 8, !dbg !8371, !tbaa !5808, !ctir !52
  %136 = load i64, i64* %merged_hi, align 8, !dbg !8372, !tbaa !2516
  %137 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8373, !tbaa !2355
  %nhi141 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %137, i32 0, i32 6, !dbg !8374, !ctir !578
  %138 = load i64, i64* %nhi141, align 8, !dbg !8375, !tbaa !5804, !ctir !52
  %sub142 = sub i64 %138, %136, !dbg !8375
  store i64 %sub142, i64* %nhi141, align 8, !dbg !8375, !tbaa !5804, !ctir !52
  ret void, !dbg !8376
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_check_insert(%struct.merge_node_queue* %queue, %struct.merge_node* %node) #4 !dbg !8377 !ctir !692 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !577
  %lo_avail = alloca i8, align 1, !ctir !102
  %hi_avail = alloca i8, align 1, !ctir !102
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8380, metadata !DIExpression()), !dbg !8381
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8382, !tbaa !2355
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 11, !dbg !8384, !ctir !578
  %1 = load i8, i8* %queued, align 4, !dbg !8384, !tbaa !5820
  %tobool = trunc i8 %1 to i1, !dbg !8384, !ctir !102
  br i1 %tobool, label %if.end13, label %if.then, !dbg !8385

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %lo_avail, metadata !8386, metadata !DIExpression()), !dbg !8388
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8389, !tbaa !2355
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 0, !dbg !8390, !ctir !578
  %3 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8390, !tbaa !5795, !ctir !462
  %4 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8391, !tbaa !2355
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %4, i32 0, i32 2, !dbg !8392, !ctir !578
  %5 = load %struct.line*, %struct.line** %end_lo, align 8, !dbg !8392, !tbaa !5787, !ctir !462
  %sub.ptr.lhs.cast = ptrtoint %struct.line* %3 to i64, !dbg !8393
  %sub.ptr.rhs.cast = ptrtoint %struct.line* %5 to i64, !dbg !8393
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8393
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !8393
  %cmp = icmp ne i64 %sub.ptr.div, 0, !dbg !8394
  %frombool = zext i1 %cmp to i8, !dbg !8388
  store i8 %frombool, i8* %lo_avail, align 1, !dbg !8388, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %hi_avail, metadata !8395, metadata !DIExpression()), !dbg !8396
  %6 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8397, !tbaa !2355
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %6, i32 0, i32 1, !dbg !8398, !ctir !578
  %7 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8398, !tbaa !5791, !ctir !462
  %8 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8399, !tbaa !2355
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %8, i32 0, i32 3, !dbg !8400, !ctir !578
  %9 = load %struct.line*, %struct.line** %end_hi, align 8, !dbg !8400, !tbaa !5782, !ctir !462
  %sub.ptr.lhs.cast1 = ptrtoint %struct.line* %7 to i64, !dbg !8401
  %sub.ptr.rhs.cast2 = ptrtoint %struct.line* %9 to i64, !dbg !8401
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !8401
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 32, !dbg !8401
  %cmp5 = icmp ne i64 %sub.ptr.div4, 0, !dbg !8402
  %frombool6 = zext i1 %cmp5 to i8, !dbg !8396
  store i8 %frombool6, i8* %hi_avail, align 1, !dbg !8396, !tbaa !2499
  %10 = load i8, i8* %lo_avail, align 1, !dbg !8403, !tbaa !2499
  %tobool7 = trunc i8 %10 to i1, !dbg !8403
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !8405

cond.true:                                        ; preds = %if.then
  %11 = load i8, i8* %hi_avail, align 1, !dbg !8406, !tbaa !2499
  %tobool8 = trunc i8 %11 to i1, !dbg !8406
  br i1 %tobool8, label %if.then12, label %lor.lhs.false, !dbg !8407

lor.lhs.false:                                    ; preds = %cond.true
  %12 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8408, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 6, !dbg !8409, !ctir !578
  %13 = load i64, i64* %nhi, align 8, !dbg !8409, !tbaa !5804, !ctir !52
  %tobool9 = icmp ne i64 %13, 0, !dbg !8408
  br i1 %tobool9, label %if.end, label %if.then12, !dbg !8403

cond.false:                                       ; preds = %if.then
  %14 = load i8, i8* %hi_avail, align 1, !dbg !8410, !tbaa !2499
  %tobool10 = trunc i8 %14 to i1, !dbg !8410
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !8411

land.lhs.true:                                    ; preds = %cond.false
  %15 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8412, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %15, i32 0, i32 5, !dbg !8413, !ctir !578
  %16 = load i64, i64* %nlo, align 8, !dbg !8413, !tbaa !5808, !ctir !52
  %tobool11 = icmp ne i64 %16, 0, !dbg !8412
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !8405

if.then12:                                        ; preds = %land.lhs.true, %lor.lhs.false, %cond.true
  %17 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8414, !tbaa !2355
  %18 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8415, !tbaa !2355
  call void @queue_insert(%struct.merge_node_queue* %17, %struct.merge_node* %18), !dbg !8416
  br label %if.end, !dbg !8416

if.end:                                           ; preds = %if.then12, %land.lhs.true, %cond.false, %lor.lhs.false
  br label %if.end13, !dbg !8417

if.end13:                                         ; preds = %if.end, %entry
  ret void, !dbg !8418
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_check_insert_parent(%struct.merge_node_queue* %queue, %struct.merge_node* %node) #4 !dbg !8419 !ctir !692 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8, !ctir !630
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !577
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8420, metadata !DIExpression()), !dbg !8421
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8422, metadata !DIExpression()), !dbg !8423
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8424, !tbaa !2355
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 10, !dbg !8426, !ctir !578
  %1 = load i32, i32* %level, align 8, !dbg !8426, !tbaa !5816, !ctir !66
  %cmp = icmp ugt i32 %1, 1, !dbg !8427
  br i1 %cmp, label %if.then, label %if.else, !dbg !8428

if.then:                                          ; preds = %entry
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8429, !tbaa !2355
  %parent = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 7, !dbg !8431, !ctir !578
  %3 = load %struct.merge_node*, %struct.merge_node** %parent, align 8, !dbg !8431, !tbaa !5812, !ctir !577
  call void @lock_node(%struct.merge_node* %3), !dbg !8432
  %4 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8433, !tbaa !2355
  %5 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8434, !tbaa !2355
  %parent1 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 7, !dbg !8435, !ctir !578
  %6 = load %struct.merge_node*, %struct.merge_node** %parent1, align 8, !dbg !8435, !tbaa !5812, !ctir !577
  call void @queue_check_insert(%struct.merge_node_queue* %4, %struct.merge_node* %6), !dbg !8436
  %7 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8437, !tbaa !2355
  %parent2 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %7, i32 0, i32 7, !dbg !8438, !ctir !578
  %8 = load %struct.merge_node*, %struct.merge_node** %parent2, align 8, !dbg !8438, !tbaa !5812, !ctir !577
  call void @unlock_node(%struct.merge_node* %8), !dbg !8439
  br label %if.end6, !dbg !8440

if.else:                                          ; preds = %entry
  %9 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8441, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %9, i32 0, i32 5, !dbg !8443, !ctir !578
  %10 = load i64, i64* %nlo, align 8, !dbg !8443, !tbaa !5808, !ctir !52
  %11 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8444, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %11, i32 0, i32 6, !dbg !8445, !ctir !578
  %12 = load i64, i64* %nhi, align 8, !dbg !8445, !tbaa !5804, !ctir !52
  %add = add i64 %10, %12, !dbg !8446
  %cmp3 = icmp eq i64 %add, 0, !dbg !8447
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8448

if.then4:                                         ; preds = %if.else
  %13 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8449, !tbaa !2355
  %14 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8451, !tbaa !2355
  %parent5 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 7, !dbg !8452, !ctir !578
  %15 = load %struct.merge_node*, %struct.merge_node** %parent5, align 8, !dbg !8452, !tbaa !5812, !ctir !577
  call void @queue_insert(%struct.merge_node_queue* %13, %struct.merge_node* %15), !dbg !8453
  br label %if.end, !dbg !8454

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !8455
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lock_node(%struct.merge_node* %node) #4 !dbg !8456 !ctir !698 {
entry:
  %node.addr = alloca %struct.merge_node*, align 8, !ctir !577
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8459, !tbaa !2355
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 12, !dbg !8460, !ctir !578
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %lock) #12, !dbg !8461
  ret void, !dbg !8462
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #2

declare dso_local i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) #3

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_signal(%union.pthread_cond_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mergelines(%struct.line* noalias %t, i64 %nlines, %struct.line* noalias %lo) #4 !dbg !8463 !ctir !689 {
entry:
  %t.addr = alloca %struct.line*, align 8, !ctir !669
  %nlines.addr = alloca i64, align 8, !ctir !52
  %lo.addr = alloca %struct.line*, align 8, !ctir !691
  %nlo = alloca i64, align 8, !ctir !52
  %nhi = alloca i64, align 8, !ctir !52
  %hi = alloca %struct.line*, align 8, !ctir !462
  store %struct.line* %t, %struct.line** %t.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %t.addr, metadata !8464, metadata !DIExpression()), !dbg !8465
  store i64 %nlines, i64* %nlines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nlines.addr, metadata !8466, metadata !DIExpression()), !dbg !8467
  store %struct.line* %lo, %struct.line** %lo.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %lo.addr, metadata !8468, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.declare(metadata i64* %nlo, metadata !8470, metadata !DIExpression()), !dbg !8471
  %0 = load i64, i64* %nlines.addr, align 8, !dbg !8472, !tbaa !2516
  %div = udiv i64 %0, 2, !dbg !8473
  store i64 %div, i64* %nlo, align 8, !dbg !8471, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nhi, metadata !8474, metadata !DIExpression()), !dbg !8475
  %1 = load i64, i64* %nlines.addr, align 8, !dbg !8476, !tbaa !2516
  %2 = load i64, i64* %nlo, align 8, !dbg !8477, !tbaa !2516
  %sub = sub i64 %1, %2, !dbg !8478
  store i64 %sub, i64* %nhi, align 8, !dbg !8475, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.line** %hi, metadata !8479, metadata !DIExpression()), !dbg !8480
  %3 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8481, !tbaa !2355
  %4 = load i64, i64* %nlo, align 8, !dbg !8482, !tbaa !2516
  %idx.neg = sub i64 0, %4, !dbg !8483
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %3, i64 %idx.neg, !dbg !8483
  store %struct.line* %add.ptr, %struct.line** %hi, align 8, !dbg !8480, !tbaa !2355
  br label %while.body, !dbg !8484

while.body:                                       ; preds = %entry, %if.end15
  %5 = load %struct.line*, %struct.line** %lo.addr, align 8, !dbg !8485, !tbaa !2355
  %add.ptr1 = getelementptr inbounds %struct.line, %struct.line* %5, i64 -1, !dbg !8487
  %6 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8488, !tbaa !2355
  %add.ptr2 = getelementptr inbounds %struct.line, %struct.line* %6, i64 -1, !dbg !8489
  %call = call i32 @compare(%struct.line* %add.ptr1, %struct.line* %add.ptr2), !dbg !8490
  %cmp = icmp sle i32 %call, 0, !dbg !8491
  br i1 %cmp, label %if.then, label %if.else, !dbg !8492

if.then:                                          ; preds = %while.body
  %7 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8493, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.line, %struct.line* %7, i32 -1, !dbg !8493
  store %struct.line* %incdec.ptr, %struct.line** %t.addr, align 8, !dbg !8493, !tbaa !2355
  %8 = load %struct.line*, %struct.line** %lo.addr, align 8, !dbg !8495, !tbaa !2355
  %incdec.ptr3 = getelementptr inbounds %struct.line, %struct.line* %8, i32 -1, !dbg !8495
  store %struct.line* %incdec.ptr3, %struct.line** %lo.addr, align 8, !dbg !8495, !tbaa !2355
  %9 = bitcast %struct.line* %incdec.ptr to i8*, !dbg !8496
  %10 = bitcast %struct.line* %incdec.ptr3 to i8*, !dbg !8496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !8496, !tbaa.struct !6003
  %11 = load i64, i64* %nlo, align 8, !dbg !8497, !tbaa !2516
  %dec = add i64 %11, -1, !dbg !8497
  store i64 %dec, i64* %nlo, align 8, !dbg !8497, !tbaa !2516
  %tobool = icmp ne i64 %dec, 0, !dbg !8497
  br i1 %tobool, label %if.end, label %if.then4, !dbg !8499

if.then4:                                         ; preds = %if.then
  br label %return, !dbg !8500

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !8502

if.else:                                          ; preds = %while.body
  %12 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8503, !tbaa !2355
  %incdec.ptr5 = getelementptr inbounds %struct.line, %struct.line* %12, i32 -1, !dbg !8503
  store %struct.line* %incdec.ptr5, %struct.line** %t.addr, align 8, !dbg !8503, !tbaa !2355
  %13 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8505, !tbaa !2355
  %incdec.ptr6 = getelementptr inbounds %struct.line, %struct.line* %13, i32 -1, !dbg !8505
  store %struct.line* %incdec.ptr6, %struct.line** %hi, align 8, !dbg !8505, !tbaa !2355
  %14 = bitcast %struct.line* %incdec.ptr5 to i8*, !dbg !8506
  %15 = bitcast %struct.line* %incdec.ptr6 to i8*, !dbg !8506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false), !dbg !8506, !tbaa.struct !6003
  %16 = load i64, i64* %nhi, align 8, !dbg !8507, !tbaa !2516
  %dec7 = add i64 %16, -1, !dbg !8507
  store i64 %dec7, i64* %nhi, align 8, !dbg !8507, !tbaa !2516
  %tobool8 = icmp ne i64 %dec7, 0, !dbg !8507
  br i1 %tobool8, label %if.end14, label %if.then9, !dbg !8509

if.then9:                                         ; preds = %if.else
  br label %do.body, !dbg !8510

do.body:                                          ; preds = %do.cond, %if.then9
  %17 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8512, !tbaa !2355
  %incdec.ptr10 = getelementptr inbounds %struct.line, %struct.line* %17, i32 -1, !dbg !8512
  store %struct.line* %incdec.ptr10, %struct.line** %t.addr, align 8, !dbg !8512, !tbaa !2355
  %18 = load %struct.line*, %struct.line** %lo.addr, align 8, !dbg !8513, !tbaa !2355
  %incdec.ptr11 = getelementptr inbounds %struct.line, %struct.line* %18, i32 -1, !dbg !8513
  store %struct.line* %incdec.ptr11, %struct.line** %lo.addr, align 8, !dbg !8513, !tbaa !2355
  %19 = bitcast %struct.line* %incdec.ptr10 to i8*, !dbg !8514
  %20 = bitcast %struct.line* %incdec.ptr11 to i8*, !dbg !8514
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false), !dbg !8514, !tbaa.struct !6003
  br label %do.cond, !dbg !8515

do.cond:                                          ; preds = %do.body
  %21 = load i64, i64* %nlo, align 8, !dbg !8516, !tbaa !2516
  %dec12 = add i64 %21, -1, !dbg !8516
  store i64 %dec12, i64* %nlo, align 8, !dbg !8516, !tbaa !2516
  %tobool13 = icmp ne i64 %dec12, 0, !dbg !8515
  br i1 %tobool13, label %do.body, label %do.end, !dbg !8515, !llvm.loop !8517

do.end:                                           ; preds = %do.cond
  br label %return, !dbg !8519

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  br label %while.body, !dbg !8484, !llvm.loop !8520

return:                                           ; preds = %do.end, %if.then4
  ret void, !dbg !8522
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.anon.11*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.merge_node* @init_node(%struct.merge_node* noalias %parent, %struct.merge_node* noalias %node_pool, %struct.line* %dest, i64 %nthreads, i64 %total_lines, i1 zeroext %is_lo_child) #4 !dbg !8523 !ctir !664 {
entry:
  %parent.addr = alloca %struct.merge_node*, align 8, !ctir !666
  %node_pool.addr = alloca %struct.merge_node*, align 8, !ctir !666
  %dest.addr = alloca %struct.line*, align 8, !ctir !462
  %nthreads.addr = alloca i64, align 8, !ctir !52
  %total_lines.addr = alloca i64, align 8, !ctir !52
  %is_lo_child.addr = alloca i8, align 1, !ctir !102
  %nlines = alloca i64, align 8, !ctir !52
  %nlo1 = alloca i64, align 8, !ctir !52
  %nhi2 = alloca i64, align 8, !ctir !52
  %lo = alloca %struct.line*, align 8, !ctir !462
  %hi = alloca %struct.line*, align 8, !ctir !462
  %parent_end = alloca %struct.line**, align 8, !ctir !585
  %node = alloca %struct.merge_node*, align 8, !ctir !577
  %lo_threads = alloca i64, align 8, !ctir !52
  %hi_threads = alloca i64, align 8, !ctir !52
  store %struct.merge_node* %parent, %struct.merge_node** %parent.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %parent.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store %struct.merge_node* %node_pool, %struct.merge_node** %node_pool.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node_pool.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  store %struct.line* %dest, %struct.line** %dest.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %dest.addr, metadata !8528, metadata !DIExpression()), !dbg !8529
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !8530, metadata !DIExpression()), !dbg !8531
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !8532, metadata !DIExpression()), !dbg !8533
  %frombool = zext i1 %is_lo_child to i8
  store i8 %frombool, i8* %is_lo_child.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %is_lo_child.addr, metadata !8534, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.declare(metadata i64* %nlines, metadata !8536, metadata !DIExpression()), !dbg !8537
  %0 = load i8, i8* %is_lo_child.addr, align 1, !dbg !8538, !tbaa !2499
  %tobool = trunc i8 %0 to i1, !dbg !8538
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8538

cond.true:                                        ; preds = %entry
  %1 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8539, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %1, i32 0, i32 5, !dbg !8540, !ctir !578
  %2 = load i64, i64* %nlo, align 8, !dbg !8540, !tbaa !5808, !ctir !52
  br label %cond.end, !dbg !8538

cond.false:                                       ; preds = %entry
  %3 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8541, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %3, i32 0, i32 6, !dbg !8542, !ctir !578
  %4 = load i64, i64* %nhi, align 8, !dbg !8542, !tbaa !5804, !ctir !52
  br label %cond.end, !dbg !8538

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %4, %cond.false ], !dbg !8538
  store i64 %cond, i64* %nlines, align 8, !dbg !8537, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nlo1, metadata !8543, metadata !DIExpression()), !dbg !8544
  %5 = load i64, i64* %nlines, align 8, !dbg !8545, !tbaa !2516
  %div = udiv i64 %5, 2, !dbg !8546
  store i64 %div, i64* %nlo1, align 8, !dbg !8544, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nhi2, metadata !8547, metadata !DIExpression()), !dbg !8548
  %6 = load i64, i64* %nlines, align 8, !dbg !8549, !tbaa !2516
  %7 = load i64, i64* %nlo1, align 8, !dbg !8550, !tbaa !2516
  %sub = sub i64 %6, %7, !dbg !8551
  store i64 %sub, i64* %nhi2, align 8, !dbg !8548, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.line** %lo, metadata !8552, metadata !DIExpression()), !dbg !8553
  %8 = load %struct.line*, %struct.line** %dest.addr, align 8, !dbg !8554, !tbaa !2355
  %9 = load i64, i64* %total_lines.addr, align 8, !dbg !8555, !tbaa !2516
  %idx.neg = sub i64 0, %9, !dbg !8556
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %8, i64 %idx.neg, !dbg !8556
  store %struct.line* %add.ptr, %struct.line** %lo, align 8, !dbg !8553, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line** %hi, metadata !8557, metadata !DIExpression()), !dbg !8558
  %10 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8559, !tbaa !2355
  %11 = load i64, i64* %nlo1, align 8, !dbg !8560, !tbaa !2516
  %idx.neg3 = sub i64 0, %11, !dbg !8561
  %add.ptr4 = getelementptr inbounds %struct.line, %struct.line* %10, i64 %idx.neg3, !dbg !8561
  store %struct.line* %add.ptr4, %struct.line** %hi, align 8, !dbg !8558, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line*** %parent_end, metadata !8562, metadata !DIExpression()), !dbg !8563
  %12 = load i8, i8* %is_lo_child.addr, align 1, !dbg !8564, !tbaa !2499
  %tobool5 = trunc i8 %12 to i1, !dbg !8564
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !8564

cond.true6:                                       ; preds = %cond.end
  %13 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8565, !tbaa !2355
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %13, i32 0, i32 2, !dbg !8566, !ctir !578
  br label %cond.end8, !dbg !8564

cond.false7:                                      ; preds = %cond.end
  %14 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8567, !tbaa !2355
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 3, !dbg !8568, !ctir !578
  br label %cond.end8, !dbg !8564

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi %struct.line** [ %end_lo, %cond.true6 ], [ %end_hi, %cond.false7 ], !dbg !8564
  store %struct.line** %cond9, %struct.line*** %parent_end, align 8, !dbg !8563, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node, metadata !8569, metadata !DIExpression()), !dbg !8570
  %15 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8571, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.merge_node, %struct.merge_node* %15, i32 1, !dbg !8571
  store %struct.merge_node* %incdec.ptr, %struct.merge_node** %node_pool.addr, align 8, !dbg !8571, !tbaa !2355
  store %struct.merge_node* %15, %struct.merge_node** %node, align 8, !dbg !8570, !tbaa !2355
  %16 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8572, !tbaa !2355
  %17 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8573, !tbaa !2355
  %end_lo10 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %17, i32 0, i32 2, !dbg !8574, !ctir !578
  store %struct.line* %16, %struct.line** %end_lo10, align 8, !dbg !8575, !tbaa !5787, !ctir !462
  %18 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8576, !tbaa !2355
  %lo11 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %18, i32 0, i32 0, !dbg !8577, !ctir !578
  store %struct.line* %16, %struct.line** %lo11, align 8, !dbg !8578, !tbaa !5795, !ctir !462
  %19 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8579, !tbaa !2355
  %20 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8580, !tbaa !2355
  %end_hi12 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %20, i32 0, i32 3, !dbg !8581, !ctir !578
  store %struct.line* %19, %struct.line** %end_hi12, align 8, !dbg !8582, !tbaa !5782, !ctir !462
  %21 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8583, !tbaa !2355
  %hi13 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %21, i32 0, i32 1, !dbg !8584, !ctir !578
  store %struct.line* %19, %struct.line** %hi13, align 8, !dbg !8585, !tbaa !5791, !ctir !462
  %22 = load %struct.line**, %struct.line*** %parent_end, align 8, !dbg !8586, !tbaa !2355
  %23 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8587, !tbaa !2355
  %dest14 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %23, i32 0, i32 4, !dbg !8588, !ctir !578
  store %struct.line** %22, %struct.line*** %dest14, align 8, !dbg !8589, !tbaa !5799, !ctir !585
  %24 = load i64, i64* %nlo1, align 8, !dbg !8590, !tbaa !2516
  %25 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8591, !tbaa !2355
  %nlo15 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %25, i32 0, i32 5, !dbg !8592, !ctir !578
  store i64 %24, i64* %nlo15, align 8, !dbg !8593, !tbaa !5808, !ctir !52
  %26 = load i64, i64* %nhi2, align 8, !dbg !8594, !tbaa !2516
  %27 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8595, !tbaa !2355
  %nhi16 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %27, i32 0, i32 6, !dbg !8596, !ctir !578
  store i64 %26, i64* %nhi16, align 8, !dbg !8597, !tbaa !5804, !ctir !52
  %28 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8598, !tbaa !2355
  %29 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8599, !tbaa !2355
  %parent17 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %29, i32 0, i32 7, !dbg !8600, !ctir !578
  store %struct.merge_node* %28, %struct.merge_node** %parent17, align 8, !dbg !8601, !tbaa !5812, !ctir !577
  %30 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8602, !tbaa !2355
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %30, i32 0, i32 10, !dbg !8603, !ctir !578
  %31 = load i32, i32* %level, align 8, !dbg !8603, !tbaa !5816, !ctir !66
  %add = add i32 %31, 1, !dbg !8604
  %32 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8605, !tbaa !2355
  %level18 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %32, i32 0, i32 10, !dbg !8606, !ctir !578
  store i32 %add, i32* %level18, align 8, !dbg !8607, !tbaa !5816, !ctir !66
  %33 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8608, !tbaa !2355
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %33, i32 0, i32 11, !dbg !8609, !ctir !578
  store i8 0, i8* %queued, align 4, !dbg !8610, !tbaa !5820, !ctir !102
  %34 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8611, !tbaa !2355
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %34, i32 0, i32 12, !dbg !8612, !ctir !578
  %call = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %lock, %union.anon.11* null) #12, !dbg !8613
  %35 = load i64, i64* %nthreads.addr, align 8, !dbg !8614, !tbaa !2516
  %cmp = icmp ugt i64 %35, 1, !dbg !8616
  br i1 %cmp, label %if.then, label %if.else, !dbg !8617

if.then:                                          ; preds = %cond.end8
  call void @llvm.dbg.declare(metadata i64* %lo_threads, metadata !8618, metadata !DIExpression()), !dbg !8620
  %36 = load i64, i64* %nthreads.addr, align 8, !dbg !8621, !tbaa !2516
  %div19 = udiv i64 %36, 2, !dbg !8622
  store i64 %div19, i64* %lo_threads, align 8, !dbg !8620, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %hi_threads, metadata !8623, metadata !DIExpression()), !dbg !8624
  %37 = load i64, i64* %nthreads.addr, align 8, !dbg !8625, !tbaa !2516
  %38 = load i64, i64* %lo_threads, align 8, !dbg !8626, !tbaa !2516
  %sub20 = sub i64 %37, %38, !dbg !8627
  store i64 %sub20, i64* %hi_threads, align 8, !dbg !8624, !tbaa !2516
  %39 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8628, !tbaa !2355
  %40 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8629, !tbaa !2355
  %lo_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %40, i32 0, i32 8, !dbg !8630, !ctir !578
  store %struct.merge_node* %39, %struct.merge_node** %lo_child, align 8, !dbg !8631, !tbaa !5878, !ctir !577
  %41 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8632, !tbaa !2355
  %42 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8633, !tbaa !2355
  %43 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8634, !tbaa !2355
  %44 = load i64, i64* %lo_threads, align 8, !dbg !8635, !tbaa !2516
  %45 = load i64, i64* %total_lines.addr, align 8, !dbg !8636, !tbaa !2516
  %call21 = call %struct.merge_node* @init_node(%struct.merge_node* %41, %struct.merge_node* %42, %struct.line* %43, i64 %44, i64 %45, i1 zeroext true), !dbg !8637
  store %struct.merge_node* %call21, %struct.merge_node** %node_pool.addr, align 8, !dbg !8638, !tbaa !2355
  %46 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8639, !tbaa !2355
  %47 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8640, !tbaa !2355
  %hi_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %47, i32 0, i32 9, !dbg !8641, !ctir !578
  store %struct.merge_node* %46, %struct.merge_node** %hi_child, align 8, !dbg !8642, !tbaa !5906, !ctir !577
  %48 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8643, !tbaa !2355
  %49 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8644, !tbaa !2355
  %50 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8645, !tbaa !2355
  %51 = load i64, i64* %hi_threads, align 8, !dbg !8646, !tbaa !2516
  %52 = load i64, i64* %total_lines.addr, align 8, !dbg !8647, !tbaa !2516
  %call22 = call %struct.merge_node* @init_node(%struct.merge_node* %48, %struct.merge_node* %49, %struct.line* %50, i64 %51, i64 %52, i1 zeroext false), !dbg !8648
  store %struct.merge_node* %call22, %struct.merge_node** %node_pool.addr, align 8, !dbg !8649, !tbaa !2355
  br label %if.end, !dbg !8650

if.else:                                          ; preds = %cond.end8
  %53 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8651, !tbaa !2355
  %lo_child23 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %53, i32 0, i32 8, !dbg !8653, !ctir !578
  store %struct.merge_node* null, %struct.merge_node** %lo_child23, align 8, !dbg !8654, !tbaa !5878, !ctir !577
  %54 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8655, !tbaa !2355
  %hi_child24 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %54, i32 0, i32 9, !dbg !8656, !ctir !578
  store %struct.merge_node* null, %struct.merge_node** %hi_child24, align 8, !dbg !8657, !tbaa !5906, !ctir !577
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %55 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8658, !tbaa !2355
  ret %struct.merge_node* %55, !dbg !8659
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare_nodes(i8* %a, i8* %b) #4 !dbg !8660 !ctir !333 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %a.addr = alloca i8*, align 8, !ctir !85
  %b.addr = alloca i8*, align 8, !ctir !85
  %nodea = alloca %struct.merge_node*, align 8, !ctir !660
  %nodeb = alloca %struct.merge_node*, align 8, !ctir !660
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8661, metadata !DIExpression()), !dbg !8662
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.declare(metadata %struct.merge_node** %nodea, metadata !8665, metadata !DIExpression()), !dbg !8666
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8667, !tbaa !2355
  %1 = bitcast i8* %0 to %struct.merge_node*, !dbg !8667
  store %struct.merge_node* %1, %struct.merge_node** %nodea, align 8, !dbg !8666, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.merge_node** %nodeb, metadata !8668, metadata !DIExpression()), !dbg !8669
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8670, !tbaa !2355
  %3 = bitcast i8* %2 to %struct.merge_node*, !dbg !8670
  store %struct.merge_node* %3, %struct.merge_node** %nodeb, align 8, !dbg !8669, !tbaa !2355
  %4 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8671, !tbaa !2355
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %4, i32 0, i32 10, !dbg !8673, !ctir !661
  %5 = load i32, i32* %level, align 8, !dbg !8673, !tbaa !5816, !ctir !66
  %6 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8674, !tbaa !2355
  %level1 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %6, i32 0, i32 10, !dbg !8675, !ctir !661
  %7 = load i32, i32* %level1, align 8, !dbg !8675, !tbaa !5816, !ctir !66
  %cmp = icmp eq i32 %5, %7, !dbg !8676
  br i1 %cmp, label %if.then, label %if.end, !dbg !8677

if.then:                                          ; preds = %entry
  %8 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8678, !tbaa !2355
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %8, i32 0, i32 5, !dbg !8679, !ctir !661
  %9 = load i64, i64* %nlo, align 8, !dbg !8679, !tbaa !5808, !ctir !52
  %10 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8680, !tbaa !2355
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %10, i32 0, i32 6, !dbg !8681, !ctir !661
  %11 = load i64, i64* %nhi, align 8, !dbg !8681, !tbaa !5804, !ctir !52
  %add = add i64 %9, %11, !dbg !8682
  %12 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8683, !tbaa !2355
  %nlo2 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 5, !dbg !8684, !ctir !661
  %13 = load i64, i64* %nlo2, align 8, !dbg !8684, !tbaa !5808, !ctir !52
  %14 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8685, !tbaa !2355
  %nhi3 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 6, !dbg !8686, !ctir !661
  %15 = load i64, i64* %nhi3, align 8, !dbg !8686, !tbaa !5804, !ctir !52
  %add4 = add i64 %13, %15, !dbg !8687
  %cmp5 = icmp ult i64 %add, %add4, !dbg !8688
  %conv = zext i1 %cmp5 to i32, !dbg !8688
  store i32 %conv, i32* %retval, align 4, !dbg !8689
  br label %return, !dbg !8689

if.end:                                           ; preds = %entry
  %16 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8690, !tbaa !2355
  %level6 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %16, i32 0, i32 10, !dbg !8691, !ctir !661
  %17 = load i32, i32* %level6, align 8, !dbg !8691, !tbaa !5816, !ctir !66
  %18 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8692, !tbaa !2355
  %level7 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %18, i32 0, i32 10, !dbg !8693, !ctir !661
  %19 = load i32, i32* %level7, align 8, !dbg !8693, !tbaa !5816, !ctir !66
  %cmp8 = icmp ult i32 %17, %19, !dbg !8694
  %conv9 = zext i1 %cmp8 to i32, !dbg !8694
  store i32 %conv9, i32* %retval, align 4, !dbg !8695
  br label %return, !dbg !8695

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8696
  ret i32 %20, !dbg !8696
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_init(%union.pthread_cond_t*, %union.anon.11*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tempnode* @maybe_create_temp(%struct._IO_FILE** %pfp, i1 zeroext %survive_fd_exhaustion) #4 !dbg !8697 !ctir !571 {
entry:
  %retval = alloca %struct.tempnode*, align 8, !ctir !289
  %pfp.addr = alloca %struct._IO_FILE**, align 8, !ctir !526
  %survive_fd_exhaustion.addr = alloca i8, align 1, !ctir !102
  %tempfd = alloca i32, align 4, !ctir !5
  %node = alloca %struct.tempnode*, align 8, !ctir !289
  %pipefds = alloca [2 x i32], align 4, !ctir !536
  store %struct._IO_FILE** %pfp, %struct._IO_FILE*** %pfp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %pfp.addr, metadata !8698, metadata !DIExpression()), !dbg !8699
  %frombool = zext i1 %survive_fd_exhaustion to i8
  store i8 %frombool, i8* %survive_fd_exhaustion.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %survive_fd_exhaustion.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.declare(metadata i32* %tempfd, metadata !8702, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !8704, metadata !DIExpression()), !dbg !8705
  %0 = load i8, i8* %survive_fd_exhaustion.addr, align 1, !dbg !8706, !tbaa !2499
  %tobool = trunc i8 %0 to i1, !dbg !8706
  %call = call %struct.tempnode* @create_temp_file(i32* %tempfd, i1 zeroext %tobool), !dbg !8707
  store %struct.tempnode* %call, %struct.tempnode** %node, align 8, !dbg !8705, !tbaa !2355
  %1 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8708, !tbaa !2355
  %tobool1 = icmp ne %struct.tempnode* %1, null, !dbg !8708
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8710

if.then:                                          ; preds = %entry
  store %struct.tempnode* null, %struct.tempnode** %retval, align 8, !dbg !8711
  br label %return, !dbg !8711

if.end:                                           ; preds = %entry
  %2 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8712, !tbaa !2355
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 2, !dbg !8713, !ctir !290
  store i8 0, i8* %state, align 4, !dbg !8714, !tbaa !2507, !ctir !8
  %3 = load i8*, i8** @compress_program, align 8, !dbg !8715, !tbaa !2355
  %tobool2 = icmp ne i8* %3, null, !dbg !8715
  br i1 %tobool2, label %if.then3, label %if.end20, !dbg !8717

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [2 x i32]* %pipefds, metadata !8718, metadata !DIExpression()), !dbg !8720
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !8721
  %call4 = call i32 @pipe_fork(i32* %arraydecay, i64 4), !dbg !8722
  %4 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8723, !tbaa !2355
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 1, !dbg !8724, !ctir !290
  store i32 %call4, i32* %pid, align 8, !dbg !8725, !tbaa !2342, !ctir !295
  %5 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8726, !tbaa !2355
  %pid5 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %5, i32 0, i32 1, !dbg !8728, !ctir !290
  %6 = load i32, i32* %pid5, align 8, !dbg !8728, !tbaa !2342, !ctir !295
  %cmp = icmp slt i32 0, %6, !dbg !8729
  br i1 %cmp, label %if.then6, label %if.else, !dbg !8730

if.then6:                                         ; preds = %if.then3
  %7 = load i32, i32* %tempfd, align 4, !dbg !8731, !tbaa !2342
  %call7 = call i32 @close(i32 %7), !dbg !8733
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !8734, !ctir !536
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8734, !tbaa !2342
  %call8 = call i32 @close(i32 %8), !dbg !8735
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !8736, !ctir !536
  %9 = load i32, i32* %arrayidx9, align 4, !dbg !8736, !tbaa !2342
  store i32 %9, i32* %tempfd, align 4, !dbg !8737, !tbaa !2342
  %10 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8738, !tbaa !2355
  call void @register_proc(%struct.tempnode* %10), !dbg !8739
  br label %if.end19, !dbg !8740

if.else:                                          ; preds = %if.then3
  %11 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8741, !tbaa !2355
  %pid10 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %11, i32 0, i32 1, !dbg !8743, !ctir !290
  %12 = load i32, i32* %pid10, align 8, !dbg !8743, !tbaa !2342, !ctir !295
  %cmp11 = icmp eq i32 %12, 0, !dbg !8744
  br i1 %cmp11, label %if.then12, label %if.end18, !dbg !8745

if.then12:                                        ; preds = %if.else
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !8746, !ctir !536
  %13 = load i32, i32* %arrayidx13, align 4, !dbg !8746, !tbaa !2342
  %call14 = call i32 @close(i32 %13), !dbg !8748
  %14 = load i32, i32* %tempfd, align 4, !dbg !8749, !tbaa !2342
  call void @move_fd(i32 %14, i32 1), !dbg !8750
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !8751, !ctir !536
  %15 = load i32, i32* %arrayidx15, align 4, !dbg !8751, !tbaa !2342
  call void @move_fd(i32 %15, i32 0), !dbg !8752
  %16 = load i8*, i8** @compress_program, align 8, !dbg !8753, !tbaa !2355
  %17 = load i8*, i8** @compress_program, align 8, !dbg !8754, !tbaa !2355
  %call16 = call i32 (i8*, i8*, ...) @execlp(i8* %16, i8* %17, i8* null) #12, !dbg !8755
  %call17 = call i32* @__errno_location() #16, !dbg !8756
  %18 = load i32, i32* %call17, align 4, !dbg !8756, !tbaa !2342, !ctir !5
  call void @async_safe_die(i32 %18, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.176, i64 0, i64 0)) #15, !dbg !8757
  unreachable, !dbg !8757

if.end18:                                         ; preds = %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then6
  br label %if.end20, !dbg !8758

if.end20:                                         ; preds = %if.end19, %if.end
  %19 = load i32, i32* %tempfd, align 4, !dbg !8759, !tbaa !2342
  %call21 = call %struct._IO_FILE* @fdopen(i32 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i64 0, i64 0)) #12, !dbg !8760
  %20 = load %struct._IO_FILE**, %struct._IO_FILE*** %pfp.addr, align 8, !dbg !8761, !tbaa !2355
  store %struct._IO_FILE* %call21, %struct._IO_FILE** %20, align 8, !dbg !8762, !tbaa !2355, !ctir !277
  %21 = load %struct._IO_FILE**, %struct._IO_FILE*** %pfp.addr, align 8, !dbg !8763, !tbaa !2355
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !8765, !tbaa !2355, !ctir !277
  %tobool22 = icmp ne %struct._IO_FILE* %22, null, !dbg !8765
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !8766

if.then23:                                        ; preds = %if.end20
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.177, i64 0, i64 0)) #12, !dbg !8767
  %23 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8768, !tbaa !2355
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %23, i32 0, i32 3, !dbg !8769, !ctir !290
  %arraydecay25 = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !8768
  call void @sort_die(i8* %call24, i8* %arraydecay25) #15, !dbg !8770
  unreachable, !dbg !8770

if.end26:                                         ; preds = %if.end20
  %24 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8771, !tbaa !2355
  store %struct.tempnode* %24, %struct.tempnode** %retval, align 8, !dbg !8772
  br label %return, !dbg !8772

return:                                           ; preds = %if.end26, %if.then
  %25 = load %struct.tempnode*, %struct.tempnode** %retval, align 8, !dbg !8773
  ret %struct.tempnode* %25, !dbg !8773
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tempnode* @create_temp_file(i32* %pfd, i1 zeroext %survive_fd_exhaustion) #4 !dbg !789 !ctir !573 {
entry:
  %pfd.addr = alloca i32*, align 8, !ctir !257
  %survive_fd_exhaustion.addr = alloca i8, align 1, !ctir !102
  %fd = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  %temp_dir = alloca i8*, align 8, !ctir !87
  %len = alloca i64, align 8, !ctir !52
  %node = alloca %struct.tempnode*, align 8, !ctir !289
  %file = alloca i8*, align 8, !ctir !7
  %cs = alloca %struct.cs_status, align 8, !ctir !342
  store i32* %pfd, i32** %pfd.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32** %pfd.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  %frombool = zext i1 %survive_fd_exhaustion to i8
  store i8 %frombool, i8* %survive_fd_exhaustion.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %survive_fd_exhaustion.addr, metadata !8776, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !8778, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8780, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.declare(metadata i8** %temp_dir, metadata !8782, metadata !DIExpression()), !dbg !8783
  %0 = load i8**, i8*** @temp_dirs, align 8, !dbg !8784, !tbaa !2355
  %1 = load i64, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8785, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !8784, !ctir !371
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8784, !tbaa !2355
  store i8* %2, i8** %temp_dir, align 8, !dbg !8783, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8786, metadata !DIExpression()), !dbg !8787
  %3 = load i8*, i8** %temp_dir, align 8, !dbg !8788, !tbaa !2355
  %call = call i64 @strlen(i8* %3) #14, !dbg !8789
  store i64 %call, i64* %len, align 8, !dbg !8787, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !8790, metadata !DIExpression()), !dbg !8791
  %4 = load i64, i64* %len, align 8, !dbg !8792, !tbaa !2516
  %add = add i64 %4, 12, !dbg !8792
  %add1 = add i64 20, %add, !dbg !8792
  %and = and i64 %add1, -8, !dbg !8792
  %call2 = call noalias i8* @xmalloc(i64 %and), !dbg !8793
  %5 = bitcast i8* %call2 to %struct.tempnode*, !dbg !8793
  store %struct.tempnode* %5, %struct.tempnode** %node, align 8, !dbg !8791, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file, metadata !8794, metadata !DIExpression()), !dbg !8795
  %6 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8796, !tbaa !2355
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %6, i32 0, i32 3, !dbg !8797, !ctir !290
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !8796
  store i8* %arraydecay, i8** %file, align 8, !dbg !8795, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !8798, metadata !DIExpression()), !dbg !8799
  %7 = load i8*, i8** %file, align 8, !dbg !8800, !tbaa !2355
  %8 = load i8*, i8** %temp_dir, align 8, !dbg !8801, !tbaa !2355
  %9 = load i64, i64* %len, align 8, !dbg !8802, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 %9, i1 false), !dbg !8803
  %10 = load i8*, i8** %file, align 8, !dbg !8804, !tbaa !2355
  %11 = load i64, i64* %len, align 8, !dbg !8805, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !8806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @create_temp_file.slashbase, i64 0, i64 0), i64 12, i1 false), !dbg !8807
  %12 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8808, !tbaa !2355
  %next = getelementptr inbounds %struct.tempnode, %struct.tempnode* %12, i32 0, i32 0, !dbg !8809, !ctir !290
  store volatile %struct.tempnode* null, %struct.tempnode** %next, align 8, !dbg !8810, !tbaa !2355, !ctir !293
  %13 = load i64, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8811, !tbaa !2516
  %inc = add i64 %13, 1, !dbg !8811
  store i64 %inc, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8811, !tbaa !2516
  %14 = load i64, i64* @temp_dir_count, align 8, !dbg !8813, !tbaa !2516
  %cmp = icmp eq i64 %inc, %14, !dbg !8814
  br i1 %cmp, label %if.then, label %if.end, !dbg !8815

if.then:                                          ; preds = %entry
  store i64 0, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8816, !tbaa !2516
  br label %if.end, !dbg !8817

if.end:                                           ; preds = %if.then, %entry
  call void @cs_enter(%struct.cs_status* %cs), !dbg !8818
  %15 = load i8*, i8** %file, align 8, !dbg !8819, !tbaa !2355
  %call3 = call i32 @mkostemp_safer(i8* %15, i32 524288), !dbg !8820
  store i32 %call3, i32* %fd, align 4, !dbg !8821, !tbaa !2342
  %16 = load i32, i32* %fd, align 4, !dbg !8822, !tbaa !2342
  %cmp4 = icmp sle i32 0, %16, !dbg !8824
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8825

if.then5:                                         ; preds = %if.end
  %17 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8826, !tbaa !2355
  %18 = load %struct.tempnode**, %struct.tempnode*** @temptail, align 8, !dbg !8828, !tbaa !2355
  store volatile %struct.tempnode* %17, %struct.tempnode** %18, align 8, !dbg !8829, !tbaa !2355, !ctir !293
  %19 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8830, !tbaa !2355
  %next6 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %19, i32 0, i32 0, !dbg !8831, !ctir !290
  store %struct.tempnode** %next6, %struct.tempnode*** @temptail, align 8, !dbg !8832, !tbaa !2355
  br label %if.end7, !dbg !8833

if.end7:                                          ; preds = %if.then5, %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !8834
  %20 = load i32, i32* %call8, align 4, !dbg !8834, !tbaa !2342, !ctir !5
  store i32 %20, i32* %saved_errno, align 4, !dbg !8835, !tbaa !2342
  call void @cs_leave(%struct.cs_status* %cs), !dbg !8836
  %21 = load i32, i32* %saved_errno, align 4, !dbg !8837, !tbaa !2342
  %call9 = call i32* @__errno_location() #16, !dbg !8838
  store i32 %21, i32* %call9, align 4, !dbg !8839, !tbaa !2342, !ctir !5
  %22 = load i32, i32* %fd, align 4, !dbg !8840, !tbaa !2342
  %cmp10 = icmp slt i32 %22, 0, !dbg !8842
  br i1 %cmp10, label %if.then11, label %if.end19, !dbg !8843

if.then11:                                        ; preds = %if.end7
  %23 = load i8, i8* %survive_fd_exhaustion.addr, align 1, !dbg !8844, !tbaa !2499
  %tobool = trunc i8 %23 to i1, !dbg !8844
  br i1 %tobool, label %land.lhs.true, label %if.then14, !dbg !8847

land.lhs.true:                                    ; preds = %if.then11
  %call12 = call i32* @__errno_location() #16, !dbg !8848
  %24 = load i32, i32* %call12, align 4, !dbg !8848, !tbaa !2342, !ctir !5
  %cmp13 = icmp eq i32 %24, 24, !dbg !8849
  br i1 %cmp13, label %if.end18, label %if.then14, !dbg !8850

if.then14:                                        ; preds = %land.lhs.true, %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !8851
  %25 = load i32, i32* %call15, align 4, !dbg !8851, !tbaa !2342, !ctir !5
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.178, i64 0, i64 0)) #12, !dbg !8851
  %26 = load i8*, i8** %temp_dir, align 8, !dbg !8851, !tbaa !2355
  %call17 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !8851
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %25, i8* %call16, i8* %call17), !dbg !8851
  unreachable, !dbg !8851

if.end18:                                         ; preds = %land.lhs.true
  %27 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8852, !tbaa !2355
  %28 = bitcast %struct.tempnode* %27 to i8*, !dbg !8852
  call void @free(i8* %28) #12, !dbg !8853
  store %struct.tempnode* null, %struct.tempnode** %node, align 8, !dbg !8854, !tbaa !2355
  br label %if.end19, !dbg !8855

if.end19:                                         ; preds = %if.end18, %if.end7
  %29 = load i32, i32* %fd, align 4, !dbg !8856, !tbaa !2342
  %30 = load i32*, i32** %pfd.addr, align 8, !dbg !8857, !tbaa !2355
  store i32 %29, i32* %30, align 4, !dbg !8858, !tbaa !2342, !ctir !5
  %31 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8859, !tbaa !2355
  ret %struct.tempnode* %31, !dbg !8860
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @pipe_fork(i32* %pipefds, i64 %tries) #4 !dbg !8861 !ctir !556 {
entry:
  %retval = alloca i32, align 4, !ctir !295
  %pipefds.addr = alloca i32*, align 8, !ctir !257
  %tries.addr = alloca i64, align 8, !ctir !52
  %saved_temphead = alloca %struct.tempnode*, align 8, !ctir !289
  %saved_errno = alloca i32, align 4, !ctir !5
  %wait_retry = alloca double, align 8, !ctir !370
  %pid = alloca i32, align 4, !ctir !295
  %cs = alloca %struct.cs_status, align 8, !ctir !342
  store i32* %pipefds, i32** %pipefds.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32** %pipefds.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  store i64 %tries, i64* %tries.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %tries.addr, metadata !8864, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.declare(metadata %struct.tempnode** %saved_temphead, metadata !8866, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.declare(metadata double* %wait_retry, metadata !8870, metadata !DIExpression()), !dbg !8871
  store double 2.500000e-01, double* %wait_retry, align 8, !dbg !8871, !tbaa !3931
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !8874, metadata !DIExpression()), !dbg !8875
  %0 = load i32*, i32** %pipefds.addr, align 8, !dbg !8876, !tbaa !2355
  %call = call i32 @rpl_pipe2(i32* %0, i32 524288), !dbg !8878
  %cmp = icmp slt i32 %call, 0, !dbg !8879
  br i1 %cmp, label %if.then, label %if.end, !dbg !8880

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8881
  br label %return, !dbg !8881

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @nmerge, align 4, !dbg !8882, !tbaa !2342
  %add = add i32 %1, 1, !dbg !8884
  %2 = load i32, i32* @nprocs, align 4, !dbg !8885, !tbaa !2342
  %cmp1 = icmp ult i32 %add, %2, !dbg !8886
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8887

if.then2:                                         ; preds = %if.end
  call void @reap_some(), !dbg !8888
  br label %if.end3, !dbg !8888

if.end3:                                          ; preds = %if.then2, %if.end
  br label %while.cond, !dbg !8889

while.cond:                                       ; preds = %if.end15, %if.end3
  %3 = load i64, i64* %tries.addr, align 8, !dbg !8890, !tbaa !2516
  %dec = add i64 %3, -1, !dbg !8890
  store i64 %dec, i64* %tries.addr, align 8, !dbg !8890, !tbaa !2516
  %tobool = icmp ne i64 %3, 0, !dbg !8889
  br i1 %tobool, label %while.body, label %while.end, !dbg !8889

while.body:                                       ; preds = %while.cond
  call void @cs_enter(%struct.cs_status* %cs), !dbg !8891
  %4 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !8893, !tbaa !2355
  store %struct.tempnode* %4, %struct.tempnode** %saved_temphead, align 8, !dbg !8894, !tbaa !2355
  store volatile %struct.tempnode* null, %struct.tempnode** @temphead, align 8, !dbg !8895, !tbaa !2355
  %call4 = call i32 @fork() #12, !dbg !8896
  store i32 %call4, i32* %pid, align 4, !dbg !8897, !tbaa !2342
  %call5 = call i32* @__errno_location() #16, !dbg !8898
  %5 = load i32, i32* %call5, align 4, !dbg !8898, !tbaa !2342, !ctir !5
  store i32 %5, i32* %saved_errno, align 4, !dbg !8899, !tbaa !2342
  %6 = load i32, i32* %pid, align 4, !dbg !8900, !tbaa !2342
  %tobool6 = icmp ne i32 %6, 0, !dbg !8900
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8902

if.then7:                                         ; preds = %while.body
  %7 = load %struct.tempnode*, %struct.tempnode** %saved_temphead, align 8, !dbg !8903, !tbaa !2355
  store volatile %struct.tempnode* %7, %struct.tempnode** @temphead, align 8, !dbg !8904, !tbaa !2355
  br label %if.end8, !dbg !8905

if.end8:                                          ; preds = %if.then7, %while.body
  call void @cs_leave(%struct.cs_status* %cs), !dbg !8906
  %8 = load i32, i32* %saved_errno, align 4, !dbg !8907, !tbaa !2342
  %call9 = call i32* @__errno_location() #16, !dbg !8908
  store i32 %8, i32* %call9, align 4, !dbg !8909, !tbaa !2342, !ctir !5
  %9 = load i32, i32* %pid, align 4, !dbg !8910, !tbaa !2342
  %cmp10 = icmp sle i32 0, %9, !dbg !8912
  br i1 %cmp10, label %if.then13, label %lor.lhs.false, !dbg !8913

lor.lhs.false:                                    ; preds = %if.end8
  %call11 = call i32* @__errno_location() #16, !dbg !8914
  %10 = load i32, i32* %call11, align 4, !dbg !8914, !tbaa !2342, !ctir !5
  %cmp12 = icmp ne i32 %10, 11, !dbg !8915
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !8916

if.then13:                                        ; preds = %lor.lhs.false, %if.end8
  br label %while.end, !dbg !8917

if.else:                                          ; preds = %lor.lhs.false
  %11 = load double, double* %wait_retry, align 8, !dbg !8918, !tbaa !3931
  %call14 = call i32 @xnanosleep(double %11), !dbg !8920
  %12 = load double, double* %wait_retry, align 8, !dbg !8921, !tbaa !3931
  %mul = fmul double %12, 2.000000e+00, !dbg !8921
  store double %mul, double* %wait_retry, align 8, !dbg !8921, !tbaa !3931
  call void @reap_exited(), !dbg !8922
  br label %if.end15

if.end15:                                         ; preds = %if.else
  br label %while.cond, !dbg !8889, !llvm.loop !8923

while.end:                                        ; preds = %if.then13, %while.cond
  %13 = load i32, i32* %pid, align 4, !dbg !8925, !tbaa !2342
  %cmp16 = icmp slt i32 %13, 0, !dbg !8927
  br i1 %cmp16, label %if.then17, label %if.else23, !dbg !8928

if.then17:                                        ; preds = %while.end
  %call18 = call i32* @__errno_location() #16, !dbg !8929
  %14 = load i32, i32* %call18, align 4, !dbg !8929, !tbaa !2342, !ctir !5
  store i32 %14, i32* %saved_errno, align 4, !dbg !8931, !tbaa !2342
  %15 = load i32*, i32** %pipefds.addr, align 8, !dbg !8932, !tbaa !2355
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 0, !dbg !8932, !ctir !257
  %16 = load i32, i32* %arrayidx, align 4, !dbg !8932, !tbaa !2342
  %call19 = call i32 @close(i32 %16), !dbg !8933
  %17 = load i32*, i32** %pipefds.addr, align 8, !dbg !8934, !tbaa !2355
  %arrayidx20 = getelementptr inbounds i32, i32* %17, i64 1, !dbg !8934, !ctir !257
  %18 = load i32, i32* %arrayidx20, align 4, !dbg !8934, !tbaa !2342
  %call21 = call i32 @close(i32 %18), !dbg !8935
  %19 = load i32, i32* %saved_errno, align 4, !dbg !8936, !tbaa !2342
  %call22 = call i32* @__errno_location() #16, !dbg !8937
  store i32 %19, i32* %call22, align 4, !dbg !8938, !tbaa !2342, !ctir !5
  br label %if.end30, !dbg !8939

if.else23:                                        ; preds = %while.end
  %20 = load i32, i32* %pid, align 4, !dbg !8940, !tbaa !2342
  %cmp24 = icmp eq i32 %20, 0, !dbg !8942
  br i1 %cmp24, label %if.then25, label %if.else28, !dbg !8943

if.then25:                                        ; preds = %if.else23
  %call26 = call i32 @close(i32 0), !dbg !8944
  %call27 = call i32 @close(i32 1), !dbg !8946
  br label %if.end29, !dbg !8947

if.else28:                                        ; preds = %if.else23
  %21 = load i32, i32* @nprocs, align 4, !dbg !8948, !tbaa !2342
  %inc = add nsw i32 %21, 1, !dbg !8948
  store i32 %inc, i32* @nprocs, align 4, !dbg !8948, !tbaa !2342
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then25
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then17
  %22 = load i32, i32* %pid, align 4, !dbg !8949, !tbaa !2342
  store i32 %22, i32* %retval, align 4, !dbg !8950
  br label %return, !dbg !8950

return:                                           ; preds = %if.end30, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !8951
  ret i32 %23, !dbg !8951
}

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @register_proc(%struct.tempnode* %temp) #4 !dbg !8952 !ctir !561 {
entry:
  %temp.addr = alloca %struct.tempnode*, align 8, !ctir !289
  store %struct.tempnode* %temp, %struct.tempnode** %temp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  %0 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !8955, !tbaa !2355
  %tobool = icmp ne %struct.hash_table* %0, null, !dbg !8955
  br i1 %tobool, label %if.end3, label %if.then, !dbg !8957

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 47, %struct.hash_tuning* null, i64 (i8*, i64)* @proctab_hasher, i1 (i8*, i8*)* @proctab_comparator, void (i8*)* null), !dbg !8958
  store %struct.hash_table* %call, %struct.hash_table** @proctab, align 8, !dbg !8960, !tbaa !2355
  %1 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !8961, !tbaa !2355
  %tobool1 = icmp ne %struct.hash_table* %1, null, !dbg !8961
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8963

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #15, !dbg !8964
  unreachable, !dbg !8964

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !8965

if.end3:                                          ; preds = %if.end, %entry
  %2 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !8966, !tbaa !2355
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 2, !dbg !8967, !ctir !290
  store i8 1, i8* %state, align 4, !dbg !8968, !tbaa !2507, !ctir !8
  %3 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !8969, !tbaa !2355
  %4 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !8971, !tbaa !2355
  %5 = bitcast %struct.tempnode* %4 to i8*, !dbg !8971
  %call4 = call i8* @hash_insert(%struct.hash_table* %3, i8* %5), !dbg !8972
  %tobool5 = icmp ne i8* %call4, null, !dbg !8972
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8973

if.then6:                                         ; preds = %if.end3
  call void @xalloc_die() #15, !dbg !8974
  unreachable, !dbg !8974

if.end7:                                          ; preds = %if.end3
  ret void, !dbg !8975
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @move_fd(i32 %oldfd, i32 %newfd) #4 !dbg !8976 !ctir !522 {
entry:
  %oldfd.addr = alloca i32, align 4, !ctir !5
  %newfd.addr = alloca i32, align 4, !ctir !5
  store i32 %oldfd, i32* %oldfd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %oldfd.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  store i32 %newfd, i32* %newfd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %newfd.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  %0 = load i32, i32* %oldfd.addr, align 4, !dbg !8981, !tbaa !2342
  %1 = load i32, i32* %newfd.addr, align 4, !dbg !8983, !tbaa !2342
  %cmp = icmp ne i32 %0, %1, !dbg !8984
  br i1 %cmp, label %if.then, label %if.end, !dbg !8985

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %oldfd.addr, align 4, !dbg !8986, !tbaa !2342
  %3 = load i32, i32* %newfd.addr, align 4, !dbg !8988, !tbaa !2342
  %call = call i32 @dup2(i32 %2, i32 %3) #12, !dbg !8989
  %4 = load i32, i32* %oldfd.addr, align 4, !dbg !8990, !tbaa !2342
  %call1 = call i32 @close(i32 %4), !dbg !8991
  br label %if.end, !dbg !8992

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8993
}

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @async_safe_die(i32 %errnum, i8* %errstr) #0 !dbg !8994 !ctir !558 {
entry:
  %errnum.addr = alloca i32, align 4, !ctir !5
  %errstr.addr = alloca i8*, align 8, !ctir !87
  %__x = alloca i64, align 8, !ctir !1732
  %errbuf = alloca [12 x i8], align 1, !ctir !560
  %p = alloca i8*, align 8, !ctir !7
  %__x3 = alloca i64, align 8, !ctir !1732
  %__x5 = alloca i64, align 8, !ctir !1732
  %__x8 = alloca i64, align 8, !ctir !1732
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !8995, metadata !DIExpression()), !dbg !8996
  store i8* %errstr, i8** %errstr.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %errstr.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.declare(metadata i64* %__x, metadata !8999, metadata !DIExpression()), !dbg !9001
  %0 = load i8*, i8** %errstr.addr, align 8, !dbg !9001, !tbaa !2355
  %1 = load i8*, i8** %errstr.addr, align 8, !dbg !9001, !tbaa !2355
  %call = call i64 @strlen(i8* %1) #14, !dbg !9001
  %call1 = call i64 @write(i32 2, i8* %0, i64 %call), !dbg !9001
  store i64 %call1, i64* %__x, align 8, !dbg !9001, !tbaa !2516
  %2 = load i64, i64* %__x, align 8, !dbg !9001, !tbaa !2516
  %3 = load i32, i32* %errnum.addr, align 4, !dbg !9002, !tbaa !2342
  %tobool = icmp ne i32 %3, 0, !dbg !9002
  br i1 %tobool, label %if.then, label %if.end, !dbg !9004

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %errbuf, metadata !9005, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9008, metadata !DIExpression()), !dbg !9009
  %4 = load i32, i32* %errnum.addr, align 4, !dbg !9010, !tbaa !2342
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %errbuf, i64 0, i64 0, !dbg !9011
  %call2 = call i8* @inttostr(i32 %4, i8* %arraydecay), !dbg !9012
  store i8* %call2, i8** %p, align 8, !dbg !9009, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %__x3, metadata !9013, metadata !DIExpression()), !dbg !9015
  %call4 = call i64 @write(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.173, i64 0, i64 0), i64 8), !dbg !9015
  store i64 %call4, i64* %__x3, align 8, !dbg !9015, !tbaa !2516
  %5 = load i64, i64* %__x3, align 8, !dbg !9015, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %__x5, metadata !9016, metadata !DIExpression()), !dbg !9018
  %6 = load i8*, i8** %p, align 8, !dbg !9018, !tbaa !2355
  %7 = load i8*, i8** %p, align 8, !dbg !9018, !tbaa !2355
  %call6 = call i64 @strlen(i8* %7) #14, !dbg !9018
  %call7 = call i64 @write(i32 2, i8* %6, i64 %call6), !dbg !9018
  store i64 %call7, i64* %__x5, align 8, !dbg !9018, !tbaa !2516
  %8 = load i64, i64* %__x5, align 8, !dbg !9018, !tbaa !2516
  br label %if.end, !dbg !9019

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %__x8, metadata !9020, metadata !DIExpression()), !dbg !9022
  %call9 = call i64 @write(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i64 1), !dbg !9022
  store i64 %call9, i64* %__x8, align 8, !dbg !9022, !tbaa !2516
  %9 = load i64, i64* %__x8, align 8, !dbg !9022, !tbaa !2516
  call void @_exit(i32 2) #15, !dbg !9023
  unreachable, !dbg !9023
}

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #10

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @proctab_hasher(i8* %entry1, i64 %tabsize) #4 !dbg !9024 !ctir !563 {
entry:
  %entry.addr = alloca i8*, align 8, !ctir !85
  %tabsize.addr = alloca i64, align 8, !ctir !52
  %node = alloca %struct.tempnode*, align 8, !ctir !337
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store i64 %tabsize, i64* %tabsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %tabsize.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !9029, metadata !DIExpression()), !dbg !9030
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !9031, !tbaa !2355
  %1 = bitcast i8* %0 to %struct.tempnode*, !dbg !9031
  store %struct.tempnode* %1, %struct.tempnode** %node, align 8, !dbg !9030, !tbaa !2355
  %2 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !9032, !tbaa !2355
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 1, !dbg !9033, !ctir !338
  %3 = load i32, i32* %pid, align 8, !dbg !9033, !tbaa !2342, !ctir !295
  %conv = sext i32 %3 to i64, !dbg !9032
  %4 = load i64, i64* %tabsize.addr, align 8, !dbg !9034, !tbaa !2516
  %rem = urem i64 %conv, %4, !dbg !9035
  ret i64 %rem, !dbg !9036
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @proctab_comparator(i8* %e1, i8* %e2) #4 !dbg !9037 !ctir !565 {
entry:
  %e1.addr = alloca i8*, align 8, !ctir !85
  %e2.addr = alloca i8*, align 8, !ctir !85
  %n1 = alloca %struct.tempnode*, align 8, !ctir !337
  %n2 = alloca %struct.tempnode*, align 8, !ctir !337
  store i8* %e1, i8** %e1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %e1.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  store i8* %e2, i8** %e2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %e2.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.declare(metadata %struct.tempnode** %n1, metadata !9042, metadata !DIExpression()), !dbg !9043
  %0 = load i8*, i8** %e1.addr, align 8, !dbg !9044, !tbaa !2355
  %1 = bitcast i8* %0 to %struct.tempnode*, !dbg !9044
  store %struct.tempnode* %1, %struct.tempnode** %n1, align 8, !dbg !9043, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.tempnode** %n2, metadata !9045, metadata !DIExpression()), !dbg !9046
  %2 = load i8*, i8** %e2.addr, align 8, !dbg !9047, !tbaa !2355
  %3 = bitcast i8* %2 to %struct.tempnode*, !dbg !9047
  store %struct.tempnode* %3, %struct.tempnode** %n2, align 8, !dbg !9046, !tbaa !2355
  %4 = load %struct.tempnode*, %struct.tempnode** %n1, align 8, !dbg !9048, !tbaa !2355
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 1, !dbg !9049, !ctir !338
  %5 = load i32, i32* %pid, align 8, !dbg !9049, !tbaa !2342, !ctir !295
  %6 = load %struct.tempnode*, %struct.tempnode** %n2, align 8, !dbg !9050, !tbaa !2355
  %pid1 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %6, i32 0, i32 1, !dbg !9051, !ctir !338
  %7 = load i32, i32* %pid1, align 8, !dbg !9051, !tbaa !2342, !ctir !295
  %cmp = icmp eq i32 %5, %7, !dbg !9052
  ret i1 %cmp, !dbg !9053
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reap_some() #4 !dbg !9054 !ctir !167 {
entry:
  %call = call i32 @reap(i32 -1), !dbg !9055
  call void @reap_exited(), !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cs_enter(%struct.cs_status* %status) #4 !dbg !9058 !ctir !339 {
entry:
  %status.addr = alloca %struct.cs_status*, align 8, !ctir !341
  %ret = alloca i32, align 4, !ctir !5
  store %struct.cs_status* %status, %struct.cs_status** %status.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.cs_status** %status.addr, metadata !9059, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9061, metadata !DIExpression()), !dbg !9062
  %0 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9063, !tbaa !2355
  %sigs = getelementptr inbounds %struct.cs_status, %struct.cs_status* %0, i32 0, i32 1, !dbg !9064, !ctir !342
  %call = call i32 @pthread_sigmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %sigs) #12, !dbg !9065
  store i32 %call, i32* %ret, align 4, !dbg !9062, !tbaa !2342
  %1 = load i32, i32* %ret, align 4, !dbg !9066, !tbaa !2342
  %cmp = icmp eq i32 %1, 0, !dbg !9067
  %2 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9068, !tbaa !2355
  %valid = getelementptr inbounds %struct.cs_status, %struct.cs_status* %2, i32 0, i32 0, !dbg !9069, !ctir !342
  %frombool = zext i1 %cmp to i8, !dbg !9070
  store i8 %frombool, i8* %valid, align 8, !dbg !9070, !tbaa !9071, !ctir !102
  ret void, !dbg !9073
}

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cs_leave(%struct.cs_status* %status) #4 !dbg !9074 !ctir !346 {
entry:
  %status.addr = alloca %struct.cs_status*, align 8, !ctir !348
  store %struct.cs_status* %status, %struct.cs_status** %status.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.cs_status** %status.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  %0 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9077, !tbaa !2355
  %valid = getelementptr inbounds %struct.cs_status, %struct.cs_status* %0, i32 0, i32 0, !dbg !9079, !ctir !349
  %1 = load i8, i8* %valid, align 8, !dbg !9079, !tbaa !9071
  %tobool = trunc i8 %1 to i1, !dbg !9079, !ctir !102
  br i1 %tobool, label %if.then, label %if.end, !dbg !9080

if.then:                                          ; preds = %entry
  %2 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9081, !tbaa !2355
  %sigs = getelementptr inbounds %struct.cs_status, %struct.cs_status* %2, i32 0, i32 1, !dbg !9083, !ctir !349
  %call = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* %sigs, %struct.__sigset_t* null) #12, !dbg !9084
  br label %if.end, !dbg !9085

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reap_exited() #4 !dbg !9087 !ctir !167 {
entry:
  br label %while.cond, !dbg !9088

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* @nprocs, align 4, !dbg !9089, !tbaa !2342
  %cmp = icmp slt i32 0, %0, !dbg !9090
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9091

land.rhs:                                         ; preds = %while.cond
  %call = call i32 @reap(i32 0), !dbg !9092
  %tobool = icmp ne i32 %call, 0, !dbg !9091
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %1 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !9093
  br i1 %1, label %while.body, label %while.end, !dbg !9088

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !9094, !llvm.loop !9095

while.end:                                        ; preds = %land.end
  ret void, !dbg !9096
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_sigmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @feof_unlocked(%struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #7

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @default_sort_size() #4 !dbg !9097 !ctir !626 {
entry:
  %size = alloca i64, align 8, !ctir !52
  %rlimit = alloca %struct.timespec, align 8, !ctir !3794
  %avail = alloca double, align 8, !ctir !370
  %total = alloca double, align 8, !ctir !370
  %mem = alloca double, align 8, !ctir !370
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9098, metadata !DIExpression()), !dbg !9099
  store i64 -1, i64* %size, align 8, !dbg !9099, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.timespec* %rlimit, metadata !9100, metadata !DIExpression()), !dbg !9101
  %call = call i32 @getrlimit(i32 2, %struct.timespec* %rlimit) #12, !dbg !9102
  %cmp = icmp eq i32 %call, 0, !dbg !9104
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9105

land.lhs.true:                                    ; preds = %entry
  %rlim_cur = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9106, !ctir !3794
  %0 = load i64, i64* %rlim_cur, align 8, !dbg !9106, !tbaa !3817, !ctir !366
  %1 = load i64, i64* %size, align 8, !dbg !9107, !tbaa !2516
  %cmp1 = icmp ult i64 %0, %1, !dbg !9108
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9109

if.then:                                          ; preds = %land.lhs.true
  %rlim_cur2 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9110, !ctir !3794
  %2 = load i64, i64* %rlim_cur2, align 8, !dbg !9110, !tbaa !3817, !ctir !366
  store i64 %2, i64* %size, align 8, !dbg !9111, !tbaa !2516
  br label %if.end, !dbg !9112

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call3 = call i32 @getrlimit(i32 9, %struct.timespec* %rlimit) #12, !dbg !9113
  %cmp4 = icmp eq i32 %call3, 0, !dbg !9115
  br i1 %cmp4, label %land.lhs.true5, label %if.end10, !dbg !9116

land.lhs.true5:                                   ; preds = %if.end
  %rlim_cur6 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9117, !ctir !3794
  %3 = load i64, i64* %rlim_cur6, align 8, !dbg !9117, !tbaa !3817, !ctir !366
  %4 = load i64, i64* %size, align 8, !dbg !9118, !tbaa !2516
  %cmp7 = icmp ult i64 %3, %4, !dbg !9119
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9120

if.then8:                                         ; preds = %land.lhs.true5
  %rlim_cur9 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9121, !ctir !3794
  %5 = load i64, i64* %rlim_cur9, align 8, !dbg !9121, !tbaa !3817, !ctir !366
  store i64 %5, i64* %size, align 8, !dbg !9122, !tbaa !2516
  br label %if.end10, !dbg !9123

if.end10:                                         ; preds = %if.then8, %land.lhs.true5, %if.end
  %6 = load i64, i64* %size, align 8, !dbg !9124, !tbaa !2516
  %div = udiv i64 %6, 2, !dbg !9124
  store i64 %div, i64* %size, align 8, !dbg !9124, !tbaa !2516
  %call11 = call i32 @getrlimit(i32 5, %struct.timespec* %rlimit) #12, !dbg !9125
  %cmp12 = icmp eq i32 %call11, 0, !dbg !9127
  br i1 %cmp12, label %land.lhs.true13, label %if.end21, !dbg !9128

land.lhs.true13:                                  ; preds = %if.end10
  %rlim_cur14 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9129, !ctir !3794
  %7 = load i64, i64* %rlim_cur14, align 8, !dbg !9129, !tbaa !3817, !ctir !366
  %div15 = udiv i64 %7, 16, !dbg !9130
  %mul = mul i64 %div15, 15, !dbg !9131
  %8 = load i64, i64* %size, align 8, !dbg !9132, !tbaa !2516
  %cmp16 = icmp ult i64 %mul, %8, !dbg !9133
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !9134

if.then17:                                        ; preds = %land.lhs.true13
  %rlim_cur18 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9135, !ctir !3794
  %9 = load i64, i64* %rlim_cur18, align 8, !dbg !9135, !tbaa !3817, !ctir !366
  %div19 = udiv i64 %9, 16, !dbg !9136
  %mul20 = mul i64 %div19, 15, !dbg !9137
  store i64 %mul20, i64* %size, align 8, !dbg !9138, !tbaa !2516
  br label %if.end21, !dbg !9139

if.end21:                                         ; preds = %if.then17, %land.lhs.true13, %if.end10
  call void @llvm.dbg.declare(metadata double* %avail, metadata !9140, metadata !DIExpression()), !dbg !9141
  %call22 = call double @physmem_available(), !dbg !9142
  store double %call22, double* %avail, align 8, !dbg !9141, !tbaa !3931
  call void @llvm.dbg.declare(metadata double* %total, metadata !9143, metadata !DIExpression()), !dbg !9144
  %call23 = call double @physmem_total(), !dbg !9145
  store double %call23, double* %total, align 8, !dbg !9144, !tbaa !3931
  call void @llvm.dbg.declare(metadata double* %mem, metadata !9146, metadata !DIExpression()), !dbg !9147
  %10 = load double, double* %avail, align 8, !dbg !9148, !tbaa !3931
  %11 = load double, double* %total, align 8, !dbg !9148, !tbaa !3931
  %div24 = fdiv double %11, 8.000000e+00, !dbg !9148
  %cmp25 = fcmp ogt double %10, %div24, !dbg !9148
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !9148

cond.true:                                        ; preds = %if.end21
  %12 = load double, double* %avail, align 8, !dbg !9148, !tbaa !3931
  br label %cond.end, !dbg !9148

cond.false:                                       ; preds = %if.end21
  %13 = load double, double* %total, align 8, !dbg !9148, !tbaa !3931
  %div26 = fdiv double %13, 8.000000e+00, !dbg !9148
  br label %cond.end, !dbg !9148

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %12, %cond.true ], [ %div26, %cond.false ], !dbg !9148
  store double %cond, double* %mem, align 8, !dbg !9147, !tbaa !3931
  %14 = load double, double* %total, align 8, !dbg !9149, !tbaa !3931
  %mul27 = fmul double %14, 7.500000e-01, !dbg !9151
  %15 = load i64, i64* %size, align 8, !dbg !9152, !tbaa !2516
  %conv = uitofp i64 %15 to double, !dbg !9152
  %cmp28 = fcmp olt double %mul27, %conv, !dbg !9153
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !9154

if.then30:                                        ; preds = %cond.end
  %16 = load double, double* %total, align 8, !dbg !9155, !tbaa !3931
  %mul31 = fmul double %16, 7.500000e-01, !dbg !9156
  %conv32 = fptoui double %mul31 to i64, !dbg !9155
  store i64 %conv32, i64* %size, align 8, !dbg !9157, !tbaa !2516
  br label %if.end33, !dbg !9158

if.end33:                                         ; preds = %if.then30, %cond.end
  %17 = load double, double* %mem, align 8, !dbg !9159, !tbaa !3931
  %18 = load i64, i64* %size, align 8, !dbg !9161, !tbaa !2516
  %conv34 = uitofp i64 %18 to double, !dbg !9161
  %cmp35 = fcmp olt double %17, %conv34, !dbg !9162
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !9163

if.then37:                                        ; preds = %if.end33
  %19 = load double, double* %mem, align 8, !dbg !9164, !tbaa !3931
  %conv38 = fptoui double %19 to i64, !dbg !9164
  store i64 %conv38, i64* %size, align 8, !dbg !9165, !tbaa !2516
  br label %if.end39, !dbg !9166

if.end39:                                         ; preds = %if.then37, %if.end33
  %20 = load i64, i64* %size, align 8, !dbg !9167, !tbaa !2516
  %21 = load i32, i32* @nmerge, align 4, !dbg !9167, !tbaa !2342
  %conv40 = zext i32 %21 to i64, !dbg !9167
  %mul41 = mul i64 %conv40, 34, !dbg !9167
  %cmp42 = icmp ugt i64 %20, %mul41, !dbg !9167
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !9167

cond.true44:                                      ; preds = %if.end39
  %22 = load i64, i64* %size, align 8, !dbg !9167, !tbaa !2516
  br label %cond.end48, !dbg !9167

cond.false45:                                     ; preds = %if.end39
  %23 = load i32, i32* @nmerge, align 4, !dbg !9167, !tbaa !2342
  %conv46 = zext i32 %23 to i64, !dbg !9167
  %mul47 = mul i64 %conv46, 34, !dbg !9167
  br label %cond.end48, !dbg !9167

cond.end48:                                       ; preds = %cond.false45, %cond.true44
  %cond49 = phi i64 [ %22, %cond.true44 ], [ %mul47, %cond.false45 ], !dbg !9167
  ret i64 %cond49, !dbg !9168
}

; Function Attrs: nounwind
declare dso_local i32 @getrlimit(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mergefiles(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, %struct._IO_FILE* %ofp, i8* %output_file) #4 !dbg !9169 !ctir !529 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8, !ctir !284
  %ntemps.addr = alloca i64, align 8, !ctir !52
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %ofp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %output_file.addr = alloca i8*, align 8, !ctir !87
  %fps = alloca %struct._IO_FILE**, align 8, !ctir !526
  %nopened = alloca i64, align 8, !ctir !52
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9170, metadata !DIExpression()), !dbg !9171
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  store %struct._IO_FILE* %ofp, %struct._IO_FILE** %ofp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %ofp.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !9178, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps, metadata !9180, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.declare(metadata i64* %nopened, metadata !9182, metadata !DIExpression()), !dbg !9183
  %0 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9184, !tbaa !2355
  %1 = load i64, i64* %nfiles.addr, align 8, !dbg !9185, !tbaa !2516
  %call = call i64 @open_input_files(%struct.sortfile* %0, i64 %1, %struct._IO_FILE*** %fps), !dbg !9186
  store i64 %call, i64* %nopened, align 8, !dbg !9183, !tbaa !2516
  %2 = load i64, i64* %nopened, align 8, !dbg !9187, !tbaa !2516
  %3 = load i64, i64* %nfiles.addr, align 8, !dbg !9189, !tbaa !2516
  %cmp = icmp ult i64 %2, %3, !dbg !9190
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9191

land.lhs.true:                                    ; preds = %entry
  %4 = load i64, i64* %nopened, align 8, !dbg !9192, !tbaa !2516
  %cmp1 = icmp ult i64 %4, 2, !dbg !9193
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9194

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !9195
  %5 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9196, !tbaa !2355
  %6 = load i64, i64* %nopened, align 8, !dbg !9197, !tbaa !2516
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %5, i64 %6, !dbg !9196, !ctir !284
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 0, !dbg !9198, !ctir !285
  %7 = load i8*, i8** %name, align 8, !dbg !9198, !tbaa !3414, !ctir !87
  call void @sort_die(i8* %call2, i8* %7) #15, !dbg !9199
  unreachable, !dbg !9199

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9200, !tbaa !2355
  %9 = load i64, i64* %ntemps.addr, align 8, !dbg !9201, !tbaa !2516
  %10 = load i64, i64* %nopened, align 8, !dbg !9202, !tbaa !2516
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9203, !tbaa !2355
  %12 = load i8*, i8** %output_file.addr, align 8, !dbg !9204, !tbaa !2355
  %13 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !9205, !tbaa !2355
  call void @mergefps(%struct.sortfile* %8, i64 %9, i64 %10, %struct._IO_FILE* %11, i8* %12, %struct._IO_FILE** %13), !dbg !9206
  %14 = load i64, i64* %nopened, align 8, !dbg !9207, !tbaa !2516
  ret i64 %14, !dbg !9208
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @avoid_trashing_input(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, i8* %outfile) #4 !dbg !9209 !ctir !524 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8, !ctir !284
  %ntemps.addr = alloca i64, align 8, !ctir !52
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %outfile.addr = alloca i8*, align 8, !ctir !87
  %tempcopy = alloca %struct.tempnode*, align 8, !ctir !289
  %i = alloca i64, align 8, !ctir !52
  %is_stdin = alloca i8, align 1, !ctir !102
  %same = alloca i8, align 1, !ctir !102
  %instat = alloca %struct.stat, align 8, !ctir !377
  %outst = alloca %struct.stat*, align 8, !ctir !376
  %tftp = alloca %struct._IO_FILE*, align 8, !ctir !277
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9210, metadata !DIExpression()), !dbg !9211
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !9212, metadata !DIExpression()), !dbg !9213
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9214, metadata !DIExpression()), !dbg !9215
  store i8* %outfile, i8** %outfile.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %outfile.addr, metadata !9216, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.declare(metadata %struct.tempnode** %tempcopy, metadata !9218, metadata !DIExpression()), !dbg !9219
  store %struct.tempnode* null, %struct.tempnode** %tempcopy, align 8, !dbg !9219, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9220, metadata !DIExpression()), !dbg !9222
  %0 = load i64, i64* %ntemps.addr, align 8, !dbg !9223, !tbaa !2516
  store i64 %0, i64* %i, align 8, !dbg !9222, !tbaa !2516
  br label %for.cond, !dbg !9224

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !9225, !tbaa !2516
  %2 = load i64, i64* %nfiles.addr, align 8, !dbg !9227, !tbaa !2516
  %cmp = icmp ult i64 %1, %2, !dbg !9228
  br i1 %cmp, label %for.body, label %for.end, !dbg !9229

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %is_stdin, metadata !9230, metadata !DIExpression()), !dbg !9232
  %3 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9233, !tbaa !2355
  %4 = load i64, i64* %i, align 8, !dbg !9233, !tbaa !2516
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %3, i64 %4, !dbg !9233, !ctir !284
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 0, !dbg !9233, !ctir !285
  %5 = load i8*, i8** %name, align 8, !dbg !9233, !tbaa !3414, !ctir !87
  %call = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !9233
  %cmp1 = icmp eq i32 %call, 0, !dbg !9233
  %frombool = zext i1 %cmp1 to i8, !dbg !9232
  store i8 %frombool, i8* %is_stdin, align 1, !dbg !9232, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %same, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.declare(metadata %struct.stat* %instat, metadata !9236, metadata !DIExpression()), !dbg !9237
  %6 = load i8*, i8** %outfile.addr, align 8, !dbg !9238, !tbaa !2355
  %tobool = icmp ne i8* %6, null, !dbg !9238
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9240

land.lhs.true:                                    ; preds = %for.body
  %7 = load i8*, i8** %outfile.addr, align 8, !dbg !9241, !tbaa !2355
  %8 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9241, !tbaa !2355
  %9 = load i64, i64* %i, align 8, !dbg !9241, !tbaa !2516
  %arrayidx2 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %8, i64 %9, !dbg !9241, !ctir !284
  %name3 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx2, i32 0, i32 0, !dbg !9241, !ctir !285
  %10 = load i8*, i8** %name3, align 8, !dbg !9241, !tbaa !3414, !ctir !87
  %call4 = call i32 @strcmp(i8* %7, i8* %10) #14, !dbg !9241
  %cmp5 = icmp eq i32 %call4, 0, !dbg !9241
  br i1 %cmp5, label %land.lhs.true6, label %if.else, !dbg !9242

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i8, i8* %is_stdin, align 1, !dbg !9243, !tbaa !2499
  %tobool7 = trunc i8 %11 to i1, !dbg !9243
  br i1 %tobool7, label %if.else, label %if.then, !dbg !9244

if.then:                                          ; preds = %land.lhs.true6
  store i8 1, i8* %same, align 1, !dbg !9245, !tbaa !2499
  br label %if.end24, !dbg !9246

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true, %for.body
  call void @llvm.dbg.declare(metadata %struct.stat** %outst, metadata !9247, metadata !DIExpression()), !dbg !9249
  %call8 = call %struct.stat* @get_outstatus(), !dbg !9250
  store %struct.stat* %call8, %struct.stat** %outst, align 8, !dbg !9249, !tbaa !2355
  %12 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9251, !tbaa !2355
  %tobool9 = icmp ne %struct.stat* %12, null, !dbg !9251
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !9253

if.then10:                                        ; preds = %if.else
  br label %for.end, !dbg !9254

if.end:                                           ; preds = %if.else
  %13 = load i8, i8* %is_stdin, align 1, !dbg !9255, !tbaa !2499
  %tobool11 = trunc i8 %13 to i1, !dbg !9255
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !9255

cond.true:                                        ; preds = %if.end
  %call12 = call i32 @fstat(i32 0, %struct.stat* %instat) #12, !dbg !9256
  br label %cond.end, !dbg !9255

cond.false:                                       ; preds = %if.end
  %14 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9257, !tbaa !2355
  %15 = load i64, i64* %i, align 8, !dbg !9258, !tbaa !2516
  %arrayidx13 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %14, i64 %15, !dbg !9257, !ctir !284
  %name14 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx13, i32 0, i32 0, !dbg !9259, !ctir !285
  %16 = load i8*, i8** %name14, align 8, !dbg !9259, !tbaa !3414, !ctir !87
  %call15 = call i32 @stat(i8* %16, %struct.stat* %instat) #12, !dbg !9260
  br label %cond.end, !dbg !9255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call12, %cond.true ], [ %call15, %cond.false ], !dbg !9255
  %cmp16 = icmp eq i32 %cond, 0, !dbg !9261
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !9262

land.rhs:                                         ; preds = %cond.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %instat, i32 0, i32 1, !dbg !9263, !ctir !377
  %17 = load i64, i64* %st_ino, align 8, !dbg !9263, !tbaa !9264, !ctir !383
  %18 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9263, !tbaa !2355
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1, !dbg !9263, !ctir !377
  %19 = load i64, i64* %st_ino17, align 8, !dbg !9263, !tbaa !9264, !ctir !383
  %cmp18 = icmp eq i64 %17, %19, !dbg !9263
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !9263

land.rhs19:                                       ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %instat, i32 0, i32 0, !dbg !9263, !ctir !377
  %20 = load i64, i64* %st_dev, align 8, !dbg !9263, !tbaa !9265, !ctir !381
  %21 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9263, !tbaa !2355
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0, !dbg !9263, !ctir !377
  %22 = load i64, i64* %st_dev20, align 8, !dbg !9263, !tbaa !9265, !ctir !381
  %cmp21 = icmp eq i64 %20, %22, !dbg !9263
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %23 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !9266
  br label %land.end22

land.end22:                                       ; preds = %land.end, %cond.end
  %24 = phi i1 [ false, %cond.end ], [ %23, %land.end ], !dbg !9266
  %frombool23 = zext i1 %24 to i8, !dbg !9267
  store i8 %frombool23, i8* %same, align 1, !dbg !9267, !tbaa !2499
  br label %if.end24

if.end24:                                         ; preds = %land.end22, %if.then
  %25 = load i8, i8* %same, align 1, !dbg !9268, !tbaa !2499
  %tobool25 = trunc i8 %25 to i1, !dbg !9268
  br i1 %tobool25, label %if.then26, label %if.end39, !dbg !9270

if.then26:                                        ; preds = %if.end24
  %26 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9271, !tbaa !2355
  %tobool27 = icmp ne %struct.tempnode* %26, null, !dbg !9271
  br i1 %tobool27, label %if.end33, label %if.then28, !dbg !9274

if.then28:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tftp, metadata !9275, metadata !DIExpression()), !dbg !9277
  %call29 = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tftp), !dbg !9278
  store %struct.tempnode* %call29, %struct.tempnode** %tempcopy, align 8, !dbg !9279, !tbaa !2355
  %27 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9280, !tbaa !2355
  %28 = load i64, i64* %i, align 8, !dbg !9281, !tbaa !2516
  %arrayidx30 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %27, i64 %28, !dbg !9280, !ctir !284
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %tftp, align 8, !dbg !9282, !tbaa !2355
  %30 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9283, !tbaa !2355
  %name31 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %30, i32 0, i32 3, !dbg !9284, !ctir !290
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name31, i64 0, i64 0, !dbg !9283
  %call32 = call i64 @mergefiles(%struct.sortfile* %arrayidx30, i64 0, i64 1, %struct._IO_FILE* %29, i8* %arraydecay), !dbg !9285
  br label %if.end33, !dbg !9286

if.end33:                                         ; preds = %if.then28, %if.then26
  %31 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9287, !tbaa !2355
  %name34 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %31, i32 0, i32 3, !dbg !9288, !ctir !290
  %arraydecay35 = getelementptr inbounds [0 x i8], [0 x i8]* %name34, i64 0, i64 0, !dbg !9287
  %32 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9289, !tbaa !2355
  %33 = load i64, i64* %i, align 8, !dbg !9290, !tbaa !2516
  %arrayidx36 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %32, i64 %33, !dbg !9289, !ctir !284
  %name37 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx36, i32 0, i32 0, !dbg !9291, !ctir !285
  store i8* %arraydecay35, i8** %name37, align 8, !dbg !9292, !tbaa !3414, !ctir !87
  %34 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9293, !tbaa !2355
  %35 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9294, !tbaa !2355
  %36 = load i64, i64* %i, align 8, !dbg !9295, !tbaa !2516
  %arrayidx38 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %35, i64 %36, !dbg !9294, !ctir !284
  %temp = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx38, i32 0, i32 1, !dbg !9296, !ctir !285
  store %struct.tempnode* %34, %struct.tempnode** %temp, align 8, !dbg !9297, !tbaa !4837, !ctir !289
  br label %if.end39, !dbg !9298

if.end39:                                         ; preds = %if.end33, %if.end24
  br label %for.inc, !dbg !9299

for.inc:                                          ; preds = %if.end39
  %37 = load i64, i64* %i, align 8, !dbg !9300, !tbaa !2516
  %inc = add i64 %37, 1, !dbg !9300
  store i64 %inc, i64* %i, align 8, !dbg !9300, !tbaa !2516
  br label %for.cond, !dbg !9301, !llvm.loop !9302

for.end:                                          ; preds = %if.then10, %for.cond
  ret void, !dbg !9304
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @open_input_files(%struct.sortfile* %files, i64 %nfiles, %struct._IO_FILE*** %pfps) #4 !dbg !9305 !ctir !531 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8, !ctir !284
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %pfps.addr = alloca %struct._IO_FILE***, align 8, !ctir !533
  %fps = alloca %struct._IO_FILE**, align 8, !ctir !526
  %i = alloca i32, align 4, !ctir !5
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  store %struct._IO_FILE*** %pfps, %struct._IO_FILE**** %pfps.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE**** %pfps.addr, metadata !9310, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps, metadata !9312, metadata !DIExpression()), !dbg !9313
  %0 = load i64, i64* %nfiles.addr, align 8, !dbg !9314, !tbaa !2516
  %call = call noalias i8* @xnmalloc(i64 %0, i64 8), !dbg !9315
  %1 = bitcast i8* %call to %struct._IO_FILE**, !dbg !9315
  %2 = load %struct._IO_FILE***, %struct._IO_FILE**** %pfps.addr, align 8, !dbg !9316, !tbaa !2355
  store %struct._IO_FILE** %1, %struct._IO_FILE*** %2, align 8, !dbg !9317, !tbaa !2355, !ctir !526
  store %struct._IO_FILE** %1, %struct._IO_FILE*** %fps, align 8, !dbg !9313, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9318, metadata !DIExpression()), !dbg !9319
  store i32 0, i32* %i, align 4, !dbg !9320, !tbaa !2342
  br label %for.cond, !dbg !9322

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !9323, !tbaa !2342
  %conv = sext i32 %3 to i64, !dbg !9323
  %4 = load i64, i64* %nfiles.addr, align 8, !dbg !9325, !tbaa !2516
  %cmp = icmp ult i64 %conv, %4, !dbg !9326
  br i1 %cmp, label %for.body, label %for.end, !dbg !9327

for.body:                                         ; preds = %for.cond
  %5 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9328, !tbaa !2355
  %6 = load i32, i32* %i, align 4, !dbg !9330, !tbaa !2342
  %idxprom = sext i32 %6 to i64, !dbg !9328
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %5, i64 %idxprom, !dbg !9328, !ctir !284
  %temp = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 1, !dbg !9331, !ctir !285
  %7 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !9331, !tbaa !4837, !ctir !289
  %tobool = icmp ne %struct.tempnode* %7, null, !dbg !9328
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !9332

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9333, !tbaa !2355
  %9 = load i32, i32* %i, align 4, !dbg !9334, !tbaa !2342
  %idxprom2 = sext i32 %9 to i64, !dbg !9333
  %arrayidx3 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %8, i64 %idxprom2, !dbg !9333, !ctir !284
  %temp4 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx3, i32 0, i32 1, !dbg !9335, !ctir !285
  %10 = load %struct.tempnode*, %struct.tempnode** %temp4, align 8, !dbg !9335, !tbaa !4837, !ctir !289
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %10, i32 0, i32 2, !dbg !9336, !ctir !290
  %11 = load i8, i8* %state, align 4, !dbg !9336, !tbaa !2507, !ctir !8
  %conv5 = sext i8 %11 to i32, !dbg !9333
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !9337
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9328

cond.true:                                        ; preds = %land.lhs.true
  %12 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9338, !tbaa !2355
  %13 = load i32, i32* %i, align 4, !dbg !9339, !tbaa !2342
  %idxprom8 = sext i32 %13 to i64, !dbg !9338
  %arrayidx9 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %12, i64 %idxprom8, !dbg !9338, !ctir !284
  %temp10 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx9, i32 0, i32 1, !dbg !9340, !ctir !285
  %14 = load %struct.tempnode*, %struct.tempnode** %temp10, align 8, !dbg !9340, !tbaa !4837, !ctir !289
  %call11 = call %struct._IO_FILE* @open_temp(%struct.tempnode* %14), !dbg !9341
  br label %cond.end, !dbg !9328

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %15 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9342, !tbaa !2355
  %16 = load i32, i32* %i, align 4, !dbg !9343, !tbaa !2342
  %idxprom12 = sext i32 %16 to i64, !dbg !9342
  %arrayidx13 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %15, i64 %idxprom12, !dbg !9342, !ctir !284
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx13, i32 0, i32 0, !dbg !9344, !ctir !285
  %17 = load i8*, i8** %name, align 8, !dbg !9344, !tbaa !3414, !ctir !87
  %call14 = call %struct._IO_FILE* @stream_open(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !9345
  br label %cond.end, !dbg !9328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._IO_FILE* [ %call11, %cond.true ], [ %call14, %cond.false ], !dbg !9328
  %18 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !9346, !tbaa !2355
  %19 = load i32, i32* %i, align 4, !dbg !9347, !tbaa !2342
  %idxprom15 = sext i32 %19 to i64, !dbg !9346
  %arrayidx16 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %18, i64 %idxprom15, !dbg !9346, !ctir !526
  store %struct._IO_FILE* %cond, %struct._IO_FILE** %arrayidx16, align 8, !dbg !9348, !tbaa !2355
  %20 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !9349, !tbaa !2355
  %21 = load i32, i32* %i, align 4, !dbg !9351, !tbaa !2342
  %idxprom17 = sext i32 %21 to i64, !dbg !9349
  %arrayidx18 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %20, i64 %idxprom17, !dbg !9349, !ctir !526
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx18, align 8, !dbg !9349, !tbaa !2355
  %tobool19 = icmp ne %struct._IO_FILE* %22, null, !dbg !9349
  br i1 %tobool19, label %if.end, label %if.then, !dbg !9352

if.then:                                          ; preds = %cond.end
  br label %for.end, !dbg !9353

if.end:                                           ; preds = %cond.end
  br label %for.inc, !dbg !9354

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !9355, !tbaa !2342
  %inc = add nsw i32 %23, 1, !dbg !9355
  store i32 %inc, i32* %i, align 4, !dbg !9355, !tbaa !2342
  br label %for.cond, !dbg !9356, !llvm.loop !9357

for.end:                                          ; preds = %if.then, %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !9359, !tbaa !2342
  %conv20 = sext i32 %24 to i64, !dbg !9359
  ret i64 %conv20, !dbg !9360
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @stream_open(i8* %file, i8* %how) #4 !dbg !9361 !ctir !374 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !87
  %how.addr = alloca i8*, align 8, !ctir !87
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %fd = alloca i32, align 4, !ctir !5
  %ftruncate_errno = alloca i32, align 4, !ctir !5
  %outst = alloca %struct.stat*, align 8, !ctir !376
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9362, metadata !DIExpression()), !dbg !9363
  store i8* %how, i8** %how.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %how.addr, metadata !9364, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !9366, metadata !DIExpression()), !dbg !9367
  %0 = load i8*, i8** %how.addr, align 8, !dbg !9368, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !9370, !tbaa !2507, !ctir !88
  %conv = sext i8 %1 to i32, !dbg !9370
  %cmp = icmp eq i32 %conv, 114, !dbg !9371
  br i1 %cmp, label %if.then, label %if.else9, !dbg !9372

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %file.addr, align 8, !dbg !9373, !tbaa !2355
  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !9373
  %cmp2 = icmp eq i32 %call, 0, !dbg !9373
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !9376

if.then4:                                         ; preds = %if.then
  store i8 1, i8* @have_read_stdin, align 1, !dbg !9377, !tbaa !2499
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9379, !tbaa !2355
  store %struct._IO_FILE* %3, %struct._IO_FILE** %fp, align 8, !dbg !9380, !tbaa !2355
  br label %if.end, !dbg !9381

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !9382, metadata !DIExpression()), !dbg !9384
  %4 = load i8*, i8** %file.addr, align 8, !dbg !9385, !tbaa !2355
  %call5 = call i32 (i8*, i32, ...) @open(i8* %4, i32 524288), !dbg !9386
  store i32 %call5, i32* %fd, align 4, !dbg !9384, !tbaa !2342
  %5 = load i32, i32* %fd, align 4, !dbg !9387, !tbaa !2342
  %cmp6 = icmp slt i32 %5, 0, !dbg !9388
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9387

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !9387

cond.false:                                       ; preds = %if.else
  %6 = load i32, i32* %fd, align 4, !dbg !9389, !tbaa !2342
  %7 = load i8*, i8** %how.addr, align 8, !dbg !9390, !tbaa !2355
  %call8 = call %struct._IO_FILE* @fdopen(i32 %6, i8* %7) #12, !dbg !9391
  br label %cond.end, !dbg !9387

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._IO_FILE* [ null, %cond.true ], [ %call8, %cond.false ], !dbg !9387
  store %struct._IO_FILE* %cond, %struct._IO_FILE** %fp, align 8, !dbg !9392, !tbaa !2355
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !9393, !tbaa !2355
  call void @fadvise(%struct._IO_FILE* %8, i32 2), !dbg !9394
  br label %if.end34, !dbg !9395

if.else9:                                         ; preds = %entry
  %9 = load i8*, i8** %how.addr, align 8, !dbg !9396, !tbaa !2355
  %10 = load i8, i8* %9, align 1, !dbg !9398, !tbaa !2507, !ctir !88
  %conv10 = sext i8 %10 to i32, !dbg !9398
  %cmp11 = icmp eq i32 %conv10, 119, !dbg !9399
  br i1 %cmp11, label %if.then13, label %if.else32, !dbg !9400

if.then13:                                        ; preds = %if.else9
  %11 = load i8*, i8** %file.addr, align 8, !dbg !9401, !tbaa !2355
  %tobool = icmp ne i8* %11, null, !dbg !9401
  br i1 %tobool, label %land.lhs.true, label %if.end31, !dbg !9404

land.lhs.true:                                    ; preds = %if.then13
  %call14 = call i32 @ftruncate(i32 1, i64 0) #12, !dbg !9405
  %cmp15 = icmp ne i32 %call14, 0, !dbg !9406
  br i1 %cmp15, label %if.then17, label %if.end31, !dbg !9407

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %ftruncate_errno, metadata !9408, metadata !DIExpression()), !dbg !9410
  %call18 = call i32* @__errno_location() #16, !dbg !9411
  %12 = load i32, i32* %call18, align 4, !dbg !9411, !tbaa !2342, !ctir !5
  store i32 %12, i32* %ftruncate_errno, align 4, !dbg !9410, !tbaa !2342
  call void @llvm.dbg.declare(metadata %struct.stat** %outst, metadata !9412, metadata !DIExpression()), !dbg !9413
  %call19 = call %struct.stat* @get_outstatus(), !dbg !9414
  store %struct.stat* %call19, %struct.stat** %outst, align 8, !dbg !9413, !tbaa !2355
  %13 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9415, !tbaa !2355
  %tobool20 = icmp ne %struct.stat* %13, null, !dbg !9415
  br i1 %tobool20, label %lor.lhs.false, label %if.then27, !dbg !9417

lor.lhs.false:                                    ; preds = %if.then17
  %14 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9418, !tbaa !2355
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !9418, !ctir !377
  %15 = load i32, i32* %st_mode, align 8, !dbg !9418, !tbaa !5316, !ctir !387
  %and = and i32 %15, 61440, !dbg !9418
  %cmp21 = icmp eq i32 %and, 32768, !dbg !9418
  br i1 %cmp21, label %if.then27, label %lor.lhs.false23, !dbg !9419

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %16 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9420, !tbaa !2355
  %st_mode24 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !9420, !ctir !377
  %17 = load i32, i32* %st_mode24, align 8, !dbg !9420, !tbaa !5316, !ctir !387
  %18 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9420, !tbaa !2355
  %st_mode25 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !9420, !ctir !377
  %19 = load i32, i32* %st_mode25, align 8, !dbg !9420, !tbaa !5316, !ctir !387
  %sub = sub i32 %17, %19, !dbg !9420
  %tobool26 = icmp ne i32 %sub, 0, !dbg !9420
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !9421

if.then27:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %if.then17
  %20 = load i32, i32* %ftruncate_errno, align 4, !dbg !9422, !tbaa !2342
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.143, i64 0, i64 0)) #12, !dbg !9422
  %21 = load i8*, i8** %file.addr, align 8, !dbg !9422, !tbaa !2355
  %call29 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %21), !dbg !9422
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %20, i8* %call28, i8* %call29), !dbg !9422
  unreachable, !dbg !9422

if.end30:                                         ; preds = %lor.lhs.false23
  br label %if.end31, !dbg !9423

if.end31:                                         ; preds = %if.end30, %land.lhs.true, %if.then13
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9424, !tbaa !2355
  store %struct._IO_FILE* %22, %struct._IO_FILE** %fp, align 8, !dbg !9425, !tbaa !2355
  br label %if.end33, !dbg !9426

if.else32:                                        ; preds = %if.else9
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 977, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.stream_open, i64 0, i64 0)) #13, !dbg !9427
  unreachable, !dbg !9427

if.end33:                                         ; preds = %if.end31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !9428, !tbaa !2355
  ret %struct._IO_FILE* %23, !dbg !9429
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mergefps(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, %struct._IO_FILE* %ofp, i8* %output_file, %struct._IO_FILE** %fps) #4 !dbg !9430 !ctir !567 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8, !ctir !284
  %ntemps.addr = alloca i64, align 8, !ctir !52
  %nfiles.addr = alloca i64, align 8, !ctir !52
  %ofp.addr = alloca %struct._IO_FILE*, align 8, !ctir !277
  %output_file.addr = alloca i8*, align 8, !ctir !87
  %fps.addr = alloca %struct._IO_FILE**, align 8, !ctir !526
  %buffer = alloca %struct.buffer*, align 8, !ctir !450
  %saved = alloca %struct.line, align 8, !ctir !442
  %savedline = alloca %struct.line*, align 8, !ctir !440
  %savealloc = alloca i64, align 8, !ctir !52
  %cur = alloca %struct.line**, align 8, !ctir !569
  %base = alloca %struct.line**, align 8, !ctir !569
  %ord = alloca i64*, align 8, !ctir !354
  %i = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %t = alloca i64, align 8, !ctir !52
  %key = alloca %struct.keyfield*, align 8, !ctir !416
  %linelim = alloca %struct.line*, align 8, !ctir !440
  %smallest = alloca %struct.line*, align 8, !ctir !440
  %linelim125 = alloca %struct.line*, align 8, !ctir !440
  %lo = alloca i64, align 8, !ctir !52
  %hi = alloca i64, align 8, !ctir !52
  %probe = alloca i64, align 8, !ctir !52
  %ord0 = alloca i64, align 8, !ctir !52
  %count_of_smaller_lines = alloca i64, align 8, !ctir !52
  %cmp207 = alloca i32, align 4, !ctir !5
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !9433, metadata !DIExpression()), !dbg !9434
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9435, metadata !DIExpression()), !dbg !9436
  store %struct._IO_FILE* %ofp, %struct._IO_FILE** %ofp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %ofp.addr, metadata !9437, metadata !DIExpression()), !dbg !9438
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !9439, metadata !DIExpression()), !dbg !9440
  store %struct._IO_FILE** %fps, %struct._IO_FILE*** %fps.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps.addr, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.declare(metadata %struct.buffer** %buffer, metadata !9443, metadata !DIExpression()), !dbg !9444
  %0 = load i64, i64* %nfiles.addr, align 8, !dbg !9445, !tbaa !2516
  %call = call noalias i8* @xnmalloc(i64 %0, i64 56), !dbg !9446
  %1 = bitcast i8* %call to %struct.buffer*, !dbg !9446
  store %struct.buffer* %1, %struct.buffer** %buffer, align 8, !dbg !9444, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line* %saved, metadata !9447, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.declare(metadata %struct.line** %savedline, metadata !9449, metadata !DIExpression()), !dbg !9450
  store %struct.line* null, %struct.line** %savedline, align 8, !dbg !9450, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %savealloc, metadata !9451, metadata !DIExpression()), !dbg !9452
  store i64 0, i64* %savealloc, align 8, !dbg !9452, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.line*** %cur, metadata !9453, metadata !DIExpression()), !dbg !9454
  %2 = load i64, i64* %nfiles.addr, align 8, !dbg !9455, !tbaa !2516
  %call1 = call noalias i8* @xnmalloc(i64 %2, i64 8), !dbg !9456
  %3 = bitcast i8* %call1 to %struct.line**, !dbg !9456
  store %struct.line** %3, %struct.line*** %cur, align 8, !dbg !9454, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.line*** %base, metadata !9457, metadata !DIExpression()), !dbg !9458
  %4 = load i64, i64* %nfiles.addr, align 8, !dbg !9459, !tbaa !2516
  %call2 = call noalias i8* @xnmalloc(i64 %4, i64 8), !dbg !9460
  %5 = bitcast i8* %call2 to %struct.line**, !dbg !9460
  store %struct.line** %5, %struct.line*** %base, align 8, !dbg !9458, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %ord, metadata !9461, metadata !DIExpression()), !dbg !9462
  %6 = load i64, i64* %nfiles.addr, align 8, !dbg !9463, !tbaa !2516
  %call3 = call noalias i8* @xnmalloc(i64 %6, i64 8), !dbg !9464
  %7 = bitcast i8* %call3 to i64*, !dbg !9464
  store i64* %7, i64** %ord, align 8, !dbg !9462, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9465, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.declare(metadata i64* %j, metadata !9467, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.declare(metadata i64* %t, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !9471, metadata !DIExpression()), !dbg !9472
  %8 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !9473, !tbaa !2355
  store %struct.keyfield* %8, %struct.keyfield** %key, align 8, !dbg !9472, !tbaa !2355
  %text = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9474, !ctir !442
  store i8* null, i8** %text, align 8, !dbg !9475, !tbaa !4554, !ctir !7
  store i64 0, i64* %i, align 8, !dbg !9476, !tbaa !2516
  br label %for.cond, !dbg !9478

for.cond:                                         ; preds = %if.end34, %entry
  %9 = load i64, i64* %i, align 8, !dbg !9479, !tbaa !2516
  %10 = load i64, i64* %nfiles.addr, align 8, !dbg !9481, !tbaa !2516
  %cmp = icmp ult i64 %9, %10, !dbg !9482
  br i1 %cmp, label %for.body, label %for.end35, !dbg !9483

for.body:                                         ; preds = %for.cond
  %11 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9484, !tbaa !2355
  %12 = load i64, i64* %i, align 8, !dbg !9486, !tbaa !2516
  %arrayidx = getelementptr inbounds %struct.buffer, %struct.buffer* %11, i64 %12, !dbg !9484, !ctir !450
  %13 = load i64, i64* @merge_buffer_size, align 8, !dbg !9487, !tbaa !2516
  %14 = load i64, i64* @sort_size, align 8, !dbg !9487, !tbaa !2516
  %15 = load i64, i64* %nfiles.addr, align 8, !dbg !9487, !tbaa !2516
  %div = udiv i64 %14, %15, !dbg !9487
  %cmp4 = icmp ugt i64 %13, %div, !dbg !9487
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9487

cond.true:                                        ; preds = %for.body
  %16 = load i64, i64* @merge_buffer_size, align 8, !dbg !9487, !tbaa !2516
  br label %cond.end, !dbg !9487

cond.false:                                       ; preds = %for.body
  %17 = load i64, i64* @sort_size, align 8, !dbg !9487, !tbaa !2516
  %18 = load i64, i64* %nfiles.addr, align 8, !dbg !9487, !tbaa !2516
  %div5 = udiv i64 %17, %18, !dbg !9487
  br label %cond.end, !dbg !9487

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %div5, %cond.false ], !dbg !9487
  call void @initbuf(%struct.buffer* %arrayidx, i64 32, i64 %cond), !dbg !9488
  %19 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9489, !tbaa !2355
  %20 = load i64, i64* %i, align 8, !dbg !9491, !tbaa !2516
  %arrayidx6 = getelementptr inbounds %struct.buffer, %struct.buffer* %19, i64 %20, !dbg !9489, !ctir !450
  %21 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9492, !tbaa !2355
  %22 = load i64, i64* %i, align 8, !dbg !9493, !tbaa !2516
  %arrayidx7 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %21, i64 %22, !dbg !9492, !ctir !526
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx7, align 8, !dbg !9492, !tbaa !2355
  %24 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9494, !tbaa !2355
  %25 = load i64, i64* %i, align 8, !dbg !9495, !tbaa !2516
  %arrayidx8 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %24, i64 %25, !dbg !9494, !ctir !284
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx8, i32 0, i32 0, !dbg !9496, !ctir !285
  %26 = load i8*, i8** %name, align 8, !dbg !9496, !tbaa !3414, !ctir !87
  %call9 = call zeroext i1 @fillbuf(%struct.buffer* %arrayidx6, %struct._IO_FILE* %23, i8* %26), !dbg !9497
  br i1 %call9, label %if.then, label %if.else, !dbg !9498

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.line** %linelim, metadata !9499, metadata !DIExpression()), !dbg !9501
  %27 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9502, !tbaa !2355
  %28 = load i64, i64* %i, align 8, !dbg !9503, !tbaa !2516
  %arrayidx10 = getelementptr inbounds %struct.buffer, %struct.buffer* %27, i64 %28, !dbg !9502, !ctir !450
  %call11 = call %struct.line* @buffer_linelim(%struct.buffer* %arrayidx10), !dbg !9504
  store %struct.line* %call11, %struct.line** %linelim, align 8, !dbg !9501, !tbaa !2355
  %29 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !9505, !tbaa !2355
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %29, i64 -1, !dbg !9506
  %30 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9507, !tbaa !2355
  %31 = load i64, i64* %i, align 8, !dbg !9508, !tbaa !2516
  %arrayidx12 = getelementptr inbounds %struct.line*, %struct.line** %30, i64 %31, !dbg !9507, !ctir !569
  store %struct.line* %add.ptr, %struct.line** %arrayidx12, align 8, !dbg !9509, !tbaa !2355
  %32 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !9510, !tbaa !2355
  %33 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9511, !tbaa !2355
  %34 = load i64, i64* %i, align 8, !dbg !9512, !tbaa !2516
  %arrayidx13 = getelementptr inbounds %struct.buffer, %struct.buffer* %33, i64 %34, !dbg !9511, !ctir !450
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx13, i32 0, i32 2, !dbg !9513, !ctir !451
  %35 = load i64, i64* %nlines, align 8, !dbg !9513, !tbaa !4568, !ctir !52
  %idx.neg = sub i64 0, %35, !dbg !9514
  %add.ptr14 = getelementptr inbounds %struct.line, %struct.line* %32, i64 %idx.neg, !dbg !9514
  %36 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9515, !tbaa !2355
  %37 = load i64, i64* %i, align 8, !dbg !9516, !tbaa !2516
  %arrayidx15 = getelementptr inbounds %struct.line*, %struct.line** %36, i64 %37, !dbg !9515, !ctir !569
  store %struct.line* %add.ptr14, %struct.line** %arrayidx15, align 8, !dbg !9517, !tbaa !2355
  %38 = load i64, i64* %i, align 8, !dbg !9518, !tbaa !2516
  %inc = add i64 %38, 1, !dbg !9518
  store i64 %inc, i64* %i, align 8, !dbg !9518, !tbaa !2516
  br label %if.end34, !dbg !9519

if.else:                                          ; preds = %cond.end
  %39 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9520, !tbaa !2355
  %40 = load i64, i64* %i, align 8, !dbg !9522, !tbaa !2516
  %arrayidx16 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %39, i64 %40, !dbg !9520, !ctir !526
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx16, align 8, !dbg !9520, !tbaa !2355
  %42 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9523, !tbaa !2355
  %43 = load i64, i64* %i, align 8, !dbg !9524, !tbaa !2516
  %arrayidx17 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %42, i64 %43, !dbg !9523, !ctir !284
  %name18 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx17, i32 0, i32 0, !dbg !9525, !ctir !285
  %44 = load i8*, i8** %name18, align 8, !dbg !9525, !tbaa !3414, !ctir !87
  call void @xfclose(%struct._IO_FILE* %41, i8* %44), !dbg !9526
  %45 = load i64, i64* %i, align 8, !dbg !9527, !tbaa !2516
  %46 = load i64, i64* %ntemps.addr, align 8, !dbg !9529, !tbaa !2516
  %cmp19 = icmp ult i64 %45, %46, !dbg !9530
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !9531

if.then20:                                        ; preds = %if.else
  %47 = load i64, i64* %ntemps.addr, align 8, !dbg !9532, !tbaa !2516
  %dec = add i64 %47, -1, !dbg !9532
  store i64 %dec, i64* %ntemps.addr, align 8, !dbg !9532, !tbaa !2516
  %48 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9534, !tbaa !2355
  %49 = load i64, i64* %i, align 8, !dbg !9535, !tbaa !2516
  %arrayidx21 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %48, i64 %49, !dbg !9534, !ctir !284
  %name22 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx21, i32 0, i32 0, !dbg !9536, !ctir !285
  %50 = load i8*, i8** %name22, align 8, !dbg !9536, !tbaa !3414, !ctir !87
  call void @zaptemp(i8* %50), !dbg !9537
  br label %if.end, !dbg !9538

if.end:                                           ; preds = %if.then20, %if.else
  %51 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9539, !tbaa !2355
  %52 = load i64, i64* %i, align 8, !dbg !9540, !tbaa !2516
  %arrayidx23 = getelementptr inbounds %struct.buffer, %struct.buffer* %51, i64 %52, !dbg !9539, !ctir !450
  %buf = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx23, i32 0, i32 0, !dbg !9541, !ctir !451
  %53 = load i8*, i8** %buf, align 8, !dbg !9541, !tbaa !4709, !ctir !7
  call void @free(i8* %53) #12, !dbg !9542
  %54 = load i64, i64* %nfiles.addr, align 8, !dbg !9543, !tbaa !2516
  %dec24 = add i64 %54, -1, !dbg !9543
  store i64 %dec24, i64* %nfiles.addr, align 8, !dbg !9543, !tbaa !2516
  %55 = load i64, i64* %i, align 8, !dbg !9544, !tbaa !2516
  store i64 %55, i64* %j, align 8, !dbg !9546, !tbaa !2516
  br label %for.cond25, !dbg !9547

for.cond25:                                       ; preds = %for.inc, %if.end
  %56 = load i64, i64* %j, align 8, !dbg !9548, !tbaa !2516
  %57 = load i64, i64* %nfiles.addr, align 8, !dbg !9550, !tbaa !2516
  %cmp26 = icmp ult i64 %56, %57, !dbg !9551
  br i1 %cmp26, label %for.body27, label %for.end, !dbg !9552

for.body27:                                       ; preds = %for.cond25
  %58 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9553, !tbaa !2355
  %59 = load i64, i64* %j, align 8, !dbg !9555, !tbaa !2516
  %arrayidx28 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %58, i64 %59, !dbg !9553, !ctir !284
  %60 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9556, !tbaa !2355
  %61 = load i64, i64* %j, align 8, !dbg !9557, !tbaa !2516
  %add = add i64 %61, 1, !dbg !9558
  %arrayidx29 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %60, i64 %add, !dbg !9556, !ctir !284
  %62 = bitcast %struct.sortfile* %arrayidx28 to i8*, !dbg !9556
  %63 = bitcast %struct.sortfile* %arrayidx29 to i8*, !dbg !9556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false), !dbg !9556, !tbaa.struct !9559
  %64 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9560, !tbaa !2355
  %65 = load i64, i64* %j, align 8, !dbg !9561, !tbaa !2516
  %add30 = add i64 %65, 1, !dbg !9562
  %arrayidx31 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %64, i64 %add30, !dbg !9560, !ctir !526
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx31, align 8, !dbg !9560, !tbaa !2355
  %67 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9563, !tbaa !2355
  %68 = load i64, i64* %j, align 8, !dbg !9564, !tbaa !2516
  %arrayidx32 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %67, i64 %68, !dbg !9563, !ctir !526
  store %struct._IO_FILE* %66, %struct._IO_FILE** %arrayidx32, align 8, !dbg !9565, !tbaa !2355
  br label %for.inc, !dbg !9566

for.inc:                                          ; preds = %for.body27
  %69 = load i64, i64* %j, align 8, !dbg !9567, !tbaa !2516
  %inc33 = add i64 %69, 1, !dbg !9567
  store i64 %inc33, i64* %j, align 8, !dbg !9567, !tbaa !2516
  br label %for.cond25, !dbg !9568, !llvm.loop !9569

for.end:                                          ; preds = %for.cond25
  br label %if.end34

if.end34:                                         ; preds = %for.end, %if.then
  br label %for.cond, !dbg !9571, !llvm.loop !9572

for.end35:                                        ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !9574, !tbaa !2516
  br label %for.cond36, !dbg !9576

for.cond36:                                       ; preds = %for.inc40, %for.end35
  %70 = load i64, i64* %i, align 8, !dbg !9577, !tbaa !2516
  %71 = load i64, i64* %nfiles.addr, align 8, !dbg !9579, !tbaa !2516
  %cmp37 = icmp ult i64 %70, %71, !dbg !9580
  br i1 %cmp37, label %for.body38, label %for.end42, !dbg !9581

for.body38:                                       ; preds = %for.cond36
  %72 = load i64, i64* %i, align 8, !dbg !9582, !tbaa !2516
  %73 = load i64*, i64** %ord, align 8, !dbg !9583, !tbaa !2355
  %74 = load i64, i64* %i, align 8, !dbg !9584, !tbaa !2516
  %arrayidx39 = getelementptr inbounds i64, i64* %73, i64 %74, !dbg !9583, !ctir !354
  store i64 %72, i64* %arrayidx39, align 8, !dbg !9585, !tbaa !2516
  br label %for.inc40, !dbg !9583

for.inc40:                                        ; preds = %for.body38
  %75 = load i64, i64* %i, align 8, !dbg !9586, !tbaa !2516
  %inc41 = add i64 %75, 1, !dbg !9586
  store i64 %inc41, i64* %i, align 8, !dbg !9586, !tbaa !2516
  br label %for.cond36, !dbg !9587, !llvm.loop !9588

for.end42:                                        ; preds = %for.cond36
  store i64 1, i64* %i, align 8, !dbg !9590, !tbaa !2516
  br label %for.cond43, !dbg !9592

for.cond43:                                       ; preds = %for.inc60, %for.end42
  %76 = load i64, i64* %i, align 8, !dbg !9593, !tbaa !2516
  %77 = load i64, i64* %nfiles.addr, align 8, !dbg !9595, !tbaa !2516
  %cmp44 = icmp ult i64 %76, %77, !dbg !9596
  br i1 %cmp44, label %for.body45, label %for.end62, !dbg !9597

for.body45:                                       ; preds = %for.cond43
  %78 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9598, !tbaa !2355
  %79 = load i64*, i64** %ord, align 8, !dbg !9600, !tbaa !2355
  %80 = load i64, i64* %i, align 8, !dbg !9601, !tbaa !2516
  %sub = sub i64 %80, 1, !dbg !9602
  %arrayidx46 = getelementptr inbounds i64, i64* %79, i64 %sub, !dbg !9600, !ctir !354
  %81 = load i64, i64* %arrayidx46, align 8, !dbg !9600, !tbaa !2516
  %arrayidx47 = getelementptr inbounds %struct.line*, %struct.line** %78, i64 %81, !dbg !9598, !ctir !569
  %82 = load %struct.line*, %struct.line** %arrayidx47, align 8, !dbg !9598, !tbaa !2355
  %83 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9603, !tbaa !2355
  %84 = load i64*, i64** %ord, align 8, !dbg !9604, !tbaa !2355
  %85 = load i64, i64* %i, align 8, !dbg !9605, !tbaa !2516
  %arrayidx48 = getelementptr inbounds i64, i64* %84, i64 %85, !dbg !9604, !ctir !354
  %86 = load i64, i64* %arrayidx48, align 8, !dbg !9604, !tbaa !2516
  %arrayidx49 = getelementptr inbounds %struct.line*, %struct.line** %83, i64 %86, !dbg !9603, !ctir !569
  %87 = load %struct.line*, %struct.line** %arrayidx49, align 8, !dbg !9603, !tbaa !2355
  %call50 = call i32 @compare(%struct.line* %82, %struct.line* %87), !dbg !9606
  %cmp51 = icmp slt i32 0, %call50, !dbg !9607
  br i1 %cmp51, label %if.then52, label %if.end59, !dbg !9608

if.then52:                                        ; preds = %for.body45
  %88 = load i64*, i64** %ord, align 8, !dbg !9609, !tbaa !2355
  %89 = load i64, i64* %i, align 8, !dbg !9610, !tbaa !2516
  %sub53 = sub i64 %89, 1, !dbg !9611
  %arrayidx54 = getelementptr inbounds i64, i64* %88, i64 %sub53, !dbg !9609, !ctir !354
  %90 = load i64, i64* %arrayidx54, align 8, !dbg !9609, !tbaa !2516
  store i64 %90, i64* %t, align 8, !dbg !9612, !tbaa !2516
  %91 = load i64*, i64** %ord, align 8, !dbg !9613, !tbaa !2355
  %92 = load i64, i64* %i, align 8, !dbg !9614, !tbaa !2516
  %arrayidx55 = getelementptr inbounds i64, i64* %91, i64 %92, !dbg !9613, !ctir !354
  %93 = load i64, i64* %arrayidx55, align 8, !dbg !9613, !tbaa !2516
  %94 = load i64*, i64** %ord, align 8, !dbg !9615, !tbaa !2355
  %95 = load i64, i64* %i, align 8, !dbg !9616, !tbaa !2516
  %sub56 = sub i64 %95, 1, !dbg !9617
  %arrayidx57 = getelementptr inbounds i64, i64* %94, i64 %sub56, !dbg !9615, !ctir !354
  store i64 %93, i64* %arrayidx57, align 8, !dbg !9618, !tbaa !2516
  %96 = load i64, i64* %t, align 8, !dbg !9619, !tbaa !2516
  %97 = load i64*, i64** %ord, align 8, !dbg !9620, !tbaa !2355
  %98 = load i64, i64* %i, align 8, !dbg !9621, !tbaa !2516
  %arrayidx58 = getelementptr inbounds i64, i64* %97, i64 %98, !dbg !9620, !ctir !354
  store i64 %96, i64* %arrayidx58, align 8, !dbg !9622, !tbaa !2516
  store i64 0, i64* %i, align 8, !dbg !9623, !tbaa !2516
  br label %if.end59, !dbg !9624

if.end59:                                         ; preds = %if.then52, %for.body45
  br label %for.inc60, !dbg !9625

for.inc60:                                        ; preds = %if.end59
  %99 = load i64, i64* %i, align 8, !dbg !9626, !tbaa !2516
  %inc61 = add i64 %99, 1, !dbg !9626
  store i64 %inc61, i64* %i, align 8, !dbg !9626, !tbaa !2516
  br label %for.cond43, !dbg !9627, !llvm.loop !9628

for.end62:                                        ; preds = %for.cond43
  br label %while.cond, !dbg !9630

while.cond:                                       ; preds = %for.end232, %for.end200, %for.end62
  %100 = load i64, i64* %nfiles.addr, align 8, !dbg !9631, !tbaa !2516
  %tobool = icmp ne i64 %100, 0, !dbg !9630
  br i1 %tobool, label %while.body, label %while.end234, !dbg !9630

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.line** %smallest, metadata !9632, metadata !DIExpression()), !dbg !9634
  %101 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9635, !tbaa !2355
  %102 = load i64*, i64** %ord, align 8, !dbg !9636, !tbaa !2355
  %arrayidx63 = getelementptr inbounds i64, i64* %102, i64 0, !dbg !9636, !ctir !354
  %103 = load i64, i64* %arrayidx63, align 8, !dbg !9636, !tbaa !2516
  %arrayidx64 = getelementptr inbounds %struct.line*, %struct.line** %101, i64 %103, !dbg !9635, !ctir !569
  %104 = load %struct.line*, %struct.line** %arrayidx64, align 8, !dbg !9635, !tbaa !2355
  store %struct.line* %104, %struct.line** %smallest, align 8, !dbg !9634, !tbaa !2355
  %105 = load i8, i8* @unique, align 1, !dbg !9637, !tbaa !2499
  %tobool65 = trunc i8 %105 to i1, !dbg !9637
  br i1 %tobool65, label %if.then66, label %if.else106, !dbg !9639

if.then66:                                        ; preds = %while.body
  %106 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9640, !tbaa !2355
  %tobool67 = icmp ne %struct.line* %106, null, !dbg !9640
  br i1 %tobool67, label %land.lhs.true, label %if.end71, !dbg !9643

land.lhs.true:                                    ; preds = %if.then66
  %107 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9644, !tbaa !2355
  %108 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9645, !tbaa !2355
  %call68 = call i32 @compare(%struct.line* %107, %struct.line* %108), !dbg !9646
  %tobool69 = icmp ne i32 %call68, 0, !dbg !9646
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !9647

if.then70:                                        ; preds = %land.lhs.true
  store %struct.line* null, %struct.line** %savedline, align 8, !dbg !9648, !tbaa !2355
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9650, !tbaa !2355
  %110 = load i8*, i8** %output_file.addr, align 8, !dbg !9651, !tbaa !2355
  call void @write_line(%struct.line* %saved, %struct._IO_FILE* %109, i8* %110), !dbg !9652
  br label %if.end71, !dbg !9653

if.end71:                                         ; preds = %if.then70, %land.lhs.true, %if.then66
  %111 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9654, !tbaa !2355
  %tobool72 = icmp ne %struct.line* %111, null, !dbg !9654
  br i1 %tobool72, label %if.end105, label %if.then73, !dbg !9656

if.then73:                                        ; preds = %if.end71
  store %struct.line* %saved, %struct.line** %savedline, align 8, !dbg !9657, !tbaa !2355
  %112 = load i64, i64* %savealloc, align 8, !dbg !9659, !tbaa !2516
  %113 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9661, !tbaa !2355
  %length = getelementptr inbounds %struct.line, %struct.line* %113, i32 0, i32 1, !dbg !9662, !ctir !441
  %114 = load i64, i64* %length, align 8, !dbg !9662, !tbaa !4639, !ctir !52
  %cmp74 = icmp ult i64 %112, %114, !dbg !9663
  br i1 %cmp74, label %if.then75, label %if.end85, !dbg !9664

if.then75:                                        ; preds = %if.then73
  br label %do.body, !dbg !9665

do.body:                                          ; preds = %do.cond, %if.then75
  %115 = load i64, i64* %savealloc, align 8, !dbg !9667, !tbaa !2516
  %tobool76 = icmp ne i64 %115, 0, !dbg !9667
  br i1 %tobool76, label %if.end79, label %if.then77, !dbg !9669

if.then77:                                        ; preds = %do.body
  %116 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9670, !tbaa !2355
  %length78 = getelementptr inbounds %struct.line, %struct.line* %116, i32 0, i32 1, !dbg !9672, !ctir !441
  %117 = load i64, i64* %length78, align 8, !dbg !9672, !tbaa !4639, !ctir !52
  store i64 %117, i64* %savealloc, align 8, !dbg !9673, !tbaa !2516
  br label %do.end, !dbg !9674

if.end79:                                         ; preds = %do.body
  br label %do.cond, !dbg !9667

do.cond:                                          ; preds = %if.end79
  %118 = load i64, i64* %savealloc, align 8, !dbg !9675, !tbaa !2516
  %mul = mul i64 %118, 2, !dbg !9675
  store i64 %mul, i64* %savealloc, align 8, !dbg !9675, !tbaa !2516
  %119 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9676, !tbaa !2355
  %length80 = getelementptr inbounds %struct.line, %struct.line* %119, i32 0, i32 1, !dbg !9677, !ctir !441
  %120 = load i64, i64* %length80, align 8, !dbg !9677, !tbaa !4639, !ctir !52
  %cmp81 = icmp ult i64 %mul, %120, !dbg !9678
  br i1 %cmp81, label %do.body, label %do.end, !dbg !9667, !llvm.loop !9679

do.end:                                           ; preds = %do.cond, %if.then77
  %text82 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9681, !ctir !442
  %121 = load i8*, i8** %text82, align 8, !dbg !9681, !tbaa !4554, !ctir !7
  call void @free(i8* %121) #12, !dbg !9682
  %122 = load i64, i64* %savealloc, align 8, !dbg !9683, !tbaa !2516
  %call83 = call noalias i8* @xmalloc(i64 %122), !dbg !9684
  %text84 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9685, !ctir !442
  store i8* %call83, i8** %text84, align 8, !dbg !9686, !tbaa !4554, !ctir !7
  br label %if.end85, !dbg !9687

if.end85:                                         ; preds = %do.end, %if.then73
  %123 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9688, !tbaa !2355
  %length86 = getelementptr inbounds %struct.line, %struct.line* %123, i32 0, i32 1, !dbg !9689, !ctir !441
  %124 = load i64, i64* %length86, align 8, !dbg !9689, !tbaa !4639, !ctir !52
  %length87 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 1, !dbg !9690, !ctir !442
  store i64 %124, i64* %length87, align 8, !dbg !9691, !tbaa !4639, !ctir !52
  %text88 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9692, !ctir !442
  %125 = load i8*, i8** %text88, align 8, !dbg !9692, !tbaa !4554, !ctir !7
  %126 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9693, !tbaa !2355
  %text89 = getelementptr inbounds %struct.line, %struct.line* %126, i32 0, i32 0, !dbg !9694, !ctir !441
  %127 = load i8*, i8** %text89, align 8, !dbg !9694, !tbaa !4554, !ctir !7
  %length90 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 1, !dbg !9695, !ctir !442
  %128 = load i64, i64* %length90, align 8, !dbg !9695, !tbaa !4639, !ctir !52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %125, i8* align 1 %127, i64 %128, i1 false), !dbg !9696
  %129 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !9697, !tbaa !2355
  %tobool91 = icmp ne %struct.keyfield* %129, null, !dbg !9697
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !9699

if.then92:                                        ; preds = %if.end85
  %text93 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9700, !ctir !442
  %130 = load i8*, i8** %text93, align 8, !dbg !9700, !tbaa !4554, !ctir !7
  %131 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9702, !tbaa !2355
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %131, i32 0, i32 2, !dbg !9703, !ctir !441
  %132 = load i8*, i8** %keybeg, align 8, !dbg !9703, !tbaa !4685, !ctir !7
  %133 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9704, !tbaa !2355
  %text94 = getelementptr inbounds %struct.line, %struct.line* %133, i32 0, i32 0, !dbg !9705, !ctir !441
  %134 = load i8*, i8** %text94, align 8, !dbg !9705, !tbaa !4554, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %132 to i64, !dbg !9706
  %sub.ptr.rhs.cast = ptrtoint i8* %134 to i64, !dbg !9706
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9706
  %add.ptr95 = getelementptr inbounds i8, i8* %130, i64 %sub.ptr.sub, !dbg !9707
  %keybeg96 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 2, !dbg !9708, !ctir !442
  store i8* %add.ptr95, i8** %keybeg96, align 8, !dbg !9709, !tbaa !4685, !ctir !7
  %text97 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9710, !ctir !442
  %135 = load i8*, i8** %text97, align 8, !dbg !9710, !tbaa !4554, !ctir !7
  %136 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9711, !tbaa !2355
  %keylim = getelementptr inbounds %struct.line, %struct.line* %136, i32 0, i32 3, !dbg !9712, !ctir !441
  %137 = load i8*, i8** %keylim, align 8, !dbg !9712, !tbaa !4695, !ctir !7
  %138 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9713, !tbaa !2355
  %text98 = getelementptr inbounds %struct.line, %struct.line* %138, i32 0, i32 0, !dbg !9714, !ctir !441
  %139 = load i8*, i8** %text98, align 8, !dbg !9714, !tbaa !4554, !ctir !7
  %sub.ptr.lhs.cast99 = ptrtoint i8* %137 to i64, !dbg !9715
  %sub.ptr.rhs.cast100 = ptrtoint i8* %139 to i64, !dbg !9715
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !9715
  %add.ptr102 = getelementptr inbounds i8, i8* %135, i64 %sub.ptr.sub101, !dbg !9716
  %keylim103 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 3, !dbg !9717, !ctir !442
  store i8* %add.ptr102, i8** %keylim103, align 8, !dbg !9718, !tbaa !4695, !ctir !7
  br label %if.end104, !dbg !9719

if.end104:                                        ; preds = %if.then92, %if.end85
  br label %if.end105, !dbg !9720

if.end105:                                        ; preds = %if.end104, %if.end71
  br label %if.end107, !dbg !9721

if.else106:                                       ; preds = %while.body
  %140 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9722, !tbaa !2355
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9723, !tbaa !2355
  %142 = load i8*, i8** %output_file.addr, align 8, !dbg !9724, !tbaa !2355
  call void @write_line(%struct.line* %140, %struct._IO_FILE* %141, i8* %142), !dbg !9725
  br label %if.end107

if.end107:                                        ; preds = %if.else106, %if.end105
  %143 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9726, !tbaa !2355
  %144 = load i64*, i64** %ord, align 8, !dbg !9728, !tbaa !2355
  %arrayidx108 = getelementptr inbounds i64, i64* %144, i64 0, !dbg !9728, !ctir !354
  %145 = load i64, i64* %arrayidx108, align 8, !dbg !9728, !tbaa !2516
  %arrayidx109 = getelementptr inbounds %struct.line*, %struct.line** %143, i64 %145, !dbg !9726, !ctir !569
  %146 = load %struct.line*, %struct.line** %arrayidx109, align 8, !dbg !9726, !tbaa !2355
  %147 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9729, !tbaa !2355
  %cmp110 = icmp ult %struct.line* %146, %147, !dbg !9730
  br i1 %cmp110, label %if.then111, label %if.else115, !dbg !9731

if.then111:                                       ; preds = %if.end107
  %148 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9732, !tbaa !2355
  %add.ptr112 = getelementptr inbounds %struct.line, %struct.line* %148, i64 -1, !dbg !9733
  %149 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9734, !tbaa !2355
  %150 = load i64*, i64** %ord, align 8, !dbg !9735, !tbaa !2355
  %arrayidx113 = getelementptr inbounds i64, i64* %150, i64 0, !dbg !9735, !ctir !354
  %151 = load i64, i64* %arrayidx113, align 8, !dbg !9735, !tbaa !2516
  %arrayidx114 = getelementptr inbounds %struct.line*, %struct.line** %149, i64 %151, !dbg !9734, !ctir !569
  store %struct.line* %add.ptr112, %struct.line** %arrayidx114, align 8, !dbg !9736, !tbaa !2355
  br label %if.end202, !dbg !9734

if.else115:                                       ; preds = %if.end107
  %152 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9737, !tbaa !2355
  %153 = load i64*, i64** %ord, align 8, !dbg !9740, !tbaa !2355
  %arrayidx116 = getelementptr inbounds i64, i64* %153, i64 0, !dbg !9740, !ctir !354
  %154 = load i64, i64* %arrayidx116, align 8, !dbg !9740, !tbaa !2516
  %arrayidx117 = getelementptr inbounds %struct.buffer, %struct.buffer* %152, i64 %154, !dbg !9737, !ctir !450
  %155 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9741, !tbaa !2355
  %156 = load i64*, i64** %ord, align 8, !dbg !9742, !tbaa !2355
  %arrayidx118 = getelementptr inbounds i64, i64* %156, i64 0, !dbg !9742, !ctir !354
  %157 = load i64, i64* %arrayidx118, align 8, !dbg !9742, !tbaa !2516
  %arrayidx119 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %155, i64 %157, !dbg !9741, !ctir !526
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx119, align 8, !dbg !9741, !tbaa !2355
  %159 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9743, !tbaa !2355
  %160 = load i64*, i64** %ord, align 8, !dbg !9744, !tbaa !2355
  %arrayidx120 = getelementptr inbounds i64, i64* %160, i64 0, !dbg !9744, !ctir !354
  %161 = load i64, i64* %arrayidx120, align 8, !dbg !9744, !tbaa !2516
  %arrayidx121 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %159, i64 %161, !dbg !9743, !ctir !284
  %name122 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx121, i32 0, i32 0, !dbg !9745, !ctir !285
  %162 = load i8*, i8** %name122, align 8, !dbg !9745, !tbaa !3414, !ctir !87
  %call123 = call zeroext i1 @fillbuf(%struct.buffer* %arrayidx117, %struct._IO_FILE* %158, i8* %162), !dbg !9746
  br i1 %call123, label %if.then124, label %if.else139, !dbg !9747

if.then124:                                       ; preds = %if.else115
  call void @llvm.dbg.declare(metadata %struct.line** %linelim125, metadata !9748, metadata !DIExpression()), !dbg !9750
  %163 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9751, !tbaa !2355
  %164 = load i64*, i64** %ord, align 8, !dbg !9752, !tbaa !2355
  %arrayidx126 = getelementptr inbounds i64, i64* %164, i64 0, !dbg !9752, !ctir !354
  %165 = load i64, i64* %arrayidx126, align 8, !dbg !9752, !tbaa !2516
  %arrayidx127 = getelementptr inbounds %struct.buffer, %struct.buffer* %163, i64 %165, !dbg !9751, !ctir !450
  %call128 = call %struct.line* @buffer_linelim(%struct.buffer* %arrayidx127), !dbg !9753
  store %struct.line* %call128, %struct.line** %linelim125, align 8, !dbg !9750, !tbaa !2355
  %166 = load %struct.line*, %struct.line** %linelim125, align 8, !dbg !9754, !tbaa !2355
  %add.ptr129 = getelementptr inbounds %struct.line, %struct.line* %166, i64 -1, !dbg !9755
  %167 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9756, !tbaa !2355
  %168 = load i64*, i64** %ord, align 8, !dbg !9757, !tbaa !2355
  %arrayidx130 = getelementptr inbounds i64, i64* %168, i64 0, !dbg !9757, !ctir !354
  %169 = load i64, i64* %arrayidx130, align 8, !dbg !9757, !tbaa !2516
  %arrayidx131 = getelementptr inbounds %struct.line*, %struct.line** %167, i64 %169, !dbg !9756, !ctir !569
  store %struct.line* %add.ptr129, %struct.line** %arrayidx131, align 8, !dbg !9758, !tbaa !2355
  %170 = load %struct.line*, %struct.line** %linelim125, align 8, !dbg !9759, !tbaa !2355
  %171 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9760, !tbaa !2355
  %172 = load i64*, i64** %ord, align 8, !dbg !9761, !tbaa !2355
  %arrayidx132 = getelementptr inbounds i64, i64* %172, i64 0, !dbg !9761, !ctir !354
  %173 = load i64, i64* %arrayidx132, align 8, !dbg !9761, !tbaa !2516
  %arrayidx133 = getelementptr inbounds %struct.buffer, %struct.buffer* %171, i64 %173, !dbg !9760, !ctir !450
  %nlines134 = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx133, i32 0, i32 2, !dbg !9762, !ctir !451
  %174 = load i64, i64* %nlines134, align 8, !dbg !9762, !tbaa !4568, !ctir !52
  %idx.neg135 = sub i64 0, %174, !dbg !9763
  %add.ptr136 = getelementptr inbounds %struct.line, %struct.line* %170, i64 %idx.neg135, !dbg !9763
  %175 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9764, !tbaa !2355
  %176 = load i64*, i64** %ord, align 8, !dbg !9765, !tbaa !2355
  %arrayidx137 = getelementptr inbounds i64, i64* %176, i64 0, !dbg !9765, !ctir !354
  %177 = load i64, i64* %arrayidx137, align 8, !dbg !9765, !tbaa !2516
  %arrayidx138 = getelementptr inbounds %struct.line*, %struct.line** %175, i64 %177, !dbg !9764, !ctir !569
  store %struct.line* %add.ptr136, %struct.line** %arrayidx138, align 8, !dbg !9766, !tbaa !2355
  br label %if.end201, !dbg !9767

if.else139:                                       ; preds = %if.else115
  store i64 1, i64* %i, align 8, !dbg !9768, !tbaa !2516
  br label %for.cond140, !dbg !9771

for.cond140:                                      ; preds = %for.inc150, %if.else139
  %178 = load i64, i64* %i, align 8, !dbg !9772, !tbaa !2516
  %179 = load i64, i64* %nfiles.addr, align 8, !dbg !9774, !tbaa !2516
  %cmp141 = icmp ult i64 %178, %179, !dbg !9775
  br i1 %cmp141, label %for.body142, label %for.end152, !dbg !9776

for.body142:                                      ; preds = %for.cond140
  %180 = load i64*, i64** %ord, align 8, !dbg !9777, !tbaa !2355
  %181 = load i64, i64* %i, align 8, !dbg !9779, !tbaa !2516
  %arrayidx143 = getelementptr inbounds i64, i64* %180, i64 %181, !dbg !9777, !ctir !354
  %182 = load i64, i64* %arrayidx143, align 8, !dbg !9777, !tbaa !2516
  %183 = load i64*, i64** %ord, align 8, !dbg !9780, !tbaa !2355
  %arrayidx144 = getelementptr inbounds i64, i64* %183, i64 0, !dbg !9780, !ctir !354
  %184 = load i64, i64* %arrayidx144, align 8, !dbg !9780, !tbaa !2516
  %cmp145 = icmp ugt i64 %182, %184, !dbg !9781
  br i1 %cmp145, label %if.then146, label %if.end149, !dbg !9782

if.then146:                                       ; preds = %for.body142
  %185 = load i64*, i64** %ord, align 8, !dbg !9783, !tbaa !2355
  %186 = load i64, i64* %i, align 8, !dbg !9784, !tbaa !2516
  %arrayidx147 = getelementptr inbounds i64, i64* %185, i64 %186, !dbg !9783, !ctir !354
  %187 = load i64, i64* %arrayidx147, align 8, !dbg !9785, !tbaa !2516
  %dec148 = add i64 %187, -1, !dbg !9785
  store i64 %dec148, i64* %arrayidx147, align 8, !dbg !9785, !tbaa !2516
  br label %if.end149, !dbg !9785

if.end149:                                        ; preds = %if.then146, %for.body142
  br label %for.inc150, !dbg !9786

for.inc150:                                       ; preds = %if.end149
  %188 = load i64, i64* %i, align 8, !dbg !9787, !tbaa !2516
  %inc151 = add i64 %188, 1, !dbg !9787
  store i64 %inc151, i64* %i, align 8, !dbg !9787, !tbaa !2516
  br label %for.cond140, !dbg !9788, !llvm.loop !9789

for.end152:                                       ; preds = %for.cond140
  %189 = load i64, i64* %nfiles.addr, align 8, !dbg !9791, !tbaa !2516
  %dec153 = add i64 %189, -1, !dbg !9791
  store i64 %dec153, i64* %nfiles.addr, align 8, !dbg !9791, !tbaa !2516
  %190 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9792, !tbaa !2355
  %191 = load i64*, i64** %ord, align 8, !dbg !9793, !tbaa !2355
  %arrayidx154 = getelementptr inbounds i64, i64* %191, i64 0, !dbg !9793, !ctir !354
  %192 = load i64, i64* %arrayidx154, align 8, !dbg !9793, !tbaa !2516
  %arrayidx155 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %190, i64 %192, !dbg !9792, !ctir !526
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx155, align 8, !dbg !9792, !tbaa !2355
  %194 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9794, !tbaa !2355
  %195 = load i64*, i64** %ord, align 8, !dbg !9795, !tbaa !2355
  %arrayidx156 = getelementptr inbounds i64, i64* %195, i64 0, !dbg !9795, !ctir !354
  %196 = load i64, i64* %arrayidx156, align 8, !dbg !9795, !tbaa !2516
  %arrayidx157 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %194, i64 %196, !dbg !9794, !ctir !284
  %name158 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx157, i32 0, i32 0, !dbg !9796, !ctir !285
  %197 = load i8*, i8** %name158, align 8, !dbg !9796, !tbaa !3414, !ctir !87
  call void @xfclose(%struct._IO_FILE* %193, i8* %197), !dbg !9797
  %198 = load i64*, i64** %ord, align 8, !dbg !9798, !tbaa !2355
  %arrayidx159 = getelementptr inbounds i64, i64* %198, i64 0, !dbg !9798, !ctir !354
  %199 = load i64, i64* %arrayidx159, align 8, !dbg !9798, !tbaa !2516
  %200 = load i64, i64* %ntemps.addr, align 8, !dbg !9800, !tbaa !2516
  %cmp160 = icmp ult i64 %199, %200, !dbg !9801
  br i1 %cmp160, label %if.then161, label %if.end166, !dbg !9802

if.then161:                                       ; preds = %for.end152
  %201 = load i64, i64* %ntemps.addr, align 8, !dbg !9803, !tbaa !2516
  %dec162 = add i64 %201, -1, !dbg !9803
  store i64 %dec162, i64* %ntemps.addr, align 8, !dbg !9803, !tbaa !2516
  %202 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9805, !tbaa !2355
  %203 = load i64*, i64** %ord, align 8, !dbg !9806, !tbaa !2355
  %arrayidx163 = getelementptr inbounds i64, i64* %203, i64 0, !dbg !9806, !ctir !354
  %204 = load i64, i64* %arrayidx163, align 8, !dbg !9806, !tbaa !2516
  %arrayidx164 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %202, i64 %204, !dbg !9805, !ctir !284
  %name165 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx164, i32 0, i32 0, !dbg !9807, !ctir !285
  %205 = load i8*, i8** %name165, align 8, !dbg !9807, !tbaa !3414, !ctir !87
  call void @zaptemp(i8* %205), !dbg !9808
  br label %if.end166, !dbg !9809

if.end166:                                        ; preds = %if.then161, %for.end152
  %206 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9810, !tbaa !2355
  %207 = load i64*, i64** %ord, align 8, !dbg !9811, !tbaa !2355
  %arrayidx167 = getelementptr inbounds i64, i64* %207, i64 0, !dbg !9811, !ctir !354
  %208 = load i64, i64* %arrayidx167, align 8, !dbg !9811, !tbaa !2516
  %arrayidx168 = getelementptr inbounds %struct.buffer, %struct.buffer* %206, i64 %208, !dbg !9810, !ctir !450
  %buf169 = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx168, i32 0, i32 0, !dbg !9812, !ctir !451
  %209 = load i8*, i8** %buf169, align 8, !dbg !9812, !tbaa !4709, !ctir !7
  call void @free(i8* %209) #12, !dbg !9813
  %210 = load i64*, i64** %ord, align 8, !dbg !9814, !tbaa !2355
  %arrayidx170 = getelementptr inbounds i64, i64* %210, i64 0, !dbg !9814, !ctir !354
  %211 = load i64, i64* %arrayidx170, align 8, !dbg !9814, !tbaa !2516
  store i64 %211, i64* %i, align 8, !dbg !9816, !tbaa !2516
  br label %for.cond171, !dbg !9817

for.cond171:                                      ; preds = %for.inc189, %if.end166
  %212 = load i64, i64* %i, align 8, !dbg !9818, !tbaa !2516
  %213 = load i64, i64* %nfiles.addr, align 8, !dbg !9820, !tbaa !2516
  %cmp172 = icmp ult i64 %212, %213, !dbg !9821
  br i1 %cmp172, label %for.body173, label %for.end191, !dbg !9822

for.body173:                                      ; preds = %for.cond171
  %214 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9823, !tbaa !2355
  %215 = load i64, i64* %i, align 8, !dbg !9825, !tbaa !2516
  %add174 = add i64 %215, 1, !dbg !9826
  %arrayidx175 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %214, i64 %add174, !dbg !9823, !ctir !526
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx175, align 8, !dbg !9823, !tbaa !2355
  %217 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9827, !tbaa !2355
  %218 = load i64, i64* %i, align 8, !dbg !9828, !tbaa !2516
  %arrayidx176 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %217, i64 %218, !dbg !9827, !ctir !526
  store %struct._IO_FILE* %216, %struct._IO_FILE** %arrayidx176, align 8, !dbg !9829, !tbaa !2355
  %219 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9830, !tbaa !2355
  %220 = load i64, i64* %i, align 8, !dbg !9831, !tbaa !2516
  %arrayidx177 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %219, i64 %220, !dbg !9830, !ctir !284
  %221 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9832, !tbaa !2355
  %222 = load i64, i64* %i, align 8, !dbg !9833, !tbaa !2516
  %add178 = add i64 %222, 1, !dbg !9834
  %arrayidx179 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %221, i64 %add178, !dbg !9832, !ctir !284
  %223 = bitcast %struct.sortfile* %arrayidx177 to i8*, !dbg !9832
  %224 = bitcast %struct.sortfile* %arrayidx179 to i8*, !dbg !9832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 16, i1 false), !dbg !9832, !tbaa.struct !9559
  %225 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9835, !tbaa !2355
  %226 = load i64, i64* %i, align 8, !dbg !9836, !tbaa !2516
  %arrayidx180 = getelementptr inbounds %struct.buffer, %struct.buffer* %225, i64 %226, !dbg !9835, !ctir !450
  %227 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9837, !tbaa !2355
  %228 = load i64, i64* %i, align 8, !dbg !9838, !tbaa !2516
  %add181 = add i64 %228, 1, !dbg !9839
  %arrayidx182 = getelementptr inbounds %struct.buffer, %struct.buffer* %227, i64 %add181, !dbg !9837, !ctir !450
  %229 = bitcast %struct.buffer* %arrayidx180 to i8*, !dbg !9837
  %230 = bitcast %struct.buffer* %arrayidx182 to i8*, !dbg !9837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 56, i1 false), !dbg !9837, !tbaa.struct !9840
  %231 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9841, !tbaa !2355
  %232 = load i64, i64* %i, align 8, !dbg !9842, !tbaa !2516
  %add183 = add i64 %232, 1, !dbg !9843
  %arrayidx184 = getelementptr inbounds %struct.line*, %struct.line** %231, i64 %add183, !dbg !9841, !ctir !569
  %233 = load %struct.line*, %struct.line** %arrayidx184, align 8, !dbg !9841, !tbaa !2355
  %234 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9844, !tbaa !2355
  %235 = load i64, i64* %i, align 8, !dbg !9845, !tbaa !2516
  %arrayidx185 = getelementptr inbounds %struct.line*, %struct.line** %234, i64 %235, !dbg !9844, !ctir !569
  store %struct.line* %233, %struct.line** %arrayidx185, align 8, !dbg !9846, !tbaa !2355
  %236 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9847, !tbaa !2355
  %237 = load i64, i64* %i, align 8, !dbg !9848, !tbaa !2516
  %add186 = add i64 %237, 1, !dbg !9849
  %arrayidx187 = getelementptr inbounds %struct.line*, %struct.line** %236, i64 %add186, !dbg !9847, !ctir !569
  %238 = load %struct.line*, %struct.line** %arrayidx187, align 8, !dbg !9847, !tbaa !2355
  %239 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9850, !tbaa !2355
  %240 = load i64, i64* %i, align 8, !dbg !9851, !tbaa !2516
  %arrayidx188 = getelementptr inbounds %struct.line*, %struct.line** %239, i64 %240, !dbg !9850, !ctir !569
  store %struct.line* %238, %struct.line** %arrayidx188, align 8, !dbg !9852, !tbaa !2355
  br label %for.inc189, !dbg !9853

for.inc189:                                       ; preds = %for.body173
  %241 = load i64, i64* %i, align 8, !dbg !9854, !tbaa !2516
  %inc190 = add i64 %241, 1, !dbg !9854
  store i64 %inc190, i64* %i, align 8, !dbg !9854, !tbaa !2516
  br label %for.cond171, !dbg !9855, !llvm.loop !9856

for.end191:                                       ; preds = %for.cond171
  store i64 0, i64* %i, align 8, !dbg !9858, !tbaa !2516
  br label %for.cond192, !dbg !9860

for.cond192:                                      ; preds = %for.inc198, %for.end191
  %242 = load i64, i64* %i, align 8, !dbg !9861, !tbaa !2516
  %243 = load i64, i64* %nfiles.addr, align 8, !dbg !9863, !tbaa !2516
  %cmp193 = icmp ult i64 %242, %243, !dbg !9864
  br i1 %cmp193, label %for.body194, label %for.end200, !dbg !9865

for.body194:                                      ; preds = %for.cond192
  %244 = load i64*, i64** %ord, align 8, !dbg !9866, !tbaa !2355
  %245 = load i64, i64* %i, align 8, !dbg !9867, !tbaa !2516
  %add195 = add i64 %245, 1, !dbg !9868
  %arrayidx196 = getelementptr inbounds i64, i64* %244, i64 %add195, !dbg !9866, !ctir !354
  %246 = load i64, i64* %arrayidx196, align 8, !dbg !9866, !tbaa !2516
  %247 = load i64*, i64** %ord, align 8, !dbg !9869, !tbaa !2355
  %248 = load i64, i64* %i, align 8, !dbg !9870, !tbaa !2516
  %arrayidx197 = getelementptr inbounds i64, i64* %247, i64 %248, !dbg !9869, !ctir !354
  store i64 %246, i64* %arrayidx197, align 8, !dbg !9871, !tbaa !2516
  br label %for.inc198, !dbg !9869

for.inc198:                                       ; preds = %for.body194
  %249 = load i64, i64* %i, align 8, !dbg !9872, !tbaa !2516
  %inc199 = add i64 %249, 1, !dbg !9872
  store i64 %inc199, i64* %i, align 8, !dbg !9872, !tbaa !2516
  br label %for.cond192, !dbg !9873, !llvm.loop !9874

for.end200:                                       ; preds = %for.cond192
  br label %while.cond, !dbg !9876, !llvm.loop !9877

if.end201:                                        ; preds = %if.then124
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then111
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !9879, metadata !DIExpression()), !dbg !9881
  store i64 1, i64* %lo, align 8, !dbg !9881, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !9882, metadata !DIExpression()), !dbg !9883
  %250 = load i64, i64* %nfiles.addr, align 8, !dbg !9884, !tbaa !2516
  store i64 %250, i64* %hi, align 8, !dbg !9883, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %probe, metadata !9885, metadata !DIExpression()), !dbg !9886
  %251 = load i64, i64* %lo, align 8, !dbg !9887, !tbaa !2516
  store i64 %251, i64* %probe, align 8, !dbg !9886, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %ord0, metadata !9888, metadata !DIExpression()), !dbg !9889
  %252 = load i64*, i64** %ord, align 8, !dbg !9890, !tbaa !2355
  %arrayidx203 = getelementptr inbounds i64, i64* %252, i64 0, !dbg !9890, !ctir !354
  %253 = load i64, i64* %arrayidx203, align 8, !dbg !9890, !tbaa !2516
  store i64 %253, i64* %ord0, align 8, !dbg !9889, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %count_of_smaller_lines, metadata !9891, metadata !DIExpression()), !dbg !9892
  br label %while.cond204, !dbg !9893

while.cond204:                                    ; preds = %if.end220, %if.end202
  %254 = load i64, i64* %lo, align 8, !dbg !9894, !tbaa !2516
  %255 = load i64, i64* %hi, align 8, !dbg !9895, !tbaa !2516
  %cmp205 = icmp ult i64 %254, %255, !dbg !9896
  br i1 %cmp205, label %while.body206, label %while.end, !dbg !9893

while.body206:                                    ; preds = %while.cond204
  call void @llvm.dbg.declare(metadata i32* %cmp207, metadata !9897, metadata !DIExpression()), !dbg !9899
  %256 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9900, !tbaa !2355
  %257 = load i64, i64* %ord0, align 8, !dbg !9901, !tbaa !2516
  %arrayidx208 = getelementptr inbounds %struct.line*, %struct.line** %256, i64 %257, !dbg !9900, !ctir !569
  %258 = load %struct.line*, %struct.line** %arrayidx208, align 8, !dbg !9900, !tbaa !2355
  %259 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9902, !tbaa !2355
  %260 = load i64*, i64** %ord, align 8, !dbg !9903, !tbaa !2355
  %261 = load i64, i64* %probe, align 8, !dbg !9904, !tbaa !2516
  %arrayidx209 = getelementptr inbounds i64, i64* %260, i64 %261, !dbg !9903, !ctir !354
  %262 = load i64, i64* %arrayidx209, align 8, !dbg !9903, !tbaa !2516
  %arrayidx210 = getelementptr inbounds %struct.line*, %struct.line** %259, i64 %262, !dbg !9902, !ctir !569
  %263 = load %struct.line*, %struct.line** %arrayidx210, align 8, !dbg !9902, !tbaa !2355
  %call211 = call i32 @compare(%struct.line* %258, %struct.line* %263), !dbg !9905
  store i32 %call211, i32* %cmp207, align 4, !dbg !9899, !tbaa !2342
  %264 = load i32, i32* %cmp207, align 4, !dbg !9906, !tbaa !2342
  %cmp212 = icmp slt i32 %264, 0, !dbg !9908
  br i1 %cmp212, label %if.then217, label %lor.lhs.false, !dbg !9909

lor.lhs.false:                                    ; preds = %while.body206
  %265 = load i32, i32* %cmp207, align 4, !dbg !9910, !tbaa !2342
  %cmp213 = icmp eq i32 %265, 0, !dbg !9911
  br i1 %cmp213, label %land.lhs.true214, label %if.else218, !dbg !9912

land.lhs.true214:                                 ; preds = %lor.lhs.false
  %266 = load i64, i64* %ord0, align 8, !dbg !9913, !tbaa !2516
  %267 = load i64*, i64** %ord, align 8, !dbg !9914, !tbaa !2355
  %268 = load i64, i64* %probe, align 8, !dbg !9915, !tbaa !2516
  %arrayidx215 = getelementptr inbounds i64, i64* %267, i64 %268, !dbg !9914, !ctir !354
  %269 = load i64, i64* %arrayidx215, align 8, !dbg !9914, !tbaa !2516
  %cmp216 = icmp ult i64 %266, %269, !dbg !9916
  br i1 %cmp216, label %if.then217, label %if.else218, !dbg !9917

if.then217:                                       ; preds = %land.lhs.true214, %while.body206
  %270 = load i64, i64* %probe, align 8, !dbg !9918, !tbaa !2516
  store i64 %270, i64* %hi, align 8, !dbg !9919, !tbaa !2516
  br label %if.end220, !dbg !9920

if.else218:                                       ; preds = %land.lhs.true214, %lor.lhs.false
  %271 = load i64, i64* %probe, align 8, !dbg !9921, !tbaa !2516
  %add219 = add i64 %271, 1, !dbg !9922
  store i64 %add219, i64* %lo, align 8, !dbg !9923, !tbaa !2516
  br label %if.end220

if.end220:                                        ; preds = %if.else218, %if.then217
  %272 = load i64, i64* %lo, align 8, !dbg !9924, !tbaa !2516
  %273 = load i64, i64* %hi, align 8, !dbg !9925, !tbaa !2516
  %add221 = add i64 %272, %273, !dbg !9926
  %div222 = udiv i64 %add221, 2, !dbg !9927
  store i64 %div222, i64* %probe, align 8, !dbg !9928, !tbaa !2516
  br label %while.cond204, !dbg !9893, !llvm.loop !9929

while.end:                                        ; preds = %while.cond204
  %274 = load i64, i64* %lo, align 8, !dbg !9931, !tbaa !2516
  %sub223 = sub i64 %274, 1, !dbg !9932
  store i64 %sub223, i64* %count_of_smaller_lines, align 8, !dbg !9933, !tbaa !2516
  store i64 0, i64* %j, align 8, !dbg !9934, !tbaa !2516
  br label %for.cond224, !dbg !9936

for.cond224:                                      ; preds = %for.inc230, %while.end
  %275 = load i64, i64* %j, align 8, !dbg !9937, !tbaa !2516
  %276 = load i64, i64* %count_of_smaller_lines, align 8, !dbg !9939, !tbaa !2516
  %cmp225 = icmp ult i64 %275, %276, !dbg !9940
  br i1 %cmp225, label %for.body226, label %for.end232, !dbg !9941

for.body226:                                      ; preds = %for.cond224
  %277 = load i64*, i64** %ord, align 8, !dbg !9942, !tbaa !2355
  %278 = load i64, i64* %j, align 8, !dbg !9943, !tbaa !2516
  %add227 = add i64 %278, 1, !dbg !9944
  %arrayidx228 = getelementptr inbounds i64, i64* %277, i64 %add227, !dbg !9942, !ctir !354
  %279 = load i64, i64* %arrayidx228, align 8, !dbg !9942, !tbaa !2516
  %280 = load i64*, i64** %ord, align 8, !dbg !9945, !tbaa !2355
  %281 = load i64, i64* %j, align 8, !dbg !9946, !tbaa !2516
  %arrayidx229 = getelementptr inbounds i64, i64* %280, i64 %281, !dbg !9945, !ctir !354
  store i64 %279, i64* %arrayidx229, align 8, !dbg !9947, !tbaa !2516
  br label %for.inc230, !dbg !9945

for.inc230:                                       ; preds = %for.body226
  %282 = load i64, i64* %j, align 8, !dbg !9948, !tbaa !2516
  %inc231 = add i64 %282, 1, !dbg !9948
  store i64 %inc231, i64* %j, align 8, !dbg !9948, !tbaa !2516
  br label %for.cond224, !dbg !9949, !llvm.loop !9950

for.end232:                                       ; preds = %for.cond224
  %283 = load i64, i64* %ord0, align 8, !dbg !9952, !tbaa !2516
  %284 = load i64*, i64** %ord, align 8, !dbg !9953, !tbaa !2355
  %285 = load i64, i64* %count_of_smaller_lines, align 8, !dbg !9954, !tbaa !2516
  %arrayidx233 = getelementptr inbounds i64, i64* %284, i64 %285, !dbg !9953, !ctir !354
  store i64 %283, i64* %arrayidx233, align 8, !dbg !9955, !tbaa !2516
  br label %while.cond, !dbg !9630, !llvm.loop !9877

while.end234:                                     ; preds = %while.cond
  %286 = load i8, i8* @unique, align 1, !dbg !9956, !tbaa !2499
  %tobool235 = trunc i8 %286 to i1, !dbg !9956
  br i1 %tobool235, label %land.lhs.true236, label %if.end240, !dbg !9958

land.lhs.true236:                                 ; preds = %while.end234
  %287 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9959, !tbaa !2355
  %tobool237 = icmp ne %struct.line* %287, null, !dbg !9959
  br i1 %tobool237, label %if.then238, label %if.end240, !dbg !9960

if.then238:                                       ; preds = %land.lhs.true236
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9961, !tbaa !2355
  %289 = load i8*, i8** %output_file.addr, align 8, !dbg !9963, !tbaa !2355
  call void @write_line(%struct.line* %saved, %struct._IO_FILE* %288, i8* %289), !dbg !9964
  %text239 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9965, !ctir !442
  %290 = load i8*, i8** %text239, align 8, !dbg !9965, !tbaa !4554, !ctir !7
  call void @free(i8* %290) #12, !dbg !9966
  br label %if.end240, !dbg !9967

if.end240:                                        ; preds = %if.then238, %land.lhs.true236, %while.end234
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9968, !tbaa !2355
  %292 = load i8*, i8** %output_file.addr, align 8, !dbg !9969, !tbaa !2355
  call void @xfclose(%struct._IO_FILE* %291, i8* %292), !dbg !9970
  %293 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9971, !tbaa !2355
  %294 = bitcast %struct._IO_FILE** %293 to i8*, !dbg !9971
  call void @free(i8* %294) #12, !dbg !9972
  %295 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9973, !tbaa !2355
  %296 = bitcast %struct.buffer* %295 to i8*, !dbg !9973
  call void @free(i8* %296) #12, !dbg !9974
  %297 = load i64*, i64** %ord, align 8, !dbg !9975, !tbaa !2355
  %298 = bitcast i64* %297 to i8*, !dbg !9975
  call void @free(i8* %298) #12, !dbg !9976
  %299 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9977, !tbaa !2355
  %300 = bitcast %struct.line** %299 to i8*, !dbg !9977
  call void @free(i8* %300) #12, !dbg !9978
  %301 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9979, !tbaa !2355
  %302 = bitcast %struct.line** %301 to i8*, !dbg !9979
  call void @free(i8* %302) #12, !dbg !9980
  ret void, !dbg !9981
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @zaptemp(i8* %name) #4 !dbg !9982 !ctir !302 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !87
  %pnode = alloca %struct.tempnode**, align 8, !ctir !570
  %node = alloca %struct.tempnode*, align 8, !ctir !289
  %next = alloca %struct.tempnode*, align 8, !ctir !289
  %unlink_status = alloca i32, align 4, !ctir !5
  %unlink_errno = alloca i32, align 4, !ctir !5
  %cs = alloca %struct.cs_status, align 8, !ctir !342
  store i8* %name, i8** %name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9983, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata %struct.tempnode*** %pnode, metadata !9985, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !9987, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.declare(metadata %struct.tempnode** %next, metadata !9989, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata i32* %unlink_status, metadata !9991, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.declare(metadata i32* %unlink_errno, metadata !9993, metadata !DIExpression()), !dbg !9994
  store i32 0, i32* %unlink_errno, align 4, !dbg !9994, !tbaa !2342
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !9995, metadata !DIExpression()), !dbg !9996
  store %struct.tempnode** @temphead, %struct.tempnode*** %pnode, align 8, !dbg !9997, !tbaa !2355
  br label %for.cond, !dbg !9999

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.tempnode**, %struct.tempnode*** %pnode, align 8, !dbg !10000, !tbaa !2355
  %1 = load volatile %struct.tempnode*, %struct.tempnode** %0, align 8, !dbg !10002, !tbaa !2355, !ctir !293
  store %struct.tempnode* %1, %struct.tempnode** %node, align 8, !dbg !10003, !tbaa !2355
  %name1 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %1, i32 0, i32 3, !dbg !10004, !ctir !290
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name1, i64 0, i64 0, !dbg !10005
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10006, !tbaa !2355
  %cmp = icmp ne i8* %arraydecay, %2, !dbg !10007
  br i1 %cmp, label %for.body, label %for.end, !dbg !10008

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10009

for.inc:                                          ; preds = %for.body
  %3 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10010, !tbaa !2355
  %next2 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %3, i32 0, i32 0, !dbg !10011, !ctir !290
  store %struct.tempnode** %next2, %struct.tempnode*** %pnode, align 8, !dbg !10012, !tbaa !2355
  br label %for.cond, !dbg !10013, !llvm.loop !10014

for.end:                                          ; preds = %for.cond
  %4 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10016, !tbaa !2355
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 2, !dbg !10018, !ctir !290
  %5 = load i8, i8* %state, align 4, !dbg !10018, !tbaa !2507, !ctir !8
  %conv = sext i8 %5 to i32, !dbg !10016
  %cmp3 = icmp eq i32 %conv, 1, !dbg !10019
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10020

if.then:                                          ; preds = %for.end
  %6 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10021, !tbaa !2355
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %6, i32 0, i32 1, !dbg !10022, !ctir !290
  %7 = load i32, i32* %pid, align 8, !dbg !10022, !tbaa !2342, !ctir !295
  call void @wait_proc(i32 %7), !dbg !10023
  br label %if.end, !dbg !10023

if.end:                                           ; preds = %if.then, %for.end
  %8 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10024, !tbaa !2355
  %next5 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %8, i32 0, i32 0, !dbg !10025, !ctir !290
  %9 = load volatile %struct.tempnode*, %struct.tempnode** %next5, align 8, !dbg !10025, !tbaa !2355, !ctir !293
  store %struct.tempnode* %9, %struct.tempnode** %next, align 8, !dbg !10026, !tbaa !2355
  call void @cs_enter(%struct.cs_status* %cs), !dbg !10027
  %10 = load i8*, i8** %name.addr, align 8, !dbg !10028, !tbaa !2355
  %call = call i32 @unlink(i8* %10) #12, !dbg !10029
  store i32 %call, i32* %unlink_status, align 4, !dbg !10030, !tbaa !2342
  %call6 = call i32* @__errno_location() #16, !dbg !10031
  %11 = load i32, i32* %call6, align 4, !dbg !10031, !tbaa !2342, !ctir !5
  store i32 %11, i32* %unlink_errno, align 4, !dbg !10032, !tbaa !2342
  %12 = load %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !10033, !tbaa !2355
  %13 = load %struct.tempnode**, %struct.tempnode*** %pnode, align 8, !dbg !10034, !tbaa !2355
  store volatile %struct.tempnode* %12, %struct.tempnode** %13, align 8, !dbg !10035, !tbaa !2355, !ctir !293
  call void @cs_leave(%struct.cs_status* %cs), !dbg !10036
  %14 = load i32, i32* %unlink_status, align 4, !dbg !10037, !tbaa !2342
  %cmp7 = icmp ne i32 %14, 0, !dbg !10039
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !10040

if.then9:                                         ; preds = %if.end
  %15 = load i32, i32* %unlink_errno, align 4, !dbg !10041, !tbaa !2342
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.175, i64 0, i64 0)) #12, !dbg !10042
  %16 = load i8*, i8** %name.addr, align 8, !dbg !10043, !tbaa !2355
  %call11 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %16), !dbg !10043
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call10, i8* %call11), !dbg !10044
  br label %if.end12, !dbg !10044

if.end12:                                         ; preds = %if.then9, %if.end
  %17 = load %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !10045, !tbaa !2355
  %tobool = icmp ne %struct.tempnode* %17, null, !dbg !10045
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !10047

if.then13:                                        ; preds = %if.end12
  %18 = load %struct.tempnode**, %struct.tempnode*** %pnode, align 8, !dbg !10048, !tbaa !2355
  store %struct.tempnode** %18, %struct.tempnode*** @temptail, align 8, !dbg !10049, !tbaa !2355
  br label %if.end14, !dbg !10050

if.end14:                                         ; preds = %if.then13, %if.end12
  %19 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10051, !tbaa !2355
  %20 = bitcast %struct.tempnode* %19 to i8*, !dbg !10051
  call void @free(i8* %20) #12, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @wait_proc(i32 %pid) #4 !dbg !10054 !ctir !537 {
entry:
  %pid.addr = alloca i32, align 4, !ctir !295
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !10055, metadata !DIExpression()), !dbg !10056
  %0 = load i32, i32* %pid.addr, align 4, !dbg !10057, !tbaa !2342
  %call = call zeroext i1 @delete_proc(i32 %0), !dbg !10059
  br i1 %call, label %if.then, label %if.end, !dbg !10060

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %pid.addr, align 4, !dbg !10061, !tbaa !2342
  %call1 = call i32 @reap(i32 %1), !dbg !10062
  br label %if.end, !dbg !10062

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10063
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @get_outstatus() #4 !dbg !770 !ctir !410 {
entry:
  %0 = load i32, i32* @get_outstatus.outstat_errno, align 4, !dbg !10064, !tbaa !2342
  %cmp = icmp eq i32 %0, 0, !dbg !10066
  br i1 %cmp, label %if.then, label %if.end, !dbg !10067

if.then:                                          ; preds = %entry
  %call = call i32 @fstat(i32 1, %struct.stat* @get_outstatus.outstat) #12, !dbg !10068
  %cmp1 = icmp eq i32 %call, 0, !dbg !10069
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10068

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !10068

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !10070
  %1 = load i32, i32* %call2, align 4, !dbg !10070, !tbaa !2342, !ctir !5
  br label %cond.end, !dbg !10068

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %1, %cond.false ], !dbg !10068
  store i32 %cond, i32* @get_outstatus.outstat_errno, align 4, !dbg !10071, !tbaa !2342
  br label %if.end, !dbg !10072

if.end:                                           ; preds = %cond.end, %entry
  %2 = load i32, i32* @get_outstatus.outstat_errno, align 4, !dbg !10073, !tbaa !2342
  %cmp3 = icmp slt i32 %2, 0, !dbg !10074
  %3 = zext i1 %cmp3 to i64, !dbg !10073
  %cond4 = select i1 %cmp3, %struct.stat* @get_outstatus.outstat, %struct.stat* null, !dbg !10073
  ret %struct.stat* %cond4, !dbg !10075
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @open_temp(%struct.tempnode* %temp) #4 !dbg !10076 !ctir !534 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8, !ctir !277
  %temp.addr = alloca %struct.tempnode*, align 8, !ctir !289
  %tempfd = alloca i32, align 4, !ctir !5
  %pipefds = alloca [2 x i32], align 4, !ctir !536
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !277
  %child = alloca i32, align 4, !ctir !295
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.tempnode* %temp, %struct.tempnode** %temp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata i32* %tempfd, metadata !10079, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.declare(metadata [2 x i32]* %pipefds, metadata !10081, metadata !DIExpression()), !dbg !10082
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !10083, metadata !DIExpression()), !dbg !10084
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !dbg !10084, !tbaa !2355
  %0 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10085, !tbaa !2355
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %0, i32 0, i32 2, !dbg !10087, !ctir !290
  %1 = load i8, i8* %state, align 4, !dbg !10087, !tbaa !2507, !ctir !8
  %conv = sext i8 %1 to i32, !dbg !10085
  %cmp = icmp eq i32 %conv, 1, !dbg !10088
  br i1 %cmp, label %if.then, label %if.end, !dbg !10089

if.then:                                          ; preds = %entry
  %2 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10090, !tbaa !2355
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 1, !dbg !10091, !ctir !290
  %3 = load i32, i32* %pid, align 8, !dbg !10091, !tbaa !2342, !ctir !295
  call void @wait_proc(i32 %3), !dbg !10092
  br label %if.end, !dbg !10092

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10093, !tbaa !2355
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 3, !dbg !10094, !ctir !290
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !10093
  %call = call i32 (i8*, i32, ...) @open(i8* %arraydecay, i32 0), !dbg !10095
  store i32 %call, i32* %tempfd, align 4, !dbg !10096, !tbaa !2342
  %5 = load i32, i32* %tempfd, align 4, !dbg !10097, !tbaa !2342
  %cmp2 = icmp slt i32 %5, 0, !dbg !10099
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10100

if.then4:                                         ; preds = %if.end
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !10101
  br label %return, !dbg !10101

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %child, metadata !10102, metadata !DIExpression()), !dbg !10103
  %arraydecay6 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10104
  %call7 = call i32 @pipe_fork(i32* %arraydecay6, i64 9), !dbg !10105
  store i32 %call7, i32* %child, align 4, !dbg !10103, !tbaa !2342
  %6 = load i32, i32* %child, align 4, !dbg !10106, !tbaa !2342
  switch i32 %6, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb18
  ], !dbg !10107

sw.bb:                                            ; preds = %if.end5
  %call8 = call i32* @__errno_location() #16, !dbg !10108
  %7 = load i32, i32* %call8, align 4, !dbg !10108, !tbaa !2342, !ctir !5
  %cmp9 = icmp ne i32 %7, 24, !dbg !10111
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !10112

if.then11:                                        ; preds = %sw.bb
  %call12 = call i32* @__errno_location() #16, !dbg !10113
  %8 = load i32, i32* %call12, align 4, !dbg !10113, !tbaa !2342, !ctir !5
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.168, i64 0, i64 0)) #12, !dbg !10113
  %9 = load i8*, i8** @compress_program, align 8, !dbg !10113, !tbaa !2355
  %call14 = call i8* @quotearg_style(i32 4, i8* %9), !dbg !10113
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %8, i8* %call13, i8* %call14), !dbg !10113
  unreachable, !dbg !10113

if.end15:                                         ; preds = %sw.bb
  %10 = load i32, i32* %tempfd, align 4, !dbg !10114, !tbaa !2342
  %call16 = call i32 @close(i32 %10), !dbg !10115
  %call17 = call i32* @__errno_location() #16, !dbg !10116
  store i32 24, i32* %call17, align 4, !dbg !10117, !tbaa !2342, !ctir !5
  br label %sw.epilog, !dbg !10118

sw.bb18:                                          ; preds = %if.end5
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10119, !ctir !536
  %11 = load i32, i32* %arrayidx, align 4, !dbg !10119, !tbaa !2342
  %call19 = call i32 @close(i32 %11), !dbg !10120
  %12 = load i32, i32* %tempfd, align 4, !dbg !10121, !tbaa !2342
  call void @move_fd(i32 %12, i32 0), !dbg !10122
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !10123, !ctir !536
  %13 = load i32, i32* %arrayidx20, align 4, !dbg !10123, !tbaa !2342
  call void @move_fd(i32 %13, i32 1), !dbg !10124
  %14 = load i8*, i8** @compress_program, align 8, !dbg !10125, !tbaa !2355
  %15 = load i8*, i8** @compress_program, align 8, !dbg !10126, !tbaa !2355
  %call21 = call i32 (i8*, i8*, ...) @execlp(i8* %14, i8* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i64 0, i64 0), i8* null) #12, !dbg !10127
  %call22 = call i32* @__errno_location() #16, !dbg !10128
  %16 = load i32, i32* %call22, align 4, !dbg !10128, !tbaa !2342, !ctir !5
  call void @async_safe_die(i32 %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.170, i64 0, i64 0)) #15, !dbg !10129
  unreachable, !dbg !10129

sw.default:                                       ; preds = %if.end5
  %17 = load i32, i32* %child, align 4, !dbg !10130, !tbaa !2342
  %18 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10131, !tbaa !2355
  %pid23 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %18, i32 0, i32 1, !dbg !10132, !ctir !290
  store i32 %17, i32* %pid23, align 8, !dbg !10133, !tbaa !2342, !ctir !295
  %19 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10134, !tbaa !2355
  call void @register_proc(%struct.tempnode* %19), !dbg !10135
  %20 = load i32, i32* %tempfd, align 4, !dbg !10136, !tbaa !2342
  %call24 = call i32 @close(i32 %20), !dbg !10137
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !10138, !ctir !536
  %21 = load i32, i32* %arrayidx25, align 4, !dbg !10138, !tbaa !2342
  %call26 = call i32 @close(i32 %21), !dbg !10139
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10140, !ctir !536
  %22 = load i32, i32* %arrayidx27, align 4, !dbg !10140, !tbaa !2342
  %call28 = call %struct._IO_FILE* @fdopen(i32 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #12, !dbg !10141
  store %struct._IO_FILE* %call28, %struct._IO_FILE** %fp, align 8, !dbg !10142, !tbaa !2355
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !10143, !tbaa !2355
  %tobool = icmp ne %struct._IO_FILE* %23, null, !dbg !10143
  br i1 %tobool, label %if.end34, label %if.then29, !dbg !10145

if.then29:                                        ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10146, metadata !DIExpression()), !dbg !10148
  %call30 = call i32* @__errno_location() #16, !dbg !10149
  %24 = load i32, i32* %call30, align 4, !dbg !10149, !tbaa !2342, !ctir !5
  store i32 %24, i32* %saved_errno, align 4, !dbg !10148, !tbaa !2342
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10150, !ctir !536
  %25 = load i32, i32* %arrayidx31, align 4, !dbg !10150, !tbaa !2342
  %call32 = call i32 @close(i32 %25), !dbg !10151
  %26 = load i32, i32* %saved_errno, align 4, !dbg !10152, !tbaa !2342
  %call33 = call i32* @__errno_location() #16, !dbg !10153
  store i32 %26, i32* %call33, align 4, !dbg !10154, !tbaa !2342, !ctir !5
  br label %if.end34, !dbg !10155

if.end34:                                         ; preds = %if.then29, %sw.default
  br label %sw.epilog, !dbg !10156

sw.epilog:                                        ; preds = %if.end34, %if.end15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !10157, !tbaa !2355
  store %struct._IO_FILE* %27, %struct._IO_FILE** %retval, align 8, !dbg !10158
  br label %return, !dbg !10158

return:                                           ; preds = %sw.epilog, %if.then4
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !10159
  ret %struct._IO_FILE* %28, !dbg !10159
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @key_to_opts(%struct.keyfield* %key, i8* %opts) #4 !dbg !10160 !ctir !419 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8, !ctir !416
  %opts.addr = alloca i8*, align 8, !ctir !7
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  store i8* %opts, i8** %opts.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %opts.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10165, !tbaa !2355
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %0, i32 0, i32 6, !dbg !10167, !ctir !417
  %1 = load i8, i8* %skipsblanks, align 8, !dbg !10167, !tbaa !3219
  %tobool = trunc i8 %1 to i1, !dbg !10167, !ctir !102
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10168

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10169, !tbaa !2355
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 7, !dbg !10170, !ctir !417
  %3 = load i8, i8* %skipeblanks, align 1, !dbg !10170, !tbaa !3224
  %tobool1 = trunc i8 %3 to i1, !dbg !10170, !ctir !102
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10171

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8*, i8** %opts.addr, align 8, !dbg !10172, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !10172
  store i8* %incdec.ptr, i8** %opts.addr, align 8, !dbg !10172, !tbaa !2355
  store i8 98, i8* %4, align 1, !dbg !10173, !tbaa !2507, !ctir !8
  br label %if.end, !dbg !10174

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %5 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10175, !tbaa !2355
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 4, !dbg !10177, !ctir !417
  %6 = load i8*, i8** %ignore, align 8, !dbg !10177, !tbaa !3209, !ctir !100
  %cmp = icmp eq i8* %6, getelementptr inbounds ([256 x i8], [256 x i8]* @nondictionary, i64 0, i64 0), !dbg !10178
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !10179

if.then2:                                         ; preds = %if.end
  %7 = load i8*, i8** %opts.addr, align 8, !dbg !10180, !tbaa !2355
  %incdec.ptr3 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10180
  store i8* %incdec.ptr3, i8** %opts.addr, align 8, !dbg !10180, !tbaa !2355
  store i8 100, i8* %7, align 1, !dbg !10181, !tbaa !2507, !ctir !8
  br label %if.end4, !dbg !10182

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10183, !tbaa !2355
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %8, i32 0, i32 5, !dbg !10185, !ctir !417
  %9 = load i8*, i8** %translate, align 8, !dbg !10185, !tbaa !3214, !ctir !87
  %tobool5 = icmp ne i8* %9, null, !dbg !10183
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !10186

if.then6:                                         ; preds = %if.end4
  %10 = load i8*, i8** %opts.addr, align 8, !dbg !10187, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !10187
  store i8* %incdec.ptr7, i8** %opts.addr, align 8, !dbg !10187, !tbaa !2355
  store i8 102, i8* %10, align 1, !dbg !10188, !tbaa !2507, !ctir !8
  br label %if.end8, !dbg !10189

if.end8:                                          ; preds = %if.then6, %if.end4
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10190, !tbaa !2355
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 10, !dbg !10192, !ctir !417
  %12 = load i8, i8* %general_numeric, align 4, !dbg !10192, !tbaa !3239
  %tobool9 = trunc i8 %12 to i1, !dbg !10192, !ctir !102
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !10193

if.then10:                                        ; preds = %if.end8
  %13 = load i8*, i8** %opts.addr, align 8, !dbg !10194, !tbaa !2355
  %incdec.ptr11 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10194
  store i8* %incdec.ptr11, i8** %opts.addr, align 8, !dbg !10194, !tbaa !2355
  store i8 103, i8* %13, align 1, !dbg !10195, !tbaa !2507, !ctir !8
  br label %if.end12, !dbg !10196

if.end12:                                         ; preds = %if.then10, %if.end8
  %14 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10197, !tbaa !2355
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %14, i32 0, i32 11, !dbg !10199, !ctir !417
  %15 = load i8, i8* %human_numeric, align 1, !dbg !10199, !tbaa !3244
  %tobool13 = trunc i8 %15 to i1, !dbg !10199, !ctir !102
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !10200

if.then14:                                        ; preds = %if.end12
  %16 = load i8*, i8** %opts.addr, align 8, !dbg !10201, !tbaa !2355
  %incdec.ptr15 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !10201
  store i8* %incdec.ptr15, i8** %opts.addr, align 8, !dbg !10201, !tbaa !2355
  store i8 104, i8* %16, align 1, !dbg !10202, !tbaa !2507, !ctir !8
  br label %if.end16, !dbg !10203

if.end16:                                         ; preds = %if.then14, %if.end12
  %17 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10204, !tbaa !2355
  %ignore17 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 4, !dbg !10206, !ctir !417
  %18 = load i8*, i8** %ignore17, align 8, !dbg !10206, !tbaa !3209, !ctir !100
  %cmp18 = icmp eq i8* %18, getelementptr inbounds ([256 x i8], [256 x i8]* @nonprinting, i64 0, i64 0), !dbg !10207
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10208

if.then19:                                        ; preds = %if.end16
  %19 = load i8*, i8** %opts.addr, align 8, !dbg !10209, !tbaa !2355
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !10209
  store i8* %incdec.ptr20, i8** %opts.addr, align 8, !dbg !10209, !tbaa !2355
  store i8 105, i8* %19, align 1, !dbg !10210, !tbaa !2507, !ctir !8
  br label %if.end21, !dbg !10211

if.end21:                                         ; preds = %if.then19, %if.end16
  %20 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10212, !tbaa !2355
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %20, i32 0, i32 12, !dbg !10214, !ctir !417
  %21 = load i8, i8* %month, align 2, !dbg !10214, !tbaa !3229
  %tobool22 = trunc i8 %21 to i1, !dbg !10214, !ctir !102
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !10215

if.then23:                                        ; preds = %if.end21
  %22 = load i8*, i8** %opts.addr, align 8, !dbg !10216, !tbaa !2355
  %incdec.ptr24 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !10216
  store i8* %incdec.ptr24, i8** %opts.addr, align 8, !dbg !10216, !tbaa !2355
  store i8 77, i8* %22, align 1, !dbg !10217, !tbaa !2507, !ctir !8
  br label %if.end25, !dbg !10218

if.end25:                                         ; preds = %if.then23, %if.end21
  %23 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10219, !tbaa !2355
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %23, i32 0, i32 8, !dbg !10221, !ctir !417
  %24 = load i8, i8* %numeric, align 2, !dbg !10221, !tbaa !3234
  %tobool26 = trunc i8 %24 to i1, !dbg !10221, !ctir !102
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !10222

if.then27:                                        ; preds = %if.end25
  %25 = load i8*, i8** %opts.addr, align 8, !dbg !10223, !tbaa !2355
  %incdec.ptr28 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !10223
  store i8* %incdec.ptr28, i8** %opts.addr, align 8, !dbg !10223, !tbaa !2355
  store i8 110, i8* %25, align 1, !dbg !10224, !tbaa !2507, !ctir !8
  br label %if.end29, !dbg !10225

if.end29:                                         ; preds = %if.then27, %if.end25
  %26 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10226, !tbaa !2355
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %26, i32 0, i32 9, !dbg !10228, !ctir !417
  %27 = load i8, i8* %random, align 1, !dbg !10228, !tbaa !3254
  %tobool30 = trunc i8 %27 to i1, !dbg !10228, !ctir !102
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10229

if.then31:                                        ; preds = %if.end29
  %28 = load i8*, i8** %opts.addr, align 8, !dbg !10230, !tbaa !2355
  %incdec.ptr32 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !10230
  store i8* %incdec.ptr32, i8** %opts.addr, align 8, !dbg !10230, !tbaa !2355
  store i8 82, i8* %28, align 1, !dbg !10231, !tbaa !2507, !ctir !8
  br label %if.end33, !dbg !10232

if.end33:                                         ; preds = %if.then31, %if.end29
  %29 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10233, !tbaa !2355
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %29, i32 0, i32 13, !dbg !10235, !ctir !417
  %30 = load i8, i8* %reverse, align 1, !dbg !10235, !tbaa !3205
  %tobool34 = trunc i8 %30 to i1, !dbg !10235, !ctir !102
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !10236

if.then35:                                        ; preds = %if.end33
  %31 = load i8*, i8** %opts.addr, align 8, !dbg !10237, !tbaa !2355
  %incdec.ptr36 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !10237
  store i8* %incdec.ptr36, i8** %opts.addr, align 8, !dbg !10237, !tbaa !2355
  store i8 114, i8* %31, align 1, !dbg !10238, !tbaa !2507, !ctir !8
  br label %if.end37, !dbg !10239

if.end37:                                         ; preds = %if.then35, %if.end33
  %32 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10240, !tbaa !2355
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %32, i32 0, i32 14, !dbg !10242, !ctir !417
  %33 = load i8, i8* %version, align 8, !dbg !10242, !tbaa !3249
  %tobool38 = trunc i8 %33 to i1, !dbg !10242, !ctir !102
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !10243

if.then39:                                        ; preds = %if.end37
  %34 = load i8*, i8** %opts.addr, align 8, !dbg !10244, !tbaa !2355
  %incdec.ptr40 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !10244
  store i8* %incdec.ptr40, i8** %opts.addr, align 8, !dbg !10244, !tbaa !2355
  store i8 86, i8* %34, align 1, !dbg !10245, !tbaa !2507, !ctir !8
  br label %if.end41, !dbg !10246

if.end41:                                         ; preds = %if.then39, %if.end37
  %35 = load i8*, i8** %opts.addr, align 8, !dbg !10247, !tbaa !2355
  store i8 0, i8* %35, align 1, !dbg !10248, !tbaa !2507, !ctir !8
  ret void, !dbg !10249
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @select_plural(i64 %n) #4 !dbg !10250 !ctir !432 {
entry:
  %n.addr = alloca i64, align 8, !ctir !355
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10251, metadata !DIExpression()), !dbg !10252
  %0 = load i64, i64* %n.addr, align 8, !dbg !10253, !tbaa !2516
  %cmp = icmp ule i64 %0, -1, !dbg !10254
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10253

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !10255, !tbaa !2516
  br label %cond.end, !dbg !10253

cond.false:                                       ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !10256, !tbaa !2516
  %rem = urem i64 %2, 1000000, !dbg !10257
  %add = add i64 %rem, 1000000, !dbg !10258
  br label %cond.end, !dbg !10253

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %1, %cond.true ], [ %add, %cond.false ], !dbg !10253
  ret i64 %cond, !dbg !10259
}

; Function Attrs: nounwind
declare dso_local i8* @ngettext(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local void @clearerr_unlocked(%struct._IO_FILE*) #2

declare dso_local i32 @fflush_unlocked(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cleanup() #4 !dbg !10260 !ctir !167 {
entry:
  %node = alloca %struct.tempnode*, align 8, !ctir !337
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !10261, metadata !DIExpression()), !dbg !10262
  %0 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !10263, !tbaa !2355
  store %struct.tempnode* %0, %struct.tempnode** %node, align 8, !dbg !10265, !tbaa !2355
  br label %for.cond, !dbg !10266

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10267, !tbaa !2355
  %tobool = icmp ne %struct.tempnode* %1, null, !dbg !10269
  br i1 %tobool, label %for.body, label %for.end, !dbg !10269

for.body:                                         ; preds = %for.cond
  %2 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10270, !tbaa !2355
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 3, !dbg !10271, !ctir !338
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !10270
  %call = call i32 @unlink(i8* %arraydecay) #12, !dbg !10272
  br label %for.inc, !dbg !10272

for.inc:                                          ; preds = %for.body
  %3 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10273, !tbaa !2355
  %next = getelementptr inbounds %struct.tempnode, %struct.tempnode* %3, i32 0, i32 0, !dbg !10274, !ctir !338
  %4 = load volatile %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !10274, !tbaa !2355, !ctir !293
  store %struct.tempnode* %4, %struct.tempnode** %node, align 8, !dbg !10275, !tbaa !2355
  br label %for.cond, !dbg !10276, !llvm.loop !10277

for.end:                                          ; preds = %for.cond
  store volatile %struct.tempnode* null, %struct.tempnode** @temphead, align 8, !dbg !10279, !tbaa !2355
  ret void, !dbg !10280
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @field_sep(i8 zeroext %ch) #4 !dbg !10281 !ctir !331 {
entry:
  %ch.addr = alloca i8, align 1, !ctir !317
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  %call = call i16** @__ctype_b_loc() #16, !dbg !10284
  %0 = load i16*, i16** %call, align 8, !dbg !10284, !tbaa !2355, !ctir !321
  %1 = load i8, i8* %ch.addr, align 1, !dbg !10284, !tbaa !2507
  %conv = zext i8 %1 to i32, !dbg !10284
  %idxprom = sext i32 %conv to i64, !dbg !10284
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 %idxprom, !dbg !10284, !ctir !321
  %2 = load i16, i16* %arrayidx, align 2, !dbg !10284, !tbaa !3489
  %conv1 = zext i16 %2 to i32, !dbg !10284
  %and = and i32 %conv1, 1, !dbg !10284
  %tobool = icmp ne i32 %and, 0, !dbg !10284
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !10285

lor.rhs:                                          ; preds = %entry
  %3 = load i8, i8* %ch.addr, align 1, !dbg !10286, !tbaa !2507
  %conv2 = zext i8 %3 to i32, !dbg !10286
  %cmp = icmp eq i32 %conv2, 10, !dbg !10287
  br label %lor.end, !dbg !10285

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  ret i1 %4, !dbg !10288
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @struct_month_cmp(i8* %m1, i8* %m2) #4 !dbg !10289 !ctir !333 {
entry:
  %m1.addr = alloca i8*, align 8, !ctir !85
  %m2.addr = alloca i8*, align 8, !ctir !85
  %month1 = alloca %struct.month*, align 8, !ctir !335
  %month2 = alloca %struct.month*, align 8, !ctir !335
  store i8* %m1, i8** %m1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %m1.addr, metadata !10290, metadata !DIExpression()), !dbg !10291
  store i8* %m2, i8** %m2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %m2.addr, metadata !10292, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.declare(metadata %struct.month** %month1, metadata !10294, metadata !DIExpression()), !dbg !10295
  %0 = load i8*, i8** %m1.addr, align 8, !dbg !10296, !tbaa !2355
  %1 = bitcast i8* %0 to %struct.month*, !dbg !10296
  store %struct.month* %1, %struct.month** %month1, align 8, !dbg !10295, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.month** %month2, metadata !10297, metadata !DIExpression()), !dbg !10298
  %2 = load i8*, i8** %m2.addr, align 8, !dbg !10299, !tbaa !2355
  %3 = bitcast i8* %2 to %struct.month*, !dbg !10299
  store %struct.month* %3, %struct.month** %month2, align 8, !dbg !10298, !tbaa !2355
  %4 = load %struct.month*, %struct.month** %month1, align 8, !dbg !10300, !tbaa !2355
  %name = getelementptr inbounds %struct.month, %struct.month* %4, i32 0, i32 0, !dbg !10301, !ctir !336
  %5 = load i8*, i8** %name, align 8, !dbg !10301, !tbaa !3552, !ctir !87
  %6 = load %struct.month*, %struct.month** %month2, align 8, !dbg !10302, !tbaa !2355
  %name1 = getelementptr inbounds %struct.month, %struct.month* %6, i32 0, i32 0, !dbg !10303, !ctir !336
  %7 = load i8*, i8** %name1, align 8, !dbg !10303, !tbaa !3552, !ctir !87
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !10304
  ret i32 %call, !dbg !10305
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !10306 !ctir !167 {
entry:
  call void @usage(i32 1), !dbg !10307
  ret void, !dbg !10308
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !10309 !ctir !809 {
entry:
  %retval = alloca i64, align 8, !ctir !811
  %arg.addr = alloca i8*, align 8, !ctir !87
  %arglist.addr = alloca i8**, align 8, !ctir !812
  %vallist.addr = alloca i8*, align 8, !ctir !85
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %arglen = alloca i64, align 8, !ctir !52
  %matchind = alloca i64, align 8, !ctir !811
  %ambiguous = alloca i8, align 1, !ctir !102
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10310, metadata !DIExpression()), !dbg !10311
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10312, metadata !DIExpression()), !dbg !10313
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10314, metadata !DIExpression()), !dbg !10315
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10316, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10318, metadata !DIExpression()), !dbg !10319
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !10320, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !10322, metadata !DIExpression()), !dbg !10323
  store i64 -1, i64* %matchind, align 8, !dbg !10323, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !10324, metadata !DIExpression()), !dbg !10325
  store i8 0, i8* %ambiguous, align 1, !dbg !10325, !tbaa !2499
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !10326, !tbaa !2355
  %call = call i64 @strlen(i8* %0) #14, !dbg !10327
  store i64 %call, i64* %arglen, align 8, !dbg !10328, !tbaa !2516
  store i64 0, i64* %i, align 8, !dbg !10329, !tbaa !2516
  br label %for.cond, !dbg !10331

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !10332, !tbaa !2355
  %2 = load i64, i64* %i, align 8, !dbg !10334, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !10332, !ctir !812
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10332, !tbaa !2355
  %tobool = icmp ne i8* %3, null, !dbg !10335
  br i1 %tobool, label %for.body, label %for.end, !dbg !10335

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !10336, !tbaa !2355
  %5 = load i64, i64* %i, align 8, !dbg !10339, !tbaa !2516
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !10336, !ctir !812
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !10336, !tbaa !2355
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !10340, !tbaa !2355
  %8 = load i64, i64* %arglen, align 8, !dbg !10341, !tbaa !2516
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !10342
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10342
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !10343

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !10344, !tbaa !2355
  %10 = load i64, i64* %i, align 8, !dbg !10347, !tbaa !2516
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !10344, !ctir !812
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !10344, !tbaa !2355
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !10348
  %12 = load i64, i64* %arglen, align 8, !dbg !10349, !tbaa !2516
  %cmp = icmp eq i64 %call5, %12, !dbg !10350
  br i1 %cmp, label %if.then6, label %if.else, !dbg !10351

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !10352, !tbaa !2516
  store i64 %13, i64* %retval, align 8, !dbg !10353
  br label %return, !dbg !10353

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !10354, !tbaa !2516
  %cmp7 = icmp eq i64 %14, -1, !dbg !10356
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !10357

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !10358, !tbaa !2516
  store i64 %15, i64* %matchind, align 8, !dbg !10359, !tbaa !2516
  br label %if.end16, !dbg !10360

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !10361, !tbaa !2355
  %cmp10 = icmp eq i8* %16, null, !dbg !10364
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !10365

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !10366, !tbaa !2355
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !10367, !tbaa !2516
  %19 = load i64, i64* %matchind, align 8, !dbg !10368, !tbaa !2516
  %mul = mul i64 %18, %19, !dbg !10369
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !10370
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !10371, !tbaa !2355
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !10372, !tbaa !2516
  %22 = load i64, i64* %i, align 8, !dbg !10373, !tbaa !2516
  %mul11 = mul i64 %21, %22, !dbg !10374
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !10375
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !10376, !tbaa !2516
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !10377
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10377
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !10378

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !10379, !tbaa !2499
  br label %if.end, !dbg !10381

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !10382

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !10383

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !10384, !tbaa !2516
  %inc = add i64 %24, 1, !dbg !10384
  store i64 %inc, i64* %i, align 8, !dbg !10384, !tbaa !2516
  br label %for.cond, !dbg !10385, !llvm.loop !10386

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !10388, !tbaa !2499
  %tobool19 = trunc i8 %25 to i1, !dbg !10388
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !10390

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !10391
  br label %return, !dbg !10391

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !10392, !tbaa !2516
  store i64 %26, i64* %retval, align 8, !dbg !10393
  br label %return, !dbg !10393

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !10394
  ret i64 %27, !dbg !10394
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !10395 !ctir !813 {
entry:
  %context.addr = alloca i8*, align 8, !ctir !87
  %value.addr = alloca i8*, align 8, !ctir !87
  %problem.addr = alloca i64, align 8, !ctir !811
  %format = alloca i8*, align 8, !ctir !87
  store i8* %context, i8** %context.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10396, metadata !DIExpression()), !dbg !10397
  store i8* %value, i8** %value.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !10398, metadata !DIExpression()), !dbg !10399
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !10400, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.declare(metadata i8** %format, metadata !10402, metadata !DIExpression()), !dbg !10403
  %0 = load i64, i64* %problem.addr, align 8, !dbg !10404, !tbaa !2516
  %cmp = icmp eq i64 %0, -1, !dbg !10405
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10404

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.160, i64 0, i64 0)) #12, !dbg !10406
  br label %cond.end, !dbg !10404

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.161, i64 0, i64 0)) #12, !dbg !10407
  br label %cond.end, !dbg !10404

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !10404
  store i8* %cond, i8** %format, align 8, !dbg !10403, !tbaa !2355
  %1 = load i8*, i8** %format, align 8, !dbg !10408, !tbaa !2355
  %2 = load i8*, i8** %value.addr, align 8, !dbg !10409, !tbaa !2355
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !10410
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10411, !tbaa !2355
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !10412
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !10413
  ret void, !dbg !10414
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !10415 !ctir !815 {
entry:
  %arglist.addr = alloca i8**, align 8, !ctir !812
  %vallist.addr = alloca i8*, align 8, !ctir !85
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %last_val = alloca i8*, align 8, !ctir !87
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10416, metadata !DIExpression()), !dbg !10417
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10420, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10422, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !10424, metadata !DIExpression()), !dbg !10425
  store i8* null, i8** %last_val, align 8, !dbg !10425, !tbaa !2355
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.162, i64 0, i64 0)) #12, !dbg !10426
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10426, !tbaa !2355
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !10426
  store i64 0, i64* %i, align 8, !dbg !10427, !tbaa !2516
  br label %for.cond, !dbg !10429

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !10430, !tbaa !2355
  %2 = load i64, i64* %i, align 8, !dbg !10432, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !10430, !ctir !812
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10430, !tbaa !2355
  %tobool = icmp ne i8* %3, null, !dbg !10433
  br i1 %tobool, label %for.body, label %for.end, !dbg !10433

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !10434, !tbaa !2516
  %cmp = icmp eq i64 %4, 0, !dbg !10436
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10437

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !10438, !tbaa !2355
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !10439, !tbaa !2355
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !10440, !tbaa !2516
  %8 = load i64, i64* %i, align 8, !dbg !10441, !tbaa !2516
  %mul = mul i64 %7, %8, !dbg !10442
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !10443
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !10444, !tbaa !2516
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !10445
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10445
  br i1 %tobool3, label %if.then, label %if.else, !dbg !10446

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10447, !tbaa !2355
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !10449, !tbaa !2355
  %12 = load i64, i64* %i, align 8, !dbg !10450, !tbaa !2516
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !10449, !ctir !812
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !10449, !tbaa !2355
  %call5 = call i8* @quote(i8* %13), !dbg !10451
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.163, i64 0, i64 0), i8* %call5), !dbg !10452
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !10453, !tbaa !2355
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !10454, !tbaa !2516
  %16 = load i64, i64* %i, align 8, !dbg !10455, !tbaa !2516
  %mul7 = mul i64 %15, %16, !dbg !10456
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !10457
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !10458, !tbaa !2355
  br label %if.end, !dbg !10459

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10460, !tbaa !2355
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !10462, !tbaa !2355
  %19 = load i64, i64* %i, align 8, !dbg !10463, !tbaa !2516
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !10462, !ctir !812
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !10462, !tbaa !2355
  %call10 = call i8* @quote(i8* %20), !dbg !10464
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.164, i64 0, i64 0), i8* %call10), !dbg !10465
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !10466

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !10467, !tbaa !2516
  %inc = add i64 %21, 1, !dbg !10467
  store i64 %inc, i64* %i, align 8, !dbg !10467, !tbaa !2516
  br label %for.cond, !dbg !10468, !llvm.loop !10469

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10471, !tbaa !2355
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !10471
  ret void, !dbg !10472
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !10473 !ctir !855 {
entry:
  %retval = alloca i64, align 8, !ctir !811
  %context.addr = alloca i8*, align 8, !ctir !87
  %arg.addr = alloca i8*, align 8, !ctir !87
  %arglist.addr = alloca i8**, align 8, !ctir !812
  %vallist.addr = alloca i8*, align 8, !ctir !85
  %valsize.addr = alloca i64, align 8, !ctir !52
  %exit_fn.addr = alloca void ()*, align 8, !ctir !266
  %res = alloca i64, align 8, !ctir !811
  store i8* %context, i8** %context.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10476, metadata !DIExpression()), !dbg !10477
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10478, metadata !DIExpression()), !dbg !10479
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10480, metadata !DIExpression()), !dbg !10481
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10482, metadata !DIExpression()), !dbg !10483
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.declare(metadata i64* %res, metadata !10486, metadata !DIExpression()), !dbg !10487
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !10488, !tbaa !2355
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !10489, !tbaa !2355
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !10490, !tbaa !2355
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !10491, !tbaa !2516
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !10492
  store i64 %call, i64* %res, align 8, !dbg !10487, !tbaa !2516
  %4 = load i64, i64* %res, align 8, !dbg !10493, !tbaa !2516
  %cmp = icmp sge i64 %4, 0, !dbg !10495
  br i1 %cmp, label %if.then, label %if.end, !dbg !10496

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !10497, !tbaa !2516
  store i64 %5, i64* %retval, align 8, !dbg !10498
  br label %return, !dbg !10498

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !10499, !tbaa !2355
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !10500, !tbaa !2355
  %8 = load i64, i64* %res, align 8, !dbg !10501, !tbaa !2516
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !10502
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !10503, !tbaa !2355
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !10504, !tbaa !2355
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !10505, !tbaa !2516
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !10506
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !10507, !tbaa !2355
  call void %12(), !dbg !10508
  store i64 -1, i64* %retval, align 8, !dbg !10509
  br label %return, !dbg !10509

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !10510
  ret i64 %13, !dbg !10510
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !10511 !ctir !857 {
entry:
  %retval = alloca i8*, align 8, !ctir !87
  %value.addr = alloca i8*, align 8, !ctir !85
  %arglist.addr = alloca i8**, align 8, !ctir !812
  %vallist.addr = alloca i8*, align 8, !ctir !85
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  store i8* %value, i8** %value.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10518, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10520, metadata !DIExpression()), !dbg !10521
  store i64 0, i64* %i, align 8, !dbg !10522, !tbaa !2516
  br label %for.cond, !dbg !10524

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !10525, !tbaa !2355
  %1 = load i64, i64* %i, align 8, !dbg !10527, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !10525, !ctir !812
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !10525, !tbaa !2355
  %tobool = icmp ne i8* %2, null, !dbg !10528
  br i1 %tobool, label %for.body, label %for.end, !dbg !10528

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !10529, !tbaa !2355
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !10531, !tbaa !2355
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !10532, !tbaa !2516
  %6 = load i64, i64* %i, align 8, !dbg !10533, !tbaa !2516
  %mul = mul i64 %5, %6, !dbg !10534
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !10535
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !10536, !tbaa !2516
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !10537
  %tobool1 = icmp ne i32 %call, 0, !dbg !10537
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10538

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !10539, !tbaa !2355
  %9 = load i64, i64* %i, align 8, !dbg !10540, !tbaa !2516
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !10539, !ctir !812
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !10539, !tbaa !2355
  store i8* %10, i8** %retval, align 8, !dbg !10541
  br label %return, !dbg !10541

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10542

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !10543, !tbaa !2516
  %inc = add i64 %11, 1, !dbg !10543
  store i64 %inc, i64* %i, align 8, !dbg !10543, !tbaa !2516
  br label %for.cond, !dbg !10544, !llvm.loop !10545

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !10547
  br label %return, !dbg !10547

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !10548
  ret i8* %12, !dbg !10548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10549 !ctir !302 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !87
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10550, metadata !DIExpression()), !dbg !10551
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10552, !tbaa !2355
  store i8* %0, i8** @file_name, align 8, !dbg !10553, !tbaa !2355
  ret void, !dbg !10554
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10555 !ctir !866 {
entry:
  %ignore.addr = alloca i8, align 1, !ctir !102
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10556, metadata !DIExpression()), !dbg !10557
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10558, !tbaa !2499
  %tobool = trunc i8 %0 to i1, !dbg !10558
  %frombool1 = zext i1 %tobool to i8, !dbg !10559
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10559, !tbaa !2499
  ret void, !dbg !10560
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10561 !ctir !167 {
entry:
  %write_error = alloca i8*, align 8, !ctir !87
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10562, !tbaa !2355
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10564
  %cmp = icmp ne i32 %call, 0, !dbg !10565
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10566

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10567, !tbaa !2499
  %tobool = trunc i8 %1 to i1, !dbg !10567
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10568

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !10569
  %2 = load i32, i32* %call2, align 4, !dbg !10569, !tbaa !2342, !ctir !5
  %cmp3 = icmp eq i32 %2, 32, !dbg !10570
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10571

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10572, metadata !DIExpression()), !dbg !10574
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.182, i64 0, i64 0)) #12, !dbg !10575
  store i8* %call4, i8** %write_error, align 8, !dbg !10574, !tbaa !2355
  %3 = load i8*, i8** @file_name, align 8, !dbg !10576, !tbaa !2355
  %tobool5 = icmp ne i8* %3, null, !dbg !10576
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10578

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !10579
  %4 = load i32, i32* %call7, align 4, !dbg !10579, !tbaa !2342, !ctir !5
  %5 = load i8*, i8** @file_name, align 8, !dbg !10580, !tbaa !2355
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10581
  %6 = load i8*, i8** %write_error, align 8, !dbg !10582, !tbaa !2355
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.183, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10583
  br label %if.end, !dbg !10583

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !10584
  %7 = load i32, i32* %call9, align 4, !dbg !10584, !tbaa !2342, !ctir !5
  %8 = load i8*, i8** %write_error, align 8, !dbg !10585, !tbaa !2355
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.184, i64 0, i64 0), i8* %8), !dbg !10586
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10587, !tbaa !2342
  call void @_exit(i32 %9) #15, !dbg !10588
  unreachable, !dbg !10588

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10589, !tbaa !2355
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10591
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10592
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10593

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10594, !tbaa !2342
  call void @_exit(i32 %11) #15, !dbg !10595
  unreachable, !dbg !10595

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10596
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @md5_init_ctx(%struct.md5_ctx* %ctx) #4 !dbg !10597 !ctir !916 {
entry:
  %ctx.addr = alloca %struct.md5_ctx*, align 8, !ctir !918
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10598, metadata !DIExpression()), !dbg !10599
  %0 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10600, !tbaa !2355
  %A = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %0, i32 0, i32 0, !dbg !10601, !ctir !919
  store i32 1732584193, i32* %A, align 4, !dbg !10602, !tbaa !10603, !ctir !488
  %1 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10605, !tbaa !2355
  %B = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %1, i32 0, i32 1, !dbg !10606, !ctir !919
  store i32 -271733879, i32* %B, align 4, !dbg !10607, !tbaa !10608, !ctir !488
  %2 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10609, !tbaa !2355
  %C = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i32 0, i32 2, !dbg !10610, !ctir !919
  store i32 -1732584194, i32* %C, align 4, !dbg !10611, !tbaa !10612, !ctir !488
  %3 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10613, !tbaa !2355
  %D = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %3, i32 0, i32 3, !dbg !10614, !ctir !919
  store i32 271733878, i32* %D, align 4, !dbg !10615, !tbaa !10616, !ctir !488
  %4 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10617, !tbaa !2355
  %total = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %4, i32 0, i32 4, !dbg !10618, !ctir !919
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %total, i64 0, i64 1, !dbg !10617, !ctir !499
  store i32 0, i32* %arrayidx, align 4, !dbg !10619, !tbaa !2342
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10620, !tbaa !2355
  %total1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 4, !dbg !10621, !ctir !919
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %total1, i64 0, i64 0, !dbg !10620, !ctir !499
  store i32 0, i32* %arrayidx2, align 4, !dbg !10622, !tbaa !2342
  %6 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10623, !tbaa !2355
  %buflen = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %6, i32 0, i32 5, !dbg !10624, !ctir !919
  store i32 0, i32* %buflen, align 4, !dbg !10625, !tbaa !10626, !ctir !488
  ret void, !dbg !10627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @md5_read_ctx(%struct.md5_ctx* %ctx, i8* %resbuf) #4 !dbg !10628 !ctir !928 {
entry:
  %ctx.addr = alloca %struct.md5_ctx*, align 8, !ctir !930
  %resbuf.addr = alloca i8*, align 8, !ctir !47
  %r = alloca i8*, align 8, !ctir !7
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10629, metadata !DIExpression()), !dbg !10630
  store i8* %resbuf, i8** %resbuf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !10631, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.declare(metadata i8** %r, metadata !10633, metadata !DIExpression()), !dbg !10634
  %0 = load i8*, i8** %resbuf.addr, align 8, !dbg !10635, !tbaa !2355
  store i8* %0, i8** %r, align 8, !dbg !10634, !tbaa !2355
  %1 = load i8*, i8** %r, align 8, !dbg !10636, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10637
  %2 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10638, !tbaa !2355
  %A = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i32 0, i32 0, !dbg !10638, !ctir !931
  %3 = load i32, i32* %A, align 4, !dbg !10638, !tbaa !10603, !ctir !488
  call void @set_uint32(i8* %add.ptr, i32 %3), !dbg !10639
  %4 = load i8*, i8** %r, align 8, !dbg !10640, !tbaa !2355
  %add.ptr1 = getelementptr inbounds i8, i8* %4, i64 4, !dbg !10641
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10642, !tbaa !2355
  %B = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 1, !dbg !10642, !ctir !931
  %6 = load i32, i32* %B, align 4, !dbg !10642, !tbaa !10608, !ctir !488
  call void @set_uint32(i8* %add.ptr1, i32 %6), !dbg !10643
  %7 = load i8*, i8** %r, align 8, !dbg !10644, !tbaa !2355
  %add.ptr2 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !10645
  %8 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10646, !tbaa !2355
  %C = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %8, i32 0, i32 2, !dbg !10646, !ctir !931
  %9 = load i32, i32* %C, align 4, !dbg !10646, !tbaa !10612, !ctir !488
  call void @set_uint32(i8* %add.ptr2, i32 %9), !dbg !10647
  %10 = load i8*, i8** %r, align 8, !dbg !10648, !tbaa !2355
  %add.ptr3 = getelementptr inbounds i8, i8* %10, i64 12, !dbg !10649
  %11 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10650, !tbaa !2355
  %D = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %11, i32 0, i32 3, !dbg !10650, !ctir !931
  %12 = load i32, i32* %D, align 4, !dbg !10650, !tbaa !10616, !ctir !488
  call void @set_uint32(i8* %add.ptr3, i32 %12), !dbg !10651
  %13 = load i8*, i8** %resbuf.addr, align 8, !dbg !10652, !tbaa !2355
  ret i8* %13, !dbg !10653
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_uint32(i8* %cp, i32 %v) #4 !dbg !10654 !ctir !988 {
entry:
  %cp.addr = alloca i8*, align 8, !ctir !7
  %v.addr = alloca i32, align 4, !ctir !488
  store i8* %cp, i8** %cp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  store i32 %v, i32* %v.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !10657, metadata !DIExpression()), !dbg !10658
  %0 = load i8*, i8** %cp.addr, align 8, !dbg !10659, !tbaa !2355
  %1 = bitcast i32* %v.addr to i8*, !dbg !10660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 4 %1, i64 4, i1 false), !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %resbuf) #4 !dbg !10662 !ctir !932 {
entry:
  %ctx.addr = alloca %struct.md5_ctx*, align 8, !ctir !918
  %resbuf.addr = alloca i8*, align 8, !ctir !47
  %bytes = alloca i32, align 4, !ctir !488
  %size = alloca i64, align 8, !ctir !52
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  store i8* %resbuf, i8** %resbuf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !10667, metadata !DIExpression()), !dbg !10668
  %0 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10669, !tbaa !2355
  %buflen = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %0, i32 0, i32 5, !dbg !10670, !ctir !919
  %1 = load i32, i32* %buflen, align 4, !dbg !10670, !tbaa !10626, !ctir !488
  store i32 %1, i32* %bytes, align 4, !dbg !10668, !tbaa !2342
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10671, metadata !DIExpression()), !dbg !10672
  %2 = load i32, i32* %bytes, align 4, !dbg !10673, !tbaa !2342
  %cmp = icmp ult i32 %2, 56, !dbg !10674
  %3 = zext i1 %cmp to i64, !dbg !10675
  %cond = select i1 %cmp, i32 16, i32 32, !dbg !10675
  %conv = sext i32 %cond to i64, !dbg !10675
  store i64 %conv, i64* %size, align 8, !dbg !10672, !tbaa !2516
  %4 = load i32, i32* %bytes, align 4, !dbg !10676, !tbaa !2342
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10677, !tbaa !2355
  %total = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 4, !dbg !10678, !ctir !919
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %total, i64 0, i64 0, !dbg !10677, !ctir !499
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10679, !tbaa !2342
  %add = add i32 %6, %4, !dbg !10679
  store i32 %add, i32* %arrayidx, align 4, !dbg !10679, !tbaa !2342
  %7 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10680, !tbaa !2355
  %total1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %7, i32 0, i32 4, !dbg !10682, !ctir !919
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %total1, i64 0, i64 0, !dbg !10680, !ctir !499
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !10680, !tbaa !2342
  %9 = load i32, i32* %bytes, align 4, !dbg !10683, !tbaa !2342
  %cmp3 = icmp ult i32 %8, %9, !dbg !10684
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10685

if.then:                                          ; preds = %entry
  %10 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10686, !tbaa !2355
  %total5 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %10, i32 0, i32 4, !dbg !10687, !ctir !919
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %total5, i64 0, i64 1, !dbg !10686, !ctir !499
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !10688, !tbaa !2342
  %inc = add i32 %11, 1, !dbg !10688
  store i32 %inc, i32* %arrayidx6, align 4, !dbg !10688, !tbaa !2342
  br label %if.end, !dbg !10688

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10689, !tbaa !2355
  %total7 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %12, i32 0, i32 4, !dbg !10689, !ctir !919
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %total7, i64 0, i64 0, !dbg !10689, !ctir !499
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !10689, !tbaa !2342
  %shl = shl i32 %13, 3, !dbg !10689
  %14 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10690, !tbaa !2355
  %buffer = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %14, i32 0, i32 6, !dbg !10691, !ctir !919
  %15 = load i64, i64* %size, align 8, !dbg !10692, !tbaa !2516
  %sub = sub i64 %15, 2, !dbg !10693
  %arrayidx9 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer, i64 0, i64 %sub, !dbg !10690, !ctir !502
  store i32 %shl, i32* %arrayidx9, align 4, !dbg !10694, !tbaa !2342
  %16 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10695, !tbaa !2355
  %total10 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %16, i32 0, i32 4, !dbg !10695, !ctir !919
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %total10, i64 0, i64 1, !dbg !10695, !ctir !499
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !10695, !tbaa !2342
  %shl12 = shl i32 %17, 3, !dbg !10695
  %18 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10695, !tbaa !2355
  %total13 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %18, i32 0, i32 4, !dbg !10695, !ctir !919
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %total13, i64 0, i64 0, !dbg !10695, !ctir !499
  %19 = load i32, i32* %arrayidx14, align 4, !dbg !10695, !tbaa !2342
  %shr = lshr i32 %19, 29, !dbg !10695
  %or = or i32 %shl12, %shr, !dbg !10695
  %20 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10696, !tbaa !2355
  %buffer15 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %20, i32 0, i32 6, !dbg !10697, !ctir !919
  %21 = load i64, i64* %size, align 8, !dbg !10698, !tbaa !2516
  %sub16 = sub i64 %21, 1, !dbg !10699
  %arrayidx17 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer15, i64 0, i64 %sub16, !dbg !10696, !ctir !502
  store i32 %or, i32* %arrayidx17, align 4, !dbg !10700, !tbaa !2342
  %22 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10701, !tbaa !2355
  %buffer18 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %22, i32 0, i32 6, !dbg !10702, !ctir !919
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %buffer18, i64 0, i64 0, !dbg !10703
  %23 = bitcast i32* %arraydecay to i8*, !dbg !10703
  %24 = load i32, i32* %bytes, align 4, !dbg !10704, !tbaa !2342
  %idxprom = zext i32 %24 to i64, !dbg !10703
  %arrayidx19 = getelementptr inbounds i8, i8* %23, i64 %idxprom, !dbg !10703, !ctir !7
  %25 = load i64, i64* %size, align 8, !dbg !10705, !tbaa !2516
  %sub20 = sub i64 %25, 2, !dbg !10706
  %mul = mul i64 %sub20, 4, !dbg !10707
  %26 = load i32, i32* %bytes, align 4, !dbg !10708, !tbaa !2342
  %conv21 = zext i32 %26 to i64, !dbg !10708
  %sub22 = sub i64 %mul, %conv21, !dbg !10709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx19, i8* align 16 getelementptr inbounds ([64 x i8], [64 x i8]* bitcast (<{ i8, [63 x i8] }>* @fillbuf.189 to [64 x i8]*), i64 0, i64 0), i64 %sub22, i1 false), !dbg !10710
  %27 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10711, !tbaa !2355
  %buffer23 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %27, i32 0, i32 6, !dbg !10712, !ctir !919
  %arraydecay24 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer23, i64 0, i64 0, !dbg !10711
  %28 = bitcast i32* %arraydecay24 to i8*, !dbg !10711
  %29 = load i64, i64* %size, align 8, !dbg !10713, !tbaa !2516
  %mul25 = mul i64 %29, 4, !dbg !10714
  %30 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10715, !tbaa !2355
  call void @md5_process_block(i8* %28, i64 %mul25, %struct.md5_ctx* %30) #12, !dbg !10716
  %31 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10717, !tbaa !2355
  %32 = load i8*, i8** %resbuf.addr, align 8, !dbg !10718, !tbaa !2355
  %call = call i8* @md5_read_ctx(%struct.md5_ctx* %31, i8* %32) #12, !dbg !10719
  ret i8* %call, !dbg !10720
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @md5_process_block(i8* %buffer, i64 %len, %struct.md5_ctx* %ctx) #4 !dbg !10721 !ctir !982 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !85
  %len.addr = alloca i64, align 8, !ctir !52
  %ctx.addr = alloca %struct.md5_ctx*, align 8, !ctir !918
  %correct_words = alloca [16 x i32], align 16, !ctir !984
  %words = alloca i32*, align 8, !ctir !985
  %nwords = alloca i64, align 8, !ctir !52
  %endp = alloca i32*, align 8, !ctir !985
  %A = alloca i32, align 4, !ctir !488
  %B = alloca i32, align 4, !ctir !488
  %C = alloca i32, align 4, !ctir !488
  %D = alloca i32, align 4, !ctir !488
  %lolen = alloca i32, align 4, !ctir !488
  %cwp = alloca i32*, align 8, !ctir !987
  %A_save = alloca i32, align 4, !ctir !488
  %B_save = alloca i32, align 4, !ctir !488
  %C_save = alloca i32, align 4, !ctir !488
  %D_save = alloca i32, align 4, !ctir !488
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10722, metadata !DIExpression()), !dbg !10723
  store i64 %len, i64* %len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.declare(metadata [16 x i32]* %correct_words, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.declare(metadata i32** %words, metadata !10730, metadata !DIExpression()), !dbg !10731
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10732, !tbaa !2355
  %1 = bitcast i8* %0 to i32*, !dbg !10732
  store i32* %1, i32** %words, align 8, !dbg !10731, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %nwords, metadata !10733, metadata !DIExpression()), !dbg !10734
  %2 = load i64, i64* %len.addr, align 8, !dbg !10735, !tbaa !2516
  %div = udiv i64 %2, 4, !dbg !10736
  store i64 %div, i64* %nwords, align 8, !dbg !10734, !tbaa !2516
  call void @llvm.dbg.declare(metadata i32** %endp, metadata !10737, metadata !DIExpression()), !dbg !10738
  %3 = load i32*, i32** %words, align 8, !dbg !10739, !tbaa !2355
  %4 = load i64, i64* %nwords, align 8, !dbg !10740, !tbaa !2516
  %add.ptr = getelementptr inbounds i32, i32* %3, i64 %4, !dbg !10741
  store i32* %add.ptr, i32** %endp, align 8, !dbg !10738, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %A, metadata !10742, metadata !DIExpression()), !dbg !10743
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10744, !tbaa !2355
  %A1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 0, !dbg !10745, !ctir !919
  %6 = load i32, i32* %A1, align 4, !dbg !10745, !tbaa !10603, !ctir !488
  store i32 %6, i32* %A, align 4, !dbg !10743, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %B, metadata !10746, metadata !DIExpression()), !dbg !10747
  %7 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10748, !tbaa !2355
  %B2 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %7, i32 0, i32 1, !dbg !10749, !ctir !919
  %8 = load i32, i32* %B2, align 4, !dbg !10749, !tbaa !10608, !ctir !488
  store i32 %8, i32* %B, align 4, !dbg !10747, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %C, metadata !10750, metadata !DIExpression()), !dbg !10751
  %9 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10752, !tbaa !2355
  %C3 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %9, i32 0, i32 2, !dbg !10753, !ctir !919
  %10 = load i32, i32* %C3, align 4, !dbg !10753, !tbaa !10612, !ctir !488
  store i32 %10, i32* %C, align 4, !dbg !10751, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %D, metadata !10754, metadata !DIExpression()), !dbg !10755
  %11 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10756, !tbaa !2355
  %D4 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %11, i32 0, i32 3, !dbg !10757, !ctir !919
  %12 = load i32, i32* %D4, align 4, !dbg !10757, !tbaa !10616, !ctir !488
  store i32 %12, i32* %D, align 4, !dbg !10755, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %lolen, metadata !10758, metadata !DIExpression()), !dbg !10759
  %13 = load i64, i64* %len.addr, align 8, !dbg !10760, !tbaa !2516
  %conv = trunc i64 %13 to i32, !dbg !10760
  store i32 %conv, i32* %lolen, align 4, !dbg !10759, !tbaa !2342
  %14 = load i32, i32* %lolen, align 4, !dbg !10761, !tbaa !2342
  %15 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10762, !tbaa !2355
  %total = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %15, i32 0, i32 4, !dbg !10763, !ctir !919
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %total, i64 0, i64 0, !dbg !10762, !ctir !499
  %16 = load i32, i32* %arrayidx, align 4, !dbg !10764, !tbaa !2342
  %add = add i32 %16, %14, !dbg !10764
  store i32 %add, i32* %arrayidx, align 4, !dbg !10764, !tbaa !2342
  %17 = load i64, i64* %len.addr, align 8, !dbg !10765, !tbaa !2516
  %shr = lshr i64 %17, 31, !dbg !10766
  %shr5 = lshr i64 %shr, 1, !dbg !10767
  %18 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10768, !tbaa !2355
  %total6 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %18, i32 0, i32 4, !dbg !10769, !ctir !919
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %total6, i64 0, i64 0, !dbg !10768, !ctir !499
  %19 = load i32, i32* %arrayidx7, align 4, !dbg !10768, !tbaa !2342
  %20 = load i32, i32* %lolen, align 4, !dbg !10770, !tbaa !2342
  %cmp = icmp ult i32 %19, %20, !dbg !10771
  %conv8 = zext i1 %cmp to i32, !dbg !10771
  %conv9 = sext i32 %conv8 to i64, !dbg !10772
  %add10 = add i64 %shr5, %conv9, !dbg !10773
  %21 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10774, !tbaa !2355
  %total11 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %21, i32 0, i32 4, !dbg !10775, !ctir !919
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %total11, i64 0, i64 1, !dbg !10774, !ctir !499
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !10776, !tbaa !2342
  %conv13 = zext i32 %22 to i64, !dbg !10776
  %add14 = add i64 %conv13, %add10, !dbg !10776
  %conv15 = trunc i64 %add14 to i32, !dbg !10776
  store i32 %conv15, i32* %arrayidx12, align 4, !dbg !10776, !tbaa !2342
  br label %while.cond, !dbg !10777

while.cond:                                       ; preds = %do.end841, %entry
  %23 = load i32*, i32** %words, align 8, !dbg !10778, !tbaa !2355
  %24 = load i32*, i32** %endp, align 8, !dbg !10779, !tbaa !2355
  %cmp16 = icmp ult i32* %23, %24, !dbg !10780
  br i1 %cmp16, label %while.body, label %while.end, !dbg !10777

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %cwp, metadata !10781, metadata !DIExpression()), !dbg !10783
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10784
  store i32* %arraydecay, i32** %cwp, align 8, !dbg !10783, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %A_save, metadata !10785, metadata !DIExpression()), !dbg !10786
  %25 = load i32, i32* %A, align 4, !dbg !10787, !tbaa !2342
  store i32 %25, i32* %A_save, align 4, !dbg !10786, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %B_save, metadata !10788, metadata !DIExpression()), !dbg !10789
  %26 = load i32, i32* %B, align 4, !dbg !10790, !tbaa !2342
  store i32 %26, i32* %B_save, align 4, !dbg !10789, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %C_save, metadata !10791, metadata !DIExpression()), !dbg !10792
  %27 = load i32, i32* %C, align 4, !dbg !10793, !tbaa !2342
  store i32 %27, i32* %C_save, align 4, !dbg !10792, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %D_save, metadata !10794, metadata !DIExpression()), !dbg !10795
  %28 = load i32, i32* %D, align 4, !dbg !10796, !tbaa !2342
  store i32 %28, i32* %D_save, align 4, !dbg !10795, !tbaa !2342
  br label %do.body, !dbg !10797

do.body:                                          ; preds = %while.body
  %29 = load i32, i32* %D, align 4, !dbg !10798, !tbaa !2342
  %30 = load i32, i32* %B, align 4, !dbg !10798, !tbaa !2342
  %31 = load i32, i32* %C, align 4, !dbg !10798, !tbaa !2342
  %32 = load i32, i32* %D, align 4, !dbg !10798, !tbaa !2342
  %xor = xor i32 %31, %32, !dbg !10798
  %and = and i32 %30, %xor, !dbg !10798
  %xor18 = xor i32 %29, %and, !dbg !10798
  %33 = load i32*, i32** %words, align 8, !dbg !10798, !tbaa !2355
  %34 = load i32, i32* %33, align 4, !dbg !10798, !tbaa !2342, !ctir !986
  %35 = load i32*, i32** %cwp, align 8, !dbg !10798, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i32, i32* %35, i32 1, !dbg !10798
  store i32* %incdec.ptr, i32** %cwp, align 8, !dbg !10798, !tbaa !2355
  store i32 %34, i32* %35, align 4, !dbg !10798, !tbaa !2342, !ctir !488
  %add19 = add i32 %xor18, %34, !dbg !10798
  %add20 = add i32 %add19, -680876936, !dbg !10798
  %36 = load i32, i32* %A, align 4, !dbg !10798, !tbaa !2342
  %add21 = add i32 %36, %add20, !dbg !10798
  store i32 %add21, i32* %A, align 4, !dbg !10798, !tbaa !2342
  %37 = load i32*, i32** %words, align 8, !dbg !10798, !tbaa !2355
  %incdec.ptr22 = getelementptr inbounds i32, i32* %37, i32 1, !dbg !10798
  store i32* %incdec.ptr22, i32** %words, align 8, !dbg !10798, !tbaa !2355
  %38 = load i32, i32* %A, align 4, !dbg !10798, !tbaa !2342
  %shl = shl i32 %38, 7, !dbg !10798
  %39 = load i32, i32* %A, align 4, !dbg !10798, !tbaa !2342
  %shr23 = lshr i32 %39, 25, !dbg !10798
  %or = or i32 %shl, %shr23, !dbg !10798
  store i32 %or, i32* %A, align 4, !dbg !10798, !tbaa !2342
  %40 = load i32, i32* %B, align 4, !dbg !10798, !tbaa !2342
  %41 = load i32, i32* %A, align 4, !dbg !10798, !tbaa !2342
  %add24 = add i32 %41, %40, !dbg !10798
  store i32 %add24, i32* %A, align 4, !dbg !10798, !tbaa !2342
  br label %do.end, !dbg !10798

do.end:                                           ; preds = %do.body
  br label %do.body25, !dbg !10800

do.body25:                                        ; preds = %do.end
  %42 = load i32, i32* %C, align 4, !dbg !10801, !tbaa !2342
  %43 = load i32, i32* %A, align 4, !dbg !10801, !tbaa !2342
  %44 = load i32, i32* %B, align 4, !dbg !10801, !tbaa !2342
  %45 = load i32, i32* %C, align 4, !dbg !10801, !tbaa !2342
  %xor26 = xor i32 %44, %45, !dbg !10801
  %and27 = and i32 %43, %xor26, !dbg !10801
  %xor28 = xor i32 %42, %and27, !dbg !10801
  %46 = load i32*, i32** %words, align 8, !dbg !10801, !tbaa !2355
  %47 = load i32, i32* %46, align 4, !dbg !10801, !tbaa !2342, !ctir !986
  %48 = load i32*, i32** %cwp, align 8, !dbg !10801, !tbaa !2355
  %incdec.ptr29 = getelementptr inbounds i32, i32* %48, i32 1, !dbg !10801
  store i32* %incdec.ptr29, i32** %cwp, align 8, !dbg !10801, !tbaa !2355
  store i32 %47, i32* %48, align 4, !dbg !10801, !tbaa !2342, !ctir !488
  %add30 = add i32 %xor28, %47, !dbg !10801
  %add31 = add i32 %add30, -389564586, !dbg !10801
  %49 = load i32, i32* %D, align 4, !dbg !10801, !tbaa !2342
  %add32 = add i32 %49, %add31, !dbg !10801
  store i32 %add32, i32* %D, align 4, !dbg !10801, !tbaa !2342
  %50 = load i32*, i32** %words, align 8, !dbg !10801, !tbaa !2355
  %incdec.ptr33 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !10801
  store i32* %incdec.ptr33, i32** %words, align 8, !dbg !10801, !tbaa !2355
  %51 = load i32, i32* %D, align 4, !dbg !10801, !tbaa !2342
  %shl34 = shl i32 %51, 12, !dbg !10801
  %52 = load i32, i32* %D, align 4, !dbg !10801, !tbaa !2342
  %shr35 = lshr i32 %52, 20, !dbg !10801
  %or36 = or i32 %shl34, %shr35, !dbg !10801
  store i32 %or36, i32* %D, align 4, !dbg !10801, !tbaa !2342
  %53 = load i32, i32* %A, align 4, !dbg !10801, !tbaa !2342
  %54 = load i32, i32* %D, align 4, !dbg !10801, !tbaa !2342
  %add37 = add i32 %54, %53, !dbg !10801
  store i32 %add37, i32* %D, align 4, !dbg !10801, !tbaa !2342
  br label %do.end38, !dbg !10801

do.end38:                                         ; preds = %do.body25
  br label %do.body39, !dbg !10803

do.body39:                                        ; preds = %do.end38
  %55 = load i32, i32* %B, align 4, !dbg !10804, !tbaa !2342
  %56 = load i32, i32* %D, align 4, !dbg !10804, !tbaa !2342
  %57 = load i32, i32* %A, align 4, !dbg !10804, !tbaa !2342
  %58 = load i32, i32* %B, align 4, !dbg !10804, !tbaa !2342
  %xor40 = xor i32 %57, %58, !dbg !10804
  %and41 = and i32 %56, %xor40, !dbg !10804
  %xor42 = xor i32 %55, %and41, !dbg !10804
  %59 = load i32*, i32** %words, align 8, !dbg !10804, !tbaa !2355
  %60 = load i32, i32* %59, align 4, !dbg !10804, !tbaa !2342, !ctir !986
  %61 = load i32*, i32** %cwp, align 8, !dbg !10804, !tbaa !2355
  %incdec.ptr43 = getelementptr inbounds i32, i32* %61, i32 1, !dbg !10804
  store i32* %incdec.ptr43, i32** %cwp, align 8, !dbg !10804, !tbaa !2355
  store i32 %60, i32* %61, align 4, !dbg !10804, !tbaa !2342, !ctir !488
  %add44 = add i32 %xor42, %60, !dbg !10804
  %add45 = add i32 %add44, 606105819, !dbg !10804
  %62 = load i32, i32* %C, align 4, !dbg !10804, !tbaa !2342
  %add46 = add i32 %62, %add45, !dbg !10804
  store i32 %add46, i32* %C, align 4, !dbg !10804, !tbaa !2342
  %63 = load i32*, i32** %words, align 8, !dbg !10804, !tbaa !2355
  %incdec.ptr47 = getelementptr inbounds i32, i32* %63, i32 1, !dbg !10804
  store i32* %incdec.ptr47, i32** %words, align 8, !dbg !10804, !tbaa !2355
  %64 = load i32, i32* %C, align 4, !dbg !10804, !tbaa !2342
  %shl48 = shl i32 %64, 17, !dbg !10804
  %65 = load i32, i32* %C, align 4, !dbg !10804, !tbaa !2342
  %shr49 = lshr i32 %65, 15, !dbg !10804
  %or50 = or i32 %shl48, %shr49, !dbg !10804
  store i32 %or50, i32* %C, align 4, !dbg !10804, !tbaa !2342
  %66 = load i32, i32* %D, align 4, !dbg !10804, !tbaa !2342
  %67 = load i32, i32* %C, align 4, !dbg !10804, !tbaa !2342
  %add51 = add i32 %67, %66, !dbg !10804
  store i32 %add51, i32* %C, align 4, !dbg !10804, !tbaa !2342
  br label %do.end52, !dbg !10804

do.end52:                                         ; preds = %do.body39
  br label %do.body53, !dbg !10806

do.body53:                                        ; preds = %do.end52
  %68 = load i32, i32* %A, align 4, !dbg !10807, !tbaa !2342
  %69 = load i32, i32* %C, align 4, !dbg !10807, !tbaa !2342
  %70 = load i32, i32* %D, align 4, !dbg !10807, !tbaa !2342
  %71 = load i32, i32* %A, align 4, !dbg !10807, !tbaa !2342
  %xor54 = xor i32 %70, %71, !dbg !10807
  %and55 = and i32 %69, %xor54, !dbg !10807
  %xor56 = xor i32 %68, %and55, !dbg !10807
  %72 = load i32*, i32** %words, align 8, !dbg !10807, !tbaa !2355
  %73 = load i32, i32* %72, align 4, !dbg !10807, !tbaa !2342, !ctir !986
  %74 = load i32*, i32** %cwp, align 8, !dbg !10807, !tbaa !2355
  %incdec.ptr57 = getelementptr inbounds i32, i32* %74, i32 1, !dbg !10807
  store i32* %incdec.ptr57, i32** %cwp, align 8, !dbg !10807, !tbaa !2355
  store i32 %73, i32* %74, align 4, !dbg !10807, !tbaa !2342, !ctir !488
  %add58 = add i32 %xor56, %73, !dbg !10807
  %add59 = add i32 %add58, -1044525330, !dbg !10807
  %75 = load i32, i32* %B, align 4, !dbg !10807, !tbaa !2342
  %add60 = add i32 %75, %add59, !dbg !10807
  store i32 %add60, i32* %B, align 4, !dbg !10807, !tbaa !2342
  %76 = load i32*, i32** %words, align 8, !dbg !10807, !tbaa !2355
  %incdec.ptr61 = getelementptr inbounds i32, i32* %76, i32 1, !dbg !10807
  store i32* %incdec.ptr61, i32** %words, align 8, !dbg !10807, !tbaa !2355
  %77 = load i32, i32* %B, align 4, !dbg !10807, !tbaa !2342
  %shl62 = shl i32 %77, 22, !dbg !10807
  %78 = load i32, i32* %B, align 4, !dbg !10807, !tbaa !2342
  %shr63 = lshr i32 %78, 10, !dbg !10807
  %or64 = or i32 %shl62, %shr63, !dbg !10807
  store i32 %or64, i32* %B, align 4, !dbg !10807, !tbaa !2342
  %79 = load i32, i32* %C, align 4, !dbg !10807, !tbaa !2342
  %80 = load i32, i32* %B, align 4, !dbg !10807, !tbaa !2342
  %add65 = add i32 %80, %79, !dbg !10807
  store i32 %add65, i32* %B, align 4, !dbg !10807, !tbaa !2342
  br label %do.end66, !dbg !10807

do.end66:                                         ; preds = %do.body53
  br label %do.body67, !dbg !10809

do.body67:                                        ; preds = %do.end66
  %81 = load i32, i32* %D, align 4, !dbg !10810, !tbaa !2342
  %82 = load i32, i32* %B, align 4, !dbg !10810, !tbaa !2342
  %83 = load i32, i32* %C, align 4, !dbg !10810, !tbaa !2342
  %84 = load i32, i32* %D, align 4, !dbg !10810, !tbaa !2342
  %xor68 = xor i32 %83, %84, !dbg !10810
  %and69 = and i32 %82, %xor68, !dbg !10810
  %xor70 = xor i32 %81, %and69, !dbg !10810
  %85 = load i32*, i32** %words, align 8, !dbg !10810, !tbaa !2355
  %86 = load i32, i32* %85, align 4, !dbg !10810, !tbaa !2342, !ctir !986
  %87 = load i32*, i32** %cwp, align 8, !dbg !10810, !tbaa !2355
  %incdec.ptr71 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !10810
  store i32* %incdec.ptr71, i32** %cwp, align 8, !dbg !10810, !tbaa !2355
  store i32 %86, i32* %87, align 4, !dbg !10810, !tbaa !2342, !ctir !488
  %add72 = add i32 %xor70, %86, !dbg !10810
  %add73 = add i32 %add72, -176418897, !dbg !10810
  %88 = load i32, i32* %A, align 4, !dbg !10810, !tbaa !2342
  %add74 = add i32 %88, %add73, !dbg !10810
  store i32 %add74, i32* %A, align 4, !dbg !10810, !tbaa !2342
  %89 = load i32*, i32** %words, align 8, !dbg !10810, !tbaa !2355
  %incdec.ptr75 = getelementptr inbounds i32, i32* %89, i32 1, !dbg !10810
  store i32* %incdec.ptr75, i32** %words, align 8, !dbg !10810, !tbaa !2355
  %90 = load i32, i32* %A, align 4, !dbg !10810, !tbaa !2342
  %shl76 = shl i32 %90, 7, !dbg !10810
  %91 = load i32, i32* %A, align 4, !dbg !10810, !tbaa !2342
  %shr77 = lshr i32 %91, 25, !dbg !10810
  %or78 = or i32 %shl76, %shr77, !dbg !10810
  store i32 %or78, i32* %A, align 4, !dbg !10810, !tbaa !2342
  %92 = load i32, i32* %B, align 4, !dbg !10810, !tbaa !2342
  %93 = load i32, i32* %A, align 4, !dbg !10810, !tbaa !2342
  %add79 = add i32 %93, %92, !dbg !10810
  store i32 %add79, i32* %A, align 4, !dbg !10810, !tbaa !2342
  br label %do.end80, !dbg !10810

do.end80:                                         ; preds = %do.body67
  br label %do.body81, !dbg !10812

do.body81:                                        ; preds = %do.end80
  %94 = load i32, i32* %C, align 4, !dbg !10813, !tbaa !2342
  %95 = load i32, i32* %A, align 4, !dbg !10813, !tbaa !2342
  %96 = load i32, i32* %B, align 4, !dbg !10813, !tbaa !2342
  %97 = load i32, i32* %C, align 4, !dbg !10813, !tbaa !2342
  %xor82 = xor i32 %96, %97, !dbg !10813
  %and83 = and i32 %95, %xor82, !dbg !10813
  %xor84 = xor i32 %94, %and83, !dbg !10813
  %98 = load i32*, i32** %words, align 8, !dbg !10813, !tbaa !2355
  %99 = load i32, i32* %98, align 4, !dbg !10813, !tbaa !2342, !ctir !986
  %100 = load i32*, i32** %cwp, align 8, !dbg !10813, !tbaa !2355
  %incdec.ptr85 = getelementptr inbounds i32, i32* %100, i32 1, !dbg !10813
  store i32* %incdec.ptr85, i32** %cwp, align 8, !dbg !10813, !tbaa !2355
  store i32 %99, i32* %100, align 4, !dbg !10813, !tbaa !2342, !ctir !488
  %add86 = add i32 %xor84, %99, !dbg !10813
  %add87 = add i32 %add86, 1200080426, !dbg !10813
  %101 = load i32, i32* %D, align 4, !dbg !10813, !tbaa !2342
  %add88 = add i32 %101, %add87, !dbg !10813
  store i32 %add88, i32* %D, align 4, !dbg !10813, !tbaa !2342
  %102 = load i32*, i32** %words, align 8, !dbg !10813, !tbaa !2355
  %incdec.ptr89 = getelementptr inbounds i32, i32* %102, i32 1, !dbg !10813
  store i32* %incdec.ptr89, i32** %words, align 8, !dbg !10813, !tbaa !2355
  %103 = load i32, i32* %D, align 4, !dbg !10813, !tbaa !2342
  %shl90 = shl i32 %103, 12, !dbg !10813
  %104 = load i32, i32* %D, align 4, !dbg !10813, !tbaa !2342
  %shr91 = lshr i32 %104, 20, !dbg !10813
  %or92 = or i32 %shl90, %shr91, !dbg !10813
  store i32 %or92, i32* %D, align 4, !dbg !10813, !tbaa !2342
  %105 = load i32, i32* %A, align 4, !dbg !10813, !tbaa !2342
  %106 = load i32, i32* %D, align 4, !dbg !10813, !tbaa !2342
  %add93 = add i32 %106, %105, !dbg !10813
  store i32 %add93, i32* %D, align 4, !dbg !10813, !tbaa !2342
  br label %do.end94, !dbg !10813

do.end94:                                         ; preds = %do.body81
  br label %do.body95, !dbg !10815

do.body95:                                        ; preds = %do.end94
  %107 = load i32, i32* %B, align 4, !dbg !10816, !tbaa !2342
  %108 = load i32, i32* %D, align 4, !dbg !10816, !tbaa !2342
  %109 = load i32, i32* %A, align 4, !dbg !10816, !tbaa !2342
  %110 = load i32, i32* %B, align 4, !dbg !10816, !tbaa !2342
  %xor96 = xor i32 %109, %110, !dbg !10816
  %and97 = and i32 %108, %xor96, !dbg !10816
  %xor98 = xor i32 %107, %and97, !dbg !10816
  %111 = load i32*, i32** %words, align 8, !dbg !10816, !tbaa !2355
  %112 = load i32, i32* %111, align 4, !dbg !10816, !tbaa !2342, !ctir !986
  %113 = load i32*, i32** %cwp, align 8, !dbg !10816, !tbaa !2355
  %incdec.ptr99 = getelementptr inbounds i32, i32* %113, i32 1, !dbg !10816
  store i32* %incdec.ptr99, i32** %cwp, align 8, !dbg !10816, !tbaa !2355
  store i32 %112, i32* %113, align 4, !dbg !10816, !tbaa !2342, !ctir !488
  %add100 = add i32 %xor98, %112, !dbg !10816
  %add101 = add i32 %add100, -1473231341, !dbg !10816
  %114 = load i32, i32* %C, align 4, !dbg !10816, !tbaa !2342
  %add102 = add i32 %114, %add101, !dbg !10816
  store i32 %add102, i32* %C, align 4, !dbg !10816, !tbaa !2342
  %115 = load i32*, i32** %words, align 8, !dbg !10816, !tbaa !2355
  %incdec.ptr103 = getelementptr inbounds i32, i32* %115, i32 1, !dbg !10816
  store i32* %incdec.ptr103, i32** %words, align 8, !dbg !10816, !tbaa !2355
  %116 = load i32, i32* %C, align 4, !dbg !10816, !tbaa !2342
  %shl104 = shl i32 %116, 17, !dbg !10816
  %117 = load i32, i32* %C, align 4, !dbg !10816, !tbaa !2342
  %shr105 = lshr i32 %117, 15, !dbg !10816
  %or106 = or i32 %shl104, %shr105, !dbg !10816
  store i32 %or106, i32* %C, align 4, !dbg !10816, !tbaa !2342
  %118 = load i32, i32* %D, align 4, !dbg !10816, !tbaa !2342
  %119 = load i32, i32* %C, align 4, !dbg !10816, !tbaa !2342
  %add107 = add i32 %119, %118, !dbg !10816
  store i32 %add107, i32* %C, align 4, !dbg !10816, !tbaa !2342
  br label %do.end108, !dbg !10816

do.end108:                                        ; preds = %do.body95
  br label %do.body109, !dbg !10818

do.body109:                                       ; preds = %do.end108
  %120 = load i32, i32* %A, align 4, !dbg !10819, !tbaa !2342
  %121 = load i32, i32* %C, align 4, !dbg !10819, !tbaa !2342
  %122 = load i32, i32* %D, align 4, !dbg !10819, !tbaa !2342
  %123 = load i32, i32* %A, align 4, !dbg !10819, !tbaa !2342
  %xor110 = xor i32 %122, %123, !dbg !10819
  %and111 = and i32 %121, %xor110, !dbg !10819
  %xor112 = xor i32 %120, %and111, !dbg !10819
  %124 = load i32*, i32** %words, align 8, !dbg !10819, !tbaa !2355
  %125 = load i32, i32* %124, align 4, !dbg !10819, !tbaa !2342, !ctir !986
  %126 = load i32*, i32** %cwp, align 8, !dbg !10819, !tbaa !2355
  %incdec.ptr113 = getelementptr inbounds i32, i32* %126, i32 1, !dbg !10819
  store i32* %incdec.ptr113, i32** %cwp, align 8, !dbg !10819, !tbaa !2355
  store i32 %125, i32* %126, align 4, !dbg !10819, !tbaa !2342, !ctir !488
  %add114 = add i32 %xor112, %125, !dbg !10819
  %add115 = add i32 %add114, -45705983, !dbg !10819
  %127 = load i32, i32* %B, align 4, !dbg !10819, !tbaa !2342
  %add116 = add i32 %127, %add115, !dbg !10819
  store i32 %add116, i32* %B, align 4, !dbg !10819, !tbaa !2342
  %128 = load i32*, i32** %words, align 8, !dbg !10819, !tbaa !2355
  %incdec.ptr117 = getelementptr inbounds i32, i32* %128, i32 1, !dbg !10819
  store i32* %incdec.ptr117, i32** %words, align 8, !dbg !10819, !tbaa !2355
  %129 = load i32, i32* %B, align 4, !dbg !10819, !tbaa !2342
  %shl118 = shl i32 %129, 22, !dbg !10819
  %130 = load i32, i32* %B, align 4, !dbg !10819, !tbaa !2342
  %shr119 = lshr i32 %130, 10, !dbg !10819
  %or120 = or i32 %shl118, %shr119, !dbg !10819
  store i32 %or120, i32* %B, align 4, !dbg !10819, !tbaa !2342
  %131 = load i32, i32* %C, align 4, !dbg !10819, !tbaa !2342
  %132 = load i32, i32* %B, align 4, !dbg !10819, !tbaa !2342
  %add121 = add i32 %132, %131, !dbg !10819
  store i32 %add121, i32* %B, align 4, !dbg !10819, !tbaa !2342
  br label %do.end122, !dbg !10819

do.end122:                                        ; preds = %do.body109
  br label %do.body123, !dbg !10821

do.body123:                                       ; preds = %do.end122
  %133 = load i32, i32* %D, align 4, !dbg !10822, !tbaa !2342
  %134 = load i32, i32* %B, align 4, !dbg !10822, !tbaa !2342
  %135 = load i32, i32* %C, align 4, !dbg !10822, !tbaa !2342
  %136 = load i32, i32* %D, align 4, !dbg !10822, !tbaa !2342
  %xor124 = xor i32 %135, %136, !dbg !10822
  %and125 = and i32 %134, %xor124, !dbg !10822
  %xor126 = xor i32 %133, %and125, !dbg !10822
  %137 = load i32*, i32** %words, align 8, !dbg !10822, !tbaa !2355
  %138 = load i32, i32* %137, align 4, !dbg !10822, !tbaa !2342, !ctir !986
  %139 = load i32*, i32** %cwp, align 8, !dbg !10822, !tbaa !2355
  %incdec.ptr127 = getelementptr inbounds i32, i32* %139, i32 1, !dbg !10822
  store i32* %incdec.ptr127, i32** %cwp, align 8, !dbg !10822, !tbaa !2355
  store i32 %138, i32* %139, align 4, !dbg !10822, !tbaa !2342, !ctir !488
  %add128 = add i32 %xor126, %138, !dbg !10822
  %add129 = add i32 %add128, 1770035416, !dbg !10822
  %140 = load i32, i32* %A, align 4, !dbg !10822, !tbaa !2342
  %add130 = add i32 %140, %add129, !dbg !10822
  store i32 %add130, i32* %A, align 4, !dbg !10822, !tbaa !2342
  %141 = load i32*, i32** %words, align 8, !dbg !10822, !tbaa !2355
  %incdec.ptr131 = getelementptr inbounds i32, i32* %141, i32 1, !dbg !10822
  store i32* %incdec.ptr131, i32** %words, align 8, !dbg !10822, !tbaa !2355
  %142 = load i32, i32* %A, align 4, !dbg !10822, !tbaa !2342
  %shl132 = shl i32 %142, 7, !dbg !10822
  %143 = load i32, i32* %A, align 4, !dbg !10822, !tbaa !2342
  %shr133 = lshr i32 %143, 25, !dbg !10822
  %or134 = or i32 %shl132, %shr133, !dbg !10822
  store i32 %or134, i32* %A, align 4, !dbg !10822, !tbaa !2342
  %144 = load i32, i32* %B, align 4, !dbg !10822, !tbaa !2342
  %145 = load i32, i32* %A, align 4, !dbg !10822, !tbaa !2342
  %add135 = add i32 %145, %144, !dbg !10822
  store i32 %add135, i32* %A, align 4, !dbg !10822, !tbaa !2342
  br label %do.end136, !dbg !10822

do.end136:                                        ; preds = %do.body123
  br label %do.body137, !dbg !10824

do.body137:                                       ; preds = %do.end136
  %146 = load i32, i32* %C, align 4, !dbg !10825, !tbaa !2342
  %147 = load i32, i32* %A, align 4, !dbg !10825, !tbaa !2342
  %148 = load i32, i32* %B, align 4, !dbg !10825, !tbaa !2342
  %149 = load i32, i32* %C, align 4, !dbg !10825, !tbaa !2342
  %xor138 = xor i32 %148, %149, !dbg !10825
  %and139 = and i32 %147, %xor138, !dbg !10825
  %xor140 = xor i32 %146, %and139, !dbg !10825
  %150 = load i32*, i32** %words, align 8, !dbg !10825, !tbaa !2355
  %151 = load i32, i32* %150, align 4, !dbg !10825, !tbaa !2342, !ctir !986
  %152 = load i32*, i32** %cwp, align 8, !dbg !10825, !tbaa !2355
  %incdec.ptr141 = getelementptr inbounds i32, i32* %152, i32 1, !dbg !10825
  store i32* %incdec.ptr141, i32** %cwp, align 8, !dbg !10825, !tbaa !2355
  store i32 %151, i32* %152, align 4, !dbg !10825, !tbaa !2342, !ctir !488
  %add142 = add i32 %xor140, %151, !dbg !10825
  %add143 = add i32 %add142, -1958414417, !dbg !10825
  %153 = load i32, i32* %D, align 4, !dbg !10825, !tbaa !2342
  %add144 = add i32 %153, %add143, !dbg !10825
  store i32 %add144, i32* %D, align 4, !dbg !10825, !tbaa !2342
  %154 = load i32*, i32** %words, align 8, !dbg !10825, !tbaa !2355
  %incdec.ptr145 = getelementptr inbounds i32, i32* %154, i32 1, !dbg !10825
  store i32* %incdec.ptr145, i32** %words, align 8, !dbg !10825, !tbaa !2355
  %155 = load i32, i32* %D, align 4, !dbg !10825, !tbaa !2342
  %shl146 = shl i32 %155, 12, !dbg !10825
  %156 = load i32, i32* %D, align 4, !dbg !10825, !tbaa !2342
  %shr147 = lshr i32 %156, 20, !dbg !10825
  %or148 = or i32 %shl146, %shr147, !dbg !10825
  store i32 %or148, i32* %D, align 4, !dbg !10825, !tbaa !2342
  %157 = load i32, i32* %A, align 4, !dbg !10825, !tbaa !2342
  %158 = load i32, i32* %D, align 4, !dbg !10825, !tbaa !2342
  %add149 = add i32 %158, %157, !dbg !10825
  store i32 %add149, i32* %D, align 4, !dbg !10825, !tbaa !2342
  br label %do.end150, !dbg !10825

do.end150:                                        ; preds = %do.body137
  br label %do.body151, !dbg !10827

do.body151:                                       ; preds = %do.end150
  %159 = load i32, i32* %B, align 4, !dbg !10828, !tbaa !2342
  %160 = load i32, i32* %D, align 4, !dbg !10828, !tbaa !2342
  %161 = load i32, i32* %A, align 4, !dbg !10828, !tbaa !2342
  %162 = load i32, i32* %B, align 4, !dbg !10828, !tbaa !2342
  %xor152 = xor i32 %161, %162, !dbg !10828
  %and153 = and i32 %160, %xor152, !dbg !10828
  %xor154 = xor i32 %159, %and153, !dbg !10828
  %163 = load i32*, i32** %words, align 8, !dbg !10828, !tbaa !2355
  %164 = load i32, i32* %163, align 4, !dbg !10828, !tbaa !2342, !ctir !986
  %165 = load i32*, i32** %cwp, align 8, !dbg !10828, !tbaa !2355
  %incdec.ptr155 = getelementptr inbounds i32, i32* %165, i32 1, !dbg !10828
  store i32* %incdec.ptr155, i32** %cwp, align 8, !dbg !10828, !tbaa !2355
  store i32 %164, i32* %165, align 4, !dbg !10828, !tbaa !2342, !ctir !488
  %add156 = add i32 %xor154, %164, !dbg !10828
  %add157 = add i32 %add156, -42063, !dbg !10828
  %166 = load i32, i32* %C, align 4, !dbg !10828, !tbaa !2342
  %add158 = add i32 %166, %add157, !dbg !10828
  store i32 %add158, i32* %C, align 4, !dbg !10828, !tbaa !2342
  %167 = load i32*, i32** %words, align 8, !dbg !10828, !tbaa !2355
  %incdec.ptr159 = getelementptr inbounds i32, i32* %167, i32 1, !dbg !10828
  store i32* %incdec.ptr159, i32** %words, align 8, !dbg !10828, !tbaa !2355
  %168 = load i32, i32* %C, align 4, !dbg !10828, !tbaa !2342
  %shl160 = shl i32 %168, 17, !dbg !10828
  %169 = load i32, i32* %C, align 4, !dbg !10828, !tbaa !2342
  %shr161 = lshr i32 %169, 15, !dbg !10828
  %or162 = or i32 %shl160, %shr161, !dbg !10828
  store i32 %or162, i32* %C, align 4, !dbg !10828, !tbaa !2342
  %170 = load i32, i32* %D, align 4, !dbg !10828, !tbaa !2342
  %171 = load i32, i32* %C, align 4, !dbg !10828, !tbaa !2342
  %add163 = add i32 %171, %170, !dbg !10828
  store i32 %add163, i32* %C, align 4, !dbg !10828, !tbaa !2342
  br label %do.end164, !dbg !10828

do.end164:                                        ; preds = %do.body151
  br label %do.body165, !dbg !10830

do.body165:                                       ; preds = %do.end164
  %172 = load i32, i32* %A, align 4, !dbg !10831, !tbaa !2342
  %173 = load i32, i32* %C, align 4, !dbg !10831, !tbaa !2342
  %174 = load i32, i32* %D, align 4, !dbg !10831, !tbaa !2342
  %175 = load i32, i32* %A, align 4, !dbg !10831, !tbaa !2342
  %xor166 = xor i32 %174, %175, !dbg !10831
  %and167 = and i32 %173, %xor166, !dbg !10831
  %xor168 = xor i32 %172, %and167, !dbg !10831
  %176 = load i32*, i32** %words, align 8, !dbg !10831, !tbaa !2355
  %177 = load i32, i32* %176, align 4, !dbg !10831, !tbaa !2342, !ctir !986
  %178 = load i32*, i32** %cwp, align 8, !dbg !10831, !tbaa !2355
  %incdec.ptr169 = getelementptr inbounds i32, i32* %178, i32 1, !dbg !10831
  store i32* %incdec.ptr169, i32** %cwp, align 8, !dbg !10831, !tbaa !2355
  store i32 %177, i32* %178, align 4, !dbg !10831, !tbaa !2342, !ctir !488
  %add170 = add i32 %xor168, %177, !dbg !10831
  %add171 = add i32 %add170, -1990404162, !dbg !10831
  %179 = load i32, i32* %B, align 4, !dbg !10831, !tbaa !2342
  %add172 = add i32 %179, %add171, !dbg !10831
  store i32 %add172, i32* %B, align 4, !dbg !10831, !tbaa !2342
  %180 = load i32*, i32** %words, align 8, !dbg !10831, !tbaa !2355
  %incdec.ptr173 = getelementptr inbounds i32, i32* %180, i32 1, !dbg !10831
  store i32* %incdec.ptr173, i32** %words, align 8, !dbg !10831, !tbaa !2355
  %181 = load i32, i32* %B, align 4, !dbg !10831, !tbaa !2342
  %shl174 = shl i32 %181, 22, !dbg !10831
  %182 = load i32, i32* %B, align 4, !dbg !10831, !tbaa !2342
  %shr175 = lshr i32 %182, 10, !dbg !10831
  %or176 = or i32 %shl174, %shr175, !dbg !10831
  store i32 %or176, i32* %B, align 4, !dbg !10831, !tbaa !2342
  %183 = load i32, i32* %C, align 4, !dbg !10831, !tbaa !2342
  %184 = load i32, i32* %B, align 4, !dbg !10831, !tbaa !2342
  %add177 = add i32 %184, %183, !dbg !10831
  store i32 %add177, i32* %B, align 4, !dbg !10831, !tbaa !2342
  br label %do.end178, !dbg !10831

do.end178:                                        ; preds = %do.body165
  br label %do.body179, !dbg !10833

do.body179:                                       ; preds = %do.end178
  %185 = load i32, i32* %D, align 4, !dbg !10834, !tbaa !2342
  %186 = load i32, i32* %B, align 4, !dbg !10834, !tbaa !2342
  %187 = load i32, i32* %C, align 4, !dbg !10834, !tbaa !2342
  %188 = load i32, i32* %D, align 4, !dbg !10834, !tbaa !2342
  %xor180 = xor i32 %187, %188, !dbg !10834
  %and181 = and i32 %186, %xor180, !dbg !10834
  %xor182 = xor i32 %185, %and181, !dbg !10834
  %189 = load i32*, i32** %words, align 8, !dbg !10834, !tbaa !2355
  %190 = load i32, i32* %189, align 4, !dbg !10834, !tbaa !2342, !ctir !986
  %191 = load i32*, i32** %cwp, align 8, !dbg !10834, !tbaa !2355
  %incdec.ptr183 = getelementptr inbounds i32, i32* %191, i32 1, !dbg !10834
  store i32* %incdec.ptr183, i32** %cwp, align 8, !dbg !10834, !tbaa !2355
  store i32 %190, i32* %191, align 4, !dbg !10834, !tbaa !2342, !ctir !488
  %add184 = add i32 %xor182, %190, !dbg !10834
  %add185 = add i32 %add184, 1804603682, !dbg !10834
  %192 = load i32, i32* %A, align 4, !dbg !10834, !tbaa !2342
  %add186 = add i32 %192, %add185, !dbg !10834
  store i32 %add186, i32* %A, align 4, !dbg !10834, !tbaa !2342
  %193 = load i32*, i32** %words, align 8, !dbg !10834, !tbaa !2355
  %incdec.ptr187 = getelementptr inbounds i32, i32* %193, i32 1, !dbg !10834
  store i32* %incdec.ptr187, i32** %words, align 8, !dbg !10834, !tbaa !2355
  %194 = load i32, i32* %A, align 4, !dbg !10834, !tbaa !2342
  %shl188 = shl i32 %194, 7, !dbg !10834
  %195 = load i32, i32* %A, align 4, !dbg !10834, !tbaa !2342
  %shr189 = lshr i32 %195, 25, !dbg !10834
  %or190 = or i32 %shl188, %shr189, !dbg !10834
  store i32 %or190, i32* %A, align 4, !dbg !10834, !tbaa !2342
  %196 = load i32, i32* %B, align 4, !dbg !10834, !tbaa !2342
  %197 = load i32, i32* %A, align 4, !dbg !10834, !tbaa !2342
  %add191 = add i32 %197, %196, !dbg !10834
  store i32 %add191, i32* %A, align 4, !dbg !10834, !tbaa !2342
  br label %do.end192, !dbg !10834

do.end192:                                        ; preds = %do.body179
  br label %do.body193, !dbg !10836

do.body193:                                       ; preds = %do.end192
  %198 = load i32, i32* %C, align 4, !dbg !10837, !tbaa !2342
  %199 = load i32, i32* %A, align 4, !dbg !10837, !tbaa !2342
  %200 = load i32, i32* %B, align 4, !dbg !10837, !tbaa !2342
  %201 = load i32, i32* %C, align 4, !dbg !10837, !tbaa !2342
  %xor194 = xor i32 %200, %201, !dbg !10837
  %and195 = and i32 %199, %xor194, !dbg !10837
  %xor196 = xor i32 %198, %and195, !dbg !10837
  %202 = load i32*, i32** %words, align 8, !dbg !10837, !tbaa !2355
  %203 = load i32, i32* %202, align 4, !dbg !10837, !tbaa !2342, !ctir !986
  %204 = load i32*, i32** %cwp, align 8, !dbg !10837, !tbaa !2355
  %incdec.ptr197 = getelementptr inbounds i32, i32* %204, i32 1, !dbg !10837
  store i32* %incdec.ptr197, i32** %cwp, align 8, !dbg !10837, !tbaa !2355
  store i32 %203, i32* %204, align 4, !dbg !10837, !tbaa !2342, !ctir !488
  %add198 = add i32 %xor196, %203, !dbg !10837
  %add199 = add i32 %add198, -40341101, !dbg !10837
  %205 = load i32, i32* %D, align 4, !dbg !10837, !tbaa !2342
  %add200 = add i32 %205, %add199, !dbg !10837
  store i32 %add200, i32* %D, align 4, !dbg !10837, !tbaa !2342
  %206 = load i32*, i32** %words, align 8, !dbg !10837, !tbaa !2355
  %incdec.ptr201 = getelementptr inbounds i32, i32* %206, i32 1, !dbg !10837
  store i32* %incdec.ptr201, i32** %words, align 8, !dbg !10837, !tbaa !2355
  %207 = load i32, i32* %D, align 4, !dbg !10837, !tbaa !2342
  %shl202 = shl i32 %207, 12, !dbg !10837
  %208 = load i32, i32* %D, align 4, !dbg !10837, !tbaa !2342
  %shr203 = lshr i32 %208, 20, !dbg !10837
  %or204 = or i32 %shl202, %shr203, !dbg !10837
  store i32 %or204, i32* %D, align 4, !dbg !10837, !tbaa !2342
  %209 = load i32, i32* %A, align 4, !dbg !10837, !tbaa !2342
  %210 = load i32, i32* %D, align 4, !dbg !10837, !tbaa !2342
  %add205 = add i32 %210, %209, !dbg !10837
  store i32 %add205, i32* %D, align 4, !dbg !10837, !tbaa !2342
  br label %do.end206, !dbg !10837

do.end206:                                        ; preds = %do.body193
  br label %do.body207, !dbg !10839

do.body207:                                       ; preds = %do.end206
  %211 = load i32, i32* %B, align 4, !dbg !10840, !tbaa !2342
  %212 = load i32, i32* %D, align 4, !dbg !10840, !tbaa !2342
  %213 = load i32, i32* %A, align 4, !dbg !10840, !tbaa !2342
  %214 = load i32, i32* %B, align 4, !dbg !10840, !tbaa !2342
  %xor208 = xor i32 %213, %214, !dbg !10840
  %and209 = and i32 %212, %xor208, !dbg !10840
  %xor210 = xor i32 %211, %and209, !dbg !10840
  %215 = load i32*, i32** %words, align 8, !dbg !10840, !tbaa !2355
  %216 = load i32, i32* %215, align 4, !dbg !10840, !tbaa !2342, !ctir !986
  %217 = load i32*, i32** %cwp, align 8, !dbg !10840, !tbaa !2355
  %incdec.ptr211 = getelementptr inbounds i32, i32* %217, i32 1, !dbg !10840
  store i32* %incdec.ptr211, i32** %cwp, align 8, !dbg !10840, !tbaa !2355
  store i32 %216, i32* %217, align 4, !dbg !10840, !tbaa !2342, !ctir !488
  %add212 = add i32 %xor210, %216, !dbg !10840
  %add213 = add i32 %add212, -1502002290, !dbg !10840
  %218 = load i32, i32* %C, align 4, !dbg !10840, !tbaa !2342
  %add214 = add i32 %218, %add213, !dbg !10840
  store i32 %add214, i32* %C, align 4, !dbg !10840, !tbaa !2342
  %219 = load i32*, i32** %words, align 8, !dbg !10840, !tbaa !2355
  %incdec.ptr215 = getelementptr inbounds i32, i32* %219, i32 1, !dbg !10840
  store i32* %incdec.ptr215, i32** %words, align 8, !dbg !10840, !tbaa !2355
  %220 = load i32, i32* %C, align 4, !dbg !10840, !tbaa !2342
  %shl216 = shl i32 %220, 17, !dbg !10840
  %221 = load i32, i32* %C, align 4, !dbg !10840, !tbaa !2342
  %shr217 = lshr i32 %221, 15, !dbg !10840
  %or218 = or i32 %shl216, %shr217, !dbg !10840
  store i32 %or218, i32* %C, align 4, !dbg !10840, !tbaa !2342
  %222 = load i32, i32* %D, align 4, !dbg !10840, !tbaa !2342
  %223 = load i32, i32* %C, align 4, !dbg !10840, !tbaa !2342
  %add219 = add i32 %223, %222, !dbg !10840
  store i32 %add219, i32* %C, align 4, !dbg !10840, !tbaa !2342
  br label %do.end220, !dbg !10840

do.end220:                                        ; preds = %do.body207
  br label %do.body221, !dbg !10842

do.body221:                                       ; preds = %do.end220
  %224 = load i32, i32* %A, align 4, !dbg !10843, !tbaa !2342
  %225 = load i32, i32* %C, align 4, !dbg !10843, !tbaa !2342
  %226 = load i32, i32* %D, align 4, !dbg !10843, !tbaa !2342
  %227 = load i32, i32* %A, align 4, !dbg !10843, !tbaa !2342
  %xor222 = xor i32 %226, %227, !dbg !10843
  %and223 = and i32 %225, %xor222, !dbg !10843
  %xor224 = xor i32 %224, %and223, !dbg !10843
  %228 = load i32*, i32** %words, align 8, !dbg !10843, !tbaa !2355
  %229 = load i32, i32* %228, align 4, !dbg !10843, !tbaa !2342, !ctir !986
  %230 = load i32*, i32** %cwp, align 8, !dbg !10843, !tbaa !2355
  %incdec.ptr225 = getelementptr inbounds i32, i32* %230, i32 1, !dbg !10843
  store i32* %incdec.ptr225, i32** %cwp, align 8, !dbg !10843, !tbaa !2355
  store i32 %229, i32* %230, align 4, !dbg !10843, !tbaa !2342, !ctir !488
  %add226 = add i32 %xor224, %229, !dbg !10843
  %add227 = add i32 %add226, 1236535329, !dbg !10843
  %231 = load i32, i32* %B, align 4, !dbg !10843, !tbaa !2342
  %add228 = add i32 %231, %add227, !dbg !10843
  store i32 %add228, i32* %B, align 4, !dbg !10843, !tbaa !2342
  %232 = load i32*, i32** %words, align 8, !dbg !10843, !tbaa !2355
  %incdec.ptr229 = getelementptr inbounds i32, i32* %232, i32 1, !dbg !10843
  store i32* %incdec.ptr229, i32** %words, align 8, !dbg !10843, !tbaa !2355
  %233 = load i32, i32* %B, align 4, !dbg !10843, !tbaa !2342
  %shl230 = shl i32 %233, 22, !dbg !10843
  %234 = load i32, i32* %B, align 4, !dbg !10843, !tbaa !2342
  %shr231 = lshr i32 %234, 10, !dbg !10843
  %or232 = or i32 %shl230, %shr231, !dbg !10843
  store i32 %or232, i32* %B, align 4, !dbg !10843, !tbaa !2342
  %235 = load i32, i32* %C, align 4, !dbg !10843, !tbaa !2342
  %236 = load i32, i32* %B, align 4, !dbg !10843, !tbaa !2342
  %add233 = add i32 %236, %235, !dbg !10843
  store i32 %add233, i32* %B, align 4, !dbg !10843, !tbaa !2342
  br label %do.end234, !dbg !10843

do.end234:                                        ; preds = %do.body221
  br label %do.body235, !dbg !10845

do.body235:                                       ; preds = %do.end234
  %237 = load i32, i32* %C, align 4, !dbg !10846, !tbaa !2342
  %238 = load i32, i32* %D, align 4, !dbg !10846, !tbaa !2342
  %239 = load i32, i32* %B, align 4, !dbg !10846, !tbaa !2342
  %240 = load i32, i32* %C, align 4, !dbg !10846, !tbaa !2342
  %xor236 = xor i32 %239, %240, !dbg !10846
  %and237 = and i32 %238, %xor236, !dbg !10846
  %xor238 = xor i32 %237, %and237, !dbg !10846
  %arrayidx239 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 1, !dbg !10846, !ctir !984
  %241 = load i32, i32* %arrayidx239, align 4, !dbg !10846, !tbaa !2342
  %add240 = add i32 %xor238, %241, !dbg !10846
  %add241 = add i32 %add240, -165796510, !dbg !10846
  %242 = load i32, i32* %A, align 4, !dbg !10846, !tbaa !2342
  %add242 = add i32 %242, %add241, !dbg !10846
  store i32 %add242, i32* %A, align 4, !dbg !10846, !tbaa !2342
  %243 = load i32, i32* %A, align 4, !dbg !10846, !tbaa !2342
  %shl243 = shl i32 %243, 5, !dbg !10846
  %244 = load i32, i32* %A, align 4, !dbg !10846, !tbaa !2342
  %shr244 = lshr i32 %244, 27, !dbg !10846
  %or245 = or i32 %shl243, %shr244, !dbg !10846
  store i32 %or245, i32* %A, align 4, !dbg !10846, !tbaa !2342
  %245 = load i32, i32* %B, align 4, !dbg !10846, !tbaa !2342
  %246 = load i32, i32* %A, align 4, !dbg !10846, !tbaa !2342
  %add246 = add i32 %246, %245, !dbg !10846
  store i32 %add246, i32* %A, align 4, !dbg !10846, !tbaa !2342
  br label %do.end247, !dbg !10846

do.end247:                                        ; preds = %do.body235
  br label %do.body248, !dbg !10848

do.body248:                                       ; preds = %do.end247
  %247 = load i32, i32* %B, align 4, !dbg !10849, !tbaa !2342
  %248 = load i32, i32* %C, align 4, !dbg !10849, !tbaa !2342
  %249 = load i32, i32* %A, align 4, !dbg !10849, !tbaa !2342
  %250 = load i32, i32* %B, align 4, !dbg !10849, !tbaa !2342
  %xor249 = xor i32 %249, %250, !dbg !10849
  %and250 = and i32 %248, %xor249, !dbg !10849
  %xor251 = xor i32 %247, %and250, !dbg !10849
  %arrayidx252 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 6, !dbg !10849, !ctir !984
  %251 = load i32, i32* %arrayidx252, align 8, !dbg !10849, !tbaa !2342
  %add253 = add i32 %xor251, %251, !dbg !10849
  %add254 = add i32 %add253, -1069501632, !dbg !10849
  %252 = load i32, i32* %D, align 4, !dbg !10849, !tbaa !2342
  %add255 = add i32 %252, %add254, !dbg !10849
  store i32 %add255, i32* %D, align 4, !dbg !10849, !tbaa !2342
  %253 = load i32, i32* %D, align 4, !dbg !10849, !tbaa !2342
  %shl256 = shl i32 %253, 9, !dbg !10849
  %254 = load i32, i32* %D, align 4, !dbg !10849, !tbaa !2342
  %shr257 = lshr i32 %254, 23, !dbg !10849
  %or258 = or i32 %shl256, %shr257, !dbg !10849
  store i32 %or258, i32* %D, align 4, !dbg !10849, !tbaa !2342
  %255 = load i32, i32* %A, align 4, !dbg !10849, !tbaa !2342
  %256 = load i32, i32* %D, align 4, !dbg !10849, !tbaa !2342
  %add259 = add i32 %256, %255, !dbg !10849
  store i32 %add259, i32* %D, align 4, !dbg !10849, !tbaa !2342
  br label %do.end260, !dbg !10849

do.end260:                                        ; preds = %do.body248
  br label %do.body261, !dbg !10851

do.body261:                                       ; preds = %do.end260
  %257 = load i32, i32* %A, align 4, !dbg !10852, !tbaa !2342
  %258 = load i32, i32* %B, align 4, !dbg !10852, !tbaa !2342
  %259 = load i32, i32* %D, align 4, !dbg !10852, !tbaa !2342
  %260 = load i32, i32* %A, align 4, !dbg !10852, !tbaa !2342
  %xor262 = xor i32 %259, %260, !dbg !10852
  %and263 = and i32 %258, %xor262, !dbg !10852
  %xor264 = xor i32 %257, %and263, !dbg !10852
  %arrayidx265 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 11, !dbg !10852, !ctir !984
  %261 = load i32, i32* %arrayidx265, align 4, !dbg !10852, !tbaa !2342
  %add266 = add i32 %xor264, %261, !dbg !10852
  %add267 = add i32 %add266, 643717713, !dbg !10852
  %262 = load i32, i32* %C, align 4, !dbg !10852, !tbaa !2342
  %add268 = add i32 %262, %add267, !dbg !10852
  store i32 %add268, i32* %C, align 4, !dbg !10852, !tbaa !2342
  %263 = load i32, i32* %C, align 4, !dbg !10852, !tbaa !2342
  %shl269 = shl i32 %263, 14, !dbg !10852
  %264 = load i32, i32* %C, align 4, !dbg !10852, !tbaa !2342
  %shr270 = lshr i32 %264, 18, !dbg !10852
  %or271 = or i32 %shl269, %shr270, !dbg !10852
  store i32 %or271, i32* %C, align 4, !dbg !10852, !tbaa !2342
  %265 = load i32, i32* %D, align 4, !dbg !10852, !tbaa !2342
  %266 = load i32, i32* %C, align 4, !dbg !10852, !tbaa !2342
  %add272 = add i32 %266, %265, !dbg !10852
  store i32 %add272, i32* %C, align 4, !dbg !10852, !tbaa !2342
  br label %do.end273, !dbg !10852

do.end273:                                        ; preds = %do.body261
  br label %do.body274, !dbg !10854

do.body274:                                       ; preds = %do.end273
  %267 = load i32, i32* %D, align 4, !dbg !10855, !tbaa !2342
  %268 = load i32, i32* %A, align 4, !dbg !10855, !tbaa !2342
  %269 = load i32, i32* %C, align 4, !dbg !10855, !tbaa !2342
  %270 = load i32, i32* %D, align 4, !dbg !10855, !tbaa !2342
  %xor275 = xor i32 %269, %270, !dbg !10855
  %and276 = and i32 %268, %xor275, !dbg !10855
  %xor277 = xor i32 %267, %and276, !dbg !10855
  %arrayidx278 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10855, !ctir !984
  %271 = load i32, i32* %arrayidx278, align 16, !dbg !10855, !tbaa !2342
  %add279 = add i32 %xor277, %271, !dbg !10855
  %add280 = add i32 %add279, -373897302, !dbg !10855
  %272 = load i32, i32* %B, align 4, !dbg !10855, !tbaa !2342
  %add281 = add i32 %272, %add280, !dbg !10855
  store i32 %add281, i32* %B, align 4, !dbg !10855, !tbaa !2342
  %273 = load i32, i32* %B, align 4, !dbg !10855, !tbaa !2342
  %shl282 = shl i32 %273, 20, !dbg !10855
  %274 = load i32, i32* %B, align 4, !dbg !10855, !tbaa !2342
  %shr283 = lshr i32 %274, 12, !dbg !10855
  %or284 = or i32 %shl282, %shr283, !dbg !10855
  store i32 %or284, i32* %B, align 4, !dbg !10855, !tbaa !2342
  %275 = load i32, i32* %C, align 4, !dbg !10855, !tbaa !2342
  %276 = load i32, i32* %B, align 4, !dbg !10855, !tbaa !2342
  %add285 = add i32 %276, %275, !dbg !10855
  store i32 %add285, i32* %B, align 4, !dbg !10855, !tbaa !2342
  br label %do.end286, !dbg !10855

do.end286:                                        ; preds = %do.body274
  br label %do.body287, !dbg !10857

do.body287:                                       ; preds = %do.end286
  %277 = load i32, i32* %C, align 4, !dbg !10858, !tbaa !2342
  %278 = load i32, i32* %D, align 4, !dbg !10858, !tbaa !2342
  %279 = load i32, i32* %B, align 4, !dbg !10858, !tbaa !2342
  %280 = load i32, i32* %C, align 4, !dbg !10858, !tbaa !2342
  %xor288 = xor i32 %279, %280, !dbg !10858
  %and289 = and i32 %278, %xor288, !dbg !10858
  %xor290 = xor i32 %277, %and289, !dbg !10858
  %arrayidx291 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 5, !dbg !10858, !ctir !984
  %281 = load i32, i32* %arrayidx291, align 4, !dbg !10858, !tbaa !2342
  %add292 = add i32 %xor290, %281, !dbg !10858
  %add293 = add i32 %add292, -701558691, !dbg !10858
  %282 = load i32, i32* %A, align 4, !dbg !10858, !tbaa !2342
  %add294 = add i32 %282, %add293, !dbg !10858
  store i32 %add294, i32* %A, align 4, !dbg !10858, !tbaa !2342
  %283 = load i32, i32* %A, align 4, !dbg !10858, !tbaa !2342
  %shl295 = shl i32 %283, 5, !dbg !10858
  %284 = load i32, i32* %A, align 4, !dbg !10858, !tbaa !2342
  %shr296 = lshr i32 %284, 27, !dbg !10858
  %or297 = or i32 %shl295, %shr296, !dbg !10858
  store i32 %or297, i32* %A, align 4, !dbg !10858, !tbaa !2342
  %285 = load i32, i32* %B, align 4, !dbg !10858, !tbaa !2342
  %286 = load i32, i32* %A, align 4, !dbg !10858, !tbaa !2342
  %add298 = add i32 %286, %285, !dbg !10858
  store i32 %add298, i32* %A, align 4, !dbg !10858, !tbaa !2342
  br label %do.end299, !dbg !10858

do.end299:                                        ; preds = %do.body287
  br label %do.body300, !dbg !10860

do.body300:                                       ; preds = %do.end299
  %287 = load i32, i32* %B, align 4, !dbg !10861, !tbaa !2342
  %288 = load i32, i32* %C, align 4, !dbg !10861, !tbaa !2342
  %289 = load i32, i32* %A, align 4, !dbg !10861, !tbaa !2342
  %290 = load i32, i32* %B, align 4, !dbg !10861, !tbaa !2342
  %xor301 = xor i32 %289, %290, !dbg !10861
  %and302 = and i32 %288, %xor301, !dbg !10861
  %xor303 = xor i32 %287, %and302, !dbg !10861
  %arrayidx304 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 10, !dbg !10861, !ctir !984
  %291 = load i32, i32* %arrayidx304, align 8, !dbg !10861, !tbaa !2342
  %add305 = add i32 %xor303, %291, !dbg !10861
  %add306 = add i32 %add305, 38016083, !dbg !10861
  %292 = load i32, i32* %D, align 4, !dbg !10861, !tbaa !2342
  %add307 = add i32 %292, %add306, !dbg !10861
  store i32 %add307, i32* %D, align 4, !dbg !10861, !tbaa !2342
  %293 = load i32, i32* %D, align 4, !dbg !10861, !tbaa !2342
  %shl308 = shl i32 %293, 9, !dbg !10861
  %294 = load i32, i32* %D, align 4, !dbg !10861, !tbaa !2342
  %shr309 = lshr i32 %294, 23, !dbg !10861
  %or310 = or i32 %shl308, %shr309, !dbg !10861
  store i32 %or310, i32* %D, align 4, !dbg !10861, !tbaa !2342
  %295 = load i32, i32* %A, align 4, !dbg !10861, !tbaa !2342
  %296 = load i32, i32* %D, align 4, !dbg !10861, !tbaa !2342
  %add311 = add i32 %296, %295, !dbg !10861
  store i32 %add311, i32* %D, align 4, !dbg !10861, !tbaa !2342
  br label %do.end312, !dbg !10861

do.end312:                                        ; preds = %do.body300
  br label %do.body313, !dbg !10863

do.body313:                                       ; preds = %do.end312
  %297 = load i32, i32* %A, align 4, !dbg !10864, !tbaa !2342
  %298 = load i32, i32* %B, align 4, !dbg !10864, !tbaa !2342
  %299 = load i32, i32* %D, align 4, !dbg !10864, !tbaa !2342
  %300 = load i32, i32* %A, align 4, !dbg !10864, !tbaa !2342
  %xor314 = xor i32 %299, %300, !dbg !10864
  %and315 = and i32 %298, %xor314, !dbg !10864
  %xor316 = xor i32 %297, %and315, !dbg !10864
  %arrayidx317 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 15, !dbg !10864, !ctir !984
  %301 = load i32, i32* %arrayidx317, align 4, !dbg !10864, !tbaa !2342
  %add318 = add i32 %xor316, %301, !dbg !10864
  %add319 = add i32 %add318, -660478335, !dbg !10864
  %302 = load i32, i32* %C, align 4, !dbg !10864, !tbaa !2342
  %add320 = add i32 %302, %add319, !dbg !10864
  store i32 %add320, i32* %C, align 4, !dbg !10864, !tbaa !2342
  %303 = load i32, i32* %C, align 4, !dbg !10864, !tbaa !2342
  %shl321 = shl i32 %303, 14, !dbg !10864
  %304 = load i32, i32* %C, align 4, !dbg !10864, !tbaa !2342
  %shr322 = lshr i32 %304, 18, !dbg !10864
  %or323 = or i32 %shl321, %shr322, !dbg !10864
  store i32 %or323, i32* %C, align 4, !dbg !10864, !tbaa !2342
  %305 = load i32, i32* %D, align 4, !dbg !10864, !tbaa !2342
  %306 = load i32, i32* %C, align 4, !dbg !10864, !tbaa !2342
  %add324 = add i32 %306, %305, !dbg !10864
  store i32 %add324, i32* %C, align 4, !dbg !10864, !tbaa !2342
  br label %do.end325, !dbg !10864

do.end325:                                        ; preds = %do.body313
  br label %do.body326, !dbg !10866

do.body326:                                       ; preds = %do.end325
  %307 = load i32, i32* %D, align 4, !dbg !10867, !tbaa !2342
  %308 = load i32, i32* %A, align 4, !dbg !10867, !tbaa !2342
  %309 = load i32, i32* %C, align 4, !dbg !10867, !tbaa !2342
  %310 = load i32, i32* %D, align 4, !dbg !10867, !tbaa !2342
  %xor327 = xor i32 %309, %310, !dbg !10867
  %and328 = and i32 %308, %xor327, !dbg !10867
  %xor329 = xor i32 %307, %and328, !dbg !10867
  %arrayidx330 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 4, !dbg !10867, !ctir !984
  %311 = load i32, i32* %arrayidx330, align 16, !dbg !10867, !tbaa !2342
  %add331 = add i32 %xor329, %311, !dbg !10867
  %add332 = add i32 %add331, -405537848, !dbg !10867
  %312 = load i32, i32* %B, align 4, !dbg !10867, !tbaa !2342
  %add333 = add i32 %312, %add332, !dbg !10867
  store i32 %add333, i32* %B, align 4, !dbg !10867, !tbaa !2342
  %313 = load i32, i32* %B, align 4, !dbg !10867, !tbaa !2342
  %shl334 = shl i32 %313, 20, !dbg !10867
  %314 = load i32, i32* %B, align 4, !dbg !10867, !tbaa !2342
  %shr335 = lshr i32 %314, 12, !dbg !10867
  %or336 = or i32 %shl334, %shr335, !dbg !10867
  store i32 %or336, i32* %B, align 4, !dbg !10867, !tbaa !2342
  %315 = load i32, i32* %C, align 4, !dbg !10867, !tbaa !2342
  %316 = load i32, i32* %B, align 4, !dbg !10867, !tbaa !2342
  %add337 = add i32 %316, %315, !dbg !10867
  store i32 %add337, i32* %B, align 4, !dbg !10867, !tbaa !2342
  br label %do.end338, !dbg !10867

do.end338:                                        ; preds = %do.body326
  br label %do.body339, !dbg !10869

do.body339:                                       ; preds = %do.end338
  %317 = load i32, i32* %C, align 4, !dbg !10870, !tbaa !2342
  %318 = load i32, i32* %D, align 4, !dbg !10870, !tbaa !2342
  %319 = load i32, i32* %B, align 4, !dbg !10870, !tbaa !2342
  %320 = load i32, i32* %C, align 4, !dbg !10870, !tbaa !2342
  %xor340 = xor i32 %319, %320, !dbg !10870
  %and341 = and i32 %318, %xor340, !dbg !10870
  %xor342 = xor i32 %317, %and341, !dbg !10870
  %arrayidx343 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 9, !dbg !10870, !ctir !984
  %321 = load i32, i32* %arrayidx343, align 4, !dbg !10870, !tbaa !2342
  %add344 = add i32 %xor342, %321, !dbg !10870
  %add345 = add i32 %add344, 568446438, !dbg !10870
  %322 = load i32, i32* %A, align 4, !dbg !10870, !tbaa !2342
  %add346 = add i32 %322, %add345, !dbg !10870
  store i32 %add346, i32* %A, align 4, !dbg !10870, !tbaa !2342
  %323 = load i32, i32* %A, align 4, !dbg !10870, !tbaa !2342
  %shl347 = shl i32 %323, 5, !dbg !10870
  %324 = load i32, i32* %A, align 4, !dbg !10870, !tbaa !2342
  %shr348 = lshr i32 %324, 27, !dbg !10870
  %or349 = or i32 %shl347, %shr348, !dbg !10870
  store i32 %or349, i32* %A, align 4, !dbg !10870, !tbaa !2342
  %325 = load i32, i32* %B, align 4, !dbg !10870, !tbaa !2342
  %326 = load i32, i32* %A, align 4, !dbg !10870, !tbaa !2342
  %add350 = add i32 %326, %325, !dbg !10870
  store i32 %add350, i32* %A, align 4, !dbg !10870, !tbaa !2342
  br label %do.end351, !dbg !10870

do.end351:                                        ; preds = %do.body339
  br label %do.body352, !dbg !10872

do.body352:                                       ; preds = %do.end351
  %327 = load i32, i32* %B, align 4, !dbg !10873, !tbaa !2342
  %328 = load i32, i32* %C, align 4, !dbg !10873, !tbaa !2342
  %329 = load i32, i32* %A, align 4, !dbg !10873, !tbaa !2342
  %330 = load i32, i32* %B, align 4, !dbg !10873, !tbaa !2342
  %xor353 = xor i32 %329, %330, !dbg !10873
  %and354 = and i32 %328, %xor353, !dbg !10873
  %xor355 = xor i32 %327, %and354, !dbg !10873
  %arrayidx356 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 14, !dbg !10873, !ctir !984
  %331 = load i32, i32* %arrayidx356, align 8, !dbg !10873, !tbaa !2342
  %add357 = add i32 %xor355, %331, !dbg !10873
  %add358 = add i32 %add357, -1019803690, !dbg !10873
  %332 = load i32, i32* %D, align 4, !dbg !10873, !tbaa !2342
  %add359 = add i32 %332, %add358, !dbg !10873
  store i32 %add359, i32* %D, align 4, !dbg !10873, !tbaa !2342
  %333 = load i32, i32* %D, align 4, !dbg !10873, !tbaa !2342
  %shl360 = shl i32 %333, 9, !dbg !10873
  %334 = load i32, i32* %D, align 4, !dbg !10873, !tbaa !2342
  %shr361 = lshr i32 %334, 23, !dbg !10873
  %or362 = or i32 %shl360, %shr361, !dbg !10873
  store i32 %or362, i32* %D, align 4, !dbg !10873, !tbaa !2342
  %335 = load i32, i32* %A, align 4, !dbg !10873, !tbaa !2342
  %336 = load i32, i32* %D, align 4, !dbg !10873, !tbaa !2342
  %add363 = add i32 %336, %335, !dbg !10873
  store i32 %add363, i32* %D, align 4, !dbg !10873, !tbaa !2342
  br label %do.end364, !dbg !10873

do.end364:                                        ; preds = %do.body352
  br label %do.body365, !dbg !10875

do.body365:                                       ; preds = %do.end364
  %337 = load i32, i32* %A, align 4, !dbg !10876, !tbaa !2342
  %338 = load i32, i32* %B, align 4, !dbg !10876, !tbaa !2342
  %339 = load i32, i32* %D, align 4, !dbg !10876, !tbaa !2342
  %340 = load i32, i32* %A, align 4, !dbg !10876, !tbaa !2342
  %xor366 = xor i32 %339, %340, !dbg !10876
  %and367 = and i32 %338, %xor366, !dbg !10876
  %xor368 = xor i32 %337, %and367, !dbg !10876
  %arrayidx369 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 3, !dbg !10876, !ctir !984
  %341 = load i32, i32* %arrayidx369, align 4, !dbg !10876, !tbaa !2342
  %add370 = add i32 %xor368, %341, !dbg !10876
  %add371 = add i32 %add370, -187363961, !dbg !10876
  %342 = load i32, i32* %C, align 4, !dbg !10876, !tbaa !2342
  %add372 = add i32 %342, %add371, !dbg !10876
  store i32 %add372, i32* %C, align 4, !dbg !10876, !tbaa !2342
  %343 = load i32, i32* %C, align 4, !dbg !10876, !tbaa !2342
  %shl373 = shl i32 %343, 14, !dbg !10876
  %344 = load i32, i32* %C, align 4, !dbg !10876, !tbaa !2342
  %shr374 = lshr i32 %344, 18, !dbg !10876
  %or375 = or i32 %shl373, %shr374, !dbg !10876
  store i32 %or375, i32* %C, align 4, !dbg !10876, !tbaa !2342
  %345 = load i32, i32* %D, align 4, !dbg !10876, !tbaa !2342
  %346 = load i32, i32* %C, align 4, !dbg !10876, !tbaa !2342
  %add376 = add i32 %346, %345, !dbg !10876
  store i32 %add376, i32* %C, align 4, !dbg !10876, !tbaa !2342
  br label %do.end377, !dbg !10876

do.end377:                                        ; preds = %do.body365
  br label %do.body378, !dbg !10878

do.body378:                                       ; preds = %do.end377
  %347 = load i32, i32* %D, align 4, !dbg !10879, !tbaa !2342
  %348 = load i32, i32* %A, align 4, !dbg !10879, !tbaa !2342
  %349 = load i32, i32* %C, align 4, !dbg !10879, !tbaa !2342
  %350 = load i32, i32* %D, align 4, !dbg !10879, !tbaa !2342
  %xor379 = xor i32 %349, %350, !dbg !10879
  %and380 = and i32 %348, %xor379, !dbg !10879
  %xor381 = xor i32 %347, %and380, !dbg !10879
  %arrayidx382 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 8, !dbg !10879, !ctir !984
  %351 = load i32, i32* %arrayidx382, align 16, !dbg !10879, !tbaa !2342
  %add383 = add i32 %xor381, %351, !dbg !10879
  %add384 = add i32 %add383, 1163531501, !dbg !10879
  %352 = load i32, i32* %B, align 4, !dbg !10879, !tbaa !2342
  %add385 = add i32 %352, %add384, !dbg !10879
  store i32 %add385, i32* %B, align 4, !dbg !10879, !tbaa !2342
  %353 = load i32, i32* %B, align 4, !dbg !10879, !tbaa !2342
  %shl386 = shl i32 %353, 20, !dbg !10879
  %354 = load i32, i32* %B, align 4, !dbg !10879, !tbaa !2342
  %shr387 = lshr i32 %354, 12, !dbg !10879
  %or388 = or i32 %shl386, %shr387, !dbg !10879
  store i32 %or388, i32* %B, align 4, !dbg !10879, !tbaa !2342
  %355 = load i32, i32* %C, align 4, !dbg !10879, !tbaa !2342
  %356 = load i32, i32* %B, align 4, !dbg !10879, !tbaa !2342
  %add389 = add i32 %356, %355, !dbg !10879
  store i32 %add389, i32* %B, align 4, !dbg !10879, !tbaa !2342
  br label %do.end390, !dbg !10879

do.end390:                                        ; preds = %do.body378
  br label %do.body391, !dbg !10881

do.body391:                                       ; preds = %do.end390
  %357 = load i32, i32* %C, align 4, !dbg !10882, !tbaa !2342
  %358 = load i32, i32* %D, align 4, !dbg !10882, !tbaa !2342
  %359 = load i32, i32* %B, align 4, !dbg !10882, !tbaa !2342
  %360 = load i32, i32* %C, align 4, !dbg !10882, !tbaa !2342
  %xor392 = xor i32 %359, %360, !dbg !10882
  %and393 = and i32 %358, %xor392, !dbg !10882
  %xor394 = xor i32 %357, %and393, !dbg !10882
  %arrayidx395 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 13, !dbg !10882, !ctir !984
  %361 = load i32, i32* %arrayidx395, align 4, !dbg !10882, !tbaa !2342
  %add396 = add i32 %xor394, %361, !dbg !10882
  %add397 = add i32 %add396, -1444681467, !dbg !10882
  %362 = load i32, i32* %A, align 4, !dbg !10882, !tbaa !2342
  %add398 = add i32 %362, %add397, !dbg !10882
  store i32 %add398, i32* %A, align 4, !dbg !10882, !tbaa !2342
  %363 = load i32, i32* %A, align 4, !dbg !10882, !tbaa !2342
  %shl399 = shl i32 %363, 5, !dbg !10882
  %364 = load i32, i32* %A, align 4, !dbg !10882, !tbaa !2342
  %shr400 = lshr i32 %364, 27, !dbg !10882
  %or401 = or i32 %shl399, %shr400, !dbg !10882
  store i32 %or401, i32* %A, align 4, !dbg !10882, !tbaa !2342
  %365 = load i32, i32* %B, align 4, !dbg !10882, !tbaa !2342
  %366 = load i32, i32* %A, align 4, !dbg !10882, !tbaa !2342
  %add402 = add i32 %366, %365, !dbg !10882
  store i32 %add402, i32* %A, align 4, !dbg !10882, !tbaa !2342
  br label %do.end403, !dbg !10882

do.end403:                                        ; preds = %do.body391
  br label %do.body404, !dbg !10884

do.body404:                                       ; preds = %do.end403
  %367 = load i32, i32* %B, align 4, !dbg !10885, !tbaa !2342
  %368 = load i32, i32* %C, align 4, !dbg !10885, !tbaa !2342
  %369 = load i32, i32* %A, align 4, !dbg !10885, !tbaa !2342
  %370 = load i32, i32* %B, align 4, !dbg !10885, !tbaa !2342
  %xor405 = xor i32 %369, %370, !dbg !10885
  %and406 = and i32 %368, %xor405, !dbg !10885
  %xor407 = xor i32 %367, %and406, !dbg !10885
  %arrayidx408 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 2, !dbg !10885, !ctir !984
  %371 = load i32, i32* %arrayidx408, align 8, !dbg !10885, !tbaa !2342
  %add409 = add i32 %xor407, %371, !dbg !10885
  %add410 = add i32 %add409, -51403784, !dbg !10885
  %372 = load i32, i32* %D, align 4, !dbg !10885, !tbaa !2342
  %add411 = add i32 %372, %add410, !dbg !10885
  store i32 %add411, i32* %D, align 4, !dbg !10885, !tbaa !2342
  %373 = load i32, i32* %D, align 4, !dbg !10885, !tbaa !2342
  %shl412 = shl i32 %373, 9, !dbg !10885
  %374 = load i32, i32* %D, align 4, !dbg !10885, !tbaa !2342
  %shr413 = lshr i32 %374, 23, !dbg !10885
  %or414 = or i32 %shl412, %shr413, !dbg !10885
  store i32 %or414, i32* %D, align 4, !dbg !10885, !tbaa !2342
  %375 = load i32, i32* %A, align 4, !dbg !10885, !tbaa !2342
  %376 = load i32, i32* %D, align 4, !dbg !10885, !tbaa !2342
  %add415 = add i32 %376, %375, !dbg !10885
  store i32 %add415, i32* %D, align 4, !dbg !10885, !tbaa !2342
  br label %do.end416, !dbg !10885

do.end416:                                        ; preds = %do.body404
  br label %do.body417, !dbg !10887

do.body417:                                       ; preds = %do.end416
  %377 = load i32, i32* %A, align 4, !dbg !10888, !tbaa !2342
  %378 = load i32, i32* %B, align 4, !dbg !10888, !tbaa !2342
  %379 = load i32, i32* %D, align 4, !dbg !10888, !tbaa !2342
  %380 = load i32, i32* %A, align 4, !dbg !10888, !tbaa !2342
  %xor418 = xor i32 %379, %380, !dbg !10888
  %and419 = and i32 %378, %xor418, !dbg !10888
  %xor420 = xor i32 %377, %and419, !dbg !10888
  %arrayidx421 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 7, !dbg !10888, !ctir !984
  %381 = load i32, i32* %arrayidx421, align 4, !dbg !10888, !tbaa !2342
  %add422 = add i32 %xor420, %381, !dbg !10888
  %add423 = add i32 %add422, 1735328473, !dbg !10888
  %382 = load i32, i32* %C, align 4, !dbg !10888, !tbaa !2342
  %add424 = add i32 %382, %add423, !dbg !10888
  store i32 %add424, i32* %C, align 4, !dbg !10888, !tbaa !2342
  %383 = load i32, i32* %C, align 4, !dbg !10888, !tbaa !2342
  %shl425 = shl i32 %383, 14, !dbg !10888
  %384 = load i32, i32* %C, align 4, !dbg !10888, !tbaa !2342
  %shr426 = lshr i32 %384, 18, !dbg !10888
  %or427 = or i32 %shl425, %shr426, !dbg !10888
  store i32 %or427, i32* %C, align 4, !dbg !10888, !tbaa !2342
  %385 = load i32, i32* %D, align 4, !dbg !10888, !tbaa !2342
  %386 = load i32, i32* %C, align 4, !dbg !10888, !tbaa !2342
  %add428 = add i32 %386, %385, !dbg !10888
  store i32 %add428, i32* %C, align 4, !dbg !10888, !tbaa !2342
  br label %do.end429, !dbg !10888

do.end429:                                        ; preds = %do.body417
  br label %do.body430, !dbg !10890

do.body430:                                       ; preds = %do.end429
  %387 = load i32, i32* %D, align 4, !dbg !10891, !tbaa !2342
  %388 = load i32, i32* %A, align 4, !dbg !10891, !tbaa !2342
  %389 = load i32, i32* %C, align 4, !dbg !10891, !tbaa !2342
  %390 = load i32, i32* %D, align 4, !dbg !10891, !tbaa !2342
  %xor431 = xor i32 %389, %390, !dbg !10891
  %and432 = and i32 %388, %xor431, !dbg !10891
  %xor433 = xor i32 %387, %and432, !dbg !10891
  %arrayidx434 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 12, !dbg !10891, !ctir !984
  %391 = load i32, i32* %arrayidx434, align 16, !dbg !10891, !tbaa !2342
  %add435 = add i32 %xor433, %391, !dbg !10891
  %add436 = add i32 %add435, -1926607734, !dbg !10891
  %392 = load i32, i32* %B, align 4, !dbg !10891, !tbaa !2342
  %add437 = add i32 %392, %add436, !dbg !10891
  store i32 %add437, i32* %B, align 4, !dbg !10891, !tbaa !2342
  %393 = load i32, i32* %B, align 4, !dbg !10891, !tbaa !2342
  %shl438 = shl i32 %393, 20, !dbg !10891
  %394 = load i32, i32* %B, align 4, !dbg !10891, !tbaa !2342
  %shr439 = lshr i32 %394, 12, !dbg !10891
  %or440 = or i32 %shl438, %shr439, !dbg !10891
  store i32 %or440, i32* %B, align 4, !dbg !10891, !tbaa !2342
  %395 = load i32, i32* %C, align 4, !dbg !10891, !tbaa !2342
  %396 = load i32, i32* %B, align 4, !dbg !10891, !tbaa !2342
  %add441 = add i32 %396, %395, !dbg !10891
  store i32 %add441, i32* %B, align 4, !dbg !10891, !tbaa !2342
  br label %do.end442, !dbg !10891

do.end442:                                        ; preds = %do.body430
  br label %do.body443, !dbg !10893

do.body443:                                       ; preds = %do.end442
  %397 = load i32, i32* %B, align 4, !dbg !10894, !tbaa !2342
  %398 = load i32, i32* %C, align 4, !dbg !10894, !tbaa !2342
  %xor444 = xor i32 %397, %398, !dbg !10894
  %399 = load i32, i32* %D, align 4, !dbg !10894, !tbaa !2342
  %xor445 = xor i32 %xor444, %399, !dbg !10894
  %arrayidx446 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 5, !dbg !10894, !ctir !984
  %400 = load i32, i32* %arrayidx446, align 4, !dbg !10894, !tbaa !2342
  %add447 = add i32 %xor445, %400, !dbg !10894
  %add448 = add i32 %add447, -378558, !dbg !10894
  %401 = load i32, i32* %A, align 4, !dbg !10894, !tbaa !2342
  %add449 = add i32 %401, %add448, !dbg !10894
  store i32 %add449, i32* %A, align 4, !dbg !10894, !tbaa !2342
  %402 = load i32, i32* %A, align 4, !dbg !10894, !tbaa !2342
  %shl450 = shl i32 %402, 4, !dbg !10894
  %403 = load i32, i32* %A, align 4, !dbg !10894, !tbaa !2342
  %shr451 = lshr i32 %403, 28, !dbg !10894
  %or452 = or i32 %shl450, %shr451, !dbg !10894
  store i32 %or452, i32* %A, align 4, !dbg !10894, !tbaa !2342
  %404 = load i32, i32* %B, align 4, !dbg !10894, !tbaa !2342
  %405 = load i32, i32* %A, align 4, !dbg !10894, !tbaa !2342
  %add453 = add i32 %405, %404, !dbg !10894
  store i32 %add453, i32* %A, align 4, !dbg !10894, !tbaa !2342
  br label %do.end454, !dbg !10894

do.end454:                                        ; preds = %do.body443
  br label %do.body455, !dbg !10896

do.body455:                                       ; preds = %do.end454
  %406 = load i32, i32* %A, align 4, !dbg !10897, !tbaa !2342
  %407 = load i32, i32* %B, align 4, !dbg !10897, !tbaa !2342
  %xor456 = xor i32 %406, %407, !dbg !10897
  %408 = load i32, i32* %C, align 4, !dbg !10897, !tbaa !2342
  %xor457 = xor i32 %xor456, %408, !dbg !10897
  %arrayidx458 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 8, !dbg !10897, !ctir !984
  %409 = load i32, i32* %arrayidx458, align 16, !dbg !10897, !tbaa !2342
  %add459 = add i32 %xor457, %409, !dbg !10897
  %add460 = add i32 %add459, -2022574463, !dbg !10897
  %410 = load i32, i32* %D, align 4, !dbg !10897, !tbaa !2342
  %add461 = add i32 %410, %add460, !dbg !10897
  store i32 %add461, i32* %D, align 4, !dbg !10897, !tbaa !2342
  %411 = load i32, i32* %D, align 4, !dbg !10897, !tbaa !2342
  %shl462 = shl i32 %411, 11, !dbg !10897
  %412 = load i32, i32* %D, align 4, !dbg !10897, !tbaa !2342
  %shr463 = lshr i32 %412, 21, !dbg !10897
  %or464 = or i32 %shl462, %shr463, !dbg !10897
  store i32 %or464, i32* %D, align 4, !dbg !10897, !tbaa !2342
  %413 = load i32, i32* %A, align 4, !dbg !10897, !tbaa !2342
  %414 = load i32, i32* %D, align 4, !dbg !10897, !tbaa !2342
  %add465 = add i32 %414, %413, !dbg !10897
  store i32 %add465, i32* %D, align 4, !dbg !10897, !tbaa !2342
  br label %do.end466, !dbg !10897

do.end466:                                        ; preds = %do.body455
  br label %do.body467, !dbg !10899

do.body467:                                       ; preds = %do.end466
  %415 = load i32, i32* %D, align 4, !dbg !10900, !tbaa !2342
  %416 = load i32, i32* %A, align 4, !dbg !10900, !tbaa !2342
  %xor468 = xor i32 %415, %416, !dbg !10900
  %417 = load i32, i32* %B, align 4, !dbg !10900, !tbaa !2342
  %xor469 = xor i32 %xor468, %417, !dbg !10900
  %arrayidx470 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 11, !dbg !10900, !ctir !984
  %418 = load i32, i32* %arrayidx470, align 4, !dbg !10900, !tbaa !2342
  %add471 = add i32 %xor469, %418, !dbg !10900
  %add472 = add i32 %add471, 1839030562, !dbg !10900
  %419 = load i32, i32* %C, align 4, !dbg !10900, !tbaa !2342
  %add473 = add i32 %419, %add472, !dbg !10900
  store i32 %add473, i32* %C, align 4, !dbg !10900, !tbaa !2342
  %420 = load i32, i32* %C, align 4, !dbg !10900, !tbaa !2342
  %shl474 = shl i32 %420, 16, !dbg !10900
  %421 = load i32, i32* %C, align 4, !dbg !10900, !tbaa !2342
  %shr475 = lshr i32 %421, 16, !dbg !10900
  %or476 = or i32 %shl474, %shr475, !dbg !10900
  store i32 %or476, i32* %C, align 4, !dbg !10900, !tbaa !2342
  %422 = load i32, i32* %D, align 4, !dbg !10900, !tbaa !2342
  %423 = load i32, i32* %C, align 4, !dbg !10900, !tbaa !2342
  %add477 = add i32 %423, %422, !dbg !10900
  store i32 %add477, i32* %C, align 4, !dbg !10900, !tbaa !2342
  br label %do.end478, !dbg !10900

do.end478:                                        ; preds = %do.body467
  br label %do.body479, !dbg !10902

do.body479:                                       ; preds = %do.end478
  %424 = load i32, i32* %C, align 4, !dbg !10903, !tbaa !2342
  %425 = load i32, i32* %D, align 4, !dbg !10903, !tbaa !2342
  %xor480 = xor i32 %424, %425, !dbg !10903
  %426 = load i32, i32* %A, align 4, !dbg !10903, !tbaa !2342
  %xor481 = xor i32 %xor480, %426, !dbg !10903
  %arrayidx482 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 14, !dbg !10903, !ctir !984
  %427 = load i32, i32* %arrayidx482, align 8, !dbg !10903, !tbaa !2342
  %add483 = add i32 %xor481, %427, !dbg !10903
  %add484 = add i32 %add483, -35309556, !dbg !10903
  %428 = load i32, i32* %B, align 4, !dbg !10903, !tbaa !2342
  %add485 = add i32 %428, %add484, !dbg !10903
  store i32 %add485, i32* %B, align 4, !dbg !10903, !tbaa !2342
  %429 = load i32, i32* %B, align 4, !dbg !10903, !tbaa !2342
  %shl486 = shl i32 %429, 23, !dbg !10903
  %430 = load i32, i32* %B, align 4, !dbg !10903, !tbaa !2342
  %shr487 = lshr i32 %430, 9, !dbg !10903
  %or488 = or i32 %shl486, %shr487, !dbg !10903
  store i32 %or488, i32* %B, align 4, !dbg !10903, !tbaa !2342
  %431 = load i32, i32* %C, align 4, !dbg !10903, !tbaa !2342
  %432 = load i32, i32* %B, align 4, !dbg !10903, !tbaa !2342
  %add489 = add i32 %432, %431, !dbg !10903
  store i32 %add489, i32* %B, align 4, !dbg !10903, !tbaa !2342
  br label %do.end490, !dbg !10903

do.end490:                                        ; preds = %do.body479
  br label %do.body491, !dbg !10905

do.body491:                                       ; preds = %do.end490
  %433 = load i32, i32* %B, align 4, !dbg !10906, !tbaa !2342
  %434 = load i32, i32* %C, align 4, !dbg !10906, !tbaa !2342
  %xor492 = xor i32 %433, %434, !dbg !10906
  %435 = load i32, i32* %D, align 4, !dbg !10906, !tbaa !2342
  %xor493 = xor i32 %xor492, %435, !dbg !10906
  %arrayidx494 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 1, !dbg !10906, !ctir !984
  %436 = load i32, i32* %arrayidx494, align 4, !dbg !10906, !tbaa !2342
  %add495 = add i32 %xor493, %436, !dbg !10906
  %add496 = add i32 %add495, -1530992060, !dbg !10906
  %437 = load i32, i32* %A, align 4, !dbg !10906, !tbaa !2342
  %add497 = add i32 %437, %add496, !dbg !10906
  store i32 %add497, i32* %A, align 4, !dbg !10906, !tbaa !2342
  %438 = load i32, i32* %A, align 4, !dbg !10906, !tbaa !2342
  %shl498 = shl i32 %438, 4, !dbg !10906
  %439 = load i32, i32* %A, align 4, !dbg !10906, !tbaa !2342
  %shr499 = lshr i32 %439, 28, !dbg !10906
  %or500 = or i32 %shl498, %shr499, !dbg !10906
  store i32 %or500, i32* %A, align 4, !dbg !10906, !tbaa !2342
  %440 = load i32, i32* %B, align 4, !dbg !10906, !tbaa !2342
  %441 = load i32, i32* %A, align 4, !dbg !10906, !tbaa !2342
  %add501 = add i32 %441, %440, !dbg !10906
  store i32 %add501, i32* %A, align 4, !dbg !10906, !tbaa !2342
  br label %do.end502, !dbg !10906

do.end502:                                        ; preds = %do.body491
  br label %do.body503, !dbg !10908

do.body503:                                       ; preds = %do.end502
  %442 = load i32, i32* %A, align 4, !dbg !10909, !tbaa !2342
  %443 = load i32, i32* %B, align 4, !dbg !10909, !tbaa !2342
  %xor504 = xor i32 %442, %443, !dbg !10909
  %444 = load i32, i32* %C, align 4, !dbg !10909, !tbaa !2342
  %xor505 = xor i32 %xor504, %444, !dbg !10909
  %arrayidx506 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 4, !dbg !10909, !ctir !984
  %445 = load i32, i32* %arrayidx506, align 16, !dbg !10909, !tbaa !2342
  %add507 = add i32 %xor505, %445, !dbg !10909
  %add508 = add i32 %add507, 1272893353, !dbg !10909
  %446 = load i32, i32* %D, align 4, !dbg !10909, !tbaa !2342
  %add509 = add i32 %446, %add508, !dbg !10909
  store i32 %add509, i32* %D, align 4, !dbg !10909, !tbaa !2342
  %447 = load i32, i32* %D, align 4, !dbg !10909, !tbaa !2342
  %shl510 = shl i32 %447, 11, !dbg !10909
  %448 = load i32, i32* %D, align 4, !dbg !10909, !tbaa !2342
  %shr511 = lshr i32 %448, 21, !dbg !10909
  %or512 = or i32 %shl510, %shr511, !dbg !10909
  store i32 %or512, i32* %D, align 4, !dbg !10909, !tbaa !2342
  %449 = load i32, i32* %A, align 4, !dbg !10909, !tbaa !2342
  %450 = load i32, i32* %D, align 4, !dbg !10909, !tbaa !2342
  %add513 = add i32 %450, %449, !dbg !10909
  store i32 %add513, i32* %D, align 4, !dbg !10909, !tbaa !2342
  br label %do.end514, !dbg !10909

do.end514:                                        ; preds = %do.body503
  br label %do.body515, !dbg !10911

do.body515:                                       ; preds = %do.end514
  %451 = load i32, i32* %D, align 4, !dbg !10912, !tbaa !2342
  %452 = load i32, i32* %A, align 4, !dbg !10912, !tbaa !2342
  %xor516 = xor i32 %451, %452, !dbg !10912
  %453 = load i32, i32* %B, align 4, !dbg !10912, !tbaa !2342
  %xor517 = xor i32 %xor516, %453, !dbg !10912
  %arrayidx518 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 7, !dbg !10912, !ctir !984
  %454 = load i32, i32* %arrayidx518, align 4, !dbg !10912, !tbaa !2342
  %add519 = add i32 %xor517, %454, !dbg !10912
  %add520 = add i32 %add519, -155497632, !dbg !10912
  %455 = load i32, i32* %C, align 4, !dbg !10912, !tbaa !2342
  %add521 = add i32 %455, %add520, !dbg !10912
  store i32 %add521, i32* %C, align 4, !dbg !10912, !tbaa !2342
  %456 = load i32, i32* %C, align 4, !dbg !10912, !tbaa !2342
  %shl522 = shl i32 %456, 16, !dbg !10912
  %457 = load i32, i32* %C, align 4, !dbg !10912, !tbaa !2342
  %shr523 = lshr i32 %457, 16, !dbg !10912
  %or524 = or i32 %shl522, %shr523, !dbg !10912
  store i32 %or524, i32* %C, align 4, !dbg !10912, !tbaa !2342
  %458 = load i32, i32* %D, align 4, !dbg !10912, !tbaa !2342
  %459 = load i32, i32* %C, align 4, !dbg !10912, !tbaa !2342
  %add525 = add i32 %459, %458, !dbg !10912
  store i32 %add525, i32* %C, align 4, !dbg !10912, !tbaa !2342
  br label %do.end526, !dbg !10912

do.end526:                                        ; preds = %do.body515
  br label %do.body527, !dbg !10914

do.body527:                                       ; preds = %do.end526
  %460 = load i32, i32* %C, align 4, !dbg !10915, !tbaa !2342
  %461 = load i32, i32* %D, align 4, !dbg !10915, !tbaa !2342
  %xor528 = xor i32 %460, %461, !dbg !10915
  %462 = load i32, i32* %A, align 4, !dbg !10915, !tbaa !2342
  %xor529 = xor i32 %xor528, %462, !dbg !10915
  %arrayidx530 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 10, !dbg !10915, !ctir !984
  %463 = load i32, i32* %arrayidx530, align 8, !dbg !10915, !tbaa !2342
  %add531 = add i32 %xor529, %463, !dbg !10915
  %add532 = add i32 %add531, -1094730640, !dbg !10915
  %464 = load i32, i32* %B, align 4, !dbg !10915, !tbaa !2342
  %add533 = add i32 %464, %add532, !dbg !10915
  store i32 %add533, i32* %B, align 4, !dbg !10915, !tbaa !2342
  %465 = load i32, i32* %B, align 4, !dbg !10915, !tbaa !2342
  %shl534 = shl i32 %465, 23, !dbg !10915
  %466 = load i32, i32* %B, align 4, !dbg !10915, !tbaa !2342
  %shr535 = lshr i32 %466, 9, !dbg !10915
  %or536 = or i32 %shl534, %shr535, !dbg !10915
  store i32 %or536, i32* %B, align 4, !dbg !10915, !tbaa !2342
  %467 = load i32, i32* %C, align 4, !dbg !10915, !tbaa !2342
  %468 = load i32, i32* %B, align 4, !dbg !10915, !tbaa !2342
  %add537 = add i32 %468, %467, !dbg !10915
  store i32 %add537, i32* %B, align 4, !dbg !10915, !tbaa !2342
  br label %do.end538, !dbg !10915

do.end538:                                        ; preds = %do.body527
  br label %do.body539, !dbg !10917

do.body539:                                       ; preds = %do.end538
  %469 = load i32, i32* %B, align 4, !dbg !10918, !tbaa !2342
  %470 = load i32, i32* %C, align 4, !dbg !10918, !tbaa !2342
  %xor540 = xor i32 %469, %470, !dbg !10918
  %471 = load i32, i32* %D, align 4, !dbg !10918, !tbaa !2342
  %xor541 = xor i32 %xor540, %471, !dbg !10918
  %arrayidx542 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 13, !dbg !10918, !ctir !984
  %472 = load i32, i32* %arrayidx542, align 4, !dbg !10918, !tbaa !2342
  %add543 = add i32 %xor541, %472, !dbg !10918
  %add544 = add i32 %add543, 681279174, !dbg !10918
  %473 = load i32, i32* %A, align 4, !dbg !10918, !tbaa !2342
  %add545 = add i32 %473, %add544, !dbg !10918
  store i32 %add545, i32* %A, align 4, !dbg !10918, !tbaa !2342
  %474 = load i32, i32* %A, align 4, !dbg !10918, !tbaa !2342
  %shl546 = shl i32 %474, 4, !dbg !10918
  %475 = load i32, i32* %A, align 4, !dbg !10918, !tbaa !2342
  %shr547 = lshr i32 %475, 28, !dbg !10918
  %or548 = or i32 %shl546, %shr547, !dbg !10918
  store i32 %or548, i32* %A, align 4, !dbg !10918, !tbaa !2342
  %476 = load i32, i32* %B, align 4, !dbg !10918, !tbaa !2342
  %477 = load i32, i32* %A, align 4, !dbg !10918, !tbaa !2342
  %add549 = add i32 %477, %476, !dbg !10918
  store i32 %add549, i32* %A, align 4, !dbg !10918, !tbaa !2342
  br label %do.end550, !dbg !10918

do.end550:                                        ; preds = %do.body539
  br label %do.body551, !dbg !10920

do.body551:                                       ; preds = %do.end550
  %478 = load i32, i32* %A, align 4, !dbg !10921, !tbaa !2342
  %479 = load i32, i32* %B, align 4, !dbg !10921, !tbaa !2342
  %xor552 = xor i32 %478, %479, !dbg !10921
  %480 = load i32, i32* %C, align 4, !dbg !10921, !tbaa !2342
  %xor553 = xor i32 %xor552, %480, !dbg !10921
  %arrayidx554 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10921, !ctir !984
  %481 = load i32, i32* %arrayidx554, align 16, !dbg !10921, !tbaa !2342
  %add555 = add i32 %xor553, %481, !dbg !10921
  %add556 = add i32 %add555, -358537222, !dbg !10921
  %482 = load i32, i32* %D, align 4, !dbg !10921, !tbaa !2342
  %add557 = add i32 %482, %add556, !dbg !10921
  store i32 %add557, i32* %D, align 4, !dbg !10921, !tbaa !2342
  %483 = load i32, i32* %D, align 4, !dbg !10921, !tbaa !2342
  %shl558 = shl i32 %483, 11, !dbg !10921
  %484 = load i32, i32* %D, align 4, !dbg !10921, !tbaa !2342
  %shr559 = lshr i32 %484, 21, !dbg !10921
  %or560 = or i32 %shl558, %shr559, !dbg !10921
  store i32 %or560, i32* %D, align 4, !dbg !10921, !tbaa !2342
  %485 = load i32, i32* %A, align 4, !dbg !10921, !tbaa !2342
  %486 = load i32, i32* %D, align 4, !dbg !10921, !tbaa !2342
  %add561 = add i32 %486, %485, !dbg !10921
  store i32 %add561, i32* %D, align 4, !dbg !10921, !tbaa !2342
  br label %do.end562, !dbg !10921

do.end562:                                        ; preds = %do.body551
  br label %do.body563, !dbg !10923

do.body563:                                       ; preds = %do.end562
  %487 = load i32, i32* %D, align 4, !dbg !10924, !tbaa !2342
  %488 = load i32, i32* %A, align 4, !dbg !10924, !tbaa !2342
  %xor564 = xor i32 %487, %488, !dbg !10924
  %489 = load i32, i32* %B, align 4, !dbg !10924, !tbaa !2342
  %xor565 = xor i32 %xor564, %489, !dbg !10924
  %arrayidx566 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 3, !dbg !10924, !ctir !984
  %490 = load i32, i32* %arrayidx566, align 4, !dbg !10924, !tbaa !2342
  %add567 = add i32 %xor565, %490, !dbg !10924
  %add568 = add i32 %add567, -722521979, !dbg !10924
  %491 = load i32, i32* %C, align 4, !dbg !10924, !tbaa !2342
  %add569 = add i32 %491, %add568, !dbg !10924
  store i32 %add569, i32* %C, align 4, !dbg !10924, !tbaa !2342
  %492 = load i32, i32* %C, align 4, !dbg !10924, !tbaa !2342
  %shl570 = shl i32 %492, 16, !dbg !10924
  %493 = load i32, i32* %C, align 4, !dbg !10924, !tbaa !2342
  %shr571 = lshr i32 %493, 16, !dbg !10924
  %or572 = or i32 %shl570, %shr571, !dbg !10924
  store i32 %or572, i32* %C, align 4, !dbg !10924, !tbaa !2342
  %494 = load i32, i32* %D, align 4, !dbg !10924, !tbaa !2342
  %495 = load i32, i32* %C, align 4, !dbg !10924, !tbaa !2342
  %add573 = add i32 %495, %494, !dbg !10924
  store i32 %add573, i32* %C, align 4, !dbg !10924, !tbaa !2342
  br label %do.end574, !dbg !10924

do.end574:                                        ; preds = %do.body563
  br label %do.body575, !dbg !10926

do.body575:                                       ; preds = %do.end574
  %496 = load i32, i32* %C, align 4, !dbg !10927, !tbaa !2342
  %497 = load i32, i32* %D, align 4, !dbg !10927, !tbaa !2342
  %xor576 = xor i32 %496, %497, !dbg !10927
  %498 = load i32, i32* %A, align 4, !dbg !10927, !tbaa !2342
  %xor577 = xor i32 %xor576, %498, !dbg !10927
  %arrayidx578 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 6, !dbg !10927, !ctir !984
  %499 = load i32, i32* %arrayidx578, align 8, !dbg !10927, !tbaa !2342
  %add579 = add i32 %xor577, %499, !dbg !10927
  %add580 = add i32 %add579, 76029189, !dbg !10927
  %500 = load i32, i32* %B, align 4, !dbg !10927, !tbaa !2342
  %add581 = add i32 %500, %add580, !dbg !10927
  store i32 %add581, i32* %B, align 4, !dbg !10927, !tbaa !2342
  %501 = load i32, i32* %B, align 4, !dbg !10927, !tbaa !2342
  %shl582 = shl i32 %501, 23, !dbg !10927
  %502 = load i32, i32* %B, align 4, !dbg !10927, !tbaa !2342
  %shr583 = lshr i32 %502, 9, !dbg !10927
  %or584 = or i32 %shl582, %shr583, !dbg !10927
  store i32 %or584, i32* %B, align 4, !dbg !10927, !tbaa !2342
  %503 = load i32, i32* %C, align 4, !dbg !10927, !tbaa !2342
  %504 = load i32, i32* %B, align 4, !dbg !10927, !tbaa !2342
  %add585 = add i32 %504, %503, !dbg !10927
  store i32 %add585, i32* %B, align 4, !dbg !10927, !tbaa !2342
  br label %do.end586, !dbg !10927

do.end586:                                        ; preds = %do.body575
  br label %do.body587, !dbg !10929

do.body587:                                       ; preds = %do.end586
  %505 = load i32, i32* %B, align 4, !dbg !10930, !tbaa !2342
  %506 = load i32, i32* %C, align 4, !dbg !10930, !tbaa !2342
  %xor588 = xor i32 %505, %506, !dbg !10930
  %507 = load i32, i32* %D, align 4, !dbg !10930, !tbaa !2342
  %xor589 = xor i32 %xor588, %507, !dbg !10930
  %arrayidx590 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 9, !dbg !10930, !ctir !984
  %508 = load i32, i32* %arrayidx590, align 4, !dbg !10930, !tbaa !2342
  %add591 = add i32 %xor589, %508, !dbg !10930
  %add592 = add i32 %add591, -640364487, !dbg !10930
  %509 = load i32, i32* %A, align 4, !dbg !10930, !tbaa !2342
  %add593 = add i32 %509, %add592, !dbg !10930
  store i32 %add593, i32* %A, align 4, !dbg !10930, !tbaa !2342
  %510 = load i32, i32* %A, align 4, !dbg !10930, !tbaa !2342
  %shl594 = shl i32 %510, 4, !dbg !10930
  %511 = load i32, i32* %A, align 4, !dbg !10930, !tbaa !2342
  %shr595 = lshr i32 %511, 28, !dbg !10930
  %or596 = or i32 %shl594, %shr595, !dbg !10930
  store i32 %or596, i32* %A, align 4, !dbg !10930, !tbaa !2342
  %512 = load i32, i32* %B, align 4, !dbg !10930, !tbaa !2342
  %513 = load i32, i32* %A, align 4, !dbg !10930, !tbaa !2342
  %add597 = add i32 %513, %512, !dbg !10930
  store i32 %add597, i32* %A, align 4, !dbg !10930, !tbaa !2342
  br label %do.end598, !dbg !10930

do.end598:                                        ; preds = %do.body587
  br label %do.body599, !dbg !10932

do.body599:                                       ; preds = %do.end598
  %514 = load i32, i32* %A, align 4, !dbg !10933, !tbaa !2342
  %515 = load i32, i32* %B, align 4, !dbg !10933, !tbaa !2342
  %xor600 = xor i32 %514, %515, !dbg !10933
  %516 = load i32, i32* %C, align 4, !dbg !10933, !tbaa !2342
  %xor601 = xor i32 %xor600, %516, !dbg !10933
  %arrayidx602 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 12, !dbg !10933, !ctir !984
  %517 = load i32, i32* %arrayidx602, align 16, !dbg !10933, !tbaa !2342
  %add603 = add i32 %xor601, %517, !dbg !10933
  %add604 = add i32 %add603, -421815835, !dbg !10933
  %518 = load i32, i32* %D, align 4, !dbg !10933, !tbaa !2342
  %add605 = add i32 %518, %add604, !dbg !10933
  store i32 %add605, i32* %D, align 4, !dbg !10933, !tbaa !2342
  %519 = load i32, i32* %D, align 4, !dbg !10933, !tbaa !2342
  %shl606 = shl i32 %519, 11, !dbg !10933
  %520 = load i32, i32* %D, align 4, !dbg !10933, !tbaa !2342
  %shr607 = lshr i32 %520, 21, !dbg !10933
  %or608 = or i32 %shl606, %shr607, !dbg !10933
  store i32 %or608, i32* %D, align 4, !dbg !10933, !tbaa !2342
  %521 = load i32, i32* %A, align 4, !dbg !10933, !tbaa !2342
  %522 = load i32, i32* %D, align 4, !dbg !10933, !tbaa !2342
  %add609 = add i32 %522, %521, !dbg !10933
  store i32 %add609, i32* %D, align 4, !dbg !10933, !tbaa !2342
  br label %do.end610, !dbg !10933

do.end610:                                        ; preds = %do.body599
  br label %do.body611, !dbg !10935

do.body611:                                       ; preds = %do.end610
  %523 = load i32, i32* %D, align 4, !dbg !10936, !tbaa !2342
  %524 = load i32, i32* %A, align 4, !dbg !10936, !tbaa !2342
  %xor612 = xor i32 %523, %524, !dbg !10936
  %525 = load i32, i32* %B, align 4, !dbg !10936, !tbaa !2342
  %xor613 = xor i32 %xor612, %525, !dbg !10936
  %arrayidx614 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 15, !dbg !10936, !ctir !984
  %526 = load i32, i32* %arrayidx614, align 4, !dbg !10936, !tbaa !2342
  %add615 = add i32 %xor613, %526, !dbg !10936
  %add616 = add i32 %add615, 530742520, !dbg !10936
  %527 = load i32, i32* %C, align 4, !dbg !10936, !tbaa !2342
  %add617 = add i32 %527, %add616, !dbg !10936
  store i32 %add617, i32* %C, align 4, !dbg !10936, !tbaa !2342
  %528 = load i32, i32* %C, align 4, !dbg !10936, !tbaa !2342
  %shl618 = shl i32 %528, 16, !dbg !10936
  %529 = load i32, i32* %C, align 4, !dbg !10936, !tbaa !2342
  %shr619 = lshr i32 %529, 16, !dbg !10936
  %or620 = or i32 %shl618, %shr619, !dbg !10936
  store i32 %or620, i32* %C, align 4, !dbg !10936, !tbaa !2342
  %530 = load i32, i32* %D, align 4, !dbg !10936, !tbaa !2342
  %531 = load i32, i32* %C, align 4, !dbg !10936, !tbaa !2342
  %add621 = add i32 %531, %530, !dbg !10936
  store i32 %add621, i32* %C, align 4, !dbg !10936, !tbaa !2342
  br label %do.end622, !dbg !10936

do.end622:                                        ; preds = %do.body611
  br label %do.body623, !dbg !10938

do.body623:                                       ; preds = %do.end622
  %532 = load i32, i32* %C, align 4, !dbg !10939, !tbaa !2342
  %533 = load i32, i32* %D, align 4, !dbg !10939, !tbaa !2342
  %xor624 = xor i32 %532, %533, !dbg !10939
  %534 = load i32, i32* %A, align 4, !dbg !10939, !tbaa !2342
  %xor625 = xor i32 %xor624, %534, !dbg !10939
  %arrayidx626 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 2, !dbg !10939, !ctir !984
  %535 = load i32, i32* %arrayidx626, align 8, !dbg !10939, !tbaa !2342
  %add627 = add i32 %xor625, %535, !dbg !10939
  %add628 = add i32 %add627, -995338651, !dbg !10939
  %536 = load i32, i32* %B, align 4, !dbg !10939, !tbaa !2342
  %add629 = add i32 %536, %add628, !dbg !10939
  store i32 %add629, i32* %B, align 4, !dbg !10939, !tbaa !2342
  %537 = load i32, i32* %B, align 4, !dbg !10939, !tbaa !2342
  %shl630 = shl i32 %537, 23, !dbg !10939
  %538 = load i32, i32* %B, align 4, !dbg !10939, !tbaa !2342
  %shr631 = lshr i32 %538, 9, !dbg !10939
  %or632 = or i32 %shl630, %shr631, !dbg !10939
  store i32 %or632, i32* %B, align 4, !dbg !10939, !tbaa !2342
  %539 = load i32, i32* %C, align 4, !dbg !10939, !tbaa !2342
  %540 = load i32, i32* %B, align 4, !dbg !10939, !tbaa !2342
  %add633 = add i32 %540, %539, !dbg !10939
  store i32 %add633, i32* %B, align 4, !dbg !10939, !tbaa !2342
  br label %do.end634, !dbg !10939

do.end634:                                        ; preds = %do.body623
  br label %do.body635, !dbg !10941

do.body635:                                       ; preds = %do.end634
  %541 = load i32, i32* %C, align 4, !dbg !10942, !tbaa !2342
  %542 = load i32, i32* %B, align 4, !dbg !10942, !tbaa !2342
  %543 = load i32, i32* %D, align 4, !dbg !10942, !tbaa !2342
  %neg = xor i32 %543, -1, !dbg !10942
  %or636 = or i32 %542, %neg, !dbg !10942
  %xor637 = xor i32 %541, %or636, !dbg !10942
  %arrayidx638 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10942, !ctir !984
  %544 = load i32, i32* %arrayidx638, align 16, !dbg !10942, !tbaa !2342
  %add639 = add i32 %xor637, %544, !dbg !10942
  %add640 = add i32 %add639, -198630844, !dbg !10942
  %545 = load i32, i32* %A, align 4, !dbg !10942, !tbaa !2342
  %add641 = add i32 %545, %add640, !dbg !10942
  store i32 %add641, i32* %A, align 4, !dbg !10942, !tbaa !2342
  %546 = load i32, i32* %A, align 4, !dbg !10942, !tbaa !2342
  %shl642 = shl i32 %546, 6, !dbg !10942
  %547 = load i32, i32* %A, align 4, !dbg !10942, !tbaa !2342
  %shr643 = lshr i32 %547, 26, !dbg !10942
  %or644 = or i32 %shl642, %shr643, !dbg !10942
  store i32 %or644, i32* %A, align 4, !dbg !10942, !tbaa !2342
  %548 = load i32, i32* %B, align 4, !dbg !10942, !tbaa !2342
  %549 = load i32, i32* %A, align 4, !dbg !10942, !tbaa !2342
  %add645 = add i32 %549, %548, !dbg !10942
  store i32 %add645, i32* %A, align 4, !dbg !10942, !tbaa !2342
  br label %do.end646, !dbg !10942

do.end646:                                        ; preds = %do.body635
  br label %do.body647, !dbg !10944

do.body647:                                       ; preds = %do.end646
  %550 = load i32, i32* %B, align 4, !dbg !10945, !tbaa !2342
  %551 = load i32, i32* %A, align 4, !dbg !10945, !tbaa !2342
  %552 = load i32, i32* %C, align 4, !dbg !10945, !tbaa !2342
  %neg648 = xor i32 %552, -1, !dbg !10945
  %or649 = or i32 %551, %neg648, !dbg !10945
  %xor650 = xor i32 %550, %or649, !dbg !10945
  %arrayidx651 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 7, !dbg !10945, !ctir !984
  %553 = load i32, i32* %arrayidx651, align 4, !dbg !10945, !tbaa !2342
  %add652 = add i32 %xor650, %553, !dbg !10945
  %add653 = add i32 %add652, 1126891415, !dbg !10945
  %554 = load i32, i32* %D, align 4, !dbg !10945, !tbaa !2342
  %add654 = add i32 %554, %add653, !dbg !10945
  store i32 %add654, i32* %D, align 4, !dbg !10945, !tbaa !2342
  %555 = load i32, i32* %D, align 4, !dbg !10945, !tbaa !2342
  %shl655 = shl i32 %555, 10, !dbg !10945
  %556 = load i32, i32* %D, align 4, !dbg !10945, !tbaa !2342
  %shr656 = lshr i32 %556, 22, !dbg !10945
  %or657 = or i32 %shl655, %shr656, !dbg !10945
  store i32 %or657, i32* %D, align 4, !dbg !10945, !tbaa !2342
  %557 = load i32, i32* %A, align 4, !dbg !10945, !tbaa !2342
  %558 = load i32, i32* %D, align 4, !dbg !10945, !tbaa !2342
  %add658 = add i32 %558, %557, !dbg !10945
  store i32 %add658, i32* %D, align 4, !dbg !10945, !tbaa !2342
  br label %do.end659, !dbg !10945

do.end659:                                        ; preds = %do.body647
  br label %do.body660, !dbg !10947

do.body660:                                       ; preds = %do.end659
  %559 = load i32, i32* %A, align 4, !dbg !10948, !tbaa !2342
  %560 = load i32, i32* %D, align 4, !dbg !10948, !tbaa !2342
  %561 = load i32, i32* %B, align 4, !dbg !10948, !tbaa !2342
  %neg661 = xor i32 %561, -1, !dbg !10948
  %or662 = or i32 %560, %neg661, !dbg !10948
  %xor663 = xor i32 %559, %or662, !dbg !10948
  %arrayidx664 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 14, !dbg !10948, !ctir !984
  %562 = load i32, i32* %arrayidx664, align 8, !dbg !10948, !tbaa !2342
  %add665 = add i32 %xor663, %562, !dbg !10948
  %add666 = add i32 %add665, -1416354905, !dbg !10948
  %563 = load i32, i32* %C, align 4, !dbg !10948, !tbaa !2342
  %add667 = add i32 %563, %add666, !dbg !10948
  store i32 %add667, i32* %C, align 4, !dbg !10948, !tbaa !2342
  %564 = load i32, i32* %C, align 4, !dbg !10948, !tbaa !2342
  %shl668 = shl i32 %564, 15, !dbg !10948
  %565 = load i32, i32* %C, align 4, !dbg !10948, !tbaa !2342
  %shr669 = lshr i32 %565, 17, !dbg !10948
  %or670 = or i32 %shl668, %shr669, !dbg !10948
  store i32 %or670, i32* %C, align 4, !dbg !10948, !tbaa !2342
  %566 = load i32, i32* %D, align 4, !dbg !10948, !tbaa !2342
  %567 = load i32, i32* %C, align 4, !dbg !10948, !tbaa !2342
  %add671 = add i32 %567, %566, !dbg !10948
  store i32 %add671, i32* %C, align 4, !dbg !10948, !tbaa !2342
  br label %do.end672, !dbg !10948

do.end672:                                        ; preds = %do.body660
  br label %do.body673, !dbg !10950

do.body673:                                       ; preds = %do.end672
  %568 = load i32, i32* %D, align 4, !dbg !10951, !tbaa !2342
  %569 = load i32, i32* %C, align 4, !dbg !10951, !tbaa !2342
  %570 = load i32, i32* %A, align 4, !dbg !10951, !tbaa !2342
  %neg674 = xor i32 %570, -1, !dbg !10951
  %or675 = or i32 %569, %neg674, !dbg !10951
  %xor676 = xor i32 %568, %or675, !dbg !10951
  %arrayidx677 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 5, !dbg !10951, !ctir !984
  %571 = load i32, i32* %arrayidx677, align 4, !dbg !10951, !tbaa !2342
  %add678 = add i32 %xor676, %571, !dbg !10951
  %add679 = add i32 %add678, -57434055, !dbg !10951
  %572 = load i32, i32* %B, align 4, !dbg !10951, !tbaa !2342
  %add680 = add i32 %572, %add679, !dbg !10951
  store i32 %add680, i32* %B, align 4, !dbg !10951, !tbaa !2342
  %573 = load i32, i32* %B, align 4, !dbg !10951, !tbaa !2342
  %shl681 = shl i32 %573, 21, !dbg !10951
  %574 = load i32, i32* %B, align 4, !dbg !10951, !tbaa !2342
  %shr682 = lshr i32 %574, 11, !dbg !10951
  %or683 = or i32 %shl681, %shr682, !dbg !10951
  store i32 %or683, i32* %B, align 4, !dbg !10951, !tbaa !2342
  %575 = load i32, i32* %C, align 4, !dbg !10951, !tbaa !2342
  %576 = load i32, i32* %B, align 4, !dbg !10951, !tbaa !2342
  %add684 = add i32 %576, %575, !dbg !10951
  store i32 %add684, i32* %B, align 4, !dbg !10951, !tbaa !2342
  br label %do.end685, !dbg !10951

do.end685:                                        ; preds = %do.body673
  br label %do.body686, !dbg !10953

do.body686:                                       ; preds = %do.end685
  %577 = load i32, i32* %C, align 4, !dbg !10954, !tbaa !2342
  %578 = load i32, i32* %B, align 4, !dbg !10954, !tbaa !2342
  %579 = load i32, i32* %D, align 4, !dbg !10954, !tbaa !2342
  %neg687 = xor i32 %579, -1, !dbg !10954
  %or688 = or i32 %578, %neg687, !dbg !10954
  %xor689 = xor i32 %577, %or688, !dbg !10954
  %arrayidx690 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 12, !dbg !10954, !ctir !984
  %580 = load i32, i32* %arrayidx690, align 16, !dbg !10954, !tbaa !2342
  %add691 = add i32 %xor689, %580, !dbg !10954
  %add692 = add i32 %add691, 1700485571, !dbg !10954
  %581 = load i32, i32* %A, align 4, !dbg !10954, !tbaa !2342
  %add693 = add i32 %581, %add692, !dbg !10954
  store i32 %add693, i32* %A, align 4, !dbg !10954, !tbaa !2342
  %582 = load i32, i32* %A, align 4, !dbg !10954, !tbaa !2342
  %shl694 = shl i32 %582, 6, !dbg !10954
  %583 = load i32, i32* %A, align 4, !dbg !10954, !tbaa !2342
  %shr695 = lshr i32 %583, 26, !dbg !10954
  %or696 = or i32 %shl694, %shr695, !dbg !10954
  store i32 %or696, i32* %A, align 4, !dbg !10954, !tbaa !2342
  %584 = load i32, i32* %B, align 4, !dbg !10954, !tbaa !2342
  %585 = load i32, i32* %A, align 4, !dbg !10954, !tbaa !2342
  %add697 = add i32 %585, %584, !dbg !10954
  store i32 %add697, i32* %A, align 4, !dbg !10954, !tbaa !2342
  br label %do.end698, !dbg !10954

do.end698:                                        ; preds = %do.body686
  br label %do.body699, !dbg !10956

do.body699:                                       ; preds = %do.end698
  %586 = load i32, i32* %B, align 4, !dbg !10957, !tbaa !2342
  %587 = load i32, i32* %A, align 4, !dbg !10957, !tbaa !2342
  %588 = load i32, i32* %C, align 4, !dbg !10957, !tbaa !2342
  %neg700 = xor i32 %588, -1, !dbg !10957
  %or701 = or i32 %587, %neg700, !dbg !10957
  %xor702 = xor i32 %586, %or701, !dbg !10957
  %arrayidx703 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 3, !dbg !10957, !ctir !984
  %589 = load i32, i32* %arrayidx703, align 4, !dbg !10957, !tbaa !2342
  %add704 = add i32 %xor702, %589, !dbg !10957
  %add705 = add i32 %add704, -1894986606, !dbg !10957
  %590 = load i32, i32* %D, align 4, !dbg !10957, !tbaa !2342
  %add706 = add i32 %590, %add705, !dbg !10957
  store i32 %add706, i32* %D, align 4, !dbg !10957, !tbaa !2342
  %591 = load i32, i32* %D, align 4, !dbg !10957, !tbaa !2342
  %shl707 = shl i32 %591, 10, !dbg !10957
  %592 = load i32, i32* %D, align 4, !dbg !10957, !tbaa !2342
  %shr708 = lshr i32 %592, 22, !dbg !10957
  %or709 = or i32 %shl707, %shr708, !dbg !10957
  store i32 %or709, i32* %D, align 4, !dbg !10957, !tbaa !2342
  %593 = load i32, i32* %A, align 4, !dbg !10957, !tbaa !2342
  %594 = load i32, i32* %D, align 4, !dbg !10957, !tbaa !2342
  %add710 = add i32 %594, %593, !dbg !10957
  store i32 %add710, i32* %D, align 4, !dbg !10957, !tbaa !2342
  br label %do.end711, !dbg !10957

do.end711:                                        ; preds = %do.body699
  br label %do.body712, !dbg !10959

do.body712:                                       ; preds = %do.end711
  %595 = load i32, i32* %A, align 4, !dbg !10960, !tbaa !2342
  %596 = load i32, i32* %D, align 4, !dbg !10960, !tbaa !2342
  %597 = load i32, i32* %B, align 4, !dbg !10960, !tbaa !2342
  %neg713 = xor i32 %597, -1, !dbg !10960
  %or714 = or i32 %596, %neg713, !dbg !10960
  %xor715 = xor i32 %595, %or714, !dbg !10960
  %arrayidx716 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 10, !dbg !10960, !ctir !984
  %598 = load i32, i32* %arrayidx716, align 8, !dbg !10960, !tbaa !2342
  %add717 = add i32 %xor715, %598, !dbg !10960
  %add718 = add i32 %add717, -1051523, !dbg !10960
  %599 = load i32, i32* %C, align 4, !dbg !10960, !tbaa !2342
  %add719 = add i32 %599, %add718, !dbg !10960
  store i32 %add719, i32* %C, align 4, !dbg !10960, !tbaa !2342
  %600 = load i32, i32* %C, align 4, !dbg !10960, !tbaa !2342
  %shl720 = shl i32 %600, 15, !dbg !10960
  %601 = load i32, i32* %C, align 4, !dbg !10960, !tbaa !2342
  %shr721 = lshr i32 %601, 17, !dbg !10960
  %or722 = or i32 %shl720, %shr721, !dbg !10960
  store i32 %or722, i32* %C, align 4, !dbg !10960, !tbaa !2342
  %602 = load i32, i32* %D, align 4, !dbg !10960, !tbaa !2342
  %603 = load i32, i32* %C, align 4, !dbg !10960, !tbaa !2342
  %add723 = add i32 %603, %602, !dbg !10960
  store i32 %add723, i32* %C, align 4, !dbg !10960, !tbaa !2342
  br label %do.end724, !dbg !10960

do.end724:                                        ; preds = %do.body712
  br label %do.body725, !dbg !10962

do.body725:                                       ; preds = %do.end724
  %604 = load i32, i32* %D, align 4, !dbg !10963, !tbaa !2342
  %605 = load i32, i32* %C, align 4, !dbg !10963, !tbaa !2342
  %606 = load i32, i32* %A, align 4, !dbg !10963, !tbaa !2342
  %neg726 = xor i32 %606, -1, !dbg !10963
  %or727 = or i32 %605, %neg726, !dbg !10963
  %xor728 = xor i32 %604, %or727, !dbg !10963
  %arrayidx729 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 1, !dbg !10963, !ctir !984
  %607 = load i32, i32* %arrayidx729, align 4, !dbg !10963, !tbaa !2342
  %add730 = add i32 %xor728, %607, !dbg !10963
  %add731 = add i32 %add730, -2054922799, !dbg !10963
  %608 = load i32, i32* %B, align 4, !dbg !10963, !tbaa !2342
  %add732 = add i32 %608, %add731, !dbg !10963
  store i32 %add732, i32* %B, align 4, !dbg !10963, !tbaa !2342
  %609 = load i32, i32* %B, align 4, !dbg !10963, !tbaa !2342
  %shl733 = shl i32 %609, 21, !dbg !10963
  %610 = load i32, i32* %B, align 4, !dbg !10963, !tbaa !2342
  %shr734 = lshr i32 %610, 11, !dbg !10963
  %or735 = or i32 %shl733, %shr734, !dbg !10963
  store i32 %or735, i32* %B, align 4, !dbg !10963, !tbaa !2342
  %611 = load i32, i32* %C, align 4, !dbg !10963, !tbaa !2342
  %612 = load i32, i32* %B, align 4, !dbg !10963, !tbaa !2342
  %add736 = add i32 %612, %611, !dbg !10963
  store i32 %add736, i32* %B, align 4, !dbg !10963, !tbaa !2342
  br label %do.end737, !dbg !10963

do.end737:                                        ; preds = %do.body725
  br label %do.body738, !dbg !10965

do.body738:                                       ; preds = %do.end737
  %613 = load i32, i32* %C, align 4, !dbg !10966, !tbaa !2342
  %614 = load i32, i32* %B, align 4, !dbg !10966, !tbaa !2342
  %615 = load i32, i32* %D, align 4, !dbg !10966, !tbaa !2342
  %neg739 = xor i32 %615, -1, !dbg !10966
  %or740 = or i32 %614, %neg739, !dbg !10966
  %xor741 = xor i32 %613, %or740, !dbg !10966
  %arrayidx742 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 8, !dbg !10966, !ctir !984
  %616 = load i32, i32* %arrayidx742, align 16, !dbg !10966, !tbaa !2342
  %add743 = add i32 %xor741, %616, !dbg !10966
  %add744 = add i32 %add743, 1873313359, !dbg !10966
  %617 = load i32, i32* %A, align 4, !dbg !10966, !tbaa !2342
  %add745 = add i32 %617, %add744, !dbg !10966
  store i32 %add745, i32* %A, align 4, !dbg !10966, !tbaa !2342
  %618 = load i32, i32* %A, align 4, !dbg !10966, !tbaa !2342
  %shl746 = shl i32 %618, 6, !dbg !10966
  %619 = load i32, i32* %A, align 4, !dbg !10966, !tbaa !2342
  %shr747 = lshr i32 %619, 26, !dbg !10966
  %or748 = or i32 %shl746, %shr747, !dbg !10966
  store i32 %or748, i32* %A, align 4, !dbg !10966, !tbaa !2342
  %620 = load i32, i32* %B, align 4, !dbg !10966, !tbaa !2342
  %621 = load i32, i32* %A, align 4, !dbg !10966, !tbaa !2342
  %add749 = add i32 %621, %620, !dbg !10966
  store i32 %add749, i32* %A, align 4, !dbg !10966, !tbaa !2342
  br label %do.end750, !dbg !10966

do.end750:                                        ; preds = %do.body738
  br label %do.body751, !dbg !10968

do.body751:                                       ; preds = %do.end750
  %622 = load i32, i32* %B, align 4, !dbg !10969, !tbaa !2342
  %623 = load i32, i32* %A, align 4, !dbg !10969, !tbaa !2342
  %624 = load i32, i32* %C, align 4, !dbg !10969, !tbaa !2342
  %neg752 = xor i32 %624, -1, !dbg !10969
  %or753 = or i32 %623, %neg752, !dbg !10969
  %xor754 = xor i32 %622, %or753, !dbg !10969
  %arrayidx755 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 15, !dbg !10969, !ctir !984
  %625 = load i32, i32* %arrayidx755, align 4, !dbg !10969, !tbaa !2342
  %add756 = add i32 %xor754, %625, !dbg !10969
  %add757 = add i32 %add756, -30611744, !dbg !10969
  %626 = load i32, i32* %D, align 4, !dbg !10969, !tbaa !2342
  %add758 = add i32 %626, %add757, !dbg !10969
  store i32 %add758, i32* %D, align 4, !dbg !10969, !tbaa !2342
  %627 = load i32, i32* %D, align 4, !dbg !10969, !tbaa !2342
  %shl759 = shl i32 %627, 10, !dbg !10969
  %628 = load i32, i32* %D, align 4, !dbg !10969, !tbaa !2342
  %shr760 = lshr i32 %628, 22, !dbg !10969
  %or761 = or i32 %shl759, %shr760, !dbg !10969
  store i32 %or761, i32* %D, align 4, !dbg !10969, !tbaa !2342
  %629 = load i32, i32* %A, align 4, !dbg !10969, !tbaa !2342
  %630 = load i32, i32* %D, align 4, !dbg !10969, !tbaa !2342
  %add762 = add i32 %630, %629, !dbg !10969
  store i32 %add762, i32* %D, align 4, !dbg !10969, !tbaa !2342
  br label %do.end763, !dbg !10969

do.end763:                                        ; preds = %do.body751
  br label %do.body764, !dbg !10971

do.body764:                                       ; preds = %do.end763
  %631 = load i32, i32* %A, align 4, !dbg !10972, !tbaa !2342
  %632 = load i32, i32* %D, align 4, !dbg !10972, !tbaa !2342
  %633 = load i32, i32* %B, align 4, !dbg !10972, !tbaa !2342
  %neg765 = xor i32 %633, -1, !dbg !10972
  %or766 = or i32 %632, %neg765, !dbg !10972
  %xor767 = xor i32 %631, %or766, !dbg !10972
  %arrayidx768 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 6, !dbg !10972, !ctir !984
  %634 = load i32, i32* %arrayidx768, align 8, !dbg !10972, !tbaa !2342
  %add769 = add i32 %xor767, %634, !dbg !10972
  %add770 = add i32 %add769, -1560198380, !dbg !10972
  %635 = load i32, i32* %C, align 4, !dbg !10972, !tbaa !2342
  %add771 = add i32 %635, %add770, !dbg !10972
  store i32 %add771, i32* %C, align 4, !dbg !10972, !tbaa !2342
  %636 = load i32, i32* %C, align 4, !dbg !10972, !tbaa !2342
  %shl772 = shl i32 %636, 15, !dbg !10972
  %637 = load i32, i32* %C, align 4, !dbg !10972, !tbaa !2342
  %shr773 = lshr i32 %637, 17, !dbg !10972
  %or774 = or i32 %shl772, %shr773, !dbg !10972
  store i32 %or774, i32* %C, align 4, !dbg !10972, !tbaa !2342
  %638 = load i32, i32* %D, align 4, !dbg !10972, !tbaa !2342
  %639 = load i32, i32* %C, align 4, !dbg !10972, !tbaa !2342
  %add775 = add i32 %639, %638, !dbg !10972
  store i32 %add775, i32* %C, align 4, !dbg !10972, !tbaa !2342
  br label %do.end776, !dbg !10972

do.end776:                                        ; preds = %do.body764
  br label %do.body777, !dbg !10974

do.body777:                                       ; preds = %do.end776
  %640 = load i32, i32* %D, align 4, !dbg !10975, !tbaa !2342
  %641 = load i32, i32* %C, align 4, !dbg !10975, !tbaa !2342
  %642 = load i32, i32* %A, align 4, !dbg !10975, !tbaa !2342
  %neg778 = xor i32 %642, -1, !dbg !10975
  %or779 = or i32 %641, %neg778, !dbg !10975
  %xor780 = xor i32 %640, %or779, !dbg !10975
  %arrayidx781 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 13, !dbg !10975, !ctir !984
  %643 = load i32, i32* %arrayidx781, align 4, !dbg !10975, !tbaa !2342
  %add782 = add i32 %xor780, %643, !dbg !10975
  %add783 = add i32 %add782, 1309151649, !dbg !10975
  %644 = load i32, i32* %B, align 4, !dbg !10975, !tbaa !2342
  %add784 = add i32 %644, %add783, !dbg !10975
  store i32 %add784, i32* %B, align 4, !dbg !10975, !tbaa !2342
  %645 = load i32, i32* %B, align 4, !dbg !10975, !tbaa !2342
  %shl785 = shl i32 %645, 21, !dbg !10975
  %646 = load i32, i32* %B, align 4, !dbg !10975, !tbaa !2342
  %shr786 = lshr i32 %646, 11, !dbg !10975
  %or787 = or i32 %shl785, %shr786, !dbg !10975
  store i32 %or787, i32* %B, align 4, !dbg !10975, !tbaa !2342
  %647 = load i32, i32* %C, align 4, !dbg !10975, !tbaa !2342
  %648 = load i32, i32* %B, align 4, !dbg !10975, !tbaa !2342
  %add788 = add i32 %648, %647, !dbg !10975
  store i32 %add788, i32* %B, align 4, !dbg !10975, !tbaa !2342
  br label %do.end789, !dbg !10975

do.end789:                                        ; preds = %do.body777
  br label %do.body790, !dbg !10977

do.body790:                                       ; preds = %do.end789
  %649 = load i32, i32* %C, align 4, !dbg !10978, !tbaa !2342
  %650 = load i32, i32* %B, align 4, !dbg !10978, !tbaa !2342
  %651 = load i32, i32* %D, align 4, !dbg !10978, !tbaa !2342
  %neg791 = xor i32 %651, -1, !dbg !10978
  %or792 = or i32 %650, %neg791, !dbg !10978
  %xor793 = xor i32 %649, %or792, !dbg !10978
  %arrayidx794 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 4, !dbg !10978, !ctir !984
  %652 = load i32, i32* %arrayidx794, align 16, !dbg !10978, !tbaa !2342
  %add795 = add i32 %xor793, %652, !dbg !10978
  %add796 = add i32 %add795, -145523070, !dbg !10978
  %653 = load i32, i32* %A, align 4, !dbg !10978, !tbaa !2342
  %add797 = add i32 %653, %add796, !dbg !10978
  store i32 %add797, i32* %A, align 4, !dbg !10978, !tbaa !2342
  %654 = load i32, i32* %A, align 4, !dbg !10978, !tbaa !2342
  %shl798 = shl i32 %654, 6, !dbg !10978
  %655 = load i32, i32* %A, align 4, !dbg !10978, !tbaa !2342
  %shr799 = lshr i32 %655, 26, !dbg !10978
  %or800 = or i32 %shl798, %shr799, !dbg !10978
  store i32 %or800, i32* %A, align 4, !dbg !10978, !tbaa !2342
  %656 = load i32, i32* %B, align 4, !dbg !10978, !tbaa !2342
  %657 = load i32, i32* %A, align 4, !dbg !10978, !tbaa !2342
  %add801 = add i32 %657, %656, !dbg !10978
  store i32 %add801, i32* %A, align 4, !dbg !10978, !tbaa !2342
  br label %do.end802, !dbg !10978

do.end802:                                        ; preds = %do.body790
  br label %do.body803, !dbg !10980

do.body803:                                       ; preds = %do.end802
  %658 = load i32, i32* %B, align 4, !dbg !10981, !tbaa !2342
  %659 = load i32, i32* %A, align 4, !dbg !10981, !tbaa !2342
  %660 = load i32, i32* %C, align 4, !dbg !10981, !tbaa !2342
  %neg804 = xor i32 %660, -1, !dbg !10981
  %or805 = or i32 %659, %neg804, !dbg !10981
  %xor806 = xor i32 %658, %or805, !dbg !10981
  %arrayidx807 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 11, !dbg !10981, !ctir !984
  %661 = load i32, i32* %arrayidx807, align 4, !dbg !10981, !tbaa !2342
  %add808 = add i32 %xor806, %661, !dbg !10981
  %add809 = add i32 %add808, -1120210379, !dbg !10981
  %662 = load i32, i32* %D, align 4, !dbg !10981, !tbaa !2342
  %add810 = add i32 %662, %add809, !dbg !10981
  store i32 %add810, i32* %D, align 4, !dbg !10981, !tbaa !2342
  %663 = load i32, i32* %D, align 4, !dbg !10981, !tbaa !2342
  %shl811 = shl i32 %663, 10, !dbg !10981
  %664 = load i32, i32* %D, align 4, !dbg !10981, !tbaa !2342
  %shr812 = lshr i32 %664, 22, !dbg !10981
  %or813 = or i32 %shl811, %shr812, !dbg !10981
  store i32 %or813, i32* %D, align 4, !dbg !10981, !tbaa !2342
  %665 = load i32, i32* %A, align 4, !dbg !10981, !tbaa !2342
  %666 = load i32, i32* %D, align 4, !dbg !10981, !tbaa !2342
  %add814 = add i32 %666, %665, !dbg !10981
  store i32 %add814, i32* %D, align 4, !dbg !10981, !tbaa !2342
  br label %do.end815, !dbg !10981

do.end815:                                        ; preds = %do.body803
  br label %do.body816, !dbg !10983

do.body816:                                       ; preds = %do.end815
  %667 = load i32, i32* %A, align 4, !dbg !10984, !tbaa !2342
  %668 = load i32, i32* %D, align 4, !dbg !10984, !tbaa !2342
  %669 = load i32, i32* %B, align 4, !dbg !10984, !tbaa !2342
  %neg817 = xor i32 %669, -1, !dbg !10984
  %or818 = or i32 %668, %neg817, !dbg !10984
  %xor819 = xor i32 %667, %or818, !dbg !10984
  %arrayidx820 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 2, !dbg !10984, !ctir !984
  %670 = load i32, i32* %arrayidx820, align 8, !dbg !10984, !tbaa !2342
  %add821 = add i32 %xor819, %670, !dbg !10984
  %add822 = add i32 %add821, 718787259, !dbg !10984
  %671 = load i32, i32* %C, align 4, !dbg !10984, !tbaa !2342
  %add823 = add i32 %671, %add822, !dbg !10984
  store i32 %add823, i32* %C, align 4, !dbg !10984, !tbaa !2342
  %672 = load i32, i32* %C, align 4, !dbg !10984, !tbaa !2342
  %shl824 = shl i32 %672, 15, !dbg !10984
  %673 = load i32, i32* %C, align 4, !dbg !10984, !tbaa !2342
  %shr825 = lshr i32 %673, 17, !dbg !10984
  %or826 = or i32 %shl824, %shr825, !dbg !10984
  store i32 %or826, i32* %C, align 4, !dbg !10984, !tbaa !2342
  %674 = load i32, i32* %D, align 4, !dbg !10984, !tbaa !2342
  %675 = load i32, i32* %C, align 4, !dbg !10984, !tbaa !2342
  %add827 = add i32 %675, %674, !dbg !10984
  store i32 %add827, i32* %C, align 4, !dbg !10984, !tbaa !2342
  br label %do.end828, !dbg !10984

do.end828:                                        ; preds = %do.body816
  br label %do.body829, !dbg !10986

do.body829:                                       ; preds = %do.end828
  %676 = load i32, i32* %D, align 4, !dbg !10987, !tbaa !2342
  %677 = load i32, i32* %C, align 4, !dbg !10987, !tbaa !2342
  %678 = load i32, i32* %A, align 4, !dbg !10987, !tbaa !2342
  %neg830 = xor i32 %678, -1, !dbg !10987
  %or831 = or i32 %677, %neg830, !dbg !10987
  %xor832 = xor i32 %676, %or831, !dbg !10987
  %arrayidx833 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 9, !dbg !10987, !ctir !984
  %679 = load i32, i32* %arrayidx833, align 4, !dbg !10987, !tbaa !2342
  %add834 = add i32 %xor832, %679, !dbg !10987
  %add835 = add i32 %add834, -343485551, !dbg !10987
  %680 = load i32, i32* %B, align 4, !dbg !10987, !tbaa !2342
  %add836 = add i32 %680, %add835, !dbg !10987
  store i32 %add836, i32* %B, align 4, !dbg !10987, !tbaa !2342
  %681 = load i32, i32* %B, align 4, !dbg !10987, !tbaa !2342
  %shl837 = shl i32 %681, 21, !dbg !10987
  %682 = load i32, i32* %B, align 4, !dbg !10987, !tbaa !2342
  %shr838 = lshr i32 %682, 11, !dbg !10987
  %or839 = or i32 %shl837, %shr838, !dbg !10987
  store i32 %or839, i32* %B, align 4, !dbg !10987, !tbaa !2342
  %683 = load i32, i32* %C, align 4, !dbg !10987, !tbaa !2342
  %684 = load i32, i32* %B, align 4, !dbg !10987, !tbaa !2342
  %add840 = add i32 %684, %683, !dbg !10987
  store i32 %add840, i32* %B, align 4, !dbg !10987, !tbaa !2342
  br label %do.end841, !dbg !10987

do.end841:                                        ; preds = %do.body829
  %685 = load i32, i32* %A_save, align 4, !dbg !10989, !tbaa !2342
  %686 = load i32, i32* %A, align 4, !dbg !10990, !tbaa !2342
  %add842 = add i32 %686, %685, !dbg !10990
  store i32 %add842, i32* %A, align 4, !dbg !10990, !tbaa !2342
  %687 = load i32, i32* %B_save, align 4, !dbg !10991, !tbaa !2342
  %688 = load i32, i32* %B, align 4, !dbg !10992, !tbaa !2342
  %add843 = add i32 %688, %687, !dbg !10992
  store i32 %add843, i32* %B, align 4, !dbg !10992, !tbaa !2342
  %689 = load i32, i32* %C_save, align 4, !dbg !10993, !tbaa !2342
  %690 = load i32, i32* %C, align 4, !dbg !10994, !tbaa !2342
  %add844 = add i32 %690, %689, !dbg !10994
  store i32 %add844, i32* %C, align 4, !dbg !10994, !tbaa !2342
  %691 = load i32, i32* %D_save, align 4, !dbg !10995, !tbaa !2342
  %692 = load i32, i32* %D, align 4, !dbg !10996, !tbaa !2342
  %add845 = add i32 %692, %691, !dbg !10996
  store i32 %add845, i32* %D, align 4, !dbg !10996, !tbaa !2342
  br label %while.cond, !dbg !10777, !llvm.loop !10997

while.end:                                        ; preds = %while.cond
  %693 = load i32, i32* %A, align 4, !dbg !10999, !tbaa !2342
  %694 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11000, !tbaa !2355
  %A846 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %694, i32 0, i32 0, !dbg !11001, !ctir !919
  store i32 %693, i32* %A846, align 4, !dbg !11002, !tbaa !10603, !ctir !488
  %695 = load i32, i32* %B, align 4, !dbg !11003, !tbaa !2342
  %696 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11004, !tbaa !2355
  %B847 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %696, i32 0, i32 1, !dbg !11005, !ctir !919
  store i32 %695, i32* %B847, align 4, !dbg !11006, !tbaa !10608, !ctir !488
  %697 = load i32, i32* %C, align 4, !dbg !11007, !tbaa !2342
  %698 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11008, !tbaa !2355
  %C848 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %698, i32 0, i32 2, !dbg !11009, !ctir !919
  store i32 %697, i32* %C848, align 4, !dbg !11010, !tbaa !10612, !ctir !488
  %699 = load i32, i32* %D, align 4, !dbg !11011, !tbaa !2342
  %700 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11012, !tbaa !2355
  %D849 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %700, i32 0, i32 3, !dbg !11013, !ctir !919
  store i32 %699, i32* %D849, align 4, !dbg !11014, !tbaa !10616, !ctir !488
  ret void, !dbg !11015
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @md5_stream(%struct._IO_FILE* %stream, i8* %resblock) #4 !dbg !11016 !ctir !938 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !940
  %resblock.addr = alloca i8*, align 8, !ctir !47
  %buffer = alloca i8*, align 8, !ctir !7
  %ctx = alloca %struct.md5_ctx, align 4, !ctir !919
  %sum = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11017, metadata !DIExpression()), !dbg !11018
  store i8* %resblock, i8** %resblock.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !11019, metadata !DIExpression()), !dbg !11020
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11021, !tbaa !2355
  %1 = load i8*, i8** %resblock.addr, align 8, !dbg !11022, !tbaa !2355
  %call = call i32 @afalg_stream(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i64 0, i64 0), i8* %1, i64 16), !dbg !11023
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 -5, label %sw.bb1
  ], !dbg !11024

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11025
  br label %return, !dbg !11025

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11027
  br label %return, !dbg !11027

sw.epilog:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !11028, metadata !DIExpression()), !dbg !11029
  %call2 = call noalias i8* @malloc(i64 32840) #12, !dbg !11030
  store i8* %call2, i8** %buffer, align 8, !dbg !11029, !tbaa !2355
  %2 = load i8*, i8** %buffer, align 8, !dbg !11031, !tbaa !2355
  %tobool = icmp ne i8* %2, null, !dbg !11031
  br i1 %tobool, label %if.end, label %if.then, !dbg !11033

if.then:                                          ; preds = %sw.epilog
  store i32 1, i32* %retval, align 4, !dbg !11034
  br label %return, !dbg !11034

if.end:                                           ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.md5_ctx* %ctx, metadata !11035, metadata !DIExpression()), !dbg !11036
  call void @md5_init_ctx(%struct.md5_ctx* %ctx) #12, !dbg !11037
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !11038, metadata !DIExpression()), !dbg !11039
  br label %while.body, !dbg !11040

while.body:                                       ; preds = %if.end, %while.end
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11041, metadata !DIExpression()), !dbg !11043
  store i64 0, i64* %sum, align 8, !dbg !11044, !tbaa !2516
  br label %while.body4, !dbg !11045

while.body4:                                      ; preds = %while.body, %if.end18
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11046, !tbaa !2355
  %call5 = call i32 @feof_unlocked(%struct._IO_FILE* %3) #12, !dbg !11046
  %tobool6 = icmp ne i32 %call5, 0, !dbg !11046
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11049

if.then7:                                         ; preds = %while.body4
  br label %process_partial_block, !dbg !11050

if.end8:                                          ; preds = %while.body4
  %4 = load i8*, i8** %buffer, align 8, !dbg !11051, !tbaa !2355
  %5 = load i64, i64* %sum, align 8, !dbg !11051, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !11051
  %6 = load i64, i64* %sum, align 8, !dbg !11051, !tbaa !2516
  %sub = sub i64 32768, %6, !dbg !11051
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11051, !tbaa !2355
  %call9 = call i64 @fread_unlocked(i8* %add.ptr, i64 1, i64 %sub, %struct._IO_FILE* %7), !dbg !11051
  store i64 %call9, i64* %n, align 8, !dbg !11052, !tbaa !2516
  %8 = load i64, i64* %n, align 8, !dbg !11053, !tbaa !2516
  %9 = load i64, i64* %sum, align 8, !dbg !11054, !tbaa !2516
  %add = add i64 %9, %8, !dbg !11054
  store i64 %add, i64* %sum, align 8, !dbg !11054, !tbaa !2516
  %10 = load i64, i64* %sum, align 8, !dbg !11055, !tbaa !2516
  %cmp = icmp eq i64 %10, 32768, !dbg !11057
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !11058

if.then10:                                        ; preds = %if.end8
  br label %while.end, !dbg !11059

if.end11:                                         ; preds = %if.end8
  %11 = load i64, i64* %n, align 8, !dbg !11060, !tbaa !2516
  %cmp12 = icmp eq i64 %11, 0, !dbg !11062
  br i1 %cmp12, label %if.then13, label %if.end18, !dbg !11063

if.then13:                                        ; preds = %if.end11
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11064, !tbaa !2355
  %call14 = call i32 @ferror_unlocked(%struct._IO_FILE* %12) #12, !dbg !11064
  %tobool15 = icmp ne i32 %call14, 0, !dbg !11064
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !11067

if.then16:                                        ; preds = %if.then13
  %13 = load i8*, i8** %buffer, align 8, !dbg !11068, !tbaa !2355
  call void @free(i8* %13) #12, !dbg !11070
  store i32 1, i32* %retval, align 4, !dbg !11071
  br label %return, !dbg !11071

if.end17:                                         ; preds = %if.then13
  br label %process_partial_block, !dbg !11072

if.end18:                                         ; preds = %if.end11
  br label %while.body4, !dbg !11045, !llvm.loop !11073

while.end:                                        ; preds = %if.then10
  %14 = load i8*, i8** %buffer, align 8, !dbg !11075, !tbaa !2355
  call void @md5_process_block(i8* %14, i64 32768, %struct.md5_ctx* %ctx) #12, !dbg !11076
  br label %while.body, !dbg !11040, !llvm.loop !11077

process_partial_block:                            ; preds = %if.end17, %if.then7
  call void @llvm.dbg.label(metadata !11079), !dbg !11080
  %15 = load i64, i64* %sum, align 8, !dbg !11081, !tbaa !2516
  %cmp19 = icmp ugt i64 %15, 0, !dbg !11083
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11084

if.then20:                                        ; preds = %process_partial_block
  %16 = load i8*, i8** %buffer, align 8, !dbg !11085, !tbaa !2355
  %17 = load i64, i64* %sum, align 8, !dbg !11086, !tbaa !2516
  call void @md5_process_bytes(i8* %16, i64 %17, %struct.md5_ctx* %ctx) #12, !dbg !11087
  br label %if.end21, !dbg !11087

if.end21:                                         ; preds = %if.then20, %process_partial_block
  %18 = load i8*, i8** %resblock.addr, align 8, !dbg !11088, !tbaa !2355
  %call22 = call i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %18) #12, !dbg !11089
  %19 = load i8*, i8** %buffer, align 8, !dbg !11090, !tbaa !2355
  call void @free(i8* %19) #12, !dbg !11091
  store i32 0, i32* %retval, align 4, !dbg !11092
  br label %return, !dbg !11092

return:                                           ; preds = %if.end21, %if.then16, %if.then, %sw.bb1, %sw.bb
  %20 = load i32, i32* %retval, align 4, !dbg !11093
  ret i32 %20, !dbg !11093
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @afalg_stream(%struct._IO_FILE* %stream, i8* %alg, i8* %resblock, i64 %hashlen) #4 !dbg !11094 !ctir !990 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !940
  %alg.addr = alloca i8*, align 8, !ctir !87
  %resblock.addr = alloca i8*, align 8, !ctir !47
  %hashlen.addr = alloca i64, align 8, !ctir !992
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11096, metadata !DIExpression()), !dbg !11097
  store i8* %alg, i8** %alg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %alg.addr, metadata !11098, metadata !DIExpression()), !dbg !11099
  store i8* %resblock, i8** %resblock.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !11100, metadata !DIExpression()), !dbg !11101
  store i64 %hashlen, i64* %hashlen.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %hashlen.addr, metadata !11102, metadata !DIExpression()), !dbg !11103
  ret i32 -97, !dbg !11104
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @md5_process_bytes(i8* %buffer, i64 %len, %struct.md5_ctx* %ctx) #4 !dbg !11105 !ctir !982 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !85
  %len.addr = alloca i64, align 8, !ctir !52
  %ctx.addr = alloca %struct.md5_ctx*, align 8, !ctir !918
  %left_over = alloca i64, align 8, !ctir !52
  %add = alloca i64, align 8, !ctir !52
  %left_over52 = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11106, metadata !DIExpression()), !dbg !11107
  store i64 %len, i64* %len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11108, metadata !DIExpression()), !dbg !11109
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !11110, metadata !DIExpression()), !dbg !11111
  %0 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11112, !tbaa !2355
  %buflen = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %0, i32 0, i32 5, !dbg !11114, !ctir !919
  %1 = load i32, i32* %buflen, align 4, !dbg !11114, !tbaa !10626, !ctir !488
  %cmp = icmp ne i32 %1, 0, !dbg !11115
  br i1 %cmp, label %if.then, label %if.end30, !dbg !11116

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %left_over, metadata !11117, metadata !DIExpression()), !dbg !11119
  %2 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11120, !tbaa !2355
  %buflen1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i32 0, i32 5, !dbg !11121, !ctir !919
  %3 = load i32, i32* %buflen1, align 4, !dbg !11121, !tbaa !10626, !ctir !488
  %conv = zext i32 %3 to i64, !dbg !11120
  store i64 %conv, i64* %left_over, align 8, !dbg !11119, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %add, metadata !11122, metadata !DIExpression()), !dbg !11123
  %4 = load i64, i64* %left_over, align 8, !dbg !11124, !tbaa !2516
  %sub = sub i64 128, %4, !dbg !11125
  %5 = load i64, i64* %len.addr, align 8, !dbg !11126, !tbaa !2516
  %cmp2 = icmp ugt i64 %sub, %5, !dbg !11127
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !11128

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %len.addr, align 8, !dbg !11129, !tbaa !2516
  br label %cond.end, !dbg !11128

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %left_over, align 8, !dbg !11130, !tbaa !2516
  %sub4 = sub i64 128, %7, !dbg !11131
  br label %cond.end, !dbg !11128

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %sub4, %cond.false ], !dbg !11128
  store i64 %cond, i64* %add, align 8, !dbg !11123, !tbaa !2516
  %8 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11132, !tbaa !2355
  %buffer5 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %8, i32 0, i32 6, !dbg !11133, !ctir !919
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %buffer5, i64 0, i64 0, !dbg !11134
  %9 = bitcast i32* %arraydecay to i8*, !dbg !11134
  %10 = load i64, i64* %left_over, align 8, !dbg !11135, !tbaa !2516
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !11134, !ctir !7
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !11136, !tbaa !2355
  %12 = load i64, i64* %add, align 8, !dbg !11137, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %11, i64 %12, i1 false), !dbg !11138
  %13 = load i64, i64* %add, align 8, !dbg !11139, !tbaa !2516
  %14 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11140, !tbaa !2355
  %buflen6 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %14, i32 0, i32 5, !dbg !11141, !ctir !919
  %15 = load i32, i32* %buflen6, align 4, !dbg !11142, !tbaa !10626, !ctir !488
  %conv7 = zext i32 %15 to i64, !dbg !11142
  %add8 = add i64 %conv7, %13, !dbg !11142
  %conv9 = trunc i64 %add8 to i32, !dbg !11142
  store i32 %conv9, i32* %buflen6, align 4, !dbg !11142, !tbaa !10626, !ctir !488
  %16 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11143, !tbaa !2355
  %buflen10 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %16, i32 0, i32 5, !dbg !11145, !ctir !919
  %17 = load i32, i32* %buflen10, align 4, !dbg !11145, !tbaa !10626, !ctir !488
  %cmp11 = icmp ugt i32 %17, 64, !dbg !11146
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !11147

if.then13:                                        ; preds = %cond.end
  %18 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11148, !tbaa !2355
  %buffer14 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %18, i32 0, i32 6, !dbg !11150, !ctir !919
  %arraydecay15 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer14, i64 0, i64 0, !dbg !11148
  %19 = bitcast i32* %arraydecay15 to i8*, !dbg !11148
  %20 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11151, !tbaa !2355
  %buflen16 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %20, i32 0, i32 5, !dbg !11152, !ctir !919
  %21 = load i32, i32* %buflen16, align 4, !dbg !11152, !tbaa !10626, !ctir !488
  %and = and i32 %21, -64, !dbg !11153
  %conv17 = zext i32 %and to i64, !dbg !11151
  %22 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11154, !tbaa !2355
  call void @md5_process_block(i8* %19, i64 %conv17, %struct.md5_ctx* %22) #12, !dbg !11155
  %23 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11156, !tbaa !2355
  %buflen18 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %23, i32 0, i32 5, !dbg !11157, !ctir !919
  %24 = load i32, i32* %buflen18, align 4, !dbg !11158, !tbaa !10626, !ctir !488
  %and19 = and i32 %24, 63, !dbg !11158
  store i32 %and19, i32* %buflen18, align 4, !dbg !11158, !tbaa !10626, !ctir !488
  %25 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11159, !tbaa !2355
  %buffer20 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %25, i32 0, i32 6, !dbg !11160, !ctir !919
  %arraydecay21 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer20, i64 0, i64 0, !dbg !11161
  %26 = bitcast i32* %arraydecay21 to i8*, !dbg !11161
  %27 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11162, !tbaa !2355
  %buffer22 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %27, i32 0, i32 6, !dbg !11163, !ctir !919
  %arraydecay23 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer22, i64 0, i64 0, !dbg !11164
  %28 = bitcast i32* %arraydecay23 to i8*, !dbg !11164
  %29 = load i64, i64* %left_over, align 8, !dbg !11165, !tbaa !2516
  %30 = load i64, i64* %add, align 8, !dbg !11166, !tbaa !2516
  %add24 = add i64 %29, %30, !dbg !11167
  %and25 = and i64 %add24, -64, !dbg !11168
  %arrayidx26 = getelementptr inbounds i8, i8* %28, i64 %and25, !dbg !11164, !ctir !7
  %31 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11169, !tbaa !2355
  %buflen27 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %31, i32 0, i32 5, !dbg !11170, !ctir !919
  %32 = load i32, i32* %buflen27, align 4, !dbg !11170, !tbaa !10626, !ctir !488
  %conv28 = zext i32 %32 to i64, !dbg !11169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 1 %arrayidx26, i64 %conv28, i1 false), !dbg !11161
  br label %if.end, !dbg !11171

if.end:                                           ; preds = %if.then13, %cond.end
  %33 = load i8*, i8** %buffer.addr, align 8, !dbg !11172, !tbaa !2355
  %34 = load i64, i64* %add, align 8, !dbg !11173, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11174
  store i8* %add.ptr, i8** %buffer.addr, align 8, !dbg !11175, !tbaa !2355
  %35 = load i64, i64* %add, align 8, !dbg !11176, !tbaa !2516
  %36 = load i64, i64* %len.addr, align 8, !dbg !11177, !tbaa !2516
  %sub29 = sub i64 %36, %35, !dbg !11177
  store i64 %sub29, i64* %len.addr, align 8, !dbg !11177, !tbaa !2516
  br label %if.end30, !dbg !11178

if.end30:                                         ; preds = %if.end, %entry
  %37 = load i64, i64* %len.addr, align 8, !dbg !11179, !tbaa !2516
  %cmp31 = icmp uge i64 %37, 64, !dbg !11181
  br i1 %cmp31, label %if.then33, label %if.end48, !dbg !11182

if.then33:                                        ; preds = %if.end30
  %38 = load i8*, i8** %buffer.addr, align 8, !dbg !11183, !tbaa !2355
  %39 = ptrtoint i8* %38 to i64, !dbg !11183
  %rem = urem i64 %39, 4, !dbg !11183
  %cmp34 = icmp ne i64 %rem, 0, !dbg !11183
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !11186

if.then36:                                        ; preds = %if.then33
  br label %while.cond, !dbg !11187

while.cond:                                       ; preds = %while.body, %if.then36
  %40 = load i64, i64* %len.addr, align 8, !dbg !11188, !tbaa !2516
  %cmp37 = icmp ugt i64 %40, 64, !dbg !11189
  br i1 %cmp37, label %while.body, label %while.end, !dbg !11187

while.body:                                       ; preds = %while.cond
  %41 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11190, !tbaa !2355
  %buffer39 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %41, i32 0, i32 6, !dbg !11192, !ctir !919
  %arraydecay40 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer39, i64 0, i64 0, !dbg !11193
  %42 = bitcast i32* %arraydecay40 to i8*, !dbg !11193
  %43 = load i8*, i8** %buffer.addr, align 8, !dbg !11194, !tbaa !2355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 1 %43, i64 64, i1 false), !dbg !11193
  %44 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11195, !tbaa !2355
  call void @md5_process_block(i8* %42, i64 64, %struct.md5_ctx* %44) #12, !dbg !11196
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !11197, !tbaa !2355
  %add.ptr41 = getelementptr inbounds i8, i8* %45, i64 64, !dbg !11198
  store i8* %add.ptr41, i8** %buffer.addr, align 8, !dbg !11199, !tbaa !2355
  %46 = load i64, i64* %len.addr, align 8, !dbg !11200, !tbaa !2516
  %sub42 = sub i64 %46, 64, !dbg !11200
  store i64 %sub42, i64* %len.addr, align 8, !dbg !11200, !tbaa !2516
  br label %while.cond, !dbg !11187, !llvm.loop !11201

while.end:                                        ; preds = %while.cond
  br label %if.end47, !dbg !11187

if.else:                                          ; preds = %if.then33
  %47 = load i8*, i8** %buffer.addr, align 8, !dbg !11203, !tbaa !2355
  %48 = load i64, i64* %len.addr, align 8, !dbg !11205, !tbaa !2516
  %and43 = and i64 %48, -64, !dbg !11206
  %49 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11207, !tbaa !2355
  call void @md5_process_block(i8* %47, i64 %and43, %struct.md5_ctx* %49) #12, !dbg !11208
  %50 = load i8*, i8** %buffer.addr, align 8, !dbg !11209, !tbaa !2355
  %51 = load i64, i64* %len.addr, align 8, !dbg !11210, !tbaa !2516
  %and44 = and i64 %51, -64, !dbg !11211
  %add.ptr45 = getelementptr inbounds i8, i8* %50, i64 %and44, !dbg !11212
  store i8* %add.ptr45, i8** %buffer.addr, align 8, !dbg !11213, !tbaa !2355
  %52 = load i64, i64* %len.addr, align 8, !dbg !11214, !tbaa !2516
  %and46 = and i64 %52, 63, !dbg !11214
  store i64 %and46, i64* %len.addr, align 8, !dbg !11214, !tbaa !2516
  br label %if.end47

if.end47:                                         ; preds = %if.else, %while.end
  br label %if.end48, !dbg !11215

if.end48:                                         ; preds = %if.end47, %if.end30
  %53 = load i64, i64* %len.addr, align 8, !dbg !11216, !tbaa !2516
  %cmp49 = icmp ugt i64 %53, 0, !dbg !11218
  br i1 %cmp49, label %if.then51, label %if.end72, !dbg !11219

if.then51:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i64* %left_over52, metadata !11220, metadata !DIExpression()), !dbg !11222
  %54 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11223, !tbaa !2355
  %buflen53 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %54, i32 0, i32 5, !dbg !11224, !ctir !919
  %55 = load i32, i32* %buflen53, align 4, !dbg !11224, !tbaa !10626, !ctir !488
  %conv54 = zext i32 %55 to i64, !dbg !11223
  store i64 %conv54, i64* %left_over52, align 8, !dbg !11222, !tbaa !2516
  %56 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11225, !tbaa !2355
  %buffer55 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %56, i32 0, i32 6, !dbg !11226, !ctir !919
  %arraydecay56 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer55, i64 0, i64 0, !dbg !11227
  %57 = bitcast i32* %arraydecay56 to i8*, !dbg !11227
  %58 = load i64, i64* %left_over52, align 8, !dbg !11228, !tbaa !2516
  %arrayidx57 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11227, !ctir !7
  %59 = load i8*, i8** %buffer.addr, align 8, !dbg !11229, !tbaa !2355
  %60 = load i64, i64* %len.addr, align 8, !dbg !11230, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx57, i8* align 1 %59, i64 %60, i1 false), !dbg !11231
  %61 = load i64, i64* %len.addr, align 8, !dbg !11232, !tbaa !2516
  %62 = load i64, i64* %left_over52, align 8, !dbg !11233, !tbaa !2516
  %add58 = add i64 %62, %61, !dbg !11233
  store i64 %add58, i64* %left_over52, align 8, !dbg !11233, !tbaa !2516
  %63 = load i64, i64* %left_over52, align 8, !dbg !11234, !tbaa !2516
  %cmp59 = icmp uge i64 %63, 64, !dbg !11236
  br i1 %cmp59, label %if.then61, label %if.end69, !dbg !11237

if.then61:                                        ; preds = %if.then51
  %64 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11238, !tbaa !2355
  %buffer62 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %64, i32 0, i32 6, !dbg !11240, !ctir !919
  %arraydecay63 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer62, i64 0, i64 0, !dbg !11238
  %65 = bitcast i32* %arraydecay63 to i8*, !dbg !11238
  %66 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11241, !tbaa !2355
  call void @md5_process_block(i8* %65, i64 64, %struct.md5_ctx* %66) #12, !dbg !11242
  %67 = load i64, i64* %left_over52, align 8, !dbg !11243, !tbaa !2516
  %sub64 = sub i64 %67, 64, !dbg !11243
  store i64 %sub64, i64* %left_over52, align 8, !dbg !11243, !tbaa !2516
  %68 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11244, !tbaa !2355
  %buffer65 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %68, i32 0, i32 6, !dbg !11245, !ctir !919
  %arraydecay66 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer65, i64 0, i64 0, !dbg !11246
  %69 = bitcast i32* %arraydecay66 to i8*, !dbg !11246
  %70 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11247, !tbaa !2355
  %buffer67 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %70, i32 0, i32 6, !dbg !11248, !ctir !919
  %arrayidx68 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer67, i64 0, i64 16, !dbg !11247, !ctir !502
  %71 = bitcast i32* %arrayidx68 to i8*, !dbg !11246
  %72 = load i64, i64* %left_over52, align 8, !dbg !11249, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %71, i64 %72, i1 false), !dbg !11246
  br label %if.end69, !dbg !11250

if.end69:                                         ; preds = %if.then61, %if.then51
  %73 = load i64, i64* %left_over52, align 8, !dbg !11251, !tbaa !2516
  %conv70 = trunc i64 %73 to i32, !dbg !11251
  %74 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11252, !tbaa !2355
  %buflen71 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %74, i32 0, i32 5, !dbg !11253, !ctir !919
  store i32 %conv70, i32* %buflen71, align 4, !dbg !11254, !tbaa !10626, !ctir !488
  br label %if.end72, !dbg !11255

if.end72:                                         ; preds = %if.end69, %if.end48
  ret void, !dbg !11256
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @md5_buffer(i8* %buffer, i64 %len, i8* %resblock) #4 !dbg !11257 !ctir !980 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !87
  %len.addr = alloca i64, align 8, !ctir !52
  %resblock.addr = alloca i8*, align 8, !ctir !47
  %ctx = alloca %struct.md5_ctx, align 4, !ctir !919
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11258, metadata !DIExpression()), !dbg !11259
  store i64 %len, i64* %len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11260, metadata !DIExpression()), !dbg !11261
  store i8* %resblock, i8** %resblock.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !11262, metadata !DIExpression()), !dbg !11263
  call void @llvm.dbg.declare(metadata %struct.md5_ctx* %ctx, metadata !11264, metadata !DIExpression()), !dbg !11265
  call void @md5_init_ctx(%struct.md5_ctx* %ctx) #12, !dbg !11266
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !11267, !tbaa !2355
  %1 = load i64, i64* %len.addr, align 8, !dbg !11268, !tbaa !2516
  call void @md5_process_bytes(i8* %0, i64 %1, %struct.md5_ctx* %ctx) #12, !dbg !11269
  %2 = load i8*, i8** %resblock.addr, align 8, !dbg !11270, !tbaa !2355
  %call = call i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %2) #12, !dbg !11271
  ret i8* %call, !dbg !11272
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !11273 !ctir !1482 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %offset.addr = alloca i64, align 8, !ctir !1484
  %len.addr = alloca i64, align 8, !ctir !1484
  %advice.addr = alloca i32, align 4, !ctir !1485
  %__x = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11275, metadata !DIExpression()), !dbg !11276
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11277, metadata !DIExpression()), !dbg !11278
  store i64 %len, i64* %len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11279, metadata !DIExpression()), !dbg !11280
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11281, metadata !DIExpression()), !dbg !11282
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !11283, metadata !DIExpression()), !dbg !11285
  %0 = load i32, i32* %fd.addr, align 4, !dbg !11285, !tbaa !2342
  %1 = load i64, i64* %offset.addr, align 8, !dbg !11285, !tbaa !2516
  %2 = load i64, i64* %len.addr, align 8, !dbg !11285, !tbaa !2516
  %3 = load i32, i32* %advice.addr, align 4, !dbg !11285, !tbaa !2507
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #12, !dbg !11285
  store i32 %call, i32* %__x, align 4, !dbg !11285, !tbaa !2342
  %4 = load i32, i32* %__x, align 4, !dbg !11285, !tbaa !2342
  ret void, !dbg !11286
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !11287 !ctir !1486 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !1488
  %advice.addr = alloca i32, align 4, !ctir !1485
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !11288, metadata !DIExpression()), !dbg !11289
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11290, metadata !DIExpression()), !dbg !11291
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11292, !tbaa !2355
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !11292
  br i1 %tobool, label %if.then, label %if.end, !dbg !11294

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11295, !tbaa !2355
  %call = call i32 @fileno(%struct._IO_FILE* %1) #12, !dbg !11296
  %2 = load i32, i32* %advice.addr, align 4, !dbg !11297, !tbaa !2507
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !11298
  br label %if.end, !dbg !11298

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11299
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @filevercmp(i8* %s1, i8* %s2) #9 !dbg !11300 !ctir !474 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s2.addr = alloca i8*, align 8, !ctir !87
  %s1_pos = alloca i8*, align 8, !ctir !87
  %s2_pos = alloca i8*, align 8, !ctir !87
  %s1_suffix = alloca i8*, align 8, !ctir !87
  %s2_suffix = alloca i8*, align 8, !ctir !87
  %s1_len = alloca i64, align 8, !ctir !52
  %s2_len = alloca i64, align 8, !ctir !52
  %result = alloca i32, align 4, !ctir !5
  %simple_cmp = alloca i32, align 4, !ctir !5
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11302, metadata !DIExpression()), !dbg !11303
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11304, metadata !DIExpression()), !dbg !11305
  call void @llvm.dbg.declare(metadata i8** %s1_pos, metadata !11306, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.declare(metadata i8** %s2_pos, metadata !11308, metadata !DIExpression()), !dbg !11309
  call void @llvm.dbg.declare(metadata i8** %s1_suffix, metadata !11310, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.declare(metadata i8** %s2_suffix, metadata !11312, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.declare(metadata i64* %s1_len, metadata !11314, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.declare(metadata i64* %s2_len, metadata !11316, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11318, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.declare(metadata i32* %simple_cmp, metadata !11320, metadata !DIExpression()), !dbg !11321
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11322, !tbaa !2355
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !11323, !tbaa !2355
  %call = call i32 @strcmp(i8* %0, i8* %1) #14, !dbg !11324
  store i32 %call, i32* %simple_cmp, align 4, !dbg !11321, !tbaa !2342
  %2 = load i32, i32* %simple_cmp, align 4, !dbg !11325, !tbaa !2342
  %cmp = icmp eq i32 %2, 0, !dbg !11327
  br i1 %cmp, label %if.then, label %if.end, !dbg !11328

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11329
  br label %return, !dbg !11329

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s1.addr, align 8, !dbg !11330, !tbaa !2355
  %4 = load i8, i8* %3, align 1, !dbg !11332, !tbaa !2507, !ctir !88
  %tobool = icmp ne i8 %4, 0, !dbg !11332
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11333

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !11334
  br label %return, !dbg !11334

if.end2:                                          ; preds = %if.end
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !11335, !tbaa !2355
  %6 = load i8, i8* %5, align 1, !dbg !11337, !tbaa !2507, !ctir !88
  %tobool3 = icmp ne i8 %6, 0, !dbg !11337
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11338

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !11339
  br label %return, !dbg !11339

if.end5:                                          ; preds = %if.end2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11340, !tbaa !2355
  %call6 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i64 0, i64 0), i8* %7) #14, !dbg !11342
  %cmp7 = icmp eq i32 0, %call6, !dbg !11343
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11344

if.then8:                                         ; preds = %if.end5
  store i32 -1, i32* %retval, align 4, !dbg !11345
  br label %return, !dbg !11345

if.end9:                                          ; preds = %if.end5
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !11346, !tbaa !2355
  %call10 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i64 0, i64 0), i8* %8) #14, !dbg !11348
  %cmp11 = icmp eq i32 0, %call10, !dbg !11349
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11350

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !11351
  br label %return, !dbg !11351

if.end13:                                         ; preds = %if.end9
  %9 = load i8*, i8** %s1.addr, align 8, !dbg !11352, !tbaa !2355
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.200, i64 0, i64 0), i8* %9) #14, !dbg !11354
  %cmp15 = icmp eq i32 0, %call14, !dbg !11355
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11356

if.then16:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !11357
  br label %return, !dbg !11357

if.end17:                                         ; preds = %if.end13
  %10 = load i8*, i8** %s2.addr, align 8, !dbg !11358, !tbaa !2355
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.200, i64 0, i64 0), i8* %10) #14, !dbg !11360
  %cmp19 = icmp eq i32 0, %call18, !dbg !11361
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11362

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !11363
  br label %return, !dbg !11363

if.end21:                                         ; preds = %if.end17
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !11364, !tbaa !2355
  %12 = load i8, i8* %11, align 1, !dbg !11366, !tbaa !2507, !ctir !88
  %conv = sext i8 %12 to i32, !dbg !11366
  %cmp22 = icmp eq i32 %conv, 46, !dbg !11367
  br i1 %cmp22, label %land.lhs.true, label %if.end28, !dbg !11368

land.lhs.true:                                    ; preds = %if.end21
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !11369, !tbaa !2355
  %14 = load i8, i8* %13, align 1, !dbg !11370, !tbaa !2507, !ctir !88
  %conv24 = sext i8 %14 to i32, !dbg !11370
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !11371
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11372

if.then27:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !11373
  br label %return, !dbg !11373

if.end28:                                         ; preds = %land.lhs.true, %if.end21
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !11374, !tbaa !2355
  %16 = load i8, i8* %15, align 1, !dbg !11376, !tbaa !2507, !ctir !88
  %conv29 = sext i8 %16 to i32, !dbg !11376
  %cmp30 = icmp ne i32 %conv29, 46, !dbg !11377
  br i1 %cmp30, label %land.lhs.true32, label %if.end37, !dbg !11378

land.lhs.true32:                                  ; preds = %if.end28
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !11379, !tbaa !2355
  %18 = load i8, i8* %17, align 1, !dbg !11380, !tbaa !2507, !ctir !88
  %conv33 = sext i8 %18 to i32, !dbg !11380
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !11381
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11382

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %retval, align 4, !dbg !11383
  br label %return, !dbg !11383

if.end37:                                         ; preds = %land.lhs.true32, %if.end28
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11384, !tbaa !2355
  %20 = load i8, i8* %19, align 1, !dbg !11386, !tbaa !2507, !ctir !88
  %conv38 = sext i8 %20 to i32, !dbg !11386
  %cmp39 = icmp eq i32 %conv38, 46, !dbg !11387
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !11388

land.lhs.true41:                                  ; preds = %if.end37
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !11389, !tbaa !2355
  %22 = load i8, i8* %21, align 1, !dbg !11390, !tbaa !2507, !ctir !88
  %conv42 = sext i8 %22 to i32, !dbg !11390
  %cmp43 = icmp eq i32 %conv42, 46, !dbg !11391
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11392

if.then45:                                        ; preds = %land.lhs.true41
  %23 = load i8*, i8** %s1.addr, align 8, !dbg !11393, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11393
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11393, !tbaa !2355
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11395, !tbaa !2355
  %incdec.ptr46 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11395
  store i8* %incdec.ptr46, i8** %s2.addr, align 8, !dbg !11395, !tbaa !2355
  br label %if.end47, !dbg !11396

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.end37
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !11397, !tbaa !2355
  store i8* %25, i8** %s1_pos, align 8, !dbg !11398, !tbaa !2355
  %26 = load i8*, i8** %s2.addr, align 8, !dbg !11399, !tbaa !2355
  store i8* %26, i8** %s2_pos, align 8, !dbg !11400, !tbaa !2355
  %call48 = call i8* @match_suffix(i8** %s1_pos), !dbg !11401
  store i8* %call48, i8** %s1_suffix, align 8, !dbg !11402, !tbaa !2355
  %call49 = call i8* @match_suffix(i8** %s2_pos), !dbg !11403
  store i8* %call49, i8** %s2_suffix, align 8, !dbg !11404, !tbaa !2355
  %27 = load i8*, i8** %s1_suffix, align 8, !dbg !11405, !tbaa !2355
  %tobool50 = icmp ne i8* %27, null, !dbg !11405
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !11405

cond.true:                                        ; preds = %if.end47
  %28 = load i8*, i8** %s1_suffix, align 8, !dbg !11406, !tbaa !2355
  br label %cond.end, !dbg !11405

cond.false:                                       ; preds = %if.end47
  %29 = load i8*, i8** %s1_pos, align 8, !dbg !11407, !tbaa !2355
  br label %cond.end, !dbg !11405

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %28, %cond.true ], [ %29, %cond.false ], !dbg !11405
  %30 = load i8*, i8** %s1.addr, align 8, !dbg !11408, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64, !dbg !11409
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !11409
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11409
  store i64 %sub.ptr.sub, i64* %s1_len, align 8, !dbg !11410, !tbaa !2516
  %31 = load i8*, i8** %s2_suffix, align 8, !dbg !11411, !tbaa !2355
  %tobool51 = icmp ne i8* %31, null, !dbg !11411
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !11411

cond.true52:                                      ; preds = %cond.end
  %32 = load i8*, i8** %s2_suffix, align 8, !dbg !11412, !tbaa !2355
  br label %cond.end54, !dbg !11411

cond.false53:                                     ; preds = %cond.end
  %33 = load i8*, i8** %s2_pos, align 8, !dbg !11413, !tbaa !2355
  br label %cond.end54, !dbg !11411

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %32, %cond.true52 ], [ %33, %cond.false53 ], !dbg !11411
  %34 = load i8*, i8** %s2.addr, align 8, !dbg !11414, !tbaa !2355
  %sub.ptr.lhs.cast56 = ptrtoint i8* %cond55 to i64, !dbg !11415
  %sub.ptr.rhs.cast57 = ptrtoint i8* %34 to i64, !dbg !11415
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57, !dbg !11415
  store i64 %sub.ptr.sub58, i64* %s2_len, align 8, !dbg !11416, !tbaa !2516
  %35 = load i8*, i8** %s1_suffix, align 8, !dbg !11417, !tbaa !2355
  %tobool59 = icmp ne i8* %35, null, !dbg !11417
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false, !dbg !11419

lor.lhs.false:                                    ; preds = %cond.end54
  %36 = load i8*, i8** %s2_suffix, align 8, !dbg !11420, !tbaa !2355
  %tobool60 = icmp ne i8* %36, null, !dbg !11420
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !11421

land.lhs.true61:                                  ; preds = %lor.lhs.false, %cond.end54
  %37 = load i64, i64* %s1_len, align 8, !dbg !11422, !tbaa !2516
  %38 = load i64, i64* %s2_len, align 8, !dbg !11423, !tbaa !2516
  %cmp62 = icmp eq i64 %37, %38, !dbg !11424
  br i1 %cmp62, label %land.lhs.true64, label %if.end75, !dbg !11425

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !11426, !tbaa !2355
  %40 = load i8*, i8** %s2.addr, align 8, !dbg !11427, !tbaa !2355
  %41 = load i64, i64* %s1_len, align 8, !dbg !11428, !tbaa !2516
  %call65 = call i32 @strncmp(i8* %39, i8* %40, i64 %41) #14, !dbg !11429
  %cmp66 = icmp eq i32 0, %call65, !dbg !11430
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !11431

if.then68:                                        ; preds = %land.lhs.true64
  %42 = load i8*, i8** %s1_pos, align 8, !dbg !11432, !tbaa !2355
  %43 = load i8*, i8** %s1.addr, align 8, !dbg !11434, !tbaa !2355
  %sub.ptr.lhs.cast69 = ptrtoint i8* %42 to i64, !dbg !11435
  %sub.ptr.rhs.cast70 = ptrtoint i8* %43 to i64, !dbg !11435
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !11435
  store i64 %sub.ptr.sub71, i64* %s1_len, align 8, !dbg !11436, !tbaa !2516
  %44 = load i8*, i8** %s2_pos, align 8, !dbg !11437, !tbaa !2355
  %45 = load i8*, i8** %s2.addr, align 8, !dbg !11438, !tbaa !2355
  %sub.ptr.lhs.cast72 = ptrtoint i8* %44 to i64, !dbg !11439
  %sub.ptr.rhs.cast73 = ptrtoint i8* %45 to i64, !dbg !11439
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !11439
  store i64 %sub.ptr.sub74, i64* %s2_len, align 8, !dbg !11440, !tbaa !2516
  br label %if.end75, !dbg !11441

if.end75:                                         ; preds = %if.then68, %land.lhs.true64, %land.lhs.true61, %lor.lhs.false
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !11442, !tbaa !2355
  %47 = load i64, i64* %s1_len, align 8, !dbg !11443, !tbaa !2516
  %48 = load i8*, i8** %s2.addr, align 8, !dbg !11444, !tbaa !2355
  %49 = load i64, i64* %s2_len, align 8, !dbg !11445, !tbaa !2516
  %call76 = call i32 @verrevcmp(i8* %46, i64 %47, i8* %48, i64 %49) #14, !dbg !11446
  store i32 %call76, i32* %result, align 4, !dbg !11447, !tbaa !2342
  %50 = load i32, i32* %result, align 4, !dbg !11448, !tbaa !2342
  %cmp77 = icmp eq i32 %50, 0, !dbg !11449
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !11448

cond.true79:                                      ; preds = %if.end75
  %51 = load i32, i32* %simple_cmp, align 4, !dbg !11450, !tbaa !2342
  br label %cond.end81, !dbg !11448

cond.false80:                                     ; preds = %if.end75
  %52 = load i32, i32* %result, align 4, !dbg !11451, !tbaa !2342
  br label %cond.end81, !dbg !11448

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ %51, %cond.true79 ], [ %52, %cond.false80 ], !dbg !11448
  store i32 %cond82, i32* %retval, align 4, !dbg !11452
  br label %return, !dbg !11452

return:                                           ; preds = %cond.end81, %if.then36, %if.then27, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !11453
  ret i32 %53, !dbg !11453
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @match_suffix(i8** %str) #4 !dbg !11454 !ctir !1531 {
entry:
  %str.addr = alloca i8**, align 8, !ctir !371
  %match = alloca i8*, align 8, !ctir !87
  %read_alpha = alloca i8, align 1, !ctir !102
  store i8** %str, i8*** %str.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.declare(metadata i8** %match, metadata !11457, metadata !DIExpression()), !dbg !11458
  store i8* null, i8** %match, align 8, !dbg !11458, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %read_alpha, metadata !11459, metadata !DIExpression()), !dbg !11460
  store i8 0, i8* %read_alpha, align 1, !dbg !11460, !tbaa !2499
  br label %while.cond, !dbg !11461

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !11462, !tbaa !2355
  %1 = load i8*, i8** %0, align 8, !dbg !11463, !tbaa !2355, !ctir !87
  %2 = load i8, i8* %1, align 1, !dbg !11464, !tbaa !2507, !ctir !88
  %tobool = icmp ne i8 %2, 0, !dbg !11461
  br i1 %tobool, label %while.body, label %while.end, !dbg !11461

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %read_alpha, align 1, !dbg !11465, !tbaa !2499
  %tobool1 = trunc i8 %3 to i1, !dbg !11465
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11468

if.then:                                          ; preds = %while.body
  store i8 0, i8* %read_alpha, align 1, !dbg !11469, !tbaa !2499
  %4 = load i8**, i8*** %str.addr, align 8, !dbg !11471, !tbaa !2355
  %5 = load i8*, i8** %4, align 8, !dbg !11473, !tbaa !2355, !ctir !87
  %6 = load i8, i8* %5, align 1, !dbg !11474, !tbaa !2507, !ctir !88
  %conv = sext i8 %6 to i32, !dbg !11474
  %call = call zeroext i1 @c_isalpha(i32 %conv), !dbg !11475
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !11476

land.lhs.true:                                    ; preds = %if.then
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !11477, !tbaa !2355
  %8 = load i8*, i8** %7, align 8, !dbg !11478, !tbaa !2355, !ctir !87
  %9 = load i8, i8* %8, align 1, !dbg !11479, !tbaa !2507, !ctir !88
  %conv2 = sext i8 %9 to i32, !dbg !11479
  %cmp = icmp ne i32 126, %conv2, !dbg !11480
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11481

if.then4:                                         ; preds = %land.lhs.true
  store i8* null, i8** %match, align 8, !dbg !11482, !tbaa !2355
  br label %if.end, !dbg !11483

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end22, !dbg !11484

if.else:                                          ; preds = %while.body
  %10 = load i8**, i8*** %str.addr, align 8, !dbg !11485, !tbaa !2355
  %11 = load i8*, i8** %10, align 8, !dbg !11487, !tbaa !2355, !ctir !87
  %12 = load i8, i8* %11, align 1, !dbg !11488, !tbaa !2507, !ctir !88
  %conv5 = sext i8 %12 to i32, !dbg !11488
  %cmp6 = icmp eq i32 46, %conv5, !dbg !11489
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !11490

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %read_alpha, align 1, !dbg !11491, !tbaa !2499
  %13 = load i8*, i8** %match, align 8, !dbg !11493, !tbaa !2355
  %tobool9 = icmp ne i8* %13, null, !dbg !11493
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11495

if.then10:                                        ; preds = %if.then8
  %14 = load i8**, i8*** %str.addr, align 8, !dbg !11496, !tbaa !2355
  %15 = load i8*, i8** %14, align 8, !dbg !11497, !tbaa !2355, !ctir !87
  store i8* %15, i8** %match, align 8, !dbg !11498, !tbaa !2355
  br label %if.end11, !dbg !11499

if.end11:                                         ; preds = %if.then10, %if.then8
  br label %if.end21, !dbg !11500

if.else12:                                        ; preds = %if.else
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !11501, !tbaa !2355
  %17 = load i8*, i8** %16, align 8, !dbg !11503, !tbaa !2355, !ctir !87
  %18 = load i8, i8* %17, align 1, !dbg !11504, !tbaa !2507, !ctir !88
  %conv13 = sext i8 %18 to i32, !dbg !11504
  %call14 = call zeroext i1 @c_isalnum(i32 %conv13), !dbg !11505
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !11506

land.lhs.true15:                                  ; preds = %if.else12
  %19 = load i8**, i8*** %str.addr, align 8, !dbg !11507, !tbaa !2355
  %20 = load i8*, i8** %19, align 8, !dbg !11508, !tbaa !2355, !ctir !87
  %21 = load i8, i8* %20, align 1, !dbg !11509, !tbaa !2507, !ctir !88
  %conv16 = sext i8 %21 to i32, !dbg !11509
  %cmp17 = icmp ne i32 126, %conv16, !dbg !11510
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11511

if.then19:                                        ; preds = %land.lhs.true15
  store i8* null, i8** %match, align 8, !dbg !11512, !tbaa !2355
  br label %if.end20, !dbg !11513

if.end20:                                         ; preds = %if.then19, %land.lhs.true15, %if.else12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !11514, !tbaa !2355
  %23 = load i8*, i8** %22, align 8, !dbg !11515, !tbaa !2355, !ctir !87
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11515
  store i8* %incdec.ptr, i8** %22, align 8, !dbg !11515, !tbaa !2355, !ctir !87
  br label %while.cond, !dbg !11461, !llvm.loop !11516

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %match, align 8, !dbg !11518, !tbaa !2355
  ret i8* %24, !dbg !11519
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @verrevcmp(i8* %s1, i64 %s1_len, i8* %s2, i64 %s2_len) #9 !dbg !11520 !ctir !1533 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s1_len.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !87
  %s2_len.addr = alloca i64, align 8, !ctir !52
  %s1_pos = alloca i64, align 8, !ctir !52
  %s2_pos = alloca i64, align 8, !ctir !52
  %first_diff = alloca i32, align 4, !ctir !5
  %s1_c = alloca i32, align 4, !ctir !5
  %s2_c = alloca i32, align 4, !ctir !5
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  store i64 %s1_len, i64* %s1_len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1_len.addr, metadata !11523, metadata !DIExpression()), !dbg !11524
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11525, metadata !DIExpression()), !dbg !11526
  store i64 %s2_len, i64* %s2_len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2_len.addr, metadata !11527, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.declare(metadata i64* %s1_pos, metadata !11529, metadata !DIExpression()), !dbg !11530
  store i64 0, i64* %s1_pos, align 8, !dbg !11530, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2_pos, metadata !11531, metadata !DIExpression()), !dbg !11532
  store i64 0, i64* %s2_pos, align 8, !dbg !11532, !tbaa !2516
  br label %while.cond, !dbg !11533

while.cond:                                       ; preds = %if.end77, %entry
  %0 = load i64, i64* %s1_pos, align 8, !dbg !11534, !tbaa !2516
  %1 = load i64, i64* %s1_len.addr, align 8, !dbg !11535, !tbaa !2516
  %cmp = icmp ult i64 %0, %1, !dbg !11536
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11537

lor.rhs:                                          ; preds = %while.cond
  %2 = load i64, i64* %s2_pos, align 8, !dbg !11538, !tbaa !2516
  %3 = load i64, i64* %s2_len.addr, align 8, !dbg !11539, !tbaa !2516
  %cmp1 = icmp ult i64 %2, %3, !dbg !11540
  br label %lor.end, !dbg !11537

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end78, !dbg !11533

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %first_diff, metadata !11541, metadata !DIExpression()), !dbg !11543
  store i32 0, i32* %first_diff, align 4, !dbg !11543, !tbaa !2342
  br label %while.cond2, !dbg !11544

while.cond2:                                      ; preds = %if.end, %while.body
  %5 = load i64, i64* %s1_pos, align 8, !dbg !11545, !tbaa !2516
  %6 = load i64, i64* %s1_len.addr, align 8, !dbg !11546, !tbaa !2516
  %cmp3 = icmp ult i64 %5, %6, !dbg !11547
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs4, !dbg !11548

land.lhs.true:                                    ; preds = %while.cond2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11549, !tbaa !2355
  %8 = load i64, i64* %s1_pos, align 8, !dbg !11550, !tbaa !2516
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !11549, !ctir !87
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11549, !tbaa !2507
  %conv = sext i8 %9 to i32, !dbg !11549
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11551
  br i1 %call, label %lor.rhs4, label %lor.end10, !dbg !11552

lor.rhs4:                                         ; preds = %land.lhs.true, %while.cond2
  %10 = load i64, i64* %s2_pos, align 8, !dbg !11553, !tbaa !2516
  %11 = load i64, i64* %s2_len.addr, align 8, !dbg !11554, !tbaa !2516
  %cmp5 = icmp ult i64 %10, %11, !dbg !11555
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !11556

land.rhs:                                         ; preds = %lor.rhs4
  %12 = load i8*, i8** %s2.addr, align 8, !dbg !11557, !tbaa !2355
  %13 = load i64, i64* %s2_pos, align 8, !dbg !11558, !tbaa !2516
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !11557, !ctir !87
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !11557, !tbaa !2507
  %conv8 = sext i8 %14 to i32, !dbg !11557
  %call9 = call zeroext i1 @c_isdigit(i32 %conv8), !dbg !11559
  %lnot = xor i1 %call9, true, !dbg !11560
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs4
  %15 = phi i1 [ false, %lor.rhs4 ], [ %lnot, %land.rhs ], !dbg !11561
  br label %lor.end10, !dbg !11552

lor.end10:                                        ; preds = %land.end, %land.lhs.true
  %16 = phi i1 [ true, %land.lhs.true ], [ %15, %land.end ]
  br i1 %16, label %while.body11, label %while.end, !dbg !11544

while.body11:                                     ; preds = %lor.end10
  call void @llvm.dbg.declare(metadata i32* %s1_c, metadata !11562, metadata !DIExpression()), !dbg !11564
  %17 = load i64, i64* %s1_pos, align 8, !dbg !11565, !tbaa !2516
  %18 = load i64, i64* %s1_len.addr, align 8, !dbg !11566, !tbaa !2516
  %cmp12 = icmp eq i64 %17, %18, !dbg !11567
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !11568

cond.true:                                        ; preds = %while.body11
  br label %cond.end, !dbg !11568

cond.false:                                       ; preds = %while.body11
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11569, !tbaa !2355
  %20 = load i64, i64* %s1_pos, align 8, !dbg !11570, !tbaa !2516
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !11569, !ctir !87
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !11569, !tbaa !2507
  %call15 = call i32 @order(i8 zeroext %21), !dbg !11571
  br label %cond.end, !dbg !11568

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call15, %cond.false ], !dbg !11568
  store i32 %cond, i32* %s1_c, align 4, !dbg !11564, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %s2_c, metadata !11572, metadata !DIExpression()), !dbg !11573
  %22 = load i64, i64* %s2_pos, align 8, !dbg !11574, !tbaa !2516
  %23 = load i64, i64* %s2_len.addr, align 8, !dbg !11575, !tbaa !2516
  %cmp16 = icmp eq i64 %22, %23, !dbg !11576
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !11577

cond.true18:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !11577

cond.false19:                                     ; preds = %cond.end
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11578, !tbaa !2355
  %25 = load i64, i64* %s2_pos, align 8, !dbg !11579, !tbaa !2516
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !11578, !ctir !87
  %26 = load i8, i8* %arrayidx20, align 1, !dbg !11578, !tbaa !2507
  %call21 = call i32 @order(i8 zeroext %26), !dbg !11580
  br label %cond.end22, !dbg !11577

cond.end22:                                       ; preds = %cond.false19, %cond.true18
  %cond23 = phi i32 [ 0, %cond.true18 ], [ %call21, %cond.false19 ], !dbg !11577
  store i32 %cond23, i32* %s2_c, align 4, !dbg !11573, !tbaa !2342
  %27 = load i32, i32* %s1_c, align 4, !dbg !11581, !tbaa !2342
  %28 = load i32, i32* %s2_c, align 4, !dbg !11583, !tbaa !2342
  %cmp24 = icmp ne i32 %27, %28, !dbg !11584
  br i1 %cmp24, label %if.then, label %if.end, !dbg !11585

if.then:                                          ; preds = %cond.end22
  %29 = load i32, i32* %s1_c, align 4, !dbg !11586, !tbaa !2342
  %30 = load i32, i32* %s2_c, align 4, !dbg !11587, !tbaa !2342
  %sub = sub nsw i32 %29, %30, !dbg !11588
  store i32 %sub, i32* %retval, align 4, !dbg !11589
  br label %return, !dbg !11589

if.end:                                           ; preds = %cond.end22
  %31 = load i64, i64* %s1_pos, align 8, !dbg !11590, !tbaa !2516
  %inc = add i64 %31, 1, !dbg !11590
  store i64 %inc, i64* %s1_pos, align 8, !dbg !11590, !tbaa !2516
  %32 = load i64, i64* %s2_pos, align 8, !dbg !11591, !tbaa !2516
  %inc26 = add i64 %32, 1, !dbg !11591
  store i64 %inc26, i64* %s2_pos, align 8, !dbg !11591, !tbaa !2516
  br label %while.cond2, !dbg !11544, !llvm.loop !11592

while.end:                                        ; preds = %lor.end10
  br label %while.cond27, !dbg !11594

while.cond27:                                     ; preds = %while.body32, %while.end
  %33 = load i8*, i8** %s1.addr, align 8, !dbg !11595, !tbaa !2355
  %34 = load i64, i64* %s1_pos, align 8, !dbg !11596, !tbaa !2516
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11595, !ctir !87
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !11595, !tbaa !2507
  %conv29 = sext i8 %35 to i32, !dbg !11595
  %cmp30 = icmp eq i32 %conv29, 48, !dbg !11597
  br i1 %cmp30, label %while.body32, label %while.end34, !dbg !11594

while.body32:                                     ; preds = %while.cond27
  %36 = load i64, i64* %s1_pos, align 8, !dbg !11598, !tbaa !2516
  %inc33 = add i64 %36, 1, !dbg !11598
  store i64 %inc33, i64* %s1_pos, align 8, !dbg !11598, !tbaa !2516
  br label %while.cond27, !dbg !11594, !llvm.loop !11599

while.end34:                                      ; preds = %while.cond27
  br label %while.cond35, !dbg !11600

while.cond35:                                     ; preds = %while.body40, %while.end34
  %37 = load i8*, i8** %s2.addr, align 8, !dbg !11601, !tbaa !2355
  %38 = load i64, i64* %s2_pos, align 8, !dbg !11602, !tbaa !2516
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !11601, !ctir !87
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !11601, !tbaa !2507
  %conv37 = sext i8 %39 to i32, !dbg !11601
  %cmp38 = icmp eq i32 %conv37, 48, !dbg !11603
  br i1 %cmp38, label %while.body40, label %while.end42, !dbg !11600

while.body40:                                     ; preds = %while.cond35
  %40 = load i64, i64* %s2_pos, align 8, !dbg !11604, !tbaa !2516
  %inc41 = add i64 %40, 1, !dbg !11604
  store i64 %inc41, i64* %s2_pos, align 8, !dbg !11604, !tbaa !2516
  br label %while.cond35, !dbg !11600, !llvm.loop !11605

while.end42:                                      ; preds = %while.cond35
  br label %while.cond43, !dbg !11606

while.cond43:                                     ; preds = %if.end61, %while.end42
  %41 = load i8*, i8** %s1.addr, align 8, !dbg !11607, !tbaa !2355
  %42 = load i64, i64* %s1_pos, align 8, !dbg !11608, !tbaa !2516
  %arrayidx44 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !11607, !ctir !87
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !11607, !tbaa !2507
  %conv45 = sext i8 %43 to i32, !dbg !11607
  %call46 = call zeroext i1 @c_isdigit(i32 %conv45), !dbg !11609
  br i1 %call46, label %land.rhs48, label %land.end53, !dbg !11610

land.rhs48:                                       ; preds = %while.cond43
  %44 = load i8*, i8** %s2.addr, align 8, !dbg !11611, !tbaa !2355
  %45 = load i64, i64* %s2_pos, align 8, !dbg !11612, !tbaa !2516
  %arrayidx49 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !11611, !ctir !87
  %46 = load i8, i8* %arrayidx49, align 1, !dbg !11611, !tbaa !2507
  %conv50 = sext i8 %46 to i32, !dbg !11611
  %call51 = call zeroext i1 @c_isdigit(i32 %conv50), !dbg !11613
  br label %land.end53

land.end53:                                       ; preds = %land.rhs48, %while.cond43
  %47 = phi i1 [ false, %while.cond43 ], [ %call51, %land.rhs48 ], !dbg !11561
  br i1 %47, label %while.body54, label %while.end64, !dbg !11606

while.body54:                                     ; preds = %land.end53
  %48 = load i32, i32* %first_diff, align 4, !dbg !11614, !tbaa !2342
  %tobool = icmp ne i32 %48, 0, !dbg !11614
  br i1 %tobool, label %if.end61, label %if.then55, !dbg !11617

if.then55:                                        ; preds = %while.body54
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !11618, !tbaa !2355
  %50 = load i64, i64* %s1_pos, align 8, !dbg !11619, !tbaa !2516
  %arrayidx56 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !11618, !ctir !87
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !11618, !tbaa !2507
  %conv57 = sext i8 %51 to i32, !dbg !11618
  %52 = load i8*, i8** %s2.addr, align 8, !dbg !11620, !tbaa !2355
  %53 = load i64, i64* %s2_pos, align 8, !dbg !11621, !tbaa !2516
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !11620, !ctir !87
  %54 = load i8, i8* %arrayidx58, align 1, !dbg !11620, !tbaa !2507
  %conv59 = sext i8 %54 to i32, !dbg !11620
  %sub60 = sub nsw i32 %conv57, %conv59, !dbg !11622
  store i32 %sub60, i32* %first_diff, align 4, !dbg !11623, !tbaa !2342
  br label %if.end61, !dbg !11624

if.end61:                                         ; preds = %if.then55, %while.body54
  %55 = load i64, i64* %s1_pos, align 8, !dbg !11625, !tbaa !2516
  %inc62 = add i64 %55, 1, !dbg !11625
  store i64 %inc62, i64* %s1_pos, align 8, !dbg !11625, !tbaa !2516
  %56 = load i64, i64* %s2_pos, align 8, !dbg !11626, !tbaa !2516
  %inc63 = add i64 %56, 1, !dbg !11626
  store i64 %inc63, i64* %s2_pos, align 8, !dbg !11626, !tbaa !2516
  br label %while.cond43, !dbg !11606, !llvm.loop !11627

while.end64:                                      ; preds = %land.end53
  %57 = load i8*, i8** %s1.addr, align 8, !dbg !11629, !tbaa !2355
  %58 = load i64, i64* %s1_pos, align 8, !dbg !11631, !tbaa !2516
  %arrayidx65 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11629, !ctir !87
  %59 = load i8, i8* %arrayidx65, align 1, !dbg !11629, !tbaa !2507
  %conv66 = sext i8 %59 to i32, !dbg !11629
  %call67 = call zeroext i1 @c_isdigit(i32 %conv66), !dbg !11632
  br i1 %call67, label %if.then68, label %if.end69, !dbg !11633

if.then68:                                        ; preds = %while.end64
  store i32 1, i32* %retval, align 4, !dbg !11634
  br label %return, !dbg !11634

if.end69:                                         ; preds = %while.end64
  %60 = load i8*, i8** %s2.addr, align 8, !dbg !11635, !tbaa !2355
  %61 = load i64, i64* %s2_pos, align 8, !dbg !11637, !tbaa !2516
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !11635, !ctir !87
  %62 = load i8, i8* %arrayidx70, align 1, !dbg !11635, !tbaa !2507
  %conv71 = sext i8 %62 to i32, !dbg !11635
  %call72 = call zeroext i1 @c_isdigit(i32 %conv71), !dbg !11638
  br i1 %call72, label %if.then73, label %if.end74, !dbg !11639

if.then73:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !11640
  br label %return, !dbg !11640

if.end74:                                         ; preds = %if.end69
  %63 = load i32, i32* %first_diff, align 4, !dbg !11641, !tbaa !2342
  %tobool75 = icmp ne i32 %63, 0, !dbg !11641
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11643

if.then76:                                        ; preds = %if.end74
  %64 = load i32, i32* %first_diff, align 4, !dbg !11644, !tbaa !2342
  store i32 %64, i32* %retval, align 4, !dbg !11645
  br label %return, !dbg !11645

if.end77:                                         ; preds = %if.end74
  br label %while.cond, !dbg !11533, !llvm.loop !11646

while.end78:                                      ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !11648
  br label %return, !dbg !11648

return:                                           ; preds = %while.end78, %if.then76, %if.then73, %if.then68, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11649
  ret i32 %65, !dbg !11649
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @order(i8 zeroext %c) #4 !dbg !11650 !ctir !1535 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i8, align 1, !ctir !317
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  %0 = load i8, i8* %c.addr, align 1, !dbg !11653, !tbaa !2507
  %conv = zext i8 %0 to i32, !dbg !11653
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11655
  br i1 %call, label %if.then, label %if.else, !dbg !11656

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11657
  br label %return, !dbg !11657

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !11658, !tbaa !2507
  %conv1 = zext i8 %1 to i32, !dbg !11658
  %call2 = call zeroext i1 @c_isalpha(i32 %conv1), !dbg !11660
  br i1 %call2, label %if.then3, label %if.else5, !dbg !11661

if.then3:                                         ; preds = %if.else
  %2 = load i8, i8* %c.addr, align 1, !dbg !11662, !tbaa !2507
  %conv4 = zext i8 %2 to i32, !dbg !11662
  store i32 %conv4, i32* %retval, align 4, !dbg !11663
  br label %return, !dbg !11663

if.else5:                                         ; preds = %if.else
  %3 = load i8, i8* %c.addr, align 1, !dbg !11664, !tbaa !2507
  %conv6 = zext i8 %3 to i32, !dbg !11664
  %cmp = icmp eq i32 %conv6, 126, !dbg !11666
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !11667

if.then8:                                         ; preds = %if.else5
  store i32 -1, i32* %retval, align 4, !dbg !11668
  br label %return, !dbg !11668

if.else9:                                         ; preds = %if.else5
  %4 = load i8, i8* %c.addr, align 1, !dbg !11669, !tbaa !2507
  %conv10 = zext i8 %4 to i32, !dbg !11670
  %add = add nsw i32 %conv10, 255, !dbg !11671
  %add11 = add nsw i32 %add, 1, !dbg !11672
  store i32 %add11, i32* %retval, align 4, !dbg !11673
  br label %return, !dbg !11673

return:                                           ; preds = %if.else9, %if.then8, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11674
  ret i32 %5, !dbg !11674
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !11675 !ctir !1540 {
entry:
  %category.addr = alloca i32, align 4, !ctir !5
  %hard = alloca i8, align 1, !ctir !102
  %p = alloca i8*, align 8, !ctir !87
  store i32 %category, i32* %category.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !11677, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !11679, metadata !DIExpression()), !dbg !11680
  store i8 1, i8* %hard, align 1, !dbg !11680, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11681, metadata !DIExpression()), !dbg !11682
  %0 = load i32, i32* %category.addr, align 4, !dbg !11683, !tbaa !2342
  %call = call i8* @setlocale(i32 %0, i8* null) #12, !dbg !11684
  store i8* %call, i8** %p, align 8, !dbg !11682, !tbaa !2355
  %1 = load i8*, i8** %p, align 8, !dbg !11685, !tbaa !2355
  %tobool = icmp ne i8* %1, null, !dbg !11685
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11687

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !11688, !tbaa !2355
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.203, i64 0, i64 0)) #14, !dbg !11693
  %cmp = icmp eq i32 %call1, 0, !dbg !11694
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !11695

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !11696, !tbaa !2355
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.204, i64 0, i64 0)) #14, !dbg !11697
  %cmp3 = icmp eq i32 %call2, 0, !dbg !11698
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11699

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !11700, !tbaa !2499
  br label %if.end, !dbg !11701

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !11702

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !11703, !tbaa !2499
  %tobool6 = trunc i8 %4 to i1, !dbg !11703
  ret i1 %tobool6, !dbg !11704
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11705 !ctir !1008 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11706, metadata !DIExpression()), !dbg !11707
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11708, !tbaa !2355
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11709, !ctir !1011
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11709, !tbaa !11710, !ctir !52
  ret i64 %1, !dbg !11712
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11713 !ctir !1008 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11714, metadata !DIExpression()), !dbg !11715
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11716, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11717, !ctir !1011
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11717, !tbaa !11718, !ctir !52
  ret i64 %1, !dbg !11719
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11720 !ctir !1008 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11723, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11724, !ctir !1011
  %1 = load i64, i64* %n_entries, align 8, !dbg !11724, !tbaa !11725, !ctir !52
  ret i64 %1, !dbg !11726
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11727 !ctir !1008 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  %max_bucket_length = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1023
  %bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11728, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11730, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11732, metadata !DIExpression()), !dbg !11733
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11733, !tbaa !2516
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11734, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11736, !ctir !1011
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11736, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11738, !tbaa !2355
  br label %for.cond, !dbg !11739

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11740, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11742, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11743, !ctir !1011
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11743, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11745
  br i1 %cmp, label %for.body, label %for.end, !dbg !11746

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11747, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11750, !ctir !1024
  %6 = load i8*, i8** %data, align 8, !dbg !11750, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11747
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11753

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11754, metadata !DIExpression()), !dbg !11756
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11757, !tbaa !2355
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11756, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11758, metadata !DIExpression()), !dbg !11759
  store i64 1, i64* %bucket_length, align 8, !dbg !11759, !tbaa !2516
  br label %while.cond, !dbg !11760

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11761, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11762, !ctir !1024
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11762, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11764, !tbaa !2355
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11765, !tbaa !2355
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11760
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11760

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11766, !tbaa !2516
  %inc = add i64 %11, 1, !dbg !11766
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11766, !tbaa !2516
  br label %while.cond, !dbg !11760, !llvm.loop !11767

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11768, !tbaa !2516
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11770, !tbaa !2516
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11771
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11772

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11773, !tbaa !2516
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11774, !tbaa !2516
  br label %if.end, !dbg !11775

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11776

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11777

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11778, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11778
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11778, !tbaa !2355
  br label %for.cond, !dbg !11779, !llvm.loop !11780

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11782, !tbaa !2516
  ret i64 %16, !dbg !11783
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11784 !ctir !1052 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %n_entries = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1023
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11785, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11787, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11789, metadata !DIExpression()), !dbg !11790
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11790, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11791, metadata !DIExpression()), !dbg !11792
  store i64 0, i64* %n_entries, align 8, !dbg !11792, !tbaa !2516
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11793, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11795, !ctir !1011
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11795, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11796, !tbaa !2355
  br label %for.cond, !dbg !11797

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11798, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11800, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11801, !ctir !1011
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11801, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11802
  br i1 %cmp, label %for.body, label %for.end, !dbg !11803

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11804, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11807, !ctir !1024
  %6 = load i8*, i8** %data, align 8, !dbg !11807, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11804
  br i1 %tobool, label %if.then, label %if.end, !dbg !11808

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11809, metadata !DIExpression()), !dbg !11811
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11812, !tbaa !2355
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11811, !tbaa !2355
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11813, !tbaa !2516
  %inc = add i64 %8, 1, !dbg !11813
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11813, !tbaa !2516
  %9 = load i64, i64* %n_entries, align 8, !dbg !11814, !tbaa !2516
  %inc2 = add i64 %9, 1, !dbg !11814
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11814, !tbaa !2516
  br label %while.cond, !dbg !11815

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11816, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11817, !ctir !1024
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11817, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11818, !tbaa !2355
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11819, !tbaa !2355
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11815
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11815

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11820, !tbaa !2516
  %inc4 = add i64 %13, 1, !dbg !11820
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11820, !tbaa !2516
  br label %while.cond, !dbg !11815, !llvm.loop !11821

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11822

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11823

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11824, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11824
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11824, !tbaa !2355
  br label %for.cond, !dbg !11825, !llvm.loop !11826

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11828, !tbaa !2516
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11830, !tbaa !2355
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11831, !ctir !1011
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11831, !tbaa !11718, !ctir !52
  %cmp6 = icmp eq i64 %15, %17, !dbg !11832
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11833

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11834, !tbaa !2516
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11835, !tbaa !2355
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11836, !ctir !1011
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11836, !tbaa !11725, !ctir !52
  %cmp8 = icmp eq i64 %18, %20, !dbg !11837
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11838

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11839
  br label %return, !dbg !11839

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11840
  br label %return, !dbg !11840

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11841
  ret i1 %21, !dbg !11841
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11842 !ctir !1054 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1056
  %n_entries = alloca i64, align 8, !ctir !52
  %n_buckets = alloca i64, align 8, !ctir !52
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %max_bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11843, metadata !DIExpression()), !dbg !11844
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11845, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11847, metadata !DIExpression()), !dbg !11848
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11849, !tbaa !2355
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11850
  store i64 %call, i64* %n_entries, align 8, !dbg !11848, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11851, metadata !DIExpression()), !dbg !11852
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11853, !tbaa !2355
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11854
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11852, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11855, metadata !DIExpression()), !dbg !11856
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11857, !tbaa !2355
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11858
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11856, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11859, metadata !DIExpression()), !dbg !11860
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11861, !tbaa !2355
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11862
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11860, !tbaa !2516
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11863, !tbaa !2355
  %5 = load i64, i64* %n_entries, align 8, !dbg !11864, !tbaa !2516
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.205, i64 0, i64 0), i64 %5), !dbg !11865
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11866, !tbaa !2355
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11867, !tbaa !2516
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.206, i64 0, i64 0), i64 %7), !dbg !11868
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11869, !tbaa !2355
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11870, !tbaa !2516
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11871, !tbaa !2516
  %conv = uitofp i64 %10 to double, !dbg !11871
  %mul = fmul double 1.000000e+02, %conv, !dbg !11872
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11873, !tbaa !2516
  %conv6 = uitofp i64 %11 to double, !dbg !11873
  %div = fdiv double %mul, %conv6, !dbg !11874
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.207, i64 0, i64 0), i64 %9, double %div), !dbg !11875
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11876, !tbaa !2355
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11877, !tbaa !2516
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.208, i64 0, i64 0), i64 %13), !dbg !11878
  ret void, !dbg !11879
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11880 !ctir !1096 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %entry.addr = alloca i8*, align 8, !ctir !85
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1023
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11881, metadata !DIExpression()), !dbg !11882
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11883, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11885, metadata !DIExpression()), !dbg !11886
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11887, !tbaa !2355
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11888, !tbaa !2355
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11889
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11886, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11890, metadata !DIExpression()), !dbg !11891
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11892, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11894, !ctir !1024
  %3 = load i8*, i8** %data, align 8, !dbg !11894, !tbaa !11751, !ctir !47
  %cmp = icmp eq i8* %3, null, !dbg !11895
  br i1 %cmp, label %if.then, label %if.end, !dbg !11896

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11897
  br label %return, !dbg !11897

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11898, !tbaa !2355
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11900, !tbaa !2355
  br label %for.cond, !dbg !11901

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11902, !tbaa !2355
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11904
  br i1 %tobool, label %for.body, label %for.end, !dbg !11904

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11905, !tbaa !2355
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11907, !tbaa !2355
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11908, !ctir !1024
  %8 = load i8*, i8** %data2, align 8, !dbg !11908, !tbaa !11751, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !11909
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11910

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11911, !tbaa !2355
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11912, !ctir !1011
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11912, !tbaa !11913, !ctir !1044
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11914, !tbaa !2355
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11915, !tbaa !2355
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11916, !ctir !1024
  %13 = load i8*, i8** %data4, align 8, !dbg !11916, !tbaa !11751, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11911
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11917

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11918, !tbaa !2355
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11919, !ctir !1024
  %15 = load i8*, i8** %data7, align 8, !dbg !11919, !tbaa !11751, !ctir !47
  store i8* %15, i8** %retval, align 8, !dbg !11920
  br label %return, !dbg !11920

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11921

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11922, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11923, !ctir !1024
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11923, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11924, !tbaa !2355
  br label %for.cond, !dbg !11925, !llvm.loop !11926

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11928
  br label %return, !dbg !11928

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11929
  ret i8* %18, !dbg !11929
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11930 !ctir !1126 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %key.addr = alloca i8*, align 8, !ctir !85
  %n = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11931, metadata !DIExpression()), !dbg !11932
  store i8* %key, i8** %key.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11933, metadata !DIExpression()), !dbg !11934
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11935, metadata !DIExpression()), !dbg !11936
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11937, !tbaa !2355
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11938, !ctir !1011
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11938, !tbaa !11939, !ctir !1041
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11940, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11941, !tbaa !2355
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11942, !ctir !1011
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11942, !tbaa !11710, !ctir !52
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11937
  store i64 %call, i64* %n, align 8, !dbg !11936, !tbaa !2516
  %5 = load i64, i64* %n, align 8, !dbg !11943, !tbaa !2516
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11945, !tbaa !2355
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11946, !ctir !1011
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11946, !tbaa !11710, !ctir !52
  %cmp = icmp ult i64 %5, %7, !dbg !11947
  br i1 %cmp, label %if.end, label %if.then, !dbg !11948

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11949
  unreachable, !dbg !11949

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11950, !tbaa !2355
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11951, !ctir !1011
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11951, !tbaa !11737, !ctir !1017
  %10 = load i64, i64* %n, align 8, !dbg !11952, !tbaa !2516
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11953
  ret %struct.hash_entry* %add.ptr, !dbg !11954
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11955 !ctir !1098 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11956, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11958, metadata !DIExpression()), !dbg !11959
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11960, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11962, !ctir !1011
  %1 = load i64, i64* %n_entries, align 8, !dbg !11962, !tbaa !11725, !ctir !52
  %cmp = icmp eq i64 %1, 0, !dbg !11963
  br i1 %cmp, label %if.then, label %if.end, !dbg !11964

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11965
  br label %return, !dbg !11965

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11966, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11968, !ctir !1011
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11968, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11969, !tbaa !2355
  br label %for.cond, !dbg !11970

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11971, !tbaa !2355
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11974, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11975, !ctir !1011
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11975, !tbaa !11744, !ctir !1023
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11976
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11977

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11978
  unreachable, !dbg !11978

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11979, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11981, !ctir !1024
  %8 = load i8*, i8** %data, align 8, !dbg !11981, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %8, null, !dbg !11979
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11982

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11983, !tbaa !2355
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11984, !ctir !1024
  %10 = load i8*, i8** %data5, align 8, !dbg !11984, !tbaa !11751, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11985
  br label %return, !dbg !11985

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11986

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11987, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11987
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11987, !tbaa !2355
  br label %for.cond, !dbg !11988, !llvm.loop !11989

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11992
  ret i8* %12, !dbg !11992
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11993 !ctir !1096 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %entry.addr = alloca i8*, align 8, !ctir !85
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1023
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11994, metadata !DIExpression()), !dbg !11995
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11996, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11998, metadata !DIExpression()), !dbg !11999
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12000, !tbaa !2355
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12001, !tbaa !2355
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12002
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11999, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12003, metadata !DIExpression()), !dbg !12004
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12005, !tbaa !2355
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !12006, !tbaa !2355
  br label %do.body, !dbg !12007

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12008, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !12011, !ctir !1024
  %4 = load i8*, i8** %data, align 8, !dbg !12011, !tbaa !11751, !ctir !47
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12012, !tbaa !2355
  %cmp = icmp eq i8* %4, %5, !dbg !12013
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12014

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12015, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !12016, !ctir !1024
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12016, !tbaa !11763, !ctir !1017
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !12015
  br i1 %tobool, label %if.then, label %if.end, !dbg !12017

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12018, !tbaa !2355
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !12019, !ctir !1024
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12019, !tbaa !11763, !ctir !1017
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12020, !ctir !1018
  %10 = load i8*, i8** %data3, align 8, !dbg !12020, !tbaa !11751, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !12021
  br label %return, !dbg !12021

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12022, !tbaa !2355
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !12023, !ctir !1024
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !12023, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !12024, !tbaa !2355
  br label %do.cond, !dbg !12025

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12026, !tbaa !2355
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !12027
  br i1 %cmp5, label %do.body, label %do.end, !dbg !12025, !llvm.loop !12028

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !12030

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12031, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !12031
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12031, !tbaa !2355
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12032, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !12033, !ctir !1011
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12033, !tbaa !11744, !ctir !1023
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !12034
  br i1 %cmp6, label %while.body, label %while.end, !dbg !12030

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12035, !tbaa !2355
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !12037, !ctir !1024
  %18 = load i8*, i8** %data7, align 8, !dbg !12037, !tbaa !11751, !ctir !47
  %tobool8 = icmp ne i8* %18, null, !dbg !12035
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !12038

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12039, !tbaa !2355
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !12040, !ctir !1024
  %20 = load i8*, i8** %data10, align 8, !dbg !12040, !tbaa !11751, !ctir !47
  store i8* %20, i8** %retval, align 8, !dbg !12041
  br label %return, !dbg !12041

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !12030, !llvm.loop !12042

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !12044
  br label %return, !dbg !12044

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !12045
  ret i8* %21, !dbg !12045
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !12046 !ctir !1100 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %buffer.addr = alloca i8**, align 8, !ctir !1102
  %buffer_size.addr = alloca i64, align 8, !ctir !52
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1023
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12047, metadata !DIExpression()), !dbg !12048
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !12049, metadata !DIExpression()), !dbg !12050
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !12051, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12053, metadata !DIExpression()), !dbg !12054
  store i64 0, i64* %counter, align 8, !dbg !12054, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12055, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12057, metadata !DIExpression()), !dbg !12058
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12059, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12061, !ctir !1011
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12061, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12062, !tbaa !2355
  br label %for.cond, !dbg !12063

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12064, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12066, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12067, !ctir !1011
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12067, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12068
  br i1 %cmp, label %for.body, label %for.end10, !dbg !12069

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12070, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12073, !ctir !1024
  %6 = load i8*, i8** %data, align 8, !dbg !12073, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12070
  br i1 %tobool, label %if.then, label %if.end8, !dbg !12074

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12075, !tbaa !2355
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12078, !tbaa !2355
  br label %for.cond2, !dbg !12079

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12080, !tbaa !2355
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12082
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12082

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !12083, !tbaa !2516
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !12086, !tbaa !2516
  %cmp5 = icmp uge i64 %9, %10, !dbg !12087
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !12088

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !12089, !tbaa !2516
  store i64 %11, i64* %retval, align 8, !dbg !12090
  br label %return, !dbg !12090

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12091, !tbaa !2355
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12092, !ctir !1024
  %13 = load i8*, i8** %data7, align 8, !dbg !12092, !tbaa !11751, !ctir !47
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !12093, !tbaa !2355
  %15 = load i64, i64* %counter, align 8, !dbg !12094, !tbaa !2516
  %inc = add i64 %15, 1, !dbg !12094
  store i64 %inc, i64* %counter, align 8, !dbg !12094, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !12093, !ctir !1102
  store i8* %13, i8** %arrayidx, align 8, !dbg !12095, !tbaa !2355
  br label %for.inc, !dbg !12096

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12097, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !12098, !ctir !1024
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12098, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !12099, !tbaa !2355
  br label %for.cond2, !dbg !12100, !llvm.loop !12101

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !12103

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !12104

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12105, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !12105
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12105, !tbaa !2355
  br label %for.cond, !dbg !12106, !llvm.loop !12107

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !12109, !tbaa !2516
  store i64 %19, i64* %retval, align 8, !dbg !12110
  br label %return, !dbg !12110

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !12111
  ret i64 %20, !dbg !12111
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !12112 !ctir !1103 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1010
  %processor.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !1105
  %processor_data.addr = alloca i8*, align 8, !ctir !47
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1023
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1023
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !12117, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12119, metadata !DIExpression()), !dbg !12120
  store i64 0, i64* %counter, align 8, !dbg !12120, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12121, metadata !DIExpression()), !dbg !12122
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12123, metadata !DIExpression()), !dbg !12124
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12125, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12127, !ctir !1011
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12127, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12128, !tbaa !2355
  br label %for.cond, !dbg !12129

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12130, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12132, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12133, !ctir !1011
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12133, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12134
  br i1 %cmp, label %for.body, label %for.end9, !dbg !12135

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12136, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12139, !ctir !1024
  %6 = load i8*, i8** %data, align 8, !dbg !12139, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12136
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12140

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12141, !tbaa !2355
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12144, !tbaa !2355
  br label %for.cond2, !dbg !12145

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12146, !tbaa !2355
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12148
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12148

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !12149, !tbaa !2355
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12152, !tbaa !2355
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12153, !ctir !1024
  %11 = load i8*, i8** %data5, align 8, !dbg !12153, !tbaa !11751, !ctir !47
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !12154, !tbaa !2355
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !12149
  br i1 %call, label %if.end, label %if.then6, !dbg !12155

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !12156, !tbaa !2516
  store i64 %13, i64* %retval, align 8, !dbg !12157
  br label %return, !dbg !12157

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !12158, !tbaa !2516
  %inc = add i64 %14, 1, !dbg !12158
  store i64 %inc, i64* %counter, align 8, !dbg !12158, !tbaa !2516
  br label %for.inc, !dbg !12159

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12160, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12161, !ctir !1024
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12161, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12162, !tbaa !2355
  br label %for.cond2, !dbg !12163, !llvm.loop !12164

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12166

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12167

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12168, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12168
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12168, !tbaa !2355
  br label %for.cond, !dbg !12169, !llvm.loop !12170

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12172, !tbaa !2516
  store i64 %18, i64* %retval, align 8, !dbg !12173
  br label %return, !dbg !12173

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12174
  ret i64 %19, !dbg !12174
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12175 !ctir !1109 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !87
  %n_buckets.addr = alloca i64, align 8, !ctir !52
  %value = alloca i64, align 8, !ctir !52
  %ch = alloca i8, align 1, !ctir !317
  store i8* %string, i8** %string.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12176, metadata !DIExpression()), !dbg !12177
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12178, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12180, metadata !DIExpression()), !dbg !12181
  store i64 0, i64* %value, align 8, !dbg !12181, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12182, metadata !DIExpression()), !dbg !12183
  br label %for.cond, !dbg !12184

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12185, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !12188, !tbaa !2507, !ctir !88
  store i8 %1, i8* %ch, align 1, !dbg !12189, !tbaa !2507
  %tobool = icmp ne i8 %1, 0, !dbg !12190
  br i1 %tobool, label %for.body, label %for.end, !dbg !12190

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12191, !tbaa !2516
  %mul = mul i64 %2, 31, !dbg !12192
  %3 = load i8, i8* %ch, align 1, !dbg !12193, !tbaa !2507
  %conv = zext i8 %3 to i64, !dbg !12193
  %add = add i64 %mul, %conv, !dbg !12194
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12195, !tbaa !2516
  %rem = urem i64 %add, %4, !dbg !12196
  store i64 %rem, i64* %value, align 8, !dbg !12197, !tbaa !2516
  br label %for.inc, !dbg !12198

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12199, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12199
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12199, !tbaa !2355
  br label %for.cond, !dbg !12200, !llvm.loop !12201

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12203, !tbaa !2516
  ret i64 %6, !dbg !12204
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !12205 !ctir !1111 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !1113
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12206, metadata !DIExpression()), !dbg !12207
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12208, !tbaa !2355
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12209, !tbaa.struct !12210
  ret void, !dbg !12213
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !12214 !ctir !1114 {
entry:
  %retval = alloca %struct.hash_table*, align 8, !ctir !1116
  %candidate.addr = alloca i64, align 8, !ctir !52
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !1029
  %hasher.addr = alloca i64 (i8*, i64)*, align 8, !ctir !1041
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !1044
  %data_freer.addr = alloca void (i8*)*, align 8, !ctir !1047
  %table = alloca %struct.hash_table*, align 8, !ctir !1116
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12215, metadata !DIExpression()), !dbg !12216
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12217, metadata !DIExpression()), !dbg !12218
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12219, metadata !DIExpression()), !dbg !12220
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12221, metadata !DIExpression()), !dbg !12222
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12223, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12225, metadata !DIExpression()), !dbg !12226
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12227, !tbaa !2355
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12229
  br i1 %cmp, label %if.then, label %if.end, !dbg !12230

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12231, !tbaa !2355
  br label %if.end, !dbg !12232

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12233, !tbaa !2355
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12235
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12236

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12237, !tbaa !2355
  br label %if.end3, !dbg !12238

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #12, !dbg !12239
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12239
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12240, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12241, !tbaa !2355
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12243
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12244

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12245
  br label %return, !dbg !12245

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12246, !tbaa !2355
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12246
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12248

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12249, !tbaa !2355
  br label %if.end8, !dbg !12250

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12251, !tbaa !2355
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12252, !tbaa !2355
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12253, !ctir !1012
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12254, !tbaa !12255, !ctir !1029
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12256, !tbaa !2355
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12258
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12259

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12260

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12262, !tbaa !2516
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12263, !tbaa !2355
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !12264
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12265, !tbaa !2355
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12266, !ctir !1012
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12267, !tbaa !11710, !ctir !52
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12268, !tbaa !2355
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12270, !ctir !1012
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12270, !tbaa !11710, !ctir !52
  %tobool15 = icmp ne i64 %12, 0, !dbg !12268
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12271

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12272

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12273, !tbaa !2355
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12274, !ctir !1012
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12274, !tbaa !11710, !ctir !52
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #12, !dbg !12275
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12275
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12276, !tbaa !2355
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12277, !ctir !1012
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12278, !tbaa !11737, !ctir !1017
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12279, !tbaa !2355
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12281, !ctir !1012
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12281, !tbaa !11737, !ctir !1017
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12282
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12283

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12284

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12285, !tbaa !2355
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12286, !ctir !1012
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12286, !tbaa !11737, !ctir !1017
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12287, !tbaa !2355
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12288, !ctir !1012
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12288, !tbaa !11710, !ctir !52
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12289
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12290, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12291, !ctir !1012
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12292, !tbaa !11744, !ctir !1023
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12293, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12294, !ctir !1012
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12295, !tbaa !11718, !ctir !52
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12296, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12297, !ctir !1012
  store i64 0, i64* %n_entries, align 8, !dbg !12298, !tbaa !11725, !ctir !52
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12299, !tbaa !2355
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12300, !tbaa !2355
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12301, !ctir !1012
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12302, !tbaa !11939, !ctir !1041
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12303, !tbaa !2355
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12304, !tbaa !2355
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12305, !ctir !1012
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12306, !tbaa !11913, !ctir !1044
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12307, !tbaa !2355
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12308, !tbaa !2355
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12309, !ctir !1012
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12310, !tbaa !12311, !ctir !1047
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12312, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12313, !ctir !1012
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12314, !tbaa !12315, !ctir !1017
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12316, !tbaa !2355
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12317
  br label %return, !dbg !12317

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12318), !dbg !12319
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12320, !tbaa !2355
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12320
  call void @free(i8* %35) #12, !dbg !12321
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12322
  br label %return, !dbg !12322

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12323
  ret %struct.hash_table* %36, !dbg !12323
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !12324 !ctir !563 {
entry:
  %data.addr = alloca i8*, align 8, !ctir !85
  %n.addr = alloca i64, align 8, !ctir !52
  %val = alloca i64, align 8, !ctir !52
  store i8* %data, i8** %data.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12329, metadata !DIExpression()), !dbg !12330
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12331, !tbaa !2355
  %1 = ptrtoint i8* %0 to i64, !dbg !12332
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12333
  store i64 %call, i64* %val, align 8, !dbg !12330, !tbaa !2516
  %2 = load i64, i64* %val, align 8, !dbg !12334, !tbaa !2516
  %3 = load i64, i64* %n.addr, align 8, !dbg !12335, !tbaa !2516
  %rem = urem i64 %2, %3, !dbg !12336
  ret i64 %rem, !dbg !12337
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !12338 !ctir !565 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !85
  %b.addr = alloca i8*, align 8, !ctir !85
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12339, metadata !DIExpression()), !dbg !12340
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12341, metadata !DIExpression()), !dbg !12342
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12343, !tbaa !2355
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12344, !tbaa !2355
  %cmp = icmp eq i8* %0, %1, !dbg !12345
  ret i1 %cmp, !dbg !12346
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !12347 !ctir !1128 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !1029
  %epsilon = alloca float, align 4, !ctir !1035
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12348, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12350, metadata !DIExpression()), !dbg !12351
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12352, !tbaa !2355
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12353, !ctir !1012
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12353, !tbaa !12255, !ctir !1029
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12351, !tbaa !2355
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12354, metadata !DIExpression()), !dbg !12355
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12356, !tbaa !2355
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12358
  br i1 %cmp, label %if.then, label %if.end, !dbg !12359

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12360
  br label %return, !dbg !12360

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12361, !tbaa !12211
  %3 = load float, float* %epsilon, align 4, !dbg !12362, !tbaa !12211
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12364, !tbaa !2355
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12365, !ctir !1030
  %5 = load float, float* %growth_threshold, align 4, !dbg !12365, !tbaa !12366, !ctir !1035
  %cmp2 = fcmp olt float %3, %5, !dbg !12368
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12369

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12370, !tbaa !2355
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12371, !ctir !1030
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12371, !tbaa !12366, !ctir !1035
  %8 = load float, float* %epsilon, align 4, !dbg !12372, !tbaa !12211
  %sub = fsub float 1.000000e+00, %8, !dbg !12373
  %cmp4 = fcmp olt float %7, %sub, !dbg !12374
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12375

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12376, !tbaa !12211
  %add = fadd float 1.000000e+00, %9, !dbg !12377
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12378, !tbaa !2355
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12379, !ctir !1030
  %11 = load float, float* %growth_factor, align 4, !dbg !12379, !tbaa !12380, !ctir !1035
  %cmp6 = fcmp olt float %add, %11, !dbg !12381
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12382

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12383, !tbaa !2355
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12384, !ctir !1030
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12384, !tbaa !12385, !ctir !1035
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12386
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12387

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12388, !tbaa !2355
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12389, !ctir !1030
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12389, !tbaa !12385, !ctir !1035
  %16 = load float, float* %epsilon, align 4, !dbg !12390, !tbaa !12211
  %add11 = fadd float %15, %16, !dbg !12391
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12392, !tbaa !2355
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12393, !ctir !1030
  %18 = load float, float* %shrink_factor, align 4, !dbg !12393, !tbaa !12394, !ctir !1035
  %cmp12 = fcmp olt float %add11, %18, !dbg !12395
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12396

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12397, !tbaa !2355
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12398, !ctir !1030
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12398, !tbaa !12394, !ctir !1035
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12399
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12400

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12401, !tbaa !2355
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12402, !ctir !1030
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12402, !tbaa !12385, !ctir !1035
  %23 = load float, float* %epsilon, align 4, !dbg !12403, !tbaa !12211
  %add18 = fadd float %22, %23, !dbg !12404
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12405, !tbaa !2355
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12406, !ctir !1030
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12406, !tbaa !12366, !ctir !1035
  %cmp20 = fcmp olt float %add18, %25, !dbg !12407
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12408

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12409
  br label %return, !dbg !12409

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12410, !tbaa !2355
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12411, !ctir !1012
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12412, !tbaa !12255, !ctir !1029
  store i1 false, i1* %retval, align 1, !dbg !12413
  br label %return, !dbg !12413

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12414
  ret i1 %27, !dbg !12414
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12415 !ctir !1130 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %candidate.addr = alloca i64, align 8, !ctir !52
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !1029
  %new_candidate = alloca float, align 4, !ctir !1035
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12416, metadata !DIExpression()), !dbg !12417
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12418, metadata !DIExpression()), !dbg !12419
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12420, !tbaa !2355
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12422, !ctir !1030
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12422, !tbaa !12423
  %tobool = trunc i8 %1 to i1, !dbg !12422, !ctir !102
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12424

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12425, metadata !DIExpression()), !dbg !12427
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12428, !tbaa !2516
  %conv = uitofp i64 %2 to float, !dbg !12428
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12429, !tbaa !2355
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12430, !ctir !1030
  %4 = load float, float* %growth_threshold, align 4, !dbg !12430, !tbaa !12366, !ctir !1035
  %div = fdiv float %conv, %4, !dbg !12431
  store float %div, float* %new_candidate, align 4, !dbg !12427, !tbaa !12211
  %5 = load float, float* %new_candidate, align 4, !dbg !12432, !tbaa !12211
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12434
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12435

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12436
  br label %return, !dbg !12436

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12437, !tbaa !12211
  %conv3 = fptoui float %6 to i64, !dbg !12437
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12438, !tbaa !2516
  br label %if.end4, !dbg !12439

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12440, !tbaa !2516
  %call = call i64 @next_prime(i64 %7) #16, !dbg !12441
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12442, !tbaa !2516
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12443, !tbaa !2516
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12443
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12445

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12446
  br label %return, !dbg !12446

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12447, !tbaa !2516
  store i64 %9, i64* %retval, align 8, !dbg !12448
  br label %return, !dbg !12448

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12449
  ret i64 %10, !dbg !12449
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !12450 !ctir !1132 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12451, metadata !DIExpression()), !dbg !12452
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12453, !tbaa !2516
  %cmp = icmp ult i64 %0, 10, !dbg !12455
  br i1 %cmp, label %if.then, label %if.end, !dbg !12456

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12457, !tbaa !2516
  br label %if.end, !dbg !12458

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12459, !tbaa !2516
  %or = or i64 %1, 1, !dbg !12459
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12459, !tbaa !2516
  br label %while.cond, !dbg !12460

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12461, !tbaa !2516
  %cmp1 = icmp ne i64 -1, %2, !dbg !12462
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12463

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12464, !tbaa !2516
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !12465
  %lnot = xor i1 %call, true, !dbg !12466
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12467
  br i1 %4, label %while.body, label %while.end, !dbg !12460

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12468, !tbaa !2516
  %add = add i64 %5, 2, !dbg !12468
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12468, !tbaa !2516
  br label %while.cond, !dbg !12460, !llvm.loop !12469

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12471, !tbaa !2516
  ret i64 %6, !dbg !12472
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !12473 !ctir !1134 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !52
  %divisor = alloca i64, align 8, !ctir !52
  %square = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12476, metadata !DIExpression()), !dbg !12477
  store i64 3, i64* %divisor, align 8, !dbg !12477, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12478, metadata !DIExpression()), !dbg !12479
  %0 = load i64, i64* %divisor, align 8, !dbg !12480, !tbaa !2516
  %1 = load i64, i64* %divisor, align 8, !dbg !12481, !tbaa !2516
  %mul = mul i64 %0, %1, !dbg !12482
  store i64 %mul, i64* %square, align 8, !dbg !12479, !tbaa !2516
  br label %while.cond, !dbg !12483

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12484, !tbaa !2516
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12485, !tbaa !2516
  %cmp = icmp ult i64 %2, %3, !dbg !12486
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12487

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12488, !tbaa !2516
  %5 = load i64, i64* %divisor, align 8, !dbg !12489, !tbaa !2516
  %rem = urem i64 %4, %5, !dbg !12490
  %tobool = icmp ne i64 %rem, 0, !dbg !12487
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12491
  br i1 %6, label %while.body, label %while.end, !dbg !12483

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12492, !tbaa !2516
  %inc = add i64 %7, 1, !dbg !12492
  store i64 %inc, i64* %divisor, align 8, !dbg !12492, !tbaa !2516
  %8 = load i64, i64* %divisor, align 8, !dbg !12494, !tbaa !2516
  %mul1 = mul i64 4, %8, !dbg !12495
  %9 = load i64, i64* %square, align 8, !dbg !12496, !tbaa !2516
  %add = add i64 %9, %mul1, !dbg !12496
  store i64 %add, i64* %square, align 8, !dbg !12496, !tbaa !2516
  %10 = load i64, i64* %divisor, align 8, !dbg !12497, !tbaa !2516
  %inc2 = add i64 %10, 1, !dbg !12497
  store i64 %inc2, i64* %divisor, align 8, !dbg !12497, !tbaa !2516
  br label %while.cond, !dbg !12483, !llvm.loop !12498

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12500, !tbaa !2516
  %12 = load i64, i64* %divisor, align 8, !dbg !12501, !tbaa !2516
  %rem3 = urem i64 %11, %12, !dbg !12502
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12500
  %13 = zext i1 %tobool4 to i64, !dbg !12500
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12500
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12503
  ret i1 %tobool5, !dbg !12504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !12505 !ctir !1117 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1017
  %next = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12506, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12508, metadata !DIExpression()), !dbg !12509
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12510, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12512, !ctir !1012
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12512, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12513, !tbaa !2355
  br label %for.cond, !dbg !12514

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12515, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12517, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12518, !ctir !1012
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12518, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12519
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12520

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12521, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12524, !ctir !1018
  %6 = load i8*, i8** %data, align 8, !dbg !12524, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12521
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12525

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12526, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12529, metadata !DIExpression()), !dbg !12530
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12531, !tbaa !2355
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12533, !ctir !1018
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12533, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12534, !tbaa !2355
  br label %for.cond3, !dbg !12535

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12536, !tbaa !2355
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12538
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12538

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12539, !tbaa !2355
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12542, !ctir !1012
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12542, !tbaa !12311, !ctir !1047
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12539
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12543

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12544, !tbaa !2355
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12545, !ctir !1012
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12545, !tbaa !12311, !ctir !1047
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12546, !tbaa !2355
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12547, !ctir !1018
  %15 = load i8*, i8** %data9, align 8, !dbg !12547, !tbaa !11751, !ctir !47
  call void %13(i8* %15), !dbg !12544
  br label %if.end, !dbg !12544

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12548, !tbaa !2355
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12549, !ctir !1018
  store i8* null, i8** %data10, align 8, !dbg !12550, !tbaa !11751, !ctir !47
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12551, !tbaa !2355
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12552, !ctir !1018
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12552, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12553, !tbaa !2355
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12554, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12555, !ctir !1012
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12555, !tbaa !12315, !ctir !1017
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12556, !tbaa !2355
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12557, !ctir !1018
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12558, !tbaa !11763, !ctir !1017
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12559, !tbaa !2355
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12560, !tbaa !2355
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12561, !ctir !1012
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12562, !tbaa !12315, !ctir !1017
  br label %for.inc, !dbg !12563

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12564, !tbaa !2355
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12565, !tbaa !2355
  br label %for.cond3, !dbg !12566, !llvm.loop !12567

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12569, !tbaa !2355
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12571, !ctir !1012
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12571, !tbaa !12311, !ctir !1047
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12569
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12572

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12573, !tbaa !2355
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12574, !ctir !1012
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12574, !tbaa !12311, !ctir !1047
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12575, !tbaa !2355
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12576, !ctir !1018
  %30 = load i8*, i8** %data18, align 8, !dbg !12576, !tbaa !11751, !ctir !47
  call void %28(i8* %30), !dbg !12573
  br label %if.end19, !dbg !12573

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12577, !tbaa !2355
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12578, !ctir !1018
  store i8* null, i8** %data20, align 8, !dbg !12579, !tbaa !11751, !ctir !47
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12580, !tbaa !2355
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12581, !ctir !1018
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12582, !tbaa !11763, !ctir !1017
  br label %if.end22, !dbg !12583

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12584

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12585, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12585
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12585, !tbaa !2355
  br label %for.cond, !dbg !12586, !llvm.loop !12587

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12589, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12590, !ctir !1012
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12591, !tbaa !11718, !ctir !52
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12592, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12593, !ctir !1012
  store i64 0, i64* %n_entries, align 8, !dbg !12594, !tbaa !11725, !ctir !52
  ret void, !dbg !12595
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !12596 !ctir !1117 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1017
  %next = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12597, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12599, metadata !DIExpression()), !dbg !12600
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12601, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12603, metadata !DIExpression()), !dbg !12604
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12605, !tbaa !2355
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12607, !ctir !1012
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12607, !tbaa !12311, !ctir !1047
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12605
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12608

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12609, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12610, !ctir !1012
  %3 = load i64, i64* %n_entries, align 8, !dbg !12610, !tbaa !11725, !ctir !52
  %tobool1 = icmp ne i64 %3, 0, !dbg !12609
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12611

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12612, !tbaa !2355
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12615, !ctir !1012
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12615, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12616, !tbaa !2355
  br label %for.cond, !dbg !12617

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12618, !tbaa !2355
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12620, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12621, !ctir !1012
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12621, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12622
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12623

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12624, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12627, !ctir !1018
  %10 = load i8*, i8** %data, align 8, !dbg !12627, !tbaa !11751, !ctir !47
  %tobool3 = icmp ne i8* %10, null, !dbg !12624
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12628

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12629, !tbaa !2355
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12632, !tbaa !2355
  br label %for.cond5, !dbg !12633

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12634, !tbaa !2355
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12636
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12636

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12637, !tbaa !2355
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12638, !ctir !1012
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12638, !tbaa !12311, !ctir !1047
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12639, !tbaa !2355
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12640, !ctir !1018
  %16 = load i8*, i8** %data9, align 8, !dbg !12640, !tbaa !11751, !ctir !47
  call void %14(i8* %16), !dbg !12637
  br label %for.inc, !dbg !12637

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12641, !tbaa !2355
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12642, !ctir !1018
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12642, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12643, !tbaa !2355
  br label %for.cond5, !dbg !12644, !llvm.loop !12645

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12647

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12648

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12649, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12649
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12649, !tbaa !2355
  br label %for.cond, !dbg !12650, !llvm.loop !12651

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12653

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12654, !tbaa !2355
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12656, !ctir !1012
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12656, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12657, !tbaa !2355
  br label %for.cond15, !dbg !12658

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12659, !tbaa !2355
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12661, !tbaa !2355
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12662, !ctir !1012
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12662, !tbaa !11744, !ctir !1023
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12663
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12664

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12665, !tbaa !2355
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12668, !ctir !1018
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12668, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12669, !tbaa !2355
  br label %for.cond20, !dbg !12670

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12671, !tbaa !2355
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12673
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12673

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12674, !tbaa !2355
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12676, !ctir !1018
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12676, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12677, !tbaa !2355
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12678, !tbaa !2355
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12678
  call void @free(i8* %31) #12, !dbg !12679
  br label %for.inc24, !dbg !12680

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12681, !tbaa !2355
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12682, !tbaa !2355
  br label %for.cond20, !dbg !12683, !llvm.loop !12684

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12686

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12687, !tbaa !2355
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12687
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12687, !tbaa !2355
  br label %for.cond15, !dbg !12688, !llvm.loop !12689

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12691, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12693, !ctir !1012
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12693, !tbaa !12315, !ctir !1017
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12694, !tbaa !2355
  br label %for.cond29, !dbg !12695

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12696, !tbaa !2355
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12698
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12698

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12699, !tbaa !2355
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12701, !ctir !1018
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12701, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12702, !tbaa !2355
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12703, !tbaa !2355
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12703
  call void @free(i8* %40) #12, !dbg !12704
  br label %for.inc33, !dbg !12705

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12706, !tbaa !2355
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12707, !tbaa !2355
  br label %for.cond29, !dbg !12708, !llvm.loop !12709

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12711, !tbaa !2355
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12712, !ctir !1012
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12712, !tbaa !11737, !ctir !1017
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12711
  call void @free(i8* %44) #12, !dbg !12713
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12714, !tbaa !2355
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12714
  call void @free(i8* %46) #12, !dbg !12715
  ret void, !dbg !12716
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12717 !ctir !1119 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %candidate.addr = alloca i64, align 8, !ctir !52
  %storage = alloca %struct.hash_table, align 8, !ctir !1012
  %new_table = alloca %struct.hash_table*, align 8, !ctir !1116
  %new_size = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12718, metadata !DIExpression()), !dbg !12719
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12722, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12724, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12726, metadata !DIExpression()), !dbg !12727
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12728, !tbaa !2516
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12729, !tbaa !2355
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12730, !ctir !1012
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12730, !tbaa !12255, !ctir !1029
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12731
  store i64 %call, i64* %new_size, align 8, !dbg !12727, !tbaa !2516
  %3 = load i64, i64* %new_size, align 8, !dbg !12732, !tbaa !2516
  %tobool = icmp ne i64 %3, 0, !dbg !12732
  br i1 %tobool, label %if.end, label %if.then, !dbg !12734

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12735
  br label %return, !dbg !12735

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12736, !tbaa !2516
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12738, !tbaa !2355
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12739, !ctir !1012
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12739, !tbaa !11710, !ctir !52
  %cmp = icmp eq i64 %4, %6, !dbg !12740
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12741

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12742
  br label %return, !dbg !12742

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12743, !tbaa !2355
  %7 = load i64, i64* %new_size, align 8, !dbg !12744, !tbaa !2516
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #12, !dbg !12745
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12745
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12746, !tbaa !2355
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12747, !ctir !1012
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12748, !tbaa !11737, !ctir !1017
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12749, !tbaa !2355
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12751, !ctir !1012
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12751, !tbaa !11737, !ctir !1017
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12752
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12753

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12754
  br label %return, !dbg !12754

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12755, !tbaa !2516
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12756, !tbaa !2355
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12757, !ctir !1012
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12758, !tbaa !11710, !ctir !52
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12759, !tbaa !2355
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12760, !ctir !1012
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12760, !tbaa !11737, !ctir !1017
  %16 = load i64, i64* %new_size, align 8, !dbg !12761, !tbaa !2516
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12762
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12763, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12764, !ctir !1012
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12765, !tbaa !11744, !ctir !1023
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12766, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12767, !ctir !1012
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12768, !tbaa !11718, !ctir !52
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12769, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12770, !ctir !1012
  store i64 0, i64* %n_entries, align 8, !dbg !12771, !tbaa !11725, !ctir !52
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12772, !tbaa !2355
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12773, !ctir !1012
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12773, !tbaa !12255, !ctir !1029
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12774, !tbaa !2355
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12775, !ctir !1012
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12776, !tbaa !12255, !ctir !1029
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12777, !tbaa !2355
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12778, !ctir !1012
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12778, !tbaa !11939, !ctir !1041
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12779, !tbaa !2355
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12780, !ctir !1012
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12781, !tbaa !11939, !ctir !1041
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12782, !tbaa !2355
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12783, !ctir !1012
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12783, !tbaa !11913, !ctir !1044
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12784, !tbaa !2355
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12785, !ctir !1012
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12786, !tbaa !11913, !ctir !1044
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12787, !tbaa !2355
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12788, !ctir !1012
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12788, !tbaa !12311, !ctir !1047
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12789, !tbaa !2355
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12790, !ctir !1012
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12791, !tbaa !12311, !ctir !1047
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12792, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12793, !ctir !1012
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12793, !tbaa !12315, !ctir !1017
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12794, !tbaa !2355
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12795, !ctir !1012
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12796, !tbaa !12315, !ctir !1017
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12797, !tbaa !2355
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12799, !tbaa !2355
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12800
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12801

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12802, !tbaa !2355
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12804, !ctir !1012
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12804, !tbaa !11737, !ctir !1017
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12802
  call void @free(i8* %39) #12, !dbg !12805
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12806, !tbaa !2355
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12807, !ctir !1012
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12807, !tbaa !11737, !ctir !1017
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12808, !tbaa !2355
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12809, !ctir !1012
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12810, !tbaa !11737, !ctir !1017
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12811, !tbaa !2355
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12812, !ctir !1012
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12812, !tbaa !11744, !ctir !1023
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12813, !tbaa !2355
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12814, !ctir !1012
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12815, !tbaa !11744, !ctir !1023
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12816, !tbaa !2355
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12817, !ctir !1012
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12817, !tbaa !11710, !ctir !52
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12818, !tbaa !2355
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12819, !ctir !1012
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12820, !tbaa !11710, !ctir !52
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12821, !tbaa !2355
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12822, !ctir !1012
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12822, !tbaa !11718, !ctir !52
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12823, !tbaa !2355
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12824, !ctir !1012
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12825, !tbaa !11718, !ctir !52
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12826, !tbaa !2355
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12827, !ctir !1012
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12827, !tbaa !12315, !ctir !1017
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12828, !tbaa !2355
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12829, !ctir !1012
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12830, !tbaa !12315, !ctir !1017
  store i1 true, i1* %retval, align 1, !dbg !12831
  br label %return, !dbg !12831

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12832, !tbaa !2355
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12833, !ctir !1012
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12833, !tbaa !12315, !ctir !1017
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12834, !tbaa !2355
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12835, !ctir !1012
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12836, !tbaa !12315, !ctir !1017
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12837, !tbaa !2355
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12839, !tbaa !2355
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12840
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12841

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12842, !tbaa !2355
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12843, !tbaa !2355
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12844
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12845

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12846
  unreachable, !dbg !12846

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12847, !tbaa !2355
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12848, !ctir !1012
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12848, !tbaa !11737, !ctir !1017
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12847
  call void @free(i8* %64) #12, !dbg !12849
  store i1 false, i1* %retval, align 1, !dbg !12850
  br label %return, !dbg !12850

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12851
  ret i1 %65, !dbg !12851
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12852 !ctir !1136 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %dst.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %src.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %safe.addr = alloca i8, align 1, !ctir !102
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1017
  %next = alloca %struct.hash_entry*, align 8, !ctir !1017
  %data2 = alloca i8*, align 8, !ctir !47
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12853, metadata !DIExpression()), !dbg !12854
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12855, metadata !DIExpression()), !dbg !12856
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12857, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12859, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12861, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12863, metadata !DIExpression()), !dbg !12864
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12865, !tbaa !2355
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12867, !ctir !1012
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12867, !tbaa !11737, !ctir !1017
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12868, !tbaa !2355
  br label %for.cond, !dbg !12869

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12870, !tbaa !2355
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12872, !tbaa !2355
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12873, !ctir !1012
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12873, !tbaa !11744, !ctir !1023
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12874
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12875

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12876, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12878, !ctir !1018
  %6 = load i8*, i8** %data, align 8, !dbg !12878, !tbaa !11751, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12876
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12879

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12880, metadata !DIExpression()), !dbg !12882
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12883, metadata !DIExpression()), !dbg !12884
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12885, !tbaa !2355
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12887, !ctir !1018
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12887, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12888, !tbaa !2355
  br label %for.cond4, !dbg !12889

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12890, !tbaa !2355
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12892
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12892

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12893, !tbaa !2355
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12895, !ctir !1018
  %11 = load i8*, i8** %data7, align 8, !dbg !12895, !tbaa !11751, !ctir !47
  store i8* %11, i8** %data2, align 8, !dbg !12896, !tbaa !2355
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12897, !tbaa !2355
  %13 = load i8*, i8** %data2, align 8, !dbg !12898, !tbaa !2355
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12899
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12900, !tbaa !2355
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12901, !tbaa !2355
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12902, !ctir !1018
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12902, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12903, !tbaa !2355
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12904, !tbaa !2355
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12906, !ctir !1018
  %17 = load i8*, i8** %data9, align 8, !dbg !12906, !tbaa !11751, !ctir !47
  %tobool10 = icmp ne i8* %17, null, !dbg !12904
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12907

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12908, !tbaa !2355
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12910, !ctir !1018
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12910, !tbaa !11763, !ctir !1017
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12911, !tbaa !2355
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12912, !ctir !1018
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12913, !tbaa !11763, !ctir !1017
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12914, !tbaa !2355
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12915, !tbaa !2355
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12916, !ctir !1018
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12917, !tbaa !11763, !ctir !1017
  br label %if.end, !dbg !12918

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12919, !tbaa !2355
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12921, !tbaa !2355
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12922, !ctir !1018
  store i8* %23, i8** %data15, align 8, !dbg !12923, !tbaa !11751, !ctir !47
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12924, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12925, !ctir !1012
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12926, !tbaa !11718, !ctir !52
  %inc = add i64 %26, 1, !dbg !12926
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12926, !tbaa !11718, !ctir !52
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12927, !tbaa !2355
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12928, !tbaa !2355
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12929
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12930

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12931, !tbaa !2355
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12932, !tbaa !2355
  br label %for.cond4, !dbg !12933, !llvm.loop !12934

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12936, !tbaa !2355
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12937, !ctir !1018
  %31 = load i8*, i8** %data16, align 8, !dbg !12937, !tbaa !11751, !ctir !47
  store i8* %31, i8** %data2, align 8, !dbg !12938, !tbaa !2355
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12939, !tbaa !2355
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12940, !ctir !1018
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12941, !tbaa !11763, !ctir !1017
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12942, !tbaa !2499
  %tobool18 = trunc i8 %33 to i1, !dbg !12942
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12944

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12945

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12946, !tbaa !2355
  %35 = load i8*, i8** %data2, align 8, !dbg !12947, !tbaa !2355
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12948
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12949, !tbaa !2355
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12950, !tbaa !2355
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12952, !ctir !1018
  %37 = load i8*, i8** %data22, align 8, !dbg !12952, !tbaa !11751, !ctir !47
  %tobool23 = icmp ne i8* %37, null, !dbg !12950
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12953

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12954, metadata !DIExpression()), !dbg !12956
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12957, !tbaa !2355
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12958
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12956, !tbaa !2355
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12959, !tbaa !2355
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12961
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12962

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12963
  br label %return, !dbg !12963

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12964, !tbaa !2355
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12965, !tbaa !2355
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12966, !ctir !1018
  store i8* %40, i8** %data29, align 8, !dbg !12967, !tbaa !11751, !ctir !47
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12968, !tbaa !2355
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12969, !ctir !1018
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12969, !tbaa !11763, !ctir !1017
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12970, !tbaa !2355
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12971, !ctir !1018
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12972, !tbaa !11763, !ctir !1017
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12973, !tbaa !2355
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12974, !tbaa !2355
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12975, !ctir !1018
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12976, !tbaa !11763, !ctir !1017
  br label %if.end37, !dbg !12977

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12978, !tbaa !2355
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12980, !tbaa !2355
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12981, !ctir !1018
  store i8* %47, i8** %data34, align 8, !dbg !12982, !tbaa !11751, !ctir !47
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12983, !tbaa !2355
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12984, !ctir !1012
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12985, !tbaa !11718, !ctir !52
  %inc36 = add i64 %50, 1, !dbg !12985
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12985, !tbaa !11718, !ctir !52
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12986, !tbaa !2355
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12987, !ctir !1018
  store i8* null, i8** %data38, align 8, !dbg !12988, !tbaa !11751, !ctir !47
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12989, !tbaa !2355
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12990, !ctir !1012
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12991, !tbaa !11718, !ctir !52
  %dec = add i64 %53, -1, !dbg !12991
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12991, !tbaa !11718, !ctir !52
  br label %if.end40, !dbg !12992

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12878

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12993, !tbaa !2355
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12993
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12993, !tbaa !2355
  br label %for.cond, !dbg !12994, !llvm.loop !12995

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12997
  br label %return, !dbg !12997

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12998
  ret i1 %55, !dbg !12998
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12999 !ctir !1138 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %entry.addr = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13000, metadata !DIExpression()), !dbg !13001
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !13004, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !13005, !ctir !1018
  store i8* null, i8** %data, align 8, !dbg !13006, !tbaa !11751, !ctir !47
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13007, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !13008, !ctir !1012
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13008, !tbaa !12315, !ctir !1017
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !13009, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !13010, !ctir !1018
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !13011, !tbaa !11763, !ctir !1017
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !13012, !tbaa !2355
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13013, !tbaa !2355
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !13014, !ctir !1012
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !13015, !tbaa !12315, !ctir !1017
  ret void, !dbg !13016
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !13017 !ctir !1143 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %new = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !13020, metadata !DIExpression()), !dbg !13021
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13022, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !13024, !ctir !1012
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13024, !tbaa !12315, !ctir !1017
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !13022
  br i1 %tobool, label %if.then, label %if.else, !dbg !13025

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13026, !tbaa !2355
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !13028, !ctir !1012
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !13028, !tbaa !12315, !ctir !1017
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !13029, !tbaa !2355
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !13030, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !13031, !ctir !1018
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13031, !tbaa !11763, !ctir !1017
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13032, !tbaa !2355
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !13033, !ctir !1012
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !13034, !tbaa !12315, !ctir !1017
  br label %if.end, !dbg !13035

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #12, !dbg !13036
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !13036
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !13038, !tbaa !2355
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !13039, !tbaa !2355
  ret %struct.hash_entry* %8, !dbg !13040
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !13041 !ctir !1121 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %entry.addr = alloca i8*, align 8, !ctir !85
  %matched_ent.addr = alloca i8**, align 8, !ctir !1123
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !1029
  %candidate = alloca float, align 4, !ctir !1035
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13044, metadata !DIExpression()), !dbg !13045
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13048, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13050, metadata !DIExpression()), !dbg !13051
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !13052, !tbaa !2355
  %tobool = icmp ne i8* %0, null, !dbg !13052
  br i1 %tobool, label %if.end, label %if.then, !dbg !13054

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !13055
  unreachable, !dbg !13055

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13056, !tbaa !2355
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !13058, !tbaa !2355
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13059
  store i8* %call, i8** %data, align 8, !dbg !13060, !tbaa !2355
  %cmp = icmp ne i8* %call, null, !dbg !13061
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !13062

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !13063, !tbaa !2355
  %tobool3 = icmp ne i8** %3, null, !dbg !13063
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13066

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !13067, !tbaa !2355
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !13068, !tbaa !2355
  store i8* %4, i8** %5, align 8, !dbg !13069, !tbaa !2355, !ctir !85
  br label %if.end5, !dbg !13070

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !13071
  br label %return, !dbg !13071

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13072, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !13074, !ctir !1012
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !13074, !tbaa !11718, !ctir !52
  %conv = uitofp i64 %7 to float, !dbg !13072
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13075, !tbaa !2355
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !13076, !ctir !1012
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13076, !tbaa !12255, !ctir !1029
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !13077, !ctir !1030
  %10 = load float, float* %growth_threshold, align 4, !dbg !13077, !tbaa !12366, !ctir !1035
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13078, !tbaa !2355
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !13079, !ctir !1012
  %12 = load i64, i64* %n_buckets, align 8, !dbg !13079, !tbaa !11710, !ctir !52
  %conv7 = uitofp i64 %12 to float, !dbg !13078
  %mul = fmul float %10, %conv7, !dbg !13080
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !13081
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !13082

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13083, !tbaa !2355
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !13085
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13086, !tbaa !2355
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !13088, !ctir !1012
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !13088, !tbaa !11718, !ctir !52
  %conv13 = uitofp i64 %15 to float, !dbg !13086
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13089, !tbaa !2355
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !13090, !ctir !1012
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !13090, !tbaa !12255, !ctir !1029
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !13091, !ctir !1030
  %18 = load float, float* %growth_threshold15, align 4, !dbg !13091, !tbaa !12366, !ctir !1035
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13092, !tbaa !2355
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !13093, !ctir !1012
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !13093, !tbaa !11710, !ctir !52
  %conv17 = uitofp i64 %20 to float, !dbg !13092
  %mul18 = fmul float %18, %conv17, !dbg !13094
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !13095
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !13096

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !13097, metadata !DIExpression()), !dbg !13099
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13100, !tbaa !2355
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !13101, !ctir !1012
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !13101, !tbaa !12255, !ctir !1029
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !13099, !tbaa !2355
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !13102, metadata !DIExpression()), !dbg !13103
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13104, !tbaa !2355
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !13105, !ctir !1030
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !13105, !tbaa !12423
  %tobool24 = trunc i8 %24 to i1, !dbg !13105, !ctir !102
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !13104

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13106, !tbaa !2355
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !13107, !ctir !1012
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !13107, !tbaa !11710, !ctir !52
  %conv27 = uitofp i64 %26 to float, !dbg !13106
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13108, !tbaa !2355
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !13109, !ctir !1030
  %28 = load float, float* %growth_factor, align 4, !dbg !13109, !tbaa !12380, !ctir !1035
  %mul28 = fmul float %conv27, %28, !dbg !13110
  br label %cond.end, !dbg !13104

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13111, !tbaa !2355
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !13112, !ctir !1012
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !13112, !tbaa !11710, !ctir !52
  %conv30 = uitofp i64 %30 to float, !dbg !13111
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13113, !tbaa !2355
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !13114, !ctir !1030
  %32 = load float, float* %growth_factor31, align 4, !dbg !13114, !tbaa !12380, !ctir !1035
  %mul32 = fmul float %conv30, %32, !dbg !13115
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13116, !tbaa !2355
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !13117, !ctir !1030
  %34 = load float, float* %growth_threshold33, align 4, !dbg !13117, !tbaa !12366, !ctir !1035
  %mul34 = fmul float %mul32, %34, !dbg !13118
  br label %cond.end, !dbg !13104

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !13104
  store float %cond, float* %candidate, align 4, !dbg !13103, !tbaa !12211
  %35 = load float, float* %candidate, align 4, !dbg !13119, !tbaa !12211
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !13121
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13122

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !13123
  br label %return, !dbg !13123

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13124, !tbaa !2355
  %37 = load float, float* %candidate, align 4, !dbg !13126, !tbaa !12211
  %conv39 = fptoui float %37 to i64, !dbg !13126
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !13127
  br i1 %call40, label %if.end42, label %if.then41, !dbg !13128

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !13129
  br label %return, !dbg !13129

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13130, !tbaa !2355
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !13132, !tbaa !2355
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13133
  %cmp44 = icmp ne i8* %call43, null, !dbg !13134
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13135

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !13136
  unreachable, !dbg !13136

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !13137

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !13138

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13139, !tbaa !2355
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13141, !ctir !1018
  %41 = load i8*, i8** %data50, align 8, !dbg !13141, !tbaa !11751, !ctir !47
  %tobool51 = icmp ne i8* %41, null, !dbg !13139
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !13142

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !13143, metadata !DIExpression()), !dbg !13145
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13146, !tbaa !2355
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !13147
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !13145, !tbaa !2355
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13148, !tbaa !2355
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !13150
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13151

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !13152
  br label %return, !dbg !13152

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !13153, !tbaa !2355
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13154, !tbaa !2355
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !13155, !ctir !1018
  store i8* %44, i8** %data58, align 8, !dbg !13156, !tbaa !11751, !ctir !47
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13157, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13158, !ctir !1018
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13158, !tbaa !11763, !ctir !1017
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13159, !tbaa !2355
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13160, !ctir !1018
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13161, !tbaa !11763, !ctir !1017
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13162, !tbaa !2355
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13163, !tbaa !2355
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13164, !ctir !1018
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13165, !tbaa !11763, !ctir !1017
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13166, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13167, !ctir !1012
  %52 = load i64, i64* %n_entries, align 8, !dbg !13168, !tbaa !11725, !ctir !52
  %inc = add i64 %52, 1, !dbg !13168
  store i64 %inc, i64* %n_entries, align 8, !dbg !13168, !tbaa !11725, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !13169
  br label %return, !dbg !13169

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13170, !tbaa !2355
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13171, !tbaa !2355
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13172, !ctir !1018
  store i8* %53, i8** %data62, align 8, !dbg !13173, !tbaa !11751, !ctir !47
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13174, !tbaa !2355
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13175, !ctir !1012
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13176, !tbaa !11725, !ctir !52
  %inc64 = add i64 %56, 1, !dbg !13176
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13176, !tbaa !11725, !ctir !52
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13177, !tbaa !2355
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13178, !ctir !1012
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13179, !tbaa !11718, !ctir !52
  %inc66 = add i64 %58, 1, !dbg !13179
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13179, !tbaa !11718, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !13180
  br label %return, !dbg !13180

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13181
  ret i32 %59, !dbg !13181
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !13182 !ctir !1140 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %entry.addr = alloca i8*, align 8, !ctir !85
  %bucket_head.addr = alloca %struct.hash_entry**, align 8, !ctir !1142
  %delete.addr = alloca i8, align 1, !ctir !102
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1017
  %data7 = alloca i8*, align 8, !ctir !47
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !1017
  %data29 = alloca i8*, align 8, !ctir !47
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13183, metadata !DIExpression()), !dbg !13184
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13185, metadata !DIExpression()), !dbg !13186
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13187, metadata !DIExpression()), !dbg !13188
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13191, metadata !DIExpression()), !dbg !13192
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13193, !tbaa !2355
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13194, !tbaa !2355
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13195
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13192, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13196, metadata !DIExpression()), !dbg !13197
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13198, !tbaa !2355
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13199, !tbaa !2355
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13200, !tbaa !2355, !ctir !1017
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13201, !tbaa !2355
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13203, !ctir !1018
  %5 = load i8*, i8** %data, align 8, !dbg !13203, !tbaa !11751, !ctir !47
  %cmp = icmp eq i8* %5, null, !dbg !13204
  br i1 %cmp, label %if.then, label %if.end, !dbg !13205

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13206
  br label %return, !dbg !13206

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13207, !tbaa !2355
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13209, !tbaa !2355
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13210, !ctir !1018
  %8 = load i8*, i8** %data2, align 8, !dbg !13210, !tbaa !11751, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !13211
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13212

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13213, !tbaa !2355
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13214, !ctir !1012
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13214, !tbaa !11913, !ctir !1044
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13215, !tbaa !2355
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13216, !tbaa !2355
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13217, !ctir !1018
  %13 = load i8*, i8** %data4, align 8, !dbg !13217, !tbaa !11751, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13213
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13218

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13219, metadata !DIExpression()), !dbg !13221
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13222, !tbaa !2355
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13223, !ctir !1018
  %15 = load i8*, i8** %data8, align 8, !dbg !13223, !tbaa !11751, !ctir !47
  store i8* %15, i8** %data7, align 8, !dbg !13221, !tbaa !2355
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13224, !tbaa !2499
  %tobool = trunc i8 %16 to i1, !dbg !13224
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13226

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13227, !tbaa !2355
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13230, !ctir !1018
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13230, !tbaa !11763, !ctir !1017
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13227
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13231

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13232, metadata !DIExpression()), !dbg !13234
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13235, !tbaa !2355
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13236, !ctir !1018
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13236, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13234, !tbaa !2355
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13237, !tbaa !2355
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13238, !tbaa !2355
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13239
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13239, !tbaa.struct !9559
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13240, !tbaa !2355
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13241, !tbaa !2355
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13242
  br label %if.end15, !dbg !13243

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13244, !tbaa !2355
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13246, !ctir !1018
  store i8* null, i8** %data14, align 8, !dbg !13247, !tbaa !11751, !ctir !47
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13248

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13249, !tbaa !2355
  store i8* %28, i8** %retval, align 8, !dbg !13250
  br label %return, !dbg !13250

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13251, !tbaa !2355
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13253, !tbaa !2355
  br label %for.cond, !dbg !13254

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13255, !tbaa !2355
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13257, !ctir !1018
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13257, !tbaa !11763, !ctir !1017
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13258
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13258

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13259, !tbaa !2355
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13262, !tbaa !2355
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13263, !ctir !1018
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13263, !tbaa !11763, !ctir !1017
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13264, !ctir !1018
  %35 = load i8*, i8** %data21, align 8, !dbg !13264, !tbaa !11751, !ctir !47
  %cmp22 = icmp eq i8* %32, %35, !dbg !13265
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13266

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13267, !tbaa !2355
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13268, !ctir !1012
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13268, !tbaa !11913, !ctir !1044
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13269, !tbaa !2355
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13270, !tbaa !2355
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13271, !ctir !1018
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13271, !tbaa !11763, !ctir !1017
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13272, !ctir !1018
  %41 = load i8*, i8** %data26, align 8, !dbg !13272, !tbaa !11751, !ctir !47
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13267
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13273

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13274, metadata !DIExpression()), !dbg !13276
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13277, !tbaa !2355
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13278, !ctir !1018
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13278, !tbaa !11763, !ctir !1017
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13279, !ctir !1018
  %44 = load i8*, i8** %data31, align 8, !dbg !13279, !tbaa !11751, !ctir !47
  store i8* %44, i8** %data29, align 8, !dbg !13276, !tbaa !2355
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13280, !tbaa !2499
  %tobool32 = trunc i8 %45 to i1, !dbg !13280
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13282

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13283, metadata !DIExpression()), !dbg !13285
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13286, !tbaa !2355
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13287, !ctir !1018
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13287, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13285, !tbaa !2355
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13288, !tbaa !2355
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13289, !ctir !1018
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13289, !tbaa !11763, !ctir !1017
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13290, !tbaa !2355
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13291, !ctir !1018
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13292, !tbaa !11763, !ctir !1017
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13293, !tbaa !2355
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13294, !tbaa !2355
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13295
  br label %if.end38, !dbg !13296

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13297, !tbaa !2355
  store i8* %53, i8** %retval, align 8, !dbg !13298
  br label %return, !dbg !13298

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13299

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13300, !tbaa !2355
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13301, !ctir !1018
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13301, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13302, !tbaa !2355
  br label %for.cond, !dbg !13303, !llvm.loop !13304

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13306
  br label %return, !dbg !13306

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13307
  ret i8* %56, !dbg !13307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13308 !ctir !1124 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %entry.addr = alloca i8*, align 8, !ctir !85
  %matched_ent = alloca i8*, align 8, !ctir !85
  %err = alloca i32, align 4, !ctir !5
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13309, metadata !DIExpression()), !dbg !13310
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13311, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13313, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13315, metadata !DIExpression()), !dbg !13316
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13317, !tbaa !2355
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13318, !tbaa !2355
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13319
  store i32 %call, i32* %err, align 4, !dbg !13316, !tbaa !2342
  %2 = load i32, i32* %err, align 4, !dbg !13320, !tbaa !2342
  %cmp = icmp eq i32 %2, -1, !dbg !13321
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13320

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13320

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13322, !tbaa !2342
  %cmp2 = icmp eq i32 %3, 0, !dbg !13323
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13322

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13324, !tbaa !2355
  br label %cond.end, !dbg !13322

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13325, !tbaa !2355
  br label %cond.end, !dbg !13322

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13322
  br label %cond.end5, !dbg !13320

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13320
  ret i8* %cond6, !dbg !13326
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13327 !ctir !1124 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1116
  %entry.addr = alloca i8*, align 8, !ctir !85
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1017
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !1029
  %candidate = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1017
  %next = alloca %struct.hash_entry*, align 8, !ctir !1017
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13328, metadata !DIExpression()), !dbg !13329
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13330, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13332, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13334, metadata !DIExpression()), !dbg !13335
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13336, !tbaa !2355
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13337, !tbaa !2355
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13338
  store i8* %call, i8** %data, align 8, !dbg !13339, !tbaa !2355
  %2 = load i8*, i8** %data, align 8, !dbg !13340, !tbaa !2355
  %tobool = icmp ne i8* %2, null, !dbg !13340
  br i1 %tobool, label %if.end, label %if.then, !dbg !13342

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13343
  br label %return, !dbg !13343

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13344, !tbaa !2355
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13345, !ctir !1012
  %4 = load i64, i64* %n_entries, align 8, !dbg !13346, !tbaa !11725, !ctir !52
  %dec = add i64 %4, -1, !dbg !13346
  store i64 %dec, i64* %n_entries, align 8, !dbg !13346, !tbaa !11725, !ctir !52
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13347, !tbaa !2355
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13349, !ctir !1018
  %6 = load i8*, i8** %data2, align 8, !dbg !13349, !tbaa !11751, !ctir !47
  %tobool3 = icmp ne i8* %6, null, !dbg !13347
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13350

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13351, !tbaa !2355
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13353, !ctir !1012
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13354, !tbaa !11718, !ctir !52
  %dec5 = add i64 %8, -1, !dbg !13354
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13354, !tbaa !11718, !ctir !52
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13355, !tbaa !2355
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13357, !ctir !1012
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13357, !tbaa !11718, !ctir !52
  %conv = uitofp i64 %10 to float, !dbg !13355
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13358, !tbaa !2355
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13359, !ctir !1012
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13359, !tbaa !12255, !ctir !1029
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13360, !ctir !1030
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13360, !tbaa !12385, !ctir !1035
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13361, !tbaa !2355
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13362, !ctir !1012
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13362, !tbaa !11710, !ctir !52
  %conv7 = uitofp i64 %15 to float, !dbg !13361
  %mul = fmul float %13, %conv7, !dbg !13363
  %cmp = fcmp olt float %conv, %mul, !dbg !13364
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13365

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13366, !tbaa !2355
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13368
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13369, !tbaa !2355
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13371, !ctir !1012
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13371, !tbaa !11718, !ctir !52
  %conv12 = uitofp i64 %18 to float, !dbg !13369
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13372, !tbaa !2355
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13373, !ctir !1012
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13373, !tbaa !12255, !ctir !1029
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13374, !ctir !1030
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13374, !tbaa !12385, !ctir !1035
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13375, !tbaa !2355
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13376, !ctir !1012
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13376, !tbaa !11710, !ctir !52
  %conv16 = uitofp i64 %23 to float, !dbg !13375
  %mul17 = fmul float %21, %conv16, !dbg !13377
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13378
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13379

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13380, metadata !DIExpression()), !dbg !13382
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13383, !tbaa !2355
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13384, !ctir !1012
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13384, !tbaa !12255, !ctir !1029
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13382, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13385, metadata !DIExpression()), !dbg !13386
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13387, !tbaa !2355
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13388, !ctir !1030
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13388, !tbaa !12423
  %tobool23 = trunc i8 %27 to i1, !dbg !13388, !ctir !102
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13387

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13389, !tbaa !2355
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13390, !ctir !1012
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13390, !tbaa !11710, !ctir !52
  %conv26 = uitofp i64 %29 to float, !dbg !13389
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13391, !tbaa !2355
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13392, !ctir !1030
  %31 = load float, float* %shrink_factor, align 4, !dbg !13392, !tbaa !12394, !ctir !1035
  %mul27 = fmul float %conv26, %31, !dbg !13393
  br label %cond.end, !dbg !13387

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13394, !tbaa !2355
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13395, !ctir !1012
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13395, !tbaa !11710, !ctir !52
  %conv29 = uitofp i64 %33 to float, !dbg !13394
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13396, !tbaa !2355
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13397, !ctir !1030
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13397, !tbaa !12394, !ctir !1035
  %mul31 = fmul float %conv29, %35, !dbg !13398
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13399, !tbaa !2355
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13400, !ctir !1030
  %37 = load float, float* %growth_threshold, align 4, !dbg !13400, !tbaa !12366, !ctir !1035
  %mul32 = fmul float %mul31, %37, !dbg !13401
  br label %cond.end, !dbg !13387

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13387
  %conv33 = fptoui float %cond to i64, !dbg !13402
  store i64 %conv33, i64* %candidate, align 8, !dbg !13386, !tbaa !2516
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13403, !tbaa !2355
  %39 = load i64, i64* %candidate, align 8, !dbg !13405, !tbaa !2516
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13406
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13407

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13408, metadata !DIExpression()), !dbg !13410
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13411, !tbaa !2355
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13412, !ctir !1012
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13412, !tbaa !12315, !ctir !1017
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13410, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13413, metadata !DIExpression()), !dbg !13414
  br label %while.cond, !dbg !13415

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13416, !tbaa !2355
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13415
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13415

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13417, !tbaa !2355
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13419, !ctir !1018
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13419, !tbaa !11763, !ctir !1017
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13420, !tbaa !2355
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13421, !tbaa !2355
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13421
  call void @free(i8* %46) #12, !dbg !13422
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13423, !tbaa !2355
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13424, !tbaa !2355
  br label %while.cond, !dbg !13415, !llvm.loop !13425

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13427, !tbaa !2355
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13428, !ctir !1012
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13429, !tbaa !12315, !ctir !1017
  br label %if.end39, !dbg !13430

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13431

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13432

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13433

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13434, !tbaa !2355
  store i8* %49, i8** %retval, align 8, !dbg !13435
  br label %return, !dbg !13435

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13436
  ret i8* %50, !dbg !13436
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.heap* @heap_alloc(i32 (i8*, i8*)* %compare, i64 %n_reserve) #4 !dbg !13437 !ctir !1545 {
entry:
  %compare.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1555
  %n_reserve.addr = alloca i64, align 8, !ctir !52
  %heap = alloca %struct.heap*, align 8, !ctir !1547
  store i32 (i8*, i8*)* %compare, i32 (i8*, i8*)** %compare.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare.addr, metadata !13438, metadata !DIExpression()), !dbg !13439
  store i64 %n_reserve, i64* %n_reserve.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n_reserve.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.declare(metadata %struct.heap** %heap, metadata !13442, metadata !DIExpression()), !dbg !13443
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13444
  %0 = bitcast i8* %call to %struct.heap*, !dbg !13444
  store %struct.heap* %0, %struct.heap** %heap, align 8, !dbg !13443, !tbaa !2355
  %1 = load i64, i64* %n_reserve.addr, align 8, !dbg !13445, !tbaa !2516
  %cmp = icmp eq i64 %1, 0, !dbg !13447
  br i1 %cmp, label %if.then, label %if.end, !dbg !13448

if.then:                                          ; preds = %entry
  store i64 1, i64* %n_reserve.addr, align 8, !dbg !13449, !tbaa !2516
  br label %if.end, !dbg !13450

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, i64* %n_reserve.addr, align 8, !dbg !13451, !tbaa !2516
  %call1 = call noalias i8* @xnmalloc(i64 %2, i64 8), !dbg !13452
  %3 = bitcast i8* %call1 to i8**, !dbg !13452
  %4 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13453, !tbaa !2355
  %array = getelementptr inbounds %struct.heap, %struct.heap* %4, i32 0, i32 0, !dbg !13454, !ctir !1548
  store i8** %3, i8*** %array, align 8, !dbg !13455, !tbaa !13456, !ctir !1102
  %5 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13458, !tbaa !2355
  %array2 = getelementptr inbounds %struct.heap, %struct.heap* %5, i32 0, i32 0, !dbg !13459, !ctir !1548
  %6 = load i8**, i8*** %array2, align 8, !dbg !13459, !tbaa !13456, !ctir !1102
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 0, !dbg !13458, !ctir !1102
  store i8* null, i8** %arrayidx, align 8, !dbg !13460, !tbaa !2355
  %7 = load i64, i64* %n_reserve.addr, align 8, !dbg !13461, !tbaa !2516
  %8 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13462, !tbaa !2355
  %capacity = getelementptr inbounds %struct.heap, %struct.heap* %8, i32 0, i32 1, !dbg !13463, !ctir !1548
  store i64 %7, i64* %capacity, align 8, !dbg !13464, !tbaa !13465, !ctir !52
  %9 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13466, !tbaa !2355
  %count = getelementptr inbounds %struct.heap, %struct.heap* %9, i32 0, i32 2, !dbg !13467, !ctir !1548
  store i64 0, i64* %count, align 8, !dbg !13468, !tbaa !13469, !ctir !52
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13470, !tbaa !2355
  %tobool = icmp ne i32 (i8*, i8*)* %10, null, !dbg !13470
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13470

cond.true:                                        ; preds = %if.end
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13471, !tbaa !2355
  br label %cond.end, !dbg !13470

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %11, %cond.true ], [ @heap_default_compare, %cond.false ], !dbg !13470
  %12 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13472, !tbaa !2355
  %compare3 = getelementptr inbounds %struct.heap, %struct.heap* %12, i32 0, i32 3, !dbg !13473, !ctir !1548
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare3, align 8, !dbg !13474, !tbaa !13475, !ctir !1555
  %13 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13476, !tbaa !2355
  ret %struct.heap* %13, !dbg !13477
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @heap_default_compare(i8* %a, i8* %b) #4 !dbg !13478 !ctir !333 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !85
  %b.addr = alloca i8*, align 8, !ctir !85
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13479, metadata !DIExpression()), !dbg !13480
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13481, metadata !DIExpression()), !dbg !13482
  ret i32 0, !dbg !13483
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @heap_free(%struct.heap* %heap) #4 !dbg !13484 !ctir !1556 {
entry:
  %heap.addr = alloca %struct.heap*, align 8, !ctir !1547
  store %struct.heap* %heap, %struct.heap** %heap.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.heap** %heap.addr, metadata !13485, metadata !DIExpression()), !dbg !13486
  %0 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13487, !tbaa !2355
  %array = getelementptr inbounds %struct.heap, %struct.heap* %0, i32 0, i32 0, !dbg !13488, !ctir !1548
  %1 = load i8**, i8*** %array, align 8, !dbg !13488, !tbaa !13456, !ctir !1102
  %2 = bitcast i8** %1 to i8*, !dbg !13487
  call void @free(i8* %2) #12, !dbg !13489
  %3 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13490, !tbaa !2355
  %4 = bitcast %struct.heap* %3 to i8*, !dbg !13490
  call void @free(i8* %4) #12, !dbg !13491
  ret void, !dbg !13492
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @heap_insert(%struct.heap* %heap, i8* %item) #4 !dbg !13493 !ctir !1558 {
entry:
  %heap.addr = alloca %struct.heap*, align 8, !ctir !1547
  %item.addr = alloca i8*, align 8, !ctir !47
  store %struct.heap* %heap, %struct.heap** %heap.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.heap** %heap.addr, metadata !13494, metadata !DIExpression()), !dbg !13495
  store i8* %item, i8** %item.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %item.addr, metadata !13496, metadata !DIExpression()), !dbg !13497
  %0 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13498, !tbaa !2355
  %capacity = getelementptr inbounds %struct.heap, %struct.heap* %0, i32 0, i32 1, !dbg !13500, !ctir !1548
  %1 = load i64, i64* %capacity, align 8, !dbg !13500, !tbaa !13465, !ctir !52
  %sub = sub i64 %1, 1, !dbg !13501
  %2 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13502, !tbaa !2355
  %count = getelementptr inbounds %struct.heap, %struct.heap* %2, i32 0, i32 2, !dbg !13503, !ctir !1548
  %3 = load i64, i64* %count, align 8, !dbg !13503, !tbaa !13469, !ctir !52
  %cmp = icmp ule i64 %sub, %3, !dbg !13504
  br i1 %cmp, label %if.then, label %if.end, !dbg !13505

if.then:                                          ; preds = %entry
  %4 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13506, !tbaa !2355
  %array = getelementptr inbounds %struct.heap, %struct.heap* %4, i32 0, i32 0, !dbg !13507, !ctir !1548
  %5 = load i8**, i8*** %array, align 8, !dbg !13507, !tbaa !13456, !ctir !1102
  %6 = bitcast i8** %5 to i8*, !dbg !13506
  %7 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13508, !tbaa !2355
  %capacity1 = getelementptr inbounds %struct.heap, %struct.heap* %7, i32 0, i32 1, !dbg !13509, !ctir !1548
  %call = call i8* @x2nrealloc(i8* %6, i64* %capacity1, i64 8), !dbg !13510
  %8 = bitcast i8* %call to i8**, !dbg !13510
  %9 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13511, !tbaa !2355
  %array2 = getelementptr inbounds %struct.heap, %struct.heap* %9, i32 0, i32 0, !dbg !13512, !ctir !1548
  store i8** %8, i8*** %array2, align 8, !dbg !13513, !tbaa !13456, !ctir !1102
  br label %if.end, !dbg !13511

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8*, i8** %item.addr, align 8, !dbg !13514, !tbaa !2355
  %11 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13515, !tbaa !2355
  %array3 = getelementptr inbounds %struct.heap, %struct.heap* %11, i32 0, i32 0, !dbg !13516, !ctir !1548
  %12 = load i8**, i8*** %array3, align 8, !dbg !13516, !tbaa !13456, !ctir !1102
  %13 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13517, !tbaa !2355
  %count4 = getelementptr inbounds %struct.heap, %struct.heap* %13, i32 0, i32 2, !dbg !13518, !ctir !1548
  %14 = load i64, i64* %count4, align 8, !dbg !13519, !tbaa !13469, !ctir !52
  %inc = add i64 %14, 1, !dbg !13519
  store i64 %inc, i64* %count4, align 8, !dbg !13519, !tbaa !13469, !ctir !52
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 %inc, !dbg !13515, !ctir !1102
  store i8* %10, i8** %arrayidx, align 8, !dbg !13520, !tbaa !2355
  %15 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13521, !tbaa !2355
  %array5 = getelementptr inbounds %struct.heap, %struct.heap* %15, i32 0, i32 0, !dbg !13522, !ctir !1548
  %16 = load i8**, i8*** %array5, align 8, !dbg !13522, !tbaa !13456, !ctir !1102
  %17 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13523, !tbaa !2355
  %count6 = getelementptr inbounds %struct.heap, %struct.heap* %17, i32 0, i32 2, !dbg !13524, !ctir !1548
  %18 = load i64, i64* %count6, align 8, !dbg !13524, !tbaa !13469, !ctir !52
  %19 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13525, !tbaa !2355
  %compare = getelementptr inbounds %struct.heap, %struct.heap* %19, i32 0, i32 3, !dbg !13526, !ctir !1548
  %20 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !13526, !tbaa !13475, !ctir !1555
  call void @heapify_up(i8** %16, i64 %18, i32 (i8*, i8*)* %20), !dbg !13527
  ret i32 0, !dbg !13528
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @heapify_up(i8** %array, i64 %count, i32 (i8*, i8*)* %compare) #4 !dbg !13529 !ctir !1564 {
entry:
  %array.addr = alloca i8**, align 8, !ctir !1102
  %count.addr = alloca i64, align 8, !ctir !52
  %compare.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1555
  %k = alloca i64, align 8, !ctir !52
  %new_element = alloca i8*, align 8, !ctir !47
  store i8** %array, i8*** %array.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %array.addr, metadata !13530, metadata !DIExpression()), !dbg !13531
  store i64 %count, i64* %count.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13532, metadata !DIExpression()), !dbg !13533
  store i32 (i8*, i8*)* %compare, i32 (i8*, i8*)** %compare.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare.addr, metadata !13534, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.declare(metadata i64* %k, metadata !13536, metadata !DIExpression()), !dbg !13537
  %0 = load i64, i64* %count.addr, align 8, !dbg !13538, !tbaa !2516
  store i64 %0, i64* %k, align 8, !dbg !13537, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %new_element, metadata !13539, metadata !DIExpression()), !dbg !13540
  %1 = load i8**, i8*** %array.addr, align 8, !dbg !13541, !tbaa !2355
  %2 = load i64, i64* %k, align 8, !dbg !13542, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !13541, !ctir !1102
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !13541, !tbaa !2355
  store i8* %3, i8** %new_element, align 8, !dbg !13540, !tbaa !2355
  br label %while.cond, !dbg !13543

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i64, i64* %k, align 8, !dbg !13544, !tbaa !2516
  %cmp = icmp ne i64 %4, 1, !dbg !13545
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13546

land.rhs:                                         ; preds = %while.cond
  %5 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13547, !tbaa !2355
  %6 = load i8**, i8*** %array.addr, align 8, !dbg !13548, !tbaa !2355
  %7 = load i64, i64* %k, align 8, !dbg !13549, !tbaa !2516
  %div = udiv i64 %7, 2, !dbg !13550
  %arrayidx1 = getelementptr inbounds i8*, i8** %6, i64 %div, !dbg !13548, !ctir !1102
  %8 = load i8*, i8** %arrayidx1, align 8, !dbg !13548, !tbaa !2355
  %9 = load i8*, i8** %new_element, align 8, !dbg !13551, !tbaa !2355
  %call = call i32 %5(i8* %8, i8* %9), !dbg !13547
  %cmp2 = icmp sle i32 %call, 0, !dbg !13552
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !13553
  br i1 %10, label %while.body, label %while.end, !dbg !13543

while.body:                                       ; preds = %land.end
  %11 = load i8**, i8*** %array.addr, align 8, !dbg !13554, !tbaa !2355
  %12 = load i64, i64* %k, align 8, !dbg !13556, !tbaa !2516
  %div3 = udiv i64 %12, 2, !dbg !13557
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %div3, !dbg !13554, !ctir !1102
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !13554, !tbaa !2355
  %14 = load i8**, i8*** %array.addr, align 8, !dbg !13558, !tbaa !2355
  %15 = load i64, i64* %k, align 8, !dbg !13559, !tbaa !2516
  %arrayidx5 = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !13558, !ctir !1102
  store i8* %13, i8** %arrayidx5, align 8, !dbg !13560, !tbaa !2355
  %16 = load i64, i64* %k, align 8, !dbg !13561, !tbaa !2516
  %div6 = udiv i64 %16, 2, !dbg !13561
  store i64 %div6, i64* %k, align 8, !dbg !13561, !tbaa !2516
  br label %while.cond, !dbg !13543, !llvm.loop !13562

while.end:                                        ; preds = %land.end
  %17 = load i8*, i8** %new_element, align 8, !dbg !13564, !tbaa !2355
  %18 = load i8**, i8*** %array.addr, align 8, !dbg !13565, !tbaa !2355
  %19 = load i64, i64* %k, align 8, !dbg !13566, !tbaa !2516
  %arrayidx7 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !13565, !ctir !1102
  store i8* %17, i8** %arrayidx7, align 8, !dbg !13567, !tbaa !2355
  ret void, !dbg !13568
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @heap_remove_top(%struct.heap* %heap) #4 !dbg !13569 !ctir !1560 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %heap.addr = alloca %struct.heap*, align 8, !ctir !1547
  %top = alloca i8*, align 8, !ctir !47
  store %struct.heap* %heap, %struct.heap** %heap.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.heap** %heap.addr, metadata !13570, metadata !DIExpression()), !dbg !13571
  call void @llvm.dbg.declare(metadata i8** %top, metadata !13572, metadata !DIExpression()), !dbg !13573
  %0 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13574, !tbaa !2355
  %count = getelementptr inbounds %struct.heap, %struct.heap* %0, i32 0, i32 2, !dbg !13576, !ctir !1548
  %1 = load i64, i64* %count, align 8, !dbg !13576, !tbaa !13469, !ctir !52
  %cmp = icmp eq i64 %1, 0, !dbg !13577
  br i1 %cmp, label %if.then, label %if.end, !dbg !13578

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13579
  br label %return, !dbg !13579

if.end:                                           ; preds = %entry
  %2 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13580, !tbaa !2355
  %array = getelementptr inbounds %struct.heap, %struct.heap* %2, i32 0, i32 0, !dbg !13581, !ctir !1548
  %3 = load i8**, i8*** %array, align 8, !dbg !13581, !tbaa !13456, !ctir !1102
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !13580, !ctir !1102
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !13580, !tbaa !2355
  store i8* %4, i8** %top, align 8, !dbg !13582, !tbaa !2355
  %5 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13583, !tbaa !2355
  %array1 = getelementptr inbounds %struct.heap, %struct.heap* %5, i32 0, i32 0, !dbg !13584, !ctir !1548
  %6 = load i8**, i8*** %array1, align 8, !dbg !13584, !tbaa !13456, !ctir !1102
  %7 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13585, !tbaa !2355
  %count2 = getelementptr inbounds %struct.heap, %struct.heap* %7, i32 0, i32 2, !dbg !13586, !ctir !1548
  %8 = load i64, i64* %count2, align 8, !dbg !13587, !tbaa !13469, !ctir !52
  %dec = add i64 %8, -1, !dbg !13587
  store i64 %dec, i64* %count2, align 8, !dbg !13587, !tbaa !13469, !ctir !52
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %8, !dbg !13583, !ctir !1102
  %9 = load i8*, i8** %arrayidx3, align 8, !dbg !13583, !tbaa !2355
  %10 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13588, !tbaa !2355
  %array4 = getelementptr inbounds %struct.heap, %struct.heap* %10, i32 0, i32 0, !dbg !13589, !ctir !1548
  %11 = load i8**, i8*** %array4, align 8, !dbg !13589, !tbaa !13456, !ctir !1102
  %arrayidx5 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !13588, !ctir !1102
  store i8* %9, i8** %arrayidx5, align 8, !dbg !13590, !tbaa !2355
  %12 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13591, !tbaa !2355
  %array6 = getelementptr inbounds %struct.heap, %struct.heap* %12, i32 0, i32 0, !dbg !13592, !ctir !1548
  %13 = load i8**, i8*** %array6, align 8, !dbg !13592, !tbaa !13456, !ctir !1102
  %14 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13593, !tbaa !2355
  %count7 = getelementptr inbounds %struct.heap, %struct.heap* %14, i32 0, i32 2, !dbg !13594, !ctir !1548
  %15 = load i64, i64* %count7, align 8, !dbg !13594, !tbaa !13469, !ctir !52
  %16 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13595, !tbaa !2355
  %compare = getelementptr inbounds %struct.heap, %struct.heap* %16, i32 0, i32 3, !dbg !13596, !ctir !1548
  %17 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !13596, !tbaa !13475, !ctir !1555
  %call = call i64 @heapify_down(i8** %13, i64 %15, i64 1, i32 (i8*, i8*)* %17), !dbg !13597
  %18 = load i8*, i8** %top, align 8, !dbg !13598, !tbaa !2355
  store i8* %18, i8** %retval, align 8, !dbg !13599
  br label %return, !dbg !13599

return:                                           ; preds = %if.end, %if.then
  %19 = load i8*, i8** %retval, align 8, !dbg !13600
  ret i8* %19, !dbg !13600
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @heapify_down(i8** %array, i64 %count, i64 %initial, i32 (i8*, i8*)* %compare) #4 !dbg !13601 !ctir !1562 {
entry:
  %array.addr = alloca i8**, align 8, !ctir !1102
  %count.addr = alloca i64, align 8, !ctir !52
  %initial.addr = alloca i64, align 8, !ctir !52
  %compare.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1555
  %element = alloca i8*, align 8, !ctir !47
  %parent = alloca i64, align 8, !ctir !52
  %child = alloca i64, align 8, !ctir !52
  store i8** %array, i8*** %array.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %array.addr, metadata !13602, metadata !DIExpression()), !dbg !13603
  store i64 %count, i64* %count.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13604, metadata !DIExpression()), !dbg !13605
  store i64 %initial, i64* %initial.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %initial.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  store i32 (i8*, i8*)* %compare, i32 (i8*, i8*)** %compare.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare.addr, metadata !13608, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.declare(metadata i8** %element, metadata !13610, metadata !DIExpression()), !dbg !13611
  %0 = load i8**, i8*** %array.addr, align 8, !dbg !13612, !tbaa !2355
  %1 = load i64, i64* %initial.addr, align 8, !dbg !13613, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !13612, !ctir !1102
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !13612, !tbaa !2355
  store i8* %2, i8** %element, align 8, !dbg !13611, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %parent, metadata !13614, metadata !DIExpression()), !dbg !13615
  %3 = load i64, i64* %initial.addr, align 8, !dbg !13616, !tbaa !2516
  store i64 %3, i64* %parent, align 8, !dbg !13615, !tbaa !2516
  br label %while.cond, !dbg !13617

while.cond:                                       ; preds = %if.end9, %entry
  %4 = load i64, i64* %parent, align 8, !dbg !13618, !tbaa !2516
  %5 = load i64, i64* %count.addr, align 8, !dbg !13619, !tbaa !2516
  %div = udiv i64 %5, 2, !dbg !13620
  %cmp = icmp ule i64 %4, %div, !dbg !13621
  br i1 %cmp, label %while.body, label %while.end, !dbg !13617

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %child, metadata !13622, metadata !DIExpression()), !dbg !13624
  %6 = load i64, i64* %parent, align 8, !dbg !13625, !tbaa !2516
  %mul = mul i64 2, %6, !dbg !13626
  store i64 %mul, i64* %child, align 8, !dbg !13624, !tbaa !2516
  %7 = load i64, i64* %child, align 8, !dbg !13627, !tbaa !2516
  %8 = load i64, i64* %count.addr, align 8, !dbg !13629, !tbaa !2516
  %cmp1 = icmp ult i64 %7, %8, !dbg !13630
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !13631

land.lhs.true:                                    ; preds = %while.body
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13632, !tbaa !2355
  %10 = load i8**, i8*** %array.addr, align 8, !dbg !13633, !tbaa !2355
  %11 = load i64, i64* %child, align 8, !dbg !13634, !tbaa !2516
  %arrayidx2 = getelementptr inbounds i8*, i8** %10, i64 %11, !dbg !13633, !ctir !1102
  %12 = load i8*, i8** %arrayidx2, align 8, !dbg !13633, !tbaa !2355
  %13 = load i8**, i8*** %array.addr, align 8, !dbg !13635, !tbaa !2355
  %14 = load i64, i64* %child, align 8, !dbg !13636, !tbaa !2516
  %add = add i64 %14, 1, !dbg !13637
  %arrayidx3 = getelementptr inbounds i8*, i8** %13, i64 %add, !dbg !13635, !ctir !1102
  %15 = load i8*, i8** %arrayidx3, align 8, !dbg !13635, !tbaa !2355
  %call = call i32 %9(i8* %12, i8* %15), !dbg !13632
  %cmp4 = icmp slt i32 %call, 0, !dbg !13638
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13639

if.then:                                          ; preds = %land.lhs.true
  %16 = load i64, i64* %child, align 8, !dbg !13640, !tbaa !2516
  %inc = add i64 %16, 1, !dbg !13640
  store i64 %inc, i64* %child, align 8, !dbg !13640, !tbaa !2516
  br label %if.end, !dbg !13641

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body
  %17 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13642, !tbaa !2355
  %18 = load i8**, i8*** %array.addr, align 8, !dbg !13644, !tbaa !2355
  %19 = load i64, i64* %child, align 8, !dbg !13645, !tbaa !2516
  %arrayidx5 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !13644, !ctir !1102
  %20 = load i8*, i8** %arrayidx5, align 8, !dbg !13644, !tbaa !2355
  %21 = load i8*, i8** %element, align 8, !dbg !13646, !tbaa !2355
  %call6 = call i32 %17(i8* %20, i8* %21), !dbg !13642
  %cmp7 = icmp sle i32 %call6, 0, !dbg !13647
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !13648

if.then8:                                         ; preds = %if.end
  br label %while.end, !dbg !13649

if.end9:                                          ; preds = %if.end
  %22 = load i8**, i8*** %array.addr, align 8, !dbg !13650, !tbaa !2355
  %23 = load i64, i64* %child, align 8, !dbg !13651, !tbaa !2516
  %arrayidx10 = getelementptr inbounds i8*, i8** %22, i64 %23, !dbg !13650, !ctir !1102
  %24 = load i8*, i8** %arrayidx10, align 8, !dbg !13650, !tbaa !2355
  %25 = load i8**, i8*** %array.addr, align 8, !dbg !13652, !tbaa !2355
  %26 = load i64, i64* %parent, align 8, !dbg !13653, !tbaa !2516
  %arrayidx11 = getelementptr inbounds i8*, i8** %25, i64 %26, !dbg !13652, !ctir !1102
  store i8* %24, i8** %arrayidx11, align 8, !dbg !13654, !tbaa !2355
  %27 = load i64, i64* %child, align 8, !dbg !13655, !tbaa !2516
  store i64 %27, i64* %parent, align 8, !dbg !13656, !tbaa !2516
  br label %while.cond, !dbg !13617, !llvm.loop !13657

while.end:                                        ; preds = %if.then8, %while.cond
  %28 = load i8*, i8** %element, align 8, !dbg !13659, !tbaa !2355
  %29 = load i8**, i8*** %array.addr, align 8, !dbg !13660, !tbaa !2355
  %30 = load i64, i64* %parent, align 8, !dbg !13661, !tbaa !2516
  %arrayidx12 = getelementptr inbounds i8*, i8** %29, i64 %30, !dbg !13660, !ctir !1102
  store i8* %28, i8** %arrayidx12, align 8, !dbg !13662, !tbaa !2355
  %31 = load i64, i64* %parent, align 8, !dbg !13663, !tbaa !2516
  ret i64 %31, !dbg !13664
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @inttostr(i32 %i, i8* %buf) #4 !dbg !13665 !ctir !1569 {
entry:
  %i.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i32 %i, i32* %i.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13671, metadata !DIExpression()), !dbg !13672
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13673, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 11, !dbg !13674
  store i8* %add.ptr, i8** %p, align 8, !dbg !13672, !tbaa !2355
  %1 = load i8*, i8** %p, align 8, !dbg !13675, !tbaa !2355
  store i8 0, i8* %1, align 1, !dbg !13676, !tbaa !2507, !ctir !8
  %2 = load i32, i32* %i.addr, align 4, !dbg !13677, !tbaa !2342
  %cmp = icmp slt i32 %2, 0, !dbg !13679
  br i1 %cmp, label %if.then, label %if.else, !dbg !13680

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13681

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i32, i32* %i.addr, align 4, !dbg !13683, !tbaa !2342
  %rem = srem i32 %3, 10, !dbg !13684
  %sub = sub nsw i32 48, %rem, !dbg !13685
  %conv = trunc i32 %sub to i8, !dbg !13686
  %4 = load i8*, i8** %p, align 8, !dbg !13687, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !13687
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13687, !tbaa !2355
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !13688, !tbaa !2507, !ctir !8
  br label %do.cond, !dbg !13689

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %i.addr, align 4, !dbg !13690, !tbaa !2342
  %div = sdiv i32 %5, 10, !dbg !13690
  store i32 %div, i32* %i.addr, align 4, !dbg !13690, !tbaa !2342
  %cmp1 = icmp ne i32 %div, 0, !dbg !13691
  br i1 %cmp1, label %do.body, label %do.end, !dbg !13689, !llvm.loop !13692

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !13694, !tbaa !2355
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !13694
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !13694, !tbaa !2355
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !13695, !tbaa !2507, !ctir !8
  br label %if.end, !dbg !13696

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !13697

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i32, i32* %i.addr, align 4, !dbg !13699, !tbaa !2342
  %rem5 = srem i32 %7, 10, !dbg !13700
  %add = add nsw i32 48, %rem5, !dbg !13701
  %conv6 = trunc i32 %add to i8, !dbg !13702
  %8 = load i8*, i8** %p, align 8, !dbg !13703, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !13703
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13703, !tbaa !2355
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !13704, !tbaa !2507, !ctir !8
  br label %do.cond8, !dbg !13705

do.cond8:                                         ; preds = %do.body4
  %9 = load i32, i32* %i.addr, align 4, !dbg !13706, !tbaa !2342
  %div9 = sdiv i32 %9, 10, !dbg !13706
  store i32 %div9, i32* %i.addr, align 4, !dbg !13706, !tbaa !2342
  %cmp10 = icmp ne i32 %div9, 0, !dbg !13707
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !13705, !llvm.loop !13708

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !13710, !tbaa !2355
  ret i8* %10, !dbg !13711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @uinttostr(i32 %i, i8* %buf) #4 !dbg !13712 !ctir !1574 {
entry:
  %i.addr = alloca i32, align 4, !ctir !66
  %buf.addr = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i32 %i, i32* %i.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13713, metadata !DIExpression()), !dbg !13714
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13715, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13717, metadata !DIExpression()), !dbg !13718
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13719, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 10, !dbg !13720
  store i8* %add.ptr, i8** %p, align 8, !dbg !13718, !tbaa !2355
  %1 = load i8*, i8** %p, align 8, !dbg !13721, !tbaa !2355
  store i8 0, i8* %1, align 1, !dbg !13722, !tbaa !2507, !ctir !8
  %2 = load i32, i32* %i.addr, align 4, !dbg !13723, !tbaa !2342
  %cmp = icmp ult i32 %2, 0, !dbg !13725
  br i1 %cmp, label %if.then, label %if.else, !dbg !13726

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13727

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i32, i32* %i.addr, align 4, !dbg !13729, !tbaa !2342
  %rem = urem i32 %3, 10, !dbg !13730
  %sub = sub i32 48, %rem, !dbg !13731
  %conv = trunc i32 %sub to i8, !dbg !13732
  %4 = load i8*, i8** %p, align 8, !dbg !13733, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !13733
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13733, !tbaa !2355
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !13734, !tbaa !2507, !ctir !8
  br label %do.cond, !dbg !13735

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %i.addr, align 4, !dbg !13736, !tbaa !2342
  %div = udiv i32 %5, 10, !dbg !13736
  store i32 %div, i32* %i.addr, align 4, !dbg !13736, !tbaa !2342
  %cmp1 = icmp ne i32 %div, 0, !dbg !13737
  br i1 %cmp1, label %do.body, label %do.end, !dbg !13735, !llvm.loop !13738

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !13740, !tbaa !2355
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !13740
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !13740, !tbaa !2355
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !13741, !tbaa !2507, !ctir !8
  br label %if.end, !dbg !13742

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !13743

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i32, i32* %i.addr, align 4, !dbg !13745, !tbaa !2342
  %rem5 = urem i32 %7, 10, !dbg !13746
  %add = add i32 48, %rem5, !dbg !13747
  %conv6 = trunc i32 %add to i8, !dbg !13748
  %8 = load i8*, i8** %p, align 8, !dbg !13749, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !13749
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13749, !tbaa !2355
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !13750, !tbaa !2507, !ctir !8
  br label %do.cond8, !dbg !13751

do.cond8:                                         ; preds = %do.body4
  %9 = load i32, i32* %i.addr, align 4, !dbg !13752, !tbaa !2342
  %div9 = udiv i32 %9, 10, !dbg !13752
  store i32 %div9, i32* %i.addr, align 4, !dbg !13752, !tbaa !2342
  %cmp10 = icmp ne i32 %div9, 0, !dbg !13753
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !13751, !llvm.loop !13754

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !13756, !tbaa !2355
  ret i8* %10, !dbg !13757
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %i, i8* %buf) #4 !dbg !13758 !ctir !1579 {
entry:
  %i.addr = alloca i64, align 8, !ctir !355
  %buf.addr = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i64 %i, i64* %i.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !13759, metadata !DIExpression()), !dbg !13760
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13761, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13763, metadata !DIExpression()), !dbg !13764
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13765, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !13766
  store i8* %add.ptr, i8** %p, align 8, !dbg !13764, !tbaa !2355
  %1 = load i8*, i8** %p, align 8, !dbg !13767, !tbaa !2355
  store i8 0, i8* %1, align 1, !dbg !13768, !tbaa !2507, !ctir !8
  %2 = load i64, i64* %i.addr, align 8, !dbg !13769, !tbaa !2516
  %cmp = icmp ult i64 %2, 0, !dbg !13771
  br i1 %cmp, label %if.then, label %if.else, !dbg !13772

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13773

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !13775, !tbaa !2516
  %rem = urem i64 %3, 10, !dbg !13776
  %sub = sub i64 48, %rem, !dbg !13777
  %conv = trunc i64 %sub to i8, !dbg !13778
  %4 = load i8*, i8** %p, align 8, !dbg !13779, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !13779
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13779, !tbaa !2355
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !13780, !tbaa !2507, !ctir !8
  br label %do.cond, !dbg !13781

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !13782, !tbaa !2516
  %div = udiv i64 %5, 10, !dbg !13782
  store i64 %div, i64* %i.addr, align 8, !dbg !13782, !tbaa !2516
  %cmp1 = icmp ne i64 %div, 0, !dbg !13783
  br i1 %cmp1, label %do.body, label %do.end, !dbg !13781, !llvm.loop !13784

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !13786, !tbaa !2355
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !13786
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !13786, !tbaa !2355
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !13787, !tbaa !2507, !ctir !8
  br label %if.end, !dbg !13788

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !13789

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !13791, !tbaa !2516
  %rem5 = urem i64 %7, 10, !dbg !13792
  %add = add i64 48, %rem5, !dbg !13793
  %conv6 = trunc i64 %add to i8, !dbg !13794
  %8 = load i8*, i8** %p, align 8, !dbg !13795, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !13795
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13795, !tbaa !2355
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !13796, !tbaa !2507, !ctir !8
  br label %do.cond8, !dbg !13797

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !13798, !tbaa !2516
  %div9 = udiv i64 %9, 10, !dbg !13798
  store i64 %div9, i64* %i.addr, align 8, !dbg !13798, !tbaa !2516
  %cmp10 = icmp ne i64 %div9, 0, !dbg !13799
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !13797, !llvm.loop !13800

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !13802, !tbaa !2355
  ret i8* %10, !dbg !13803
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gnu_mbswidth(i8* %string, i32 %flags) #4 !dbg !13804 !ctir !1584 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !87
  %flags.addr = alloca i32, align 4, !ctir !5
  store i8* %string, i8** %string.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !13806, metadata !DIExpression()), !dbg !13807
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13808, metadata !DIExpression()), !dbg !13809
  %0 = load i8*, i8** %string.addr, align 8, !dbg !13810, !tbaa !2355
  %1 = load i8*, i8** %string.addr, align 8, !dbg !13811, !tbaa !2355
  %call = call i64 @strlen(i8* %1) #14, !dbg !13812
  %2 = load i32, i32* %flags.addr, align 4, !dbg !13813, !tbaa !2342
  %call1 = call i32 @mbsnwidth(i8* %0, i64 %call, i32 %2), !dbg !13814
  ret i32 %call1, !dbg !13815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) #4 !dbg !13816 !ctir !1586 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %string.addr = alloca i8*, align 8, !ctir !87
  %nbytes.addr = alloca i64, align 8, !ctir !52
  %flags.addr = alloca i32, align 4, !ctir !5
  %p = alloca i8*, align 8, !ctir !87
  %plimit = alloca i8*, align 8, !ctir !87
  %width = alloca i32, align 4, !ctir !5
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1588
  %wc = alloca i32, align 4, !ctir !1314
  %bytes = alloca i64, align 8, !ctir !52
  %w = alloca i32, align 4, !ctir !5
  %c = alloca i8, align 1, !ctir !317
  store i8* %string, i8** %string.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !13817, metadata !DIExpression()), !dbg !13818
  store i64 %nbytes, i64* %nbytes.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !13819, metadata !DIExpression()), !dbg !13820
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13821, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13823, metadata !DIExpression()), !dbg !13824
  %0 = load i8*, i8** %string.addr, align 8, !dbg !13825, !tbaa !2355
  store i8* %0, i8** %p, align 8, !dbg !13824, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !13826, metadata !DIExpression()), !dbg !13827
  %1 = load i8*, i8** %p, align 8, !dbg !13828, !tbaa !2355
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !13829, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !13830
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !13827, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %width, metadata !13831, metadata !DIExpression()), !dbg !13832
  store i32 0, i32* %width, align 4, !dbg !13833, !tbaa !2342
  %call = call i64 @__ctype_get_mb_cur_max() #12, !dbg !13834
  %cmp = icmp ugt i64 %call, 1, !dbg !13836
  br i1 %cmp, label %if.then, label %if.end49, !dbg !13837

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !13838

while.cond:                                       ; preds = %sw.epilog, %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !13840, !tbaa !2355
  %4 = load i8*, i8** %plimit, align 8, !dbg !13841, !tbaa !2355
  %cmp1 = icmp ult i8* %3, %4, !dbg !13842
  br i1 %cmp1, label %while.body, label %while.end, !dbg !13838

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8, !dbg !13843, !tbaa !2355
  %6 = load i8, i8* %5, align 1, !dbg !13844, !tbaa !2507, !ctir !88
  %conv = sext i8 %6 to i32, !dbg !13844
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !13845

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !13846, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13846
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13846, !tbaa !2355
  %8 = load i32, i32* %width, align 4, !dbg !13848, !tbaa !2342
  %inc = add nsw i32 %8, 1, !dbg !13848
  store i32 %inc, i32* %width, align 4, !dbg !13848, !tbaa !2342
  br label %sw.epilog, !dbg !13849

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !13850, metadata !DIExpression()), !dbg !13852
  %9 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !13853
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !13853
  br label %do.body, !dbg !13854

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !13855, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13858, metadata !DIExpression()), !dbg !13859
  call void @llvm.dbg.declare(metadata i32* %w, metadata !13860, metadata !DIExpression()), !dbg !13861
  %10 = load i8*, i8** %p, align 8, !dbg !13862, !tbaa !2355
  %11 = load i8*, i8** %plimit, align 8, !dbg !13863, !tbaa !2355
  %12 = load i8*, i8** %p, align 8, !dbg !13864, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !13865
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !13865
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13865
  %call2 = call i64 @rpl_mbrtowc(i32* %wc, i8* %10, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !13866
  store i64 %call2, i64* %bytes, align 8, !dbg !13867, !tbaa !2516
  %13 = load i64, i64* %bytes, align 8, !dbg !13868, !tbaa !2516
  %cmp3 = icmp eq i64 %13, -1, !dbg !13870
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !13871

if.then5:                                         ; preds = %do.body
  %14 = load i32, i32* %flags.addr, align 4, !dbg !13872, !tbaa !2342
  %and = and i32 %14, 1, !dbg !13875
  %tobool = icmp ne i32 %and, 0, !dbg !13875
  br i1 %tobool, label %if.else, label %if.then6, !dbg !13876

if.then6:                                         ; preds = %if.then5
  %15 = load i8*, i8** %p, align 8, !dbg !13877, !tbaa !2355
  %incdec.ptr7 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !13877
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13877, !tbaa !2355
  %16 = load i32, i32* %width, align 4, !dbg !13879, !tbaa !2342
  %inc8 = add nsw i32 %16, 1, !dbg !13879
  store i32 %inc8, i32* %width, align 4, !dbg !13879, !tbaa !2342
  br label %do.end, !dbg !13880

if.else:                                          ; preds = %if.then5
  store i32 -1, i32* %retval, align 4, !dbg !13881
  br label %return, !dbg !13881

if.end:                                           ; preds = %do.body
  %17 = load i64, i64* %bytes, align 8, !dbg !13882, !tbaa !2516
  %cmp9 = icmp eq i64 %17, -2, !dbg !13884
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !13885

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !13886, !tbaa !2342
  %and12 = and i32 %18, 1, !dbg !13889
  %tobool13 = icmp ne i32 %and12, 0, !dbg !13889
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !13890

if.then14:                                        ; preds = %if.then11
  %19 = load i8*, i8** %plimit, align 8, !dbg !13891, !tbaa !2355
  store i8* %19, i8** %p, align 8, !dbg !13893, !tbaa !2355
  %20 = load i32, i32* %width, align 4, !dbg !13894, !tbaa !2342
  %inc15 = add nsw i32 %20, 1, !dbg !13894
  store i32 %inc15, i32* %width, align 4, !dbg !13894, !tbaa !2342
  br label %do.end, !dbg !13895

if.else16:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !13896
  br label %return, !dbg !13896

if.end17:                                         ; preds = %if.end
  %21 = load i64, i64* %bytes, align 8, !dbg !13897, !tbaa !2516
  %cmp18 = icmp eq i64 %21, 0, !dbg !13899
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !13900

if.then20:                                        ; preds = %if.end17
  store i64 1, i64* %bytes, align 8, !dbg !13901, !tbaa !2516
  br label %if.end21, !dbg !13902

if.end21:                                         ; preds = %if.then20, %if.end17
  %22 = load i32, i32* %wc, align 4, !dbg !13903, !tbaa !2342
  %call22 = call i32 @wcwidth(i32 %22) #12, !dbg !13904
  store i32 %call22, i32* %w, align 4, !dbg !13905, !tbaa !2342
  %23 = load i32, i32* %w, align 4, !dbg !13906, !tbaa !2342
  %cmp23 = icmp sge i32 %23, 0, !dbg !13908
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !13909

if.then25:                                        ; preds = %if.end21
  %24 = load i32, i32* %w, align 4, !dbg !13910, !tbaa !2342
  %25 = load i32, i32* %width, align 4, !dbg !13913, !tbaa !2342
  %sub = sub nsw i32 2147483647, %25, !dbg !13914
  %cmp26 = icmp sgt i32 %24, %sub, !dbg !13915
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !13916

if.then28:                                        ; preds = %if.then25
  br label %overflow, !dbg !13917

if.end29:                                         ; preds = %if.then25
  %26 = load i32, i32* %w, align 4, !dbg !13918, !tbaa !2342
  %27 = load i32, i32* %width, align 4, !dbg !13919, !tbaa !2342
  %add = add nsw i32 %27, %26, !dbg !13919
  store i32 %add, i32* %width, align 4, !dbg !13919, !tbaa !2342
  br label %if.end45, !dbg !13920

if.else30:                                        ; preds = %if.end21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !13921, !tbaa !2342
  %and31 = and i32 %28, 2, !dbg !13923
  %tobool32 = icmp ne i32 %and31, 0, !dbg !13923
  br i1 %tobool32, label %if.else43, label %if.then33, !dbg !13924

if.then33:                                        ; preds = %if.else30
  %29 = load i32, i32* %wc, align 4, !dbg !13925, !tbaa !2342
  %call34 = call i32 @iswcntrl(i32 %29) #12, !dbg !13928
  %tobool35 = icmp ne i32 %call34, 0, !dbg !13928
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !13929

if.then36:                                        ; preds = %if.then33
  %30 = load i32, i32* %width, align 4, !dbg !13930, !tbaa !2342
  %cmp37 = icmp eq i32 %30, 2147483647, !dbg !13933
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !13934

if.then39:                                        ; preds = %if.then36
  br label %overflow, !dbg !13935

if.end40:                                         ; preds = %if.then36
  %31 = load i32, i32* %width, align 4, !dbg !13936, !tbaa !2342
  %inc41 = add nsw i32 %31, 1, !dbg !13936
  store i32 %inc41, i32* %width, align 4, !dbg !13936, !tbaa !2342
  br label %if.end42, !dbg !13937

if.end42:                                         ; preds = %if.end40, %if.then33
  br label %if.end44, !dbg !13938

if.else43:                                        ; preds = %if.else30
  store i32 -1, i32* %retval, align 4, !dbg !13939
  br label %return, !dbg !13939

if.end44:                                         ; preds = %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end29
  %32 = load i64, i64* %bytes, align 8, !dbg !13940, !tbaa !2516
  %33 = load i8*, i8** %p, align 8, !dbg !13941, !tbaa !2355
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !13941
  store i8* %add.ptr46, i8** %p, align 8, !dbg !13941, !tbaa !2355
  br label %do.cond, !dbg !13942

do.cond:                                          ; preds = %if.end45
  %call47 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !13943
  %tobool48 = icmp ne i32 %call47, 0, !dbg !13944
  %lnot = xor i1 %tobool48, true, !dbg !13944
  br i1 %lnot, label %do.body, label %do.end, !dbg !13942, !llvm.loop !13945

do.end:                                           ; preds = %do.cond, %if.then14, %if.then6
  br label %sw.epilog, !dbg !13947

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !13838, !llvm.loop !13948

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %width, align 4, !dbg !13950, !tbaa !2342
  store i32 %34, i32* %retval, align 4, !dbg !13951
  br label %return, !dbg !13951

if.end49:                                         ; preds = %entry
  br label %while.cond50, !dbg !13952

while.cond50:                                     ; preds = %if.end86, %if.end49
  %35 = load i8*, i8** %p, align 8, !dbg !13953, !tbaa !2355
  %36 = load i8*, i8** %plimit, align 8, !dbg !13954, !tbaa !2355
  %cmp51 = icmp ult i8* %35, %36, !dbg !13955
  br i1 %cmp51, label %while.body53, label %while.end87, !dbg !13952

while.body53:                                     ; preds = %while.cond50
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13956, metadata !DIExpression()), !dbg !13958
  %37 = load i8*, i8** %p, align 8, !dbg !13959, !tbaa !2355
  %incdec.ptr54 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !13959
  store i8* %incdec.ptr54, i8** %p, align 8, !dbg !13959, !tbaa !2355
  %38 = load i8, i8* %37, align 1, !dbg !13960, !tbaa !2507, !ctir !88
  store i8 %38, i8* %c, align 1, !dbg !13958, !tbaa !2507
  %call55 = call i16** @__ctype_b_loc() #16, !dbg !13961
  %39 = load i16*, i16** %call55, align 8, !dbg !13961, !tbaa !2355, !ctir !321
  %40 = load i8, i8* %c, align 1, !dbg !13961, !tbaa !2507
  %conv56 = zext i8 %40 to i32, !dbg !13961
  %idxprom = sext i32 %conv56 to i64, !dbg !13961
  %arrayidx = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !13961, !ctir !321
  %41 = load i16, i16* %arrayidx, align 2, !dbg !13961, !tbaa !3489
  %conv57 = zext i16 %41 to i32, !dbg !13961
  %and58 = and i32 %conv57, 16384, !dbg !13961
  %tobool59 = icmp ne i32 %and58, 0, !dbg !13961
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !13963

if.then60:                                        ; preds = %while.body53
  %42 = load i32, i32* %width, align 4, !dbg !13964, !tbaa !2342
  %cmp61 = icmp eq i32 %42, 2147483647, !dbg !13967
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13968

if.then63:                                        ; preds = %if.then60
  br label %overflow, !dbg !13969

if.end64:                                         ; preds = %if.then60
  %43 = load i32, i32* %width, align 4, !dbg !13970, !tbaa !2342
  %inc65 = add nsw i32 %43, 1, !dbg !13970
  store i32 %inc65, i32* %width, align 4, !dbg !13970, !tbaa !2342
  br label %if.end86, !dbg !13971

if.else66:                                        ; preds = %while.body53
  %44 = load i32, i32* %flags.addr, align 4, !dbg !13972, !tbaa !2342
  %and67 = and i32 %44, 2, !dbg !13974
  %tobool68 = icmp ne i32 %and67, 0, !dbg !13974
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !13975

if.then69:                                        ; preds = %if.else66
  %call70 = call i16** @__ctype_b_loc() #16, !dbg !13976
  %45 = load i16*, i16** %call70, align 8, !dbg !13976, !tbaa !2355, !ctir !321
  %46 = load i8, i8* %c, align 1, !dbg !13976, !tbaa !2507
  %conv71 = zext i8 %46 to i32, !dbg !13976
  %idxprom72 = sext i32 %conv71 to i64, !dbg !13976
  %arrayidx73 = getelementptr inbounds i16, i16* %45, i64 %idxprom72, !dbg !13976, !ctir !321
  %47 = load i16, i16* %arrayidx73, align 2, !dbg !13976, !tbaa !3489
  %conv74 = zext i16 %47 to i32, !dbg !13976
  %and75 = and i32 %conv74, 2, !dbg !13976
  %tobool76 = icmp ne i32 %and75, 0, !dbg !13976
  br i1 %tobool76, label %if.end83, label %if.then77, !dbg !13979

if.then77:                                        ; preds = %if.then69
  %48 = load i32, i32* %width, align 4, !dbg !13980, !tbaa !2342
  %cmp78 = icmp eq i32 %48, 2147483647, !dbg !13983
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !13984

if.then80:                                        ; preds = %if.then77
  br label %overflow, !dbg !13985

if.end81:                                         ; preds = %if.then77
  %49 = load i32, i32* %width, align 4, !dbg !13986, !tbaa !2342
  %inc82 = add nsw i32 %49, 1, !dbg !13986
  store i32 %inc82, i32* %width, align 4, !dbg !13986, !tbaa !2342
  br label %if.end83, !dbg !13987

if.end83:                                         ; preds = %if.end81, %if.then69
  br label %if.end85, !dbg !13988

if.else84:                                        ; preds = %if.else66
  store i32 -1, i32* %retval, align 4, !dbg !13989
  br label %return, !dbg !13989

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end64
  br label %while.cond50, !dbg !13952, !llvm.loop !13990

while.end87:                                      ; preds = %while.cond50
  %50 = load i32, i32* %width, align 4, !dbg !13992, !tbaa !2342
  store i32 %50, i32* %retval, align 4, !dbg !13993
  br label %return, !dbg !13993

overflow:                                         ; preds = %if.then80, %if.then63, %if.then39, %if.then28
  call void @llvm.dbg.label(metadata !13994), !dbg !13995
  store i32 2147483647, i32* %retval, align 4, !dbg !13996
  br label %return, !dbg !13996

return:                                           ; preds = %overflow, %while.end87, %if.else84, %while.end, %if.else43, %if.else16, %if.else
  %51 = load i32, i32* %retval, align 4, !dbg !13997
  ret i32 %51, !dbg !13997
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @num_processors(i32 %query) #4 !dbg !13998 !ctir !1608 {
entry:
  %retval = alloca i64, align 8, !ctir !54
  %query.addr = alloca i32, align 4, !ctir !1601
  %omp_env_limit = alloca i64, align 8, !ctir !54
  %omp_env_threads = alloca i64, align 8, !ctir !54
  %nprocs = alloca i64, align 8, !ctir !54
  store i32 %query, i32* %query.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %query.addr, metadata !14000, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.declare(metadata i64* %omp_env_limit, metadata !14002, metadata !DIExpression()), !dbg !14003
  store i64 -1, i64* %omp_env_limit, align 8, !dbg !14003, !tbaa !2516
  %0 = load i32, i32* %query.addr, align 4, !dbg !14004, !tbaa !2507
  %cmp = icmp eq i32 %0, 2, !dbg !14006
  br i1 %cmp, label %if.then, label %if.end9, !dbg !14007

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %omp_env_threads, metadata !14008, metadata !DIExpression()), !dbg !14010
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.231, i64 0, i64 0)) #12, !dbg !14011
  %call1 = call i64 @parse_omp_threads(i8* %call), !dbg !14012
  store i64 %call1, i64* %omp_env_threads, align 8, !dbg !14013, !tbaa !2516
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.232, i64 0, i64 0)) #12, !dbg !14014
  %call3 = call i64 @parse_omp_threads(i8* %call2), !dbg !14015
  store i64 %call3, i64* %omp_env_limit, align 8, !dbg !14016, !tbaa !2516
  %1 = load i64, i64* %omp_env_limit, align 8, !dbg !14017, !tbaa !2516
  %tobool = icmp ne i64 %1, 0, !dbg !14017
  br i1 %tobool, label %if.end, label %if.then4, !dbg !14019

if.then4:                                         ; preds = %if.then
  store i64 -1, i64* %omp_env_limit, align 8, !dbg !14020, !tbaa !2516
  br label %if.end, !dbg !14021

if.end:                                           ; preds = %if.then4, %if.then
  %2 = load i64, i64* %omp_env_threads, align 8, !dbg !14022, !tbaa !2516
  %tobool5 = icmp ne i64 %2, 0, !dbg !14022
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !14024

if.then6:                                         ; preds = %if.end
  %3 = load i64, i64* %omp_env_threads, align 8, !dbg !14025, !tbaa !2516
  %4 = load i64, i64* %omp_env_limit, align 8, !dbg !14025, !tbaa !2516
  %cmp7 = icmp ult i64 %3, %4, !dbg !14025
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !14025

cond.true:                                        ; preds = %if.then6
  %5 = load i64, i64* %omp_env_threads, align 8, !dbg !14025, !tbaa !2516
  br label %cond.end, !dbg !14025

cond.false:                                       ; preds = %if.then6
  %6 = load i64, i64* %omp_env_limit, align 8, !dbg !14025, !tbaa !2516
  br label %cond.end, !dbg !14025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !14025
  store i64 %cond, i64* %retval, align 8, !dbg !14026
  br label %return, !dbg !14026

if.end8:                                          ; preds = %if.end
  store i32 1, i32* %query.addr, align 4, !dbg !14027, !tbaa !2507
  br label %if.end9, !dbg !14028

if.end9:                                          ; preds = %if.end8, %entry
  call void @llvm.dbg.declare(metadata i64* %nprocs, metadata !14029, metadata !DIExpression()), !dbg !14031
  %7 = load i32, i32* %query.addr, align 4, !dbg !14032, !tbaa !2507
  %call10 = call i64 @num_processors_ignoring_omp(i32 %7), !dbg !14033
  store i64 %call10, i64* %nprocs, align 8, !dbg !14031, !tbaa !2516
  %8 = load i64, i64* %nprocs, align 8, !dbg !14034, !tbaa !2516
  %9 = load i64, i64* %omp_env_limit, align 8, !dbg !14034, !tbaa !2516
  %cmp11 = icmp ult i64 %8, %9, !dbg !14034
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !14034

cond.true12:                                      ; preds = %if.end9
  %10 = load i64, i64* %nprocs, align 8, !dbg !14034, !tbaa !2516
  br label %cond.end14, !dbg !14034

cond.false13:                                     ; preds = %if.end9
  %11 = load i64, i64* %omp_env_limit, align 8, !dbg !14034, !tbaa !2516
  br label %cond.end14, !dbg !14034

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i64 [ %10, %cond.true12 ], [ %11, %cond.false13 ], !dbg !14034
  store i64 %cond15, i64* %retval, align 8, !dbg !14035
  br label %return, !dbg !14035

return:                                           ; preds = %cond.end14, %cond.end
  %12 = load i64, i64* %retval, align 8, !dbg !14036
  ret i64 %12, !dbg !14036
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @parse_omp_threads(i8* %threads) #4 !dbg !14037 !ctir !1610 {
entry:
  %retval = alloca i64, align 8, !ctir !54
  %threads.addr = alloca i8*, align 8, !ctir !87
  %ret = alloca i64, align 8, !ctir !54
  %endptr = alloca i8*, align 8, !ctir !7
  %value = alloca i64, align 8, !ctir !54
  store i8* %threads, i8** %threads.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %threads.addr, metadata !14038, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !14040, metadata !DIExpression()), !dbg !14041
  store i64 0, i64* %ret, align 8, !dbg !14041, !tbaa !2516
  %0 = load i8*, i8** %threads.addr, align 8, !dbg !14042, !tbaa !2355
  %cmp = icmp eq i8* %0, null, !dbg !14044
  br i1 %cmp, label %if.then, label %if.end, !dbg !14045

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %ret, align 8, !dbg !14046, !tbaa !2516
  store i64 %1, i64* %retval, align 8, !dbg !14047
  br label %return, !dbg !14047

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !14048

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i8*, i8** %threads.addr, align 8, !dbg !14049, !tbaa !2355
  %3 = load i8, i8* %2, align 1, !dbg !14050, !tbaa !2507, !ctir !88
  %conv = sext i8 %3 to i32, !dbg !14050
  %cmp1 = icmp ne i32 %conv, 0, !dbg !14051
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !14052

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %threads.addr, align 8, !dbg !14053, !tbaa !2355
  %5 = load i8, i8* %4, align 1, !dbg !14054, !tbaa !2507, !ctir !88
  %conv3 = sext i8 %5 to i32, !dbg !14054
  %call = call zeroext i1 @c_isspace(i32 %conv3), !dbg !14055
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %call, %land.rhs ], !dbg !14056
  br i1 %6, label %while.body, label %while.end, !dbg !14048

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %threads.addr, align 8, !dbg !14057, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !14057
  store i8* %incdec.ptr, i8** %threads.addr, align 8, !dbg !14057, !tbaa !2355
  br label %while.cond, !dbg !14048, !llvm.loop !14058

while.end:                                        ; preds = %land.end
  %8 = load i8*, i8** %threads.addr, align 8, !dbg !14059, !tbaa !2355
  %9 = load i8, i8* %8, align 1, !dbg !14061, !tbaa !2507, !ctir !88
  %conv5 = sext i8 %9 to i32, !dbg !14061
  %call6 = call zeroext i1 @c_isdigit(i32 %conv5), !dbg !14062
  br i1 %call6, label %if.then7, label %if.end35, !dbg !14063

if.then7:                                         ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !14064, metadata !DIExpression()), !dbg !14066
  store i8* null, i8** %endptr, align 8, !dbg !14066, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %value, metadata !14067, metadata !DIExpression()), !dbg !14068
  %10 = load i8*, i8** %threads.addr, align 8, !dbg !14069, !tbaa !2355
  %call8 = call i64 @strtoul(i8* %10, i8** %endptr, i32 10) #12, !dbg !14070
  store i64 %call8, i64* %value, align 8, !dbg !14068, !tbaa !2516
  %11 = load i8*, i8** %endptr, align 8, !dbg !14071, !tbaa !2355
  %cmp9 = icmp ne i8* %11, null, !dbg !14073
  br i1 %cmp9, label %if.then11, label %if.end34, !dbg !14074

if.then11:                                        ; preds = %if.then7
  br label %while.cond12, !dbg !14075

while.cond12:                                     ; preds = %while.body21, %if.then11
  %12 = load i8*, i8** %endptr, align 8, !dbg !14077, !tbaa !2355
  %13 = load i8, i8* %12, align 1, !dbg !14078, !tbaa !2507, !ctir !8
  %conv13 = sext i8 %13 to i32, !dbg !14078
  %cmp14 = icmp ne i32 %conv13, 0, !dbg !14079
  br i1 %cmp14, label %land.rhs16, label %land.end20, !dbg !14080

land.rhs16:                                       ; preds = %while.cond12
  %14 = load i8*, i8** %endptr, align 8, !dbg !14081, !tbaa !2355
  %15 = load i8, i8* %14, align 1, !dbg !14082, !tbaa !2507, !ctir !8
  %conv17 = sext i8 %15 to i32, !dbg !14082
  %call18 = call zeroext i1 @c_isspace(i32 %conv17), !dbg !14083
  br label %land.end20

land.end20:                                       ; preds = %land.rhs16, %while.cond12
  %16 = phi i1 [ false, %while.cond12 ], [ %call18, %land.rhs16 ], !dbg !14084
  br i1 %16, label %while.body21, label %while.end23, !dbg !14075

while.body21:                                     ; preds = %land.end20
  %17 = load i8*, i8** %endptr, align 8, !dbg !14085, !tbaa !2355
  %incdec.ptr22 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !14085
  store i8* %incdec.ptr22, i8** %endptr, align 8, !dbg !14085, !tbaa !2355
  br label %while.cond12, !dbg !14075, !llvm.loop !14086

while.end23:                                      ; preds = %land.end20
  %18 = load i8*, i8** %endptr, align 8, !dbg !14087, !tbaa !2355
  %19 = load i8, i8* %18, align 1, !dbg !14089, !tbaa !2507, !ctir !8
  %conv24 = sext i8 %19 to i32, !dbg !14089
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !14090
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !14091

if.then27:                                        ; preds = %while.end23
  %20 = load i64, i64* %value, align 8, !dbg !14092, !tbaa !2516
  store i64 %20, i64* %retval, align 8, !dbg !14093
  br label %return, !dbg !14093

if.else:                                          ; preds = %while.end23
  %21 = load i8*, i8** %endptr, align 8, !dbg !14094, !tbaa !2355
  %22 = load i8, i8* %21, align 1, !dbg !14096, !tbaa !2507, !ctir !8
  %conv28 = sext i8 %22 to i32, !dbg !14096
  %cmp29 = icmp eq i32 %conv28, 44, !dbg !14097
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14098

if.then31:                                        ; preds = %if.else
  %23 = load i64, i64* %value, align 8, !dbg !14099, !tbaa !2516
  store i64 %23, i64* %retval, align 8, !dbg !14100
  br label %return, !dbg !14100

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %if.end34, !dbg !14101

if.end34:                                         ; preds = %if.end33, %if.then7
  br label %if.end35, !dbg !14102

if.end35:                                         ; preds = %if.end34, %while.end
  %24 = load i64, i64* %ret, align 8, !dbg !14103, !tbaa !2516
  store i64 %24, i64* %retval, align 8, !dbg !14104
  br label %return, !dbg !14104

return:                                           ; preds = %if.end35, %if.then31, %if.then27, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !14105
  ret i64 %25, !dbg !14105
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @num_processors_ignoring_omp(i32 %query) #4 !dbg !14106 !ctir !1608 {
entry:
  %retval = alloca i64, align 8, !ctir !54
  %query.addr = alloca i32, align 4, !ctir !1601
  %nprocs = alloca i64, align 8, !ctir !54
  %nprocs3 = alloca i64, align 8, !ctir !32
  %nprocs8 = alloca i64, align 8, !ctir !32
  %nprocs_current = alloca i64, align 8, !ctir !54
  store i32 %query, i32* %query.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %query.addr, metadata !14107, metadata !DIExpression()), !dbg !14108
  %0 = load i32, i32* %query.addr, align 4, !dbg !14109, !tbaa !2507
  %cmp = icmp eq i32 %0, 1, !dbg !14111
  br i1 %cmp, label %if.then, label %if.else, !dbg !14112

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %nprocs, metadata !14113, metadata !DIExpression()), !dbg !14116
  %call = call i64 @num_processors_via_affinity_mask(), !dbg !14117
  store i64 %call, i64* %nprocs, align 8, !dbg !14116, !tbaa !2516
  %1 = load i64, i64* %nprocs, align 8, !dbg !14118, !tbaa !2516
  %cmp1 = icmp ugt i64 %1, 0, !dbg !14120
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14121

if.then2:                                         ; preds = %if.then
  %2 = load i64, i64* %nprocs, align 8, !dbg !14122, !tbaa !2516
  store i64 %2, i64* %retval, align 8, !dbg !14123
  br label %return, !dbg !14123

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %nprocs3, metadata !14124, metadata !DIExpression()), !dbg !14126
  %call4 = call i64 @sysconf(i32 84) #12, !dbg !14127
  store i64 %call4, i64* %nprocs3, align 8, !dbg !14126, !tbaa !2516
  %3 = load i64, i64* %nprocs3, align 8, !dbg !14128, !tbaa !2516
  %cmp5 = icmp sgt i64 %3, 0, !dbg !14130
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !14131

if.then6:                                         ; preds = %if.end
  %4 = load i64, i64* %nprocs3, align 8, !dbg !14132, !tbaa !2516
  store i64 %4, i64* %retval, align 8, !dbg !14133
  br label %return, !dbg !14133

if.end7:                                          ; preds = %if.end
  br label %if.end21, !dbg !14134

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %nprocs8, metadata !14135, metadata !DIExpression()), !dbg !14138
  %call9 = call i64 @sysconf(i32 83) #12, !dbg !14139
  store i64 %call9, i64* %nprocs8, align 8, !dbg !14138, !tbaa !2516
  %5 = load i64, i64* %nprocs8, align 8, !dbg !14140, !tbaa !2516
  %cmp10 = icmp eq i64 %5, 1, !dbg !14142
  br i1 %cmp10, label %if.then12, label %lor.lhs.false, !dbg !14143

lor.lhs.false:                                    ; preds = %if.else
  %6 = load i64, i64* %nprocs8, align 8, !dbg !14144, !tbaa !2516
  %cmp11 = icmp eq i64 %6, 2, !dbg !14145
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !14146

if.then12:                                        ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata i64* %nprocs_current, metadata !14147, metadata !DIExpression()), !dbg !14149
  %call13 = call i64 @num_processors_via_affinity_mask(), !dbg !14150
  store i64 %call13, i64* %nprocs_current, align 8, !dbg !14149, !tbaa !2516
  %7 = load i64, i64* %nprocs_current, align 8, !dbg !14151, !tbaa !2516
  %8 = load i64, i64* %nprocs8, align 8, !dbg !14153, !tbaa !2516
  %cmp14 = icmp ugt i64 %7, %8, !dbg !14154
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14155

if.then15:                                        ; preds = %if.then12
  %9 = load i64, i64* %nprocs_current, align 8, !dbg !14156, !tbaa !2516
  store i64 %9, i64* %nprocs8, align 8, !dbg !14157, !tbaa !2516
  br label %if.end16, !dbg !14158

if.end16:                                         ; preds = %if.then15, %if.then12
  br label %if.end17, !dbg !14159

if.end17:                                         ; preds = %if.end16, %lor.lhs.false
  %10 = load i64, i64* %nprocs8, align 8, !dbg !14160, !tbaa !2516
  %cmp18 = icmp sgt i64 %10, 0, !dbg !14162
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !14163

if.then19:                                        ; preds = %if.end17
  %11 = load i64, i64* %nprocs8, align 8, !dbg !14164, !tbaa !2516
  store i64 %11, i64* %retval, align 8, !dbg !14165
  br label %return, !dbg !14165

if.end20:                                         ; preds = %if.end17
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end7
  store i64 1, i64* %retval, align 8, !dbg !14166
  br label %return, !dbg !14166

return:                                           ; preds = %if.end21, %if.then19, %if.then6, %if.then2
  %12 = load i64, i64* %retval, align 8, !dbg !14167
  ret i64 %12, !dbg !14167
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @num_processors_via_affinity_mask() #4 !dbg !14168 !ctir !1612 {
entry:
  %retval = alloca i64, align 8, !ctir !54
  %set = alloca %struct.__sigset_t, align 8, !ctir !1614
  %count = alloca i64, align 8, !ctir !54
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %set, metadata !14169, metadata !DIExpression()), !dbg !14171
  %call = call i32 @sched_getaffinity(i32 0, i64 128, %struct.__sigset_t* %set) #12, !dbg !14172
  %cmp = icmp eq i32 %call, 0, !dbg !14174
  br i1 %cmp, label %if.then, label %if.end5, !dbg !14175

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %count, metadata !14176, metadata !DIExpression()), !dbg !14178
  %call1 = call i32 @__sched_cpucount(i64 128, %struct.__sigset_t* %set) #12, !dbg !14179
  %conv = sext i32 %call1 to i64, !dbg !14179
  store i64 %conv, i64* %count, align 8, !dbg !14180, !tbaa !2516
  %0 = load i64, i64* %count, align 8, !dbg !14181, !tbaa !2516
  %cmp2 = icmp ugt i64 %0, 0, !dbg !14183
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !14184

if.then4:                                         ; preds = %if.then
  %1 = load i64, i64* %count, align 8, !dbg !14185, !tbaa !2516
  store i64 %1, i64* %retval, align 8, !dbg !14186
  br label %return, !dbg !14186

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !14187

if.end5:                                          ; preds = %if.end, %entry
  store i64 0, i64* %retval, align 8, !dbg !14188
  br label %return, !dbg !14188

return:                                           ; preds = %if.end5, %if.then4
  %2 = load i64, i64* %retval, align 8, !dbg !14189
  ret i64 %2, !dbg !14189
}

; Function Attrs: nounwind
declare dso_local i64 @sysconf(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @sched_getaffinity(i32, i64, %struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @__sched_cpucount(i64, %struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @physmem_total() #4 !dbg !14190 !ctir !1624 {
entry:
  %retval = alloca double, align 8, !ctir !370
  %pages = alloca double, align 8, !ctir !370
  %pagesize = alloca double, align 8, !ctir !370
  %si = alloca %struct.sysinfo, align 8, !ctir !14192
  call void @llvm.dbg.declare(metadata double* %pages, metadata !14215, metadata !DIExpression()), !dbg !14217
  %call = call i64 @sysconf(i32 85) #12, !dbg !14218
  %conv = sitofp i64 %call to double, !dbg !14218
  store double %conv, double* %pages, align 8, !dbg !14217, !tbaa !3931
  call void @llvm.dbg.declare(metadata double* %pagesize, metadata !14219, metadata !DIExpression()), !dbg !14220
  %call1 = call i64 @sysconf(i32 30) #12, !dbg !14221
  %conv2 = sitofp i64 %call1 to double, !dbg !14221
  store double %conv2, double* %pagesize, align 8, !dbg !14220, !tbaa !3931
  %0 = load double, double* %pages, align 8, !dbg !14222, !tbaa !3931
  %cmp = fcmp ole double 0.000000e+00, %0, !dbg !14224
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14225

land.lhs.true:                                    ; preds = %entry
  %1 = load double, double* %pagesize, align 8, !dbg !14226, !tbaa !3931
  %cmp4 = fcmp ole double 0.000000e+00, %1, !dbg !14227
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14228

if.then:                                          ; preds = %land.lhs.true
  %2 = load double, double* %pages, align 8, !dbg !14229, !tbaa !3931
  %3 = load double, double* %pagesize, align 8, !dbg !14230, !tbaa !3931
  %mul = fmul double %2, %3, !dbg !14231
  store double %mul, double* %retval, align 8, !dbg !14232
  br label %return, !dbg !14232

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.sysinfo* %si, metadata !14233, metadata !DIExpression()), !dbg !14235
  %call6 = call i32 @sysinfo(%struct.sysinfo* %si) #12, !dbg !14236
  %cmp7 = icmp eq i32 %call6, 0, !dbg !14238
  br i1 %cmp7, label %if.then9, label %if.end13, !dbg !14239

if.then9:                                         ; preds = %if.end
  %totalram = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 2, !dbg !14240, !ctir !14192
  %4 = load i64, i64* %totalram, align 8, !dbg !14240, !tbaa !14241, !ctir !1626
  %conv10 = uitofp i64 %4 to double, !dbg !14243
  %mem_unit = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 12, !dbg !14244, !ctir !14192
  %5 = load i32, i32* %mem_unit, align 8, !dbg !14244, !tbaa !14245, !ctir !1628
  %conv11 = uitofp i32 %5 to double, !dbg !14246
  %mul12 = fmul double %conv10, %conv11, !dbg !14247
  store double %mul12, double* %retval, align 8, !dbg !14248
  br label %return, !dbg !14248

if.end13:                                         ; preds = %if.end
  store double 0x4190000000000000, double* %retval, align 8, !dbg !14249
  br label %return, !dbg !14249

return:                                           ; preds = %if.end13, %if.then9, %if.then
  %6 = load double, double* %retval, align 8, !dbg !14250
  ret double %6, !dbg !14250
}

; Function Attrs: nounwind
declare dso_local i32 @sysinfo(%struct.sysinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @physmem_available() #4 !dbg !14251 !ctir !1624 {
entry:
  %retval = alloca double, align 8, !ctir !370
  %pages = alloca double, align 8, !ctir !370
  %pagesize = alloca double, align 8, !ctir !370
  %si = alloca %struct.sysinfo, align 8, !ctir !14192
  call void @llvm.dbg.declare(metadata double* %pages, metadata !14252, metadata !DIExpression()), !dbg !14254
  %call = call i64 @sysconf(i32 86) #12, !dbg !14255
  %conv = sitofp i64 %call to double, !dbg !14255
  store double %conv, double* %pages, align 8, !dbg !14254, !tbaa !3931
  call void @llvm.dbg.declare(metadata double* %pagesize, metadata !14256, metadata !DIExpression()), !dbg !14257
  %call1 = call i64 @sysconf(i32 30) #12, !dbg !14258
  %conv2 = sitofp i64 %call1 to double, !dbg !14258
  store double %conv2, double* %pagesize, align 8, !dbg !14257, !tbaa !3931
  %0 = load double, double* %pages, align 8, !dbg !14259, !tbaa !3931
  %cmp = fcmp ole double 0.000000e+00, %0, !dbg !14261
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14262

land.lhs.true:                                    ; preds = %entry
  %1 = load double, double* %pagesize, align 8, !dbg !14263, !tbaa !3931
  %cmp4 = fcmp ole double 0.000000e+00, %1, !dbg !14264
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14265

if.then:                                          ; preds = %land.lhs.true
  %2 = load double, double* %pages, align 8, !dbg !14266, !tbaa !3931
  %3 = load double, double* %pagesize, align 8, !dbg !14267, !tbaa !3931
  %mul = fmul double %2, %3, !dbg !14268
  store double %mul, double* %retval, align 8, !dbg !14269
  br label %return, !dbg !14269

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.sysinfo* %si, metadata !14270, metadata !DIExpression()), !dbg !14272
  %call6 = call i32 @sysinfo(%struct.sysinfo* %si) #12, !dbg !14273
  %cmp7 = icmp eq i32 %call6, 0, !dbg !14275
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !14276

if.then9:                                         ; preds = %if.end
  %freeram = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 3, !dbg !14277, !ctir !14192
  %4 = load i64, i64* %freeram, align 8, !dbg !14277, !tbaa !14278, !ctir !1626
  %conv10 = uitofp i64 %4 to double, !dbg !14279
  %bufferram = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 5, !dbg !14280, !ctir !14192
  %5 = load i64, i64* %bufferram, align 8, !dbg !14280, !tbaa !14281, !ctir !1626
  %conv11 = uitofp i64 %5 to double, !dbg !14282
  %add = fadd double %conv10, %conv11, !dbg !14283
  %mem_unit = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 12, !dbg !14284, !ctir !14192
  %6 = load i32, i32* %mem_unit, align 8, !dbg !14284, !tbaa !14245, !ctir !1628
  %conv12 = uitofp i32 %6 to double, !dbg !14285
  %mul13 = fmul double %add, %conv12, !dbg !14286
  store double %mul13, double* %retval, align 8, !dbg !14287
  br label %return, !dbg !14287

if.end14:                                         ; preds = %if.end
  %call15 = call double @physmem_total(), !dbg !14288
  %div = fdiv double %call15, 4.000000e+00, !dbg !14289
  store double %div, double* %retval, align 8, !dbg !14290
  br label %return, !dbg !14290

return:                                           ; preds = %if.end14, %if.then9, %if.then
  %7 = load double, double* %retval, align 8, !dbg !14291
  ret double %7, !dbg !14291
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_pipe2(i32* nonnull %fd, i32 %flags) #4 !dbg !1148 !ctir !1150 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd.addr = alloca i32*, align 8, !ctir !257
  %flags.addr = alloca i32, align 4, !ctir !5
  %tmp = alloca [2 x i32], align 4, !ctir !536
  %result = alloca i32, align 4, !ctir !5
  %fcntl_flags = alloca i32, align 4, !ctir !5
  %fcntl_flags40 = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store i32* %fd, i32** %fd.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32** %fd.addr, metadata !14292, metadata !DIExpression()), !dbg !14293
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14294, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.declare(metadata [2 x i32]* %tmp, metadata !14296, metadata !DIExpression()), !dbg !14297
  %0 = load i32*, i32** %fd.addr, align 8, !dbg !14298, !tbaa !2355
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !14298, !ctir !257
  %1 = load i32, i32* %arrayidx, align 4, !dbg !14298, !tbaa !2342
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 0, !dbg !14299, !ctir !536
  store i32 %1, i32* %arrayidx1, align 4, !dbg !14300, !tbaa !2342
  %2 = load i32*, i32** %fd.addr, align 8, !dbg !14301, !tbaa !2355
  %arrayidx2 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !14301, !ctir !257
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !14301, !tbaa !2342
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 1, !dbg !14302, !ctir !536
  store i32 %3, i32* %arrayidx3, align 4, !dbg !14303, !tbaa !2342
  %4 = load i32, i32* @rpl_pipe2.have_pipe2_really, align 4, !dbg !14304, !tbaa !2342
  %cmp = icmp sge i32 %4, 0, !dbg !14307
  br i1 %cmp, label %if.then, label %if.end8, !dbg !14308

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %result, metadata !14309, metadata !DIExpression()), !dbg !14311
  %5 = load i32*, i32** %fd.addr, align 8, !dbg !14312, !tbaa !2355
  %6 = load i32, i32* %flags.addr, align 4, !dbg !14313, !tbaa !2342
  %call = call i32 @pipe2(i32* %5, i32 %6) #12, !dbg !14314
  store i32 %call, i32* %result, align 4, !dbg !14311, !tbaa !2342
  %7 = load i32, i32* %result, align 4, !dbg !14315, !tbaa !2342
  %cmp4 = icmp slt i32 %7, 0, !dbg !14317
  br i1 %cmp4, label %land.lhs.true, label %if.then7, !dbg !14318

land.lhs.true:                                    ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !14319
  %8 = load i32, i32* %call5, align 4, !dbg !14319, !tbaa !2342, !ctir !5
  %cmp6 = icmp eq i32 %8, 38, !dbg !14320
  br i1 %cmp6, label %if.end, label %if.then7, !dbg !14321

if.then7:                                         ; preds = %land.lhs.true, %if.then
  store i32 1, i32* @rpl_pipe2.have_pipe2_really, align 4, !dbg !14322, !tbaa !2342
  %9 = load i32, i32* %result, align 4, !dbg !14324, !tbaa !2342
  store i32 %9, i32* %retval, align 4, !dbg !14325
  br label %return, !dbg !14325

if.end:                                           ; preds = %land.lhs.true
  store i32 -1, i32* @rpl_pipe2.have_pipe2_really, align 4, !dbg !14326, !tbaa !2342
  br label %if.end8, !dbg !14327

if.end8:                                          ; preds = %if.end, %entry
  %10 = load i32, i32* %flags.addr, align 4, !dbg !14328, !tbaa !2342
  %and = and i32 %10, -526337, !dbg !14330
  %cmp9 = icmp ne i32 %and, 0, !dbg !14331
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !14332

if.then10:                                        ; preds = %if.end8
  %call11 = call i32* @__errno_location() #16, !dbg !14333
  store i32 22, i32* %call11, align 4, !dbg !14335, !tbaa !2342, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !14336
  br label %return, !dbg !14336

if.end12:                                         ; preds = %if.end8
  %11 = load i32*, i32** %fd.addr, align 8, !dbg !14337, !tbaa !2355
  %call13 = call i32 @pipe(i32* %11) #12, !dbg !14339
  %cmp14 = icmp slt i32 %call13, 0, !dbg !14340
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14341

if.then15:                                        ; preds = %if.end12
  store i32 -1, i32* %retval, align 4, !dbg !14342
  br label %return, !dbg !14342

if.end16:                                         ; preds = %if.end12
  %12 = load i32, i32* %flags.addr, align 4, !dbg !14343, !tbaa !2342
  %and17 = and i32 %12, 2048, !dbg !14345
  %tobool = icmp ne i32 %and17, 0, !dbg !14345
  br i1 %tobool, label %if.then18, label %if.end36, !dbg !14346

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %fcntl_flags, metadata !14347, metadata !DIExpression()), !dbg !14349
  %13 = load i32*, i32** %fd.addr, align 8, !dbg !14350, !tbaa !2355
  %arrayidx19 = getelementptr inbounds i32, i32* %13, i64 1, !dbg !14350, !ctir !257
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !14350, !tbaa !2342
  %call20 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %14, i32 3, i32 0), !dbg !14352
  store i32 %call20, i32* %fcntl_flags, align 4, !dbg !14353, !tbaa !2342
  %cmp21 = icmp slt i32 %call20, 0, !dbg !14354
  br i1 %cmp21, label %if.then34, label %lor.lhs.false, !dbg !14355

lor.lhs.false:                                    ; preds = %if.then18
  %15 = load i32*, i32** %fd.addr, align 8, !dbg !14356, !tbaa !2355
  %arrayidx22 = getelementptr inbounds i32, i32* %15, i64 1, !dbg !14356, !ctir !257
  %16 = load i32, i32* %arrayidx22, align 4, !dbg !14356, !tbaa !2342
  %17 = load i32, i32* %fcntl_flags, align 4, !dbg !14357, !tbaa !2342
  %or = or i32 %17, 2048, !dbg !14358
  %call23 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %16, i32 4, i32 %or), !dbg !14359
  %cmp24 = icmp eq i32 %call23, -1, !dbg !14360
  br i1 %cmp24, label %if.then34, label %lor.lhs.false25, !dbg !14361

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %18 = load i32*, i32** %fd.addr, align 8, !dbg !14362, !tbaa !2355
  %arrayidx26 = getelementptr inbounds i32, i32* %18, i64 0, !dbg !14362, !ctir !257
  %19 = load i32, i32* %arrayidx26, align 4, !dbg !14362, !tbaa !2342
  %call27 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %19, i32 3, i32 0), !dbg !14363
  store i32 %call27, i32* %fcntl_flags, align 4, !dbg !14364, !tbaa !2342
  %cmp28 = icmp slt i32 %call27, 0, !dbg !14365
  br i1 %cmp28, label %if.then34, label %lor.lhs.false29, !dbg !14366

lor.lhs.false29:                                  ; preds = %lor.lhs.false25
  %20 = load i32*, i32** %fd.addr, align 8, !dbg !14367, !tbaa !2355
  %arrayidx30 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !14367, !ctir !257
  %21 = load i32, i32* %arrayidx30, align 4, !dbg !14367, !tbaa !2342
  %22 = load i32, i32* %fcntl_flags, align 4, !dbg !14368, !tbaa !2342
  %or31 = or i32 %22, 2048, !dbg !14369
  %call32 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %21, i32 4, i32 %or31), !dbg !14370
  %cmp33 = icmp eq i32 %call32, -1, !dbg !14371
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !14372

if.then34:                                        ; preds = %lor.lhs.false29, %lor.lhs.false25, %lor.lhs.false, %if.then18
  br label %fail, !dbg !14373

if.end35:                                         ; preds = %lor.lhs.false29
  br label %if.end36, !dbg !14374

if.end36:                                         ; preds = %if.end35, %if.end16
  %23 = load i32, i32* %flags.addr, align 4, !dbg !14375, !tbaa !2342
  %and37 = and i32 %23, 524288, !dbg !14377
  %tobool38 = icmp ne i32 %and37, 0, !dbg !14377
  br i1 %tobool38, label %if.then39, label %if.end60, !dbg !14378

if.then39:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i32* %fcntl_flags40, metadata !14379, metadata !DIExpression()), !dbg !14381
  %24 = load i32*, i32** %fd.addr, align 8, !dbg !14382, !tbaa !2355
  %arrayidx41 = getelementptr inbounds i32, i32* %24, i64 1, !dbg !14382, !ctir !257
  %25 = load i32, i32* %arrayidx41, align 4, !dbg !14382, !tbaa !2342
  %call42 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %25, i32 1, i32 0), !dbg !14384
  store i32 %call42, i32* %fcntl_flags40, align 4, !dbg !14385, !tbaa !2342
  %cmp43 = icmp slt i32 %call42, 0, !dbg !14386
  br i1 %cmp43, label %if.then58, label %lor.lhs.false44, !dbg !14387

lor.lhs.false44:                                  ; preds = %if.then39
  %26 = load i32*, i32** %fd.addr, align 8, !dbg !14388, !tbaa !2355
  %arrayidx45 = getelementptr inbounds i32, i32* %26, i64 1, !dbg !14388, !ctir !257
  %27 = load i32, i32* %arrayidx45, align 4, !dbg !14388, !tbaa !2342
  %28 = load i32, i32* %fcntl_flags40, align 4, !dbg !14389, !tbaa !2342
  %or46 = or i32 %28, 1, !dbg !14390
  %call47 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %27, i32 2, i32 %or46), !dbg !14391
  %cmp48 = icmp eq i32 %call47, -1, !dbg !14392
  br i1 %cmp48, label %if.then58, label %lor.lhs.false49, !dbg !14393

lor.lhs.false49:                                  ; preds = %lor.lhs.false44
  %29 = load i32*, i32** %fd.addr, align 8, !dbg !14394, !tbaa !2355
  %arrayidx50 = getelementptr inbounds i32, i32* %29, i64 0, !dbg !14394, !ctir !257
  %30 = load i32, i32* %arrayidx50, align 4, !dbg !14394, !tbaa !2342
  %call51 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %30, i32 1, i32 0), !dbg !14395
  store i32 %call51, i32* %fcntl_flags40, align 4, !dbg !14396, !tbaa !2342
  %cmp52 = icmp slt i32 %call51, 0, !dbg !14397
  br i1 %cmp52, label %if.then58, label %lor.lhs.false53, !dbg !14398

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %31 = load i32*, i32** %fd.addr, align 8, !dbg !14399, !tbaa !2355
  %arrayidx54 = getelementptr inbounds i32, i32* %31, i64 0, !dbg !14399, !ctir !257
  %32 = load i32, i32* %arrayidx54, align 4, !dbg !14399, !tbaa !2342
  %33 = load i32, i32* %fcntl_flags40, align 4, !dbg !14400, !tbaa !2342
  %or55 = or i32 %33, 1, !dbg !14401
  %call56 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %32, i32 2, i32 %or55), !dbg !14402
  %cmp57 = icmp eq i32 %call56, -1, !dbg !14403
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !14404

if.then58:                                        ; preds = %lor.lhs.false53, %lor.lhs.false49, %lor.lhs.false44, %if.then39
  br label %fail, !dbg !14405

if.end59:                                         ; preds = %lor.lhs.false53
  br label %if.end60, !dbg !14406

if.end60:                                         ; preds = %if.end59, %if.end36
  store i32 0, i32* %retval, align 4, !dbg !14407
  br label %return, !dbg !14407

fail:                                             ; preds = %if.then58, %if.then34
  call void @llvm.dbg.label(metadata !14408), !dbg !14409
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !14410, metadata !DIExpression()), !dbg !14412
  %call61 = call i32* @__errno_location() #16, !dbg !14413
  %34 = load i32, i32* %call61, align 4, !dbg !14413, !tbaa !2342, !ctir !5
  store i32 %34, i32* %saved_errno, align 4, !dbg !14412, !tbaa !2342
  %35 = load i32*, i32** %fd.addr, align 8, !dbg !14414, !tbaa !2355
  %arrayidx62 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !14414, !ctir !257
  %36 = load i32, i32* %arrayidx62, align 4, !dbg !14414, !tbaa !2342
  %call63 = call i32 @close(i32 %36), !dbg !14415
  %37 = load i32*, i32** %fd.addr, align 8, !dbg !14416, !tbaa !2355
  %arrayidx64 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !14416, !ctir !257
  %38 = load i32, i32* %arrayidx64, align 4, !dbg !14416, !tbaa !2342
  %call65 = call i32 @close(i32 %38), !dbg !14417
  %arrayidx66 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 0, !dbg !14418, !ctir !536
  %39 = load i32, i32* %arrayidx66, align 4, !dbg !14418, !tbaa !2342
  %40 = load i32*, i32** %fd.addr, align 8, !dbg !14419, !tbaa !2355
  %arrayidx67 = getelementptr inbounds i32, i32* %40, i64 0, !dbg !14419, !ctir !257
  store i32 %39, i32* %arrayidx67, align 4, !dbg !14420, !tbaa !2342
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 1, !dbg !14421, !ctir !536
  %41 = load i32, i32* %arrayidx68, align 4, !dbg !14421, !tbaa !2342
  %42 = load i32*, i32** %fd.addr, align 8, !dbg !14422, !tbaa !2355
  %arrayidx69 = getelementptr inbounds i32, i32* %42, i64 1, !dbg !14422, !ctir !257
  store i32 %41, i32* %arrayidx69, align 4, !dbg !14423, !tbaa !2342
  %43 = load i32, i32* %saved_errno, align 4, !dbg !14424, !tbaa !2342
  %call70 = call i32* @__errno_location() #16, !dbg !14425
  store i32 %43, i32* %call70, align 4, !dbg !14426, !tbaa !2342, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !14427
  br label %return, !dbg !14427

return:                                           ; preds = %fail, %if.end60, %if.then15, %if.then10, %if.then7
  %44 = load i32, i32* %retval, align 4, !dbg !14428
  ret i32 %44, !dbg !14428
}

; Function Attrs: nounwind
declare dso_local i32 @pipe2(i32*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @pipe(i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @posix2_version() #4 !dbg !14429 !ctir !1633 {
entry:
  %v = alloca i64, align 8, !ctir !32
  %s = alloca i8*, align 8, !ctir !87
  %e = alloca i8*, align 8, !ctir !7
  %i = alloca i64, align 8, !ctir !32
  call void @llvm.dbg.declare(metadata i64* %v, metadata !14431, metadata !DIExpression()), !dbg !14432
  store i64 200809, i64* %v, align 8, !dbg !14432, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %s, metadata !14433, metadata !DIExpression()), !dbg !14434
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.241, i64 0, i64 0)) #12, !dbg !14435
  store i8* %call, i8** %s, align 8, !dbg !14434, !tbaa !2355
  %0 = load i8*, i8** %s, align 8, !dbg !14436, !tbaa !2355
  %tobool = icmp ne i8* %0, null, !dbg !14436
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !14438

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %s, align 8, !dbg !14439, !tbaa !2355
  %2 = load i8, i8* %1, align 1, !dbg !14440, !tbaa !2507, !ctir !88
  %conv = sext i8 %2 to i32, !dbg !14440
  %tobool1 = icmp ne i32 %conv, 0, !dbg !14440
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !14441

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %e, metadata !14442, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14445, metadata !DIExpression()), !dbg !14446
  %3 = load i8*, i8** %s, align 8, !dbg !14447, !tbaa !2355
  %call2 = call i64 @strtol(i8* %3, i8** %e, i32 10) #12, !dbg !14448
  store i64 %call2, i64* %i, align 8, !dbg !14446, !tbaa !2516
  %4 = load i8*, i8** %e, align 8, !dbg !14449, !tbaa !2355
  %5 = load i8, i8* %4, align 1, !dbg !14451, !tbaa !2507, !ctir !8
  %tobool3 = icmp ne i8 %5, 0, !dbg !14451
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !14452

if.then4:                                         ; preds = %if.then
  %6 = load i64, i64* %i, align 8, !dbg !14453, !tbaa !2516
  store i64 %6, i64* %v, align 8, !dbg !14454, !tbaa !2516
  br label %if.end, !dbg !14455

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !14456

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %7 = load i64, i64* %v, align 8, !dbg !14457, !tbaa !2516
  %cmp = icmp slt i64 %7, -2147483648, !dbg !14458
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14457

cond.true:                                        ; preds = %if.end5
  br label %cond.end11, !dbg !14457

cond.false:                                       ; preds = %if.end5
  %8 = load i64, i64* %v, align 8, !dbg !14459, !tbaa !2516
  %cmp7 = icmp slt i64 %8, 2147483647, !dbg !14460
  br i1 %cmp7, label %cond.true9, label %cond.false10, !dbg !14459

cond.true9:                                       ; preds = %cond.false
  %9 = load i64, i64* %v, align 8, !dbg !14461, !tbaa !2516
  br label %cond.end, !dbg !14459

cond.false10:                                     ; preds = %cond.false
  br label %cond.end, !dbg !14459

cond.end:                                         ; preds = %cond.false10, %cond.true9
  %cond = phi i64 [ %9, %cond.true9 ], [ 2147483647, %cond.false10 ], !dbg !14459
  br label %cond.end11, !dbg !14457

cond.end11:                                       ; preds = %cond.end, %cond.true
  %cond12 = phi i64 [ -2147483648, %cond.true ], [ %cond, %cond.end ], !dbg !14457
  %conv13 = trunc i64 %cond12 to i32, !dbg !14457
  ret i32 %conv13, !dbg !14462
}

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !14463 !ctir !302 {
entry:
  %argv0.addr = alloca i8*, align 8, !ctir !87
  %slash = alloca i8*, align 8, !ctir !87
  %base = alloca i8*, align 8, !ctir !87
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !14464, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !14466, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.declare(metadata i8** %base, metadata !14468, metadata !DIExpression()), !dbg !14469
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !14470, !tbaa !2355
  %cmp = icmp eq i8* %0, null, !dbg !14472
  br i1 %cmp, label %if.then, label %if.end, !dbg !14473

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14474, !tbaa !2355
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.246, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !14476
  call void @abort() #13, !dbg !14477
  unreachable, !dbg !14477

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !14478, !tbaa !2355
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !14479
  store i8* %call1, i8** %slash, align 8, !dbg !14480, !tbaa !2355
  %3 = load i8*, i8** %slash, align 8, !dbg !14481, !tbaa !2355
  %cmp2 = icmp ne i8* %3, null, !dbg !14482
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !14481

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !14483, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !14484
  br label %cond.end, !dbg !14481

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !14485, !tbaa !2355
  br label %cond.end, !dbg !14481

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !14481
  store i8* %cond, i8** %base, align 8, !dbg !14486, !tbaa !2355
  %6 = load i8*, i8** %base, align 8, !dbg !14487, !tbaa !2355
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !14489, !tbaa !2355
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !14490
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !14490
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14490
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !14491
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !14492

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !14493, !tbaa !2355
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !14494
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.247, i64 0, i64 0), i64 7) #14, !dbg !14495
  %cmp6 = icmp eq i32 %call5, 0, !dbg !14496
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !14497

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !14498, !tbaa !2355
  store i8* %9, i8** %argv0.addr, align 8, !dbg !14500, !tbaa !2355
  %10 = load i8*, i8** %base, align 8, !dbg !14501, !tbaa !2355
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.248, i64 0, i64 0), i64 3) #14, !dbg !14503
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14504
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !14505

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !14506, !tbaa !2355
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !14508
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !14509, !tbaa !2355
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !14510, !tbaa !2355
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !14511, !tbaa !2355
  br label %if.end12, !dbg !14512

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !14513

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !14514, !tbaa !2355
  store i8* %13, i8** @program_name, align 8, !dbg !14515, !tbaa !2355
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !14516, !tbaa !2355
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !14517, !tbaa !2355
  ret void, !dbg !14518
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !14519 !ctir !1224 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1226
  %e = alloca i32, align 4, !ctir !5
  %p = alloca %struct.quoting_options*, align 8, !ctir !1226
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14520, metadata !DIExpression()), !dbg !14521
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14522, metadata !DIExpression()), !dbg !14523
  %call = call i32* @__errno_location() #16, !dbg !14524
  %0 = load i32, i32* %call, align 4, !dbg !14524, !tbaa !2342, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !14523, !tbaa !2342
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14525, metadata !DIExpression()), !dbg !14526
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14527, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14527
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14527

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14528, !tbaa !2355
  br label %cond.end, !dbg !14527

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14527

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14527
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !14527
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !14529
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !14529
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !14526, !tbaa !2355
  %5 = load i32, i32* %e, align 4, !dbg !14530, !tbaa !2342
  %call2 = call i32* @__errno_location() #16, !dbg !14531
  store i32 %5, i32* %call2, align 4, !dbg !14532, !tbaa !2342, !ctir !5
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14533, !tbaa !2355
  ret %struct.quoting_options* %6, !dbg !14534
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !14535 !ctir !1238 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1240
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14538, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14538
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14538

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14539, !tbaa !2355
  br label %cond.end, !dbg !14538

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14538

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14538
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14540, !ctir !1241
  %2 = load i32, i32* %style, align 8, !dbg !14540, !tbaa !14541, !ctir !1206
  ret i32 %2, !dbg !14543
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !14544 !ctir !1242 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1226
  %s.addr = alloca i32, align 4, !ctir !1206
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14545, metadata !DIExpression()), !dbg !14546
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14547, metadata !DIExpression()), !dbg !14548
  %0 = load i32, i32* %s.addr, align 4, !dbg !14549, !tbaa !2507
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14550, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14550
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14550

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14551, !tbaa !2355
  br label %cond.end, !dbg !14550

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14550

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14550
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14552, !ctir !1227
  store i32 %0, i32* %style, align 8, !dbg !14553, !tbaa !14541, !ctir !1206
  ret void, !dbg !14554
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !14555 !ctir !1244 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1226
  %c.addr = alloca i8, align 1, !ctir !8
  %i.addr = alloca i32, align 4, !ctir !5
  %uc = alloca i8, align 1, !ctir !317
  %p = alloca i32*, align 8, !ctir !1246
  %shift = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14556, metadata !DIExpression()), !dbg !14557
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !14558, metadata !DIExpression()), !dbg !14559
  store i32 %i, i32* %i.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14560, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !14562, metadata !DIExpression()), !dbg !14563
  %0 = load i8, i8* %c.addr, align 1, !dbg !14564, !tbaa !2507
  store i8 %0, i8* %uc, align 1, !dbg !14563, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32** %p, metadata !14565, metadata !DIExpression()), !dbg !14566
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14567, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14567
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14567

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14568, !tbaa !2355
  br label %cond.end, !dbg !14567

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14567

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14567
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !14569, !ctir !1227
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14570
  %3 = load i8, i8* %uc, align 1, !dbg !14571, !tbaa !2507
  %conv = zext i8 %3 to i64, !dbg !14571
  %div = udiv i64 %conv, 32, !dbg !14572
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !14573
  store i32* %add.ptr, i32** %p, align 8, !dbg !14566, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !14574, metadata !DIExpression()), !dbg !14575
  %4 = load i8, i8* %uc, align 1, !dbg !14576, !tbaa !2507
  %conv1 = zext i8 %4 to i64, !dbg !14576
  %rem = urem i64 %conv1, 32, !dbg !14577
  %conv2 = trunc i64 %rem to i32, !dbg !14576
  store i32 %conv2, i32* %shift, align 4, !dbg !14575, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14578, metadata !DIExpression()), !dbg !14579
  %5 = load i32*, i32** %p, align 8, !dbg !14580, !tbaa !2355
  %6 = load i32, i32* %5, align 4, !dbg !14581, !tbaa !2342, !ctir !66
  %7 = load i32, i32* %shift, align 4, !dbg !14582, !tbaa !2342
  %shr = lshr i32 %6, %7, !dbg !14583
  %and = and i32 %shr, 1, !dbg !14584
  store i32 %and, i32* %r, align 4, !dbg !14579, !tbaa !2342
  %8 = load i32, i32* %i.addr, align 4, !dbg !14585, !tbaa !2342
  %and3 = and i32 %8, 1, !dbg !14586
  %9 = load i32, i32* %r, align 4, !dbg !14587, !tbaa !2342
  %xor = xor i32 %and3, %9, !dbg !14588
  %10 = load i32, i32* %shift, align 4, !dbg !14589, !tbaa !2342
  %shl = shl i32 %xor, %10, !dbg !14590
  %11 = load i32*, i32** %p, align 8, !dbg !14591, !tbaa !2355
  %12 = load i32, i32* %11, align 4, !dbg !14592, !tbaa !2342, !ctir !66
  %xor4 = xor i32 %12, %shl, !dbg !14592
  store i32 %xor4, i32* %11, align 4, !dbg !14592, !tbaa !2342, !ctir !66
  %13 = load i32, i32* %r, align 4, !dbg !14593, !tbaa !2342
  ret i32 %13, !dbg !14594
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !14595 !ctir !1247 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1226
  %i.addr = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14596, metadata !DIExpression()), !dbg !14597
  store i32 %i, i32* %i.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14598, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14600, metadata !DIExpression()), !dbg !14601
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14602, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14602
  br i1 %tobool, label %if.end, label %if.then, !dbg !14604

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14605, !tbaa !2355
  br label %if.end, !dbg !14606

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14607, !tbaa !2355
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !14608, !ctir !1227
  %2 = load i32, i32* %flags, align 4, !dbg !14608, !tbaa !14609, !ctir !5
  store i32 %2, i32* %r, align 4, !dbg !14610, !tbaa !2342
  %3 = load i32, i32* %i.addr, align 4, !dbg !14611, !tbaa !2342
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14612, !tbaa !2355
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !14613, !ctir !1227
  store i32 %3, i32* %flags1, align 4, !dbg !14614, !tbaa !14609, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !14615, !tbaa !2342
  ret i32 %5, !dbg !14616
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !14617 !ctir !1249 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1226
  %left_quote.addr = alloca i8*, align 8, !ctir !87
  %right_quote.addr = alloca i8*, align 8, !ctir !87
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14618, metadata !DIExpression()), !dbg !14619
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14620, metadata !DIExpression()), !dbg !14621
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14622, metadata !DIExpression()), !dbg !14623
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14624, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14624
  br i1 %tobool, label %if.end, label %if.then, !dbg !14626

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14627, !tbaa !2355
  br label %if.end, !dbg !14628

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14629, !tbaa !2355
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !14630, !ctir !1227
  store i32 10, i32* %style, align 8, !dbg !14631, !tbaa !14541, !ctir !1206
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !14632, !tbaa !2355
  %tobool1 = icmp ne i8* %2, null, !dbg !14632
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !14634

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !14635, !tbaa !2355
  %tobool2 = icmp ne i8* %3, null, !dbg !14635
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !14636

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !14637
  unreachable, !dbg !14637

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !14638, !tbaa !2355
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14639, !tbaa !2355
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !14640, !ctir !1227
  store i8* %4, i8** %left_quote5, align 8, !dbg !14641, !tbaa !14642, !ctir !87
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !14643, !tbaa !2355
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14644, !tbaa !2355
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !14645, !ctir !1227
  store i8* %6, i8** %right_quote6, align 8, !dbg !14646, !tbaa !14647, !ctir !87
  ret void, !dbg !14648
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14649 !ctir !1251 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !7
  %buffersize.addr = alloca i64, align 8, !ctir !52
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1240
  %p = alloca %struct.quoting_options*, align 8, !ctir !1240
  %e = alloca i32, align 4, !ctir !5
  %r = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14650, metadata !DIExpression()), !dbg !14651
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14652, metadata !DIExpression()), !dbg !14653
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14654, metadata !DIExpression()), !dbg !14655
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14656, metadata !DIExpression()), !dbg !14657
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14658, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14660, metadata !DIExpression()), !dbg !14661
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14662, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14662
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14662

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14663, !tbaa !2355
  br label %cond.end, !dbg !14662

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14662
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14661, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14664, metadata !DIExpression()), !dbg !14665
  %call = call i32* @__errno_location() #16, !dbg !14666
  %2 = load i32, i32* %call, align 4, !dbg !14666, !tbaa !2342, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !14665, !tbaa !2342
  call void @llvm.dbg.declare(metadata i64* %r, metadata !14667, metadata !DIExpression()), !dbg !14668
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !14669, !tbaa !2355
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14670, !tbaa !2516
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !14671, !tbaa !2355
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !14672, !tbaa !2516
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14673, !tbaa !2355
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !14674, !ctir !1241
  %8 = load i32, i32* %style, align 8, !dbg !14674, !tbaa !14541, !ctir !1206
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14675, !tbaa !2355
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !14676, !ctir !1241
  %10 = load i32, i32* %flags, align 4, !dbg !14676, !tbaa !14609, !ctir !5
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14677, !tbaa !2355
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !14678, !ctir !1241
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14677
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14679, !tbaa !2355
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !14680, !ctir !1241
  %13 = load i8*, i8** %left_quote, align 8, !dbg !14680, !tbaa !14642, !ctir !87
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14681, !tbaa !2355
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !14682, !ctir !1241
  %15 = load i8*, i8** %right_quote, align 8, !dbg !14682, !tbaa !14647, !ctir !87
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !14683
  store i64 %call1, i64* %r, align 8, !dbg !14668, !tbaa !2516
  %16 = load i32, i32* %e, align 4, !dbg !14684, !tbaa !2342
  %call2 = call i32* @__errno_location() #16, !dbg !14685
  store i32 %16, i32* %call2, align 4, !dbg !14686, !tbaa !2342, !ctir !5
  %17 = load i64, i64* %r, align 8, !dbg !14687, !tbaa !2516
  ret i64 %17, !dbg !14688
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !14689 !ctir !1298 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %buffer.addr = alloca i8*, align 8, !ctir !7
  %buffersize.addr = alloca i64, align 8, !ctir !52
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %quoting_style.addr = alloca i32, align 4, !ctir !1206
  %flags.addr = alloca i32, align 4, !ctir !5
  %quote_these_too.addr = alloca i32*, align 8, !ctir !1300
  %left_quote.addr = alloca i8*, align 8, !ctir !87
  %right_quote.addr = alloca i8*, align 8, !ctir !87
  %i = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %orig_buffersize = alloca i64, align 8, !ctir !52
  %quote_string = alloca i8*, align 8, !ctir !87
  %quote_string_len = alloca i64, align 8, !ctir !52
  %backslash_escapes = alloca i8, align 1, !ctir !102
  %unibyte_locale = alloca i8, align 1, !ctir !102
  %elide_outer_quotes = alloca i8, align 1, !ctir !102
  %pending_shell_escape_end = alloca i8, align 1, !ctir !102
  %encountered_single_quote = alloca i8, align 1, !ctir !102
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !102
  %c = alloca i8, align 1, !ctir !317
  %esc = alloca i8, align 1, !ctir !317
  %is_right_quote = alloca i8, align 1, !ctir !102
  %escaping = alloca i8, align 1, !ctir !102
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !102
  %m = alloca i64, align 8, !ctir !52
  %printable = alloca i8, align 1, !ctir !102
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1302
  %w = alloca i32, align 4, !ctir !1314
  %bytes = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %ilim = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14690, metadata !DIExpression()), !dbg !14691
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14692, metadata !DIExpression()), !dbg !14693
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14694, metadata !DIExpression()), !dbg !14695
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14696, metadata !DIExpression()), !dbg !14697
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !14698, metadata !DIExpression()), !dbg !14699
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14700, metadata !DIExpression()), !dbg !14701
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !14702, metadata !DIExpression()), !dbg !14703
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14704, metadata !DIExpression()), !dbg !14705
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14706, metadata !DIExpression()), !dbg !14707
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14708, metadata !DIExpression()), !dbg !14709
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14710, metadata !DIExpression()), !dbg !14711
  store i64 0, i64* %len, align 8, !dbg !14711, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !14712, metadata !DIExpression()), !dbg !14713
  store i64 0, i64* %orig_buffersize, align 8, !dbg !14713, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !14714, metadata !DIExpression()), !dbg !14715
  store i8* null, i8** %quote_string, align 8, !dbg !14715, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !14716, metadata !DIExpression()), !dbg !14717
  store i64 0, i64* %quote_string_len, align 8, !dbg !14717, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !14718, metadata !DIExpression()), !dbg !14719
  store i8 0, i8* %backslash_escapes, align 1, !dbg !14719, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !14720, metadata !DIExpression()), !dbg !14721
  %call = call i64 @__ctype_get_mb_cur_max() #12, !dbg !14722
  %cmp = icmp eq i64 %call, 1, !dbg !14723
  %frombool = zext i1 %cmp to i8, !dbg !14721
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !14721, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !14724, metadata !DIExpression()), !dbg !14725
  %0 = load i32, i32* %flags.addr, align 4, !dbg !14726, !tbaa !2342
  %and = and i32 %0, 2, !dbg !14727
  %cmp1 = icmp ne i32 %and, 0, !dbg !14728
  %frombool2 = zext i1 %cmp1 to i8, !dbg !14725
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !14725, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !14729, metadata !DIExpression()), !dbg !14730
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14730, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !14731, metadata !DIExpression()), !dbg !14732
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !14732, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !14733, metadata !DIExpression()), !dbg !14734
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14734, !tbaa !2499
  br label %process_input, !dbg !14735

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !14736), !dbg !14737
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !14738, !tbaa !2507
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !14739

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !14740, !tbaa !2507
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14742, !tbaa !2499
  br label %sw.bb3, !dbg !14743

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14744, !tbaa !2499
  %tobool = trunc i8 %2 to i1, !dbg !14744
  br i1 %tobool, label %if.end6, label %if.then, !dbg !14746

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !14747

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !14748, !tbaa !2516
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14748, !tbaa !2516
  %cmp4 = icmp ult i64 %3, %4, !dbg !14748
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !14751

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !14748, !tbaa !2355
  %6 = load i64, i64* %len, align 8, !dbg !14748, !tbaa !2516
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !14748, !ctir !7
  store i8 34, i8* %arrayidx, align 1, !dbg !14748, !tbaa !2507
  br label %if.end, !dbg !14748

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !14751, !tbaa !2516
  %inc = add i64 %7, 1, !dbg !14751
  store i64 %inc, i64* %len, align 8, !dbg !14751, !tbaa !2516
  br label %do.end, !dbg !14751

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !14751

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14752, !tbaa !2499
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.259, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14753, !tbaa !2355
  store i64 1, i64* %quote_string_len, align 8, !dbg !14754, !tbaa !2516
  br label %sw.epilog, !dbg !14755

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14756, !tbaa !2499
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14757, !tbaa !2499
  br label %sw.epilog, !dbg !14758

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !14759, !tbaa !2507
  %cmp9 = icmp ne i32 %8, 10, !dbg !14762
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !14763

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !14764, !tbaa !2507
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.260, i64 0, i64 0), i32 %9), !dbg !14766
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !14767, !tbaa !2355
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !14768, !tbaa !2507
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.261, i64 0, i64 0), i32 %10), !dbg !14769
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !14770, !tbaa !2355
  br label %if.end13, !dbg !14771

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14772, !tbaa !2499
  %tobool14 = trunc i8 %11 to i1, !dbg !14772
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !14774

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !14775, !tbaa !2355
  store i8* %12, i8** %quote_string, align 8, !dbg !14777, !tbaa !2355
  br label %for.cond, !dbg !14778

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !14779, !tbaa !2355
  %14 = load i8, i8* %13, align 1, !dbg !14781, !tbaa !2507, !ctir !88
  %tobool16 = icmp ne i8 %14, 0, !dbg !14782
  br i1 %tobool16, label %for.body, label %for.end, !dbg !14782

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !14783

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !14784, !tbaa !2516
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !14784, !tbaa !2516
  %cmp18 = icmp ult i64 %15, %16, !dbg !14784
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !14787

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !14784, !tbaa !2355
  %18 = load i8, i8* %17, align 1, !dbg !14784, !tbaa !2507, !ctir !88
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !14784, !tbaa !2355
  %20 = load i64, i64* %len, align 8, !dbg !14784, !tbaa !2516
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !14784, !ctir !7
  store i8 %18, i8* %arrayidx20, align 1, !dbg !14784, !tbaa !2507
  br label %if.end21, !dbg !14784

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !14787, !tbaa !2516
  %inc22 = add i64 %21, 1, !dbg !14787
  store i64 %inc22, i64* %len, align 8, !dbg !14787, !tbaa !2516
  br label %do.end23, !dbg !14787

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !14787

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !14788, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !14788
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !14788, !tbaa !2355
  br label %for.cond, !dbg !14789, !llvm.loop !14790

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !14791

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14792, !tbaa !2499
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !14793, !tbaa !2355
  store i8* %23, i8** %quote_string, align 8, !dbg !14794, !tbaa !2355
  %24 = load i8*, i8** %quote_string, align 8, !dbg !14795, !tbaa !2355
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !14796
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !14797, !tbaa !2516
  br label %sw.epilog, !dbg !14798

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14799, !tbaa !2499
  br label %sw.bb27, !dbg !14800

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14801, !tbaa !2499
  br label %sw.bb28, !dbg !14802

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14803, !tbaa !2499
  %tobool29 = trunc i8 %25 to i1, !dbg !14803
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !14805

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14806, !tbaa !2499
  br label %if.end31, !dbg !14807

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !14808

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !14809, !tbaa !2507
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14810, !tbaa !2499
  %tobool33 = trunc i8 %26 to i1, !dbg !14810
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !14812

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !14813

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !14814, !tbaa !2516
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !14814, !tbaa !2516
  %cmp36 = icmp ult i64 %27, %28, !dbg !14814
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !14817

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !14814, !tbaa !2355
  %30 = load i64, i64* %len, align 8, !dbg !14814, !tbaa !2516
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !14814, !ctir !7
  store i8 39, i8* %arrayidx38, align 1, !dbg !14814, !tbaa !2507
  br label %if.end39, !dbg !14814

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !14817, !tbaa !2516
  %inc40 = add i64 %31, 1, !dbg !14817
  store i64 %inc40, i64* %len, align 8, !dbg !14817, !tbaa !2516
  br label %do.end41, !dbg !14817

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !14817

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.261, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14818, !tbaa !2355
  store i64 1, i64* %quote_string_len, align 8, !dbg !14819, !tbaa !2516
  br label %sw.epilog, !dbg !14820

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14821, !tbaa !2499
  br label %sw.epilog, !dbg !14822

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !14823
  unreachable, !dbg !14823

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !14824, !tbaa !2516
  br label %for.cond44, !dbg !14826

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !14827, !tbaa !2516
  %cmp45 = icmp eq i64 %32, -1, !dbg !14829
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !14827

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !14830, !tbaa !2355
  %34 = load i64, i64* %i, align 8, !dbg !14831, !tbaa !2516
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !14830, !ctir !87
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !14830, !tbaa !2507
  %conv = sext i8 %35 to i32, !dbg !14830
  %cmp47 = icmp eq i32 %conv, 0, !dbg !14832
  %conv48 = zext i1 %cmp47 to i32, !dbg !14832
  br label %cond.end, !dbg !14827

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !14833, !tbaa !2516
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !14834, !tbaa !2516
  %cmp49 = icmp eq i64 %36, %37, !dbg !14835
  %conv50 = zext i1 %cmp49 to i32, !dbg !14835
  br label %cond.end, !dbg !14827

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !14827
  %tobool51 = icmp ne i32 %cond, 0, !dbg !14836
  %lnot = xor i1 %tobool51, true, !dbg !14836
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !14837

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14838, metadata !DIExpression()), !dbg !14840
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !14841, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !14843, metadata !DIExpression()), !dbg !14844
  store i8 0, i8* %is_right_quote, align 1, !dbg !14844, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !14845, metadata !DIExpression()), !dbg !14846
  store i8 0, i8* %escaping, align 1, !dbg !14846, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !14847, metadata !DIExpression()), !dbg !14848
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !14848, !tbaa !2499
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !14849, !tbaa !2499
  %tobool53 = trunc i8 %38 to i1, !dbg !14849
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !14851

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !14852, !tbaa !2507
  %cmp55 = icmp ne i32 %39, 2, !dbg !14853
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !14854

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !14855, !tbaa !2516
  %tobool58 = icmp ne i64 %40, 0, !dbg !14855
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !14856

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !14857, !tbaa !2516
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !14858, !tbaa !2516
  %add = add i64 %41, %42, !dbg !14859
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !14860, !tbaa !2516
  %cmp60 = icmp eq i64 %43, -1, !dbg !14861
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !14862

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !14863, !tbaa !2516
  %cmp63 = icmp ult i64 1, %44, !dbg !14864
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !14860

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !14865, !tbaa !2355
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !14866
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !14867, !tbaa !2516
  br label %cond.end68, !dbg !14860

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !14868, !tbaa !2516
  br label %cond.end68, !dbg !14860

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !14860
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !14869
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !14870

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !14871, !tbaa !2355
  %48 = load i64, i64* %i, align 8, !dbg !14872, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !14873
  %49 = load i8*, i8** %quote_string, align 8, !dbg !14874, !tbaa !2355
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !14875, !tbaa !2516
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !14876
  %cmp74 = icmp eq i32 %call73, 0, !dbg !14877
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !14878

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14879, !tbaa !2499
  %tobool77 = trunc i8 %51 to i1, !dbg !14879
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !14882

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !14883

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !14884, !tbaa !2499
  br label %if.end80, !dbg !14885

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !14886, !tbaa !2355
  %53 = load i64, i64* %i, align 8, !dbg !14887, !tbaa !2516
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !14886, !ctir !87
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !14886, !tbaa !2507
  store i8 %54, i8* %c, align 1, !dbg !14888, !tbaa !2507
  %55 = load i8, i8* %c, align 1, !dbg !14889, !tbaa !2507
  %conv82 = zext i8 %55 to i32, !dbg !14889
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !14890

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !14891, !tbaa !2499
  %tobool84 = trunc i8 %56 to i1, !dbg !14891
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !14894

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !14895

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14897, !tbaa !2499
  %tobool87 = trunc i8 %57 to i1, !dbg !14897
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !14900

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !14897

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !14900, !tbaa !2499
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !14901, !tbaa !2507
  %cmp90 = icmp eq i32 %58, 2, !dbg !14901
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !14901

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14901, !tbaa !2499
  %tobool93 = trunc i8 %59 to i1, !dbg !14901
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !14900

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !14903

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !14905, !tbaa !2516
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !14905, !tbaa !2516
  %cmp96 = icmp ult i64 %60, %61, !dbg !14905
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14908

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !14905, !tbaa !2355
  %63 = load i64, i64* %len, align 8, !dbg !14905, !tbaa !2516
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !14905, !ctir !7
  store i8 39, i8* %arrayidx99, align 1, !dbg !14905, !tbaa !2507
  br label %if.end100, !dbg !14905

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !14908, !tbaa !2516
  %inc101 = add i64 %64, 1, !dbg !14908
  store i64 %inc101, i64* %len, align 8, !dbg !14908, !tbaa !2516
  br label %do.end102, !dbg !14908

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !14903

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !14909, !tbaa !2516
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !14909, !tbaa !2516
  %cmp104 = icmp ult i64 %65, %66, !dbg !14909
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !14912

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !14909, !tbaa !2355
  %68 = load i64, i64* %len, align 8, !dbg !14909, !tbaa !2516
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !14909, !ctir !7
  store i8 36, i8* %arrayidx107, align 1, !dbg !14909, !tbaa !2507
  br label %if.end108, !dbg !14909

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !14912, !tbaa !2516
  %inc109 = add i64 %69, 1, !dbg !14912
  store i64 %inc109, i64* %len, align 8, !dbg !14912, !tbaa !2516
  br label %do.end110, !dbg !14912

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !14903

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !14913, !tbaa !2516
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !14913, !tbaa !2516
  %cmp112 = icmp ult i64 %70, %71, !dbg !14913
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14916

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !14913, !tbaa !2355
  %73 = load i64, i64* %len, align 8, !dbg !14913, !tbaa !2516
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !14913, !ctir !7
  store i8 39, i8* %arrayidx115, align 1, !dbg !14913, !tbaa !2507
  br label %if.end116, !dbg !14913

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !14916, !tbaa !2516
  %inc117 = add i64 %74, 1, !dbg !14916
  store i64 %inc117, i64* %len, align 8, !dbg !14916, !tbaa !2516
  br label %do.end118, !dbg !14916

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14903, !tbaa !2499
  br label %if.end119, !dbg !14903

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !14900

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !14917, !tbaa !2516
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !14917, !tbaa !2516
  %cmp121 = icmp ult i64 %75, %76, !dbg !14917
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !14920

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !14917, !tbaa !2355
  %78 = load i64, i64* %len, align 8, !dbg !14917, !tbaa !2516
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !14917, !ctir !7
  store i8 92, i8* %arrayidx124, align 1, !dbg !14917, !tbaa !2507
  br label %if.end125, !dbg !14917

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !14920, !tbaa !2516
  %inc126 = add i64 %79, 1, !dbg !14920
  store i64 %inc126, i64* %len, align 8, !dbg !14920, !tbaa !2516
  br label %do.end127, !dbg !14920

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !14900

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !14921, !tbaa !2507
  %cmp129 = icmp ne i32 %80, 2, !dbg !14923
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !14924

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !14925, !tbaa !2516
  %add132 = add i64 %81, 1, !dbg !14926
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !14927, !tbaa !2516
  %cmp133 = icmp ult i64 %add132, %82, !dbg !14928
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !14929

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !14930, !tbaa !2355
  %84 = load i64, i64* %i, align 8, !dbg !14931, !tbaa !2516
  %add136 = add i64 %84, 1, !dbg !14932
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !14930, !ctir !87
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !14930, !tbaa !2507
  %conv138 = sext i8 %85 to i32, !dbg !14930
  %cmp139 = icmp sle i32 48, %conv138, !dbg !14933
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !14934

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !14935, !tbaa !2355
  %87 = load i64, i64* %i, align 8, !dbg !14936, !tbaa !2516
  %add142 = add i64 %87, 1, !dbg !14937
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !14935, !ctir !87
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !14935, !tbaa !2507
  %conv144 = sext i8 %88 to i32, !dbg !14935
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !14938
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !14939

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !14940

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !14942, !tbaa !2516
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !14942, !tbaa !2516
  %cmp149 = icmp ult i64 %89, %90, !dbg !14942
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !14945

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !14942, !tbaa !2355
  %92 = load i64, i64* %len, align 8, !dbg !14942, !tbaa !2516
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !14942, !ctir !7
  store i8 48, i8* %arrayidx152, align 1, !dbg !14942, !tbaa !2507
  br label %if.end153, !dbg !14942

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !14945, !tbaa !2516
  %inc154 = add i64 %93, 1, !dbg !14945
  store i64 %inc154, i64* %len, align 8, !dbg !14945, !tbaa !2516
  br label %do.end155, !dbg !14945

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !14946

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !14947, !tbaa !2516
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !14947, !tbaa !2516
  %cmp157 = icmp ult i64 %94, %95, !dbg !14947
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !14950

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !14947, !tbaa !2355
  %97 = load i64, i64* %len, align 8, !dbg !14947, !tbaa !2516
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !14947, !ctir !7
  store i8 48, i8* %arrayidx160, align 1, !dbg !14947, !tbaa !2507
  br label %if.end161, !dbg !14947

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !14950, !tbaa !2516
  %inc162 = add i64 %98, 1, !dbg !14950
  store i64 %inc162, i64* %len, align 8, !dbg !14950, !tbaa !2516
  br label %do.end163, !dbg !14950

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !14951

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !14952, !tbaa !2507
  br label %if.end169, !dbg !14953

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14954, !tbaa !2342
  %and165 = and i32 %99, 1, !dbg !14956
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14956
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14957

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14958

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14959

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14960, !tbaa !2507
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14961

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14962, !tbaa !2499
  %tobool172 = trunc i8 %101 to i1, !dbg !14962
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14965

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14966

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14967

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14968, !tbaa !2342
  %and176 = and i32 %102, 4, !dbg !14970
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14970
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14971

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14972, !tbaa !2516
  %add179 = add i64 %103, 2, !dbg !14973
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14974, !tbaa !2516
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14975
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14976

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14977, !tbaa !2355
  %106 = load i64, i64* %i, align 8, !dbg !14978, !tbaa !2516
  %add183 = add i64 %106, 1, !dbg !14979
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14977, !ctir !87
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14977, !tbaa !2507
  %conv185 = sext i8 %107 to i32, !dbg !14977
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14980
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14981

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14982, !tbaa !2355
  %109 = load i64, i64* %i, align 8, !dbg !14983, !tbaa !2516
  %add189 = add i64 %109, 2, !dbg !14984
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14982, !ctir !87
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14982, !tbaa !2507
  %conv191 = sext i8 %110 to i32, !dbg !14982
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14985

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14986, !tbaa !2499
  %tobool193 = trunc i8 %111 to i1, !dbg !14986
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14989

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14990

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14991, !tbaa !2355
  %113 = load i64, i64* %i, align 8, !dbg !14992, !tbaa !2516
  %add196 = add i64 %113, 2, !dbg !14993
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14991, !ctir !87
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14991, !tbaa !2507
  store i8 %114, i8* %c, align 1, !dbg !14994, !tbaa !2507
  %115 = load i64, i64* %i, align 8, !dbg !14995, !tbaa !2516
  %add198 = add i64 %115, 2, !dbg !14995
  store i64 %add198, i64* %i, align 8, !dbg !14995, !tbaa !2516
  br label %do.body199, !dbg !14996

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14997, !tbaa !2516
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14997, !tbaa !2516
  %cmp200 = icmp ult i64 %116, %117, !dbg !14997
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !15000

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14997, !tbaa !2355
  %119 = load i64, i64* %len, align 8, !dbg !14997, !tbaa !2516
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14997, !ctir !7
  store i8 63, i8* %arrayidx203, align 1, !dbg !14997, !tbaa !2507
  br label %if.end204, !dbg !14997

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !15000, !tbaa !2516
  %inc205 = add i64 %120, 1, !dbg !15000
  store i64 %inc205, i64* %len, align 8, !dbg !15000, !tbaa !2516
  br label %do.end206, !dbg !15000

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !15001

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !15002, !tbaa !2516
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !15002, !tbaa !2516
  %cmp208 = icmp ult i64 %121, %122, !dbg !15002
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !15005

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !15002, !tbaa !2355
  %124 = load i64, i64* %len, align 8, !dbg !15002, !tbaa !2516
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !15002, !ctir !7
  store i8 34, i8* %arrayidx211, align 1, !dbg !15002, !tbaa !2507
  br label %if.end212, !dbg !15002

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !15005, !tbaa !2516
  %inc213 = add i64 %125, 1, !dbg !15005
  store i64 %inc213, i64* %len, align 8, !dbg !15005, !tbaa !2516
  br label %do.end214, !dbg !15005

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !15006

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !15007, !tbaa !2516
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !15007, !tbaa !2516
  %cmp216 = icmp ult i64 %126, %127, !dbg !15007
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !15010

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !15007, !tbaa !2355
  %129 = load i64, i64* %len, align 8, !dbg !15007, !tbaa !2516
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !15007, !ctir !7
  store i8 34, i8* %arrayidx219, align 1, !dbg !15007, !tbaa !2507
  br label %if.end220, !dbg !15007

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !15010, !tbaa !2516
  %inc221 = add i64 %130, 1, !dbg !15010
  store i64 %inc221, i64* %len, align 8, !dbg !15010, !tbaa !2516
  br label %do.end222, !dbg !15010

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !15011

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !15012, !tbaa !2516
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !15012, !tbaa !2516
  %cmp224 = icmp ult i64 %131, %132, !dbg !15012
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !15015

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !15012, !tbaa !2355
  %134 = load i64, i64* %len, align 8, !dbg !15012, !tbaa !2516
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !15012, !ctir !7
  store i8 63, i8* %arrayidx227, align 1, !dbg !15012, !tbaa !2507
  br label %if.end228, !dbg !15012

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !15015, !tbaa !2516
  %inc229 = add i64 %135, 1, !dbg !15015
  store i64 %inc229, i64* %len, align 8, !dbg !15015, !tbaa !2516
  br label %do.end230, !dbg !15015

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !15016

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !15017

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !15018

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !15019

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !15020

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !15021

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !15022, !tbaa !2507
  br label %c_escape, !dbg !15023

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !15024, !tbaa !2507
  br label %c_escape, !dbg !15025

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !15026, !tbaa !2507
  br label %c_escape, !dbg !15027

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !15028, !tbaa !2507
  br label %c_and_shell_escape, !dbg !15029

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !15030, !tbaa !2507
  br label %c_and_shell_escape, !dbg !15031

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !15032, !tbaa !2507
  br label %c_and_shell_escape, !dbg !15033

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !15034, !tbaa !2507
  br label %c_escape, !dbg !15035

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !15036, !tbaa !2507
  store i8 %136, i8* %esc, align 1, !dbg !15037, !tbaa !2507
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !15038, !tbaa !2507
  %cmp244 = icmp eq i32 %137, 2, !dbg !15040
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !15041

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15042, !tbaa !2499
  %tobool247 = trunc i8 %138 to i1, !dbg !15042
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !15045

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !15046

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !15047

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !15048, !tbaa !2499
  %tobool251 = trunc i8 %139 to i1, !dbg !15048
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !15050

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15051, !tbaa !2499
  %tobool254 = trunc i8 %140 to i1, !dbg !15051
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !15052

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !15053, !tbaa !2516
  %tobool257 = icmp ne i64 %141, 0, !dbg !15053
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !15054

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !15055

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !15053

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !15056), !dbg !15057
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !15058, !tbaa !2507
  %cmp260 = icmp eq i32 %142, 2, !dbg !15060
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !15061

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15062, !tbaa !2499
  %tobool263 = trunc i8 %143 to i1, !dbg !15062
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !15063

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !15064

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !15062

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !15065), !dbg !15066
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !15067, !tbaa !2499
  %tobool267 = trunc i8 %144 to i1, !dbg !15067
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !15069

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !15070, !tbaa !2507
  store i8 %145, i8* %c, align 1, !dbg !15072, !tbaa !2507
  br label %store_escape, !dbg !15073

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !15074

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !15075, !tbaa !2516
  %cmp271 = icmp eq i64 %146, -1, !dbg !15077
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !15078

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !15079, !tbaa !2355
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !15079, !ctir !87
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !15079, !tbaa !2507
  %conv275 = sext i8 %148 to i32, !dbg !15079
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !15080
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !15075

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !15081, !tbaa !2516
  %cmp279 = icmp eq i64 %149, 1, !dbg !15082
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !15078

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !15083

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !15084

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !15085, !tbaa !2516
  %cmp284 = icmp ne i64 %150, 0, !dbg !15087
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !15088

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !15089

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !15090

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !15091, !tbaa !2499
  br label %sw.bb289, !dbg !15092

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !15093, !tbaa !2507
  %cmp290 = icmp eq i32 %151, 2, !dbg !15095
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !15096

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15097, !tbaa !2499
  %tobool293 = trunc i8 %152 to i1, !dbg !15097
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !15098

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !15099

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !15100

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !15101, !tbaa !2499
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !15102, !tbaa !2499
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !15103, !tbaa !2507
  %cmp298 = icmp eq i32 %153, 2, !dbg !15105
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !15106

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15107, !tbaa !2499
  %tobool301 = trunc i8 %154 to i1, !dbg !15107
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !15110

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !15111

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !15112, !tbaa !2516
  %tobool304 = icmp ne i64 %155, 0, !dbg !15112
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !15114

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !15115, !tbaa !2516
  %tobool306 = icmp ne i64 %156, 0, !dbg !15115
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !15116

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !15117, !tbaa !2516
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !15119, !tbaa !2516
  store i64 0, i64* %buffersize.addr, align 8, !dbg !15120, !tbaa !2516
  br label %if.end308, !dbg !15121

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !15122

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !15123, !tbaa !2516
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !15123, !tbaa !2516
  %cmp310 = icmp ult i64 %158, %159, !dbg !15123
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !15126

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !15123, !tbaa !2355
  %161 = load i64, i64* %len, align 8, !dbg !15123, !tbaa !2516
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !15123, !ctir !7
  store i8 39, i8* %arrayidx313, align 1, !dbg !15123, !tbaa !2507
  br label %if.end314, !dbg !15123

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !15126, !tbaa !2516
  %inc315 = add i64 %162, 1, !dbg !15126
  store i64 %inc315, i64* %len, align 8, !dbg !15126, !tbaa !2516
  br label %do.end316, !dbg !15126

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !15127

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !15128, !tbaa !2516
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !15128, !tbaa !2516
  %cmp318 = icmp ult i64 %163, %164, !dbg !15128
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !15131

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !15128, !tbaa !2355
  %166 = load i64, i64* %len, align 8, !dbg !15128, !tbaa !2516
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !15128, !ctir !7
  store i8 92, i8* %arrayidx321, align 1, !dbg !15128, !tbaa !2507
  br label %if.end322, !dbg !15128

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !15131, !tbaa !2516
  %inc323 = add i64 %167, 1, !dbg !15131
  store i64 %inc323, i64* %len, align 8, !dbg !15131, !tbaa !2516
  br label %do.end324, !dbg !15131

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !15132

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !15133, !tbaa !2516
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !15133, !tbaa !2516
  %cmp326 = icmp ult i64 %168, %169, !dbg !15133
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !15136

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !15133, !tbaa !2355
  %171 = load i64, i64* %len, align 8, !dbg !15133, !tbaa !2516
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !15133, !ctir !7
  store i8 39, i8* %arrayidx329, align 1, !dbg !15133, !tbaa !2507
  br label %if.end330, !dbg !15133

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !15136, !tbaa !2516
  %inc331 = add i64 %172, 1, !dbg !15136
  store i64 %inc331, i64* %len, align 8, !dbg !15136, !tbaa !2516
  br label %do.end332, !dbg !15136

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15137, !tbaa !2499
  br label %if.end333, !dbg !15138

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !15139

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !15140, !tbaa !2499
  br label %sw.epilog564, !dbg !15141

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !15142, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !15145, metadata !DIExpression()), !dbg !15146
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !15147, !tbaa !2499
  %tobool336 = trunc i8 %173 to i1, !dbg !15147
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !15149

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !15150, !tbaa !2516
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !15152
  %174 = load i16*, i16** %call338, align 8, !dbg !15152, !tbaa !2355, !ctir !321
  %175 = load i8, i8* %c, align 1, !dbg !15152, !tbaa !2507
  %conv339 = zext i8 %175 to i32, !dbg !15152
  %idxprom = sext i32 %conv339 to i64, !dbg !15152
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !15152, !ctir !321
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !15152, !tbaa !3489
  %conv341 = zext i16 %176 to i32, !dbg !15152
  %and342 = and i32 %conv341, 16384, !dbg !15152
  %cmp343 = icmp ne i32 %and342, 0, !dbg !15153
  %frombool345 = zext i1 %cmp343 to i8, !dbg !15154
  store i8 %frombool345, i8* %printable, align 1, !dbg !15154, !tbaa !2499
  br label %if.end410, !dbg !15155

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !15156, metadata !DIExpression()), !dbg !15158
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !15159
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !15159
  store i64 0, i64* %m, align 8, !dbg !15160, !tbaa !2516
  store i8 1, i8* %printable, align 1, !dbg !15161, !tbaa !2499
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !15162, !tbaa !2516
  %cmp347 = icmp eq i64 %178, -1, !dbg !15164
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !15165

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !15166, !tbaa !2355
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !15167
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !15168, !tbaa !2516
  br label %if.end351, !dbg !15169

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !15170

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !15171, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15174, metadata !DIExpression()), !dbg !15175
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !15176, !tbaa !2355
  %181 = load i64, i64* %i, align 8, !dbg !15177, !tbaa !2516
  %182 = load i64, i64* %m, align 8, !dbg !15178, !tbaa !2516
  %add353 = add i64 %181, %182, !dbg !15179
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !15176, !ctir !87
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !15180, !tbaa !2516
  %184 = load i64, i64* %i, align 8, !dbg !15181, !tbaa !2516
  %185 = load i64, i64* %m, align 8, !dbg !15182, !tbaa !2516
  %add355 = add i64 %184, %185, !dbg !15183
  %sub = sub i64 %183, %add355, !dbg !15184
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !15185
  store i64 %call356, i64* %bytes, align 8, !dbg !15175, !tbaa !2516
  %186 = load i64, i64* %bytes, align 8, !dbg !15186, !tbaa !2516
  %cmp357 = icmp eq i64 %186, 0, !dbg !15188
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !15189

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !15190

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !15191, !tbaa !2516
  %cmp361 = icmp eq i64 %187, -1, !dbg !15193
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !15194

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !15195, !tbaa !2499
  br label %do.end409, !dbg !15197

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !15198, !tbaa !2516
  %cmp365 = icmp eq i64 %188, -2, !dbg !15200
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !15201

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !15202, !tbaa !2499
  br label %while.cond, !dbg !15204

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !15205, !tbaa !2516
  %190 = load i64, i64* %m, align 8, !dbg !15206, !tbaa !2516
  %add368 = add i64 %189, %190, !dbg !15207
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !15208, !tbaa !2516
  %cmp369 = icmp ult i64 %add368, %191, !dbg !15209
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !15210

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !15211, !tbaa !2355
  %193 = load i64, i64* %i, align 8, !dbg !15212, !tbaa !2516
  %194 = load i64, i64* %m, align 8, !dbg !15213, !tbaa !2516
  %add371 = add i64 %193, %194, !dbg !15214
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !15211, !ctir !87
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !15211, !tbaa !2507
  %conv373 = sext i8 %195 to i32, !dbg !15211
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !15210
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !15215
  br i1 %196, label %while.body, label %while.end, !dbg !15204

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !15216, !tbaa !2516
  %inc375 = add i64 %197, 1, !dbg !15216
  store i64 %inc375, i64* %m, align 8, !dbg !15216, !tbaa !2516
  br label %while.cond, !dbg !15204, !llvm.loop !15217

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !15218

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15219, !tbaa !2499
  %tobool377 = trunc i8 %198 to i1, !dbg !15219
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !15222

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !15223, !tbaa !2507
  %cmp380 = icmp eq i32 %199, 2, !dbg !15224
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !15225

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !15226, metadata !DIExpression()), !dbg !15228
  store i64 1, i64* %j, align 8, !dbg !15229, !tbaa !2516
  br label %for.cond383, !dbg !15231

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !15232, !tbaa !2516
  %201 = load i64, i64* %bytes, align 8, !dbg !15234, !tbaa !2516
  %cmp384 = icmp ult i64 %200, %201, !dbg !15235
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !15236

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !15237, !tbaa !2355
  %203 = load i64, i64* %i, align 8, !dbg !15238, !tbaa !2516
  %204 = load i64, i64* %m, align 8, !dbg !15239, !tbaa !2516
  %add387 = add i64 %203, %204, !dbg !15240
  %205 = load i64, i64* %j, align 8, !dbg !15241, !tbaa !2516
  %add388 = add i64 %add387, %205, !dbg !15242
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !15237, !ctir !87
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !15237, !tbaa !2507
  %conv390 = sext i8 %206 to i32, !dbg !15237
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !15243

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !15244

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !15246

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !15247

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !15248, !tbaa !2516
  %inc395 = add i64 %207, 1, !dbg !15248
  store i64 %inc395, i64* %j, align 8, !dbg !15248, !tbaa !2516
  br label %for.cond383, !dbg !15249, !llvm.loop !15250

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !15252

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !15253, !tbaa !2342
  %call398 = call i32 @iswprint(i32 %208) #12, !dbg !15255
  %tobool399 = icmp ne i32 %call398, 0, !dbg !15255
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !15256

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !15257, !tbaa !2499
  br label %if.end401, !dbg !15258

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !15259, !tbaa !2516
  %210 = load i64, i64* %m, align 8, !dbg !15260, !tbaa !2516
  %add402 = add i64 %210, %209, !dbg !15260
  store i64 %add402, i64* %m, align 8, !dbg !15260, !tbaa !2516
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !15261

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !15262
  %tobool407 = icmp ne i32 %call406, 0, !dbg !15263
  %lnot408 = xor i1 %tobool407, true, !dbg !15263
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !15261, !llvm.loop !15264

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !15266, !tbaa !2499
  %tobool411 = trunc i8 %211 to i1, !dbg !15266
  %frombool412 = zext i1 %tobool411 to i8, !dbg !15267
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !15267, !tbaa !2499
  %212 = load i64, i64* %m, align 8, !dbg !15268, !tbaa !2516
  %cmp413 = icmp ult i64 1, %212, !dbg !15270
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !15271

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !15272, !tbaa !2499
  %tobool415 = trunc i8 %213 to i1, !dbg !15272
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !15273

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !15274, !tbaa !2499
  %tobool418 = trunc i8 %214 to i1, !dbg !15274
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !15275

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !15276, metadata !DIExpression()), !dbg !15278
  %215 = load i64, i64* %i, align 8, !dbg !15279, !tbaa !2516
  %216 = load i64, i64* %m, align 8, !dbg !15280, !tbaa !2516
  %add420 = add i64 %215, %216, !dbg !15281
  store i64 %add420, i64* %ilim, align 8, !dbg !15278, !tbaa !2516
  br label %for.cond421, !dbg !15282

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !15283, !tbaa !2499
  %tobool422 = trunc i8 %217 to i1, !dbg !15283
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !15288

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !15289, !tbaa !2499
  %tobool425 = trunc i8 %218 to i1, !dbg !15289
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !15290

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !15291

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15293, !tbaa !2499
  %tobool428 = trunc i8 %219 to i1, !dbg !15293
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !15296

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !15293

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !15296, !tbaa !2499
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !15297, !tbaa !2507
  %cmp431 = icmp eq i32 %220, 2, !dbg !15297
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !15297

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15297, !tbaa !2499
  %tobool434 = trunc i8 %221 to i1, !dbg !15297
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !15296

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !15299

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !15301, !tbaa !2516
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !15301, !tbaa !2516
  %cmp437 = icmp ult i64 %222, %223, !dbg !15301
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !15304

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !15301, !tbaa !2355
  %225 = load i64, i64* %len, align 8, !dbg !15301, !tbaa !2516
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !15301, !ctir !7
  store i8 39, i8* %arrayidx440, align 1, !dbg !15301, !tbaa !2507
  br label %if.end441, !dbg !15301

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !15304, !tbaa !2516
  %inc442 = add i64 %226, 1, !dbg !15304
  store i64 %inc442, i64* %len, align 8, !dbg !15304, !tbaa !2516
  br label %do.end444, !dbg !15304

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !15299

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !15305, !tbaa !2516
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !15305, !tbaa !2516
  %cmp446 = icmp ult i64 %227, %228, !dbg !15305
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !15308

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !15305, !tbaa !2355
  %230 = load i64, i64* %len, align 8, !dbg !15305, !tbaa !2516
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !15305, !ctir !7
  store i8 36, i8* %arrayidx449, align 1, !dbg !15305, !tbaa !2507
  br label %if.end450, !dbg !15305

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !15308, !tbaa !2516
  %inc451 = add i64 %231, 1, !dbg !15308
  store i64 %inc451, i64* %len, align 8, !dbg !15308, !tbaa !2516
  br label %do.end453, !dbg !15308

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !15299

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !15309, !tbaa !2516
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !15309, !tbaa !2516
  %cmp455 = icmp ult i64 %232, %233, !dbg !15309
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !15312

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !15309, !tbaa !2355
  %235 = load i64, i64* %len, align 8, !dbg !15309, !tbaa !2516
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !15309, !ctir !7
  store i8 39, i8* %arrayidx458, align 1, !dbg !15309, !tbaa !2507
  br label %if.end459, !dbg !15309

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !15312, !tbaa !2516
  %inc460 = add i64 %236, 1, !dbg !15312
  store i64 %inc460, i64* %len, align 8, !dbg !15312, !tbaa !2516
  br label %do.end462, !dbg !15312

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !15299, !tbaa !2499
  br label %if.end463, !dbg !15299

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !15296

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !15313, !tbaa !2516
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !15313, !tbaa !2516
  %cmp465 = icmp ult i64 %237, %238, !dbg !15313
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !15316

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !15313, !tbaa !2355
  %240 = load i64, i64* %len, align 8, !dbg !15313, !tbaa !2516
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !15313, !ctir !7
  store i8 92, i8* %arrayidx468, align 1, !dbg !15313, !tbaa !2507
  br label %if.end469, !dbg !15313

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !15316, !tbaa !2516
  %inc470 = add i64 %241, 1, !dbg !15316
  store i64 %inc470, i64* %len, align 8, !dbg !15316, !tbaa !2516
  br label %do.end472, !dbg !15316

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !15296

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !15317

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !15318, !tbaa !2516
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !15318, !tbaa !2516
  %cmp476 = icmp ult i64 %242, %243, !dbg !15318
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !15321

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !15318, !tbaa !2507
  %conv479 = zext i8 %244 to i32, !dbg !15318
  %shr = ashr i32 %conv479, 6, !dbg !15318
  %add480 = add nsw i32 48, %shr, !dbg !15318
  %conv481 = trunc i32 %add480 to i8, !dbg !15318
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !15318, !tbaa !2355
  %246 = load i64, i64* %len, align 8, !dbg !15318, !tbaa !2516
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !15318, !ctir !7
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !15318, !tbaa !2507
  br label %if.end483, !dbg !15318

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !15321, !tbaa !2516
  %inc484 = add i64 %247, 1, !dbg !15321
  store i64 %inc484, i64* %len, align 8, !dbg !15321, !tbaa !2516
  br label %do.end486, !dbg !15321

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !15322

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !15323, !tbaa !2516
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !15323, !tbaa !2516
  %cmp488 = icmp ult i64 %248, %249, !dbg !15323
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !15326

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !15323, !tbaa !2507
  %conv491 = zext i8 %250 to i32, !dbg !15323
  %shr492 = ashr i32 %conv491, 3, !dbg !15323
  %and493 = and i32 %shr492, 7, !dbg !15323
  %add494 = add nsw i32 48, %and493, !dbg !15323
  %conv495 = trunc i32 %add494 to i8, !dbg !15323
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !15323, !tbaa !2355
  %252 = load i64, i64* %len, align 8, !dbg !15323, !tbaa !2516
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !15323, !ctir !7
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !15323, !tbaa !2507
  br label %if.end497, !dbg !15323

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !15326, !tbaa !2516
  %inc498 = add i64 %253, 1, !dbg !15326
  store i64 %inc498, i64* %len, align 8, !dbg !15326, !tbaa !2516
  br label %do.end500, !dbg !15326

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !15327, !tbaa !2507
  %conv501 = zext i8 %254 to i32, !dbg !15327
  %and502 = and i32 %conv501, 7, !dbg !15328
  %add503 = add nsw i32 48, %and502, !dbg !15329
  %conv504 = trunc i32 %add503 to i8, !dbg !15330
  store i8 %conv504, i8* %c, align 1, !dbg !15331, !tbaa !2507
  br label %if.end518, !dbg !15332

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !15333, !tbaa !2499
  %tobool506 = trunc i8 %255 to i1, !dbg !15333
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !15335

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !15336

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !15338, !tbaa !2516
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !15338, !tbaa !2516
  %cmp509 = icmp ult i64 %256, %257, !dbg !15338
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !15341

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !15338, !tbaa !2355
  %259 = load i64, i64* %len, align 8, !dbg !15338, !tbaa !2516
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !15338, !ctir !7
  store i8 92, i8* %arrayidx512, align 1, !dbg !15338, !tbaa !2507
  br label %if.end513, !dbg !15338

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !15341, !tbaa !2516
  %inc514 = add i64 %260, 1, !dbg !15341
  store i64 %inc514, i64* %len, align 8, !dbg !15341, !tbaa !2516
  br label %do.end516, !dbg !15341

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !15342, !tbaa !2499
  br label %if.end517, !dbg !15343

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !15344, !tbaa !2516
  %262 = load i64, i64* %i, align 8, !dbg !15346, !tbaa !2516
  %add519 = add i64 %262, 1, !dbg !15347
  %cmp520 = icmp ule i64 %261, %add519, !dbg !15348
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !15349

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !15350

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !15351

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15352, !tbaa !2499
  %tobool525 = trunc i8 %263 to i1, !dbg !15352
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !15352

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !15352, !tbaa !2499
  %tobool528 = trunc i8 %264 to i1, !dbg !15352
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !15355

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !15356

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !15358, !tbaa !2516
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !15358, !tbaa !2516
  %cmp531 = icmp ult i64 %265, %266, !dbg !15358
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !15361

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !15358, !tbaa !2355
  %268 = load i64, i64* %len, align 8, !dbg !15358, !tbaa !2516
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !15358, !ctir !7
  store i8 39, i8* %arrayidx534, align 1, !dbg !15358, !tbaa !2507
  br label %if.end535, !dbg !15358

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !15361, !tbaa !2516
  %inc536 = add i64 %269, 1, !dbg !15361
  store i64 %inc536, i64* %len, align 8, !dbg !15361, !tbaa !2516
  br label %do.end538, !dbg !15361

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !15356

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !15362, !tbaa !2516
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !15362, !tbaa !2516
  %cmp540 = icmp ult i64 %270, %271, !dbg !15362
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !15365

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !15362, !tbaa !2355
  %273 = load i64, i64* %len, align 8, !dbg !15362, !tbaa !2516
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !15362, !ctir !7
  store i8 39, i8* %arrayidx543, align 1, !dbg !15362, !tbaa !2507
  br label %if.end544, !dbg !15362

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !15365, !tbaa !2516
  %inc545 = add i64 %274, 1, !dbg !15365
  store i64 %inc545, i64* %len, align 8, !dbg !15365, !tbaa !2516
  br label %do.end547, !dbg !15365

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15356, !tbaa !2499
  br label %if.end548, !dbg !15356

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !15355

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !15366

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !15367, !tbaa !2516
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !15367, !tbaa !2516
  %cmp552 = icmp ult i64 %275, %276, !dbg !15367
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !15370

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !15367, !tbaa !2507
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !15367, !tbaa !2355
  %279 = load i64, i64* %len, align 8, !dbg !15367, !tbaa !2516
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !15367, !ctir !7
  store i8 %277, i8* %arrayidx555, align 1, !dbg !15367, !tbaa !2507
  br label %if.end556, !dbg !15367

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !15370, !tbaa !2516
  %inc557 = add i64 %280, 1, !dbg !15370
  store i64 %inc557, i64* %len, align 8, !dbg !15370, !tbaa !2516
  br label %do.end559, !dbg !15370

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !15371, !tbaa !2355
  %282 = load i64, i64* %i, align 8, !dbg !15372, !tbaa !2516
  %inc560 = add i64 %282, 1, !dbg !15372
  store i64 %inc560, i64* %i, align 8, !dbg !15372, !tbaa !2516
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !15371, !ctir !87
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !15371, !tbaa !2507
  store i8 %283, i8* %c, align 1, !dbg !15373, !tbaa !2507
  br label %for.cond421, !dbg !15374, !llvm.loop !15375

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !15378

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !15379

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !15380, !tbaa !2499
  %tobool565 = trunc i8 %284 to i1, !dbg !15380
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !15382

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !15383, !tbaa !2507
  %cmp568 = icmp ne i32 %285, 2, !dbg !15384
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !15385

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15386, !tbaa !2499
  %tobool571 = trunc i8 %286 to i1, !dbg !15386
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !15387

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15388, !tbaa !2355
  %tobool574 = icmp ne i32* %287, null, !dbg !15388
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !15389

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15390, !tbaa !2355
  %289 = load i8, i8* %c, align 1, !dbg !15391, !tbaa !2507
  %conv576 = zext i8 %289 to i64, !dbg !15391
  %div = udiv i64 %conv576, 32, !dbg !15392
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !15390, !ctir !1300
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !15390, !tbaa !2342
  %291 = load i8, i8* %c, align 1, !dbg !15393, !tbaa !2507
  %conv578 = zext i8 %291 to i64, !dbg !15393
  %rem = urem i64 %conv578, 32, !dbg !15394
  %sh_prom = trunc i64 %rem to i32, !dbg !15395
  %shr579 = lshr i32 %290, %sh_prom, !dbg !15395
  %and580 = and i32 %shr579, 1, !dbg !15396
  %tobool581 = icmp ne i32 %and580, 0, !dbg !15396
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !15397

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !15398, !tbaa !2499
  %tobool583 = trunc i8 %292 to i1, !dbg !15398
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !15399

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !15400

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !15398

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !15401), !dbg !15402
  br label %do.body586, !dbg !15403

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15404, !tbaa !2499
  %tobool587 = trunc i8 %293 to i1, !dbg !15404
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !15407

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !15404

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !15407, !tbaa !2499
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !15408, !tbaa !2507
  %cmp590 = icmp eq i32 %294, 2, !dbg !15408
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !15408

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15408, !tbaa !2499
  %tobool593 = trunc i8 %295 to i1, !dbg !15408
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !15407

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !15410

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !15412, !tbaa !2516
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !15412, !tbaa !2516
  %cmp596 = icmp ult i64 %296, %297, !dbg !15412
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !15415

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !15412, !tbaa !2355
  %299 = load i64, i64* %len, align 8, !dbg !15412, !tbaa !2516
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !15412, !ctir !7
  store i8 39, i8* %arrayidx599, align 1, !dbg !15412, !tbaa !2507
  br label %if.end600, !dbg !15412

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !15415, !tbaa !2516
  %inc601 = add i64 %300, 1, !dbg !15415
  store i64 %inc601, i64* %len, align 8, !dbg !15415, !tbaa !2516
  br label %do.end603, !dbg !15415

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !15410

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !15416, !tbaa !2516
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !15416, !tbaa !2516
  %cmp605 = icmp ult i64 %301, %302, !dbg !15416
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !15419

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !15416, !tbaa !2355
  %304 = load i64, i64* %len, align 8, !dbg !15416, !tbaa !2516
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !15416, !ctir !7
  store i8 36, i8* %arrayidx608, align 1, !dbg !15416, !tbaa !2507
  br label %if.end609, !dbg !15416

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !15419, !tbaa !2516
  %inc610 = add i64 %305, 1, !dbg !15419
  store i64 %inc610, i64* %len, align 8, !dbg !15419, !tbaa !2516
  br label %do.end612, !dbg !15419

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !15410

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !15420, !tbaa !2516
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !15420, !tbaa !2516
  %cmp614 = icmp ult i64 %306, %307, !dbg !15420
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !15423

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !15420, !tbaa !2355
  %309 = load i64, i64* %len, align 8, !dbg !15420, !tbaa !2516
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !15420, !ctir !7
  store i8 39, i8* %arrayidx617, align 1, !dbg !15420, !tbaa !2507
  br label %if.end618, !dbg !15420

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !15423, !tbaa !2516
  %inc619 = add i64 %310, 1, !dbg !15423
  store i64 %inc619, i64* %len, align 8, !dbg !15423, !tbaa !2516
  br label %do.end621, !dbg !15423

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !15410, !tbaa !2499
  br label %if.end622, !dbg !15410

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !15407

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !15424, !tbaa !2516
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !15424, !tbaa !2516
  %cmp624 = icmp ult i64 %311, %312, !dbg !15424
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !15427

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !15424, !tbaa !2355
  %314 = load i64, i64* %len, align 8, !dbg !15424, !tbaa !2516
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !15424, !ctir !7
  store i8 92, i8* %arrayidx627, align 1, !dbg !15424, !tbaa !2507
  br label %if.end628, !dbg !15424

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !15427, !tbaa !2516
  %inc629 = add i64 %315, 1, !dbg !15427
  store i64 %inc629, i64* %len, align 8, !dbg !15427, !tbaa !2516
  br label %do.end631, !dbg !15427

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !15407

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !15407

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !15428), !dbg !15429
  br label %do.body634, !dbg !15430

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15431, !tbaa !2499
  %tobool635 = trunc i8 %316 to i1, !dbg !15431
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !15431

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !15431, !tbaa !2499
  %tobool638 = trunc i8 %317 to i1, !dbg !15431
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !15434

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !15435

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !15437, !tbaa !2516
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !15437, !tbaa !2516
  %cmp641 = icmp ult i64 %318, %319, !dbg !15437
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !15440

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !15437, !tbaa !2355
  %321 = load i64, i64* %len, align 8, !dbg !15437, !tbaa !2516
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !15437, !ctir !7
  store i8 39, i8* %arrayidx644, align 1, !dbg !15437, !tbaa !2507
  br label %if.end645, !dbg !15437

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !15440, !tbaa !2516
  %inc646 = add i64 %322, 1, !dbg !15440
  store i64 %inc646, i64* %len, align 8, !dbg !15440, !tbaa !2516
  br label %do.end648, !dbg !15440

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !15435

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !15441, !tbaa !2516
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !15441, !tbaa !2516
  %cmp650 = icmp ult i64 %323, %324, !dbg !15441
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !15444

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !15441, !tbaa !2355
  %326 = load i64, i64* %len, align 8, !dbg !15441, !tbaa !2516
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !15441, !ctir !7
  store i8 39, i8* %arrayidx653, align 1, !dbg !15441, !tbaa !2507
  br label %if.end654, !dbg !15441

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !15444, !tbaa !2516
  %inc655 = add i64 %327, 1, !dbg !15444
  store i64 %inc655, i64* %len, align 8, !dbg !15444, !tbaa !2516
  br label %do.end657, !dbg !15444

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15435, !tbaa !2499
  br label %if.end658, !dbg !15435

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !15434

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !15445

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !15446, !tbaa !2516
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !15446, !tbaa !2516
  %cmp662 = icmp ult i64 %328, %329, !dbg !15446
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !15449

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !15446, !tbaa !2507
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !15446, !tbaa !2355
  %332 = load i64, i64* %len, align 8, !dbg !15446, !tbaa !2516
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !15446, !ctir !7
  store i8 %330, i8* %arrayidx665, align 1, !dbg !15446, !tbaa !2507
  br label %if.end666, !dbg !15446

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !15449, !tbaa !2516
  %inc667 = add i64 %333, 1, !dbg !15449
  store i64 %inc667, i64* %len, align 8, !dbg !15449, !tbaa !2516
  br label %do.end669, !dbg !15449

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !15450, !tbaa !2499
  %tobool670 = trunc i8 %334 to i1, !dbg !15450
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !15452

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !15453, !tbaa !2499
  br label %if.end672, !dbg !15454

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !15455

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !15456, !tbaa !2516
  %inc674 = add i64 %335, 1, !dbg !15456
  store i64 %inc674, i64* %i, align 8, !dbg !15456, !tbaa !2516
  br label %for.cond44, !dbg !15457, !llvm.loop !15458

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !15460, !tbaa !2516
  %cmp676 = icmp eq i64 %336, 0, !dbg !15462
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !15463

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !15464, !tbaa !2507
  %cmp679 = icmp eq i32 %337, 2, !dbg !15465
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !15466

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15467, !tbaa !2499
  %tobool682 = trunc i8 %338 to i1, !dbg !15467
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !15468

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !15469

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !15470, !tbaa !2507
  %cmp686 = icmp eq i32 %339, 2, !dbg !15472
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !15473

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15474, !tbaa !2499
  %tobool689 = trunc i8 %340 to i1, !dbg !15474
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !15475

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !15476, !tbaa !2499
  %tobool691 = trunc i8 %341 to i1, !dbg !15476
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !15477

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !15478, !tbaa !2499
  %tobool694 = trunc i8 %342 to i1, !dbg !15478
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !15481

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !15482, !tbaa !2355
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !15483, !tbaa !2516
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !15484, !tbaa !2355
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !15485, !tbaa !2516
  %347 = load i32, i32* %flags.addr, align 4, !dbg !15486, !tbaa !2342
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15487, !tbaa !2355
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !15488, !tbaa !2355
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !15489, !tbaa !2355
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !15490
  store i64 %call696, i64* %retval, align 8, !dbg !15491
  br label %return, !dbg !15491

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !15492, !tbaa !2516
  %tobool698 = icmp ne i64 %351, 0, !dbg !15492
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !15494

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !15495, !tbaa !2516
  %tobool700 = icmp ne i64 %352, 0, !dbg !15495
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !15496

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !15497, !tbaa !2516
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !15499, !tbaa !2516
  store i64 0, i64* %len, align 8, !dbg !15500, !tbaa !2516
  br label %process_input, !dbg !15501

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !15502

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !15503, !tbaa !2355
  %tobool705 = icmp ne i8* %354, null, !dbg !15503
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !15505

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15506, !tbaa !2499
  %tobool707 = trunc i8 %355 to i1, !dbg !15506
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !15507

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !15508

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !15509, !tbaa !2355
  %357 = load i8, i8* %356, align 1, !dbg !15512, !tbaa !2507, !ctir !88
  %tobool710 = icmp ne i8 %357, 0, !dbg !15513
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !15513

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !15514

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !15515, !tbaa !2516
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !15515, !tbaa !2516
  %cmp713 = icmp ult i64 %358, %359, !dbg !15515
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !15518

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !15515, !tbaa !2355
  %361 = load i8, i8* %360, align 1, !dbg !15515, !tbaa !2507, !ctir !88
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !15515, !tbaa !2355
  %363 = load i64, i64* %len, align 8, !dbg !15515, !tbaa !2516
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !15515, !ctir !7
  store i8 %361, i8* %arrayidx716, align 1, !dbg !15515, !tbaa !2507
  br label %if.end717, !dbg !15515

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !15518, !tbaa !2516
  %inc718 = add i64 %364, 1, !dbg !15518
  store i64 %inc718, i64* %len, align 8, !dbg !15518, !tbaa !2516
  br label %do.end720, !dbg !15518

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !15518

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !15519, !tbaa !2355
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !15519
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !15519, !tbaa !2355
  br label %for.cond709, !dbg !15520, !llvm.loop !15521

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !15522

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !15523, !tbaa !2516
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !15525, !tbaa !2516
  %cmp725 = icmp ult i64 %366, %367, !dbg !15526
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !15527

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !15528, !tbaa !2355
  %369 = load i64, i64* %len, align 8, !dbg !15529, !tbaa !2516
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !15528, !ctir !7
  store i8 0, i8* %arrayidx728, align 1, !dbg !15530, !tbaa !2507
  br label %if.end729, !dbg !15528

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !15531, !tbaa !2516
  store i64 %370, i64* %retval, align 8, !dbg !15532
  br label %return, !dbg !15532

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !15533), !dbg !15534
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !15535, !tbaa !2507
  %cmp730 = icmp eq i32 %371, 2, !dbg !15537
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !15538

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !15539, !tbaa !2499
  %tobool733 = trunc i8 %372 to i1, !dbg !15539
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !15540

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !15541, !tbaa !2507
  br label %if.end736, !dbg !15542

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !15543, !tbaa !2355
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !15544, !tbaa !2516
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !15545, !tbaa !2355
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !15546, !tbaa !2516
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !15547, !tbaa !2507
  %378 = load i32, i32* %flags.addr, align 4, !dbg !15548, !tbaa !2342
  %and737 = and i32 %378, -3, !dbg !15549
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !15550, !tbaa !2355
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !15551, !tbaa !2355
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !15552
  store i64 %call738, i64* %retval, align 8, !dbg !15553
  br label %return, !dbg !15553

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !15554
  ret i64 %381, !dbg !15554
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !15555 !ctir !1315 {
entry:
  %retval = alloca i8*, align 8, !ctir !87
  %msgid.addr = alloca i8*, align 8, !ctir !87
  %s.addr = alloca i32, align 4, !ctir !1206
  %translation = alloca i8*, align 8, !ctir !87
  %locale_code = alloca i8*, align 8, !ctir !87
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !15556, metadata !DIExpression()), !dbg !15557
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15558, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !15560, metadata !DIExpression()), !dbg !15561
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !15562, !tbaa !2355
  %call = call i8* @gettext(i8* %0) #12, !dbg !15562
  store i8* %call, i8** %translation, align 8, !dbg !15561, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !15563, metadata !DIExpression()), !dbg !15564
  %1 = load i8*, i8** %translation, align 8, !dbg !15565, !tbaa !2355
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !15567, !tbaa !2355
  %cmp = icmp ne i8* %1, %2, !dbg !15568
  br i1 %cmp, label %if.then, label %if.end, !dbg !15569

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !15570, !tbaa !2355
  store i8* %3, i8** %retval, align 8, !dbg !15571
  br label %return, !dbg !15571

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !15572
  store i8* %call1, i8** %locale_code, align 8, !dbg !15573, !tbaa !2355
  %4 = load i8*, i8** %locale_code, align 8, !dbg !15574, !tbaa !2355
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.262, i64 0, i64 0)) #14, !dbg !15574
  %cmp3 = icmp eq i32 %call2, 0, !dbg !15574
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !15576

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !15577, !tbaa !2355
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !15577, !ctir !87
  %6 = load i8, i8* %arrayidx, align 1, !dbg !15577, !tbaa !2507
  %conv = sext i8 %6 to i32, !dbg !15577
  %cmp5 = icmp eq i32 %conv, 96, !dbg !15578
  %7 = zext i1 %cmp5 to i64, !dbg !15577
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.263, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.264, i64 0, i64 0), !dbg !15577
  store i8* %cond, i8** %retval, align 8, !dbg !15579
  br label %return, !dbg !15579

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !15580, !tbaa !2355
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.265, i64 0, i64 0)) #14, !dbg !15580
  %cmp9 = icmp eq i32 %call8, 0, !dbg !15580
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15582

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !15583, !tbaa !2355
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !15583, !ctir !87
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !15583, !tbaa !2507
  %conv13 = sext i8 %10 to i32, !dbg !15583
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !15584
  %11 = zext i1 %cmp14 to i64, !dbg !15583
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.266, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.267, i64 0, i64 0), !dbg !15583
  store i8* %cond16, i8** %retval, align 8, !dbg !15585
  br label %return, !dbg !15585

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !15586, !tbaa !2507
  %cmp18 = icmp eq i32 %12, 9, !dbg !15587
  %13 = zext i1 %cmp18 to i64, !dbg !15586
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.259, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.261, i64 0, i64 0), !dbg !15586
  store i8* %cond20, i8** %retval, align 8, !dbg !15588
  br label %return, !dbg !15588

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !15589
  ret i8* %14, !dbg !15589
}

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !15590 !ctir !1253 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1240
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15591, metadata !DIExpression()), !dbg !15592
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15593, metadata !DIExpression()), !dbg !15594
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15595, metadata !DIExpression()), !dbg !15596
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15597, !tbaa !2355
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15598, !tbaa !2516
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15599, !tbaa !2355
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !15600
  ret i8* %call, !dbg !15601
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !15602 !ctir !1255 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %size.addr = alloca i64*, align 8, !ctir !354
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1240
  %p = alloca %struct.quoting_options*, align 8, !ctir !1240
  %e = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %bufsize = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15603, metadata !DIExpression()), !dbg !15604
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15605, metadata !DIExpression()), !dbg !15606
  store i64* %size, i64** %size.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !15607, metadata !DIExpression()), !dbg !15608
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15609, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !15611, metadata !DIExpression()), !dbg !15612
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15613, !tbaa !2355
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !15613
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15613

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15614, !tbaa !2355
  br label %cond.end, !dbg !15613

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15613

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !15613
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !15612, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15615, metadata !DIExpression()), !dbg !15616
  %call = call i32* @__errno_location() #16, !dbg !15617
  %2 = load i32, i32* %call, align 4, !dbg !15617, !tbaa !2342, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !15616, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15618, metadata !DIExpression()), !dbg !15619
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15620, !tbaa !2355
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !15621, !ctir !1241
  %4 = load i32, i32* %flags1, align 4, !dbg !15621, !tbaa !14609, !ctir !5
  %5 = load i64*, i64** %size.addr, align 8, !dbg !15622, !tbaa !2355
  %tobool2 = icmp ne i64* %5, null, !dbg !15622
  %6 = zext i1 %tobool2 to i64, !dbg !15622
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !15622
  %or = or i32 %4, %cond3, !dbg !15623
  store i32 %or, i32* %flags, align 4, !dbg !15619, !tbaa !2342
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !15624, metadata !DIExpression()), !dbg !15625
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !15626, !tbaa !2355
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !15627, !tbaa !2516
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15628, !tbaa !2355
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !15629, !ctir !1241
  %10 = load i32, i32* %style, align 8, !dbg !15629, !tbaa !14541, !ctir !1206
  %11 = load i32, i32* %flags, align 4, !dbg !15630, !tbaa !2342
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15631, !tbaa !2355
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !15632, !ctir !1241
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15631
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15633, !tbaa !2355
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !15634, !ctir !1241
  %14 = load i8*, i8** %left_quote, align 8, !dbg !15634, !tbaa !14642, !ctir !87
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15635, !tbaa !2355
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !15636, !ctir !1241
  %16 = load i8*, i8** %right_quote, align 8, !dbg !15636, !tbaa !14647, !ctir !87
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !15637
  %add = add i64 %call4, 1, !dbg !15638
  store i64 %add, i64* %bufsize, align 8, !dbg !15625, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15639, metadata !DIExpression()), !dbg !15640
  %17 = load i64, i64* %bufsize, align 8, !dbg !15641, !tbaa !2516
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !15642
  store i8* %call5, i8** %buf, align 8, !dbg !15640, !tbaa !2355
  %18 = load i8*, i8** %buf, align 8, !dbg !15643, !tbaa !2355
  %19 = load i64, i64* %bufsize, align 8, !dbg !15644, !tbaa !2516
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !15645, !tbaa !2355
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !15646, !tbaa !2516
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15647, !tbaa !2355
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !15648, !ctir !1241
  %23 = load i32, i32* %style6, align 8, !dbg !15648, !tbaa !14541, !ctir !1206
  %24 = load i32, i32* %flags, align 4, !dbg !15649, !tbaa !2342
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15650, !tbaa !2355
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !15651, !ctir !1241
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !15650
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15652, !tbaa !2355
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !15653, !ctir !1241
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !15653, !tbaa !14642, !ctir !87
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15654, !tbaa !2355
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !15655, !ctir !1241
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !15655, !tbaa !14647, !ctir !87
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !15656
  %30 = load i32, i32* %e, align 4, !dbg !15657, !tbaa !2342
  %call12 = call i32* @__errno_location() #16, !dbg !15658
  store i32 %30, i32* %call12, align 4, !dbg !15659, !tbaa !2342, !ctir !5
  %31 = load i64*, i64** %size.addr, align 8, !dbg !15660, !tbaa !2355
  %tobool13 = icmp ne i64* %31, null, !dbg !15660
  br i1 %tobool13, label %if.then, label %if.end, !dbg !15662

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !15663, !tbaa !2516
  %sub = sub i64 %32, 1, !dbg !15664
  %33 = load i64*, i64** %size.addr, align 8, !dbg !15665, !tbaa !2355
  store i64 %sub, i64* %33, align 8, !dbg !15666, !tbaa !2516, !ctir !52
  br label %if.end, !dbg !15667

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !15668, !tbaa !2355
  ret i8* %34, !dbg !15669
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !15670 !ctir !167 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !1257
  %i = alloca i32, align 4, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15671, metadata !DIExpression()), !dbg !15672
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15673, !tbaa !2355
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !15672, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15674, metadata !DIExpression()), !dbg !15675
  store i32 1, i32* %i, align 4, !dbg !15676, !tbaa !2342
  br label %for.cond, !dbg !15678

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !15679, !tbaa !2342
  %2 = load i32, i32* @nslots, align 4, !dbg !15681, !tbaa !2342
  %cmp = icmp slt i32 %1, %2, !dbg !15682
  br i1 %cmp, label %for.body, label %for.end, !dbg !15683

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15684, !tbaa !2355
  %4 = load i32, i32* %i, align 4, !dbg !15685, !tbaa !2342
  %idxprom = sext i32 %4 to i64, !dbg !15684
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !15684, !ctir !1257
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !15686, !ctir !1258
  %5 = load i8*, i8** %val, align 8, !dbg !15686, !tbaa !15687, !ctir !7
  call void @free(i8* %5) #12, !dbg !15689
  br label %for.inc, !dbg !15689

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !15690, !tbaa !2342
  %inc = add nsw i32 %6, 1, !dbg !15690
  store i32 %inc, i32* %i, align 4, !dbg !15690, !tbaa !2342
  br label %for.cond, !dbg !15691, !llvm.loop !15692

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15694, !tbaa !2355
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !15694, !ctir !1257
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !15696, !ctir !1258
  %8 = load i8*, i8** %val2, align 8, !dbg !15696, !tbaa !15687, !ctir !7
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15697
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15698

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15699, !tbaa !2355
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !15699, !ctir !1257
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !15701, !ctir !1258
  %10 = load i8*, i8** %val5, align 8, !dbg !15701, !tbaa !15687, !ctir !7
  call void @free(i8* %10) #12, !dbg !15702
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !15703, !tbaa !15704, !ctir !52
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !15705, !tbaa !15687, !ctir !7
  br label %if.end, !dbg !15706

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15707, !tbaa !2355
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !15709
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !15710

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15711, !tbaa !2355
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !15711
  call void @free(i8* %13) #12, !dbg !15713
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !15714, !tbaa !2355
  br label %if.end8, !dbg !15715

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !15716, !tbaa !2342
  ret void, !dbg !15717
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !15718 !ctir !1262 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15719, metadata !DIExpression()), !dbg !15720
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15721, metadata !DIExpression()), !dbg !15722
  %0 = load i32, i32* %n.addr, align 4, !dbg !15723, !tbaa !2342
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15724, !tbaa !2355
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !15725
  ret i8* %call, !dbg !15726
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !15727 !ctir !1317 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !1240
  %e = alloca i32, align 4, !ctir !5
  %sv = alloca %struct.slotvec*, align 8, !ctir !1257
  %preallocated = alloca i8, align 1, !ctir !102
  %nmax = alloca i32, align 4, !ctir !5
  %size = alloca i64, align 8, !ctir !52
  %val = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %qsize = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15728, metadata !DIExpression()), !dbg !15729
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15730, metadata !DIExpression()), !dbg !15731
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15732, metadata !DIExpression()), !dbg !15733
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !15734, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15736, metadata !DIExpression()), !dbg !15737
  %call = call i32* @__errno_location() #16, !dbg !15738
  %0 = load i32, i32* %call, align 4, !dbg !15738, !tbaa !2342, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !15737, !tbaa !2342
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15739, metadata !DIExpression()), !dbg !15740
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15741, !tbaa !2355
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !15740, !tbaa !2355
  %2 = load i32, i32* %n.addr, align 4, !dbg !15742, !tbaa !2342
  %cmp = icmp slt i32 %2, 0, !dbg !15744
  br i1 %cmp, label %if.then, label %if.end, !dbg !15745

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15746
  unreachable, !dbg !15746

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !15747, !tbaa !2342
  %4 = load i32, i32* %n.addr, align 4, !dbg !15749, !tbaa !2342
  %cmp1 = icmp sle i32 %3, %4, !dbg !15750
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !15751

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !15752, metadata !DIExpression()), !dbg !15754
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15755, !tbaa !2355
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !15756
  %frombool = zext i1 %cmp3 to i8, !dbg !15754
  store i8 %frombool, i8* %preallocated, align 1, !dbg !15754, !tbaa !2499
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !15757, metadata !DIExpression()), !dbg !15758
  store i32 2147483646, i32* %nmax, align 4, !dbg !15758, !tbaa !2342
  %6 = load i32, i32* %nmax, align 4, !dbg !15759, !tbaa !2342
  %7 = load i32, i32* %n.addr, align 4, !dbg !15761, !tbaa !2342
  %cmp4 = icmp slt i32 %6, %7, !dbg !15762
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15763

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !15764
  unreachable, !dbg !15764

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !15765, !tbaa !2499
  %tobool = trunc i8 %8 to i1, !dbg !15765
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15765

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !15765

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15766, !tbaa !2355
  br label %cond.end, !dbg !15765

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !15765
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !15765
  %11 = load i32, i32* %n.addr, align 4, !dbg !15767, !tbaa !2342
  %add = add nsw i32 %11, 1, !dbg !15768
  %conv = sext i32 %add to i64, !dbg !15769
  %mul = mul i64 %conv, 16, !dbg !15770
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !15771
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !15771
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !15772, !tbaa !2355
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !15773, !tbaa !2355
  %13 = load i8, i8* %preallocated, align 1, !dbg !15774, !tbaa !2499
  %tobool8 = trunc i8 %13 to i1, !dbg !15774
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !15776

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15777, !tbaa !2355
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !15778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !15778, !tbaa.struct !15779
  br label %if.end10, !dbg !15780

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15781, !tbaa !2355
  %17 = load i32, i32* @nslots, align 4, !dbg !15782, !tbaa !2342
  %idx.ext = sext i32 %17 to i64, !dbg !15783
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !15783
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !15784
  %19 = load i32, i32* %n.addr, align 4, !dbg !15785, !tbaa !2342
  %add11 = add nsw i32 %19, 1, !dbg !15786
  %20 = load i32, i32* @nslots, align 4, !dbg !15787, !tbaa !2342
  %sub = sub nsw i32 %add11, %20, !dbg !15788
  %conv12 = sext i32 %sub to i64, !dbg !15789
  %mul13 = mul i64 %conv12, 16, !dbg !15790
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !15784
  %21 = load i32, i32* %n.addr, align 4, !dbg !15791, !tbaa !2342
  %add14 = add nsw i32 %21, 1, !dbg !15792
  store i32 %add14, i32* @nslots, align 4, !dbg !15793, !tbaa !2342
  br label %if.end15, !dbg !15794

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15795, metadata !DIExpression()), !dbg !15797
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15798, !tbaa !2355
  %23 = load i32, i32* %n.addr, align 4, !dbg !15799, !tbaa !2342
  %idxprom = sext i32 %23 to i64, !dbg !15798
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !15798, !ctir !1257
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !15800, !ctir !1258
  %24 = load i64, i64* %size16, align 8, !dbg !15800, !tbaa !15704, !ctir !52
  store i64 %24, i64* %size, align 8, !dbg !15797, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %val, metadata !15801, metadata !DIExpression()), !dbg !15802
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15803, !tbaa !2355
  %26 = load i32, i32* %n.addr, align 4, !dbg !15804, !tbaa !2342
  %idxprom17 = sext i32 %26 to i64, !dbg !15803
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !15803, !ctir !1257
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !15805, !ctir !1258
  %27 = load i8*, i8** %val19, align 8, !dbg !15805, !tbaa !15687, !ctir !7
  store i8* %27, i8** %val, align 8, !dbg !15802, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15806, metadata !DIExpression()), !dbg !15807
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15808, !tbaa !2355
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !15809, !ctir !1241
  %29 = load i32, i32* %flags20, align 4, !dbg !15809, !tbaa !14609, !ctir !5
  %or = or i32 %29, 1, !dbg !15810
  store i32 %or, i32* %flags, align 4, !dbg !15807, !tbaa !2342
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !15811, metadata !DIExpression()), !dbg !15812
  %30 = load i8*, i8** %val, align 8, !dbg !15813, !tbaa !2355
  %31 = load i64, i64* %size, align 8, !dbg !15814, !tbaa !2516
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !15815, !tbaa !2355
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !15816, !tbaa !2516
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15817, !tbaa !2355
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !15818, !ctir !1241
  %35 = load i32, i32* %style, align 8, !dbg !15818, !tbaa !14541, !ctir !1206
  %36 = load i32, i32* %flags, align 4, !dbg !15819, !tbaa !2342
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15820, !tbaa !2355
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !15821, !ctir !1241
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15820
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15822, !tbaa !2355
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !15823, !ctir !1241
  %39 = load i8*, i8** %left_quote, align 8, !dbg !15823, !tbaa !14642, !ctir !87
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15824, !tbaa !2355
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !15825, !ctir !1241
  %41 = load i8*, i8** %right_quote, align 8, !dbg !15825, !tbaa !14647, !ctir !87
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !15826
  store i64 %call21, i64* %qsize, align 8, !dbg !15812, !tbaa !2516
  %42 = load i64, i64* %size, align 8, !dbg !15827, !tbaa !2516
  %43 = load i64, i64* %qsize, align 8, !dbg !15829, !tbaa !2516
  %cmp22 = icmp ule i64 %42, %43, !dbg !15830
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !15831

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !15832, !tbaa !2516
  %add25 = add i64 %44, 1, !dbg !15834
  store i64 %add25, i64* %size, align 8, !dbg !15835, !tbaa !2516
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15836, !tbaa !2355
  %46 = load i32, i32* %n.addr, align 4, !dbg !15837, !tbaa !2342
  %idxprom26 = sext i32 %46 to i64, !dbg !15836
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !15836, !ctir !1257
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !15838, !ctir !1258
  store i64 %add25, i64* %size28, align 8, !dbg !15839, !tbaa !15704, !ctir !52
  %47 = load i8*, i8** %val, align 8, !dbg !15840, !tbaa !2355
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15842
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15843

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !15844, !tbaa !2355
  call void @free(i8* %48) #12, !dbg !15845
  br label %if.end32, !dbg !15845

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !15846, !tbaa !2516
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !15847
  store i8* %call33, i8** %val, align 8, !dbg !15848, !tbaa !2355
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15849, !tbaa !2355
  %51 = load i32, i32* %n.addr, align 4, !dbg !15850, !tbaa !2342
  %idxprom34 = sext i32 %51 to i64, !dbg !15849
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !15849, !ctir !1257
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !15851, !ctir !1258
  store i8* %call33, i8** %val36, align 8, !dbg !15852, !tbaa !15687, !ctir !7
  %52 = load i8*, i8** %val, align 8, !dbg !15853, !tbaa !2355
  %53 = load i64, i64* %size, align 8, !dbg !15854, !tbaa !2516
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !15855, !tbaa !2355
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !15856, !tbaa !2516
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15857, !tbaa !2355
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !15858, !ctir !1241
  %57 = load i32, i32* %style37, align 8, !dbg !15858, !tbaa !14541, !ctir !1206
  %58 = load i32, i32* %flags, align 4, !dbg !15859, !tbaa !2342
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15860, !tbaa !2355
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !15861, !ctir !1241
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !15860
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15862, !tbaa !2355
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !15863, !ctir !1241
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !15863, !tbaa !14642, !ctir !87
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15864, !tbaa !2355
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !15865, !ctir !1241
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !15865, !tbaa !14647, !ctir !87
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !15866
  br label %if.end43, !dbg !15867

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !15868, !tbaa !2342
  %call44 = call i32* @__errno_location() #16, !dbg !15869
  store i32 %64, i32* %call44, align 4, !dbg !15870, !tbaa !2342, !ctir !5
  %65 = load i8*, i8** %val, align 8, !dbg !15871, !tbaa !2355
  ret i8* %65, !dbg !15872
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15873 !ctir !1264 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15874, metadata !DIExpression()), !dbg !15875
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15876, metadata !DIExpression()), !dbg !15877
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15878, metadata !DIExpression()), !dbg !15879
  %0 = load i32, i32* %n.addr, align 4, !dbg !15880, !tbaa !2342
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15881, !tbaa !2355
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15882, !tbaa !2516
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !15883
  ret i8* %call, !dbg !15884
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !15885 !ctir !1266 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15886, metadata !DIExpression()), !dbg !15887
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15888, !tbaa !2355
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !15889
  ret i8* %call, !dbg !15890
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !15891 !ctir !1268 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15892, metadata !DIExpression()), !dbg !15893
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15894, metadata !DIExpression()), !dbg !15895
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15896, !tbaa !2355
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15897, !tbaa !2516
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !15898
  ret i8* %call, !dbg !15899
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !15900 !ctir !1270 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !1206
  %arg.addr = alloca i8*, align 8, !ctir !87
  %o = alloca %struct.quoting_options, align 8, !ctir !1241
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15901, metadata !DIExpression()), !dbg !15902
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15903, metadata !DIExpression()), !dbg !15904
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15905, metadata !DIExpression()), !dbg !15906
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15907, metadata !DIExpression()), !dbg !15908
  %0 = load i32, i32* %s.addr, align 4, !dbg !15909, !tbaa !2507
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15910
  %1 = load i32, i32* %n.addr, align 4, !dbg !15911, !tbaa !2342
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15912, !tbaa !2355
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !15913
  ret i8* %call, !dbg !15914
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !15915 !ctir !1319 {
entry:
  %style.addr = alloca i32, align 4, !ctir !1206
  store i32 %style, i32* %style.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !15916, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !15918, metadata !DIExpression()), !dbg !15919
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !15919
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15919
  %1 = load i32, i32* %style.addr, align 4, !dbg !15920, !tbaa !2507
  %cmp = icmp eq i32 %1, 10, !dbg !15922
  br i1 %cmp, label %if.then, label %if.end, !dbg !15923

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15924
  unreachable, !dbg !15924

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !15925, !tbaa !2507
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !15926, !ctir !1227
  store i32 %2, i32* %style1, align 8, !dbg !15927, !tbaa !14541, !ctir !1206
  ret void, !dbg !15928
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15929 !ctir !1272 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !1206
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o = alloca %struct.quoting_options, align 8, !ctir !1241
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15930, metadata !DIExpression()), !dbg !15931
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15932, metadata !DIExpression()), !dbg !15933
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15934, metadata !DIExpression()), !dbg !15935
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15936, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15938, metadata !DIExpression()), !dbg !15939
  %0 = load i32, i32* %s.addr, align 4, !dbg !15940, !tbaa !2507
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15941
  %1 = load i32, i32* %n.addr, align 4, !dbg !15942, !tbaa !2342
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15943, !tbaa !2355
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15944, !tbaa !2516
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15945
  ret i8* %call, !dbg !15946
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15947 !ctir !1274 {
entry:
  %s.addr = alloca i32, align 4, !ctir !1206
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15948, metadata !DIExpression()), !dbg !15949
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15950, metadata !DIExpression()), !dbg !15951
  %0 = load i32, i32* %s.addr, align 4, !dbg !15952, !tbaa !2507
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15953, !tbaa !2355
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15954
  ret i8* %call, !dbg !15955
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15956 !ctir !1276 {
entry:
  %s.addr = alloca i32, align 4, !ctir !1206
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15957, metadata !DIExpression()), !dbg !15958
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15959, metadata !DIExpression()), !dbg !15960
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  %0 = load i32, i32* %s.addr, align 4, !dbg !15963, !tbaa !2507
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15964, !tbaa !2355
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15965, !tbaa !2516
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15966
  ret i8* %call, !dbg !15967
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15968 !ctir !1278 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %ch.addr = alloca i8, align 1, !ctir !8
  %options = alloca %struct.quoting_options, align 8, !ctir !1227
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15969, metadata !DIExpression()), !dbg !15970
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15971, metadata !DIExpression()), !dbg !15972
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15973, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15975, metadata !DIExpression()), !dbg !15976
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15977, !tbaa.struct !15978
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15979, !tbaa !2507
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15980
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15981, !tbaa !2355
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15982, !tbaa !2516
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15983
  ret i8* %call1, !dbg !15984
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15985 !ctir !1280 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %ch.addr = alloca i8, align 1, !ctir !8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15986, metadata !DIExpression()), !dbg !15987
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15988, metadata !DIExpression()), !dbg !15989
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15990, !tbaa !2355
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15991, !tbaa !2507
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15992
  ret i8* %call, !dbg !15993
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15994 !ctir !1266 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15995, metadata !DIExpression()), !dbg !15996
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15997, !tbaa !2355
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15998
  ret i8* %call, !dbg !15999
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !16000 !ctir !1268 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16001, metadata !DIExpression()), !dbg !16002
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16003, metadata !DIExpression()), !dbg !16004
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !16005, !tbaa !2355
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !16006, !tbaa !2516
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !16007
  ret i8* %call, !dbg !16008
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !16009 !ctir !1270 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !1206
  %arg.addr = alloca i8*, align 8, !ctir !87
  %options = alloca %struct.quoting_options, align 8, !ctir !1227
  %tmp = alloca %struct.quoting_options, align 8, !ctir !1227
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16010, metadata !DIExpression()), !dbg !16011
  store i32 %s, i32* %s.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !16012, metadata !DIExpression()), !dbg !16013
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16014, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !16016, metadata !DIExpression()), !dbg !16017
  %0 = load i32, i32* %s.addr, align 4, !dbg !16018, !tbaa !2507
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !16019
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !16019
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !16019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !16019, !tbaa.struct !15978
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !16020
  %3 = load i32, i32* %n.addr, align 4, !dbg !16021, !tbaa !2342
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !16022, !tbaa !2355
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !16023
  ret i8* %call1, !dbg !16024
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !16025 !ctir !1282 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %left_quote.addr = alloca i8*, align 8, !ctir !87
  %right_quote.addr = alloca i8*, align 8, !ctir !87
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16026, metadata !DIExpression()), !dbg !16027
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16028, metadata !DIExpression()), !dbg !16029
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16030, metadata !DIExpression()), !dbg !16031
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16032, metadata !DIExpression()), !dbg !16033
  %0 = load i32, i32* %n.addr, align 4, !dbg !16034, !tbaa !2342
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !16035, !tbaa !2355
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !16036, !tbaa !2355
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !16037, !tbaa !2355
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !16038
  ret i8* %call, !dbg !16039
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !16040 !ctir !1284 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %left_quote.addr = alloca i8*, align 8, !ctir !87
  %right_quote.addr = alloca i8*, align 8, !ctir !87
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o = alloca %struct.quoting_options, align 8, !ctir !1227
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16041, metadata !DIExpression()), !dbg !16042
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16043, metadata !DIExpression()), !dbg !16044
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16045, metadata !DIExpression()), !dbg !16046
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16047, metadata !DIExpression()), !dbg !16048
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16049, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !16051, metadata !DIExpression()), !dbg !16052
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !16053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !16053, !tbaa.struct !15978
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !16054, !tbaa !2355
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !16055, !tbaa !2355
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !16056
  %3 = load i32, i32* %n.addr, align 4, !dbg !16057, !tbaa !2342
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !16058, !tbaa !2355
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !16059, !tbaa !2516
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !16060
  ret i8* %call, !dbg !16061
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !16062 !ctir !1286 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !87
  %right_quote.addr = alloca i8*, align 8, !ctir !87
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16063, metadata !DIExpression()), !dbg !16064
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16065, metadata !DIExpression()), !dbg !16066
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16067, metadata !DIExpression()), !dbg !16068
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !16069, !tbaa !2355
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !16070, !tbaa !2355
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !16071, !tbaa !2355
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !16072
  ret i8* %call, !dbg !16073
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !16074 !ctir !1288 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !87
  %right_quote.addr = alloca i8*, align 8, !ctir !87
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16077, metadata !DIExpression()), !dbg !16078
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16079, metadata !DIExpression()), !dbg !16080
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16081, metadata !DIExpression()), !dbg !16082
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !16083, !tbaa !2355
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !16084, !tbaa !2355
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !16085, !tbaa !2355
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !16086, !tbaa !2516
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !16087
  ret i8* %call, !dbg !16088
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !16089 !ctir !1290 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16090, metadata !DIExpression()), !dbg !16091
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16092, metadata !DIExpression()), !dbg !16093
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16094, metadata !DIExpression()), !dbg !16095
  %0 = load i32, i32* %n.addr, align 4, !dbg !16096, !tbaa !2342
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !16097, !tbaa !2355
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !16098, !tbaa !2516
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !16099
  ret i8* %call, !dbg !16100
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !16101 !ctir !1292 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16102, metadata !DIExpression()), !dbg !16103
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16104, metadata !DIExpression()), !dbg !16105
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !16106, !tbaa !2355
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !16107, !tbaa !2516
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !16108
  ret i8* %call, !dbg !16109
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !16110 !ctir !1294 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16111, metadata !DIExpression()), !dbg !16112
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16113, metadata !DIExpression()), !dbg !16114
  %0 = load i32, i32* %n.addr, align 4, !dbg !16115, !tbaa !2342
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !16116, !tbaa !2355
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !16117
  ret i8* %call, !dbg !16118
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !16119 !ctir !1296 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16120, metadata !DIExpression()), !dbg !16121
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !16122, !tbaa !2355
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !16123
  ret i8* %call, !dbg !16124
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !16125 !ctir !1638 {
entry:
  %retval = alloca %struct.randread_source*, align 8, !ctir !1640
  %name.addr = alloca i8*, align 8, !ctir !87
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1645
  %s = alloca %struct.randread_source*, align 8, !ctir !1640
  store i8* %name, i8** %name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16126, metadata !DIExpression()), !dbg !16127
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !16128, metadata !DIExpression()), !dbg !16129
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16130, !tbaa !2516
  %cmp = icmp eq i64 %0, 0, !dbg !16132
  br i1 %cmp, label %if.then, label %if.else, !dbg !16133

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !16134
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !16135
  br label %return, !dbg !16135

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !16136, metadata !DIExpression()), !dbg !16138
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !16138, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !16139, metadata !DIExpression()), !dbg !16140
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16141, !tbaa !2355
  %tobool = icmp ne i8* %1, null, !dbg !16141
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !16143

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !16144, !tbaa !2355
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.282, i64 0, i64 0)), !dbg !16146
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !16147, !tbaa !2355
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !16147
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !16148

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !16149
  br label %return, !dbg !16149

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !16150

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16151, !tbaa !2355
  %4 = load i8*, i8** %name.addr, align 8, !dbg !16152, !tbaa !2355
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !16153
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !16154, !tbaa !2355
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16155, !tbaa !2355
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !16155
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !16157

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16158, !tbaa !2355
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16159, !tbaa !2355
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !16160, !ctir !1641
  %c = bitcast %union.anon.22* %buf to [4096 x i8]*, !dbg !16161
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !16159
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16162, !tbaa !2516
  %cmp9 = icmp ult i64 4096, %8, !dbg !16162
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !16162

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !16162

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16162, !tbaa !2516
  br label %cond.end, !dbg !16162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !16162
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #12, !dbg !16163
  br label %if.end19, !dbg !16163

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16164, !tbaa !2355
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !16166, !ctir !1641
  %isaac = bitcast %union.anon.22* %buf12 to %struct.isaac*, !dbg !16167
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !16168, !ctir !1698
  store i64 0, i64* %buffered, align 8, !dbg !16169, !tbaa !2507, !ctir !52
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16170, !tbaa !2355
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !16171, !ctir !1641
  %isaac14 = bitcast %union.anon.22* %buf13 to %struct.isaac*, !dbg !16172
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !16173, !ctir !1698
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !16174, !ctir !1702
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !16170
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !16170
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16175, !tbaa !2516
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !16176
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16177, !tbaa !2355
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !16178, !ctir !1641
  %isaac17 = bitcast %union.anon.22* %buf16 to %struct.isaac*, !dbg !16179
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !16180, !ctir !1698
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !16181
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16182, !tbaa !2355
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !16183
  br label %return, !dbg !16183

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !16184
  ret %struct.randread_source* %16, !dbg !16184
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !16185 !ctir !1728 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8, !ctir !1645
  %handler_arg.addr = alloca i8*, align 8, !ctir !85
  %s = alloca %struct.randread_source*, align 8, !ctir !1640
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !16186, metadata !DIExpression()), !dbg !16187
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !16188, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !16190, metadata !DIExpression()), !dbg !16191
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !16192
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !16192
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !16191, !tbaa !2355
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !16193, !tbaa !2355
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16194, !tbaa !2355
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !16195, !ctir !1641
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !16196, !tbaa !16197, !ctir !1645
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16199, !tbaa !2355
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !16200, !ctir !1641
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !16201, !tbaa !16202, !ctir !1686
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !16203, !tbaa !2355
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16204, !tbaa !2355
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !16205, !ctir !1641
  store i8* %4, i8** %handler_arg2, align 8, !dbg !16206, !tbaa !16207, !ctir !85
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16208, !tbaa !2355
  ret %struct.randread_source* %6, !dbg !16209
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !16210 !ctir !1730 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !47
  %bufsize.addr = alloca i64, align 8, !ctir !52
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  %seeded = alloca i64, align 8, !ctir !1732
  %fd = alloca i32, align 4, !ctir !5
  %v = alloca %struct.timespec, align 8, !ctir !16211
  %nbytes = alloca i64, align 8, !ctir !52
  %v19 = alloca i32, align 4, !ctir !1733
  %nbytes20 = alloca i64, align 8, !ctir !52
  %v34 = alloca i32, align 4, !ctir !1733
  %nbytes35 = alloca i64, align 8, !ctir !52
  %v49 = alloca i32, align 4, !ctir !1734
  %nbytes50 = alloca i64, align 8, !ctir !52
  %v64 = alloca i32, align 4, !ctir !1734
  %nbytes65 = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16217, metadata !DIExpression()), !dbg !16218
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !16219, metadata !DIExpression()), !dbg !16220
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !16221, metadata !DIExpression()), !dbg !16222
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !16223, metadata !DIExpression()), !dbg !16224
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !16225, !tbaa !2355
  store i8* %0, i8** %buf, align 8, !dbg !16224, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !16226, metadata !DIExpression()), !dbg !16227
  store i64 0, i64* %seeded, align 8, !dbg !16227, !tbaa !2516
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16228, metadata !DIExpression()), !dbg !16229
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.283, i64 0, i64 0), i32 0), !dbg !16230
  store i32 %call, i32* %fd, align 4, !dbg !16229, !tbaa !2342
  %1 = load i32, i32* %fd, align 4, !dbg !16231, !tbaa !2342
  %cmp = icmp sle i32 0, %1, !dbg !16233
  br i1 %cmp, label %if.then, label %if.end6, !dbg !16234

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !16235, !tbaa !2342
  %3 = load i8*, i8** %buf, align 8, !dbg !16237, !tbaa !2355
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !16238, !tbaa !2516
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16238, !tbaa !2516
  %cmp1 = icmp ult i64 %4, %5, !dbg !16238
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !16238

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !16238, !tbaa !2516
  br label %cond.end, !dbg !16238

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16238, !tbaa !2516
  br label %cond.end, !dbg !16238

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !16238
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !16239
  store i64 %call2, i64* %seeded, align 8, !dbg !16240, !tbaa !2516
  %8 = load i64, i64* %seeded, align 8, !dbg !16241, !tbaa !2516
  %cmp3 = icmp slt i64 %8, 0, !dbg !16243
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !16244

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !16245, !tbaa !2516
  br label %if.end, !dbg !16246

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !16247, !tbaa !2342
  %call5 = call i32 @close(i32 %9), !dbg !16248
  br label %if.end6, !dbg !16249

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !16250, !tbaa !2516
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !16250, !tbaa !2516
  %cmp7 = icmp ult i64 %10, %11, !dbg !16250
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !16252

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !16253, metadata !DIExpression()), !dbg !16255
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !16256, metadata !DIExpression()), !dbg !16255
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !16255, !tbaa !2516
  %13 = load i64, i64* %seeded, align 8, !dbg !16255, !tbaa !2516
  %sub = sub i64 %12, %13, !dbg !16255
  %cmp9 = icmp ult i64 16, %sub, !dbg !16255
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !16255

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !16255

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !16255, !tbaa !2516
  %15 = load i64, i64* %seeded, align 8, !dbg !16255, !tbaa !2516
  %sub12 = sub i64 %14, %15, !dbg !16255
  br label %cond.end13, !dbg !16255

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !16255
  store i64 %cond14, i64* %nbytes, align 8, !dbg !16255, !tbaa !2516
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #12, !dbg !16255
  %16 = load i8*, i8** %buf, align 8, !dbg !16255, !tbaa !2355
  %17 = load i64, i64* %seeded, align 8, !dbg !16255, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !16255
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !16255
  %19 = load i64, i64* %nbytes, align 8, !dbg !16255, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !16255
  %20 = load i64, i64* %nbytes, align 8, !dbg !16255, !tbaa !2516
  %21 = load i64, i64* %seeded, align 8, !dbg !16255, !tbaa !2516
  %add = add i64 %21, %20, !dbg !16255
  store i64 %add, i64* %seeded, align 8, !dbg !16255, !tbaa !2516
  br label %if.end16, !dbg !16255

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !16257, !tbaa !2516
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !16257, !tbaa !2516
  %cmp17 = icmp ult i64 %22, %23, !dbg !16257
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !16259

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !16260, metadata !DIExpression()), !dbg !16262
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !16263, metadata !DIExpression()), !dbg !16262
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !16262, !tbaa !2516
  %25 = load i64, i64* %seeded, align 8, !dbg !16262, !tbaa !2516
  %sub21 = sub i64 %24, %25, !dbg !16262
  %cmp22 = icmp ult i64 4, %sub21, !dbg !16262
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !16262

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !16262

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !16262, !tbaa !2516
  %27 = load i64, i64* %seeded, align 8, !dbg !16262, !tbaa !2516
  %sub25 = sub i64 %26, %27, !dbg !16262
  br label %cond.end26, !dbg !16262

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !16262
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !16262, !tbaa !2516
  %call28 = call i32 @getpid() #12, !dbg !16262
  store i32 %call28, i32* %v19, align 4, !dbg !16262, !tbaa !2342
  %28 = load i8*, i8** %buf, align 8, !dbg !16262, !tbaa !2355
  %29 = load i64, i64* %seeded, align 8, !dbg !16262, !tbaa !2516
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !16262
  %30 = bitcast i32* %v19 to i8*, !dbg !16262
  %31 = load i64, i64* %nbytes20, align 8, !dbg !16262, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !16262
  %32 = load i64, i64* %nbytes20, align 8, !dbg !16262, !tbaa !2516
  %33 = load i64, i64* %seeded, align 8, !dbg !16262, !tbaa !2516
  %add30 = add i64 %33, %32, !dbg !16262
  store i64 %add30, i64* %seeded, align 8, !dbg !16262, !tbaa !2516
  br label %if.end31, !dbg !16262

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !16264, !tbaa !2516
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !16264, !tbaa !2516
  %cmp32 = icmp ult i64 %34, %35, !dbg !16264
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !16266

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !16267, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !16270, metadata !DIExpression()), !dbg !16269
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !16269, !tbaa !2516
  %37 = load i64, i64* %seeded, align 8, !dbg !16269, !tbaa !2516
  %sub36 = sub i64 %36, %37, !dbg !16269
  %cmp37 = icmp ult i64 4, %sub36, !dbg !16269
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !16269

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !16269

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !16269, !tbaa !2516
  %39 = load i64, i64* %seeded, align 8, !dbg !16269, !tbaa !2516
  %sub40 = sub i64 %38, %39, !dbg !16269
  br label %cond.end41, !dbg !16269

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !16269
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !16269, !tbaa !2516
  %call43 = call i32 @getppid() #12, !dbg !16269
  store i32 %call43, i32* %v34, align 4, !dbg !16269, !tbaa !2342
  %40 = load i8*, i8** %buf, align 8, !dbg !16269, !tbaa !2355
  %41 = load i64, i64* %seeded, align 8, !dbg !16269, !tbaa !2516
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !16269
  %42 = bitcast i32* %v34 to i8*, !dbg !16269
  %43 = load i64, i64* %nbytes35, align 8, !dbg !16269, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !16269
  %44 = load i64, i64* %nbytes35, align 8, !dbg !16269, !tbaa !2516
  %45 = load i64, i64* %seeded, align 8, !dbg !16269, !tbaa !2516
  %add45 = add i64 %45, %44, !dbg !16269
  store i64 %add45, i64* %seeded, align 8, !dbg !16269, !tbaa !2516
  br label %if.end46, !dbg !16269

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !16271, !tbaa !2516
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !16271, !tbaa !2516
  %cmp47 = icmp ult i64 %46, %47, !dbg !16271
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !16273

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !16274, metadata !DIExpression()), !dbg !16276
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !16277, metadata !DIExpression()), !dbg !16276
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !16276, !tbaa !2516
  %49 = load i64, i64* %seeded, align 8, !dbg !16276, !tbaa !2516
  %sub51 = sub i64 %48, %49, !dbg !16276
  %cmp52 = icmp ult i64 4, %sub51, !dbg !16276
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !16276

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !16276

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !16276, !tbaa !2516
  %51 = load i64, i64* %seeded, align 8, !dbg !16276, !tbaa !2516
  %sub55 = sub i64 %50, %51, !dbg !16276
  br label %cond.end56, !dbg !16276

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !16276
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !16276, !tbaa !2516
  %call58 = call i32 @getuid() #12, !dbg !16276
  store i32 %call58, i32* %v49, align 4, !dbg !16276, !tbaa !2342
  %52 = load i8*, i8** %buf, align 8, !dbg !16276, !tbaa !2355
  %53 = load i64, i64* %seeded, align 8, !dbg !16276, !tbaa !2516
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !16276
  %54 = bitcast i32* %v49 to i8*, !dbg !16276
  %55 = load i64, i64* %nbytes50, align 8, !dbg !16276, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !16276
  %56 = load i64, i64* %nbytes50, align 8, !dbg !16276, !tbaa !2516
  %57 = load i64, i64* %seeded, align 8, !dbg !16276, !tbaa !2516
  %add60 = add i64 %57, %56, !dbg !16276
  store i64 %add60, i64* %seeded, align 8, !dbg !16276, !tbaa !2516
  br label %if.end61, !dbg !16276

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !16278, !tbaa !2516
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !16278, !tbaa !2516
  %cmp62 = icmp ult i64 %58, %59, !dbg !16278
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !16280

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !16281, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !16284, metadata !DIExpression()), !dbg !16283
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !16283, !tbaa !2516
  %61 = load i64, i64* %seeded, align 8, !dbg !16283, !tbaa !2516
  %sub66 = sub i64 %60, %61, !dbg !16283
  %cmp67 = icmp ult i64 4, %sub66, !dbg !16283
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !16283

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !16283

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !16283, !tbaa !2516
  %63 = load i64, i64* %seeded, align 8, !dbg !16283, !tbaa !2516
  %sub70 = sub i64 %62, %63, !dbg !16283
  br label %cond.end71, !dbg !16283

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !16283
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !16283, !tbaa !2516
  %call73 = call i32 @getgid() #12, !dbg !16283
  store i32 %call73, i32* %v64, align 4, !dbg !16283, !tbaa !2342
  %64 = load i8*, i8** %buf, align 8, !dbg !16283, !tbaa !2355
  %65 = load i64, i64* %seeded, align 8, !dbg !16283, !tbaa !2516
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !16283
  %66 = bitcast i32* %v64 to i8*, !dbg !16283
  %67 = load i64, i64* %nbytes65, align 8, !dbg !16283, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !16283
  %68 = load i64, i64* %nbytes65, align 8, !dbg !16283, !tbaa !2516
  %69 = load i64, i64* %seeded, align 8, !dbg !16283, !tbaa !2516
  %add75 = add i64 %69, %68, !dbg !16283
  store i64 %add75, i64* %seeded, align 8, !dbg !16283, !tbaa !2516
  br label %if.end76, !dbg !16283

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !16285
}

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !16286 !ctir !1687 {
entry:
  %file_name.addr = alloca i8*, align 8, !ctir !85
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !16287, metadata !DIExpression()), !dbg !16288
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !16289, !tbaa !2355
  %tobool = icmp ne i8* %0, null, !dbg !16289
  br i1 %tobool, label %if.then, label %if.end, !dbg !16291

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !16292, !tbaa !2342
  %call = call i32* @__errno_location() #16, !dbg !16293
  %2 = load i32, i32* %call, align 4, !dbg !16293, !tbaa !2342, !ctir !5
  %call1 = call i32* @__errno_location() #16, !dbg !16294
  %3 = load i32, i32* %call1, align 4, !dbg !16294, !tbaa !2342, !ctir !5
  %cmp = icmp eq i32 %3, 0, !dbg !16295
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16294

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.284, i64 0, i64 0)) #12, !dbg !16296
  br label %cond.end, !dbg !16294

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.285, i64 0, i64 0)) #12, !dbg !16297
  br label %cond.end, !dbg !16294

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !16294
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !16298, !tbaa !2355
  %call4 = call i8* @quote(i8* %4), !dbg !16299
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !16300
  br label %if.end, !dbg !16300

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !16301
  unreachable, !dbg !16301
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !16302 !ctir !1720 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !1640
  %handler.addr = alloca void (i8*)*, align 8, !ctir !1686
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16303, metadata !DIExpression()), !dbg !16304
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !16305, metadata !DIExpression()), !dbg !16306
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !16307, !tbaa !2355
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16308, !tbaa !2355
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !16309, !ctir !1641
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !16310, !tbaa !16202, !ctir !1686
  ret void, !dbg !16311
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !16312 !ctir !1722 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !1640
  %handler_arg.addr = alloca i8*, align 8, !ctir !85
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16313, metadata !DIExpression()), !dbg !16314
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !16315, metadata !DIExpression()), !dbg !16316
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !16317, !tbaa !2355
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16318, !tbaa !2355
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !16319, !ctir !1641
  store i8* %0, i8** %handler_arg1, align 8, !dbg !16320, !tbaa !16207, !ctir !85
  ret void, !dbg !16321
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !16322 !ctir !1724 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !1640
  %buf.addr = alloca i8*, align 8, !ctir !47
  %size.addr = alloca i64, align 8, !ctir !52
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16323, metadata !DIExpression()), !dbg !16324
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16325, metadata !DIExpression()), !dbg !16326
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16327, metadata !DIExpression()), !dbg !16328
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16329, !tbaa !2355
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !16331, !ctir !1641
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16331, !tbaa !16197, !ctir !1645
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !16329
  br i1 %tobool, label %if.then, label %if.else, !dbg !16332

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16333, !tbaa !2355
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !16334, !tbaa !2355
  %4 = load i64, i64* %size.addr, align 8, !dbg !16335, !tbaa !2516
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !16336
  br label %if.end, !dbg !16336

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16337, !tbaa !2355
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !16338, !ctir !1641
  %isaac = bitcast %union.anon.22* %buf1 to %struct.isaac*, !dbg !16339
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !16340, !tbaa !2355
  %7 = load i64, i64* %size.addr, align 8, !dbg !16341, !tbaa !2516
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !16342
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !16344 !ctir !1735 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !1640
  %p.addr = alloca i8*, align 8, !ctir !1737
  %size.addr = alloca i64, align 8, !ctir !52
  %inbytes = alloca i64, align 8, !ctir !52
  %fread_errno = alloca i32, align 4, !ctir !5
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16345, metadata !DIExpression()), !dbg !16346
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16347, metadata !DIExpression()), !dbg !16348
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16349, metadata !DIExpression()), !dbg !16350
  br label %while.body, !dbg !16351

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !16352, metadata !DIExpression()), !dbg !16354
  %0 = load i8*, i8** %p.addr, align 8, !dbg !16355, !tbaa !2355
  %1 = load i64, i64* %size.addr, align 8, !dbg !16355, !tbaa !2516
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16355, !tbaa !2355
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !16355, !ctir !1641
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16355, !tbaa !16197, !ctir !1645
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !16355
  store i64 %call, i64* %inbytes, align 8, !dbg !16354, !tbaa !2516
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !16356, metadata !DIExpression()), !dbg !16357
  %call1 = call i32* @__errno_location() #16, !dbg !16358
  %4 = load i32, i32* %call1, align 4, !dbg !16358, !tbaa !2342, !ctir !5
  store i32 %4, i32* %fread_errno, align 4, !dbg !16357, !tbaa !2342
  %5 = load i64, i64* %inbytes, align 8, !dbg !16359, !tbaa !2516
  %6 = load i8*, i8** %p.addr, align 8, !dbg !16360, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !16360
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !16360, !tbaa !2355
  %7 = load i64, i64* %inbytes, align 8, !dbg !16361, !tbaa !2516
  %8 = load i64, i64* %size.addr, align 8, !dbg !16362, !tbaa !2516
  %sub = sub i64 %8, %7, !dbg !16362
  store i64 %sub, i64* %size.addr, align 8, !dbg !16362, !tbaa !2516
  %9 = load i64, i64* %size.addr, align 8, !dbg !16363, !tbaa !2516
  %cmp = icmp eq i64 %9, 0, !dbg !16365
  br i1 %cmp, label %if.then, label %if.end, !dbg !16366

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !16367

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16368, !tbaa !2355
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !16368, !ctir !1641
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !16368, !tbaa !16197, !ctir !1645
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #12, !dbg !16368
  %tobool = icmp ne i32 %call3, 0, !dbg !16368
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16368

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !16369, !tbaa !2342
  br label %cond.end, !dbg !16368

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !16368

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !16368
  %call4 = call i32* @__errno_location() #16, !dbg !16370
  store i32 %cond, i32* %call4, align 4, !dbg !16371, !tbaa !2342, !ctir !5
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16372, !tbaa !2355
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !16373, !ctir !1641
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !16373, !tbaa !16202, !ctir !1686
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16374, !tbaa !2355
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !16375, !ctir !1641
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !16375, !tbaa !16207, !ctir !85
  call void %14(i8* %16), !dbg !16372
  br label %while.body, !dbg !16351, !llvm.loop !16376

while.end:                                        ; preds = %if.then
  ret void, !dbg !16378
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !16379 !ctir !1738 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8, !ctir !1740
  %p.addr = alloca i8*, align 8, !ctir !47
  %size.addr = alloca i64, align 8, !ctir !52
  %inbytes = alloca i64, align 8, !ctir !52
  %char_p = alloca i8*, align 8, !ctir !7
  %wp = alloca i64*, align 8, !ctir !1741
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !16380, metadata !DIExpression()), !dbg !16381
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16382, metadata !DIExpression()), !dbg !16383
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16384, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !16386, metadata !DIExpression()), !dbg !16387
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16388, !tbaa !2355
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !16389, !ctir !1698
  %1 = load i64, i64* %buffered, align 8, !dbg !16389, !tbaa !16390, !ctir !52
  store i64 %1, i64* %inbytes, align 8, !dbg !16387, !tbaa !2516
  br label %while.body, !dbg !16393

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !16394, metadata !DIExpression()), !dbg !16396
  %2 = load i8*, i8** %p.addr, align 8, !dbg !16397, !tbaa !2355
  store i8* %2, i8** %char_p, align 8, !dbg !16396, !tbaa !2355
  %3 = load i64, i64* %size.addr, align 8, !dbg !16398, !tbaa !2516
  %4 = load i64, i64* %inbytes, align 8, !dbg !16400, !tbaa !2516
  %cmp = icmp ule i64 %3, %4, !dbg !16401
  br i1 %cmp, label %if.then, label %if.end, !dbg !16402

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !16403, !tbaa !2355
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16405, !tbaa !2355
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !16406, !ctir !1698
  %b = bitcast %union.anon.0.21* %data to [2048 x i8]*, !dbg !16407
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !16405
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !16408
  %7 = load i64, i64* %inbytes, align 8, !dbg !16409, !tbaa !2516
  %idx.neg = sub i64 0, %7, !dbg !16410
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !16410
  %8 = load i64, i64* %size.addr, align 8, !dbg !16411, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !16412
  %9 = load i64, i64* %inbytes, align 8, !dbg !16413, !tbaa !2516
  %10 = load i64, i64* %size.addr, align 8, !dbg !16414, !tbaa !2516
  %sub = sub i64 %9, %10, !dbg !16415
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16416, !tbaa !2355
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !16417, !ctir !1698
  store i64 %sub, i64* %buffered2, align 8, !dbg !16418, !tbaa !16390, !ctir !52
  br label %return, !dbg !16419

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !16420, !tbaa !2355
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16421, !tbaa !2355
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !16422, !ctir !1698
  %b4 = bitcast %union.anon.0.21* %data3 to [2048 x i8]*, !dbg !16423
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !16421
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !16424
  %14 = load i64, i64* %inbytes, align 8, !dbg !16425, !tbaa !2516
  %idx.neg7 = sub i64 0, %14, !dbg !16426
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !16426
  %15 = load i64, i64* %inbytes, align 8, !dbg !16427, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !16428
  %16 = load i8*, i8** %char_p, align 8, !dbg !16429, !tbaa !2355
  %17 = load i64, i64* %inbytes, align 8, !dbg !16430, !tbaa !2516
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !16431
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !16432, !tbaa !2355
  %18 = load i64, i64* %inbytes, align 8, !dbg !16433, !tbaa !2516
  %19 = load i64, i64* %size.addr, align 8, !dbg !16434, !tbaa !2516
  %sub10 = sub i64 %19, %18, !dbg !16434
  store i64 %sub10, i64* %size.addr, align 8, !dbg !16434, !tbaa !2516
  %20 = load i8*, i8** %p.addr, align 8, !dbg !16435, !tbaa !2355
  %21 = ptrtoint i8* %20 to i64, !dbg !16435
  %rem = urem i64 %21, 8, !dbg !16435
  %cmp11 = icmp eq i64 %rem, 0, !dbg !16435
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !16437

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !16438, metadata !DIExpression()), !dbg !16440
  %22 = load i8*, i8** %p.addr, align 8, !dbg !16441, !tbaa !2355
  %23 = bitcast i8* %22 to i64*, !dbg !16441
  store i64* %23, i64** %wp, align 8, !dbg !16440, !tbaa !2355
  br label %while.cond13, !dbg !16442

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !16443, !tbaa !2516
  %cmp14 = icmp ule i64 2048, %24, !dbg !16444
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !16442

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16445, !tbaa !2355
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !16447, !ctir !1698
  %26 = load i64*, i64** %wp, align 8, !dbg !16448, !tbaa !2355
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !16449
  %27 = load i64*, i64** %wp, align 8, !dbg !16450, !tbaa !2355
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !16450
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !16450, !tbaa !2355
  %28 = load i64, i64* %size.addr, align 8, !dbg !16451, !tbaa !2516
  %sub17 = sub i64 %28, 2048, !dbg !16451
  store i64 %sub17, i64* %size.addr, align 8, !dbg !16451, !tbaa !2516
  %29 = load i64, i64* %size.addr, align 8, !dbg !16452, !tbaa !2516
  %cmp18 = icmp eq i64 %29, 0, !dbg !16454
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !16455

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16456, !tbaa !2355
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !16458, !ctir !1698
  store i64 0, i64* %buffered20, align 8, !dbg !16459, !tbaa !16390, !ctir !52
  br label %return, !dbg !16460

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !16442, !llvm.loop !16461

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !16463, !tbaa !2355
  %32 = bitcast i64* %31 to i8*, !dbg !16463
  store i8* %32, i8** %p.addr, align 8, !dbg !16464, !tbaa !2355
  br label %if.end22, !dbg !16465

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16466, !tbaa !2355
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !16467, !ctir !1698
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16468, !tbaa !2355
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !16469, !ctir !1698
  %w = bitcast %union.anon.0.21* %data24 to [256 x i64]*, !dbg !16470
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !16468
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !16471
  store i64 2048, i64* %inbytes, align 8, !dbg !16472, !tbaa !2516
  br label %while.body, !dbg !16393, !llvm.loop !16473

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !16475
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !16476 !ctir !1726 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !1640
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1645
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16477, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !16479, metadata !DIExpression()), !dbg !16480
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16481, !tbaa !2355
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !16482, !ctir !1641
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !16482, !tbaa !16197, !ctir !1645
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !16480, !tbaa !2355
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16483, !tbaa !2355
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !16483
  call void @explicit_bzero(i8* %3, i64 4152), !dbg !16484
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16485, !tbaa !2355
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !16485
  call void @free(i8* %5) #12, !dbg !16486
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16487, !tbaa !2355
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !16487
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16487

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16488, !tbaa !2355
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !16489
  br label %cond.end, !dbg !16487

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16487

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !16487
  ret i32 %cond, !dbg !16490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !16491 !ctir !1745 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8, !ctir !1747
  %result.addr = alloca i64*, align 8, !ctir !1741
  %a = alloca i64, align 8, !ctir !1707
  %b = alloca i64, align 8, !ctir !1707
  %m = alloca i64*, align 8, !ctir !1741
  %r = alloca i64*, align 8, !ctir !1741
  %x = alloca i64, align 8, !ctir !1707
  %y = alloca i64, align 8, !ctir !1707
  %x18 = alloca i64, align 8, !ctir !1707
  %y19 = alloca i64, align 8, !ctir !1707
  %x40 = alloca i64, align 8, !ctir !1707
  %y41 = alloca i64, align 8, !ctir !1707
  %x61 = alloca i64, align 8, !ctir !1707
  %y62 = alloca i64, align 8, !ctir !1707
  %x88 = alloca i64, align 8, !ctir !1707
  %y89 = alloca i64, align 8, !ctir !1707
  %x110 = alloca i64, align 8, !ctir !1707
  %y111 = alloca i64, align 8, !ctir !1707
  %x132 = alloca i64, align 8, !ctir !1707
  %y133 = alloca i64, align 8, !ctir !1707
  %x153 = alloca i64, align 8, !ctir !1707
  %y154 = alloca i64, align 8, !ctir !1707
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !16493, metadata !DIExpression()), !dbg !16494
  store i64* %result, i64** %result.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !16495, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.declare(metadata i64* %a, metadata !16497, metadata !DIExpression()), !dbg !16498
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16499, !tbaa !2355
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !16500, !ctir !1748
  %1 = load i64, i64* %a1, align 8, !dbg !16500, !tbaa !16501, !ctir !1707
  store i64 %1, i64* %a, align 8, !dbg !16498, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %b, metadata !16502, metadata !DIExpression()), !dbg !16503
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16504, !tbaa !2355
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !16505, !ctir !1748
  %3 = load i64, i64* %b2, align 8, !dbg !16505, !tbaa !16506, !ctir !1707
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16507, !tbaa !2355
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !16508, !ctir !1748
  %5 = load i64, i64* %c, align 8, !dbg !16509, !tbaa !16510, !ctir !1707
  %inc = add i64 %5, 1, !dbg !16509
  store i64 %inc, i64* %c, align 8, !dbg !16509, !tbaa !16510, !ctir !1707
  %add = add i64 %3, %inc, !dbg !16511
  store i64 %add, i64* %b, align 8, !dbg !16503, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64** %m, metadata !16512, metadata !DIExpression()), !dbg !16513
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16514, !tbaa !2355
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !16515, !ctir !1748
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !16514
  store i64* %arraydecay, i64** %m, align 8, !dbg !16513, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %r, metadata !16516, metadata !DIExpression()), !dbg !16517
  %7 = load i64*, i64** %result.addr, align 8, !dbg !16518, !tbaa !2355
  store i64* %7, i64** %r, align 8, !dbg !16517, !tbaa !2355
  br label %do.body, !dbg !16519

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !16520, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.declare(metadata i64* %y, metadata !16524, metadata !DIExpression()), !dbg !16523
  %8 = load i64, i64* %a, align 8, !dbg !16523, !tbaa !2516
  %9 = load i64, i64* %a, align 8, !dbg !16523, !tbaa !2516
  %shl = shl i64 %9, 21, !dbg !16523
  %xor = xor i64 %8, %shl, !dbg !16523
  %neg = xor i64 %xor, -1, !dbg !16523
  %xor4 = xor i64 0, %neg, !dbg !16523
  %10 = load i64*, i64** %m, align 8, !dbg !16523, !tbaa !2355
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !16523, !ctir !1741
  %11 = load i64, i64* %arrayidx, align 8, !dbg !16523, !tbaa !2516
  %add5 = add i64 %xor4, %11, !dbg !16523
  store i64 %add5, i64* %a, align 8, !dbg !16523, !tbaa !2516
  %12 = load i64*, i64** %m, align 8, !dbg !16523, !tbaa !2355
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !16523, !ctir !1741
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !16523, !tbaa !2516
  store i64 %13, i64* %x, align 8, !dbg !16523, !tbaa !2516
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16523, !tbaa !2355
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !16523, !ctir !1748
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !16523
  %15 = load i64, i64* %x, align 8, !dbg !16523, !tbaa !2516
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !16523
  %16 = load i64, i64* %a, align 8, !dbg !16523, !tbaa !2516
  %add9 = add i64 %call, %16, !dbg !16523
  %17 = load i64, i64* %b, align 8, !dbg !16523, !tbaa !2516
  %add10 = add i64 %add9, %17, !dbg !16523
  store i64 %add10, i64* %y, align 8, !dbg !16523, !tbaa !2516
  %18 = load i64*, i64** %m, align 8, !dbg !16523, !tbaa !2355
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !16523, !ctir !1741
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !16523, !tbaa !2516
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16523, !tbaa !2355
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !16523, !ctir !1748
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !16523
  %20 = load i64, i64* %y, align 8, !dbg !16523, !tbaa !2516
  %shr = lshr i64 %20, 8, !dbg !16523
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !16523
  %21 = load i64, i64* %x, align 8, !dbg !16523, !tbaa !2516
  %add15 = add i64 %call14, %21, !dbg !16523
  %call16 = call i64 @just(i64 %add15), !dbg !16523
  store i64 %call16, i64* %b, align 8, !dbg !16523, !tbaa !2516
  %22 = load i64*, i64** %r, align 8, !dbg !16523, !tbaa !2355
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !16523, !ctir !1741
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !16523, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !16525, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !16528, metadata !DIExpression()), !dbg !16527
  %23 = load i64, i64* %a, align 8, !dbg !16527, !tbaa !2516
  %24 = load i64, i64* %a, align 8, !dbg !16527, !tbaa !2516
  %call20 = call i64 @just(i64 %24), !dbg !16527
  %shr21 = lshr i64 %call20, 5, !dbg !16527
  %xor22 = xor i64 %23, %shr21, !dbg !16527
  %xor23 = xor i64 0, %xor22, !dbg !16527
  %25 = load i64*, i64** %m, align 8, !dbg !16527, !tbaa !2355
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !16527, !ctir !1741
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !16527, !tbaa !2516
  %add25 = add i64 %xor23, %26, !dbg !16527
  store i64 %add25, i64* %a, align 8, !dbg !16527, !tbaa !2516
  %27 = load i64*, i64** %m, align 8, !dbg !16527, !tbaa !2355
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !16527, !ctir !1741
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !16527, !tbaa !2516
  store i64 %28, i64* %x18, align 8, !dbg !16527, !tbaa !2516
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16527, !tbaa !2355
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !16527, !ctir !1748
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !16527
  %30 = load i64, i64* %x18, align 8, !dbg !16527, !tbaa !2516
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !16527
  %31 = load i64, i64* %a, align 8, !dbg !16527, !tbaa !2516
  %add30 = add i64 %call29, %31, !dbg !16527
  %32 = load i64, i64* %b, align 8, !dbg !16527, !tbaa !2516
  %add31 = add i64 %add30, %32, !dbg !16527
  store i64 %add31, i64* %y19, align 8, !dbg !16527, !tbaa !2516
  %33 = load i64*, i64** %m, align 8, !dbg !16527, !tbaa !2355
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !16527, !ctir !1741
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !16527, !tbaa !2516
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16527, !tbaa !2355
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !16527, !ctir !1748
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !16527
  %35 = load i64, i64* %y19, align 8, !dbg !16527, !tbaa !2516
  %shr35 = lshr i64 %35, 8, !dbg !16527
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !16527
  %36 = load i64, i64* %x18, align 8, !dbg !16527, !tbaa !2516
  %add37 = add i64 %call36, %36, !dbg !16527
  %call38 = call i64 @just(i64 %add37), !dbg !16527
  store i64 %call38, i64* %b, align 8, !dbg !16527, !tbaa !2516
  %37 = load i64*, i64** %r, align 8, !dbg !16527, !tbaa !2355
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !16527, !ctir !1741
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !16527, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !16529, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !16532, metadata !DIExpression()), !dbg !16531
  %38 = load i64, i64* %a, align 8, !dbg !16531, !tbaa !2516
  %39 = load i64, i64* %a, align 8, !dbg !16531, !tbaa !2516
  %shl42 = shl i64 %39, 12, !dbg !16531
  %xor43 = xor i64 %38, %shl42, !dbg !16531
  %xor44 = xor i64 0, %xor43, !dbg !16531
  %40 = load i64*, i64** %m, align 8, !dbg !16531, !tbaa !2355
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !16531, !ctir !1741
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !16531, !tbaa !2516
  %add46 = add i64 %xor44, %41, !dbg !16531
  store i64 %add46, i64* %a, align 8, !dbg !16531, !tbaa !2516
  %42 = load i64*, i64** %m, align 8, !dbg !16531, !tbaa !2355
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !16531, !ctir !1741
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !16531, !tbaa !2516
  store i64 %43, i64* %x40, align 8, !dbg !16531, !tbaa !2516
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16531, !tbaa !2355
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !16531, !ctir !1748
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !16531
  %45 = load i64, i64* %x40, align 8, !dbg !16531, !tbaa !2516
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !16531
  %46 = load i64, i64* %a, align 8, !dbg !16531, !tbaa !2516
  %add51 = add i64 %call50, %46, !dbg !16531
  %47 = load i64, i64* %b, align 8, !dbg !16531, !tbaa !2516
  %add52 = add i64 %add51, %47, !dbg !16531
  store i64 %add52, i64* %y41, align 8, !dbg !16531, !tbaa !2516
  %48 = load i64*, i64** %m, align 8, !dbg !16531, !tbaa !2355
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !16531, !ctir !1741
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !16531, !tbaa !2516
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16531, !tbaa !2355
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !16531, !ctir !1748
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !16531
  %50 = load i64, i64* %y41, align 8, !dbg !16531, !tbaa !2516
  %shr56 = lshr i64 %50, 8, !dbg !16531
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !16531
  %51 = load i64, i64* %x40, align 8, !dbg !16531, !tbaa !2516
  %add58 = add i64 %call57, %51, !dbg !16531
  %call59 = call i64 @just(i64 %add58), !dbg !16531
  store i64 %call59, i64* %b, align 8, !dbg !16531, !tbaa !2516
  %52 = load i64*, i64** %r, align 8, !dbg !16531, !tbaa !2355
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !16531, !ctir !1741
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !16531, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !16533, metadata !DIExpression()), !dbg !16535
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !16536, metadata !DIExpression()), !dbg !16535
  %53 = load i64, i64* %a, align 8, !dbg !16535, !tbaa !2516
  %54 = load i64, i64* %a, align 8, !dbg !16535, !tbaa !2516
  %call63 = call i64 @just(i64 %54), !dbg !16535
  %shr64 = lshr i64 %call63, 33, !dbg !16535
  %xor65 = xor i64 %53, %shr64, !dbg !16535
  %xor66 = xor i64 0, %xor65, !dbg !16535
  %55 = load i64*, i64** %m, align 8, !dbg !16535, !tbaa !2355
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !16535, !ctir !1741
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !16535, !tbaa !2516
  %add68 = add i64 %xor66, %56, !dbg !16535
  store i64 %add68, i64* %a, align 8, !dbg !16535, !tbaa !2516
  %57 = load i64*, i64** %m, align 8, !dbg !16535, !tbaa !2355
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !16535, !ctir !1741
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !16535, !tbaa !2516
  store i64 %58, i64* %x61, align 8, !dbg !16535, !tbaa !2516
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16535, !tbaa !2355
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !16535, !ctir !1748
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !16535
  %60 = load i64, i64* %x61, align 8, !dbg !16535, !tbaa !2516
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !16535
  %61 = load i64, i64* %a, align 8, !dbg !16535, !tbaa !2516
  %add73 = add i64 %call72, %61, !dbg !16535
  %62 = load i64, i64* %b, align 8, !dbg !16535, !tbaa !2516
  %add74 = add i64 %add73, %62, !dbg !16535
  store i64 %add74, i64* %y62, align 8, !dbg !16535, !tbaa !2516
  %63 = load i64*, i64** %m, align 8, !dbg !16535, !tbaa !2355
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !16535, !ctir !1741
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !16535, !tbaa !2516
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16535, !tbaa !2355
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !16535, !ctir !1748
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !16535
  %65 = load i64, i64* %y62, align 8, !dbg !16535, !tbaa !2516
  %shr78 = lshr i64 %65, 8, !dbg !16535
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !16535
  %66 = load i64, i64* %x61, align 8, !dbg !16535, !tbaa !2516
  %add80 = add i64 %call79, %66, !dbg !16535
  %call81 = call i64 @just(i64 %add80), !dbg !16535
  store i64 %call81, i64* %b, align 8, !dbg !16535, !tbaa !2516
  %67 = load i64*, i64** %r, align 8, !dbg !16535, !tbaa !2355
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !16535, !ctir !1741
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !16535, !tbaa !2516
  %68 = load i64*, i64** %r, align 8, !dbg !16537, !tbaa !2355
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !16537
  store i64* %add.ptr, i64** %r, align 8, !dbg !16537, !tbaa !2355
  br label %do.cond, !dbg !16538

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !16539, !tbaa !2355
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !16539
  store i64* %add.ptr83, i64** %m, align 8, !dbg !16539, !tbaa !2355
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16540, !tbaa !2355
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !16541, !ctir !1748
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !16540
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !16542
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !16543
  br i1 %cmp, label %do.body, label %do.end, !dbg !16538, !llvm.loop !16544

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !16546

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !16547, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !16551, metadata !DIExpression()), !dbg !16550
  %71 = load i64, i64* %a, align 8, !dbg !16550, !tbaa !2516
  %72 = load i64, i64* %a, align 8, !dbg !16550, !tbaa !2516
  %shl90 = shl i64 %72, 21, !dbg !16550
  %xor91 = xor i64 %71, %shl90, !dbg !16550
  %neg92 = xor i64 %xor91, -1, !dbg !16550
  %xor93 = xor i64 0, %neg92, !dbg !16550
  %73 = load i64*, i64** %m, align 8, !dbg !16550, !tbaa !2355
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !16550, !ctir !1741
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !16550, !tbaa !2516
  %add95 = add i64 %xor93, %74, !dbg !16550
  store i64 %add95, i64* %a, align 8, !dbg !16550, !tbaa !2516
  %75 = load i64*, i64** %m, align 8, !dbg !16550, !tbaa !2355
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !16550, !ctir !1741
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !16550, !tbaa !2516
  store i64 %76, i64* %x88, align 8, !dbg !16550, !tbaa !2516
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16550, !tbaa !2355
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !16550, !ctir !1748
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !16550
  %78 = load i64, i64* %x88, align 8, !dbg !16550, !tbaa !2516
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !16550
  %79 = load i64, i64* %a, align 8, !dbg !16550, !tbaa !2516
  %add100 = add i64 %call99, %79, !dbg !16550
  %80 = load i64, i64* %b, align 8, !dbg !16550, !tbaa !2516
  %add101 = add i64 %add100, %80, !dbg !16550
  store i64 %add101, i64* %y89, align 8, !dbg !16550, !tbaa !2516
  %81 = load i64*, i64** %m, align 8, !dbg !16550, !tbaa !2355
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !16550, !ctir !1741
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !16550, !tbaa !2516
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16550, !tbaa !2355
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !16550, !ctir !1748
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !16550
  %83 = load i64, i64* %y89, align 8, !dbg !16550, !tbaa !2516
  %shr105 = lshr i64 %83, 8, !dbg !16550
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !16550
  %84 = load i64, i64* %x88, align 8, !dbg !16550, !tbaa !2516
  %add107 = add i64 %call106, %84, !dbg !16550
  %call108 = call i64 @just(i64 %add107), !dbg !16550
  store i64 %call108, i64* %b, align 8, !dbg !16550, !tbaa !2516
  %85 = load i64*, i64** %r, align 8, !dbg !16550, !tbaa !2355
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !16550, !ctir !1741
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !16550, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !16552, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !16555, metadata !DIExpression()), !dbg !16554
  %86 = load i64, i64* %a, align 8, !dbg !16554, !tbaa !2516
  %87 = load i64, i64* %a, align 8, !dbg !16554, !tbaa !2516
  %call112 = call i64 @just(i64 %87), !dbg !16554
  %shr113 = lshr i64 %call112, 5, !dbg !16554
  %xor114 = xor i64 %86, %shr113, !dbg !16554
  %xor115 = xor i64 0, %xor114, !dbg !16554
  %88 = load i64*, i64** %m, align 8, !dbg !16554, !tbaa !2355
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !16554, !ctir !1741
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !16554, !tbaa !2516
  %add117 = add i64 %xor115, %89, !dbg !16554
  store i64 %add117, i64* %a, align 8, !dbg !16554, !tbaa !2516
  %90 = load i64*, i64** %m, align 8, !dbg !16554, !tbaa !2355
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !16554, !ctir !1741
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !16554, !tbaa !2516
  store i64 %91, i64* %x110, align 8, !dbg !16554, !tbaa !2516
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16554, !tbaa !2355
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !16554, !ctir !1748
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !16554
  %93 = load i64, i64* %x110, align 8, !dbg !16554, !tbaa !2516
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !16554
  %94 = load i64, i64* %a, align 8, !dbg !16554, !tbaa !2516
  %add122 = add i64 %call121, %94, !dbg !16554
  %95 = load i64, i64* %b, align 8, !dbg !16554, !tbaa !2516
  %add123 = add i64 %add122, %95, !dbg !16554
  store i64 %add123, i64* %y111, align 8, !dbg !16554, !tbaa !2516
  %96 = load i64*, i64** %m, align 8, !dbg !16554, !tbaa !2355
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !16554, !ctir !1741
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !16554, !tbaa !2516
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16554, !tbaa !2355
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !16554, !ctir !1748
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !16554
  %98 = load i64, i64* %y111, align 8, !dbg !16554, !tbaa !2516
  %shr127 = lshr i64 %98, 8, !dbg !16554
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !16554
  %99 = load i64, i64* %x110, align 8, !dbg !16554, !tbaa !2516
  %add129 = add i64 %call128, %99, !dbg !16554
  %call130 = call i64 @just(i64 %add129), !dbg !16554
  store i64 %call130, i64* %b, align 8, !dbg !16554, !tbaa !2516
  %100 = load i64*, i64** %r, align 8, !dbg !16554, !tbaa !2355
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !16554, !ctir !1741
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !16554, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !16556, metadata !DIExpression()), !dbg !16558
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !16559, metadata !DIExpression()), !dbg !16558
  %101 = load i64, i64* %a, align 8, !dbg !16558, !tbaa !2516
  %102 = load i64, i64* %a, align 8, !dbg !16558, !tbaa !2516
  %shl134 = shl i64 %102, 12, !dbg !16558
  %xor135 = xor i64 %101, %shl134, !dbg !16558
  %xor136 = xor i64 0, %xor135, !dbg !16558
  %103 = load i64*, i64** %m, align 8, !dbg !16558, !tbaa !2355
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !16558, !ctir !1741
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !16558, !tbaa !2516
  %add138 = add i64 %xor136, %104, !dbg !16558
  store i64 %add138, i64* %a, align 8, !dbg !16558, !tbaa !2516
  %105 = load i64*, i64** %m, align 8, !dbg !16558, !tbaa !2355
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !16558, !ctir !1741
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !16558, !tbaa !2516
  store i64 %106, i64* %x132, align 8, !dbg !16558, !tbaa !2516
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16558, !tbaa !2355
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !16558, !ctir !1748
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !16558
  %108 = load i64, i64* %x132, align 8, !dbg !16558, !tbaa !2516
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !16558
  %109 = load i64, i64* %a, align 8, !dbg !16558, !tbaa !2516
  %add143 = add i64 %call142, %109, !dbg !16558
  %110 = load i64, i64* %b, align 8, !dbg !16558, !tbaa !2516
  %add144 = add i64 %add143, %110, !dbg !16558
  store i64 %add144, i64* %y133, align 8, !dbg !16558, !tbaa !2516
  %111 = load i64*, i64** %m, align 8, !dbg !16558, !tbaa !2355
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !16558, !ctir !1741
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !16558, !tbaa !2516
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16558, !tbaa !2355
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !16558, !ctir !1748
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !16558
  %113 = load i64, i64* %y133, align 8, !dbg !16558, !tbaa !2516
  %shr148 = lshr i64 %113, 8, !dbg !16558
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !16558
  %114 = load i64, i64* %x132, align 8, !dbg !16558, !tbaa !2516
  %add150 = add i64 %call149, %114, !dbg !16558
  %call151 = call i64 @just(i64 %add150), !dbg !16558
  store i64 %call151, i64* %b, align 8, !dbg !16558, !tbaa !2516
  %115 = load i64*, i64** %r, align 8, !dbg !16558, !tbaa !2355
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !16558, !ctir !1741
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !16558, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !16560, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !16563, metadata !DIExpression()), !dbg !16562
  %116 = load i64, i64* %a, align 8, !dbg !16562, !tbaa !2516
  %117 = load i64, i64* %a, align 8, !dbg !16562, !tbaa !2516
  %call155 = call i64 @just(i64 %117), !dbg !16562
  %shr156 = lshr i64 %call155, 33, !dbg !16562
  %xor157 = xor i64 %116, %shr156, !dbg !16562
  %xor158 = xor i64 0, %xor157, !dbg !16562
  %118 = load i64*, i64** %m, align 8, !dbg !16562, !tbaa !2355
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !16562, !ctir !1741
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !16562, !tbaa !2516
  %add160 = add i64 %xor158, %119, !dbg !16562
  store i64 %add160, i64* %a, align 8, !dbg !16562, !tbaa !2516
  %120 = load i64*, i64** %m, align 8, !dbg !16562, !tbaa !2355
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !16562, !ctir !1741
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !16562, !tbaa !2516
  store i64 %121, i64* %x153, align 8, !dbg !16562, !tbaa !2516
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16562, !tbaa !2355
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !16562, !ctir !1748
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !16562
  %123 = load i64, i64* %x153, align 8, !dbg !16562, !tbaa !2516
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !16562
  %124 = load i64, i64* %a, align 8, !dbg !16562, !tbaa !2516
  %add165 = add i64 %call164, %124, !dbg !16562
  %125 = load i64, i64* %b, align 8, !dbg !16562, !tbaa !2516
  %add166 = add i64 %add165, %125, !dbg !16562
  store i64 %add166, i64* %y154, align 8, !dbg !16562, !tbaa !2516
  %126 = load i64*, i64** %m, align 8, !dbg !16562, !tbaa !2355
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !16562, !ctir !1741
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !16562, !tbaa !2516
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16562, !tbaa !2355
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !16562, !ctir !1748
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !16562
  %128 = load i64, i64* %y154, align 8, !dbg !16562, !tbaa !2516
  %shr170 = lshr i64 %128, 8, !dbg !16562
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !16562
  %129 = load i64, i64* %x153, align 8, !dbg !16562, !tbaa !2516
  %add172 = add i64 %call171, %129, !dbg !16562
  %call173 = call i64 @just(i64 %add172), !dbg !16562
  store i64 %call173, i64* %b, align 8, !dbg !16562, !tbaa !2516
  %130 = load i64*, i64** %r, align 8, !dbg !16562, !tbaa !2355
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !16562, !ctir !1741
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !16562, !tbaa !2516
  %131 = load i64*, i64** %r, align 8, !dbg !16564, !tbaa !2355
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !16564
  store i64* %add.ptr175, i64** %r, align 8, !dbg !16564, !tbaa !2355
  br label %do.cond176, !dbg !16565

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !16566, !tbaa !2355
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !16566
  store i64* %add.ptr177, i64** %m, align 8, !dbg !16566, !tbaa !2355
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16567, !tbaa !2355
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !16568, !ctir !1748
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !16567
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !16569
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !16570
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !16565, !llvm.loop !16571

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !16573, !tbaa !2516
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16574, !tbaa !2355
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !16575, !ctir !1748
  store i64 %134, i64* %a183, align 8, !dbg !16576, !tbaa !16501, !ctir !1707
  %136 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2516
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16578, !tbaa !2355
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !16579, !ctir !1748
  store i64 %136, i64* %b184, align 8, !dbg !16580, !tbaa !16506, !ctir !1707
  ret void, !dbg !16581
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !16582 !ctir !1756 {
entry:
  %m.addr = alloca i64*, align 8, !ctir !1758
  %x.addr = alloca i64, align 8, !ctir !1707
  %void_m = alloca i8*, align 8, !ctir !85
  %base_p = alloca i8*, align 8, !ctir !87
  %word_p = alloca i8*, align 8, !ctir !85
  %p = alloca i64*, align 8, !ctir !1758
  store i64* %m, i64** %m.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !16583, metadata !DIExpression()), !dbg !16584
  store i64 %x, i64* %x.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !16585, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !16587, metadata !DIExpression()), !dbg !16590
  %0 = load i64*, i64** %m.addr, align 8, !dbg !16591, !tbaa !2355
  %1 = bitcast i64* %0 to i8*, !dbg !16591
  store i8* %1, i8** %void_m, align 8, !dbg !16590, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !16592, metadata !DIExpression()), !dbg !16593
  %2 = load i8*, i8** %void_m, align 8, !dbg !16594, !tbaa !2355
  store i8* %2, i8** %base_p, align 8, !dbg !16593, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !16595, metadata !DIExpression()), !dbg !16596
  %3 = load i8*, i8** %base_p, align 8, !dbg !16597, !tbaa !2355
  %4 = load i64, i64* %x.addr, align 8, !dbg !16598, !tbaa !2516
  %and = and i64 %4, 2040, !dbg !16599
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !16600
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !16596, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %p, metadata !16601, metadata !DIExpression()), !dbg !16602
  %5 = load i8*, i8** %word_p, align 8, !dbg !16603, !tbaa !2355
  %6 = bitcast i8* %5 to i64*, !dbg !16603
  store i64* %6, i64** %p, align 8, !dbg !16602, !tbaa !2355
  %7 = load i64*, i64** %p, align 8, !dbg !16604, !tbaa !2355
  %8 = load i64, i64* %7, align 8, !dbg !16605, !tbaa !2516, !ctir !1759
  ret i64 %8, !dbg !16606
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !16607 !ctir !1760 {
entry:
  %a.addr = alloca i64, align 8, !ctir !1707
  %desired_bits = alloca i64, align 8, !ctir !1707
  store i64 %a, i64* %a.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !16608, metadata !DIExpression()), !dbg !16609
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !16610, metadata !DIExpression()), !dbg !16611
  store i64 -1, i64* %desired_bits, align 8, !dbg !16611, !tbaa !2516
  %0 = load i64, i64* %a.addr, align 8, !dbg !16612, !tbaa !2516
  %1 = load i64, i64* %desired_bits, align 8, !dbg !16613, !tbaa !2516
  %and = and i64 %0, %1, !dbg !16614
  ret i64 %and, !dbg !16615
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !16616 !ctir !1754 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8, !ctir !1747
  %a = alloca i64, align 8, !ctir !1707
  %b = alloca i64, align 8, !ctir !1707
  %c = alloca i64, align 8, !ctir !1707
  %d = alloca i64, align 8, !ctir !1707
  %e = alloca i64, align 8, !ctir !1707
  %f = alloca i64, align 8, !ctir !1707
  %g = alloca i64, align 8, !ctir !1707
  %h = alloca i64, align 8, !ctir !1707
  %i = alloca i32, align 4, !ctir !5
  %i99 = alloca i32, align 4, !ctir !5
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !16617, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.declare(metadata i64* %a, metadata !16619, metadata !DIExpression()), !dbg !16620
  store i64 7240739780546808700, i64* %a, align 8, !dbg !16620, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %b, metadata !16621, metadata !DIExpression()), !dbg !16622
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !16622, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %c, metadata !16623, metadata !DIExpression()), !dbg !16624
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !16624, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %d, metadata !16625, metadata !DIExpression()), !dbg !16626
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !16626, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %e, metadata !16627, metadata !DIExpression()), !dbg !16628
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !16628, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %f, metadata !16629, metadata !DIExpression()), !dbg !16630
  store i64 5259722845879046933, i64* %f, align 8, !dbg !16630, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %g, metadata !16631, metadata !DIExpression()), !dbg !16632
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !16632, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %h, metadata !16633, metadata !DIExpression()), !dbg !16634
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !16634, !tbaa !2516
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16635, metadata !DIExpression()), !dbg !16637
  store i32 0, i32* %i, align 4, !dbg !16638, !tbaa !2342
  br label %for.cond, !dbg !16638

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16640, !tbaa !2342
  %cmp = icmp slt i32 %0, 256, !dbg !16640
  br i1 %cmp, label %for.body, label %for.end, !dbg !16638

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !16642, !ctir !1748
  %2 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %idxprom = sext i32 %2 to i64, !dbg !16642
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !16642, !ctir !1706
  %3 = load i64, i64* %arrayidx, align 8, !dbg !16642, !tbaa !2516
  %4 = load i64, i64* %a, align 8, !dbg !16642, !tbaa !2516
  %add = add i64 %4, %3, !dbg !16642
  store i64 %add, i64* %a, align 8, !dbg !16642, !tbaa !2516
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !16642, !ctir !1748
  %6 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add2 = add nsw i32 %6, 1, !dbg !16642
  %idxprom3 = sext i32 %add2 to i64, !dbg !16642
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !16642, !ctir !1706
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !16642, !tbaa !2516
  %8 = load i64, i64* %b, align 8, !dbg !16642, !tbaa !2516
  %add5 = add i64 %8, %7, !dbg !16642
  store i64 %add5, i64* %b, align 8, !dbg !16642, !tbaa !2516
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !16642, !ctir !1748
  %10 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add7 = add nsw i32 %10, 2, !dbg !16642
  %idxprom8 = sext i32 %add7 to i64, !dbg !16642
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !16642, !ctir !1706
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !16642, !tbaa !2516
  %12 = load i64, i64* %c, align 8, !dbg !16642, !tbaa !2516
  %add10 = add i64 %12, %11, !dbg !16642
  store i64 %add10, i64* %c, align 8, !dbg !16642, !tbaa !2516
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !16642, !ctir !1748
  %14 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add12 = add nsw i32 %14, 3, !dbg !16642
  %idxprom13 = sext i32 %add12 to i64, !dbg !16642
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !16642, !ctir !1706
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !16642, !tbaa !2516
  %16 = load i64, i64* %d, align 8, !dbg !16642, !tbaa !2516
  %add15 = add i64 %16, %15, !dbg !16642
  store i64 %add15, i64* %d, align 8, !dbg !16642, !tbaa !2516
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !16642, !ctir !1748
  %18 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add17 = add nsw i32 %18, 4, !dbg !16642
  %idxprom18 = sext i32 %add17 to i64, !dbg !16642
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !16642, !ctir !1706
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !16642, !tbaa !2516
  %20 = load i64, i64* %e, align 8, !dbg !16642, !tbaa !2516
  %add20 = add i64 %20, %19, !dbg !16642
  store i64 %add20, i64* %e, align 8, !dbg !16642, !tbaa !2516
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !16642, !ctir !1748
  %22 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add22 = add nsw i32 %22, 5, !dbg !16642
  %idxprom23 = sext i32 %add22 to i64, !dbg !16642
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !16642, !ctir !1706
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !16642, !tbaa !2516
  %24 = load i64, i64* %f, align 8, !dbg !16642, !tbaa !2516
  %add25 = add i64 %24, %23, !dbg !16642
  store i64 %add25, i64* %f, align 8, !dbg !16642, !tbaa !2516
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !16642, !ctir !1748
  %26 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add27 = add nsw i32 %26, 6, !dbg !16642
  %idxprom28 = sext i32 %add27 to i64, !dbg !16642
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !16642, !ctir !1706
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !16642, !tbaa !2516
  %28 = load i64, i64* %g, align 8, !dbg !16642, !tbaa !2516
  %add30 = add i64 %28, %27, !dbg !16642
  store i64 %add30, i64* %g, align 8, !dbg !16642, !tbaa !2516
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !16642, !ctir !1748
  %30 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add32 = add nsw i32 %30, 7, !dbg !16642
  %idxprom33 = sext i32 %add32 to i64, !dbg !16642
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !16642, !ctir !1706
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !16642, !tbaa !2516
  %32 = load i64, i64* %h, align 8, !dbg !16642, !tbaa !2516
  %add35 = add i64 %32, %31, !dbg !16642
  store i64 %add35, i64* %h, align 8, !dbg !16642, !tbaa !2516
  %33 = load i64, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %34 = load i64, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %sub = sub i64 %34, %33, !dbg !16644
  store i64 %sub, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %35 = load i64, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %call = call i64 @just(i64 %35), !dbg !16644
  %shr = lshr i64 %call, 9, !dbg !16644
  %36 = load i64, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %xor = xor i64 %36, %shr, !dbg !16644
  store i64 %xor, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %37 = load i64, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %38 = load i64, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %add36 = add i64 %38, %37, !dbg !16644
  store i64 %add36, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %39 = load i64, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %40 = load i64, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %sub37 = sub i64 %40, %39, !dbg !16644
  store i64 %sub37, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %41 = load i64, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %shl = shl i64 %41, 9, !dbg !16644
  %42 = load i64, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %xor38 = xor i64 %42, %shl, !dbg !16644
  store i64 %xor38, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %43 = load i64, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %44 = load i64, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %add39 = add i64 %44, %43, !dbg !16644
  store i64 %add39, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %45 = load i64, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %46 = load i64, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %sub40 = sub i64 %46, %45, !dbg !16644
  store i64 %sub40, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %47 = load i64, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %call41 = call i64 @just(i64 %47), !dbg !16644
  %shr42 = lshr i64 %call41, 23, !dbg !16644
  %48 = load i64, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %xor43 = xor i64 %48, %shr42, !dbg !16644
  store i64 %xor43, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %49 = load i64, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %50 = load i64, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %add44 = add i64 %50, %49, !dbg !16644
  store i64 %add44, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %51 = load i64, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %52 = load i64, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %sub45 = sub i64 %52, %51, !dbg !16644
  store i64 %sub45, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %53 = load i64, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %shl46 = shl i64 %53, 15, !dbg !16644
  %54 = load i64, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %xor47 = xor i64 %54, %shl46, !dbg !16644
  store i64 %xor47, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %55 = load i64, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %56 = load i64, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %add48 = add i64 %56, %55, !dbg !16644
  store i64 %add48, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %57 = load i64, i64* %a, align 8, !dbg !16644, !tbaa !2516
  %58 = load i64, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %sub49 = sub i64 %58, %57, !dbg !16644
  store i64 %sub49, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %59 = load i64, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %call50 = call i64 @just(i64 %59), !dbg !16644
  %shr51 = lshr i64 %call50, 14, !dbg !16644
  %60 = load i64, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %xor52 = xor i64 %60, %shr51, !dbg !16644
  store i64 %xor52, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %61 = load i64, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %62 = load i64, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %add53 = add i64 %62, %61, !dbg !16644
  store i64 %add53, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %63 = load i64, i64* %b, align 8, !dbg !16644, !tbaa !2516
  %64 = load i64, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %sub54 = sub i64 %64, %63, !dbg !16644
  store i64 %sub54, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %65 = load i64, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %shl55 = shl i64 %65, 20, !dbg !16644
  %66 = load i64, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %xor56 = xor i64 %66, %shl55, !dbg !16644
  store i64 %xor56, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %67 = load i64, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %68 = load i64, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %add57 = add i64 %68, %67, !dbg !16644
  store i64 %add57, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %69 = load i64, i64* %c, align 8, !dbg !16644, !tbaa !2516
  %70 = load i64, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %sub58 = sub i64 %70, %69, !dbg !16644
  store i64 %sub58, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %71 = load i64, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %call59 = call i64 @just(i64 %71), !dbg !16644
  %shr60 = lshr i64 %call59, 17, !dbg !16644
  %72 = load i64, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %xor61 = xor i64 %72, %shr60, !dbg !16644
  store i64 %xor61, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %73 = load i64, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %74 = load i64, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %add62 = add i64 %74, %73, !dbg !16644
  store i64 %add62, i64* %f, align 8, !dbg !16644, !tbaa !2516
  %75 = load i64, i64* %d, align 8, !dbg !16644, !tbaa !2516
  %76 = load i64, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %sub63 = sub i64 %76, %75, !dbg !16644
  store i64 %sub63, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %77 = load i64, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %shl64 = shl i64 %77, 14, !dbg !16644
  %78 = load i64, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %xor65 = xor i64 %78, %shl64, !dbg !16644
  store i64 %xor65, i64* %e, align 8, !dbg !16644, !tbaa !2516
  %79 = load i64, i64* %h, align 8, !dbg !16644, !tbaa !2516
  %80 = load i64, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %add66 = add i64 %80, %79, !dbg !16644
  store i64 %add66, i64* %g, align 8, !dbg !16644, !tbaa !2516
  %81 = load i64, i64* %a, align 8, !dbg !16642, !tbaa !2516
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !16642, !ctir !1748
  %83 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %idxprom68 = sext i32 %83 to i64, !dbg !16642
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !16642, !ctir !1706
  store i64 %81, i64* %arrayidx69, align 8, !dbg !16642, !tbaa !2516
  %84 = load i64, i64* %b, align 8, !dbg !16642, !tbaa !2516
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !16642, !ctir !1748
  %86 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add71 = add nsw i32 %86, 1, !dbg !16642
  %idxprom72 = sext i32 %add71 to i64, !dbg !16642
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !16642, !ctir !1706
  store i64 %84, i64* %arrayidx73, align 8, !dbg !16642, !tbaa !2516
  %87 = load i64, i64* %c, align 8, !dbg !16642, !tbaa !2516
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !16642, !ctir !1748
  %89 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add75 = add nsw i32 %89, 2, !dbg !16642
  %idxprom76 = sext i32 %add75 to i64, !dbg !16642
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !16642, !ctir !1706
  store i64 %87, i64* %arrayidx77, align 8, !dbg !16642, !tbaa !2516
  %90 = load i64, i64* %d, align 8, !dbg !16642, !tbaa !2516
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !16642, !ctir !1748
  %92 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add79 = add nsw i32 %92, 3, !dbg !16642
  %idxprom80 = sext i32 %add79 to i64, !dbg !16642
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !16642, !ctir !1706
  store i64 %90, i64* %arrayidx81, align 8, !dbg !16642, !tbaa !2516
  %93 = load i64, i64* %e, align 8, !dbg !16642, !tbaa !2516
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !16642, !ctir !1748
  %95 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add83 = add nsw i32 %95, 4, !dbg !16642
  %idxprom84 = sext i32 %add83 to i64, !dbg !16642
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !16642, !ctir !1706
  store i64 %93, i64* %arrayidx85, align 8, !dbg !16642, !tbaa !2516
  %96 = load i64, i64* %f, align 8, !dbg !16642, !tbaa !2516
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !16642, !ctir !1748
  %98 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add87 = add nsw i32 %98, 5, !dbg !16642
  %idxprom88 = sext i32 %add87 to i64, !dbg !16642
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !16642, !ctir !1706
  store i64 %96, i64* %arrayidx89, align 8, !dbg !16642, !tbaa !2516
  %99 = load i64, i64* %g, align 8, !dbg !16642, !tbaa !2516
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !16642, !ctir !1748
  %101 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add91 = add nsw i32 %101, 6, !dbg !16642
  %idxprom92 = sext i32 %add91 to i64, !dbg !16642
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !16642, !ctir !1706
  store i64 %99, i64* %arrayidx93, align 8, !dbg !16642, !tbaa !2516
  %102 = load i64, i64* %h, align 8, !dbg !16642, !tbaa !2516
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16642, !tbaa !2355
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !16642, !ctir !1748
  %104 = load i32, i32* %i, align 4, !dbg !16642, !tbaa !2342
  %add95 = add nsw i32 %104, 7, !dbg !16642
  %idxprom96 = sext i32 %add95 to i64, !dbg !16642
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !16642, !ctir !1706
  store i64 %102, i64* %arrayidx97, align 8, !dbg !16642, !tbaa !2516
  br label %for.inc, !dbg !16642

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !16640, !tbaa !2342
  %add98 = add nsw i32 %105, 8, !dbg !16640
  store i32 %add98, i32* %i, align 4, !dbg !16640, !tbaa !2342
  br label %for.cond, !dbg !16640, !llvm.loop !16646

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !16647, metadata !DIExpression()), !dbg !16649
  store i32 0, i32* %i99, align 4, !dbg !16650, !tbaa !2342
  br label %for.cond100, !dbg !16650

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !16652, !tbaa !2342
  %cmp101 = icmp slt i32 %106, 256, !dbg !16652
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !16650

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !16654, !ctir !1748
  %108 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %idxprom104 = sext i32 %108 to i64, !dbg !16654
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !16654, !ctir !1706
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !16654, !tbaa !2516
  %110 = load i64, i64* %a, align 8, !dbg !16654, !tbaa !2516
  %add106 = add i64 %110, %109, !dbg !16654
  store i64 %add106, i64* %a, align 8, !dbg !16654, !tbaa !2516
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !16654, !ctir !1748
  %112 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add108 = add nsw i32 %112, 1, !dbg !16654
  %idxprom109 = sext i32 %add108 to i64, !dbg !16654
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !16654, !ctir !1706
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !16654, !tbaa !2516
  %114 = load i64, i64* %b, align 8, !dbg !16654, !tbaa !2516
  %add111 = add i64 %114, %113, !dbg !16654
  store i64 %add111, i64* %b, align 8, !dbg !16654, !tbaa !2516
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !16654, !ctir !1748
  %116 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add113 = add nsw i32 %116, 2, !dbg !16654
  %idxprom114 = sext i32 %add113 to i64, !dbg !16654
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !16654, !ctir !1706
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !16654, !tbaa !2516
  %118 = load i64, i64* %c, align 8, !dbg !16654, !tbaa !2516
  %add116 = add i64 %118, %117, !dbg !16654
  store i64 %add116, i64* %c, align 8, !dbg !16654, !tbaa !2516
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !16654, !ctir !1748
  %120 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add118 = add nsw i32 %120, 3, !dbg !16654
  %idxprom119 = sext i32 %add118 to i64, !dbg !16654
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !16654, !ctir !1706
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !16654, !tbaa !2516
  %122 = load i64, i64* %d, align 8, !dbg !16654, !tbaa !2516
  %add121 = add i64 %122, %121, !dbg !16654
  store i64 %add121, i64* %d, align 8, !dbg !16654, !tbaa !2516
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !16654, !ctir !1748
  %124 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add123 = add nsw i32 %124, 4, !dbg !16654
  %idxprom124 = sext i32 %add123 to i64, !dbg !16654
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !16654, !ctir !1706
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !16654, !tbaa !2516
  %126 = load i64, i64* %e, align 8, !dbg !16654, !tbaa !2516
  %add126 = add i64 %126, %125, !dbg !16654
  store i64 %add126, i64* %e, align 8, !dbg !16654, !tbaa !2516
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !16654, !ctir !1748
  %128 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add128 = add nsw i32 %128, 5, !dbg !16654
  %idxprom129 = sext i32 %add128 to i64, !dbg !16654
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !16654, !ctir !1706
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !16654, !tbaa !2516
  %130 = load i64, i64* %f, align 8, !dbg !16654, !tbaa !2516
  %add131 = add i64 %130, %129, !dbg !16654
  store i64 %add131, i64* %f, align 8, !dbg !16654, !tbaa !2516
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !16654, !ctir !1748
  %132 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add133 = add nsw i32 %132, 6, !dbg !16654
  %idxprom134 = sext i32 %add133 to i64, !dbg !16654
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !16654, !ctir !1706
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !16654, !tbaa !2516
  %134 = load i64, i64* %g, align 8, !dbg !16654, !tbaa !2516
  %add136 = add i64 %134, %133, !dbg !16654
  store i64 %add136, i64* %g, align 8, !dbg !16654, !tbaa !2516
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !16654, !ctir !1748
  %136 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add138 = add nsw i32 %136, 7, !dbg !16654
  %idxprom139 = sext i32 %add138 to i64, !dbg !16654
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !16654, !ctir !1706
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !16654, !tbaa !2516
  %138 = load i64, i64* %h, align 8, !dbg !16654, !tbaa !2516
  %add141 = add i64 %138, %137, !dbg !16654
  store i64 %add141, i64* %h, align 8, !dbg !16654, !tbaa !2516
  %139 = load i64, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %140 = load i64, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %sub142 = sub i64 %140, %139, !dbg !16656
  store i64 %sub142, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %141 = load i64, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %call143 = call i64 @just(i64 %141), !dbg !16656
  %shr144 = lshr i64 %call143, 9, !dbg !16656
  %142 = load i64, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %xor145 = xor i64 %142, %shr144, !dbg !16656
  store i64 %xor145, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %143 = load i64, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %144 = load i64, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %add146 = add i64 %144, %143, !dbg !16656
  store i64 %add146, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %145 = load i64, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %146 = load i64, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %sub147 = sub i64 %146, %145, !dbg !16656
  store i64 %sub147, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %147 = load i64, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %shl148 = shl i64 %147, 9, !dbg !16656
  %148 = load i64, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %xor149 = xor i64 %148, %shl148, !dbg !16656
  store i64 %xor149, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %149 = load i64, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %150 = load i64, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %add150 = add i64 %150, %149, !dbg !16656
  store i64 %add150, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %151 = load i64, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %152 = load i64, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %sub151 = sub i64 %152, %151, !dbg !16656
  store i64 %sub151, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %153 = load i64, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %call152 = call i64 @just(i64 %153), !dbg !16656
  %shr153 = lshr i64 %call152, 23, !dbg !16656
  %154 = load i64, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %xor154 = xor i64 %154, %shr153, !dbg !16656
  store i64 %xor154, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %155 = load i64, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %156 = load i64, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %add155 = add i64 %156, %155, !dbg !16656
  store i64 %add155, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %157 = load i64, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %158 = load i64, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %sub156 = sub i64 %158, %157, !dbg !16656
  store i64 %sub156, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %159 = load i64, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %shl157 = shl i64 %159, 15, !dbg !16656
  %160 = load i64, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %xor158 = xor i64 %160, %shl157, !dbg !16656
  store i64 %xor158, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %161 = load i64, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %162 = load i64, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %add159 = add i64 %162, %161, !dbg !16656
  store i64 %add159, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %163 = load i64, i64* %a, align 8, !dbg !16656, !tbaa !2516
  %164 = load i64, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %sub160 = sub i64 %164, %163, !dbg !16656
  store i64 %sub160, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %165 = load i64, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %call161 = call i64 @just(i64 %165), !dbg !16656
  %shr162 = lshr i64 %call161, 14, !dbg !16656
  %166 = load i64, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %xor163 = xor i64 %166, %shr162, !dbg !16656
  store i64 %xor163, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %167 = load i64, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %168 = load i64, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %add164 = add i64 %168, %167, !dbg !16656
  store i64 %add164, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %169 = load i64, i64* %b, align 8, !dbg !16656, !tbaa !2516
  %170 = load i64, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %sub165 = sub i64 %170, %169, !dbg !16656
  store i64 %sub165, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %171 = load i64, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %shl166 = shl i64 %171, 20, !dbg !16656
  %172 = load i64, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %xor167 = xor i64 %172, %shl166, !dbg !16656
  store i64 %xor167, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %173 = load i64, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %174 = load i64, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %add168 = add i64 %174, %173, !dbg !16656
  store i64 %add168, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %175 = load i64, i64* %c, align 8, !dbg !16656, !tbaa !2516
  %176 = load i64, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %sub169 = sub i64 %176, %175, !dbg !16656
  store i64 %sub169, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %177 = load i64, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %call170 = call i64 @just(i64 %177), !dbg !16656
  %shr171 = lshr i64 %call170, 17, !dbg !16656
  %178 = load i64, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %xor172 = xor i64 %178, %shr171, !dbg !16656
  store i64 %xor172, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %179 = load i64, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %180 = load i64, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %add173 = add i64 %180, %179, !dbg !16656
  store i64 %add173, i64* %f, align 8, !dbg !16656, !tbaa !2516
  %181 = load i64, i64* %d, align 8, !dbg !16656, !tbaa !2516
  %182 = load i64, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %sub174 = sub i64 %182, %181, !dbg !16656
  store i64 %sub174, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %183 = load i64, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %shl175 = shl i64 %183, 14, !dbg !16656
  %184 = load i64, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %xor176 = xor i64 %184, %shl175, !dbg !16656
  store i64 %xor176, i64* %e, align 8, !dbg !16656, !tbaa !2516
  %185 = load i64, i64* %h, align 8, !dbg !16656, !tbaa !2516
  %186 = load i64, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %add177 = add i64 %186, %185, !dbg !16656
  store i64 %add177, i64* %g, align 8, !dbg !16656, !tbaa !2516
  %187 = load i64, i64* %a, align 8, !dbg !16654, !tbaa !2516
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !16654, !ctir !1748
  %189 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %idxprom179 = sext i32 %189 to i64, !dbg !16654
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !16654, !ctir !1706
  store i64 %187, i64* %arrayidx180, align 8, !dbg !16654, !tbaa !2516
  %190 = load i64, i64* %b, align 8, !dbg !16654, !tbaa !2516
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !16654, !ctir !1748
  %192 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add182 = add nsw i32 %192, 1, !dbg !16654
  %idxprom183 = sext i32 %add182 to i64, !dbg !16654
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !16654, !ctir !1706
  store i64 %190, i64* %arrayidx184, align 8, !dbg !16654, !tbaa !2516
  %193 = load i64, i64* %c, align 8, !dbg !16654, !tbaa !2516
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !16654, !ctir !1748
  %195 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add186 = add nsw i32 %195, 2, !dbg !16654
  %idxprom187 = sext i32 %add186 to i64, !dbg !16654
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !16654, !ctir !1706
  store i64 %193, i64* %arrayidx188, align 8, !dbg !16654, !tbaa !2516
  %196 = load i64, i64* %d, align 8, !dbg !16654, !tbaa !2516
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !16654, !ctir !1748
  %198 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add190 = add nsw i32 %198, 3, !dbg !16654
  %idxprom191 = sext i32 %add190 to i64, !dbg !16654
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !16654, !ctir !1706
  store i64 %196, i64* %arrayidx192, align 8, !dbg !16654, !tbaa !2516
  %199 = load i64, i64* %e, align 8, !dbg !16654, !tbaa !2516
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !16654, !ctir !1748
  %201 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add194 = add nsw i32 %201, 4, !dbg !16654
  %idxprom195 = sext i32 %add194 to i64, !dbg !16654
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !16654, !ctir !1706
  store i64 %199, i64* %arrayidx196, align 8, !dbg !16654, !tbaa !2516
  %202 = load i64, i64* %f, align 8, !dbg !16654, !tbaa !2516
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !16654, !ctir !1748
  %204 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add198 = add nsw i32 %204, 5, !dbg !16654
  %idxprom199 = sext i32 %add198 to i64, !dbg !16654
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !16654, !ctir !1706
  store i64 %202, i64* %arrayidx200, align 8, !dbg !16654, !tbaa !2516
  %205 = load i64, i64* %g, align 8, !dbg !16654, !tbaa !2516
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !16654, !ctir !1748
  %207 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add202 = add nsw i32 %207, 6, !dbg !16654
  %idxprom203 = sext i32 %add202 to i64, !dbg !16654
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !16654, !ctir !1706
  store i64 %205, i64* %arrayidx204, align 8, !dbg !16654, !tbaa !2516
  %208 = load i64, i64* %h, align 8, !dbg !16654, !tbaa !2516
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16654, !tbaa !2355
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !16654, !ctir !1748
  %210 = load i32, i32* %i99, align 4, !dbg !16654, !tbaa !2342
  %add206 = add nsw i32 %210, 7, !dbg !16654
  %idxprom207 = sext i32 %add206 to i64, !dbg !16654
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !16654, !ctir !1706
  store i64 %208, i64* %arrayidx208, align 8, !dbg !16654, !tbaa !2516
  br label %for.inc209, !dbg !16654

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !16652, !tbaa !2342
  %add210 = add nsw i32 %211, 8, !dbg !16652
  store i32 %add210, i32* %i99, align 4, !dbg !16652, !tbaa !2342
  br label %for.cond100, !dbg !16652, !llvm.loop !16658

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16659, !tbaa !2355
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !16660, !ctir !1748
  store i64 0, i64* %c212, align 8, !dbg !16661, !tbaa !16510, !ctir !1707
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16662, !tbaa !2355
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !16663, !ctir !1748
  store i64 0, i64* %b213, align 8, !dbg !16664, !tbaa !16506, !ctir !1707
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16665, !tbaa !2355
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !16666, !ctir !1748
  store i64 0, i64* %a214, align 8, !dbg !16667, !tbaa !16501, !ctir !1707
  ret void, !dbg !16668
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readtokens0_init(%struct.Tokens* %t) #4 !dbg !16669 !ctir !1765 {
entry:
  %t.addr = alloca %struct.Tokens*, align 8, !ctir !1767
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16671, metadata !DIExpression()), !dbg !16672
  %0 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16673, !tbaa !2355
  %n_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %0, i32 0, i32 0, !dbg !16674, !ctir !1768
  store i64 0, i64* %n_tok, align 8, !dbg !16675, !tbaa !3145, !ctir !52
  %1 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16676, !tbaa !2355
  %tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %1, i32 0, i32 1, !dbg !16677, !ctir !1768
  store i8** null, i8*** %tok, align 8, !dbg !16678, !tbaa !3154, !ctir !91
  %2 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16679, !tbaa !2355
  %tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %2, i32 0, i32 2, !dbg !16680, !ctir !1768
  store i64* null, i64** %tok_len, align 8, !dbg !16681, !tbaa !16682, !ctir !354
  %3 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16683, !tbaa !2355
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %3, i32 0, i32 3, !dbg !16683, !ctir !1768
  %call = call i32 @_obstack_begin(%struct.obstack* %o_data, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !16683
  %4 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16684, !tbaa !2355
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %4, i32 0, i32 4, !dbg !16684, !ctir !1768
  %call1 = call i32 @_obstack_begin(%struct.obstack* %o_tok, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !16684
  %5 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16685, !tbaa !2355
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %5, i32 0, i32 5, !dbg !16685, !ctir !1768
  %call2 = call i32 @_obstack_begin(%struct.obstack* %o_tok_len, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !16685
  ret void, !dbg !16686
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readtokens0_free(%struct.Tokens* %t) #4 !dbg !16687 !ctir !1765 {
entry:
  %t.addr = alloca %struct.Tokens*, align 8, !ctir !1767
  %__o = alloca %struct.obstack*, align 8, !ctir !1810
  %__obj = alloca i8*, align 8, !ctir !47
  %__o2 = alloca %struct.obstack*, align 8, !ctir !1810
  %__obj3 = alloca i8*, align 8, !ctir !47
  %__o14 = alloca %struct.obstack*, align 8, !ctir !1810
  %__obj15 = alloca i8*, align 8, !ctir !47
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16688, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !16690, metadata !DIExpression()), !dbg !16692
  %0 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16692, !tbaa !2355
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %0, i32 0, i32 3, !dbg !16692, !ctir !1768
  store %struct.obstack* %o_data, %struct.obstack** %__o, align 8, !dbg !16692, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__obj, metadata !16693, metadata !DIExpression()), !dbg !16692
  store i8* null, i8** %__obj, align 8, !dbg !16692, !tbaa !2355
  %1 = load i8*, i8** %__obj, align 8, !dbg !16694, !tbaa !2355
  %2 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16694, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 1, !dbg !16694, !ctir !1775
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !16694, !tbaa !16696, !ctir !1779
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !16694
  %cmp = icmp ugt i8* %1, %4, !dbg !16694
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !16694

land.lhs.true:                                    ; preds = %entry
  %5 = load i8*, i8** %__obj, align 8, !dbg !16694, !tbaa !2355
  %6 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16694, !tbaa !2355
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 4, !dbg !16694, !ctir !1775
  %7 = load i8*, i8** %chunk_limit, align 8, !dbg !16694, !tbaa !16697, !ctir !7
  %cmp1 = icmp ult i8* %5, %7, !dbg !16694
  br i1 %cmp1, label %if.then, label %if.else, !dbg !16692

if.then:                                          ; preds = %land.lhs.true
  %8 = load i8*, i8** %__obj, align 8, !dbg !16694, !tbaa !2355
  %9 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16694, !tbaa !2355
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 2, !dbg !16694, !ctir !1775
  store i8* %8, i8** %object_base, align 8, !dbg !16694, !tbaa !16698, !ctir !7
  %10 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16694, !tbaa !2355
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3, !dbg !16694, !ctir !1775
  store i8* %8, i8** %next_free, align 8, !dbg !16694, !tbaa !16699, !ctir !7
  br label %if.end, !dbg !16694

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16694, !tbaa !2355
  %12 = load i8*, i8** %__obj, align 8, !dbg !16694, !tbaa !2355
  call void @_obstack_free(%struct.obstack* %11, i8* %12), !dbg !16694
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o2, metadata !16700, metadata !DIExpression()), !dbg !16702
  %13 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16702, !tbaa !2355
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %13, i32 0, i32 4, !dbg !16702, !ctir !1768
  store %struct.obstack* %o_tok, %struct.obstack** %__o2, align 8, !dbg !16702, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__obj3, metadata !16703, metadata !DIExpression()), !dbg !16702
  store i8* null, i8** %__obj3, align 8, !dbg !16702, !tbaa !2355
  %14 = load i8*, i8** %__obj3, align 8, !dbg !16704, !tbaa !2355
  %15 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16704, !tbaa !2355
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 1, !dbg !16704, !ctir !1775
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk4, align 8, !dbg !16704, !tbaa !16696, !ctir !1779
  %17 = bitcast %struct._obstack_chunk* %16 to i8*, !dbg !16704
  %cmp5 = icmp ugt i8* %14, %17, !dbg !16704
  br i1 %cmp5, label %land.lhs.true6, label %if.else12, !dbg !16704

land.lhs.true6:                                   ; preds = %if.end
  %18 = load i8*, i8** %__obj3, align 8, !dbg !16704, !tbaa !2355
  %19 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16704, !tbaa !2355
  %chunk_limit7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 4, !dbg !16704, !ctir !1775
  %20 = load i8*, i8** %chunk_limit7, align 8, !dbg !16704, !tbaa !16697, !ctir !7
  %cmp8 = icmp ult i8* %18, %20, !dbg !16704
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !16702

if.then9:                                         ; preds = %land.lhs.true6
  %21 = load i8*, i8** %__obj3, align 8, !dbg !16704, !tbaa !2355
  %22 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16704, !tbaa !2355
  %object_base10 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 2, !dbg !16704, !ctir !1775
  store i8* %21, i8** %object_base10, align 8, !dbg !16704, !tbaa !16698, !ctir !7
  %23 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16704, !tbaa !2355
  %next_free11 = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 3, !dbg !16704, !ctir !1775
  store i8* %21, i8** %next_free11, align 8, !dbg !16704, !tbaa !16699, !ctir !7
  br label %if.end13, !dbg !16704

if.else12:                                        ; preds = %land.lhs.true6, %if.end
  %24 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16704, !tbaa !2355
  %25 = load i8*, i8** %__obj3, align 8, !dbg !16704, !tbaa !2355
  call void @_obstack_free(%struct.obstack* %24, i8* %25), !dbg !16704
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then9
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o14, metadata !16706, metadata !DIExpression()), !dbg !16708
  %26 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16708, !tbaa !2355
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %26, i32 0, i32 5, !dbg !16708, !ctir !1768
  store %struct.obstack* %o_tok_len, %struct.obstack** %__o14, align 8, !dbg !16708, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__obj15, metadata !16709, metadata !DIExpression()), !dbg !16708
  store i8* null, i8** %__obj15, align 8, !dbg !16708, !tbaa !2355
  %27 = load i8*, i8** %__obj15, align 8, !dbg !16710, !tbaa !2355
  %28 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16710, !tbaa !2355
  %chunk16 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1, !dbg !16710, !ctir !1775
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk16, align 8, !dbg !16710, !tbaa !16696, !ctir !1779
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !16710
  %cmp17 = icmp ugt i8* %27, %30, !dbg !16710
  br i1 %cmp17, label %land.lhs.true18, label %if.else24, !dbg !16710

land.lhs.true18:                                  ; preds = %if.end13
  %31 = load i8*, i8** %__obj15, align 8, !dbg !16710, !tbaa !2355
  %32 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16710, !tbaa !2355
  %chunk_limit19 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 4, !dbg !16710, !ctir !1775
  %33 = load i8*, i8** %chunk_limit19, align 8, !dbg !16710, !tbaa !16697, !ctir !7
  %cmp20 = icmp ult i8* %31, %33, !dbg !16710
  br i1 %cmp20, label %if.then21, label %if.else24, !dbg !16708

if.then21:                                        ; preds = %land.lhs.true18
  %34 = load i8*, i8** %__obj15, align 8, !dbg !16710, !tbaa !2355
  %35 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16710, !tbaa !2355
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 2, !dbg !16710, !ctir !1775
  store i8* %34, i8** %object_base22, align 8, !dbg !16710, !tbaa !16698, !ctir !7
  %36 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16710, !tbaa !2355
  %next_free23 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 3, !dbg !16710, !ctir !1775
  store i8* %34, i8** %next_free23, align 8, !dbg !16710, !tbaa !16699, !ctir !7
  br label %if.end25, !dbg !16710

if.else24:                                        ; preds = %land.lhs.true18, %if.end13
  %37 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16710, !tbaa !2355
  %38 = load i8*, i8** %__obj15, align 8, !dbg !16710, !tbaa !2355
  call void @_obstack_free(%struct.obstack* %37, i8* %38), !dbg !16710
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then21
  ret void, !dbg !16712
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @readtokens0(%struct._IO_FILE* %in, %struct.Tokens* %t) #4 !dbg !16713 !ctir !1811 {
entry:
  %in.addr = alloca %struct._IO_FILE*, align 8, !ctir !1813
  %t.addr = alloca %struct.Tokens*, align 8, !ctir !1767
  %c = alloca i32, align 4, !ctir !5
  %len = alloca i64, align 8, !ctir !52
  %__o = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp = alloca i64, align 8, !ctir !52
  %__o2 = alloca %struct.obstack*, align 8, !ctir !1810
  %__o1 = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp4 = alloca i64, align 8, !ctir !52
  %__o14 = alloca %struct.obstack*, align 8, !ctir !1810
  %__o116 = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp17 = alloca i64, align 8, !ctir !52
  %__o32 = alloca %struct.obstack*, align 8, !ctir !1810
  %__o133 = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp34 = alloca i64, align 8, !ctir !52
  %__o144 = alloca %struct.obstack*, align 8, !ctir !1810
  %__p1 = alloca i8*, align 8, !ctir !47
  %__o147 = alloca %struct.obstack*, align 8, !ctir !1810
  %__value = alloca i8*, align 8, !ctir !47
  %tmp78 = alloca i8*, align 8, !ctir !47
  %__o179 = alloca %struct.obstack*, align 8, !ctir !1810
  %__value80 = alloca i8*, align 8, !ctir !47
  %tmp119 = alloca i8*, align 8, !ctir !47
  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in.addr, metadata !16714, metadata !DIExpression()), !dbg !16715
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16716, metadata !DIExpression()), !dbg !16717
  br label %while.body, !dbg !16718

while.body:                                       ; preds = %entry, %if.end31
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16719, metadata !DIExpression()), !dbg !16721
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !16722, !tbaa !2355
  %call = call i32 @fgetc(%struct._IO_FILE* %0), !dbg !16723
  store i32 %call, i32* %c, align 4, !dbg !16721, !tbaa !2342
  %1 = load i32, i32* %c, align 4, !dbg !16724, !tbaa !2342
  %cmp = icmp eq i32 %1, -1, !dbg !16726
  br i1 %cmp, label %if.then, label %if.end13, !dbg !16727

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16728, metadata !DIExpression()), !dbg !16730
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !16731, metadata !DIExpression()), !dbg !16733
  %2 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16733, !tbaa !2355
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %2, i32 0, i32 3, !dbg !16733, !ctir !1768
  store %struct.obstack* %o_data, %struct.obstack** %__o, align 8, !dbg !16733, !tbaa !2355
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16733, !tbaa !2355
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 3, !dbg !16733, !ctir !1854
  %4 = load i8*, i8** %next_free, align 8, !dbg !16733, !tbaa !16699, !ctir !7
  %5 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16733, !tbaa !2355
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 2, !dbg !16733, !ctir !1854
  %6 = load i8*, i8** %object_base, align 8, !dbg !16733, !tbaa !16698, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !16733
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !16733
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16733
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !16733, !tbaa !2516
  %7 = load i64, i64* %tmp, align 8, !dbg !16733, !tbaa !2516
  store i64 %7, i64* %len, align 8, !dbg !16730, !tbaa !2516
  %8 = load i64, i64* %len, align 8, !dbg !16734, !tbaa !2516
  %tobool = icmp ne i64 %8, 0, !dbg !16734
  br i1 %tobool, label %if.then1, label %if.end12, !dbg !16736

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o2, metadata !16737, metadata !DIExpression()), !dbg !16740
  %9 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16740, !tbaa !2355
  %o_data3 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %9, i32 0, i32 3, !dbg !16740, !ctir !1768
  store %struct.obstack* %o_data3, %struct.obstack** %__o2, align 8, !dbg !16740, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !16741, metadata !DIExpression()), !dbg !16744
  %10 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16744, !tbaa !2355
  store %struct.obstack* %10, %struct.obstack** %__o1, align 8, !dbg !16744, !tbaa !2355
  %11 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16744, !tbaa !2355
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 4, !dbg !16744, !ctir !1854
  %12 = load i8*, i8** %chunk_limit, align 8, !dbg !16744, !tbaa !16697, !ctir !7
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16744, !tbaa !2355
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 3, !dbg !16744, !ctir !1854
  %14 = load i8*, i8** %next_free5, align 8, !dbg !16744, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast6 = ptrtoint i8* %12 to i64, !dbg !16744
  %sub.ptr.rhs.cast7 = ptrtoint i8* %14 to i64, !dbg !16744
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7, !dbg !16744
  store i64 %sub.ptr.sub8, i64* %tmp4, align 8, !dbg !16744, !tbaa !2516
  %15 = load i64, i64* %tmp4, align 8, !dbg !16744, !tbaa !2516
  %cmp9 = icmp ult i64 %15, 1, !dbg !16745
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !16740

if.then10:                                        ; preds = %if.then1
  %16 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16745, !tbaa !2355
  call void @_obstack_newchunk(%struct.obstack* %16, i64 1), !dbg !16745
  br label %if.end, !dbg !16745

if.end:                                           ; preds = %if.then10, %if.then1
  %17 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16740, !tbaa !2355
  %next_free11 = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 3, !dbg !16740, !ctir !1775
  %18 = load i8*, i8** %next_free11, align 8, !dbg !16740, !tbaa !16699, !ctir !7
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1, !dbg !16740
  store i8* %incdec.ptr, i8** %next_free11, align 8, !dbg !16740, !tbaa !16699, !ctir !7
  store i8 0, i8* %18, align 1, !dbg !16740, !tbaa !2507, !ctir !8
  %19 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16746, !tbaa !2355
  call void @save_token(%struct.Tokens* %19), !dbg !16747
  br label %if.end12, !dbg !16748

if.end12:                                         ; preds = %if.end, %if.then
  br label %while.end, !dbg !16749

if.end13:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o14, metadata !16750, metadata !DIExpression()), !dbg !16752
  %20 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16752, !tbaa !2355
  %o_data15 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %20, i32 0, i32 3, !dbg !16752, !ctir !1768
  store %struct.obstack* %o_data15, %struct.obstack** %__o14, align 8, !dbg !16752, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o116, metadata !16753, metadata !DIExpression()), !dbg !16756
  %21 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16756, !tbaa !2355
  store %struct.obstack* %21, %struct.obstack** %__o116, align 8, !dbg !16756, !tbaa !2355
  %22 = load %struct.obstack*, %struct.obstack** %__o116, align 8, !dbg !16756, !tbaa !2355
  %chunk_limit18 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 4, !dbg !16756, !ctir !1854
  %23 = load i8*, i8** %chunk_limit18, align 8, !dbg !16756, !tbaa !16697, !ctir !7
  %24 = load %struct.obstack*, %struct.obstack** %__o116, align 8, !dbg !16756, !tbaa !2355
  %next_free19 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 3, !dbg !16756, !ctir !1854
  %25 = load i8*, i8** %next_free19, align 8, !dbg !16756, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast20 = ptrtoint i8* %23 to i64, !dbg !16756
  %sub.ptr.rhs.cast21 = ptrtoint i8* %25 to i64, !dbg !16756
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !16756
  store i64 %sub.ptr.sub22, i64* %tmp17, align 8, !dbg !16756, !tbaa !2516
  %26 = load i64, i64* %tmp17, align 8, !dbg !16756, !tbaa !2516
  %cmp23 = icmp ult i64 %26, 1, !dbg !16757
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !16752

if.then24:                                        ; preds = %if.end13
  %27 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16757, !tbaa !2355
  call void @_obstack_newchunk(%struct.obstack* %27, i64 1), !dbg !16757
  br label %if.end25, !dbg !16757

if.end25:                                         ; preds = %if.then24, %if.end13
  %28 = load i32, i32* %c, align 4, !dbg !16752, !tbaa !2342
  %conv = trunc i32 %28 to i8, !dbg !16752
  %29 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16752, !tbaa !2355
  %next_free26 = getelementptr inbounds %struct.obstack, %struct.obstack* %29, i32 0, i32 3, !dbg !16752, !ctir !1775
  %30 = load i8*, i8** %next_free26, align 8, !dbg !16752, !tbaa !16699, !ctir !7
  %incdec.ptr27 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !16752
  store i8* %incdec.ptr27, i8** %next_free26, align 8, !dbg !16752, !tbaa !16699, !ctir !7
  store i8 %conv, i8* %30, align 1, !dbg !16752, !tbaa !2507, !ctir !8
  %31 = load i32, i32* %c, align 4, !dbg !16758, !tbaa !2342
  %cmp28 = icmp eq i32 %31, 0, !dbg !16760
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !16761

if.then30:                                        ; preds = %if.end25
  %32 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16762, !tbaa !2355
  call void @save_token(%struct.Tokens* %32), !dbg !16763
  br label %if.end31, !dbg !16763

if.end31:                                         ; preds = %if.then30, %if.end25
  br label %while.body, !dbg !16718, !llvm.loop !16764

while.end:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o32, metadata !16766, metadata !DIExpression()), !dbg !16768
  %33 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16768, !tbaa !2355
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %33, i32 0, i32 4, !dbg !16768, !ctir !1768
  store %struct.obstack* %o_tok, %struct.obstack** %__o32, align 8, !dbg !16768, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o133, metadata !16769, metadata !DIExpression()), !dbg !16772
  %34 = load %struct.obstack*, %struct.obstack** %__o32, align 8, !dbg !16772, !tbaa !2355
  store %struct.obstack* %34, %struct.obstack** %__o133, align 8, !dbg !16772, !tbaa !2355
  %35 = load %struct.obstack*, %struct.obstack** %__o133, align 8, !dbg !16772, !tbaa !2355
  %chunk_limit35 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 4, !dbg !16772, !ctir !1854
  %36 = load i8*, i8** %chunk_limit35, align 8, !dbg !16772, !tbaa !16697, !ctir !7
  %37 = load %struct.obstack*, %struct.obstack** %__o133, align 8, !dbg !16772, !tbaa !2355
  %next_free36 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 3, !dbg !16772, !ctir !1854
  %38 = load i8*, i8** %next_free36, align 8, !dbg !16772, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast37 = ptrtoint i8* %36 to i64, !dbg !16772
  %sub.ptr.rhs.cast38 = ptrtoint i8* %38 to i64, !dbg !16772
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38, !dbg !16772
  store i64 %sub.ptr.sub39, i64* %tmp34, align 8, !dbg !16772, !tbaa !2516
  %39 = load i64, i64* %tmp34, align 8, !dbg !16772, !tbaa !2516
  %cmp40 = icmp ult i64 %39, 8, !dbg !16773
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16768

if.then42:                                        ; preds = %while.end
  %40 = load %struct.obstack*, %struct.obstack** %__o32, align 8, !dbg !16773, !tbaa !2355
  call void @_obstack_newchunk(%struct.obstack* %40, i64 8), !dbg !16773
  br label %if.end43, !dbg !16773

if.end43:                                         ; preds = %if.then42, %while.end
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o144, metadata !16774, metadata !DIExpression()), !dbg !16776
  %41 = load %struct.obstack*, %struct.obstack** %__o32, align 8, !dbg !16776, !tbaa !2355
  store %struct.obstack* %41, %struct.obstack** %__o144, align 8, !dbg !16776, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__p1, metadata !16777, metadata !DIExpression()), !dbg !16776
  %42 = load %struct.obstack*, %struct.obstack** %__o144, align 8, !dbg !16776, !tbaa !2355
  %next_free45 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 3, !dbg !16776, !ctir !1775
  %43 = load i8*, i8** %next_free45, align 8, !dbg !16776, !tbaa !16699, !ctir !7
  store i8* %43, i8** %__p1, align 8, !dbg !16776, !tbaa !2355
  %44 = load i8*, i8** %__p1, align 8, !dbg !16776, !tbaa !2355
  %45 = bitcast i8* %44 to i8**, !dbg !16776
  store i8* null, i8** %45, align 8, !dbg !16776, !tbaa !2355, !ctir !85
  %46 = load %struct.obstack*, %struct.obstack** %__o144, align 8, !dbg !16776, !tbaa !2355
  %next_free46 = getelementptr inbounds %struct.obstack, %struct.obstack* %46, i32 0, i32 3, !dbg !16776, !ctir !1775
  %47 = load i8*, i8** %next_free46, align 8, !dbg !16776, !tbaa !16699, !ctir !7
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 8, !dbg !16776
  store i8* %add.ptr, i8** %next_free46, align 8, !dbg !16776, !tbaa !16699, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o147, metadata !16778, metadata !DIExpression()), !dbg !16780
  %48 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16780, !tbaa !2355
  %o_tok48 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %48, i32 0, i32 4, !dbg !16780, !ctir !1768
  store %struct.obstack* %o_tok48, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !16781, metadata !DIExpression()), !dbg !16780
  %49 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %object_base49 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !16780, !ctir !1775
  %50 = load i8*, i8** %object_base49, align 8, !dbg !16780, !tbaa !16698, !ctir !7
  store i8* %50, i8** %__value, align 8, !dbg !16780, !tbaa !2355
  %51 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16782, !tbaa !2355
  %next_free50 = getelementptr inbounds %struct.obstack, %struct.obstack* %51, i32 0, i32 3, !dbg !16782, !ctir !1775
  %52 = load i8*, i8** %next_free50, align 8, !dbg !16782, !tbaa !16699, !ctir !7
  %53 = load i8*, i8** %__value, align 8, !dbg !16782, !tbaa !2355
  %cmp51 = icmp eq i8* %52, %53, !dbg !16782
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !16780

if.then53:                                        ; preds = %if.end43
  %54 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16782, !tbaa !2355
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 10, !dbg !16782, !ctir !1775
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !16782
  %bf.clear = and i8 %bf.load, -3, !dbg !16782
  %bf.set = or i8 %bf.clear, 2, !dbg !16782
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !16782
  br label %if.end54, !dbg !16782

if.end54:                                         ; preds = %if.then53, %if.end43
  %55 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %next_free55 = getelementptr inbounds %struct.obstack, %struct.obstack* %55, i32 0, i32 3, !dbg !16780, !ctir !1775
  %56 = load i8*, i8** %next_free55, align 8, !dbg !16780, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast56 = ptrtoint i8* %56 to i64, !dbg !16780
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast56, 0, !dbg !16780
  %57 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %57, i32 0, i32 6, !dbg !16780, !ctir !1775
  %58 = load i64, i64* %alignment_mask, align 8, !dbg !16780, !tbaa !16784, !ctir !52
  %add = add i64 %sub.ptr.sub57, %58, !dbg !16780
  %59 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %alignment_mask58 = getelementptr inbounds %struct.obstack, %struct.obstack* %59, i32 0, i32 6, !dbg !16780, !ctir !1775
  %60 = load i64, i64* %alignment_mask58, align 8, !dbg !16780, !tbaa !16784, !ctir !52
  %neg = xor i64 %60, -1, !dbg !16780
  %and = and i64 %add, %neg, !dbg !16780
  %add.ptr59 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !16780
  %61 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %next_free60 = getelementptr inbounds %struct.obstack, %struct.obstack* %61, i32 0, i32 3, !dbg !16780, !ctir !1775
  store i8* %add.ptr59, i8** %next_free60, align 8, !dbg !16780, !tbaa !16699, !ctir !7
  %62 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16785, !tbaa !2355
  %next_free61 = getelementptr inbounds %struct.obstack, %struct.obstack* %62, i32 0, i32 3, !dbg !16785, !ctir !1775
  %63 = load i8*, i8** %next_free61, align 8, !dbg !16785, !tbaa !16699, !ctir !7
  %64 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16785, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 1, !dbg !16785, !ctir !1775
  %65 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !16785, !tbaa !16696, !ctir !1779
  %66 = bitcast %struct._obstack_chunk* %65 to i8*, !dbg !16785
  %sub.ptr.lhs.cast62 = ptrtoint i8* %63 to i64, !dbg !16785
  %sub.ptr.rhs.cast63 = ptrtoint i8* %66 to i64, !dbg !16785
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !16785
  %67 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16785, !tbaa !2355
  %chunk_limit65 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 4, !dbg !16785, !ctir !1775
  %68 = load i8*, i8** %chunk_limit65, align 8, !dbg !16785, !tbaa !16697, !ctir !7
  %69 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16785, !tbaa !2355
  %chunk66 = getelementptr inbounds %struct.obstack, %struct.obstack* %69, i32 0, i32 1, !dbg !16785, !ctir !1775
  %70 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk66, align 8, !dbg !16785, !tbaa !16696, !ctir !1779
  %71 = bitcast %struct._obstack_chunk* %70 to i8*, !dbg !16785
  %sub.ptr.lhs.cast67 = ptrtoint i8* %68 to i64, !dbg !16785
  %sub.ptr.rhs.cast68 = ptrtoint i8* %71 to i64, !dbg !16785
  %sub.ptr.sub69 = sub i64 %sub.ptr.lhs.cast67, %sub.ptr.rhs.cast68, !dbg !16785
  %cmp70 = icmp ugt i64 %sub.ptr.sub64, %sub.ptr.sub69, !dbg !16785
  br i1 %cmp70, label %if.then72, label %if.end75, !dbg !16780

if.then72:                                        ; preds = %if.end54
  %72 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16785, !tbaa !2355
  %chunk_limit73 = getelementptr inbounds %struct.obstack, %struct.obstack* %72, i32 0, i32 4, !dbg !16785, !ctir !1775
  %73 = load i8*, i8** %chunk_limit73, align 8, !dbg !16785, !tbaa !16697, !ctir !7
  %74 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16785, !tbaa !2355
  %next_free74 = getelementptr inbounds %struct.obstack, %struct.obstack* %74, i32 0, i32 3, !dbg !16785, !ctir !1775
  store i8* %73, i8** %next_free74, align 8, !dbg !16785, !tbaa !16699, !ctir !7
  br label %if.end75, !dbg !16785

if.end75:                                         ; preds = %if.then72, %if.end54
  %75 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %next_free76 = getelementptr inbounds %struct.obstack, %struct.obstack* %75, i32 0, i32 3, !dbg !16780, !ctir !1775
  %76 = load i8*, i8** %next_free76, align 8, !dbg !16780, !tbaa !16699, !ctir !7
  %77 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16780, !tbaa !2355
  %object_base77 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0, i32 2, !dbg !16780, !ctir !1775
  store i8* %76, i8** %object_base77, align 8, !dbg !16780, !tbaa !16698, !ctir !7
  %78 = load i8*, i8** %__value, align 8, !dbg !16780, !tbaa !2355
  store i8* %78, i8** %tmp78, align 8, !dbg !16780, !tbaa !2355
  %79 = load i8*, i8** %tmp78, align 8, !dbg !16780, !tbaa !2355
  %80 = bitcast i8* %79 to i8**, !dbg !16787
  %81 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16788, !tbaa !2355
  %tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %81, i32 0, i32 1, !dbg !16789, !ctir !1768
  store i8** %80, i8*** %tok, align 8, !dbg !16790, !tbaa !3154, !ctir !91
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o179, metadata !16791, metadata !DIExpression()), !dbg !16793
  %82 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16793, !tbaa !2355
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %82, i32 0, i32 5, !dbg !16793, !ctir !1768
  store %struct.obstack* %o_tok_len, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__value80, metadata !16794, metadata !DIExpression()), !dbg !16793
  %83 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %object_base81 = getelementptr inbounds %struct.obstack, %struct.obstack* %83, i32 0, i32 2, !dbg !16793, !ctir !1775
  %84 = load i8*, i8** %object_base81, align 8, !dbg !16793, !tbaa !16698, !ctir !7
  store i8* %84, i8** %__value80, align 8, !dbg !16793, !tbaa !2355
  %85 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16795, !tbaa !2355
  %next_free82 = getelementptr inbounds %struct.obstack, %struct.obstack* %85, i32 0, i32 3, !dbg !16795, !ctir !1775
  %86 = load i8*, i8** %next_free82, align 8, !dbg !16795, !tbaa !16699, !ctir !7
  %87 = load i8*, i8** %__value80, align 8, !dbg !16795, !tbaa !2355
  %cmp83 = icmp eq i8* %86, %87, !dbg !16795
  br i1 %cmp83, label %if.then85, label %if.end90, !dbg !16793

if.then85:                                        ; preds = %if.end75
  %88 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16795, !tbaa !2355
  %maybe_empty_object86 = getelementptr inbounds %struct.obstack, %struct.obstack* %88, i32 0, i32 10, !dbg !16795, !ctir !1775
  %bf.load87 = load i8, i8* %maybe_empty_object86, align 8, !dbg !16795
  %bf.clear88 = and i8 %bf.load87, -3, !dbg !16795
  %bf.set89 = or i8 %bf.clear88, 2, !dbg !16795
  store i8 %bf.set89, i8* %maybe_empty_object86, align 8, !dbg !16795
  br label %if.end90, !dbg !16795

if.end90:                                         ; preds = %if.then85, %if.end75
  %89 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %next_free91 = getelementptr inbounds %struct.obstack, %struct.obstack* %89, i32 0, i32 3, !dbg !16793, !ctir !1775
  %90 = load i8*, i8** %next_free91, align 8, !dbg !16793, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast92 = ptrtoint i8* %90 to i64, !dbg !16793
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast92, 0, !dbg !16793
  %91 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %alignment_mask94 = getelementptr inbounds %struct.obstack, %struct.obstack* %91, i32 0, i32 6, !dbg !16793, !ctir !1775
  %92 = load i64, i64* %alignment_mask94, align 8, !dbg !16793, !tbaa !16784, !ctir !52
  %add95 = add i64 %sub.ptr.sub93, %92, !dbg !16793
  %93 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %alignment_mask96 = getelementptr inbounds %struct.obstack, %struct.obstack* %93, i32 0, i32 6, !dbg !16793, !ctir !1775
  %94 = load i64, i64* %alignment_mask96, align 8, !dbg !16793, !tbaa !16784, !ctir !52
  %neg97 = xor i64 %94, -1, !dbg !16793
  %and98 = and i64 %add95, %neg97, !dbg !16793
  %add.ptr99 = getelementptr inbounds i8, i8* null, i64 %and98, !dbg !16793
  %95 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %next_free100 = getelementptr inbounds %struct.obstack, %struct.obstack* %95, i32 0, i32 3, !dbg !16793, !ctir !1775
  store i8* %add.ptr99, i8** %next_free100, align 8, !dbg !16793, !tbaa !16699, !ctir !7
  %96 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16797, !tbaa !2355
  %next_free101 = getelementptr inbounds %struct.obstack, %struct.obstack* %96, i32 0, i32 3, !dbg !16797, !ctir !1775
  %97 = load i8*, i8** %next_free101, align 8, !dbg !16797, !tbaa !16699, !ctir !7
  %98 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16797, !tbaa !2355
  %chunk102 = getelementptr inbounds %struct.obstack, %struct.obstack* %98, i32 0, i32 1, !dbg !16797, !ctir !1775
  %99 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk102, align 8, !dbg !16797, !tbaa !16696, !ctir !1779
  %100 = bitcast %struct._obstack_chunk* %99 to i8*, !dbg !16797
  %sub.ptr.lhs.cast103 = ptrtoint i8* %97 to i64, !dbg !16797
  %sub.ptr.rhs.cast104 = ptrtoint i8* %100 to i64, !dbg !16797
  %sub.ptr.sub105 = sub i64 %sub.ptr.lhs.cast103, %sub.ptr.rhs.cast104, !dbg !16797
  %101 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16797, !tbaa !2355
  %chunk_limit106 = getelementptr inbounds %struct.obstack, %struct.obstack* %101, i32 0, i32 4, !dbg !16797, !ctir !1775
  %102 = load i8*, i8** %chunk_limit106, align 8, !dbg !16797, !tbaa !16697, !ctir !7
  %103 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16797, !tbaa !2355
  %chunk107 = getelementptr inbounds %struct.obstack, %struct.obstack* %103, i32 0, i32 1, !dbg !16797, !ctir !1775
  %104 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk107, align 8, !dbg !16797, !tbaa !16696, !ctir !1779
  %105 = bitcast %struct._obstack_chunk* %104 to i8*, !dbg !16797
  %sub.ptr.lhs.cast108 = ptrtoint i8* %102 to i64, !dbg !16797
  %sub.ptr.rhs.cast109 = ptrtoint i8* %105 to i64, !dbg !16797
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109, !dbg !16797
  %cmp111 = icmp ugt i64 %sub.ptr.sub105, %sub.ptr.sub110, !dbg !16797
  br i1 %cmp111, label %if.then113, label %if.end116, !dbg !16793

if.then113:                                       ; preds = %if.end90
  %106 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16797, !tbaa !2355
  %chunk_limit114 = getelementptr inbounds %struct.obstack, %struct.obstack* %106, i32 0, i32 4, !dbg !16797, !ctir !1775
  %107 = load i8*, i8** %chunk_limit114, align 8, !dbg !16797, !tbaa !16697, !ctir !7
  %108 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16797, !tbaa !2355
  %next_free115 = getelementptr inbounds %struct.obstack, %struct.obstack* %108, i32 0, i32 3, !dbg !16797, !ctir !1775
  store i8* %107, i8** %next_free115, align 8, !dbg !16797, !tbaa !16699, !ctir !7
  br label %if.end116, !dbg !16797

if.end116:                                        ; preds = %if.then113, %if.end90
  %109 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %next_free117 = getelementptr inbounds %struct.obstack, %struct.obstack* %109, i32 0, i32 3, !dbg !16793, !ctir !1775
  %110 = load i8*, i8** %next_free117, align 8, !dbg !16793, !tbaa !16699, !ctir !7
  %111 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16793, !tbaa !2355
  %object_base118 = getelementptr inbounds %struct.obstack, %struct.obstack* %111, i32 0, i32 2, !dbg !16793, !ctir !1775
  store i8* %110, i8** %object_base118, align 8, !dbg !16793, !tbaa !16698, !ctir !7
  %112 = load i8*, i8** %__value80, align 8, !dbg !16793, !tbaa !2355
  store i8* %112, i8** %tmp119, align 8, !dbg !16793, !tbaa !2355
  %113 = load i8*, i8** %tmp119, align 8, !dbg !16793, !tbaa !2355
  %114 = bitcast i8* %113 to i64*, !dbg !16799
  %115 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16800, !tbaa !2355
  %tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %115, i32 0, i32 2, !dbg !16801, !ctir !1768
  store i64* %114, i64** %tok_len, align 8, !dbg !16802, !tbaa !16682, !ctir !354
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !16803, !tbaa !2355
  %call120 = call i32 @ferror(%struct._IO_FILE* %116) #12, !dbg !16804
  %tobool121 = icmp ne i32 %call120, 0, !dbg !16805
  %lnot = xor i1 %tobool121, true, !dbg !16805
  ret i1 %lnot, !dbg !16806
}

declare dso_local i32 @fgetc(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @save_token(%struct.Tokens* %t) #4 !dbg !16807 !ctir !1765 {
entry:
  %t.addr = alloca %struct.Tokens*, align 8, !ctir !1767
  %len = alloca i64, align 8, !ctir !52
  %__o = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp = alloca i64, align 8, !ctir !52
  %s = alloca i8*, align 8, !ctir !87
  %__o1 = alloca %struct.obstack*, align 8, !ctir !1810
  %__value = alloca i8*, align 8, !ctir !47
  %tmp24 = alloca i8*, align 8, !ctir !47
  %__o25 = alloca %struct.obstack*, align 8, !ctir !1810
  %__o126 = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp27 = alloca i64, align 8, !ctir !52
  %__o136 = alloca %struct.obstack*, align 8, !ctir !1810
  %__p1 = alloca i8*, align 8, !ctir !47
  %__o40 = alloca %struct.obstack*, align 8, !ctir !1810
  %__len = alloca i64, align 8, !ctir !52
  %__o141 = alloca %struct.obstack*, align 8, !ctir !1853
  %tmp42 = alloca i64, align 8, !ctir !52
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16808, metadata !DIExpression()), !dbg !16809
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16810, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !16812, metadata !DIExpression()), !dbg !16814
  %0 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16814, !tbaa !2355
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %0, i32 0, i32 3, !dbg !16814, !ctir !1768
  store %struct.obstack* %o_data, %struct.obstack** %__o, align 8, !dbg !16814, !tbaa !2355
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16814, !tbaa !2355
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !16814, !ctir !1854
  %2 = load i8*, i8** %next_free, align 8, !dbg !16814, !tbaa !16699, !ctir !7
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16814, !tbaa !2355
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !16814, !ctir !1854
  %4 = load i8*, i8** %object_base, align 8, !dbg !16814, !tbaa !16698, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !16814
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !16814
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16814
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !16814, !tbaa !2516
  %5 = load i64, i64* %tmp, align 8, !dbg !16814, !tbaa !2516
  %sub = sub i64 %5, 1, !dbg !16815
  store i64 %sub, i64* %len, align 8, !dbg !16811, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %s, metadata !16816, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !16818, metadata !DIExpression()), !dbg !16820
  %6 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16820, !tbaa !2355
  %o_data1 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %6, i32 0, i32 3, !dbg !16820, !ctir !1768
  store %struct.obstack* %o_data1, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !16821, metadata !DIExpression()), !dbg !16820
  %7 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %object_base2 = getelementptr inbounds %struct.obstack, %struct.obstack* %7, i32 0, i32 2, !dbg !16820, !ctir !1775
  %8 = load i8*, i8** %object_base2, align 8, !dbg !16820, !tbaa !16698, !ctir !7
  store i8* %8, i8** %__value, align 8, !dbg !16820, !tbaa !2355
  %9 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16822, !tbaa !2355
  %next_free3 = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 3, !dbg !16822, !ctir !1775
  %10 = load i8*, i8** %next_free3, align 8, !dbg !16822, !tbaa !16699, !ctir !7
  %11 = load i8*, i8** %__value, align 8, !dbg !16822, !tbaa !2355
  %cmp = icmp eq i8* %10, %11, !dbg !16822
  br i1 %cmp, label %if.then, label %if.end, !dbg !16820

if.then:                                          ; preds = %entry
  %12 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16822, !tbaa !2355
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 10, !dbg !16822, !ctir !1775
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !16822
  %bf.clear = and i8 %bf.load, -3, !dbg !16822
  %bf.set = or i8 %bf.clear, 2, !dbg !16822
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !16822
  br label %if.end, !dbg !16822

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %next_free4 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 3, !dbg !16820, !ctir !1775
  %14 = load i8*, i8** %next_free4, align 8, !dbg !16820, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast5 = ptrtoint i8* %14 to i64, !dbg !16820
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast5, 0, !dbg !16820
  %15 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 6, !dbg !16820, !ctir !1775
  %16 = load i64, i64* %alignment_mask, align 8, !dbg !16820, !tbaa !16784, !ctir !52
  %add = add i64 %sub.ptr.sub6, %16, !dbg !16820
  %17 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %alignment_mask7 = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 6, !dbg !16820, !ctir !1775
  %18 = load i64, i64* %alignment_mask7, align 8, !dbg !16820, !tbaa !16784, !ctir !52
  %neg = xor i64 %18, -1, !dbg !16820
  %and = and i64 %add, %neg, !dbg !16820
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !16820
  %19 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %next_free8 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 3, !dbg !16820, !ctir !1775
  store i8* %add.ptr, i8** %next_free8, align 8, !dbg !16820, !tbaa !16699, !ctir !7
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16824, !tbaa !2355
  %next_free9 = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !16824, !ctir !1775
  %21 = load i8*, i8** %next_free9, align 8, !dbg !16824, !tbaa !16699, !ctir !7
  %22 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16824, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 1, !dbg !16824, !ctir !1775
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !16824, !tbaa !16696, !ctir !1779
  %24 = bitcast %struct._obstack_chunk* %23 to i8*, !dbg !16824
  %sub.ptr.lhs.cast10 = ptrtoint i8* %21 to i64, !dbg !16824
  %sub.ptr.rhs.cast11 = ptrtoint i8* %24 to i64, !dbg !16824
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !16824
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16824, !tbaa !2355
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 4, !dbg !16824, !ctir !1775
  %26 = load i8*, i8** %chunk_limit, align 8, !dbg !16824, !tbaa !16697, !ctir !7
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16824, !tbaa !2355
  %chunk13 = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 1, !dbg !16824, !ctir !1775
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk13, align 8, !dbg !16824, !tbaa !16696, !ctir !1779
  %29 = bitcast %struct._obstack_chunk* %28 to i8*, !dbg !16824
  %sub.ptr.lhs.cast14 = ptrtoint i8* %26 to i64, !dbg !16824
  %sub.ptr.rhs.cast15 = ptrtoint i8* %29 to i64, !dbg !16824
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !16824
  %cmp17 = icmp ugt i64 %sub.ptr.sub12, %sub.ptr.sub16, !dbg !16824
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !16820

if.then18:                                        ; preds = %if.end
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16824, !tbaa !2355
  %chunk_limit19 = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 4, !dbg !16824, !ctir !1775
  %31 = load i8*, i8** %chunk_limit19, align 8, !dbg !16824, !tbaa !16697, !ctir !7
  %32 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16824, !tbaa !2355
  %next_free20 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 3, !dbg !16824, !ctir !1775
  store i8* %31, i8** %next_free20, align 8, !dbg !16824, !tbaa !16699, !ctir !7
  br label %if.end21, !dbg !16824

if.end21:                                         ; preds = %if.then18, %if.end
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %next_free22 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 3, !dbg !16820, !ctir !1775
  %34 = load i8*, i8** %next_free22, align 8, !dbg !16820, !tbaa !16699, !ctir !7
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16820, !tbaa !2355
  %object_base23 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 2, !dbg !16820, !ctir !1775
  store i8* %34, i8** %object_base23, align 8, !dbg !16820, !tbaa !16698, !ctir !7
  %36 = load i8*, i8** %__value, align 8, !dbg !16820, !tbaa !2355
  store i8* %36, i8** %tmp24, align 8, !dbg !16820, !tbaa !2355
  %37 = load i8*, i8** %tmp24, align 8, !dbg !16820, !tbaa !2355
  store i8* %37, i8** %s, align 8, !dbg !16817, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o25, metadata !16826, metadata !DIExpression()), !dbg !16828
  %38 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16828, !tbaa !2355
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %38, i32 0, i32 4, !dbg !16828, !ctir !1768
  store %struct.obstack* %o_tok, %struct.obstack** %__o25, align 8, !dbg !16828, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o126, metadata !16829, metadata !DIExpression()), !dbg !16832
  %39 = load %struct.obstack*, %struct.obstack** %__o25, align 8, !dbg !16832, !tbaa !2355
  store %struct.obstack* %39, %struct.obstack** %__o126, align 8, !dbg !16832, !tbaa !2355
  %40 = load %struct.obstack*, %struct.obstack** %__o126, align 8, !dbg !16832, !tbaa !2355
  %chunk_limit28 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 4, !dbg !16832, !ctir !1854
  %41 = load i8*, i8** %chunk_limit28, align 8, !dbg !16832, !tbaa !16697, !ctir !7
  %42 = load %struct.obstack*, %struct.obstack** %__o126, align 8, !dbg !16832, !tbaa !2355
  %next_free29 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 3, !dbg !16832, !ctir !1854
  %43 = load i8*, i8** %next_free29, align 8, !dbg !16832, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast30 = ptrtoint i8* %41 to i64, !dbg !16832
  %sub.ptr.rhs.cast31 = ptrtoint i8* %43 to i64, !dbg !16832
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !16832
  store i64 %sub.ptr.sub32, i64* %tmp27, align 8, !dbg !16832, !tbaa !2516
  %44 = load i64, i64* %tmp27, align 8, !dbg !16832, !tbaa !2516
  %cmp33 = icmp ult i64 %44, 8, !dbg !16833
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !16828

if.then34:                                        ; preds = %if.end21
  %45 = load %struct.obstack*, %struct.obstack** %__o25, align 8, !dbg !16833, !tbaa !2355
  call void @_obstack_newchunk(%struct.obstack* %45, i64 8), !dbg !16833
  br label %if.end35, !dbg !16833

if.end35:                                         ; preds = %if.then34, %if.end21
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o136, metadata !16834, metadata !DIExpression()), !dbg !16836
  %46 = load %struct.obstack*, %struct.obstack** %__o25, align 8, !dbg !16836, !tbaa !2355
  store %struct.obstack* %46, %struct.obstack** %__o136, align 8, !dbg !16836, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %__p1, metadata !16837, metadata !DIExpression()), !dbg !16836
  %47 = load %struct.obstack*, %struct.obstack** %__o136, align 8, !dbg !16836, !tbaa !2355
  %next_free37 = getelementptr inbounds %struct.obstack, %struct.obstack* %47, i32 0, i32 3, !dbg !16836, !ctir !1775
  %48 = load i8*, i8** %next_free37, align 8, !dbg !16836, !tbaa !16699, !ctir !7
  store i8* %48, i8** %__p1, align 8, !dbg !16836, !tbaa !2355
  %49 = load i8*, i8** %s, align 8, !dbg !16836, !tbaa !2355
  %50 = load i8*, i8** %__p1, align 8, !dbg !16836, !tbaa !2355
  %51 = bitcast i8* %50 to i8**, !dbg !16836
  store i8* %49, i8** %51, align 8, !dbg !16836, !tbaa !2355, !ctir !85
  %52 = load %struct.obstack*, %struct.obstack** %__o136, align 8, !dbg !16836, !tbaa !2355
  %next_free38 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 3, !dbg !16836, !ctir !1775
  %53 = load i8*, i8** %next_free38, align 8, !dbg !16836, !tbaa !16699, !ctir !7
  %add.ptr39 = getelementptr inbounds i8, i8* %53, i64 8, !dbg !16836
  store i8* %add.ptr39, i8** %next_free38, align 8, !dbg !16836, !tbaa !16699, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o40, metadata !16838, metadata !DIExpression()), !dbg !16840
  %54 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16840, !tbaa !2355
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %54, i32 0, i32 5, !dbg !16840, !ctir !1768
  store %struct.obstack* %o_tok_len, %struct.obstack** %__o40, align 8, !dbg !16840, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !16841, metadata !DIExpression()), !dbg !16840
  store i64 8, i64* %__len, align 8, !dbg !16840, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o141, metadata !16842, metadata !DIExpression()), !dbg !16845
  %55 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16845, !tbaa !2355
  store %struct.obstack* %55, %struct.obstack** %__o141, align 8, !dbg !16845, !tbaa !2355
  %56 = load %struct.obstack*, %struct.obstack** %__o141, align 8, !dbg !16845, !tbaa !2355
  %chunk_limit43 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0, i32 4, !dbg !16845, !ctir !1854
  %57 = load i8*, i8** %chunk_limit43, align 8, !dbg !16845, !tbaa !16697, !ctir !7
  %58 = load %struct.obstack*, %struct.obstack** %__o141, align 8, !dbg !16845, !tbaa !2355
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0, i32 3, !dbg !16845, !ctir !1854
  %59 = load i8*, i8** %next_free44, align 8, !dbg !16845, !tbaa !16699, !ctir !7
  %sub.ptr.lhs.cast45 = ptrtoint i8* %57 to i64, !dbg !16845
  %sub.ptr.rhs.cast46 = ptrtoint i8* %59 to i64, !dbg !16845
  %sub.ptr.sub47 = sub i64 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46, !dbg !16845
  store i64 %sub.ptr.sub47, i64* %tmp42, align 8, !dbg !16845, !tbaa !2516
  %60 = load i64, i64* %tmp42, align 8, !dbg !16845, !tbaa !2516
  %61 = load i64, i64* %__len, align 8, !dbg !16846, !tbaa !2516
  %cmp48 = icmp ult i64 %60, %61, !dbg !16846
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !16840

if.then49:                                        ; preds = %if.end35
  %62 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16846, !tbaa !2355
  %63 = load i64, i64* %__len, align 8, !dbg !16846, !tbaa !2516
  call void @_obstack_newchunk(%struct.obstack* %62, i64 %63), !dbg !16846
  br label %if.end50, !dbg !16846

if.end50:                                         ; preds = %if.then49, %if.end35
  %64 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16840, !tbaa !2355
  %next_free51 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !16840, !ctir !1775
  %65 = load i8*, i8** %next_free51, align 8, !dbg !16840, !tbaa !16699, !ctir !7
  %66 = bitcast i64* %len to i8*, !dbg !16840
  %67 = load i64, i64* %__len, align 8, !dbg !16840, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 8 %66, i64 %67, i1 false), !dbg !16840
  %68 = load i64, i64* %__len, align 8, !dbg !16840, !tbaa !2516
  %69 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16840, !tbaa !2355
  %next_free52 = getelementptr inbounds %struct.obstack, %struct.obstack* %69, i32 0, i32 3, !dbg !16840, !ctir !1775
  %70 = load i8*, i8** %next_free52, align 8, !dbg !16840, !tbaa !16699, !ctir !7
  %add.ptr53 = getelementptr inbounds i8, i8* %70, i64 %68, !dbg !16840
  store i8* %add.ptr53, i8** %next_free52, align 8, !dbg !16840, !tbaa !16699, !ctir !7
  %71 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16847, !tbaa !2355
  %n_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %71, i32 0, i32 0, !dbg !16848, !ctir !1768
  %72 = load i64, i64* %n_tok, align 8, !dbg !16849, !tbaa !3145, !ctir !52
  %inc = add i64 %72, 1, !dbg !16849
  store i64 %inc, i64* %n_tok, align 8, !dbg !16849, !tbaa !3145, !ctir !52
  ret void, !dbg !16850
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mkstemp_safer(i8* %templ) #4 !dbg !16851 !ctir !1858 {
entry:
  %templ.addr = alloca i8*, align 8, !ctir !7
  store i8* %templ, i8** %templ.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %templ.addr, metadata !16853, metadata !DIExpression()), !dbg !16854
  %0 = load i8*, i8** %templ.addr, align 8, !dbg !16855, !tbaa !2355
  %call = call i32 @mkstemp(i8* %0), !dbg !16856
  %call1 = call i32 @fd_safer(i32 %call), !dbg !16857
  ret i32 %call1, !dbg !16858
}

declare dso_local i32 @mkstemp(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mkostemp_safer(i8* %templ, i32 %flags) #4 !dbg !16859 !ctir !1860 {
entry:
  %templ.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i32, align 4, !ctir !5
  store i8* %templ, i8** %templ.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %templ.addr, metadata !16860, metadata !DIExpression()), !dbg !16861
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16862, metadata !DIExpression()), !dbg !16863
  %0 = load i8*, i8** %templ.addr, align 8, !dbg !16864, !tbaa !2355
  %1 = load i32, i32* %flags.addr, align 4, !dbg !16865, !tbaa !2342
  %call = call i32 @mkostemp(i8* %0, i32 %1), !dbg !16866
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16867, !tbaa !2342
  %call1 = call i32 @fd_safer_flag(i32 %call, i32 %2), !dbg !16868
  ret i32 %call1, !dbg !16869
}

declare dso_local i32 @mkostemp(i8*, i32) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @strnumcmp(i8* %a, i8* %b, i32 %decimal_point, i32 %thousands_sep) #9 !dbg !16870 !ctir !1865 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !87
  %b.addr = alloca i8*, align 8, !ctir !87
  %decimal_point.addr = alloca i32, align 4, !ctir !5
  %thousands_sep.addr = alloca i32, align 4, !ctir !5
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16872, metadata !DIExpression()), !dbg !16873
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16874, metadata !DIExpression()), !dbg !16875
  store i32 %decimal_point, i32* %decimal_point.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %decimal_point.addr, metadata !16876, metadata !DIExpression()), !dbg !16877
  store i32 %thousands_sep, i32* %thousands_sep.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %thousands_sep.addr, metadata !16878, metadata !DIExpression()), !dbg !16879
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16880, !tbaa !2355
  %1 = load i8*, i8** %b.addr, align 8, !dbg !16881, !tbaa !2355
  %2 = load i32, i32* %decimal_point.addr, align 4, !dbg !16882, !tbaa !2342
  %3 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16883, !tbaa !2342
  %call = call i32 @numcompare.302(i8* %0, i8* %1, i32 %2, i32 %3) #14, !dbg !16884
  ret i32 %call, !dbg !16885
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @numcompare.302(i8* %a, i8* %b, i32 %decimal_point, i32 %thousands_sep) #9 !dbg !16886 !ctir !1865 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %a.addr = alloca i8*, align 8, !ctir !87
  %b.addr = alloca i8*, align 8, !ctir !87
  %decimal_point.addr = alloca i32, align 4, !ctir !5
  %thousands_sep.addr = alloca i32, align 4, !ctir !5
  %tmpa = alloca i8, align 1, !ctir !317
  %tmpb = alloca i8, align 1, !ctir !317
  %tmp = alloca i32, align 4, !ctir !5
  %log_a = alloca i64, align 8, !ctir !52
  %log_b = alloca i64, align 8, !ctir !52
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16888, metadata !DIExpression()), !dbg !16889
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16890, metadata !DIExpression()), !dbg !16891
  store i32 %decimal_point, i32* %decimal_point.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %decimal_point.addr, metadata !16892, metadata !DIExpression()), !dbg !16893
  store i32 %thousands_sep, i32* %thousands_sep.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %thousands_sep.addr, metadata !16894, metadata !DIExpression()), !dbg !16895
  call void @llvm.dbg.declare(metadata i8* %tmpa, metadata !16896, metadata !DIExpression()), !dbg !16897
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16898, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !16899, !tbaa !2507, !ctir !88
  store i8 %1, i8* %tmpa, align 1, !dbg !16897, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %tmpb, metadata !16900, metadata !DIExpression()), !dbg !16901
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16902, !tbaa !2355
  %3 = load i8, i8* %2, align 1, !dbg !16903, !tbaa !2507, !ctir !88
  store i8 %3, i8* %tmpb, align 1, !dbg !16901, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !16904, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.declare(metadata i64* %log_a, metadata !16906, metadata !DIExpression()), !dbg !16907
  call void @llvm.dbg.declare(metadata i64* %log_b, metadata !16908, metadata !DIExpression()), !dbg !16909
  %4 = load i8, i8* %tmpa, align 1, !dbg !16910, !tbaa !2507
  %conv = zext i8 %4 to i32, !dbg !16910
  %cmp = icmp eq i32 %conv, 45, !dbg !16912
  br i1 %cmp, label %if.then, label %if.else, !dbg !16913

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !16914

do.body:                                          ; preds = %lor.end, %if.then
  %5 = load i8*, i8** %a.addr, align 8, !dbg !16916, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !16916
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !16916, !tbaa !2355
  %6 = load i8, i8* %incdec.ptr, align 1, !dbg !16917, !tbaa !2507, !ctir !88
  store i8 %6, i8* %tmpa, align 1, !dbg !16918, !tbaa !2507
  br label %do.cond, !dbg !16919

do.cond:                                          ; preds = %do.body
  %7 = load i8, i8* %tmpa, align 1, !dbg !16920, !tbaa !2507
  %conv2 = zext i8 %7 to i32, !dbg !16920
  %cmp3 = icmp eq i32 %conv2, 48, !dbg !16921
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !16922

lor.rhs:                                          ; preds = %do.cond
  %8 = load i8, i8* %tmpa, align 1, !dbg !16923, !tbaa !2507
  %conv5 = zext i8 %8 to i32, !dbg !16923
  %9 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16924, !tbaa !2342
  %cmp6 = icmp eq i32 %conv5, %9, !dbg !16925
  br label %lor.end, !dbg !16922

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %10 = phi i1 [ true, %do.cond ], [ %cmp6, %lor.rhs ]
  br i1 %10, label %do.body, label %do.end, !dbg !16919, !llvm.loop !16926

do.end:                                           ; preds = %lor.end
  %11 = load i8, i8* %tmpb, align 1, !dbg !16928, !tbaa !2507
  %conv8 = zext i8 %11 to i32, !dbg !16928
  %cmp9 = icmp ne i32 %conv8, 45, !dbg !16930
  br i1 %cmp9, label %if.then11, label %if.end54, !dbg !16931

if.then11:                                        ; preds = %do.end
  %12 = load i8, i8* %tmpa, align 1, !dbg !16932, !tbaa !2507
  %conv12 = zext i8 %12 to i32, !dbg !16932
  %13 = load i32, i32* %decimal_point.addr, align 4, !dbg !16935, !tbaa !2342
  %cmp13 = icmp eq i32 %conv12, %13, !dbg !16936
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !16937

if.then15:                                        ; preds = %if.then11
  br label %do.body16, !dbg !16938

do.body16:                                        ; preds = %do.cond18, %if.then15
  %14 = load i8*, i8** %a.addr, align 8, !dbg !16939, !tbaa !2355
  %incdec.ptr17 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !16939
  store i8* %incdec.ptr17, i8** %a.addr, align 8, !dbg !16939, !tbaa !2355
  %15 = load i8, i8* %incdec.ptr17, align 1, !dbg !16940, !tbaa !2507, !ctir !88
  store i8 %15, i8* %tmpa, align 1, !dbg !16941, !tbaa !2507
  br label %do.cond18, !dbg !16942

do.cond18:                                        ; preds = %do.body16
  %16 = load i8, i8* %tmpa, align 1, !dbg !16943, !tbaa !2507
  %conv19 = zext i8 %16 to i32, !dbg !16943
  %cmp20 = icmp eq i32 %conv19, 48, !dbg !16944
  br i1 %cmp20, label %do.body16, label %do.end22, !dbg !16942, !llvm.loop !16945

do.end22:                                         ; preds = %do.cond18
  br label %if.end, !dbg !16942

if.end:                                           ; preds = %do.end22, %if.then11
  %17 = load i8, i8* %tmpa, align 1, !dbg !16947, !tbaa !2507
  %conv23 = zext i8 %17 to i32, !dbg !16947
  %sub = sub i32 %conv23, 48, !dbg !16947
  %cmp24 = icmp ule i32 %sub, 9, !dbg !16947
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !16949

if.then26:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16950
  br label %return, !dbg !16950

if.end27:                                         ; preds = %if.end
  br label %while.cond, !dbg !16951

while.cond:                                       ; preds = %while.body, %if.end27
  %18 = load i8, i8* %tmpb, align 1, !dbg !16952, !tbaa !2507
  %conv28 = zext i8 %18 to i32, !dbg !16952
  %cmp29 = icmp eq i32 %conv28, 48, !dbg !16953
  br i1 %cmp29, label %lor.end35, label %lor.rhs31, !dbg !16954

lor.rhs31:                                        ; preds = %while.cond
  %19 = load i8, i8* %tmpb, align 1, !dbg !16955, !tbaa !2507
  %conv32 = zext i8 %19 to i32, !dbg !16955
  %20 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16956, !tbaa !2342
  %cmp33 = icmp eq i32 %conv32, %20, !dbg !16957
  br label %lor.end35, !dbg !16954

lor.end35:                                        ; preds = %lor.rhs31, %while.cond
  %21 = phi i1 [ true, %while.cond ], [ %cmp33, %lor.rhs31 ]
  br i1 %21, label %while.body, label %while.end, !dbg !16951

while.body:                                       ; preds = %lor.end35
  %22 = load i8*, i8** %b.addr, align 8, !dbg !16958, !tbaa !2355
  %incdec.ptr36 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !16958
  store i8* %incdec.ptr36, i8** %b.addr, align 8, !dbg !16958, !tbaa !2355
  %23 = load i8, i8* %incdec.ptr36, align 1, !dbg !16959, !tbaa !2507, !ctir !88
  store i8 %23, i8* %tmpb, align 1, !dbg !16960, !tbaa !2507
  br label %while.cond, !dbg !16951, !llvm.loop !16961

while.end:                                        ; preds = %lor.end35
  %24 = load i8, i8* %tmpb, align 1, !dbg !16963, !tbaa !2507
  %conv37 = zext i8 %24 to i32, !dbg !16963
  %25 = load i32, i32* %decimal_point.addr, align 4, !dbg !16965, !tbaa !2342
  %cmp38 = icmp eq i32 %conv37, %25, !dbg !16966
  br i1 %cmp38, label %if.then40, label %if.end48, !dbg !16967

if.then40:                                        ; preds = %while.end
  br label %do.body41, !dbg !16968

do.body41:                                        ; preds = %do.cond43, %if.then40
  %26 = load i8*, i8** %b.addr, align 8, !dbg !16969, !tbaa !2355
  %incdec.ptr42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !16969
  store i8* %incdec.ptr42, i8** %b.addr, align 8, !dbg !16969, !tbaa !2355
  %27 = load i8, i8* %incdec.ptr42, align 1, !dbg !16970, !tbaa !2507, !ctir !88
  store i8 %27, i8* %tmpb, align 1, !dbg !16971, !tbaa !2507
  br label %do.cond43, !dbg !16972

do.cond43:                                        ; preds = %do.body41
  %28 = load i8, i8* %tmpb, align 1, !dbg !16973, !tbaa !2507
  %conv44 = zext i8 %28 to i32, !dbg !16973
  %cmp45 = icmp eq i32 %conv44, 48, !dbg !16974
  br i1 %cmp45, label %do.body41, label %do.end47, !dbg !16972, !llvm.loop !16975

do.end47:                                         ; preds = %do.cond43
  br label %if.end48, !dbg !16972

if.end48:                                         ; preds = %do.end47, %while.end
  %29 = load i8, i8* %tmpb, align 1, !dbg !16977, !tbaa !2507
  %conv49 = zext i8 %29 to i32, !dbg !16977
  %sub50 = sub i32 %conv49, 48, !dbg !16977
  %cmp51 = icmp ule i32 %sub50, 9, !dbg !16977
  %conv52 = zext i1 %cmp51 to i32, !dbg !16977
  %sub53 = sub nsw i32 0, %conv52, !dbg !16978
  store i32 %sub53, i32* %retval, align 4, !dbg !16979
  br label %return, !dbg !16979

if.end54:                                         ; preds = %do.end
  br label %do.body55, !dbg !16980

do.body55:                                        ; preds = %lor.end65, %if.end54
  %30 = load i8*, i8** %b.addr, align 8, !dbg !16981, !tbaa !2355
  %incdec.ptr56 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !16981
  store i8* %incdec.ptr56, i8** %b.addr, align 8, !dbg !16981, !tbaa !2355
  %31 = load i8, i8* %incdec.ptr56, align 1, !dbg !16982, !tbaa !2507, !ctir !88
  store i8 %31, i8* %tmpb, align 1, !dbg !16983, !tbaa !2507
  br label %do.cond57, !dbg !16984

do.cond57:                                        ; preds = %do.body55
  %32 = load i8, i8* %tmpb, align 1, !dbg !16985, !tbaa !2507
  %conv58 = zext i8 %32 to i32, !dbg !16985
  %cmp59 = icmp eq i32 %conv58, 48, !dbg !16986
  br i1 %cmp59, label %lor.end65, label %lor.rhs61, !dbg !16987

lor.rhs61:                                        ; preds = %do.cond57
  %33 = load i8, i8* %tmpb, align 1, !dbg !16988, !tbaa !2507
  %conv62 = zext i8 %33 to i32, !dbg !16988
  %34 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16989, !tbaa !2342
  %cmp63 = icmp eq i32 %conv62, %34, !dbg !16990
  br label %lor.end65, !dbg !16987

lor.end65:                                        ; preds = %lor.rhs61, %do.cond57
  %35 = phi i1 [ true, %do.cond57 ], [ %cmp63, %lor.rhs61 ]
  br i1 %35, label %do.body55, label %do.end66, !dbg !16984, !llvm.loop !16991

do.end66:                                         ; preds = %lor.end65
  br label %while.cond67, !dbg !16993

while.cond67:                                     ; preds = %do.end90, %do.end66
  %36 = load i8, i8* %tmpa, align 1, !dbg !16994, !tbaa !2507
  %conv68 = zext i8 %36 to i32, !dbg !16994
  %37 = load i8, i8* %tmpb, align 1, !dbg !16995, !tbaa !2507
  %conv69 = zext i8 %37 to i32, !dbg !16995
  %cmp70 = icmp eq i32 %conv68, %conv69, !dbg !16996
  br i1 %cmp70, label %land.rhs, label %land.end, !dbg !16997

land.rhs:                                         ; preds = %while.cond67
  %38 = load i8, i8* %tmpa, align 1, !dbg !16998, !tbaa !2507
  %conv72 = zext i8 %38 to i32, !dbg !16998
  %sub73 = sub i32 %conv72, 48, !dbg !16998
  %cmp74 = icmp ule i32 %sub73, 9, !dbg !16998
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond67
  %39 = phi i1 [ false, %while.cond67 ], [ %cmp74, %land.rhs ], !dbg !16999
  br i1 %39, label %while.body76, label %while.end91, !dbg !16993

while.body76:                                     ; preds = %land.end
  br label %do.body77, !dbg !17000

do.body77:                                        ; preds = %do.cond79, %while.body76
  %40 = load i8*, i8** %a.addr, align 8, !dbg !17002, !tbaa !2355
  %incdec.ptr78 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !17002
  store i8* %incdec.ptr78, i8** %a.addr, align 8, !dbg !17002, !tbaa !2355
  %41 = load i8, i8* %incdec.ptr78, align 1, !dbg !17003, !tbaa !2507, !ctir !88
  store i8 %41, i8* %tmpa, align 1, !dbg !17004, !tbaa !2507
  br label %do.cond79, !dbg !17005

do.cond79:                                        ; preds = %do.body77
  %42 = load i8, i8* %tmpa, align 1, !dbg !17006, !tbaa !2507
  %conv80 = zext i8 %42 to i32, !dbg !17006
  %43 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17007, !tbaa !2342
  %cmp81 = icmp eq i32 %conv80, %43, !dbg !17008
  br i1 %cmp81, label %do.body77, label %do.end83, !dbg !17005, !llvm.loop !17009

do.end83:                                         ; preds = %do.cond79
  br label %do.body84, !dbg !17011

do.body84:                                        ; preds = %do.cond86, %do.end83
  %44 = load i8*, i8** %b.addr, align 8, !dbg !17012, !tbaa !2355
  %incdec.ptr85 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !17012
  store i8* %incdec.ptr85, i8** %b.addr, align 8, !dbg !17012, !tbaa !2355
  %45 = load i8, i8* %incdec.ptr85, align 1, !dbg !17013, !tbaa !2507, !ctir !88
  store i8 %45, i8* %tmpb, align 1, !dbg !17014, !tbaa !2507
  br label %do.cond86, !dbg !17015

do.cond86:                                        ; preds = %do.body84
  %46 = load i8, i8* %tmpb, align 1, !dbg !17016, !tbaa !2507
  %conv87 = zext i8 %46 to i32, !dbg !17016
  %47 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17017, !tbaa !2342
  %cmp88 = icmp eq i32 %conv87, %47, !dbg !17018
  br i1 %cmp88, label %do.body84, label %do.end90, !dbg !17015, !llvm.loop !17019

do.end90:                                         ; preds = %do.cond86
  br label %while.cond67, !dbg !16993, !llvm.loop !17021

while.end91:                                      ; preds = %land.end
  %48 = load i8, i8* %tmpa, align 1, !dbg !17023, !tbaa !2507
  %conv92 = zext i8 %48 to i32, !dbg !17023
  %49 = load i32, i32* %decimal_point.addr, align 4, !dbg !17025, !tbaa !2342
  %cmp93 = icmp eq i32 %conv92, %49, !dbg !17026
  br i1 %cmp93, label %land.lhs.true, label %lor.lhs.false, !dbg !17027

land.lhs.true:                                    ; preds = %while.end91
  %50 = load i8, i8* %tmpb, align 1, !dbg !17028, !tbaa !2507
  %conv95 = zext i8 %50 to i32, !dbg !17028
  %sub96 = sub i32 %conv95, 48, !dbg !17028
  %cmp97 = icmp ule i32 %sub96, 9, !dbg !17028
  br i1 %cmp97, label %lor.lhs.false, label %if.then107, !dbg !17029

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.end91
  %51 = load i8, i8* %tmpb, align 1, !dbg !17030, !tbaa !2507
  %conv99 = zext i8 %51 to i32, !dbg !17030
  %52 = load i32, i32* %decimal_point.addr, align 4, !dbg !17031, !tbaa !2342
  %cmp100 = icmp eq i32 %conv99, %52, !dbg !17032
  br i1 %cmp100, label %land.lhs.true102, label %if.end109, !dbg !17033

land.lhs.true102:                                 ; preds = %lor.lhs.false
  %53 = load i8, i8* %tmpa, align 1, !dbg !17034, !tbaa !2507
  %conv103 = zext i8 %53 to i32, !dbg !17034
  %sub104 = sub i32 %conv103, 48, !dbg !17034
  %cmp105 = icmp ule i32 %sub104, 9, !dbg !17034
  br i1 %cmp105, label %if.end109, label %if.then107, !dbg !17035

if.then107:                                       ; preds = %land.lhs.true102, %land.lhs.true
  %54 = load i8*, i8** %b.addr, align 8, !dbg !17036, !tbaa !2355
  %55 = load i8*, i8** %a.addr, align 8, !dbg !17037, !tbaa !2355
  %56 = load i32, i32* %decimal_point.addr, align 4, !dbg !17038, !tbaa !2342
  %conv108 = trunc i32 %56 to i8, !dbg !17038
  %call = call i32 @fraccompare(i8* %54, i8* %55, i8 signext %conv108) #14, !dbg !17039
  store i32 %call, i32* %retval, align 4, !dbg !17040
  br label %return, !dbg !17040

if.end109:                                        ; preds = %land.lhs.true102, %lor.lhs.false
  %57 = load i8, i8* %tmpb, align 1, !dbg !17041, !tbaa !2507
  %conv110 = zext i8 %57 to i32, !dbg !17041
  %58 = load i8, i8* %tmpa, align 1, !dbg !17042, !tbaa !2507
  %conv111 = zext i8 %58 to i32, !dbg !17042
  %sub112 = sub nsw i32 %conv110, %conv111, !dbg !17043
  store i32 %sub112, i32* %tmp, align 4, !dbg !17044, !tbaa !2342
  store i64 0, i64* %log_a, align 8, !dbg !17045, !tbaa !2516
  br label %for.cond, !dbg !17047

for.cond:                                         ; preds = %for.inc, %if.end109
  %59 = load i8, i8* %tmpa, align 1, !dbg !17048, !tbaa !2507
  %conv113 = zext i8 %59 to i32, !dbg !17048
  %sub114 = sub i32 %conv113, 48, !dbg !17048
  %cmp115 = icmp ule i32 %sub114, 9, !dbg !17048
  br i1 %cmp115, label %for.body, label %for.end, !dbg !17050

for.body:                                         ; preds = %for.cond
  br label %do.body117, !dbg !17051

do.body117:                                       ; preds = %do.cond119, %for.body
  %60 = load i8*, i8** %a.addr, align 8, !dbg !17052, !tbaa !2355
  %incdec.ptr118 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !17052
  store i8* %incdec.ptr118, i8** %a.addr, align 8, !dbg !17052, !tbaa !2355
  %61 = load i8, i8* %incdec.ptr118, align 1, !dbg !17053, !tbaa !2507, !ctir !88
  store i8 %61, i8* %tmpa, align 1, !dbg !17054, !tbaa !2507
  br label %do.cond119, !dbg !17055

do.cond119:                                       ; preds = %do.body117
  %62 = load i8, i8* %tmpa, align 1, !dbg !17056, !tbaa !2507
  %conv120 = zext i8 %62 to i32, !dbg !17056
  %63 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17057, !tbaa !2342
  %cmp121 = icmp eq i32 %conv120, %63, !dbg !17058
  br i1 %cmp121, label %do.body117, label %do.end123, !dbg !17055, !llvm.loop !17059

do.end123:                                        ; preds = %do.cond119
  br label %for.inc, !dbg !17055

for.inc:                                          ; preds = %do.end123
  %64 = load i64, i64* %log_a, align 8, !dbg !17061, !tbaa !2516
  %inc = add i64 %64, 1, !dbg !17061
  store i64 %inc, i64* %log_a, align 8, !dbg !17061, !tbaa !2516
  br label %for.cond, !dbg !17062, !llvm.loop !17063

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %log_b, align 8, !dbg !17065, !tbaa !2516
  br label %for.cond124, !dbg !17067

for.cond124:                                      ; preds = %for.inc137, %for.end
  %65 = load i8, i8* %tmpb, align 1, !dbg !17068, !tbaa !2507
  %conv125 = zext i8 %65 to i32, !dbg !17068
  %sub126 = sub i32 %conv125, 48, !dbg !17068
  %cmp127 = icmp ule i32 %sub126, 9, !dbg !17068
  br i1 %cmp127, label %for.body129, label %for.end139, !dbg !17070

for.body129:                                      ; preds = %for.cond124
  br label %do.body130, !dbg !17071

do.body130:                                       ; preds = %do.cond132, %for.body129
  %66 = load i8*, i8** %b.addr, align 8, !dbg !17072, !tbaa !2355
  %incdec.ptr131 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !17072
  store i8* %incdec.ptr131, i8** %b.addr, align 8, !dbg !17072, !tbaa !2355
  %67 = load i8, i8* %incdec.ptr131, align 1, !dbg !17073, !tbaa !2507, !ctir !88
  store i8 %67, i8* %tmpb, align 1, !dbg !17074, !tbaa !2507
  br label %do.cond132, !dbg !17075

do.cond132:                                       ; preds = %do.body130
  %68 = load i8, i8* %tmpb, align 1, !dbg !17076, !tbaa !2507
  %conv133 = zext i8 %68 to i32, !dbg !17076
  %69 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17077, !tbaa !2342
  %cmp134 = icmp eq i32 %conv133, %69, !dbg !17078
  br i1 %cmp134, label %do.body130, label %do.end136, !dbg !17075, !llvm.loop !17079

do.end136:                                        ; preds = %do.cond132
  br label %for.inc137, !dbg !17075

for.inc137:                                       ; preds = %do.end136
  %70 = load i64, i64* %log_b, align 8, !dbg !17081, !tbaa !2516
  %inc138 = add i64 %70, 1, !dbg !17081
  store i64 %inc138, i64* %log_b, align 8, !dbg !17081, !tbaa !2516
  br label %for.cond124, !dbg !17082, !llvm.loop !17083

for.end139:                                       ; preds = %for.cond124
  %71 = load i64, i64* %log_a, align 8, !dbg !17085, !tbaa !2516
  %72 = load i64, i64* %log_b, align 8, !dbg !17087, !tbaa !2516
  %cmp140 = icmp ne i64 %71, %72, !dbg !17088
  br i1 %cmp140, label %if.then142, label %if.end145, !dbg !17089

if.then142:                                       ; preds = %for.end139
  %73 = load i64, i64* %log_a, align 8, !dbg !17090, !tbaa !2516
  %74 = load i64, i64* %log_b, align 8, !dbg !17091, !tbaa !2516
  %cmp143 = icmp ult i64 %73, %74, !dbg !17092
  %75 = zext i1 %cmp143 to i64, !dbg !17090
  %cond = select i1 %cmp143, i32 1, i32 -1, !dbg !17090
  store i32 %cond, i32* %retval, align 4, !dbg !17093
  br label %return, !dbg !17093

if.end145:                                        ; preds = %for.end139
  %76 = load i64, i64* %log_a, align 8, !dbg !17094, !tbaa !2516
  %tobool = icmp ne i64 %76, 0, !dbg !17094
  br i1 %tobool, label %if.end147, label %if.then146, !dbg !17096

if.then146:                                       ; preds = %if.end145
  store i32 0, i32* %retval, align 4, !dbg !17097
  br label %return, !dbg !17097

if.end147:                                        ; preds = %if.end145
  %77 = load i32, i32* %tmp, align 4, !dbg !17098, !tbaa !2342
  store i32 %77, i32* %retval, align 4, !dbg !17099
  br label %return, !dbg !17099

if.else:                                          ; preds = %entry
  %78 = load i8, i8* %tmpb, align 1, !dbg !17100, !tbaa !2507
  %conv148 = zext i8 %78 to i32, !dbg !17100
  %cmp149 = icmp eq i32 %conv148, 45, !dbg !17102
  br i1 %cmp149, label %if.then151, label %if.else210, !dbg !17103

if.then151:                                       ; preds = %if.else
  br label %do.body152, !dbg !17104

do.body152:                                       ; preds = %lor.end162, %if.then151
  %79 = load i8*, i8** %b.addr, align 8, !dbg !17106, !tbaa !2355
  %incdec.ptr153 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !17106
  store i8* %incdec.ptr153, i8** %b.addr, align 8, !dbg !17106, !tbaa !2355
  %80 = load i8, i8* %incdec.ptr153, align 1, !dbg !17107, !tbaa !2507, !ctir !88
  store i8 %80, i8* %tmpb, align 1, !dbg !17108, !tbaa !2507
  br label %do.cond154, !dbg !17109

do.cond154:                                       ; preds = %do.body152
  %81 = load i8, i8* %tmpb, align 1, !dbg !17110, !tbaa !2507
  %conv155 = zext i8 %81 to i32, !dbg !17110
  %cmp156 = icmp eq i32 %conv155, 48, !dbg !17111
  br i1 %cmp156, label %lor.end162, label %lor.rhs158, !dbg !17112

lor.rhs158:                                       ; preds = %do.cond154
  %82 = load i8, i8* %tmpb, align 1, !dbg !17113, !tbaa !2507
  %conv159 = zext i8 %82 to i32, !dbg !17113
  %83 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17114, !tbaa !2342
  %cmp160 = icmp eq i32 %conv159, %83, !dbg !17115
  br label %lor.end162, !dbg !17112

lor.end162:                                       ; preds = %lor.rhs158, %do.cond154
  %84 = phi i1 [ true, %do.cond154 ], [ %cmp160, %lor.rhs158 ]
  br i1 %84, label %do.body152, label %do.end163, !dbg !17109, !llvm.loop !17116

do.end163:                                        ; preds = %lor.end162
  %85 = load i8, i8* %tmpb, align 1, !dbg !17118, !tbaa !2507
  %conv164 = zext i8 %85 to i32, !dbg !17118
  %86 = load i32, i32* %decimal_point.addr, align 4, !dbg !17120, !tbaa !2342
  %cmp165 = icmp eq i32 %conv164, %86, !dbg !17121
  br i1 %cmp165, label %if.then167, label %if.end175, !dbg !17122

if.then167:                                       ; preds = %do.end163
  br label %do.body168, !dbg !17123

do.body168:                                       ; preds = %do.cond170, %if.then167
  %87 = load i8*, i8** %b.addr, align 8, !dbg !17124, !tbaa !2355
  %incdec.ptr169 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !17124
  store i8* %incdec.ptr169, i8** %b.addr, align 8, !dbg !17124, !tbaa !2355
  %88 = load i8, i8* %incdec.ptr169, align 1, !dbg !17125, !tbaa !2507, !ctir !88
  store i8 %88, i8* %tmpb, align 1, !dbg !17126, !tbaa !2507
  br label %do.cond170, !dbg !17127

do.cond170:                                       ; preds = %do.body168
  %89 = load i8, i8* %tmpb, align 1, !dbg !17128, !tbaa !2507
  %conv171 = zext i8 %89 to i32, !dbg !17128
  %cmp172 = icmp eq i32 %conv171, 48, !dbg !17129
  br i1 %cmp172, label %do.body168, label %do.end174, !dbg !17127, !llvm.loop !17130

do.end174:                                        ; preds = %do.cond170
  br label %if.end175, !dbg !17127

if.end175:                                        ; preds = %do.end174, %do.end163
  %90 = load i8, i8* %tmpb, align 1, !dbg !17132, !tbaa !2507
  %conv176 = zext i8 %90 to i32, !dbg !17132
  %sub177 = sub i32 %conv176, 48, !dbg !17132
  %cmp178 = icmp ule i32 %sub177, 9, !dbg !17132
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !17134

if.then180:                                       ; preds = %if.end175
  store i32 1, i32* %retval, align 4, !dbg !17135
  br label %return, !dbg !17135

if.end181:                                        ; preds = %if.end175
  br label %while.cond182, !dbg !17136

while.cond182:                                    ; preds = %while.body191, %if.end181
  %91 = load i8, i8* %tmpa, align 1, !dbg !17137, !tbaa !2507
  %conv183 = zext i8 %91 to i32, !dbg !17137
  %cmp184 = icmp eq i32 %conv183, 48, !dbg !17138
  br i1 %cmp184, label %lor.end190, label %lor.rhs186, !dbg !17139

lor.rhs186:                                       ; preds = %while.cond182
  %92 = load i8, i8* %tmpa, align 1, !dbg !17140, !tbaa !2507
  %conv187 = zext i8 %92 to i32, !dbg !17140
  %93 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17141, !tbaa !2342
  %cmp188 = icmp eq i32 %conv187, %93, !dbg !17142
  br label %lor.end190, !dbg !17139

lor.end190:                                       ; preds = %lor.rhs186, %while.cond182
  %94 = phi i1 [ true, %while.cond182 ], [ %cmp188, %lor.rhs186 ]
  br i1 %94, label %while.body191, label %while.end193, !dbg !17136

while.body191:                                    ; preds = %lor.end190
  %95 = load i8*, i8** %a.addr, align 8, !dbg !17143, !tbaa !2355
  %incdec.ptr192 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !17143
  store i8* %incdec.ptr192, i8** %a.addr, align 8, !dbg !17143, !tbaa !2355
  %96 = load i8, i8* %incdec.ptr192, align 1, !dbg !17144, !tbaa !2507, !ctir !88
  store i8 %96, i8* %tmpa, align 1, !dbg !17145, !tbaa !2507
  br label %while.cond182, !dbg !17136, !llvm.loop !17146

while.end193:                                     ; preds = %lor.end190
  %97 = load i8, i8* %tmpa, align 1, !dbg !17148, !tbaa !2507
  %conv194 = zext i8 %97 to i32, !dbg !17148
  %98 = load i32, i32* %decimal_point.addr, align 4, !dbg !17150, !tbaa !2342
  %cmp195 = icmp eq i32 %conv194, %98, !dbg !17151
  br i1 %cmp195, label %if.then197, label %if.end205, !dbg !17152

if.then197:                                       ; preds = %while.end193
  br label %do.body198, !dbg !17153

do.body198:                                       ; preds = %do.cond200, %if.then197
  %99 = load i8*, i8** %a.addr, align 8, !dbg !17154, !tbaa !2355
  %incdec.ptr199 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !17154
  store i8* %incdec.ptr199, i8** %a.addr, align 8, !dbg !17154, !tbaa !2355
  %100 = load i8, i8* %incdec.ptr199, align 1, !dbg !17155, !tbaa !2507, !ctir !88
  store i8 %100, i8* %tmpa, align 1, !dbg !17156, !tbaa !2507
  br label %do.cond200, !dbg !17157

do.cond200:                                       ; preds = %do.body198
  %101 = load i8, i8* %tmpa, align 1, !dbg !17158, !tbaa !2507
  %conv201 = zext i8 %101 to i32, !dbg !17158
  %cmp202 = icmp eq i32 %conv201, 48, !dbg !17159
  br i1 %cmp202, label %do.body198, label %do.end204, !dbg !17157, !llvm.loop !17160

do.end204:                                        ; preds = %do.cond200
  br label %if.end205, !dbg !17157

if.end205:                                        ; preds = %do.end204, %while.end193
  %102 = load i8, i8* %tmpa, align 1, !dbg !17162, !tbaa !2507
  %conv206 = zext i8 %102 to i32, !dbg !17162
  %sub207 = sub i32 %conv206, 48, !dbg !17162
  %cmp208 = icmp ule i32 %sub207, 9, !dbg !17162
  %conv209 = zext i1 %cmp208 to i32, !dbg !17162
  store i32 %conv209, i32* %retval, align 4, !dbg !17163
  br label %return, !dbg !17163

if.else210:                                       ; preds = %if.else
  br label %while.cond211, !dbg !17164

while.cond211:                                    ; preds = %while.body220, %if.else210
  %103 = load i8, i8* %tmpa, align 1, !dbg !17166, !tbaa !2507
  %conv212 = zext i8 %103 to i32, !dbg !17166
  %cmp213 = icmp eq i32 %conv212, 48, !dbg !17167
  br i1 %cmp213, label %lor.end219, label %lor.rhs215, !dbg !17168

lor.rhs215:                                       ; preds = %while.cond211
  %104 = load i8, i8* %tmpa, align 1, !dbg !17169, !tbaa !2507
  %conv216 = zext i8 %104 to i32, !dbg !17169
  %105 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17170, !tbaa !2342
  %cmp217 = icmp eq i32 %conv216, %105, !dbg !17171
  br label %lor.end219, !dbg !17168

lor.end219:                                       ; preds = %lor.rhs215, %while.cond211
  %106 = phi i1 [ true, %while.cond211 ], [ %cmp217, %lor.rhs215 ]
  br i1 %106, label %while.body220, label %while.end222, !dbg !17164

while.body220:                                    ; preds = %lor.end219
  %107 = load i8*, i8** %a.addr, align 8, !dbg !17172, !tbaa !2355
  %incdec.ptr221 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !17172
  store i8* %incdec.ptr221, i8** %a.addr, align 8, !dbg !17172, !tbaa !2355
  %108 = load i8, i8* %incdec.ptr221, align 1, !dbg !17173, !tbaa !2507, !ctir !88
  store i8 %108, i8* %tmpa, align 1, !dbg !17174, !tbaa !2507
  br label %while.cond211, !dbg !17164, !llvm.loop !17175

while.end222:                                     ; preds = %lor.end219
  br label %while.cond223, !dbg !17177

while.cond223:                                    ; preds = %while.body232, %while.end222
  %109 = load i8, i8* %tmpb, align 1, !dbg !17178, !tbaa !2507
  %conv224 = zext i8 %109 to i32, !dbg !17178
  %cmp225 = icmp eq i32 %conv224, 48, !dbg !17179
  br i1 %cmp225, label %lor.end231, label %lor.rhs227, !dbg !17180

lor.rhs227:                                       ; preds = %while.cond223
  %110 = load i8, i8* %tmpb, align 1, !dbg !17181, !tbaa !2507
  %conv228 = zext i8 %110 to i32, !dbg !17181
  %111 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17182, !tbaa !2342
  %cmp229 = icmp eq i32 %conv228, %111, !dbg !17183
  br label %lor.end231, !dbg !17180

lor.end231:                                       ; preds = %lor.rhs227, %while.cond223
  %112 = phi i1 [ true, %while.cond223 ], [ %cmp229, %lor.rhs227 ]
  br i1 %112, label %while.body232, label %while.end234, !dbg !17177

while.body232:                                    ; preds = %lor.end231
  %113 = load i8*, i8** %b.addr, align 8, !dbg !17184, !tbaa !2355
  %incdec.ptr233 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !17184
  store i8* %incdec.ptr233, i8** %b.addr, align 8, !dbg !17184, !tbaa !2355
  %114 = load i8, i8* %incdec.ptr233, align 1, !dbg !17185, !tbaa !2507, !ctir !88
  store i8 %114, i8* %tmpb, align 1, !dbg !17186, !tbaa !2507
  br label %while.cond223, !dbg !17177, !llvm.loop !17187

while.end234:                                     ; preds = %lor.end231
  br label %while.cond235, !dbg !17189

while.cond235:                                    ; preds = %do.end260, %while.end234
  %115 = load i8, i8* %tmpa, align 1, !dbg !17190, !tbaa !2507
  %conv236 = zext i8 %115 to i32, !dbg !17190
  %116 = load i8, i8* %tmpb, align 1, !dbg !17191, !tbaa !2507
  %conv237 = zext i8 %116 to i32, !dbg !17191
  %cmp238 = icmp eq i32 %conv236, %conv237, !dbg !17192
  br i1 %cmp238, label %land.rhs240, label %land.end245, !dbg !17193

land.rhs240:                                      ; preds = %while.cond235
  %117 = load i8, i8* %tmpa, align 1, !dbg !17194, !tbaa !2507
  %conv241 = zext i8 %117 to i32, !dbg !17194
  %sub242 = sub i32 %conv241, 48, !dbg !17194
  %cmp243 = icmp ule i32 %sub242, 9, !dbg !17194
  br label %land.end245

land.end245:                                      ; preds = %land.rhs240, %while.cond235
  %118 = phi i1 [ false, %while.cond235 ], [ %cmp243, %land.rhs240 ], !dbg !17195
  br i1 %118, label %while.body246, label %while.end261, !dbg !17189

while.body246:                                    ; preds = %land.end245
  br label %do.body247, !dbg !17196

do.body247:                                       ; preds = %do.cond249, %while.body246
  %119 = load i8*, i8** %a.addr, align 8, !dbg !17198, !tbaa !2355
  %incdec.ptr248 = getelementptr inbounds i8, i8* %119, i32 1, !dbg !17198
  store i8* %incdec.ptr248, i8** %a.addr, align 8, !dbg !17198, !tbaa !2355
  %120 = load i8, i8* %incdec.ptr248, align 1, !dbg !17199, !tbaa !2507, !ctir !88
  store i8 %120, i8* %tmpa, align 1, !dbg !17200, !tbaa !2507
  br label %do.cond249, !dbg !17201

do.cond249:                                       ; preds = %do.body247
  %121 = load i8, i8* %tmpa, align 1, !dbg !17202, !tbaa !2507
  %conv250 = zext i8 %121 to i32, !dbg !17202
  %122 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17203, !tbaa !2342
  %cmp251 = icmp eq i32 %conv250, %122, !dbg !17204
  br i1 %cmp251, label %do.body247, label %do.end253, !dbg !17201, !llvm.loop !17205

do.end253:                                        ; preds = %do.cond249
  br label %do.body254, !dbg !17207

do.body254:                                       ; preds = %do.cond256, %do.end253
  %123 = load i8*, i8** %b.addr, align 8, !dbg !17208, !tbaa !2355
  %incdec.ptr255 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !17208
  store i8* %incdec.ptr255, i8** %b.addr, align 8, !dbg !17208, !tbaa !2355
  %124 = load i8, i8* %incdec.ptr255, align 1, !dbg !17209, !tbaa !2507, !ctir !88
  store i8 %124, i8* %tmpb, align 1, !dbg !17210, !tbaa !2507
  br label %do.cond256, !dbg !17211

do.cond256:                                       ; preds = %do.body254
  %125 = load i8, i8* %tmpb, align 1, !dbg !17212, !tbaa !2507
  %conv257 = zext i8 %125 to i32, !dbg !17212
  %126 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17213, !tbaa !2342
  %cmp258 = icmp eq i32 %conv257, %126, !dbg !17214
  br i1 %cmp258, label %do.body254, label %do.end260, !dbg !17211, !llvm.loop !17215

do.end260:                                        ; preds = %do.cond256
  br label %while.cond235, !dbg !17189, !llvm.loop !17217

while.end261:                                     ; preds = %land.end245
  %127 = load i8, i8* %tmpa, align 1, !dbg !17219, !tbaa !2507
  %conv262 = zext i8 %127 to i32, !dbg !17219
  %128 = load i32, i32* %decimal_point.addr, align 4, !dbg !17221, !tbaa !2342
  %cmp263 = icmp eq i32 %conv262, %128, !dbg !17222
  br i1 %cmp263, label %land.lhs.true265, label %lor.lhs.false270, !dbg !17223

land.lhs.true265:                                 ; preds = %while.end261
  %129 = load i8, i8* %tmpb, align 1, !dbg !17224, !tbaa !2507
  %conv266 = zext i8 %129 to i32, !dbg !17224
  %sub267 = sub i32 %conv266, 48, !dbg !17224
  %cmp268 = icmp ule i32 %sub267, 9, !dbg !17224
  br i1 %cmp268, label %lor.lhs.false270, label %if.then279, !dbg !17225

lor.lhs.false270:                                 ; preds = %land.lhs.true265, %while.end261
  %130 = load i8, i8* %tmpb, align 1, !dbg !17226, !tbaa !2507
  %conv271 = zext i8 %130 to i32, !dbg !17226
  %131 = load i32, i32* %decimal_point.addr, align 4, !dbg !17227, !tbaa !2342
  %cmp272 = icmp eq i32 %conv271, %131, !dbg !17228
  br i1 %cmp272, label %land.lhs.true274, label %if.end282, !dbg !17229

land.lhs.true274:                                 ; preds = %lor.lhs.false270
  %132 = load i8, i8* %tmpa, align 1, !dbg !17230, !tbaa !2507
  %conv275 = zext i8 %132 to i32, !dbg !17230
  %sub276 = sub i32 %conv275, 48, !dbg !17230
  %cmp277 = icmp ule i32 %sub276, 9, !dbg !17230
  br i1 %cmp277, label %if.end282, label %if.then279, !dbg !17231

if.then279:                                       ; preds = %land.lhs.true274, %land.lhs.true265
  %133 = load i8*, i8** %a.addr, align 8, !dbg !17232, !tbaa !2355
  %134 = load i8*, i8** %b.addr, align 8, !dbg !17233, !tbaa !2355
  %135 = load i32, i32* %decimal_point.addr, align 4, !dbg !17234, !tbaa !2342
  %conv280 = trunc i32 %135 to i8, !dbg !17234
  %call281 = call i32 @fraccompare(i8* %133, i8* %134, i8 signext %conv280) #14, !dbg !17235
  store i32 %call281, i32* %retval, align 4, !dbg !17236
  br label %return, !dbg !17236

if.end282:                                        ; preds = %land.lhs.true274, %lor.lhs.false270
  %136 = load i8, i8* %tmpa, align 1, !dbg !17237, !tbaa !2507
  %conv283 = zext i8 %136 to i32, !dbg !17237
  %137 = load i8, i8* %tmpb, align 1, !dbg !17238, !tbaa !2507
  %conv284 = zext i8 %137 to i32, !dbg !17238
  %sub285 = sub nsw i32 %conv283, %conv284, !dbg !17239
  store i32 %sub285, i32* %tmp, align 4, !dbg !17240, !tbaa !2342
  store i64 0, i64* %log_a, align 8, !dbg !17241, !tbaa !2516
  br label %for.cond286, !dbg !17243

for.cond286:                                      ; preds = %for.inc299, %if.end282
  %138 = load i8, i8* %tmpa, align 1, !dbg !17244, !tbaa !2507
  %conv287 = zext i8 %138 to i32, !dbg !17244
  %sub288 = sub i32 %conv287, 48, !dbg !17244
  %cmp289 = icmp ule i32 %sub288, 9, !dbg !17244
  br i1 %cmp289, label %for.body291, label %for.end301, !dbg !17246

for.body291:                                      ; preds = %for.cond286
  br label %do.body292, !dbg !17247

do.body292:                                       ; preds = %do.cond294, %for.body291
  %139 = load i8*, i8** %a.addr, align 8, !dbg !17248, !tbaa !2355
  %incdec.ptr293 = getelementptr inbounds i8, i8* %139, i32 1, !dbg !17248
  store i8* %incdec.ptr293, i8** %a.addr, align 8, !dbg !17248, !tbaa !2355
  %140 = load i8, i8* %incdec.ptr293, align 1, !dbg !17249, !tbaa !2507, !ctir !88
  store i8 %140, i8* %tmpa, align 1, !dbg !17250, !tbaa !2507
  br label %do.cond294, !dbg !17251

do.cond294:                                       ; preds = %do.body292
  %141 = load i8, i8* %tmpa, align 1, !dbg !17252, !tbaa !2507
  %conv295 = zext i8 %141 to i32, !dbg !17252
  %142 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17253, !tbaa !2342
  %cmp296 = icmp eq i32 %conv295, %142, !dbg !17254
  br i1 %cmp296, label %do.body292, label %do.end298, !dbg !17251, !llvm.loop !17255

do.end298:                                        ; preds = %do.cond294
  br label %for.inc299, !dbg !17251

for.inc299:                                       ; preds = %do.end298
  %143 = load i64, i64* %log_a, align 8, !dbg !17257, !tbaa !2516
  %inc300 = add i64 %143, 1, !dbg !17257
  store i64 %inc300, i64* %log_a, align 8, !dbg !17257, !tbaa !2516
  br label %for.cond286, !dbg !17258, !llvm.loop !17259

for.end301:                                       ; preds = %for.cond286
  store i64 0, i64* %log_b, align 8, !dbg !17261, !tbaa !2516
  br label %for.cond302, !dbg !17263

for.cond302:                                      ; preds = %for.inc315, %for.end301
  %144 = load i8, i8* %tmpb, align 1, !dbg !17264, !tbaa !2507
  %conv303 = zext i8 %144 to i32, !dbg !17264
  %sub304 = sub i32 %conv303, 48, !dbg !17264
  %cmp305 = icmp ule i32 %sub304, 9, !dbg !17264
  br i1 %cmp305, label %for.body307, label %for.end317, !dbg !17266

for.body307:                                      ; preds = %for.cond302
  br label %do.body308, !dbg !17267

do.body308:                                       ; preds = %do.cond310, %for.body307
  %145 = load i8*, i8** %b.addr, align 8, !dbg !17268, !tbaa !2355
  %incdec.ptr309 = getelementptr inbounds i8, i8* %145, i32 1, !dbg !17268
  store i8* %incdec.ptr309, i8** %b.addr, align 8, !dbg !17268, !tbaa !2355
  %146 = load i8, i8* %incdec.ptr309, align 1, !dbg !17269, !tbaa !2507, !ctir !88
  store i8 %146, i8* %tmpb, align 1, !dbg !17270, !tbaa !2507
  br label %do.cond310, !dbg !17271

do.cond310:                                       ; preds = %do.body308
  %147 = load i8, i8* %tmpb, align 1, !dbg !17272, !tbaa !2507
  %conv311 = zext i8 %147 to i32, !dbg !17272
  %148 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17273, !tbaa !2342
  %cmp312 = icmp eq i32 %conv311, %148, !dbg !17274
  br i1 %cmp312, label %do.body308, label %do.end314, !dbg !17271, !llvm.loop !17275

do.end314:                                        ; preds = %do.cond310
  br label %for.inc315, !dbg !17271

for.inc315:                                       ; preds = %do.end314
  %149 = load i64, i64* %log_b, align 8, !dbg !17277, !tbaa !2516
  %inc316 = add i64 %149, 1, !dbg !17277
  store i64 %inc316, i64* %log_b, align 8, !dbg !17277, !tbaa !2516
  br label %for.cond302, !dbg !17278, !llvm.loop !17279

for.end317:                                       ; preds = %for.cond302
  %150 = load i64, i64* %log_a, align 8, !dbg !17281, !tbaa !2516
  %151 = load i64, i64* %log_b, align 8, !dbg !17283, !tbaa !2516
  %cmp318 = icmp ne i64 %150, %151, !dbg !17284
  br i1 %cmp318, label %if.then320, label %if.end324, !dbg !17285

if.then320:                                       ; preds = %for.end317
  %152 = load i64, i64* %log_a, align 8, !dbg !17286, !tbaa !2516
  %153 = load i64, i64* %log_b, align 8, !dbg !17287, !tbaa !2516
  %cmp321 = icmp ult i64 %152, %153, !dbg !17288
  %154 = zext i1 %cmp321 to i64, !dbg !17286
  %cond323 = select i1 %cmp321, i32 -1, i32 1, !dbg !17286
  store i32 %cond323, i32* %retval, align 4, !dbg !17289
  br label %return, !dbg !17289

if.end324:                                        ; preds = %for.end317
  %155 = load i64, i64* %log_a, align 8, !dbg !17290, !tbaa !2516
  %tobool325 = icmp ne i64 %155, 0, !dbg !17290
  br i1 %tobool325, label %if.end327, label %if.then326, !dbg !17292

if.then326:                                       ; preds = %if.end324
  store i32 0, i32* %retval, align 4, !dbg !17293
  br label %return, !dbg !17293

if.end327:                                        ; preds = %if.end324
  %156 = load i32, i32* %tmp, align 4, !dbg !17294, !tbaa !2342
  store i32 %156, i32* %retval, align 4, !dbg !17295
  br label %return, !dbg !17295

return:                                           ; preds = %if.end327, %if.then326, %if.then320, %if.then279, %if.end205, %if.then180, %if.end147, %if.then146, %if.then142, %if.then107, %if.end48, %if.then26
  %157 = load i32, i32* %retval, align 4, !dbg !17296
  ret i32 %157, !dbg !17296
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @fraccompare(i8* %a, i8* %b, i8 signext %decimal_point) #9 !dbg !17297 !ctir !1867 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %a.addr = alloca i8*, align 8, !ctir !87
  %b.addr = alloca i8*, align 8, !ctir !87
  %decimal_point.addr = alloca i8, align 1, !ctir !8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !17298, metadata !DIExpression()), !dbg !17299
  store i8* %b, i8** %b.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !17300, metadata !DIExpression()), !dbg !17301
  store i8 %decimal_point, i8* %decimal_point.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %decimal_point.addr, metadata !17302, metadata !DIExpression()), !dbg !17303
  %0 = load i8*, i8** %a.addr, align 8, !dbg !17304, !tbaa !2355
  %1 = load i8, i8* %0, align 1, !dbg !17306, !tbaa !2507, !ctir !88
  %conv = sext i8 %1 to i32, !dbg !17306
  %2 = load i8, i8* %decimal_point.addr, align 1, !dbg !17307, !tbaa !2507
  %conv1 = sext i8 %2 to i32, !dbg !17307
  %cmp = icmp eq i32 %conv, %conv1, !dbg !17308
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !17309

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %b.addr, align 8, !dbg !17310, !tbaa !2355
  %4 = load i8, i8* %3, align 1, !dbg !17311, !tbaa !2507, !ctir !88
  %conv3 = sext i8 %4 to i32, !dbg !17311
  %5 = load i8, i8* %decimal_point.addr, align 1, !dbg !17312, !tbaa !2507
  %conv4 = sext i8 %5 to i32, !dbg !17312
  %cmp5 = icmp eq i32 %conv3, %conv4, !dbg !17313
  br i1 %cmp5, label %if.then, label %if.else, !dbg !17314

if.then:                                          ; preds = %land.lhs.true
  br label %while.cond, !dbg !17315

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load i8*, i8** %a.addr, align 8, !dbg !17317, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !17317
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !17317, !tbaa !2355
  %7 = load i8, i8* %incdec.ptr, align 1, !dbg !17318, !tbaa !2507, !ctir !88
  %conv7 = sext i8 %7 to i32, !dbg !17318
  %8 = load i8*, i8** %b.addr, align 8, !dbg !17319, !tbaa !2355
  %incdec.ptr8 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !17319
  store i8* %incdec.ptr8, i8** %b.addr, align 8, !dbg !17319, !tbaa !2355
  %9 = load i8, i8* %incdec.ptr8, align 1, !dbg !17320, !tbaa !2507, !ctir !88
  %conv9 = sext i8 %9 to i32, !dbg !17320
  %cmp10 = icmp eq i32 %conv7, %conv9, !dbg !17321
  br i1 %cmp10, label %while.body, label %while.end, !dbg !17315

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %a.addr, align 8, !dbg !17322, !tbaa !2355
  %11 = load i8, i8* %10, align 1, !dbg !17322, !tbaa !2507, !ctir !88
  %conv12 = sext i8 %11 to i32, !dbg !17322
  %sub = sub i32 %conv12, 48, !dbg !17322
  %cmp13 = icmp ule i32 %sub, 9, !dbg !17322
  br i1 %cmp13, label %if.end, label %if.then15, !dbg !17324

if.then15:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !17325
  br label %return, !dbg !17325

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !17315, !llvm.loop !17326

while.end:                                        ; preds = %while.cond
  %12 = load i8*, i8** %a.addr, align 8, !dbg !17328, !tbaa !2355
  %13 = load i8, i8* %12, align 1, !dbg !17328, !tbaa !2507, !ctir !88
  %conv16 = sext i8 %13 to i32, !dbg !17328
  %sub17 = sub i32 %conv16, 48, !dbg !17328
  %cmp18 = icmp ule i32 %sub17, 9, !dbg !17328
  br i1 %cmp18, label %land.lhs.true20, label %if.end29, !dbg !17330

land.lhs.true20:                                  ; preds = %while.end
  %14 = load i8*, i8** %b.addr, align 8, !dbg !17331, !tbaa !2355
  %15 = load i8, i8* %14, align 1, !dbg !17331, !tbaa !2507, !ctir !88
  %conv21 = sext i8 %15 to i32, !dbg !17331
  %sub22 = sub i32 %conv21, 48, !dbg !17331
  %cmp23 = icmp ule i32 %sub22, 9, !dbg !17331
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !17332

if.then25:                                        ; preds = %land.lhs.true20
  %16 = load i8*, i8** %a.addr, align 8, !dbg !17333, !tbaa !2355
  %17 = load i8, i8* %16, align 1, !dbg !17334, !tbaa !2507, !ctir !88
  %conv26 = sext i8 %17 to i32, !dbg !17334
  %18 = load i8*, i8** %b.addr, align 8, !dbg !17335, !tbaa !2355
  %19 = load i8, i8* %18, align 1, !dbg !17336, !tbaa !2507, !ctir !88
  %conv27 = sext i8 %19 to i32, !dbg !17336
  %sub28 = sub nsw i32 %conv26, %conv27, !dbg !17337
  store i32 %sub28, i32* %retval, align 4, !dbg !17338
  br label %return, !dbg !17338

if.end29:                                         ; preds = %land.lhs.true20, %while.end
  %20 = load i8*, i8** %a.addr, align 8, !dbg !17339, !tbaa !2355
  %21 = load i8, i8* %20, align 1, !dbg !17339, !tbaa !2507, !ctir !88
  %conv30 = sext i8 %21 to i32, !dbg !17339
  %sub31 = sub i32 %conv30, 48, !dbg !17339
  %cmp32 = icmp ule i32 %sub31, 9, !dbg !17339
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !17341

if.then34:                                        ; preds = %if.end29
  br label %a_trailing_nonzero, !dbg !17342

if.end35:                                         ; preds = %if.end29
  %22 = load i8*, i8** %b.addr, align 8, !dbg !17343, !tbaa !2355
  %23 = load i8, i8* %22, align 1, !dbg !17343, !tbaa !2507, !ctir !88
  %conv36 = sext i8 %23 to i32, !dbg !17343
  %sub37 = sub i32 %conv36, 48, !dbg !17343
  %cmp38 = icmp ule i32 %sub37, 9, !dbg !17343
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !17345

if.then40:                                        ; preds = %if.end35
  br label %b_trailing_nonzero, !dbg !17346

if.end41:                                         ; preds = %if.end35
  store i32 0, i32* %retval, align 4, !dbg !17347
  br label %return, !dbg !17347

if.else:                                          ; preds = %land.lhs.true, %entry
  %24 = load i8*, i8** %a.addr, align 8, !dbg !17348, !tbaa !2355
  %incdec.ptr42 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !17348
  store i8* %incdec.ptr42, i8** %a.addr, align 8, !dbg !17348, !tbaa !2355
  %25 = load i8, i8* %24, align 1, !dbg !17350, !tbaa !2507, !ctir !88
  %conv43 = sext i8 %25 to i32, !dbg !17350
  %26 = load i8, i8* %decimal_point.addr, align 1, !dbg !17351, !tbaa !2507
  %conv44 = sext i8 %26 to i32, !dbg !17351
  %cmp45 = icmp eq i32 %conv43, %conv44, !dbg !17352
  br i1 %cmp45, label %if.then47, label %if.else59, !dbg !17353

if.then47:                                        ; preds = %if.else
  br label %a_trailing_nonzero, !dbg !17354

a_trailing_nonzero:                               ; preds = %if.then47, %if.then34
  call void @llvm.dbg.label(metadata !17355), !dbg !17357
  br label %while.cond48, !dbg !17358

while.cond48:                                     ; preds = %while.body52, %a_trailing_nonzero
  %27 = load i8*, i8** %a.addr, align 8, !dbg !17359, !tbaa !2355
  %28 = load i8, i8* %27, align 1, !dbg !17360, !tbaa !2507, !ctir !88
  %conv49 = sext i8 %28 to i32, !dbg !17360
  %cmp50 = icmp eq i32 %conv49, 48, !dbg !17361
  br i1 %cmp50, label %while.body52, label %while.end54, !dbg !17358

while.body52:                                     ; preds = %while.cond48
  %29 = load i8*, i8** %a.addr, align 8, !dbg !17362, !tbaa !2355
  %incdec.ptr53 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !17362
  store i8* %incdec.ptr53, i8** %a.addr, align 8, !dbg !17362, !tbaa !2355
  br label %while.cond48, !dbg !17358, !llvm.loop !17363

while.end54:                                      ; preds = %while.cond48
  %30 = load i8*, i8** %a.addr, align 8, !dbg !17364, !tbaa !2355
  %31 = load i8, i8* %30, align 1, !dbg !17364, !tbaa !2507, !ctir !88
  %conv55 = sext i8 %31 to i32, !dbg !17364
  %sub56 = sub i32 %conv55, 48, !dbg !17364
  %cmp57 = icmp ule i32 %sub56, 9, !dbg !17364
  %conv58 = zext i1 %cmp57 to i32, !dbg !17364
  store i32 %conv58, i32* %retval, align 4, !dbg !17365
  br label %return, !dbg !17365

if.else59:                                        ; preds = %if.else
  %32 = load i8*, i8** %b.addr, align 8, !dbg !17366, !tbaa !2355
  %incdec.ptr60 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !17366
  store i8* %incdec.ptr60, i8** %b.addr, align 8, !dbg !17366, !tbaa !2355
  %33 = load i8, i8* %32, align 1, !dbg !17368, !tbaa !2507, !ctir !88
  %conv61 = sext i8 %33 to i32, !dbg !17368
  %34 = load i8, i8* %decimal_point.addr, align 1, !dbg !17369, !tbaa !2507
  %conv62 = sext i8 %34 to i32, !dbg !17369
  %cmp63 = icmp eq i32 %conv61, %conv62, !dbg !17370
  br i1 %cmp63, label %if.then65, label %if.end78, !dbg !17371

if.then65:                                        ; preds = %if.else59
  br label %b_trailing_nonzero, !dbg !17372

b_trailing_nonzero:                               ; preds = %if.then65, %if.then40
  call void @llvm.dbg.label(metadata !17373), !dbg !17375
  br label %while.cond66, !dbg !17376

while.cond66:                                     ; preds = %while.body70, %b_trailing_nonzero
  %35 = load i8*, i8** %b.addr, align 8, !dbg !17377, !tbaa !2355
  %36 = load i8, i8* %35, align 1, !dbg !17378, !tbaa !2507, !ctir !88
  %conv67 = sext i8 %36 to i32, !dbg !17378
  %cmp68 = icmp eq i32 %conv67, 48, !dbg !17379
  br i1 %cmp68, label %while.body70, label %while.end72, !dbg !17376

while.body70:                                     ; preds = %while.cond66
  %37 = load i8*, i8** %b.addr, align 8, !dbg !17380, !tbaa !2355
  %incdec.ptr71 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !17380
  store i8* %incdec.ptr71, i8** %b.addr, align 8, !dbg !17380, !tbaa !2355
  br label %while.cond66, !dbg !17376, !llvm.loop !17381

while.end72:                                      ; preds = %while.cond66
  %38 = load i8*, i8** %b.addr, align 8, !dbg !17382, !tbaa !2355
  %39 = load i8, i8* %38, align 1, !dbg !17382, !tbaa !2507, !ctir !88
  %conv73 = sext i8 %39 to i32, !dbg !17382
  %sub74 = sub i32 %conv73, 48, !dbg !17382
  %cmp75 = icmp ule i32 %sub74, 9, !dbg !17382
  %conv76 = zext i1 %cmp75 to i32, !dbg !17382
  %sub77 = sub nsw i32 0, %conv76, !dbg !17383
  store i32 %sub77, i32* %retval, align 4, !dbg !17384
  br label %return, !dbg !17384

if.end78:                                         ; preds = %if.else59
  br label %if.end79

if.end79:                                         ; preds = %if.end78
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  store i32 0, i32* %retval, align 4, !dbg !17385
  br label %return, !dbg !17385

return:                                           ; preds = %if.end80, %while.end72, %while.end54, %if.end41, %if.then25, %if.then15
  %40 = load i32, i32* %retval, align 4, !dbg !17386
  ret i32 %40, !dbg !17386
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !17387 !ctir !1872 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17389, metadata !DIExpression()), !dbg !17390
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17391, !tbaa !2342
  %cmp = icmp sle i32 0, %0, !dbg !17393
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17394

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !17395, !tbaa !2342
  %cmp1 = icmp sle i32 %1, 2, !dbg !17396
  br i1 %cmp1, label %if.then, label %if.end, !dbg !17397

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17398, metadata !DIExpression()), !dbg !17400
  %2 = load i32, i32* %fd.addr, align 4, !dbg !17401, !tbaa !2342
  %call = call i32 @dup_safer(i32 %2), !dbg !17402
  store i32 %call, i32* %f, align 4, !dbg !17400, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17403, metadata !DIExpression()), !dbg !17404
  %call2 = call i32* @__errno_location() #16, !dbg !17405
  %3 = load i32, i32* %call2, align 4, !dbg !17405, !tbaa !2342, !ctir !5
  store i32 %3, i32* %e, align 4, !dbg !17404, !tbaa !2342
  %4 = load i32, i32* %fd.addr, align 4, !dbg !17406, !tbaa !2342
  %call3 = call i32 @close(i32 %4), !dbg !17407
  %5 = load i32, i32* %e, align 4, !dbg !17408, !tbaa !2342
  %call4 = call i32* @__errno_location() #16, !dbg !17409
  store i32 %5, i32* %call4, align 4, !dbg !17410, !tbaa !2342, !ctir !5
  %6 = load i32, i32* %f, align 4, !dbg !17411, !tbaa !2342
  store i32 %6, i32* %fd.addr, align 4, !dbg !17412, !tbaa !2342
  br label %if.end, !dbg !17413

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !17414, !tbaa !2342
  ret i32 %7, !dbg !17415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17416 !ctir !1877 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1879
  %command_name.addr = alloca i8*, align 8, !ctir !87
  %package.addr = alloca i8*, align 8, !ctir !87
  %version.addr = alloca i8*, align 8, !ctir !87
  %authors.addr = alloca i8**, align 8, !ctir !812
  %n_authors.addr = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17418, metadata !DIExpression()), !dbg !17419
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17420, metadata !DIExpression()), !dbg !17421
  store i8* %package, i8** %package.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17422, metadata !DIExpression()), !dbg !17423
  store i8* %version, i8** %version.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17424, metadata !DIExpression()), !dbg !17425
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17426, metadata !DIExpression()), !dbg !17427
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17428, metadata !DIExpression()), !dbg !17429
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17430, !tbaa !2355
  %tobool = icmp ne i8* %0, null, !dbg !17430
  br i1 %tobool, label %if.then, label %if.else, !dbg !17432

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17433, !tbaa !2355
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17434, !tbaa !2355
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17435, !tbaa !2355
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17436, !tbaa !2355
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.305, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17437
  br label %if.end, !dbg !17437

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17438, !tbaa !2355
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17439, !tbaa !2355
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17440, !tbaa !2355
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.306, i64 0, i64 0), i8* %6, i8* %7), !dbg !17441
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17442, !tbaa !2355
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.307, i64 0, i64 0)) #12, !dbg !17443
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17444
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17445, !tbaa !2355
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.308, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !17445
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17446, !tbaa !2355
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.309, i64 0, i64 0)) #12, !dbg !17447
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.310, i64 0, i64 0)), !dbg !17448
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17449, !tbaa !2355
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.308, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !17449
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !17450, !tbaa !2516
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !17451

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17452

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17454, !tbaa !2355
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.311, i64 0, i64 0)) #12, !dbg !17455
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !17456, !tbaa !2355
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !17456, !ctir !812
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !17456, !tbaa !2355
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !17457
  br label %sw.epilog, !dbg !17458

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17459, !tbaa !2355
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.312, i64 0, i64 0)) #12, !dbg !17460
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17461, !tbaa !2355
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !17461, !ctir !812
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !17461, !tbaa !2355
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !17462, !tbaa !2355
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !17462, !ctir !812
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !17462, !tbaa !2355
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !17463
  br label %sw.epilog, !dbg !17464

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17465, !tbaa !2355
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.313, i64 0, i64 0)) #12, !dbg !17466
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17467, !tbaa !2355
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !17467, !ctir !812
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !17467, !tbaa !2355
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17468, !tbaa !2355
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !17468, !ctir !812
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !17468, !tbaa !2355
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !17469, !tbaa !2355
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !17469, !ctir !812
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !17469, !tbaa !2355
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !17470
  br label %sw.epilog, !dbg !17471

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17472, !tbaa !2355
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.314, i64 0, i64 0)) #12, !dbg !17473
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17474, !tbaa !2355
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !17474, !ctir !812
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !17474, !tbaa !2355
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17475, !tbaa !2355
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !17475, !ctir !812
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !17475, !tbaa !2355
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17476, !tbaa !2355
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !17476, !ctir !812
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !17476, !tbaa !2355
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !17477, !tbaa !2355
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !17477, !ctir !812
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !17477, !tbaa !2355
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !17478
  br label %sw.epilog, !dbg !17479

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17480, !tbaa !2355
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.315, i64 0, i64 0)) #12, !dbg !17481
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17482, !tbaa !2355
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !17482, !ctir !812
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !17482, !tbaa !2355
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17483, !tbaa !2355
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !17483, !ctir !812
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !17483, !tbaa !2355
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17484, !tbaa !2355
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !17484, !ctir !812
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !17484, !tbaa !2355
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17485, !tbaa !2355
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !17485, !ctir !812
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !17485, !tbaa !2355
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !17486, !tbaa !2355
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !17486, !ctir !812
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !17486, !tbaa !2355
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !17487
  br label %sw.epilog, !dbg !17488

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17489, !tbaa !2355
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.316, i64 0, i64 0)) #12, !dbg !17490
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17491, !tbaa !2355
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !17491, !ctir !812
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !17491, !tbaa !2355
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17492, !tbaa !2355
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !17492, !ctir !812
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !17492, !tbaa !2355
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17493, !tbaa !2355
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !17493, !ctir !812
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !17493, !tbaa !2355
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17494, !tbaa !2355
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !17494, !ctir !812
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !17494, !tbaa !2355
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17495, !tbaa !2355
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !17495, !ctir !812
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !17495, !tbaa !2355
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !17496, !tbaa !2355
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !17496, !ctir !812
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !17496, !tbaa !2355
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !17497
  br label %sw.epilog, !dbg !17498

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17499, !tbaa !2355
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.317, i64 0, i64 0)) #12, !dbg !17500
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17501, !tbaa !2355
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !17501, !ctir !812
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !17501, !tbaa !2355
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17502, !tbaa !2355
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !17502, !ctir !812
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !17502, !tbaa !2355
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17503, !tbaa !2355
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !17503, !ctir !812
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !17503, !tbaa !2355
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17504, !tbaa !2355
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !17504, !ctir !812
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !17504, !tbaa !2355
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17505, !tbaa !2355
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !17505, !ctir !812
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !17505, !tbaa !2355
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17506, !tbaa !2355
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !17506, !ctir !812
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !17506, !tbaa !2355
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !17507, !tbaa !2355
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !17507, !ctir !812
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !17507, !tbaa !2355
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !17508
  br label %sw.epilog, !dbg !17509

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17510, !tbaa !2355
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.318, i64 0, i64 0)) #12, !dbg !17511
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17512, !tbaa !2355
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !17512, !ctir !812
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !17512, !tbaa !2355
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17513, !tbaa !2355
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !17513, !ctir !812
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !17513, !tbaa !2355
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17514, !tbaa !2355
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !17514, !ctir !812
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !17514, !tbaa !2355
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17515, !tbaa !2355
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !17515, !ctir !812
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !17515, !tbaa !2355
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17516, !tbaa !2355
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !17516, !ctir !812
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !17516, !tbaa !2355
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17517, !tbaa !2355
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !17517, !ctir !812
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !17517, !tbaa !2355
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17518, !tbaa !2355
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !17518, !ctir !812
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !17518, !tbaa !2355
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !17519, !tbaa !2355
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !17519, !ctir !812
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !17519, !tbaa !2355
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !17520
  br label %sw.epilog, !dbg !17521

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17522, !tbaa !2355
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.319, i64 0, i64 0)) #12, !dbg !17523
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17524, !tbaa !2355
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !17524, !ctir !812
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !17524, !tbaa !2355
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17525, !tbaa !2355
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !17525, !ctir !812
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !17525, !tbaa !2355
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17526, !tbaa !2355
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !17526, !ctir !812
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !17526, !tbaa !2355
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17527, !tbaa !2355
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !17527, !ctir !812
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !17527, !tbaa !2355
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17528, !tbaa !2355
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !17528, !ctir !812
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !17528, !tbaa !2355
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17529, !tbaa !2355
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !17529, !ctir !812
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !17529, !tbaa !2355
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17530, !tbaa !2355
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !17530, !ctir !812
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !17530, !tbaa !2355
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17531, !tbaa !2355
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !17531, !ctir !812
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !17531, !tbaa !2355
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !17532, !tbaa !2355
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !17532, !ctir !812
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !17532, !tbaa !2355
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !17533
  br label %sw.epilog, !dbg !17534

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17535, !tbaa !2355
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.320, i64 0, i64 0)) #12, !dbg !17536
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17537, !tbaa !2355
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !17537, !ctir !812
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !17537, !tbaa !2355
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17538, !tbaa !2355
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !17538, !ctir !812
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !17538, !tbaa !2355
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17539, !tbaa !2355
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !17539, !ctir !812
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !17539, !tbaa !2355
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17540, !tbaa !2355
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !17540, !ctir !812
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !17540, !tbaa !2355
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17541, !tbaa !2355
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !17541, !ctir !812
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !17541, !tbaa !2355
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17542, !tbaa !2355
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !17542, !ctir !812
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !17542, !tbaa !2355
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17543, !tbaa !2355
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !17543, !ctir !812
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !17543, !tbaa !2355
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17544, !tbaa !2355
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !17544, !ctir !812
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !17544, !tbaa !2355
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !17545, !tbaa !2355
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !17545, !ctir !812
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !17545, !tbaa !2355
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !17546
  br label %sw.epilog, !dbg !17547

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !17548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17549 !ctir !1920 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1879
  %command_name.addr = alloca i8*, align 8, !ctir !87
  %package.addr = alloca i8*, align 8, !ctir !87
  %version.addr = alloca i8*, align 8, !ctir !87
  %authors.addr = alloca i8**, align 8, !ctir !812
  %n_authors = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17550, metadata !DIExpression()), !dbg !17551
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17552, metadata !DIExpression()), !dbg !17553
  store i8* %package, i8** %package.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17554, metadata !DIExpression()), !dbg !17555
  store i8* %version, i8** %version.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17556, metadata !DIExpression()), !dbg !17557
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17558, metadata !DIExpression()), !dbg !17559
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17560, metadata !DIExpression()), !dbg !17561
  store i64 0, i64* %n_authors, align 8, !dbg !17562, !tbaa !2516
  br label %for.cond, !dbg !17564

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17565, !tbaa !2355
  %1 = load i64, i64* %n_authors, align 8, !dbg !17567, !tbaa !2516
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17565, !ctir !812
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17565, !tbaa !2355
  %tobool = icmp ne i8* %2, null, !dbg !17568
  br i1 %tobool, label %for.body, label %for.end, !dbg !17568

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17568

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17569, !tbaa !2516
  %inc = add i64 %3, 1, !dbg !17569
  store i64 %inc, i64* %n_authors, align 8, !dbg !17569, !tbaa !2516
  br label %for.cond, !dbg !17570, !llvm.loop !17571

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17573, !tbaa !2355
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17574, !tbaa !2355
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17575, !tbaa !2355
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17576, !tbaa !2355
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17577, !tbaa !2355
  %9 = load i64, i64* %n_authors, align 8, !dbg !17578, !tbaa !2516
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17579
  ret void, !dbg !17580
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17581 !ctir !1922 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1879
  %command_name.addr = alloca i8*, align 8, !ctir !87
  %package.addr = alloca i8*, align 8, !ctir !87
  %version.addr = alloca i8*, align 8, !ctir !87
  %authors.addr = alloca %struct.__va_list_tag*, align 8, !ctir !1924
  %n_authors = alloca i64, align 8, !ctir !52
  %authtab = alloca [10 x i8*], align 16, !ctir !1931
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17582, metadata !DIExpression()), !dbg !17583
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17584, metadata !DIExpression()), !dbg !17585
  store i8* %package, i8** %package.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17586, metadata !DIExpression()), !dbg !17587
  store i8* %version, i8** %version.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17588, metadata !DIExpression()), !dbg !17589
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17590, metadata !DIExpression()), !dbg !17591
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17592, metadata !DIExpression()), !dbg !17593
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17594, metadata !DIExpression()), !dbg !17595
  store i64 0, i64* %n_authors, align 8, !dbg !17596, !tbaa !2516
  br label %for.cond, !dbg !17598

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17599, !tbaa !2516
  %cmp = icmp ult i64 %0, 10, !dbg !17601
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17602

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17603, !tbaa !2355
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17603
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17603
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17603
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17603

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17603
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17603
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17603
  %4 = bitcast i8* %3 to i8**, !dbg !17603
  %5 = add i32 %gp_offset, 8, !dbg !17603
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17603
  br label %vaarg.end, !dbg !17603

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17603
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17603
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17603
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17603
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17603
  br label %vaarg.end, !dbg !17603

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17603
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17603
  %8 = load i64, i64* %n_authors, align 8, !dbg !17604, !tbaa !2516
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17605, !ctir !1931
  store i8* %7, i8** %arrayidx, align 8, !dbg !17606, !tbaa !2355
  %cmp1 = icmp ne i8* %7, null, !dbg !17607
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17608
  br i1 %9, label %for.body, label %for.end, !dbg !17609

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17609

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17610, !tbaa !2516
  %inc = add i64 %10, 1, !dbg !17610
  store i64 %inc, i64* %n_authors, align 8, !dbg !17610, !tbaa !2516
  br label %for.cond, !dbg !17611, !llvm.loop !17612

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17614, !tbaa !2355
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17615, !tbaa !2355
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17616, !tbaa !2355
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17617, !tbaa !2355
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17618
  %15 = load i64, i64* %n_authors, align 8, !dbg !17619, !tbaa !2516
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17620
  ret void, !dbg !17621
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17622 !ctir !1932 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1879
  %command_name.addr = alloca i8*, align 8, !ctir !87
  %package.addr = alloca i8*, align 8, !ctir !87
  %version.addr = alloca i8*, align 8, !ctir !87
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1934
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17625, metadata !DIExpression()), !dbg !17626
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17627, metadata !DIExpression()), !dbg !17628
  store i8* %package, i8** %package.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17629, metadata !DIExpression()), !dbg !17630
  store i8* %version, i8** %version.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17631, metadata !DIExpression()), !dbg !17632
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17633, metadata !DIExpression()), !dbg !17634
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17635
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17635
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17635
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17636, !tbaa !2355
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17637, !tbaa !2355
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17638, !tbaa !2355
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17639, !tbaa !2355
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17640
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17641
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17642
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17642
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17642
  ret void, !dbg !17643
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17644 !ctir !167 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17645, !tbaa !2355
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.308, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !17645
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.323, i64 0, i64 0)) #12, !dbg !17646
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.324, i64 0, i64 0)), !dbg !17647
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.325, i64 0, i64 0)) #12, !dbg !17648
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.326, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.327, i64 0, i64 0)), !dbg !17649
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.328, i64 0, i64 0)) #12, !dbg !17650
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.329, i64 0, i64 0)), !dbg !17651
  ret void, !dbg !17652
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17653 !ctir !1941 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17655, metadata !DIExpression()), !dbg !17656
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17657, metadata !DIExpression()), !dbg !17658
  %0 = load i64, i64* %s.addr, align 8, !dbg !17659, !tbaa !2516
  %div = udiv i64 9223372036854775807, %0, !dbg !17659
  %1 = load i64, i64* %n.addr, align 8, !dbg !17659, !tbaa !2516
  %cmp = icmp ult i64 %div, %1, !dbg !17659
  br i1 %cmp, label %if.then, label %if.end, !dbg !17661

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !17662
  unreachable, !dbg !17662

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17663, !tbaa !2516
  %3 = load i64, i64* %s.addr, align 8, !dbg !17664, !tbaa !2516
  %mul = mul i64 %2, %3, !dbg !17665
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17666
  ret i8* %call, !dbg !17667
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17668 !ctir !1397 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17670, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17672, metadata !DIExpression()), !dbg !17673
  %0 = load i64, i64* %n.addr, align 8, !dbg !17674, !tbaa !2516
  %call = call noalias i8* @malloc(i64 %0) #12, !dbg !17675
  store i8* %call, i8** %p, align 8, !dbg !17673, !tbaa !2355
  %1 = load i8*, i8** %p, align 8, !dbg !17676, !tbaa !2355
  %tobool = icmp ne i8* %1, null, !dbg !17676
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17678

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17679, !tbaa !2516
  %cmp = icmp ne i64 %2, 0, !dbg !17680
  br i1 %cmp, label %if.then, label %if.end, !dbg !17681

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !17682
  unreachable, !dbg !17682

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17683, !tbaa !2355
  ret i8* %3, !dbg !17684
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17685 !ctir !1943 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17686, metadata !DIExpression()), !dbg !17687
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17688, metadata !DIExpression()), !dbg !17689
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17690, metadata !DIExpression()), !dbg !17691
  %0 = load i64, i64* %s.addr, align 8, !dbg !17692, !tbaa !2516
  %div = udiv i64 9223372036854775807, %0, !dbg !17692
  %1 = load i64, i64* %n.addr, align 8, !dbg !17692, !tbaa !2516
  %cmp = icmp ult i64 %div, %1, !dbg !17692
  br i1 %cmp, label %if.then, label %if.end, !dbg !17694

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !17695
  unreachable, !dbg !17695

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17696, !tbaa !2355
  %3 = load i64, i64* %n.addr, align 8, !dbg !17697, !tbaa !2516
  %4 = load i64, i64* %s.addr, align 8, !dbg !17698, !tbaa !2516
  %mul = mul i64 %3, %4, !dbg !17699
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17700
  ret i8* %call, !dbg !17701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17702 !ctir !1401 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %p.addr = alloca i8*, align 8, !ctir !47
  %n.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17703, metadata !DIExpression()), !dbg !17704
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17705, metadata !DIExpression()), !dbg !17706
  %0 = load i64, i64* %n.addr, align 8, !dbg !17707, !tbaa !2516
  %tobool = icmp ne i64 %0, 0, !dbg !17707
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17709

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17710, !tbaa !2355
  %tobool1 = icmp ne i8* %1, null, !dbg !17710
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17711

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17712, !tbaa !2355
  call void @free(i8* %2) #12, !dbg !17714
  store i8* null, i8** %retval, align 8, !dbg !17715
  br label %return, !dbg !17715

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17716, !tbaa !2355
  %4 = load i64, i64* %n.addr, align 8, !dbg !17717, !tbaa !2516
  %call = call i8* @realloc(i8* %3, i64 %4) #12, !dbg !17718
  store i8* %call, i8** %p.addr, align 8, !dbg !17719, !tbaa !2355
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17720, !tbaa !2355
  %tobool2 = icmp ne i8* %5, null, !dbg !17720
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17722

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17723, !tbaa !2516
  %tobool4 = icmp ne i64 %6, 0, !dbg !17723
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17724

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !17725
  unreachable, !dbg !17725

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17726, !tbaa !2355
  store i8* %7, i8** %retval, align 8, !dbg !17727
  br label %return, !dbg !17727

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17728
  ret i8* %8, !dbg !17728
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17729 !ctir !1945 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %pn.addr = alloca i64*, align 8, !ctir !354
  %s.addr = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17730, metadata !DIExpression()), !dbg !17731
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17732, metadata !DIExpression()), !dbg !17733
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17734, metadata !DIExpression()), !dbg !17735
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17736, metadata !DIExpression()), !dbg !17737
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17738, !tbaa !2355
  %1 = load i64, i64* %0, align 8, !dbg !17739, !tbaa !2516, !ctir !52
  store i64 %1, i64* %n, align 8, !dbg !17737, !tbaa !2516
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17740, !tbaa !2355
  %tobool = icmp ne i8* %2, null, !dbg !17740
  br i1 %tobool, label %if.else, label %if.then, !dbg !17742

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17743, !tbaa !2516
  %tobool1 = icmp ne i64 %3, 0, !dbg !17743
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17746

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17747, !tbaa !2516
  %div = udiv i64 128, %4, !dbg !17749
  store i64 %div, i64* %n, align 8, !dbg !17750, !tbaa !2516
  %5 = load i64, i64* %n, align 8, !dbg !17751, !tbaa !2516
  %tobool3 = icmp ne i64 %5, 0, !dbg !17752
  %lnot = xor i1 %tobool3, true, !dbg !17752
  %lnot.ext = zext i1 %lnot to i32, !dbg !17752
  %conv = sext i32 %lnot.ext to i64, !dbg !17752
  %6 = load i64, i64* %n, align 8, !dbg !17753, !tbaa !2516
  %add = add i64 %6, %conv, !dbg !17753
  store i64 %add, i64* %n, align 8, !dbg !17753, !tbaa !2516
  br label %if.end, !dbg !17754

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !17755, !tbaa !2516
  %div4 = udiv i64 9223372036854775807, %7, !dbg !17755
  %8 = load i64, i64* %n, align 8, !dbg !17755, !tbaa !2516
  %cmp = icmp ult i64 %div4, %8, !dbg !17755
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !17757

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !17758
  unreachable, !dbg !17758

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !17759

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !17760, !tbaa !2516
  %div8 = udiv i64 6148914691236517204, %9, !dbg !17763
  %10 = load i64, i64* %n, align 8, !dbg !17764, !tbaa !2516
  %cmp9 = icmp ule i64 %div8, %10, !dbg !17765
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17766

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !17767
  unreachable, !dbg !17767

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !17768, !tbaa !2516
  %div13 = udiv i64 %11, 2, !dbg !17769
  %add14 = add i64 %div13, 1, !dbg !17770
  %12 = load i64, i64* %n, align 8, !dbg !17771, !tbaa !2516
  %add15 = add i64 %12, %add14, !dbg !17771
  store i64 %add15, i64* %n, align 8, !dbg !17771, !tbaa !2516
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !17772, !tbaa !2516
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !17773, !tbaa !2355
  store i64 %13, i64* %14, align 8, !dbg !17774, !tbaa !2516, !ctir !52
  %15 = load i8*, i8** %p.addr, align 8, !dbg !17775, !tbaa !2355
  %16 = load i64, i64* %n, align 8, !dbg !17776, !tbaa !2516
  %17 = load i64, i64* %s.addr, align 8, !dbg !17777, !tbaa !2516
  %mul = mul i64 %16, %17, !dbg !17778
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !17779
  ret i8* %call, !dbg !17780
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !17781 !ctir !1947 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17782, metadata !DIExpression()), !dbg !17783
  %0 = load i64, i64* %n.addr, align 8, !dbg !17784, !tbaa !2516
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17784
  ret i8* %call, !dbg !17785
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !17786 !ctir !1949 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %pn.addr = alloca i64*, align 8, !ctir !354
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17787, metadata !DIExpression()), !dbg !17788
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17789, metadata !DIExpression()), !dbg !17790
  %0 = load i8*, i8** %p.addr, align 8, !dbg !17791, !tbaa !2355
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !17792, !tbaa !2355
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !17793
  ret i8* %call, !dbg !17794
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !17795 !ctir !1397 {
entry:
  %s.addr = alloca i64, align 8, !ctir !52
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17796, metadata !DIExpression()), !dbg !17797
  %0 = load i64, i64* %s.addr, align 8, !dbg !17798, !tbaa !2516
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17799
  %1 = load i64, i64* %s.addr, align 8, !dbg !17800, !tbaa !2516
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !17801
  ret i8* %call, !dbg !17802
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !17803 !ctir !1941 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17804, metadata !DIExpression()), !dbg !17805
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17806, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17808, metadata !DIExpression()), !dbg !17809
  %0 = load i64, i64* %s.addr, align 8, !dbg !17810, !tbaa !2516
  %div = udiv i64 9223372036854775807, %0, !dbg !17810
  %1 = load i64, i64* %n.addr, align 8, !dbg !17810, !tbaa !2516
  %cmp = icmp ult i64 %div, %1, !dbg !17810
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17812

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17813, !tbaa !2516
  %3 = load i64, i64* %s.addr, align 8, !dbg !17814, !tbaa !2516
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #12, !dbg !17815
  store i8* %call, i8** %p, align 8, !dbg !17816, !tbaa !2355
  %tobool = icmp ne i8* %call, null, !dbg !17816
  br i1 %tobool, label %if.end, label %if.then, !dbg !17817

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !17818
  unreachable, !dbg !17818

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !17819, !tbaa !2355
  ret i8* %4, !dbg !17820
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !17821 !ctir !1951 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !85
  %s.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17822, metadata !DIExpression()), !dbg !17823
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17824, metadata !DIExpression()), !dbg !17825
  %0 = load i64, i64* %s.addr, align 8, !dbg !17826, !tbaa !2516
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17827
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17828, !tbaa !2355
  %2 = load i64, i64* %s.addr, align 8, !dbg !17829, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !17830
  ret i8* %call, !dbg !17831
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !17832 !ctir !1266 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !87
  store i8* %string, i8** %string.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !17833, metadata !DIExpression()), !dbg !17834
  %0 = load i8*, i8** %string.addr, align 8, !dbg !17835, !tbaa !2355
  %1 = load i8*, i8** %string.addr, align 8, !dbg !17836, !tbaa !2355
  %call = call i64 @strlen(i8* %1) #14, !dbg !17837
  %add = add i64 %call, 1, !dbg !17838
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !17839
  ret i8* %call1, !dbg !17840
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !17841 !ctir !167 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !17843, !tbaa !2342
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.348, i64 0, i64 0)) #12, !dbg !17844
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.349, i64 0, i64 0), i8* %call), !dbg !17845
  call void @abort() #13, !dbg !17846
  unreachable, !dbg !17846
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xmemcoll(i8* %s1, i64 %s1len, i8* %s2, i64 %s2len) #4 !dbg !17847 !ctir !1959 {
entry:
  %s1.addr = alloca i8*, align 8, !ctir !7
  %s1len.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !7
  %s2len.addr = alloca i64, align 8, !ctir !52
  %diff = alloca i32, align 4, !ctir !5
  %collation_errno = alloca i32, align 4, !ctir !5
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !17849, metadata !DIExpression()), !dbg !17850
  store i64 %s1len, i64* %s1len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1len.addr, metadata !17851, metadata !DIExpression()), !dbg !17852
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !17853, metadata !DIExpression()), !dbg !17854
  store i64 %s2len, i64* %s2len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2len.addr, metadata !17855, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !17857, metadata !DIExpression()), !dbg !17858
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !17859, !tbaa !2355
  %1 = load i64, i64* %s1len.addr, align 8, !dbg !17860, !tbaa !2516
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !17861, !tbaa !2355
  %3 = load i64, i64* %s2len.addr, align 8, !dbg !17862, !tbaa !2516
  %call = call i32 @memcoll(i8* %0, i64 %1, i8* %2, i64 %3), !dbg !17863
  store i32 %call, i32* %diff, align 4, !dbg !17858, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %collation_errno, metadata !17864, metadata !DIExpression()), !dbg !17865
  %call1 = call i32* @__errno_location() #16, !dbg !17866
  %4 = load i32, i32* %call1, align 4, !dbg !17866, !tbaa !2342, !ctir !5
  store i32 %4, i32* %collation_errno, align 4, !dbg !17865, !tbaa !2342
  %5 = load i32, i32* %collation_errno, align 4, !dbg !17867, !tbaa !2342
  %tobool = icmp ne i32 %5, 0, !dbg !17867
  br i1 %tobool, label %if.then, label %if.end, !dbg !17869

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %collation_errno, align 4, !dbg !17870, !tbaa !2342
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !17871, !tbaa !2355
  %8 = load i64, i64* %s1len.addr, align 8, !dbg !17872, !tbaa !2516
  %9 = load i8*, i8** %s2.addr, align 8, !dbg !17873, !tbaa !2355
  %10 = load i64, i64* %s2len.addr, align 8, !dbg !17874, !tbaa !2516
  call void @collate_error(i32 %6, i8* %7, i64 %8, i8* %9, i64 %10), !dbg !17875
  br label %if.end, !dbg !17875

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %diff, align 4, !dbg !17876, !tbaa !2342
  ret i32 %11, !dbg !17877
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @collate_error(i32 %collation_errno, i8* %s1, i64 %s1len, i8* %s2, i64 %s2len) #4 !dbg !17878 !ctir !1961 {
entry:
  %collation_errno.addr = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s1len.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !87
  %s2len.addr = alloca i64, align 8, !ctir !52
  store i32 %collation_errno, i32* %collation_errno.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %collation_errno.addr, metadata !17879, metadata !DIExpression()), !dbg !17880
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !17881, metadata !DIExpression()), !dbg !17882
  store i64 %s1len, i64* %s1len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1len.addr, metadata !17883, metadata !DIExpression()), !dbg !17884
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !17885, metadata !DIExpression()), !dbg !17886
  store i64 %s2len, i64* %s2len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2len.addr, metadata !17887, metadata !DIExpression()), !dbg !17888
  %0 = load i32, i32* %collation_errno.addr, align 4, !dbg !17889, !tbaa !2342
  %call = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.350, i64 0, i64 0)) #12, !dbg !17890
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %0, i8* %call), !dbg !17891
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.351, i64 0, i64 0)) #12, !dbg !17892
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call1), !dbg !17893
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !17894, !tbaa !2342
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.352, i64 0, i64 0)) #12, !dbg !17895
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !17896, !tbaa !2355
  %3 = load i64, i64* %s1len.addr, align 8, !dbg !17897, !tbaa !2516
  %call3 = call i8* @quotearg_n_style_mem(i32 0, i32 8, i8* %2, i64 %3), !dbg !17898
  %4 = load i8*, i8** %s2.addr, align 8, !dbg !17899, !tbaa !2355
  %5 = load i64, i64* %s2len.addr, align 8, !dbg !17900, !tbaa !2516
  %call4 = call i8* @quotearg_n_style_mem(i32 1, i32 8, i8* %4, i64 %5), !dbg !17901
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* %call2, i8* %call3, i8* %call4), !dbg !17902
  ret void, !dbg !17903
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xmemcoll0(i8* %s1, i64 %s1size, i8* %s2, i64 %s2size) #4 !dbg !17904 !ctir !1533 {
entry:
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s1size.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !87
  %s2size.addr = alloca i64, align 8, !ctir !52
  %diff = alloca i32, align 4, !ctir !5
  %collation_errno = alloca i32, align 4, !ctir !5
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !17905, metadata !DIExpression()), !dbg !17906
  store i64 %s1size, i64* %s1size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1size.addr, metadata !17907, metadata !DIExpression()), !dbg !17908
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !17909, metadata !DIExpression()), !dbg !17910
  store i64 %s2size, i64* %s2size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2size.addr, metadata !17911, metadata !DIExpression()), !dbg !17912
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !17913, metadata !DIExpression()), !dbg !17914
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !17915, !tbaa !2355
  %1 = load i64, i64* %s1size.addr, align 8, !dbg !17916, !tbaa !2516
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !17917, !tbaa !2355
  %3 = load i64, i64* %s2size.addr, align 8, !dbg !17918, !tbaa !2516
  %call = call i32 @memcoll0(i8* %0, i64 %1, i8* %2, i64 %3), !dbg !17919
  store i32 %call, i32* %diff, align 4, !dbg !17914, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %collation_errno, metadata !17920, metadata !DIExpression()), !dbg !17921
  %call1 = call i32* @__errno_location() #16, !dbg !17922
  %4 = load i32, i32* %call1, align 4, !dbg !17922, !tbaa !2342, !ctir !5
  store i32 %4, i32* %collation_errno, align 4, !dbg !17921, !tbaa !2342
  %5 = load i32, i32* %collation_errno, align 4, !dbg !17923, !tbaa !2342
  %tobool = icmp ne i32 %5, 0, !dbg !17923
  br i1 %tobool, label %if.then, label %if.end, !dbg !17925

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %collation_errno, align 4, !dbg !17926, !tbaa !2342
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !17927, !tbaa !2355
  %8 = load i64, i64* %s1size.addr, align 8, !dbg !17928, !tbaa !2516
  %sub = sub i64 %8, 1, !dbg !17929
  %9 = load i8*, i8** %s2.addr, align 8, !dbg !17930, !tbaa !2355
  %10 = load i64, i64* %s2size.addr, align 8, !dbg !17931, !tbaa !2516
  %sub2 = sub i64 %10, 1, !dbg !17932
  call void @collate_error(i32 %6, i8* %7, i64 %sub, i8* %9, i64 %sub2), !dbg !17933
  br label %if.end, !dbg !17933

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %diff, align 4, !dbg !17934, !tbaa !2342
  ret i32 %11, !dbg !17935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xnanosleep(double %seconds) #4 !dbg !17936 !ctir !1966 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %seconds.addr = alloca double, align 8, !ctir !370
  %ts_sleep = alloca %struct.timespec, align 8, !ctir !17938
  store double %seconds, double* %seconds.addr, align 8, !tbaa !3931
  call void @llvm.dbg.declare(metadata double* %seconds.addr, metadata !17942, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.declare(metadata %struct.timespec* %ts_sleep, metadata !17944, metadata !DIExpression()), !dbg !17945
  %0 = load double, double* %seconds.addr, align 8, !dbg !17946, !tbaa !3931
  %call = call { i64, i64 } @dtotimespec(double %0) #16, !dbg !17947
  %1 = bitcast %struct.timespec* %ts_sleep to { i64, i64 }*, !dbg !17947
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !17947
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !17947
  store i64 %3, i64* %2, align 8, !dbg !17947
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !17947
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !17947
  store i64 %5, i64* %4, align 8, !dbg !17947
  br label %for.cond, !dbg !17948

for.cond:                                         ; preds = %if.end8, %entry
  %call1 = call i32* @__errno_location() #16, !dbg !17949
  store i32 0, i32* %call1, align 4, !dbg !17953, !tbaa !2342, !ctir !5
  %call2 = call i32 @rpl_nanosleep(%struct.timespec* %ts_sleep, %struct.timespec* null), !dbg !17954
  %cmp = icmp eq i32 %call2, 0, !dbg !17956
  br i1 %cmp, label %if.then, label %if.end, !dbg !17957

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !17958

if.end:                                           ; preds = %for.cond
  %call3 = call i32* @__errno_location() #16, !dbg !17959
  %6 = load i32, i32* %call3, align 4, !dbg !17959, !tbaa !2342, !ctir !5
  %cmp4 = icmp ne i32 %6, 4, !dbg !17961
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !17962

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !17963
  %7 = load i32, i32* %call5, align 4, !dbg !17963, !tbaa !2342, !ctir !5
  %cmp6 = icmp ne i32 %7, 0, !dbg !17964
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !17965

if.then7:                                         ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17966
  br label %return, !dbg !17966

if.end8:                                          ; preds = %land.lhs.true, %if.end
  br label %for.cond, !dbg !17967, !llvm.loop !17968

for.end:                                          ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !17971
  br label %return, !dbg !17971

return:                                           ; preds = %for.end, %if.then7
  %8 = load i32, i32* %retval, align 4, !dbg !17972
  ret i32 %8, !dbg !17972
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !17973 !ctir !1972 {
entry:
  %retval = alloca i32, align 4, !ctir !1974
  %s.addr = alloca i8*, align 8, !ctir !87
  %ptr.addr = alloca i8**, align 8, !ctir !91
  %strtol_base.addr = alloca i32, align 4, !ctir !5
  %val.addr = alloca i64*, align 8, !ctir !1975
  %valid_suffixes.addr = alloca i8*, align 8, !ctir !87
  %t_ptr = alloca i8*, align 8, !ctir !7
  %p = alloca i8**, align 8, !ctir !91
  %tmp = alloca i64, align 8, !ctir !54
  %err = alloca i32, align 4, !ctir !1974
  %q = alloca i8*, align 8, !ctir !87
  %ch = alloca i8, align 1, !ctir !317
  %base = alloca i32, align 4, !ctir !5
  %suffixes = alloca i32, align 4, !ctir !5
  %overflow = alloca i32, align 4, !ctir !1974
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !17975, metadata !DIExpression()), !dbg !17976
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !17977, metadata !DIExpression()), !dbg !17978
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !17979, metadata !DIExpression()), !dbg !17980
  store i64* %val, i64** %val.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !17981, metadata !DIExpression()), !dbg !17982
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !17983, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !17985, metadata !DIExpression()), !dbg !17986
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !17987, metadata !DIExpression()), !dbg !17988
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !17989, metadata !DIExpression()), !dbg !17990
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17991, metadata !DIExpression()), !dbg !17992
  store i32 0, i32* %err, align 4, !dbg !17992, !tbaa !2507
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !17993, !tbaa !2342
  %cmp = icmp sle i32 0, %0, !dbg !17993
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !17993

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !17993, !tbaa !2342
  %cmp1 = icmp sle i32 %1, 36, !dbg !17993
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !17993

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !17993

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.360, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !17993
  unreachable, !dbg !17993

2:                                                ; No predecessors!
  br label %cond.end, !dbg !17993

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !17994, !tbaa !2355
  %tobool = icmp ne i8** %3, null, !dbg !17994
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !17994

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !17995, !tbaa !2355
  br label %cond.end4, !dbg !17994

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !17994

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !17994
  store i8** %cond, i8*** %p, align 8, !dbg !17996, !tbaa !2355
  %call = call i32* @__errno_location() #16, !dbg !17997
  store i32 0, i32* %call, align 4, !dbg !17998, !tbaa !2342, !ctir !5
  call void @llvm.dbg.declare(metadata i8** %q, metadata !17999, metadata !DIExpression()), !dbg !18002
  %5 = load i8*, i8** %s.addr, align 8, !dbg !18003, !tbaa !2355
  store i8* %5, i8** %q, align 8, !dbg !18002, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18004, metadata !DIExpression()), !dbg !18005
  %6 = load i8*, i8** %q, align 8, !dbg !18006, !tbaa !2355
  %7 = load i8, i8* %6, align 1, !dbg !18007, !tbaa !2507, !ctir !88
  store i8 %7, i8* %ch, align 1, !dbg !18005, !tbaa !2507
  br label %while.cond, !dbg !18008

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #16, !dbg !18009
  %8 = load i16*, i16** %call5, align 8, !dbg !18009, !tbaa !2355, !ctir !321
  %9 = load i8, i8* %ch, align 1, !dbg !18009, !tbaa !2507
  %conv = zext i8 %9 to i32, !dbg !18009
  %idxprom = sext i32 %conv to i64, !dbg !18009
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !18009, !ctir !321
  %10 = load i16, i16* %arrayidx, align 2, !dbg !18009, !tbaa !3489
  %conv6 = zext i16 %10 to i32, !dbg !18009
  %and = and i32 %conv6, 8192, !dbg !18009
  %tobool7 = icmp ne i32 %and, 0, !dbg !18008
  br i1 %tobool7, label %while.body, label %while.end, !dbg !18008

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !18010, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !18010
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18010, !tbaa !2355
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !18011, !tbaa !2507, !ctir !88
  store i8 %12, i8* %ch, align 1, !dbg !18012, !tbaa !2507
  br label %while.cond, !dbg !18008, !llvm.loop !18013

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !18015, !tbaa !2507
  %conv8 = zext i8 %13 to i32, !dbg !18015
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !18017
  br i1 %cmp9, label %if.then, label %if.end, !dbg !18018

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18019
  br label %return, !dbg !18019

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !18020, !tbaa !2355
  %15 = load i8**, i8*** %p, align 8, !dbg !18021, !tbaa !2355
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !18022, !tbaa !2342
  %call11 = call i64 @strtoul(i8* %14, i8** %15, i32 %16) #12, !dbg !18023
  store i64 %call11, i64* %tmp, align 8, !dbg !18024, !tbaa !2516
  %17 = load i8**, i8*** %p, align 8, !dbg !18025, !tbaa !2355
  %18 = load i8*, i8** %17, align 8, !dbg !18027, !tbaa !2355, !ctir !7
  %19 = load i8*, i8** %s.addr, align 8, !dbg !18028, !tbaa !2355
  %cmp12 = icmp eq i8* %18, %19, !dbg !18029
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !18030

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18031, !tbaa !2355
  %tobool15 = icmp ne i8* %20, null, !dbg !18031
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !18034

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !18035, !tbaa !2355
  %22 = load i8*, i8** %21, align 8, !dbg !18036, !tbaa !2355, !ctir !7
  %23 = load i8, i8* %22, align 1, !dbg !18037, !tbaa !2507, !ctir !8
  %conv17 = sext i8 %23 to i32, !dbg !18037
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !18037
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !18038

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18039, !tbaa !2355
  %25 = load i8**, i8*** %p, align 8, !dbg !18040, !tbaa !2355
  %26 = load i8*, i8** %25, align 8, !dbg !18041, !tbaa !2355, !ctir !7
  %27 = load i8, i8* %26, align 1, !dbg !18042, !tbaa !2507, !ctir !8
  %conv20 = sext i8 %27 to i32, !dbg !18042
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #14, !dbg !18043
  %tobool22 = icmp ne i8* %call21, null, !dbg !18043
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !18044

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !18045, !tbaa !2516
  br label %if.end24, !dbg !18046

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !18047
  br label %return, !dbg !18047

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !18048

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #16, !dbg !18049
  %28 = load i32, i32* %call26, align 4, !dbg !18049, !tbaa !2342, !ctir !5
  %cmp27 = icmp ne i32 %28, 0, !dbg !18051
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !18052

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !18053
  %29 = load i32, i32* %call30, align 4, !dbg !18053, !tbaa !2342, !ctir !5
  %cmp31 = icmp ne i32 %29, 34, !dbg !18056
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !18057

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !18058
  br label %return, !dbg !18058

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !18059, !tbaa !2507
  br label %if.end35, !dbg !18060

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18061, !tbaa !2355
  %tobool37 = icmp ne i8* %30, null, !dbg !18061
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !18063

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !18064, !tbaa !2516
  %32 = load i64*, i64** %val.addr, align 8, !dbg !18066, !tbaa !2355
  store i64 %31, i64* %32, align 8, !dbg !18067, !tbaa !2516, !ctir !54
  %33 = load i32, i32* %err, align 4, !dbg !18068, !tbaa !2507
  store i32 %33, i32* %retval, align 4, !dbg !18069
  br label %return, !dbg !18069

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !18070, !tbaa !2355
  %35 = load i8*, i8** %34, align 8, !dbg !18072, !tbaa !2355, !ctir !7
  %36 = load i8, i8* %35, align 1, !dbg !18073, !tbaa !2507, !ctir !8
  %conv40 = sext i8 %36 to i32, !dbg !18073
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18074
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18075

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18076, metadata !DIExpression()), !dbg !18078
  store i32 1024, i32* %base, align 4, !dbg !18078, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18079, metadata !DIExpression()), !dbg !18080
  store i32 1, i32* %suffixes, align 4, !dbg !18080, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18081, metadata !DIExpression()), !dbg !18082
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18083, !tbaa !2355
  %38 = load i8**, i8*** %p, align 8, !dbg !18085, !tbaa !2355
  %39 = load i8*, i8** %38, align 8, !dbg !18086, !tbaa !2355, !ctir !7
  %40 = load i8, i8* %39, align 1, !dbg !18087, !tbaa !2507, !ctir !8
  %conv44 = sext i8 %40 to i32, !dbg !18087
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #14, !dbg !18088
  %tobool46 = icmp ne i8* %call45, null, !dbg !18088
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18089

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !18090, !tbaa !2516
  %42 = load i64*, i64** %val.addr, align 8, !dbg !18092, !tbaa !2355
  store i64 %41, i64* %42, align 8, !dbg !18093, !tbaa !2516, !ctir !54
  %43 = load i32, i32* %err, align 4, !dbg !18094, !tbaa !2507
  %or = or i32 %43, 2, !dbg !18095
  store i32 %or, i32* %retval, align 4, !dbg !18096
  br label %return, !dbg !18096

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !18097, !tbaa !2355
  %45 = load i8*, i8** %44, align 8, !dbg !18098, !tbaa !2355, !ctir !7
  %46 = load i8, i8* %45, align 1, !dbg !18099, !tbaa !2507, !ctir !8
  %conv49 = sext i8 %46 to i32, !dbg !18099
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18100

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18101, !tbaa !2355
  %call50 = call i8* @strchr(i8* %47, i32 48) #14, !dbg !18104
  %tobool51 = icmp ne i8* %call50, null, !dbg !18104
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18105

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !18106, !tbaa !2355
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !18106, !ctir !91
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !18106, !tbaa !2355
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !18106, !ctir !7
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !18106, !tbaa !2507
  %conv55 = sext i8 %50 to i32, !dbg !18106
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18107

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !18108, !tbaa !2355
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !18108, !ctir !91
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !18108, !tbaa !2355
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !18108, !ctir !7
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !18108, !tbaa !2507
  %conv59 = sext i8 %53 to i32, !dbg !18108
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18111
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18112

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !18113, !tbaa !2342
  %add = add nsw i32 %54, 2, !dbg !18113
  store i32 %add, i32* %suffixes, align 4, !dbg !18113, !tbaa !2342
  br label %if.end63, !dbg !18114

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18115

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18116, !tbaa !2342
  %55 = load i32, i32* %suffixes, align 4, !dbg !18117, !tbaa !2342
  %inc = add nsw i32 %55, 1, !dbg !18117
  store i32 %inc, i32* %suffixes, align 4, !dbg !18117, !tbaa !2342
  br label %sw.epilog, !dbg !18118

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18119

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18120

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !18121, !tbaa !2355
  %57 = load i8*, i8** %56, align 8, !dbg !18122, !tbaa !2355, !ctir !7
  %58 = load i8, i8* %57, align 1, !dbg !18123, !tbaa !2507, !ctir !8
  %conv67 = sext i8 %58 to i32, !dbg !18123
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18124

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !18125
  store i32 %call69, i32* %overflow, align 4, !dbg !18127, !tbaa !2507
  br label %sw.epilog92, !dbg !18128

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !18129
  store i32 %call71, i32* %overflow, align 4, !dbg !18130, !tbaa !2507
  br label %sw.epilog92, !dbg !18131

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18132, !tbaa !2507
  br label %sw.epilog92, !dbg !18133

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18134, !tbaa !2342
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 6), !dbg !18135
  store i32 %call74, i32* %overflow, align 4, !dbg !18136, !tbaa !2507
  br label %sw.epilog92, !dbg !18137

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18138, !tbaa !2342
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 3), !dbg !18139
  store i32 %call76, i32* %overflow, align 4, !dbg !18140, !tbaa !2507
  br label %sw.epilog92, !dbg !18141

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18142, !tbaa !2342
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 1), !dbg !18143
  store i32 %call78, i32* %overflow, align 4, !dbg !18144, !tbaa !2507
  br label %sw.epilog92, !dbg !18145

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18146, !tbaa !2342
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 2), !dbg !18147
  store i32 %call80, i32* %overflow, align 4, !dbg !18148, !tbaa !2507
  br label %sw.epilog92, !dbg !18149

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18150, !tbaa !2342
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 5), !dbg !18151
  store i32 %call82, i32* %overflow, align 4, !dbg !18152, !tbaa !2507
  br label %sw.epilog92, !dbg !18153

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18154, !tbaa !2342
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 4), !dbg !18155
  store i32 %call84, i32* %overflow, align 4, !dbg !18156, !tbaa !2507
  br label %sw.epilog92, !dbg !18157

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !18158
  store i32 %call86, i32* %overflow, align 4, !dbg !18159, !tbaa !2507
  br label %sw.epilog92, !dbg !18160

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !18161, !tbaa !2342
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 8), !dbg !18162
  store i32 %call88, i32* %overflow, align 4, !dbg !18163, !tbaa !2507
  br label %sw.epilog92, !dbg !18164

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !18165, !tbaa !2342
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %66, i32 7), !dbg !18166
  store i32 %call90, i32* %overflow, align 4, !dbg !18167, !tbaa !2507
  br label %sw.epilog92, !dbg !18168

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !18169, !tbaa !2516
  %68 = load i64*, i64** %val.addr, align 8, !dbg !18170, !tbaa !2355
  store i64 %67, i64* %68, align 8, !dbg !18171, !tbaa !2516, !ctir !54
  %69 = load i32, i32* %err, align 4, !dbg !18172, !tbaa !2507
  %or91 = or i32 %69, 2, !dbg !18173
  store i32 %or91, i32* %retval, align 4, !dbg !18174
  br label %return, !dbg !18174

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !18175, !tbaa !2507
  %71 = load i32, i32* %err, align 4, !dbg !18176, !tbaa !2507
  %or93 = or i32 %71, %70, !dbg !18176
  store i32 %or93, i32* %err, align 4, !dbg !18176, !tbaa !2507
  %72 = load i32, i32* %suffixes, align 4, !dbg !18177, !tbaa !2342
  %73 = load i8**, i8*** %p, align 8, !dbg !18178, !tbaa !2355
  %74 = load i8*, i8** %73, align 8, !dbg !18179, !tbaa !2355, !ctir !7
  %idx.ext = sext i32 %72 to i64, !dbg !18179
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !18179
  store i8* %add.ptr, i8** %73, align 8, !dbg !18179, !tbaa !2355, !ctir !7
  %75 = load i8**, i8*** %p, align 8, !dbg !18180, !tbaa !2355
  %76 = load i8*, i8** %75, align 8, !dbg !18182, !tbaa !2355, !ctir !7
  %77 = load i8, i8* %76, align 1, !dbg !18183, !tbaa !2507, !ctir !8
  %tobool94 = icmp ne i8 %77, 0, !dbg !18183
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !18184

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !18185, !tbaa !2507
  %or96 = or i32 %78, 2, !dbg !18185
  store i32 %or96, i32* %err, align 4, !dbg !18185, !tbaa !2507
  br label %if.end97, !dbg !18186

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !18187

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !18188, !tbaa !2516
  %80 = load i64*, i64** %val.addr, align 8, !dbg !18189, !tbaa !2355
  store i64 %79, i64* %80, align 8, !dbg !18190, !tbaa !2516, !ctir !54
  %81 = load i32, i32* %err, align 4, !dbg !18191, !tbaa !2507
  store i32 %81, i32* %retval, align 4, !dbg !18192
  br label %return, !dbg !18192

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !18193
  ret i32 %82, !dbg !18193
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !18194 !ctir !1976 {
entry:
  %retval = alloca i32, align 4, !ctir !1974
  %x.addr = alloca i64*, align 8, !ctir !1975
  %scale_factor.addr = alloca i32, align 4, !ctir !5
  store i64* %x, i64** %x.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18195, metadata !DIExpression()), !dbg !18196
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !18197, metadata !DIExpression()), !dbg !18198
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !18199, !tbaa !2342
  %conv = sext i32 %0 to i64, !dbg !18199
  %div = udiv i64 -1, %conv, !dbg !18201
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18202, !tbaa !2355
  %2 = load i64, i64* %1, align 8, !dbg !18203, !tbaa !2516, !ctir !54
  %cmp = icmp ult i64 %div, %2, !dbg !18204
  br i1 %cmp, label %if.then, label %if.end, !dbg !18205

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !18206, !tbaa !2355
  store i64 -1, i64* %3, align 8, !dbg !18208, !tbaa !2516, !ctir !54
  store i32 1, i32* %retval, align 4, !dbg !18209
  br label %return, !dbg !18209

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !18210, !tbaa !2342
  %conv2 = sext i32 %4 to i64, !dbg !18210
  %5 = load i64*, i64** %x.addr, align 8, !dbg !18211, !tbaa !2355
  %6 = load i64, i64* %5, align 8, !dbg !18212, !tbaa !2516, !ctir !54
  %mul = mul i64 %6, %conv2, !dbg !18212
  store i64 %mul, i64* %5, align 8, !dbg !18212, !tbaa !2516, !ctir !54
  store i32 0, i32* %retval, align 4, !dbg !18213
  br label %return, !dbg !18213

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18214
  ret i32 %7, !dbg !18214
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !18215 !ctir !1978 {
entry:
  %x.addr = alloca i64*, align 8, !ctir !1975
  %base.addr = alloca i32, align 4, !ctir !5
  %power.addr = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !1974
  store i64* %x, i64** %x.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18216, metadata !DIExpression()), !dbg !18217
  store i32 %base, i32* %base.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !18218, metadata !DIExpression()), !dbg !18219
  store i32 %power, i32* %power.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !18220, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18222, metadata !DIExpression()), !dbg !18223
  store i32 0, i32* %err, align 4, !dbg !18223, !tbaa !2507
  br label %while.cond, !dbg !18224

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !18225, !tbaa !2342
  %dec = add nsw i32 %0, -1, !dbg !18225
  store i32 %dec, i32* %power.addr, align 4, !dbg !18225, !tbaa !2342
  %tobool = icmp ne i32 %0, 0, !dbg !18224
  br i1 %tobool, label %while.body, label %while.end, !dbg !18224

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18226, !tbaa !2355
  %2 = load i32, i32* %base.addr, align 4, !dbg !18227, !tbaa !2342
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !18228
  %3 = load i32, i32* %err, align 4, !dbg !18229, !tbaa !2507
  %or = or i32 %3, %call, !dbg !18229
  store i32 %or, i32* %err, align 4, !dbg !18229, !tbaa !2507
  br label %while.cond, !dbg !18224, !llvm.loop !18230

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !18232, !tbaa !2507
  ret i32 %4, !dbg !18233
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) #0 !dbg !18234 !ctir !1983 {
entry:
  %err.addr = alloca i32, align 4, !ctir !71
  %opt_idx.addr = alloca i32, align 4, !ctir !5
  %c.addr = alloca i8, align 1, !ctir !8
  %long_options.addr = alloca %struct.option*, align 8, !ctir !1985
  %arg.addr = alloca i8*, align 8, !ctir !87
  store i32 %err, i32* %err.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !18236, metadata !DIExpression()), !dbg !18237
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !18238, metadata !DIExpression()), !dbg !18239
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !18240, metadata !DIExpression()), !dbg !18241
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !18242, metadata !DIExpression()), !dbg !18243
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18244, metadata !DIExpression()), !dbg !18245
  %0 = load i32, i32* %err.addr, align 4, !dbg !18246, !tbaa !2507
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !18247, !tbaa !2342
  %2 = load i8, i8* %c.addr, align 1, !dbg !18248, !tbaa !2507
  %3 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !18249, !tbaa !2355
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18250, !tbaa !2355
  %5 = load volatile i32, i32* @exit_failure, align 4, !dbg !18251, !tbaa !2342
  call void @xstrtol_error(i32 %0, i32 %1, i8 signext %2, %struct.option* %3, i8* %4, i32 %5), !dbg !18252
  call void @abort() #13, !dbg !18253
  unreachable, !dbg !18253
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) #4 !dbg !18254 !ctir !1993 {
entry:
  %err.addr = alloca i32, align 4, !ctir !71
  %opt_idx.addr = alloca i32, align 4, !ctir !5
  %c.addr = alloca i8, align 1, !ctir !8
  %long_options.addr = alloca %struct.option*, align 8, !ctir !1985
  %arg.addr = alloca i8*, align 8, !ctir !87
  %exit_status.addr = alloca i32, align 4, !ctir !5
  %hyphens = alloca i8*, align 8, !ctir !87
  %msgid = alloca i8*, align 8, !ctir !87
  %option = alloca i8*, align 8, !ctir !87
  %option_buffer = alloca [2 x i8], align 1, !ctir !268
  store i32 %err, i32* %err.addr, align 4, !tbaa !2507
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !18255, metadata !DIExpression()), !dbg !18256
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !18257, metadata !DIExpression()), !dbg !18258
  store i8 %c, i8* %c.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !18259, metadata !DIExpression()), !dbg !18260
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !18261, metadata !DIExpression()), !dbg !18262
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18263, metadata !DIExpression()), !dbg !18264
  store i32 %exit_status, i32* %exit_status.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !18265, metadata !DIExpression()), !dbg !18266
  call void @llvm.dbg.declare(metadata i8** %hyphens, metadata !18267, metadata !DIExpression()), !dbg !18268
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.363, i64 0, i64 0), i8** %hyphens, align 8, !dbg !18268, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %msgid, metadata !18269, metadata !DIExpression()), !dbg !18270
  call void @llvm.dbg.declare(metadata i8** %option, metadata !18271, metadata !DIExpression()), !dbg !18272
  call void @llvm.dbg.declare(metadata [2 x i8]* %option_buffer, metadata !18273, metadata !DIExpression()), !dbg !18274
  %0 = load i32, i32* %err.addr, align 4, !dbg !18275, !tbaa !2507
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !18276

sw.default:                                       ; preds = %entry
  call void @abort() #13, !dbg !18277
  unreachable, !dbg !18277

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.364, i64 0, i64 0), i8** %msgid, align 8, !dbg !18279, !tbaa !2355
  br label %sw.epilog, !dbg !18280

sw.bb1:                                           ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.365, i64 0, i64 0), i8** %msgid, align 8, !dbg !18281, !tbaa !2355
  br label %sw.epilog, !dbg !18282

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.366, i64 0, i64 0), i8** %msgid, align 8, !dbg !18283, !tbaa !2355
  br label %sw.epilog, !dbg !18284

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !18285, !tbaa !2342
  %cmp = icmp slt i32 %1, 0, !dbg !18287
  br i1 %cmp, label %if.then, label %if.else, !dbg !18288

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %opt_idx.addr, align 4, !dbg !18289, !tbaa !2342
  %3 = load i8*, i8** %hyphens, align 8, !dbg !18291, !tbaa !2355
  %idx.ext = sext i32 %2 to i64, !dbg !18291
  %idx.neg = sub i64 0, %idx.ext, !dbg !18291
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !18291
  store i8* %add.ptr, i8** %hyphens, align 8, !dbg !18291, !tbaa !2355
  %4 = load i8, i8* %c.addr, align 1, !dbg !18292, !tbaa !2507
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !18293, !ctir !268
  store i8 %4, i8* %arrayidx, align 1, !dbg !18294, !tbaa !2507
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 1, !dbg !18295, !ctir !268
  store i8 0, i8* %arrayidx3, align 1, !dbg !18296, !tbaa !2507
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !18297
  store i8* %arraydecay, i8** %option, align 8, !dbg !18298, !tbaa !2355
  br label %if.end, !dbg !18299

if.else:                                          ; preds = %sw.epilog
  %5 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !18300, !tbaa !2355
  %6 = load i32, i32* %opt_idx.addr, align 4, !dbg !18301, !tbaa !2342
  %idxprom = sext i32 %6 to i64, !dbg !18300
  %arrayidx4 = getelementptr inbounds %struct.option, %struct.option* %5, i64 %idxprom, !dbg !18300, !ctir !1985
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx4, i32 0, i32 0, !dbg !18302, !ctir !1986
  %7 = load i8*, i8** %name, align 8, !dbg !18302, !tbaa !3845, !ctir !87
  store i8* %7, i8** %option, align 8, !dbg !18303, !tbaa !2355
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %exit_status.addr, align 4, !dbg !18304, !tbaa !2342
  %9 = load i8*, i8** %msgid, align 8, !dbg !18305, !tbaa !2355
  %call = call i8* @gettext(i8* %9) #12, !dbg !18306
  %10 = load i8*, i8** %hyphens, align 8, !dbg !18307, !tbaa !2355
  %11 = load i8*, i8** %option, align 8, !dbg !18308, !tbaa !2355
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !18309, !tbaa !2355
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 0, i8* %call, i8* %10, i8* %11, i8* %12), !dbg !18310
  ret void, !dbg !18311
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !18312 !ctir !1998 {
entry:
  %retval = alloca i32, align 4, !ctir !1974
  %s.addr = alloca i8*, align 8, !ctir !87
  %ptr.addr = alloca i8**, align 8, !ctir !91
  %strtol_base.addr = alloca i32, align 4, !ctir !5
  %val.addr = alloca i64*, align 8, !ctir !2000
  %valid_suffixes.addr = alloca i8*, align 8, !ctir !87
  %t_ptr = alloca i8*, align 8, !ctir !7
  %p = alloca i8**, align 8, !ctir !91
  %tmp = alloca i64, align 8, !ctir !355
  %err = alloca i32, align 4, !ctir !1974
  %q = alloca i8*, align 8, !ctir !87
  %ch = alloca i8, align 1, !ctir !317
  %base = alloca i32, align 4, !ctir !5
  %suffixes = alloca i32, align 4, !ctir !5
  %overflow = alloca i32, align 4, !ctir !1974
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18313, metadata !DIExpression()), !dbg !18314
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18315, metadata !DIExpression()), !dbg !18316
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !18317, metadata !DIExpression()), !dbg !18318
  store i64* %val, i64** %val.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !18319, metadata !DIExpression()), !dbg !18320
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !18321, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !18323, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !18325, metadata !DIExpression()), !dbg !18326
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !18327, metadata !DIExpression()), !dbg !18328
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18329, metadata !DIExpression()), !dbg !18330
  store i32 0, i32* %err, align 4, !dbg !18330, !tbaa !2507
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !18331, !tbaa !2342
  %cmp = icmp sle i32 0, %0, !dbg !18331
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !18331

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !18331, !tbaa !2342
  %cmp1 = icmp sle i32 %1, 36, !dbg !18331
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !18331

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !18331

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.369, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.370, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.xstrtoumax, i64 0, i64 0)) #13, !dbg !18331
  unreachable, !dbg !18331

2:                                                ; No predecessors!
  br label %cond.end, !dbg !18331

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !18332, !tbaa !2355
  %tobool = icmp ne i8** %3, null, !dbg !18332
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !18332

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !18333, !tbaa !2355
  br label %cond.end4, !dbg !18332

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !18332

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !18332
  store i8** %cond, i8*** %p, align 8, !dbg !18334, !tbaa !2355
  %call = call i32* @__errno_location() #16, !dbg !18335
  store i32 0, i32* %call, align 4, !dbg !18336, !tbaa !2342, !ctir !5
  call void @llvm.dbg.declare(metadata i8** %q, metadata !18337, metadata !DIExpression()), !dbg !18340
  %5 = load i8*, i8** %s.addr, align 8, !dbg !18341, !tbaa !2355
  store i8* %5, i8** %q, align 8, !dbg !18340, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18342, metadata !DIExpression()), !dbg !18343
  %6 = load i8*, i8** %q, align 8, !dbg !18344, !tbaa !2355
  %7 = load i8, i8* %6, align 1, !dbg !18345, !tbaa !2507, !ctir !88
  store i8 %7, i8* %ch, align 1, !dbg !18343, !tbaa !2507
  br label %while.cond, !dbg !18346

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #16, !dbg !18347
  %8 = load i16*, i16** %call5, align 8, !dbg !18347, !tbaa !2355, !ctir !321
  %9 = load i8, i8* %ch, align 1, !dbg !18347, !tbaa !2507
  %conv = zext i8 %9 to i32, !dbg !18347
  %idxprom = sext i32 %conv to i64, !dbg !18347
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !18347, !ctir !321
  %10 = load i16, i16* %arrayidx, align 2, !dbg !18347, !tbaa !3489
  %conv6 = zext i16 %10 to i32, !dbg !18347
  %and = and i32 %conv6, 8192, !dbg !18347
  %tobool7 = icmp ne i32 %and, 0, !dbg !18346
  br i1 %tobool7, label %while.body, label %while.end, !dbg !18346

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !18348, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !18348
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18348, !tbaa !2355
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !18349, !tbaa !2507, !ctir !88
  store i8 %12, i8* %ch, align 1, !dbg !18350, !tbaa !2507
  br label %while.cond, !dbg !18346, !llvm.loop !18351

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !18353, !tbaa !2507
  %conv8 = zext i8 %13 to i32, !dbg !18353
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !18355
  br i1 %cmp9, label %if.then, label %if.end, !dbg !18356

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18357
  br label %return, !dbg !18357

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !18358, !tbaa !2355
  %15 = load i8**, i8*** %p, align 8, !dbg !18359, !tbaa !2355
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !18360, !tbaa !2342
  %call11 = call i64 @strtoumax(i8* %14, i8** %15, i32 %16) #12, !dbg !18361
  store i64 %call11, i64* %tmp, align 8, !dbg !18362, !tbaa !2516
  %17 = load i8**, i8*** %p, align 8, !dbg !18363, !tbaa !2355
  %18 = load i8*, i8** %17, align 8, !dbg !18365, !tbaa !2355, !ctir !7
  %19 = load i8*, i8** %s.addr, align 8, !dbg !18366, !tbaa !2355
  %cmp12 = icmp eq i8* %18, %19, !dbg !18367
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !18368

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18369, !tbaa !2355
  %tobool15 = icmp ne i8* %20, null, !dbg !18369
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !18372

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !18373, !tbaa !2355
  %22 = load i8*, i8** %21, align 8, !dbg !18374, !tbaa !2355, !ctir !7
  %23 = load i8, i8* %22, align 1, !dbg !18375, !tbaa !2507, !ctir !8
  %conv17 = sext i8 %23 to i32, !dbg !18375
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !18375
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !18376

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18377, !tbaa !2355
  %25 = load i8**, i8*** %p, align 8, !dbg !18378, !tbaa !2355
  %26 = load i8*, i8** %25, align 8, !dbg !18379, !tbaa !2355, !ctir !7
  %27 = load i8, i8* %26, align 1, !dbg !18380, !tbaa !2507, !ctir !8
  %conv20 = sext i8 %27 to i32, !dbg !18380
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #14, !dbg !18381
  %tobool22 = icmp ne i8* %call21, null, !dbg !18381
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !18382

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !18383, !tbaa !2516
  br label %if.end24, !dbg !18384

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !18385
  br label %return, !dbg !18385

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !18386

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #16, !dbg !18387
  %28 = load i32, i32* %call26, align 4, !dbg !18387, !tbaa !2342, !ctir !5
  %cmp27 = icmp ne i32 %28, 0, !dbg !18389
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !18390

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !18391
  %29 = load i32, i32* %call30, align 4, !dbg !18391, !tbaa !2342, !ctir !5
  %cmp31 = icmp ne i32 %29, 34, !dbg !18394
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !18395

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !18396
  br label %return, !dbg !18396

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !18397, !tbaa !2507
  br label %if.end35, !dbg !18398

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18399, !tbaa !2355
  %tobool37 = icmp ne i8* %30, null, !dbg !18399
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !18401

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !18402, !tbaa !2516
  %32 = load i64*, i64** %val.addr, align 8, !dbg !18404, !tbaa !2355
  store i64 %31, i64* %32, align 8, !dbg !18405, !tbaa !2516, !ctir !355
  %33 = load i32, i32* %err, align 4, !dbg !18406, !tbaa !2507
  store i32 %33, i32* %retval, align 4, !dbg !18407
  br label %return, !dbg !18407

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !18408, !tbaa !2355
  %35 = load i8*, i8** %34, align 8, !dbg !18410, !tbaa !2355, !ctir !7
  %36 = load i8, i8* %35, align 1, !dbg !18411, !tbaa !2507, !ctir !8
  %conv40 = sext i8 %36 to i32, !dbg !18411
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18412
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18413

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18414, metadata !DIExpression()), !dbg !18416
  store i32 1024, i32* %base, align 4, !dbg !18416, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18417, metadata !DIExpression()), !dbg !18418
  store i32 1, i32* %suffixes, align 4, !dbg !18418, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18419, metadata !DIExpression()), !dbg !18420
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18421, !tbaa !2355
  %38 = load i8**, i8*** %p, align 8, !dbg !18423, !tbaa !2355
  %39 = load i8*, i8** %38, align 8, !dbg !18424, !tbaa !2355, !ctir !7
  %40 = load i8, i8* %39, align 1, !dbg !18425, !tbaa !2507, !ctir !8
  %conv44 = sext i8 %40 to i32, !dbg !18425
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #14, !dbg !18426
  %tobool46 = icmp ne i8* %call45, null, !dbg !18426
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18427

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !18428, !tbaa !2516
  %42 = load i64*, i64** %val.addr, align 8, !dbg !18430, !tbaa !2355
  store i64 %41, i64* %42, align 8, !dbg !18431, !tbaa !2516, !ctir !355
  %43 = load i32, i32* %err, align 4, !dbg !18432, !tbaa !2507
  %or = or i32 %43, 2, !dbg !18433
  store i32 %or, i32* %retval, align 4, !dbg !18434
  br label %return, !dbg !18434

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !18435, !tbaa !2355
  %45 = load i8*, i8** %44, align 8, !dbg !18436, !tbaa !2355, !ctir !7
  %46 = load i8, i8* %45, align 1, !dbg !18437, !tbaa !2507, !ctir !8
  %conv49 = sext i8 %46 to i32, !dbg !18437
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18438

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18439, !tbaa !2355
  %call50 = call i8* @strchr(i8* %47, i32 48) #14, !dbg !18442
  %tobool51 = icmp ne i8* %call50, null, !dbg !18442
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18443

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !18444, !tbaa !2355
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !18444, !ctir !91
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !18444, !tbaa !2355
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !18444, !ctir !7
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !18444, !tbaa !2507
  %conv55 = sext i8 %50 to i32, !dbg !18444
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18445

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !18446, !tbaa !2355
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !18446, !ctir !91
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !18446, !tbaa !2355
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !18446, !ctir !7
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !18446, !tbaa !2507
  %conv59 = sext i8 %53 to i32, !dbg !18446
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18449
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18450

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !18451, !tbaa !2342
  %add = add nsw i32 %54, 2, !dbg !18451
  store i32 %add, i32* %suffixes, align 4, !dbg !18451, !tbaa !2342
  br label %if.end63, !dbg !18452

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18453

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18454, !tbaa !2342
  %55 = load i32, i32* %suffixes, align 4, !dbg !18455, !tbaa !2342
  %inc = add nsw i32 %55, 1, !dbg !18455
  store i32 %inc, i32* %suffixes, align 4, !dbg !18455, !tbaa !2342
  br label %sw.epilog, !dbg !18456

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18457

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18458

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !18459, !tbaa !2355
  %57 = load i8*, i8** %56, align 8, !dbg !18460, !tbaa !2355, !ctir !7
  %58 = load i8, i8* %57, align 1, !dbg !18461, !tbaa !2507, !ctir !8
  %conv67 = sext i8 %58 to i32, !dbg !18461
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18462

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale.371(i64* %tmp, i32 512), !dbg !18463
  store i32 %call69, i32* %overflow, align 4, !dbg !18465, !tbaa !2507
  br label %sw.epilog92, !dbg !18466

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale.371(i64* %tmp, i32 1024), !dbg !18467
  store i32 %call71, i32* %overflow, align 4, !dbg !18468, !tbaa !2507
  br label %sw.epilog92, !dbg !18469

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18470, !tbaa !2507
  br label %sw.epilog92, !dbg !18471

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18472, !tbaa !2342
  %call74 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %59, i32 6), !dbg !18473
  store i32 %call74, i32* %overflow, align 4, !dbg !18474, !tbaa !2507
  br label %sw.epilog92, !dbg !18475

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18476, !tbaa !2342
  %call76 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %60, i32 3), !dbg !18477
  store i32 %call76, i32* %overflow, align 4, !dbg !18478, !tbaa !2507
  br label %sw.epilog92, !dbg !18479

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18480, !tbaa !2342
  %call78 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %61, i32 1), !dbg !18481
  store i32 %call78, i32* %overflow, align 4, !dbg !18482, !tbaa !2507
  br label %sw.epilog92, !dbg !18483

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18484, !tbaa !2342
  %call80 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %62, i32 2), !dbg !18485
  store i32 %call80, i32* %overflow, align 4, !dbg !18486, !tbaa !2507
  br label %sw.epilog92, !dbg !18487

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18488, !tbaa !2342
  %call82 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %63, i32 5), !dbg !18489
  store i32 %call82, i32* %overflow, align 4, !dbg !18490, !tbaa !2507
  br label %sw.epilog92, !dbg !18491

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18492, !tbaa !2342
  %call84 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %64, i32 4), !dbg !18493
  store i32 %call84, i32* %overflow, align 4, !dbg !18494, !tbaa !2507
  br label %sw.epilog92, !dbg !18495

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale.371(i64* %tmp, i32 2), !dbg !18496
  store i32 %call86, i32* %overflow, align 4, !dbg !18497, !tbaa !2507
  br label %sw.epilog92, !dbg !18498

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !18499, !tbaa !2342
  %call88 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %65, i32 8), !dbg !18500
  store i32 %call88, i32* %overflow, align 4, !dbg !18501, !tbaa !2507
  br label %sw.epilog92, !dbg !18502

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !18503, !tbaa !2342
  %call90 = call i32 @bkm_scale_by_power.372(i64* %tmp, i32 %66, i32 7), !dbg !18504
  store i32 %call90, i32* %overflow, align 4, !dbg !18505, !tbaa !2507
  br label %sw.epilog92, !dbg !18506

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !18507, !tbaa !2516
  %68 = load i64*, i64** %val.addr, align 8, !dbg !18508, !tbaa !2355
  store i64 %67, i64* %68, align 8, !dbg !18509, !tbaa !2516, !ctir !355
  %69 = load i32, i32* %err, align 4, !dbg !18510, !tbaa !2507
  %or91 = or i32 %69, 2, !dbg !18511
  store i32 %or91, i32* %retval, align 4, !dbg !18512
  br label %return, !dbg !18512

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !18513, !tbaa !2507
  %71 = load i32, i32* %err, align 4, !dbg !18514, !tbaa !2507
  %or93 = or i32 %71, %70, !dbg !18514
  store i32 %or93, i32* %err, align 4, !dbg !18514, !tbaa !2507
  %72 = load i32, i32* %suffixes, align 4, !dbg !18515, !tbaa !2342
  %73 = load i8**, i8*** %p, align 8, !dbg !18516, !tbaa !2355
  %74 = load i8*, i8** %73, align 8, !dbg !18517, !tbaa !2355, !ctir !7
  %idx.ext = sext i32 %72 to i64, !dbg !18517
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !18517
  store i8* %add.ptr, i8** %73, align 8, !dbg !18517, !tbaa !2355, !ctir !7
  %75 = load i8**, i8*** %p, align 8, !dbg !18518, !tbaa !2355
  %76 = load i8*, i8** %75, align 8, !dbg !18520, !tbaa !2355, !ctir !7
  %77 = load i8, i8* %76, align 1, !dbg !18521, !tbaa !2507, !ctir !8
  %tobool94 = icmp ne i8 %77, 0, !dbg !18521
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !18522

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !18523, !tbaa !2507
  %or96 = or i32 %78, 2, !dbg !18523
  store i32 %or96, i32* %err, align 4, !dbg !18523, !tbaa !2507
  br label %if.end97, !dbg !18524

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !18525

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !18526, !tbaa !2516
  %80 = load i64*, i64** %val.addr, align 8, !dbg !18527, !tbaa !2355
  store i64 %79, i64* %80, align 8, !dbg !18528, !tbaa !2516, !ctir !355
  %81 = load i32, i32* %err, align 4, !dbg !18529, !tbaa !2507
  store i32 %81, i32* %retval, align 4, !dbg !18530
  br label %return, !dbg !18530

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !18531
  ret i32 %82, !dbg !18531
}

; Function Attrs: nounwind
declare dso_local i64 @strtoumax(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale.371(i64* %x, i32 %scale_factor) #4 !dbg !18532 !ctir !2001 {
entry:
  %retval = alloca i32, align 4, !ctir !1974
  %x.addr = alloca i64*, align 8, !ctir !2000
  %scale_factor.addr = alloca i32, align 4, !ctir !5
  store i64* %x, i64** %x.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18533, metadata !DIExpression()), !dbg !18534
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !18535, metadata !DIExpression()), !dbg !18536
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !18537, !tbaa !2342
  %conv = sext i32 %0 to i64, !dbg !18537
  %div = udiv i64 -1, %conv, !dbg !18539
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18540, !tbaa !2355
  %2 = load i64, i64* %1, align 8, !dbg !18541, !tbaa !2516, !ctir !355
  %cmp = icmp ult i64 %div, %2, !dbg !18542
  br i1 %cmp, label %if.then, label %if.end, !dbg !18543

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !18544, !tbaa !2355
  store i64 -1, i64* %3, align 8, !dbg !18546, !tbaa !2516, !ctir !355
  store i32 1, i32* %retval, align 4, !dbg !18547
  br label %return, !dbg !18547

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !18548, !tbaa !2342
  %conv2 = sext i32 %4 to i64, !dbg !18548
  %5 = load i64*, i64** %x.addr, align 8, !dbg !18549, !tbaa !2355
  %6 = load i64, i64* %5, align 8, !dbg !18550, !tbaa !2516, !ctir !355
  %mul = mul i64 %6, %conv2, !dbg !18550
  store i64 %mul, i64* %5, align 8, !dbg !18550, !tbaa !2516, !ctir !355
  store i32 0, i32* %retval, align 4, !dbg !18551
  br label %return, !dbg !18551

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18552
  ret i32 %7, !dbg !18552
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power.372(i64* %x, i32 %base, i32 %power) #4 !dbg !18553 !ctir !2003 {
entry:
  %x.addr = alloca i64*, align 8, !ctir !2000
  %base.addr = alloca i32, align 4, !ctir !5
  %power.addr = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !1974
  store i64* %x, i64** %x.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18554, metadata !DIExpression()), !dbg !18555
  store i32 %base, i32* %base.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !18556, metadata !DIExpression()), !dbg !18557
  store i32 %power, i32* %power.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !18558, metadata !DIExpression()), !dbg !18559
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18560, metadata !DIExpression()), !dbg !18561
  store i32 0, i32* %err, align 4, !dbg !18561, !tbaa !2507
  br label %while.cond, !dbg !18562

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !18563, !tbaa !2342
  %dec = add nsw i32 %0, -1, !dbg !18563
  store i32 %dec, i32* %power.addr, align 4, !dbg !18563, !tbaa !2342
  %tobool = icmp ne i32 %0, 0, !dbg !18562
  br i1 %tobool, label %while.body, label %while.end, !dbg !18562

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18564, !tbaa !2355
  %2 = load i32, i32* %base.addr, align 4, !dbg !18565, !tbaa !2342
  %call = call i32 @bkm_scale.371(i64* %1, i32 %2), !dbg !18566
  %3 = load i32, i32* %err, align 4, !dbg !18567, !tbaa !2507
  %or = or i32 %3, %call, !dbg !18567
  store i32 %or, i32* %err, align 4, !dbg !18567, !tbaa !2507
  br label %while.cond, !dbg !18562, !llvm.loop !18568

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !18570, !tbaa !2507
  ret i32 %4, !dbg !18571
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @explicit_bzero(i8* nonnull %s, i64 %len) #4 !dbg !18572 !ctir !2008 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !47
  %len.addr = alloca i64, align 8, !ctir !52
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18574, metadata !DIExpression()), !dbg !18575
  store i64 %len, i64* %len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !18576, metadata !DIExpression()), !dbg !18577
  %0 = load i8*, i8** %s.addr, align 8, !dbg !18578, !tbaa !2355
  %1 = load i64, i64* %len.addr, align 8, !dbg !18579, !tbaa !2516
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !18580
  ret void, !dbg !18581
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !18582 !ctir !2013 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2015
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18584, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18586, metadata !DIExpression()), !dbg !18587
  store i32 0, i32* %saved_errno, align 4, !dbg !18587, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18588, metadata !DIExpression()), !dbg !18589
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18590, metadata !DIExpression()), !dbg !18591
  store i32 0, i32* %result, align 4, !dbg !18591, !tbaa !2342
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18592, !tbaa !2355
  %call = call i32 @fileno(%struct._IO_FILE* %0) #12, !dbg !18593
  store i32 %call, i32* %fd, align 4, !dbg !18594, !tbaa !2342
  %1 = load i32, i32* %fd, align 4, !dbg !18595, !tbaa !2342
  %cmp = icmp slt i32 %1, 0, !dbg !18597
  br i1 %cmp, label %if.then, label %if.end, !dbg !18598

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18599, !tbaa !2355
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !18600
  store i32 %call1, i32* %retval, align 4, !dbg !18601
  br label %return, !dbg !18601

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18602, !tbaa !2355
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #12, !dbg !18602
  %cmp3 = icmp ne i32 %call2, 0, !dbg !18602
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !18604

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18605, !tbaa !2355
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #12, !dbg !18606
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #12, !dbg !18607
  %cmp6 = icmp ne i64 %call5, -1, !dbg !18608
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !18609

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18610, !tbaa !2355
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !18611
  %tobool = icmp ne i32 %call7, 0, !dbg !18611
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !18612

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !18613
  %6 = load i32, i32* %call9, align 4, !dbg !18613, !tbaa !2342, !ctir !5
  store i32 %6, i32* %saved_errno, align 4, !dbg !18614, !tbaa !2342
  br label %if.end10, !dbg !18615

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18616, !tbaa !2355
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !18617
  store i32 %call11, i32* %result, align 4, !dbg !18618, !tbaa !2342
  %8 = load i32, i32* %saved_errno, align 4, !dbg !18619, !tbaa !2342
  %cmp12 = icmp ne i32 %8, 0, !dbg !18621
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !18622

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !18623, !tbaa !2342
  %call14 = call i32* @__errno_location() #16, !dbg !18625
  store i32 %9, i32* %call14, align 4, !dbg !18626, !tbaa !2342, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !18627, !tbaa !2342
  br label %if.end15, !dbg !18628

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !18629, !tbaa !2342
  store i32 %10, i32* %retval, align 4, !dbg !18630
  br label %return, !dbg !18630

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !18631
  ret i32 %11, !dbg !18631
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !18632 !ctir !1348 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %action.addr = alloca i32, align 4, !ctir !5
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1353
  %result = alloca i32, align 4, !ctir !5
  %target = alloca i32, align 4, !ctir !5
  %target4 = alloca i32, align 4, !ctir !5
  %x = alloca i32, align 4, !ctir !5
  %p = alloca i8*, align 8, !ctir !47
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18635, metadata !DIExpression()), !dbg !18636
  store i32 %action, i32* %action.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !18637, metadata !DIExpression()), !dbg !18638
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !18639, metadata !DIExpression()), !dbg !18640
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18641, metadata !DIExpression()), !dbg !18642
  store i32 -1, i32* %result, align 4, !dbg !18642, !tbaa !2342
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18643
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18643
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18643
  %0 = load i32, i32* %action.addr, align 4, !dbg !18644, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !18645

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !18646, metadata !DIExpression()), !dbg !18649
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18650
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !18650
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !18650
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18650
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18650

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !18650
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !18650
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18650
  %3 = bitcast i8* %2 to i32*, !dbg !18650
  %4 = add i32 %gp_offset, 8, !dbg !18650
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !18650
  br label %vaarg.end, !dbg !18650

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !18650
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18650
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !18650
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18650
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18650
  br label %vaarg.end, !dbg !18650

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !18650
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !18650
  store i32 %6, i32* %target, align 4, !dbg !18649, !tbaa !2342
  %7 = load i32, i32* %fd.addr, align 4, !dbg !18651, !tbaa !2342
  %8 = load i32, i32* %target, align 4, !dbg !18652, !tbaa !2342
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !18653
  store i32 %call, i32* %result, align 4, !dbg !18654, !tbaa !2342
  br label %sw.epilog48, !dbg !18655

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !18656, metadata !DIExpression()), !dbg !18658
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18659
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !18659
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !18659
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !18659
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !18659

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !18659
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !18659
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !18659
  %11 = bitcast i8* %10 to i32*, !dbg !18659
  %12 = add i32 %gp_offset7, 8, !dbg !18659
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !18659
  br label %vaarg.end15, !dbg !18659

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !18659
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !18659
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !18659
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !18659
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !18659
  br label %vaarg.end15, !dbg !18659

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !18659
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !18659
  store i32 %14, i32* %target4, align 4, !dbg !18658, !tbaa !2342
  %15 = load i32, i32* %fd.addr, align 4, !dbg !18660, !tbaa !2342
  %16 = load i32, i32* %target4, align 4, !dbg !18661, !tbaa !2342
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !18662
  store i32 %call17, i32* %result, align 4, !dbg !18663, !tbaa !2342
  br label %sw.epilog48, !dbg !18664

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !18665, !tbaa !2342
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 11, label %sw.bb18
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !18667

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !18668, !tbaa !2342
  %19 = load i32, i32* %action.addr, align 4, !dbg !18670, !tbaa !2342
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !18671
  store i32 %call19, i32* %result, align 4, !dbg !18672, !tbaa !2342
  br label %sw.epilog, !dbg !18673

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18674, metadata !DIExpression()), !dbg !18676
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18677
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !18677
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !18677
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !18677
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !18677

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !18677
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !18677
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !18677
  %22 = bitcast i8* %21 to i32*, !dbg !18677
  %23 = add i32 %gp_offset23, 8, !dbg !18677
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !18677
  br label %vaarg.end31, !dbg !18677

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !18677
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !18677
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !18677
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !18677
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !18677
  br label %vaarg.end31, !dbg !18677

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !18677
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !18677
  store i32 %25, i32* %x, align 4, !dbg !18676, !tbaa !2342
  %26 = load i32, i32* %fd.addr, align 4, !dbg !18678, !tbaa !2342
  %27 = load i32, i32* %action.addr, align 4, !dbg !18679, !tbaa !2342
  %28 = load i32, i32* %x, align 4, !dbg !18680, !tbaa !2342
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !18681
  store i32 %call33, i32* %result, align 4, !dbg !18682, !tbaa !2342
  br label %sw.epilog, !dbg !18683

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18684, metadata !DIExpression()), !dbg !18686
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18687
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !18687
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !18687
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !18687
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !18687

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !18687
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !18687
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !18687
  %31 = bitcast i8* %30 to i8**, !dbg !18687
  %32 = add i32 %gp_offset37, 8, !dbg !18687
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !18687
  br label %vaarg.end45, !dbg !18687

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !18687
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !18687
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !18687
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !18687
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !18687
  br label %vaarg.end45, !dbg !18687

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !18687
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !18687
  store i8* %34, i8** %p, align 8, !dbg !18686, !tbaa !2355
  %35 = load i32, i32* %fd.addr, align 4, !dbg !18688, !tbaa !2342
  %36 = load i32, i32* %action.addr, align 4, !dbg !18689, !tbaa !2342
  %37 = load i8*, i8** %p, align 8, !dbg !18690, !tbaa !2355
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !18691
  store i32 %call47, i32* %result, align 4, !dbg !18692, !tbaa !2342
  br label %sw.epilog, !dbg !18693

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !18694

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18695
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !18695
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !18695
  %38 = load i32, i32* %result, align 4, !dbg !18696, !tbaa !2342
  ret i32 %38, !dbg !18697
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !18698 !ctir !1348 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %target.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18699, metadata !DIExpression()), !dbg !18700
  store i32 %target, i32* %target.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !18701, metadata !DIExpression()), !dbg !18702
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18703, metadata !DIExpression()), !dbg !18704
  %0 = load i32, i32* %fd.addr, align 4, !dbg !18705, !tbaa !2342
  %1 = load i32, i32* %target.addr, align 4, !dbg !18706, !tbaa !2342
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !18707
  store i32 %call, i32* %result, align 4, !dbg !18708, !tbaa !2342
  %2 = load i32, i32* %result, align 4, !dbg !18709, !tbaa !2342
  ret i32 %2, !dbg !18710
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1346 !ctir !1348 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %target.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18711, metadata !DIExpression()), !dbg !18712
  store i32 %target, i32* %target.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !18713, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18715, metadata !DIExpression()), !dbg !18716
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18717, !tbaa !2342
  %cmp = icmp sle i32 0, %0, !dbg !18719
  br i1 %cmp, label %if.then, label %if.else9, !dbg !18720

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !18721, !tbaa !2342
  %2 = load i32, i32* %target.addr, align 4, !dbg !18723, !tbaa !2342
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !18724
  store i32 %call, i32* %result, align 4, !dbg !18725, !tbaa !2342
  %3 = load i32, i32* %result, align 4, !dbg !18726, !tbaa !2342
  %cmp1 = icmp sle i32 0, %3, !dbg !18728
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !18729

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !18730
  %4 = load i32, i32* %call2, align 4, !dbg !18730, !tbaa !2342, !ctir !5
  %cmp3 = icmp ne i32 %4, 22, !dbg !18731
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !18732

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18733, !tbaa !2342
  br label %if.end8, !dbg !18735

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !18736, !tbaa !2342
  %6 = load i32, i32* %target.addr, align 4, !dbg !18738, !tbaa !2342
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !18739
  store i32 %call5, i32* %result, align 4, !dbg !18740, !tbaa !2342
  %7 = load i32, i32* %result, align 4, !dbg !18741, !tbaa !2342
  %cmp6 = icmp sge i32 %7, 0, !dbg !18743
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !18744

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18745, !tbaa !2342
  br label %if.end, !dbg !18746

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !18747

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !18748, !tbaa !2342
  %9 = load i32, i32* %target.addr, align 4, !dbg !18749, !tbaa !2342
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !18750
  store i32 %call10, i32* %result, align 4, !dbg !18751, !tbaa !2342
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !18752, !tbaa !2342
  %cmp12 = icmp sle i32 0, %10, !dbg !18754
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !18755

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18756, !tbaa !2342
  %cmp13 = icmp eq i32 %11, -1, !dbg !18757
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !18758

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18759, metadata !DIExpression()), !dbg !18761
  %12 = load i32, i32* %result, align 4, !dbg !18762, !tbaa !2342
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !18763
  store i32 %call15, i32* %flags, align 4, !dbg !18761, !tbaa !2342
  %13 = load i32, i32* %flags, align 4, !dbg !18764, !tbaa !2342
  %cmp16 = icmp slt i32 %13, 0, !dbg !18766
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !18767

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !18768, !tbaa !2342
  %15 = load i32, i32* %flags, align 4, !dbg !18769, !tbaa !2342
  %or = or i32 %15, 1, !dbg !18770
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !18771
  %cmp19 = icmp eq i32 %call18, -1, !dbg !18772
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !18773

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18774, metadata !DIExpression()), !dbg !18776
  %call21 = call i32* @__errno_location() #16, !dbg !18777
  %16 = load i32, i32* %call21, align 4, !dbg !18777, !tbaa !2342, !ctir !5
  store i32 %16, i32* %saved_errno, align 4, !dbg !18776, !tbaa !2342
  %17 = load i32, i32* %result, align 4, !dbg !18778, !tbaa !2342
  %call22 = call i32 @close(i32 %17), !dbg !18779
  %18 = load i32, i32* %saved_errno, align 4, !dbg !18780, !tbaa !2342
  %call23 = call i32* @__errno_location() #16, !dbg !18781
  store i32 %18, i32* %call23, align 4, !dbg !18782, !tbaa !2342, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !18783, !tbaa !2342
  br label %if.end24, !dbg !18784

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !18785

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !18786, !tbaa !2342
  ret i32 %19, !dbg !18787
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !18788 !ctir !2058 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2060
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18790, metadata !DIExpression()), !dbg !18791
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18792, !tbaa !2355
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !18794
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18795

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18796, !tbaa !2355
  %call = call i32 @__freading(%struct._IO_FILE* %1) #12, !dbg !18796
  %cmp1 = icmp ne i32 %call, 0, !dbg !18796
  br i1 %cmp1, label %if.end, label %if.then, !dbg !18797

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18798, !tbaa !2355
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !18799
  store i32 %call2, i32* %retval, align 4, !dbg !18800
  br label %return, !dbg !18800

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18801, !tbaa !2355
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !18802
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18803, !tbaa !2355
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !18804
  store i32 %call3, i32* %retval, align 4, !dbg !18805
  br label %return, !dbg !18805

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !18806
  ret i32 %5, !dbg !18806
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !18807 !ctir !2100 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2060
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18808, metadata !DIExpression()), !dbg !18809
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18810, !tbaa !2355
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !18812, !ctir !2061
  %1 = load i32, i32* %_flags, align 8, !dbg !18812, !tbaa !18813, !ctir !5
  %and = and i32 %1, 256, !dbg !18815
  %tobool = icmp ne i32 %and, 0, !dbg !18815
  br i1 %tobool, label %if.then, label %if.end, !dbg !18816

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18817, !tbaa !2355
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !18818
  br label %if.end, !dbg !18818

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !18820 !ctir !2105 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2107
  %offset.addr = alloca i64, align 8, !ctir !1484
  %whence.addr = alloca i32, align 4, !ctir !5
  %pos = alloca i64, align 8, !ctir !1484
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18822, metadata !DIExpression()), !dbg !18823
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !18824, metadata !DIExpression()), !dbg !18825
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !18826, metadata !DIExpression()), !dbg !18827
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18828, !tbaa !2355
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !18830, !ctir !2108
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !18830, !tbaa !18831, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18832, !tbaa !2355
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !18833, !ctir !2108
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18833, !tbaa !18834, !ctir !7
  %cmp = icmp eq i8* %1, %3, !dbg !18835
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !18836

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18837, !tbaa !2355
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !18838, !ctir !2108
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18838, !tbaa !18839, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18840, !tbaa !2355
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !18841, !ctir !2108
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !18841, !tbaa !18842, !ctir !7
  %cmp1 = icmp eq i8* %5, %7, !dbg !18843
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !18844

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18845, !tbaa !2355
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18846, !ctir !2108
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18846, !tbaa !18847, !ctir !7
  %cmp3 = icmp eq i8* %9, null, !dbg !18848
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18849

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18850, metadata !DIExpression()), !dbg !18852
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18853, !tbaa !2355
  %call = call i32 @fileno(%struct._IO_FILE* %10) #12, !dbg !18854
  %11 = load i64, i64* %offset.addr, align 8, !dbg !18855, !tbaa !2516
  %12 = load i32, i32* %whence.addr, align 4, !dbg !18856, !tbaa !2342
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #12, !dbg !18857
  store i64 %call4, i64* %pos, align 8, !dbg !18852, !tbaa !2516
  %13 = load i64, i64* %pos, align 8, !dbg !18858, !tbaa !2516
  %cmp5 = icmp eq i64 %13, -1, !dbg !18860
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !18861

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !18862
  br label %return, !dbg !18862

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18864, !tbaa !2355
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !18865, !ctir !2108
  %15 = load i32, i32* %_flags, align 8, !dbg !18866, !tbaa !18813, !ctir !5
  %and = and i32 %15, -17, !dbg !18866
  store i32 %and, i32* %_flags, align 8, !dbg !18866, !tbaa !18813, !ctir !5
  %16 = load i64, i64* %pos, align 8, !dbg !18867, !tbaa !2516
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18868, !tbaa !2355
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !18869, !ctir !2108
  store i64 %16, i64* %_offset, align 8, !dbg !18870, !tbaa !18871, !ctir !45
  store i32 0, i32* %retval, align 4, !dbg !18872
  br label %return, !dbg !18872

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18873, !tbaa !2355
  %19 = load i64, i64* %offset.addr, align 8, !dbg !18874, !tbaa !2516
  %20 = load i32, i32* %whence.addr, align 4, !dbg !18875, !tbaa !2342
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !18876
  store i32 %call8, i32* %retval, align 4, !dbg !18877
  br label %return, !dbg !18877

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !18878
  ret i32 %21, !dbg !18878
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !18879 !ctir !2150 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %pwc.addr = alloca i32*, align 8, !ctir !2152
  %s.addr = alloca i8*, align 8, !ctir !87
  %n.addr = alloca i64, align 8, !ctir !52
  %ps.addr = alloca %struct.__mbstate_t*, align 8, !ctir !2153
  %ret = alloca i64, align 8, !ctir !52
  %wc = alloca i32, align 4, !ctir !1314
  %uc = alloca i8, align 1, !ctir !317
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !18881, metadata !DIExpression()), !dbg !18882
  store i8* %s, i8** %s.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18883, metadata !DIExpression()), !dbg !18884
  store i64 %n, i64* %n.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18885, metadata !DIExpression()), !dbg !18886
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !18887, metadata !DIExpression()), !dbg !18888
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !18889, metadata !DIExpression()), !dbg !18890
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !18891, metadata !DIExpression()), !dbg !18892
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !18893, !tbaa !2355
  %tobool = icmp ne i32* %0, null, !dbg !18893
  br i1 %tobool, label %if.end, label %if.then, !dbg !18895

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !18896, !tbaa !2355
  br label %if.end, !dbg !18897

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !18898, !tbaa !2355
  %2 = load i8*, i8** %s.addr, align 8, !dbg !18899, !tbaa !2355
  %3 = load i64, i64* %n.addr, align 8, !dbg !18900, !tbaa !2516
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !18901, !tbaa !2355
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #12, !dbg !18902
  store i64 %call, i64* %ret, align 8, !dbg !18903, !tbaa !2516
  %5 = load i64, i64* %ret, align 8, !dbg !18904, !tbaa !2516
  %cmp = icmp ule i64 -2, %5, !dbg !18906
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !18907

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18908, !tbaa !2516
  %cmp1 = icmp ne i64 %6, 0, !dbg !18909
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !18910

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !18911
  br i1 %call3, label %if.end5, label %if.then4, !dbg !18912

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !18913, metadata !DIExpression()), !dbg !18915
  %7 = load i8*, i8** %s.addr, align 8, !dbg !18916, !tbaa !2355
  %8 = load i8, i8* %7, align 1, !dbg !18917, !tbaa !2507, !ctir !88
  store i8 %8, i8* %uc, align 1, !dbg !18915, !tbaa !2507
  %9 = load i8, i8* %uc, align 1, !dbg !18918, !tbaa !2507
  %conv = zext i8 %9 to i32, !dbg !18918
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !18919, !tbaa !2355
  store i32 %conv, i32* %10, align 4, !dbg !18920, !tbaa !2342, !ctir !1314
  store i64 1, i64* %retval, align 8, !dbg !18921
  br label %return, !dbg !18921

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !18922, !tbaa !2516
  store i64 %11, i64* %retval, align 8, !dbg !18923
  br label %return, !dbg !18923

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !18924
  ret i64 %12, !dbg !18924
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_nanosleep(%struct.timespec* nonnull %requested_delay, %struct.timespec* %remaining_delay) #4 !dbg !18925 !ctir !2167 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %requested_delay.addr = alloca %struct.timespec*, align 8, !ctir !2169
  %remaining_delay.addr = alloca %struct.timespec*, align 8, !ctir !2175
  %limit = alloca i64, align 8, !ctir !2176
  %seconds = alloca i64, align 8, !ctir !2177
  %intermediate = alloca %struct.timespec, align 8, !ctir !2171
  %result = alloca i32, align 4, !ctir !5
  store %struct.timespec* %requested_delay, %struct.timespec** %requested_delay.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.timespec** %requested_delay.addr, metadata !18927, metadata !DIExpression()), !dbg !18928
  store %struct.timespec* %remaining_delay, %struct.timespec** %remaining_delay.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.timespec** %remaining_delay.addr, metadata !18929, metadata !DIExpression()), !dbg !18930
  %0 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18931, !tbaa !2355
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i32 0, i32 1, !dbg !18933, !ctir !2170
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18933, !tbaa !18934, !ctir !405
  %cmp = icmp slt i64 %1, 0, !dbg !18935
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18936

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18937, !tbaa !2355
  %tv_nsec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1, !dbg !18938, !ctir !2170
  %3 = load i64, i64* %tv_nsec1, align 8, !dbg !18938, !tbaa !18934, !ctir !405
  %cmp2 = icmp sle i64 1000000000, %3, !dbg !18939
  br i1 %cmp2, label %if.then, label %if.end, !dbg !18940

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32* @__errno_location() #16, !dbg !18941
  store i32 22, i32* %call, align 4, !dbg !18943, !tbaa !2342, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !18944
  br label %return, !dbg !18944

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !18945, metadata !DIExpression()), !dbg !18947
  store i64 2073600, i64* %limit, align 8, !dbg !18947, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %seconds, metadata !18948, metadata !DIExpression()), !dbg !18949
  %4 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18950, !tbaa !2355
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !18951, !ctir !2170
  %5 = load i64, i64* %tv_sec, align 8, !dbg !18951, !tbaa !18952, !ctir !403
  store i64 %5, i64* %seconds, align 8, !dbg !18949, !tbaa !2516
  call void @llvm.dbg.declare(metadata %struct.timespec* %intermediate, metadata !18953, metadata !DIExpression()), !dbg !18954
  %6 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18955, !tbaa !2355
  %tv_nsec3 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 1, !dbg !18956, !ctir !2170
  %7 = load i64, i64* %tv_nsec3, align 8, !dbg !18956, !tbaa !18934, !ctir !405
  %tv_nsec4 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 1, !dbg !18957, !ctir !2171
  store i64 %7, i64* %tv_nsec4, align 8, !dbg !18958, !tbaa !18934, !ctir !405
  br label %while.cond, !dbg !18959

while.cond:                                       ; preds = %if.end13, %if.end
  %8 = load i64, i64* %seconds, align 8, !dbg !18960, !tbaa !2516
  %cmp5 = icmp slt i64 2073600, %8, !dbg !18961
  br i1 %cmp5, label %while.body, label %while.end, !dbg !18959

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18962, metadata !DIExpression()), !dbg !18964
  %tv_sec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 0, !dbg !18965, !ctir !2171
  store i64 2073600, i64* %tv_sec6, align 8, !dbg !18966, !tbaa !18952, !ctir !403
  %9 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18967, !tbaa !2355
  %call7 = call i32 @nanosleep(%struct.timespec* %intermediate, %struct.timespec* %9), !dbg !18968
  store i32 %call7, i32* %result, align 4, !dbg !18969, !tbaa !2342
  %10 = load i64, i64* %seconds, align 8, !dbg !18970, !tbaa !2516
  %sub = sub nsw i64 %10, 2073600, !dbg !18970
  store i64 %sub, i64* %seconds, align 8, !dbg !18970, !tbaa !2516
  %11 = load i32, i32* %result, align 4, !dbg !18971, !tbaa !2342
  %tobool = icmp ne i32 %11, 0, !dbg !18971
  br i1 %tobool, label %if.then8, label %if.end13, !dbg !18973

if.then8:                                         ; preds = %while.body
  %12 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18974, !tbaa !2355
  %tobool9 = icmp ne %struct.timespec* %12, null, !dbg !18974
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !18977

if.then10:                                        ; preds = %if.then8
  %13 = load i64, i64* %seconds, align 8, !dbg !18978, !tbaa !2516
  %14 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18979, !tbaa !2355
  %tv_sec11 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i32 0, i32 0, !dbg !18980, !ctir !2171
  %15 = load i64, i64* %tv_sec11, align 8, !dbg !18981, !tbaa !18952, !ctir !403
  %add = add nsw i64 %15, %13, !dbg !18981
  store i64 %add, i64* %tv_sec11, align 8, !dbg !18981, !tbaa !18952, !ctir !403
  br label %if.end12, !dbg !18979

if.end12:                                         ; preds = %if.then10, %if.then8
  %16 = load i32, i32* %result, align 4, !dbg !18982, !tbaa !2342
  store i32 %16, i32* %retval, align 4, !dbg !18983
  br label %return, !dbg !18983

if.end13:                                         ; preds = %while.body
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 1, !dbg !18984, !ctir !2171
  store i64 0, i64* %tv_nsec14, align 8, !dbg !18985, !tbaa !18934, !ctir !405
  br label %while.cond, !dbg !18959, !llvm.loop !18986

while.end:                                        ; preds = %while.cond
  %17 = load i64, i64* %seconds, align 8, !dbg !18988, !tbaa !2516
  %tv_sec15 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 0, !dbg !18989, !ctir !2171
  store i64 %17, i64* %tv_sec15, align 8, !dbg !18990, !tbaa !18952, !ctir !403
  %18 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18991, !tbaa !2355
  %call16 = call i32 @nanosleep(%struct.timespec* %intermediate, %struct.timespec* %18), !dbg !18992
  store i32 %call16, i32* %retval, align 4, !dbg !18993
  br label %return, !dbg !18993

return:                                           ; preds = %while.end, %if.end12, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !18994
  ret i32 %19, !dbg !18994
}

declare dso_local i32 @nanosleep(%struct.timespec*, %struct.timespec*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #4 !dbg !18995 !ctir !2181 {
entry:
  %item.addr = alloca i32, align 4, !ctir !2183
  store i32 %item, i32* %item.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !18997, metadata !DIExpression()), !dbg !18998
  %0 = load i32, i32* %item.addr, align 4, !dbg !18999, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !19000

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !19001, !tbaa !2342
  %sub = sub nsw i32 %1, 10200, !dbg !19003
  %add = add nsw i32 %sub, 131098, !dbg !19004
  store i32 %add, i32* %item.addr, align 4, !dbg !19005, !tbaa !2342
  br label %sw.epilog, !dbg !19006

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !19007

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !19008, !tbaa !2342
  %call = call i8* @nl_langinfo(i32 %2) #12, !dbg !19009
  ret i8* %call, !dbg !19010
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #0 !dbg !19011 !ctir !167 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19012, !tbaa !2355
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.389, i64 0, i64 0)) #12, !dbg !19013
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.390, i64 0, i64 0), i8* %call), !dbg !19014
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !19015, !tbaa !2342
  call void @exit(i32 %1) #13, !dbg !19016
  unreachable, !dbg !19016
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i64)* %chunkfun, void (i8*)* %freefun) #4 !dbg !19017 !ctir !1369 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %size.addr = alloca i64, align 8, !ctir !52
  %alignment.addr = alloca i64, align 8, !ctir !52
  %chunkfun.addr = alloca i8* (i64)*, align 8, !ctir !1396
  %freefun.addr = alloca void (i8*)*, align 8, !ctir !1048
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19018, metadata !DIExpression()), !dbg !19019
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19020, metadata !DIExpression()), !dbg !19021
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !19022, metadata !DIExpression()), !dbg !19023
  store i8* (i64)* %chunkfun, i8* (i64)** %chunkfun.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* (i64)** %chunkfun.addr, metadata !19024, metadata !DIExpression()), !dbg !19025
  store void (i8*)* %freefun, void (i8*)** %freefun.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata void (i8*)** %freefun.addr, metadata !19026, metadata !DIExpression()), !dbg !19027
  %0 = load i8* (i64)*, i8* (i64)** %chunkfun.addr, align 8, !dbg !19028, !tbaa !2355
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19029, !tbaa !2355
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !19030, !ctir !1372
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !19031
  store i8* (i64)* %0, i8* (i64)** %plain, align 8, !dbg !19032, !tbaa !2507, !ctir !1393
  %2 = load void (i8*)*, void (i8*)** %freefun.addr, align 8, !dbg !19033, !tbaa !2355
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19034, !tbaa !2355
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !19035, !ctir !1372
  %plain3 = bitcast %union.anon.1* %freefun2 to void (i8*)**, !dbg !19036
  store void (i8*)* %2, void (i8*)** %plain3, align 8, !dbg !19037, !tbaa !2507, !ctir !1404
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19038, !tbaa !2355
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 10, !dbg !19039, !ctir !1372
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19040
  %bf.clear = and i8 %bf.load, -2, !dbg !19040
  store i8 %bf.clear, i8* %use_extra_arg, align 8, !dbg !19040
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19041, !tbaa !2355
  %6 = load i64, i64* %size.addr, align 8, !dbg !19042, !tbaa !2516
  %7 = load i64, i64* %alignment.addr, align 8, !dbg !19043, !tbaa !2516
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %5, i64 %6, i64 %7), !dbg !19044
  ret i32 %call, !dbg !19045
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %h, i64 %size, i64 %alignment) #4 !dbg !19046 !ctir !1425 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %size.addr = alloca i64, align 8, !ctir !52
  %alignment.addr = alloca i64, align 8, !ctir !52
  %chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  %extra = alloca i32, align 4, !ctir !5
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19047, metadata !DIExpression()), !dbg !19048
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19049, metadata !DIExpression()), !dbg !19050
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !19051, metadata !DIExpression()), !dbg !19052
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %chunk, metadata !19053, metadata !DIExpression()), !dbg !19054
  %0 = load i64, i64* %alignment.addr, align 8, !dbg !19055, !tbaa !2516
  %cmp = icmp eq i64 %0, 0, !dbg !19057
  br i1 %cmp, label %if.then, label %if.end, !dbg !19058

if.then:                                          ; preds = %entry
  store i64 16, i64* %alignment.addr, align 8, !dbg !19059, !tbaa !2516
  br label %if.end, !dbg !19060

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !19061, !tbaa !2516
  %cmp1 = icmp eq i64 %1, 0, !dbg !19063
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !19064

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !19065, metadata !DIExpression()), !dbg !19067
  store i32 32, i32* %extra, align 4, !dbg !19067, !tbaa !2342
  %2 = load i32, i32* %extra, align 4, !dbg !19068, !tbaa !2342
  %sub = sub nsw i32 4096, %2, !dbg !19069
  %conv = sext i32 %sub to i64, !dbg !19070
  store i64 %conv, i64* %size.addr, align 8, !dbg !19071, !tbaa !2516
  br label %if.end3, !dbg !19072

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, i64* %size.addr, align 8, !dbg !19073, !tbaa !2516
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19074, !tbaa !2355
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 0, !dbg !19075, !ctir !1372
  store i64 %3, i64* %chunk_size, align 8, !dbg !19076, !tbaa !19077, !ctir !52
  %5 = load i64, i64* %alignment.addr, align 8, !dbg !19078, !tbaa !2516
  %sub4 = sub i64 %5, 1, !dbg !19079
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19080, !tbaa !2355
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 6, !dbg !19081, !ctir !1372
  store i64 %sub4, i64* %alignment_mask, align 8, !dbg !19082, !tbaa !16784, !ctir !52
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19083, !tbaa !2355
  %8 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19084, !tbaa !2355
  %chunk_size5 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 0, !dbg !19085, !ctir !1372
  %9 = load i64, i64* %chunk_size5, align 8, !dbg !19085, !tbaa !19077, !ctir !52
  %call = call i8* @call_chunkfun(%struct.obstack* %7, i64 %9), !dbg !19086
  %10 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !19086
  %11 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19087, !tbaa !2355
  %chunk6 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 1, !dbg !19088, !ctir !1372
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk6, align 8, !dbg !19089, !tbaa !16696, !ctir !1377
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk, align 8, !dbg !19090, !tbaa !2355
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19091, !tbaa !2355
  %tobool = icmp ne %struct._obstack_chunk* %12, null, !dbg !19091
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !19093

if.then7:                                         ; preds = %if.end3
  %13 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !19094, !tbaa !2355
  call void %13() #15, !dbg !19095
  unreachable, !dbg !19095

if.end8:                                          ; preds = %if.end3
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19096, !tbaa !2355
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %14, i32 0, i32 2, !dbg !19096, !ctir !1378
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !19096
  %sub.ptr.lhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !19096
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !19096
  %15 = load i64, i64* %alignment.addr, align 8, !dbg !19096, !tbaa !2516
  %sub9 = sub i64 %15, 1, !dbg !19096
  %add = add i64 %sub.ptr.sub, %sub9, !dbg !19096
  %16 = load i64, i64* %alignment.addr, align 8, !dbg !19096, !tbaa !2516
  %sub10 = sub i64 %16, 1, !dbg !19096
  %neg = xor i64 %sub10, -1, !dbg !19096
  %and = and i64 %add, %neg, !dbg !19096
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !19096
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19097, !tbaa !2355
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 2, !dbg !19098, !ctir !1372
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !19099, !tbaa !16698, !ctir !7
  %18 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19100, !tbaa !2355
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3, !dbg !19101, !ctir !1372
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !19102, !tbaa !16699, !ctir !7
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19103, !tbaa !2355
  %20 = bitcast %struct._obstack_chunk* %19 to i8*, !dbg !19104
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19105, !tbaa !2355
  %chunk_size11 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !19106, !ctir !1372
  %22 = load i64, i64* %chunk_size11, align 8, !dbg !19106, !tbaa !19077, !ctir !52
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !19107
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19108, !tbaa !2355
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 0, !dbg !19109, !ctir !1378
  store i8* %add.ptr12, i8** %limit, align 8, !dbg !19110, !tbaa !2355, !ctir !7
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19111, !tbaa !2355
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !19112, !ctir !1372
  store i8* %add.ptr12, i8** %chunk_limit, align 8, !dbg !19113, !tbaa !16697, !ctir !7
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19114, !tbaa !2355
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %25, i32 0, i32 1, !dbg !19115, !ctir !1378
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %prev, align 8, !dbg !19116, !tbaa !2355, !ctir !1377
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19117, !tbaa !2355
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 10, !dbg !19118, !ctir !1372
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !19119
  %bf.clear = and i8 %bf.load, -3, !dbg !19119
  store i8 %bf.clear, i8* %maybe_empty_object, align 8, !dbg !19119
  %27 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19120, !tbaa !2355
  %alloc_failed = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 10, !dbg !19121, !ctir !1372
  %bf.load13 = load i8, i8* %alloc_failed, align 8, !dbg !19122
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !19122
  store i8 %bf.clear14, i8* %alloc_failed, align 8, !dbg !19122
  ret i32 1, !dbg !19123
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %h, i64 %size) #4 !dbg !19124 !ctir !1427 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %size.addr = alloca i64, align 8, !ctir !52
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19125, metadata !DIExpression()), !dbg !19126
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19127, metadata !DIExpression()), !dbg !19128
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19129, !tbaa !2355
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !19131, !ctir !1372
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19131
  %bf.clear = and i8 %bf.load, 1, !dbg !19131
  %bf.cast = zext i8 %bf.clear to i32, !dbg !19131
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !19129
  br i1 %tobool, label %if.then, label %if.else, !dbg !19132

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19133, !tbaa !2355
  %chunkfun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !19134, !ctir !1372
  %extra = bitcast %union.anon.0* %chunkfun to i8* (i8*, i64)**, !dbg !19135
  %2 = load i8* (i8*, i64)*, i8* (i8*, i64)** %extra, align 8, !dbg !19135, !tbaa !2507, !ctir !1393
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19136, !tbaa !2355
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !19137, !ctir !1372
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !19137, !tbaa !19138, !ctir !47
  %5 = load i64, i64* %size.addr, align 8, !dbg !19139, !tbaa !2516
  %call = call i8* %2(i8* %4, i64 %5), !dbg !19133
  store i8* %call, i8** %retval, align 8, !dbg !19140
  br label %return, !dbg !19140

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19141, !tbaa !2355
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 7, !dbg !19142, !ctir !1372
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !19143
  %7 = load i8* (i64)*, i8* (i64)** %plain, align 8, !dbg !19143, !tbaa !2507, !ctir !1393
  %8 = load i64, i64* %size.addr, align 8, !dbg !19144, !tbaa !2516
  %call2 = call i8* %7(i64 %8), !dbg !19141
  store i8* %call2, i8** %retval, align 8, !dbg !19145
  br label %return, !dbg !19145

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !19146
  ret i8* %9, !dbg !19146
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i8*, i64)* %chunkfun, void (i8*, i8*)* %freefun, i8* %arg) #4 !dbg !19147 !ctir !1415 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %size.addr = alloca i64, align 8, !ctir !52
  %alignment.addr = alloca i64, align 8, !ctir !52
  %chunkfun.addr = alloca i8* (i8*, i64)*, align 8, !ctir !1400
  %freefun.addr = alloca void (i8*, i8*)*, align 8, !ctir !1408
  %arg.addr = alloca i8*, align 8, !ctir !47
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19148, metadata !DIExpression()), !dbg !19149
  store i64 %size, i64* %size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19150, metadata !DIExpression()), !dbg !19151
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !19152, metadata !DIExpression()), !dbg !19153
  store i8* (i8*, i64)* %chunkfun, i8* (i8*, i64)** %chunkfun.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %chunkfun.addr, metadata !19154, metadata !DIExpression()), !dbg !19155
  store void (i8*, i8*)* %freefun, void (i8*, i8*)** %freefun.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %freefun.addr, metadata !19156, metadata !DIExpression()), !dbg !19157
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19158, metadata !DIExpression()), !dbg !19159
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** %chunkfun.addr, align 8, !dbg !19160, !tbaa !2355
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19161, !tbaa !2355
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !19162, !ctir !1372
  %extra = bitcast %union.anon.0* %chunkfun1 to i8* (i8*, i64)**, !dbg !19163
  store i8* (i8*, i64)* %0, i8* (i8*, i64)** %extra, align 8, !dbg !19164, !tbaa !2507, !ctir !1393
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %freefun.addr, align 8, !dbg !19165, !tbaa !2355
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19166, !tbaa !2355
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !19167, !ctir !1372
  %extra3 = bitcast %union.anon.1* %freefun2 to void (i8*, i8*)**, !dbg !19168
  store void (i8*, i8*)* %2, void (i8*, i8*)** %extra3, align 8, !dbg !19169, !tbaa !2507, !ctir !1404
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !19170, !tbaa !2355
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19171, !tbaa !2355
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 9, !dbg !19172, !ctir !1372
  store i8* %4, i8** %extra_arg, align 8, !dbg !19173, !tbaa !19138, !ctir !47
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19174, !tbaa !2355
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !19175, !ctir !1372
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19176
  %bf.clear = and i8 %bf.load, -2, !dbg !19176
  %bf.set = or i8 %bf.clear, 1, !dbg !19176
  store i8 %bf.set, i8* %use_extra_arg, align 8, !dbg !19176
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19177, !tbaa !2355
  %8 = load i64, i64* %size.addr, align 8, !dbg !19178, !tbaa !2516
  %9 = load i64, i64* %alignment.addr, align 8, !dbg !19179, !tbaa !2516
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %7, i64 %8, i64 %9), !dbg !19180
  ret i32 %call, !dbg !19181
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %h, i64 %length) #4 !dbg !19182 !ctir !1417 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %length.addr = alloca i64, align 8, !ctir !52
  %old_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  %new_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  %obj_size = alloca i64, align 8, !ctir !52
  %object_base1 = alloca i8*, align 8, !ctir !7
  %sum1 = alloca i64, align 8, !ctir !52
  %sum2 = alloca i64, align 8, !ctir !52
  %new_size = alloca i64, align 8, !ctir !52
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19183, metadata !DIExpression()), !dbg !19184
  store i64 %length, i64* %length.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !19185, metadata !DIExpression()), !dbg !19186
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %old_chunk, metadata !19187, metadata !DIExpression()), !dbg !19188
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19189, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19190, !ctir !1372
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19190, !tbaa !16696, !ctir !1377
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19188, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %new_chunk, metadata !19191, metadata !DIExpression()), !dbg !19192
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19192, !tbaa !2355
  call void @llvm.dbg.declare(metadata i64* %obj_size, metadata !19193, metadata !DIExpression()), !dbg !19194
  %2 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19195, !tbaa !2355
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 3, !dbg !19196, !ctir !1372
  %3 = load i8*, i8** %next_free, align 8, !dbg !19196, !tbaa !16699, !ctir !7
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19197, !tbaa !2355
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 2, !dbg !19198, !ctir !1372
  %5 = load i8*, i8** %object_base, align 8, !dbg !19198, !tbaa !16698, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !19199
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !19199
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19199
  store i64 %sub.ptr.sub, i64* %obj_size, align 8, !dbg !19194, !tbaa !2516
  call void @llvm.dbg.declare(metadata i8** %object_base1, metadata !19200, metadata !DIExpression()), !dbg !19201
  call void @llvm.dbg.declare(metadata i64* %sum1, metadata !19202, metadata !DIExpression()), !dbg !19203
  %6 = load i64, i64* %obj_size, align 8, !dbg !19204, !tbaa !2516
  %7 = load i64, i64* %length.addr, align 8, !dbg !19205, !tbaa !2516
  %add = add i64 %6, %7, !dbg !19206
  store i64 %add, i64* %sum1, align 8, !dbg !19203, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !19207, metadata !DIExpression()), !dbg !19208
  %8 = load i64, i64* %sum1, align 8, !dbg !19209, !tbaa !2516
  %9 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19210, !tbaa !2355
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 6, !dbg !19211, !ctir !1372
  %10 = load i64, i64* %alignment_mask, align 8, !dbg !19211, !tbaa !16784, !ctir !52
  %add2 = add i64 %8, %10, !dbg !19212
  store i64 %add2, i64* %sum2, align 8, !dbg !19208, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !19213, metadata !DIExpression()), !dbg !19214
  %11 = load i64, i64* %sum2, align 8, !dbg !19215, !tbaa !2516
  %12 = load i64, i64* %obj_size, align 8, !dbg !19216, !tbaa !2516
  %shr = lshr i64 %12, 3, !dbg !19217
  %add3 = add i64 %11, %shr, !dbg !19218
  %add4 = add i64 %add3, 100, !dbg !19219
  store i64 %add4, i64* %new_size, align 8, !dbg !19214, !tbaa !2516
  %13 = load i64, i64* %new_size, align 8, !dbg !19220, !tbaa !2516
  %14 = load i64, i64* %sum2, align 8, !dbg !19222, !tbaa !2516
  %cmp = icmp ult i64 %13, %14, !dbg !19223
  br i1 %cmp, label %if.then, label %if.end, !dbg !19224

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %sum2, align 8, !dbg !19225, !tbaa !2516
  store i64 %15, i64* %new_size, align 8, !dbg !19226, !tbaa !2516
  br label %if.end, !dbg !19227

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %new_size, align 8, !dbg !19228, !tbaa !2516
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19230, !tbaa !2355
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 0, !dbg !19231, !ctir !1372
  %18 = load i64, i64* %chunk_size, align 8, !dbg !19231, !tbaa !19077, !ctir !52
  %cmp5 = icmp ult i64 %16, %18, !dbg !19232
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !19233

if.then6:                                         ; preds = %if.end
  %19 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19234, !tbaa !2355
  %chunk_size7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 0, !dbg !19235, !ctir !1372
  %20 = load i64, i64* %chunk_size7, align 8, !dbg !19235, !tbaa !19077, !ctir !52
  store i64 %20, i64* %new_size, align 8, !dbg !19236, !tbaa !2516
  br label %if.end8, !dbg !19237

if.end8:                                          ; preds = %if.then6, %if.end
  %21 = load i64, i64* %obj_size, align 8, !dbg !19238, !tbaa !2516
  %22 = load i64, i64* %sum1, align 8, !dbg !19240, !tbaa !2516
  %cmp9 = icmp ule i64 %21, %22, !dbg !19241
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !19242

land.lhs.true:                                    ; preds = %if.end8
  %23 = load i64, i64* %sum1, align 8, !dbg !19243, !tbaa !2516
  %24 = load i64, i64* %sum2, align 8, !dbg !19244, !tbaa !2516
  %cmp10 = icmp ule i64 %23, %24, !dbg !19245
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !19246

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19247, !tbaa !2355
  %26 = load i64, i64* %new_size, align 8, !dbg !19248, !tbaa !2516
  %call = call i8* @call_chunkfun(%struct.obstack* %25, i64 %26), !dbg !19249
  %27 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !19249
  store %struct._obstack_chunk* %27, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19250, !tbaa !2355
  br label %if.end12, !dbg !19251

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19252, !tbaa !2355
  %tobool = icmp ne %struct._obstack_chunk* %28, null, !dbg !19252
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !19254

if.then13:                                        ; preds = %if.end12
  %29 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !19255, !tbaa !2355
  call void %29() #15, !dbg !19256
  unreachable, !dbg !19256

if.end14:                                         ; preds = %if.end12
  %30 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19257, !tbaa !2355
  %31 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19258, !tbaa !2355
  %chunk15 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 1, !dbg !19259, !ctir !1372
  store %struct._obstack_chunk* %30, %struct._obstack_chunk** %chunk15, align 8, !dbg !19260, !tbaa !16696, !ctir !1377
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19261, !tbaa !2355
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19262, !tbaa !2355
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %33, i32 0, i32 1, !dbg !19263, !ctir !1378
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %prev, align 8, !dbg !19264, !tbaa !2355, !ctir !1377
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19265, !tbaa !2355
  %35 = bitcast %struct._obstack_chunk* %34 to i8*, !dbg !19266
  %36 = load i64, i64* %new_size, align 8, !dbg !19267, !tbaa !2516
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !19268
  %37 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19269, !tbaa !2355
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 4, !dbg !19270, !ctir !1372
  store i8* %add.ptr, i8** %chunk_limit, align 8, !dbg !19271, !tbaa !16697, !ctir !7
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19272, !tbaa !2355
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %38, i32 0, i32 0, !dbg !19273, !ctir !1378
  store i8* %add.ptr, i8** %limit, align 8, !dbg !19274, !tbaa !2355, !ctir !7
  %39 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19275, !tbaa !2355
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %39, i32 0, i32 2, !dbg !19275, !ctir !1378
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !19275
  %sub.ptr.lhs.cast16 = ptrtoint i8* %arraydecay to i64, !dbg !19275
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast16, 0, !dbg !19275
  %40 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19275, !tbaa !2355
  %alignment_mask18 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6, !dbg !19275, !ctir !1372
  %41 = load i64, i64* %alignment_mask18, align 8, !dbg !19275, !tbaa !16784, !ctir !52
  %add19 = add i64 %sub.ptr.sub17, %41, !dbg !19275
  %42 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19275, !tbaa !2355
  %alignment_mask20 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 6, !dbg !19275, !ctir !1372
  %43 = load i64, i64* %alignment_mask20, align 8, !dbg !19275, !tbaa !16784, !ctir !52
  %neg = xor i64 %43, -1, !dbg !19275
  %and = and i64 %add19, %neg, !dbg !19275
  %add.ptr21 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !19275
  store i8* %add.ptr21, i8** %object_base1, align 8, !dbg !19276, !tbaa !2355
  %44 = load i8*, i8** %object_base1, align 8, !dbg !19277, !tbaa !2355
  %45 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19278, !tbaa !2355
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 2, !dbg !19279, !ctir !1372
  %46 = load i8*, i8** %object_base22, align 8, !dbg !19279, !tbaa !16698, !ctir !7
  %47 = load i64, i64* %obj_size, align 8, !dbg !19280, !tbaa !2516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %46, i64 %47, i1 false), !dbg !19281
  %48 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19282, !tbaa !2355
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 10, !dbg !19284, !ctir !1372
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !19284
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !19284
  %bf.clear = and i8 %bf.lshr, 1, !dbg !19284
  %bf.cast = zext i8 %bf.clear to i32, !dbg !19284
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !19282
  br i1 %tobool23, label %if.end40, label %land.lhs.true24, !dbg !19285

land.lhs.true24:                                  ; preds = %if.end14
  %49 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19286, !tbaa !2355
  %object_base25 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !19287, !ctir !1372
  %50 = load i8*, i8** %object_base25, align 8, !dbg !19287, !tbaa !16698, !ctir !7
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19288, !tbaa !2355
  %contents26 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %51, i32 0, i32 2, !dbg !19288, !ctir !1378
  %arraydecay27 = getelementptr inbounds [0 x i8], [0 x i8]* %contents26, i64 0, i64 0, !dbg !19288
  %sub.ptr.lhs.cast28 = ptrtoint i8* %arraydecay27 to i64, !dbg !19288
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast28, 0, !dbg !19288
  %52 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19288, !tbaa !2355
  %alignment_mask30 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 6, !dbg !19288, !ctir !1372
  %53 = load i64, i64* %alignment_mask30, align 8, !dbg !19288, !tbaa !16784, !ctir !52
  %add31 = add i64 %sub.ptr.sub29, %53, !dbg !19288
  %54 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19288, !tbaa !2355
  %alignment_mask32 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !19288, !ctir !1372
  %55 = load i64, i64* %alignment_mask32, align 8, !dbg !19288, !tbaa !16784, !ctir !52
  %neg33 = xor i64 %55, -1, !dbg !19288
  %and34 = and i64 %add31, %neg33, !dbg !19288
  %add.ptr35 = getelementptr inbounds i8, i8* null, i64 %and34, !dbg !19288
  %cmp36 = icmp eq i8* %50, %add.ptr35, !dbg !19289
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !19290

if.then37:                                        ; preds = %land.lhs.true24
  %56 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19291, !tbaa !2355
  %prev38 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %56, i32 0, i32 1, !dbg !19293, !ctir !1378
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev38, align 8, !dbg !19293, !tbaa !2355, !ctir !1377
  %58 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19294, !tbaa !2355
  %prev39 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %58, i32 0, i32 1, !dbg !19295, !ctir !1378
  store %struct._obstack_chunk* %57, %struct._obstack_chunk** %prev39, align 8, !dbg !19296, !tbaa !2355, !ctir !1377
  %59 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19297, !tbaa !2355
  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19298, !tbaa !2355
  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !19298
  call void @call_freefun(%struct.obstack* %59, i8* %61), !dbg !19299
  br label %if.end40, !dbg !19300

if.end40:                                         ; preds = %if.then37, %land.lhs.true24, %if.end14
  %62 = load i8*, i8** %object_base1, align 8, !dbg !19301, !tbaa !2355
  %63 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19302, !tbaa !2355
  %object_base41 = getelementptr inbounds %struct.obstack, %struct.obstack* %63, i32 0, i32 2, !dbg !19303, !ctir !1372
  store i8* %62, i8** %object_base41, align 8, !dbg !19304, !tbaa !16698, !ctir !7
  %64 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19305, !tbaa !2355
  %object_base42 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 2, !dbg !19306, !ctir !1372
  %65 = load i8*, i8** %object_base42, align 8, !dbg !19306, !tbaa !16698, !ctir !7
  %66 = load i64, i64* %obj_size, align 8, !dbg !19307, !tbaa !2516
  %add.ptr43 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !19308
  %67 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19309, !tbaa !2355
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3, !dbg !19310, !ctir !1372
  store i8* %add.ptr43, i8** %next_free44, align 8, !dbg !19311, !tbaa !16699, !ctir !7
  %68 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19312, !tbaa !2355
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0, i32 10, !dbg !19313, !ctir !1372
  %bf.load46 = load i8, i8* %maybe_empty_object45, align 8, !dbg !19314
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !19314
  store i8 %bf.clear47, i8* %maybe_empty_object45, align 8, !dbg !19314
  ret void, !dbg !19315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %h, i8* %old_chunk) #4 !dbg !19316 !ctir !1421 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %old_chunk.addr = alloca i8*, align 8, !ctir !47
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19317, metadata !DIExpression()), !dbg !19318
  store i8* %old_chunk, i8** %old_chunk.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %old_chunk.addr, metadata !19319, metadata !DIExpression()), !dbg !19320
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19321, !tbaa !2355
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !19323, !ctir !1372
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19323
  %bf.clear = and i8 %bf.load, 1, !dbg !19323
  %bf.cast = zext i8 %bf.clear to i32, !dbg !19323
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !19321
  br i1 %tobool, label %if.then, label %if.else, !dbg !19324

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19325, !tbaa !2355
  %freefun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 8, !dbg !19326, !ctir !1372
  %extra = bitcast %union.anon.1* %freefun to void (i8*, i8*)**, !dbg !19327
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %extra, align 8, !dbg !19327, !tbaa !2507, !ctir !1404
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19328, !tbaa !2355
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !19329, !ctir !1372
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !19329, !tbaa !19138, !ctir !47
  %5 = load i8*, i8** %old_chunk.addr, align 8, !dbg !19330, !tbaa !2355
  call void %2(i8* %4, i8* %5), !dbg !19325
  br label %if.end, !dbg !19325

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19331, !tbaa !2355
  %freefun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 8, !dbg !19332, !ctir !1372
  %plain = bitcast %union.anon.1* %freefun1 to void (i8*)**, !dbg !19333
  %7 = load void (i8*)*, void (i8*)** %plain, align 8, !dbg !19333, !tbaa !2507, !ctir !1404
  %8 = load i8*, i8** %old_chunk.addr, align 8, !dbg !19334, !tbaa !2355
  call void %7(i8* %8), !dbg !19331
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !19335
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %h, i8* %obj) #9 !dbg !19336 !ctir !1419 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %obj.addr = alloca i8*, align 8, !ctir !47
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19337, metadata !DIExpression()), !dbg !19338
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !19339, metadata !DIExpression()), !dbg !19340
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !19341, metadata !DIExpression()), !dbg !19342
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !19343, metadata !DIExpression()), !dbg !19344
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19345, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19346, !ctir !1372
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19346, !tbaa !16696, !ctir !1377
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !19347, !tbaa !2355
  br label %while.cond, !dbg !19348

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19349, !tbaa !2355
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !19350
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19351

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19352, !tbaa !2355
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !19353
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !19354, !tbaa !2355
  %cmp1 = icmp uge i8* %4, %5, !dbg !19355
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !19356

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19357, !tbaa !2355
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !19358, !ctir !1378
  %7 = load i8*, i8** %limit, align 8, !dbg !19358, !tbaa !2355, !ctir !7
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !19359, !tbaa !2355
  %cmp2 = icmp ult i8* %7, %8, !dbg !19360
  br label %lor.end, !dbg !19356

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !19361
  br i1 %10, label %while.body, label %while.end, !dbg !19348

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19362, !tbaa !2355
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !19364, !ctir !1378
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !19364, !tbaa !2355, !ctir !1377
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !19365, !tbaa !2355
  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !19366, !tbaa !2355
  store %struct._obstack_chunk* %13, %struct._obstack_chunk** %lp, align 8, !dbg !19367, !tbaa !2355
  br label %while.cond, !dbg !19348, !llvm.loop !19368

while.end:                                        ; preds = %land.end
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19370, !tbaa !2355
  %cmp3 = icmp ne %struct._obstack_chunk* %14, null, !dbg !19371
  %conv = zext i1 %cmp3 to i32, !dbg !19371
  ret i32 %conv, !dbg !19372
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %h, i8* %obj) #4 !dbg !19373 !ctir !1421 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %obj.addr = alloca i8*, align 8, !ctir !47
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19374, metadata !DIExpression()), !dbg !19375
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !19376, metadata !DIExpression()), !dbg !19377
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !19378, metadata !DIExpression()), !dbg !19379
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !19380, metadata !DIExpression()), !dbg !19381
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19382, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19383, !ctir !1372
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19383, !tbaa !16696, !ctir !1377
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !19384, !tbaa !2355
  br label %while.cond, !dbg !19385

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19386, !tbaa !2355
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !19387
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19388

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19389, !tbaa !2355
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !19390
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !19391, !tbaa !2355
  %cmp1 = icmp uge i8* %4, %5, !dbg !19392
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !19393

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19394, !tbaa !2355
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !19395, !ctir !1378
  %7 = load i8*, i8** %limit, align 8, !dbg !19395, !tbaa !2355, !ctir !7
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !19396, !tbaa !2355
  %cmp2 = icmp ult i8* %7, %8, !dbg !19397
  br label %lor.end, !dbg !19393

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !19398
  br i1 %10, label %while.body, label %while.end, !dbg !19385

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19399, !tbaa !2355
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !19401, !ctir !1378
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !19401, !tbaa !2355, !ctir !1377
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !19402, !tbaa !2355
  %13 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19403, !tbaa !2355
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19404, !tbaa !2355
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !19404
  call void @call_freefun(%struct.obstack* %13, i8* %15), !dbg !19405
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !19406, !tbaa !2355
  store %struct._obstack_chunk* %16, %struct._obstack_chunk** %lp, align 8, !dbg !19407, !tbaa !2355
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19408, !tbaa !2355
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10, !dbg !19409, !ctir !1372
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !19410
  %bf.clear = and i8 %bf.load, -3, !dbg !19410
  %bf.set = or i8 %bf.clear, 2, !dbg !19410
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !19410
  br label %while.cond, !dbg !19385, !llvm.loop !19411

while.end:                                        ; preds = %land.end
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19413, !tbaa !2355
  %tobool = icmp ne %struct._obstack_chunk* %18, null, !dbg !19413
  br i1 %tobool, label %if.then, label %if.else, !dbg !19415

if.then:                                          ; preds = %while.end
  %19 = load i8*, i8** %obj.addr, align 8, !dbg !19416, !tbaa !2355
  %20 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19418, !tbaa !2355
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !19419, !ctir !1372
  store i8* %19, i8** %next_free, align 8, !dbg !19420, !tbaa !16699, !ctir !7
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19421, !tbaa !2355
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 2, !dbg !19422, !ctir !1372
  store i8* %19, i8** %object_base, align 8, !dbg !19423, !tbaa !16698, !ctir !7
  %22 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19424, !tbaa !2355
  %limit3 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %22, i32 0, i32 0, !dbg !19425, !ctir !1378
  %23 = load i8*, i8** %limit3, align 8, !dbg !19425, !tbaa !2355, !ctir !7
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19426, !tbaa !2355
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !19427, !ctir !1372
  store i8* %23, i8** %chunk_limit, align 8, !dbg !19428, !tbaa !16697, !ctir !7
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19429, !tbaa !2355
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19430, !tbaa !2355
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 1, !dbg !19431, !ctir !1372
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %chunk4, align 8, !dbg !19432, !tbaa !16696, !ctir !1377
  br label %if.end7, !dbg !19433

if.else:                                          ; preds = %while.end
  %27 = load i8*, i8** %obj.addr, align 8, !dbg !19434, !tbaa !2355
  %cmp5 = icmp ne i8* %27, null, !dbg !19436
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19437

if.then6:                                         ; preds = %if.else
  call void @abort() #13, !dbg !19438
  unreachable, !dbg !19438

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !19439
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @_obstack_memory_used(%struct.obstack* %h) #9 !dbg !19440 !ctir !1423 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1371
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1377
  %nbytes = alloca i64, align 8, !ctir !52
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19441, metadata !DIExpression()), !dbg !19442
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !19443, metadata !DIExpression()), !dbg !19444
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !19445, metadata !DIExpression()), !dbg !19446
  store i64 0, i64* %nbytes, align 8, !dbg !19446, !tbaa !2516
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19447, !tbaa !2355
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19449, !ctir !1372
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19449, !tbaa !16696, !ctir !1377
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !19450, !tbaa !2355
  br label %for.cond, !dbg !19451

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19452, !tbaa !2355
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !19454
  br i1 %cmp, label %for.body, label %for.end, !dbg !19455

for.body:                                         ; preds = %for.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19456, !tbaa !2355
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %3, i32 0, i32 0, !dbg !19458, !ctir !1378
  %4 = load i8*, i8** %limit, align 8, !dbg !19458, !tbaa !2355, !ctir !7
  %5 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19459, !tbaa !2355
  %6 = bitcast %struct._obstack_chunk* %5 to i8*, !dbg !19460
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !19461
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !19461
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19461
  %7 = load i64, i64* %nbytes, align 8, !dbg !19462, !tbaa !2516
  %add = add i64 %7, %sub.ptr.sub, !dbg !19462
  store i64 %add, i64* %nbytes, align 8, !dbg !19462, !tbaa !2516
  br label %for.inc, !dbg !19463

for.inc:                                          ; preds = %for.body
  %8 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19464, !tbaa !2355
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %8, i32 0, i32 1, !dbg !19465, !ctir !1378
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !19465, !tbaa !2355, !ctir !1377
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %lp, align 8, !dbg !19466, !tbaa !2355
  br label %for.cond, !dbg !19467, !llvm.loop !19468

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %nbytes, align 8, !dbg !19470, !tbaa !2516
  ret i64 %10, !dbg !19471
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !19472 !ctir !2188 {
entry:
  %x.addr = alloca i64, align 8, !ctir !2190
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19474, metadata !DIExpression()), !dbg !19475
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19476, metadata !DIExpression()), !dbg !19477
  %0 = load i64, i64* %x.addr, align 8, !dbg !19478, !tbaa !2516
  %1 = load i32, i32* %n.addr, align 4, !dbg !19479, !tbaa !2342
  %sh_prom = zext i32 %1 to i64, !dbg !19480
  %shl = shl i64 %0, %sh_prom, !dbg !19480
  %2 = load i64, i64* %x.addr, align 8, !dbg !19481, !tbaa !2516
  %3 = load i32, i32* %n.addr, align 4, !dbg !19482, !tbaa !2342
  %sub = sub nsw i32 64, %3, !dbg !19483
  %sh_prom1 = zext i32 %sub to i64, !dbg !19484
  %shr = lshr i64 %2, %sh_prom1, !dbg !19484
  %or = or i64 %shl, %shr, !dbg !19485
  ret i64 %or, !dbg !19486
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !19487 !ctir !2188 {
entry:
  %x.addr = alloca i64, align 8, !ctir !2190
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19488, metadata !DIExpression()), !dbg !19489
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19490, metadata !DIExpression()), !dbg !19491
  %0 = load i64, i64* %x.addr, align 8, !dbg !19492, !tbaa !2516
  %1 = load i32, i32* %n.addr, align 4, !dbg !19493, !tbaa !2342
  %sh_prom = zext i32 %1 to i64, !dbg !19494
  %shr = lshr i64 %0, %sh_prom, !dbg !19494
  %2 = load i64, i64* %x.addr, align 8, !dbg !19495, !tbaa !2516
  %3 = load i32, i32* %n.addr, align 4, !dbg !19496, !tbaa !2342
  %sub = sub nsw i32 64, %3, !dbg !19497
  %sh_prom1 = zext i32 %sub to i64, !dbg !19498
  %shl = shl i64 %2, %sh_prom1, !dbg !19498
  %or = or i64 %shr, %shl, !dbg !19499
  ret i64 %or, !dbg !19500
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !19501 !ctir !2191 {
entry:
  %x.addr = alloca i32, align 4, !ctir !488
  %n.addr = alloca i32, align 4, !ctir !5
  store i32 %x, i32* %x.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19502, metadata !DIExpression()), !dbg !19503
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19504, metadata !DIExpression()), !dbg !19505
  %0 = load i32, i32* %x.addr, align 4, !dbg !19506, !tbaa !2342
  %1 = load i32, i32* %n.addr, align 4, !dbg !19507, !tbaa !2342
  %shl = shl i32 %0, %1, !dbg !19508
  %2 = load i32, i32* %x.addr, align 4, !dbg !19509, !tbaa !2342
  %3 = load i32, i32* %n.addr, align 4, !dbg !19510, !tbaa !2342
  %sub = sub nsw i32 32, %3, !dbg !19511
  %shr = lshr i32 %2, %sub, !dbg !19512
  %or = or i32 %shl, %shr, !dbg !19513
  ret i32 %or, !dbg !19514
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !19515 !ctir !2191 {
entry:
  %x.addr = alloca i32, align 4, !ctir !488
  %n.addr = alloca i32, align 4, !ctir !5
  store i32 %x, i32* %x.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19516, metadata !DIExpression()), !dbg !19517
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19518, metadata !DIExpression()), !dbg !19519
  %0 = load i32, i32* %x.addr, align 4, !dbg !19520, !tbaa !2342
  %1 = load i32, i32* %n.addr, align 4, !dbg !19521, !tbaa !2342
  %shr = lshr i32 %0, %1, !dbg !19522
  %2 = load i32, i32* %x.addr, align 4, !dbg !19523, !tbaa !2342
  %3 = load i32, i32* %n.addr, align 4, !dbg !19524, !tbaa !2342
  %sub = sub nsw i32 32, %3, !dbg !19525
  %shl = shl i32 %2, %sub, !dbg !19526
  %or = or i32 %shr, %shl, !dbg !19527
  ret i32 %or, !dbg !19528
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !19529 !ctir !2193 {
entry:
  %x.addr = alloca i64, align 8, !ctir !52
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19530, metadata !DIExpression()), !dbg !19531
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19532, metadata !DIExpression()), !dbg !19533
  %0 = load i64, i64* %x.addr, align 8, !dbg !19534, !tbaa !2516
  %1 = load i32, i32* %n.addr, align 4, !dbg !19535, !tbaa !2342
  %sh_prom = zext i32 %1 to i64, !dbg !19536
  %shl = shl i64 %0, %sh_prom, !dbg !19536
  %2 = load i64, i64* %x.addr, align 8, !dbg !19537, !tbaa !2516
  %3 = load i32, i32* %n.addr, align 4, !dbg !19538, !tbaa !2342
  %conv = sext i32 %3 to i64, !dbg !19538
  %sub = sub i64 64, %conv, !dbg !19539
  %shr = lshr i64 %2, %sub, !dbg !19540
  %or = or i64 %shl, %shr, !dbg !19541
  ret i64 %or, !dbg !19542
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !19543 !ctir !2193 {
entry:
  %x.addr = alloca i64, align 8, !ctir !52
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19544, metadata !DIExpression()), !dbg !19545
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19546, metadata !DIExpression()), !dbg !19547
  %0 = load i64, i64* %x.addr, align 8, !dbg !19548, !tbaa !2516
  %1 = load i32, i32* %n.addr, align 4, !dbg !19549, !tbaa !2342
  %sh_prom = zext i32 %1 to i64, !dbg !19550
  %shr = lshr i64 %0, %sh_prom, !dbg !19550
  %2 = load i64, i64* %x.addr, align 8, !dbg !19551, !tbaa !2516
  %3 = load i32, i32* %n.addr, align 4, !dbg !19552, !tbaa !2342
  %conv = sext i32 %3 to i64, !dbg !19552
  %sub = sub i64 64, %conv, !dbg !19553
  %shl = shl i64 %2, %sub, !dbg !19554
  %or = or i64 %shr, %shl, !dbg !19555
  ret i64 %or, !dbg !19556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !19557 !ctir !2195 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2197
  %n.addr = alloca i32, align 4, !ctir !5
  store i16 %x, i16* %x.addr, align 2, !tbaa !3489
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19558, metadata !DIExpression()), !dbg !19559
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19560, metadata !DIExpression()), !dbg !19561
  %0 = load i16, i16* %x.addr, align 2, !dbg !19562, !tbaa !3489
  %conv = zext i16 %0 to i32, !dbg !19563
  %1 = load i32, i32* %n.addr, align 4, !dbg !19564, !tbaa !2342
  %shl = shl i32 %conv, %1, !dbg !19565
  %2 = load i16, i16* %x.addr, align 2, !dbg !19566, !tbaa !3489
  %conv1 = zext i16 %2 to i32, !dbg !19567
  %3 = load i32, i32* %n.addr, align 4, !dbg !19568, !tbaa !2342
  %sub = sub nsw i32 16, %3, !dbg !19569
  %shr = lshr i32 %conv1, %sub, !dbg !19570
  %or = or i32 %shl, %shr, !dbg !19571
  %and = and i32 %or, 65535, !dbg !19572
  %conv2 = trunc i32 %and to i16, !dbg !19573
  ret i16 %conv2, !dbg !19574
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !19575 !ctir !2195 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2197
  %n.addr = alloca i32, align 4, !ctir !5
  store i16 %x, i16* %x.addr, align 2, !tbaa !3489
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19576, metadata !DIExpression()), !dbg !19577
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19578, metadata !DIExpression()), !dbg !19579
  %0 = load i16, i16* %x.addr, align 2, !dbg !19580, !tbaa !3489
  %conv = zext i16 %0 to i32, !dbg !19581
  %1 = load i32, i32* %n.addr, align 4, !dbg !19582, !tbaa !2342
  %shr = lshr i32 %conv, %1, !dbg !19583
  %2 = load i16, i16* %x.addr, align 2, !dbg !19584, !tbaa !3489
  %conv1 = zext i16 %2 to i32, !dbg !19585
  %3 = load i32, i32* %n.addr, align 4, !dbg !19586, !tbaa !2342
  %sub = sub nsw i32 16, %3, !dbg !19587
  %shl = shl i32 %conv1, %sub, !dbg !19588
  %or = or i32 %shr, %shl, !dbg !19589
  %and = and i32 %or, 65535, !dbg !19590
  %conv2 = trunc i32 %and to i16, !dbg !19591
  ret i16 %conv2, !dbg !19592
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !19593 !ctir !2198 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2200
  %n.addr = alloca i32, align 4, !ctir !5
  store i8 %x, i8* %x.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19594, metadata !DIExpression()), !dbg !19595
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19596, metadata !DIExpression()), !dbg !19597
  %0 = load i8, i8* %x.addr, align 1, !dbg !19598, !tbaa !2507
  %conv = zext i8 %0 to i32, !dbg !19599
  %1 = load i32, i32* %n.addr, align 4, !dbg !19600, !tbaa !2342
  %shl = shl i32 %conv, %1, !dbg !19601
  %2 = load i8, i8* %x.addr, align 1, !dbg !19602, !tbaa !2507
  %conv1 = zext i8 %2 to i32, !dbg !19603
  %3 = load i32, i32* %n.addr, align 4, !dbg !19604, !tbaa !2342
  %sub = sub nsw i32 8, %3, !dbg !19605
  %shr = lshr i32 %conv1, %sub, !dbg !19606
  %or = or i32 %shl, %shr, !dbg !19607
  %and = and i32 %or, 255, !dbg !19608
  %conv2 = trunc i32 %and to i8, !dbg !19609
  ret i8 %conv2, !dbg !19610
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !19611 !ctir !2198 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2200
  %n.addr = alloca i32, align 4, !ctir !5
  store i8 %x, i8* %x.addr, align 1, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19612, metadata !DIExpression()), !dbg !19613
  store i32 %n, i32* %n.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19614, metadata !DIExpression()), !dbg !19615
  %0 = load i8, i8* %x.addr, align 1, !dbg !19616, !tbaa !2507
  %conv = zext i8 %0 to i32, !dbg !19617
  %1 = load i32, i32* %n.addr, align 4, !dbg !19618, !tbaa !2342
  %shr = lshr i32 %conv, %1, !dbg !19619
  %2 = load i8, i8* %x.addr, align 1, !dbg !19620, !tbaa !2507
  %conv1 = zext i8 %2 to i32, !dbg !19621
  %3 = load i32, i32* %n.addr, align 4, !dbg !19622, !tbaa !2342
  %sub = sub nsw i32 8, %3, !dbg !19623
  %shl = shl i32 %conv1, %sub, !dbg !19624
  %or = or i32 %shr, %shl, !dbg !19625
  %and = and i32 %or, 255, !dbg !19626
  %conv2 = trunc i32 %and to i8, !dbg !19627
  ret i8 %conv2, !dbg !19628
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !19629 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19631, metadata !DIExpression()), !dbg !19632
  %0 = load i32, i32* %c.addr, align 4, !dbg !19633, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19634

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19635
  br label %return, !dbg !19635

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19637
  br label %return, !dbg !19637

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19638
  ret i1 %1, !dbg !19638
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !19639 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19640, metadata !DIExpression()), !dbg !19641
  %0 = load i32, i32* %c.addr, align 4, !dbg !19642, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19643

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19644
  br label %return, !dbg !19644

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19646
  br label %return, !dbg !19646

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19647
  ret i1 %1, !dbg !19647
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !19648 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19649, metadata !DIExpression()), !dbg !19650
  %0 = load i32, i32* %c.addr, align 4, !dbg !19651, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19652

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19653
  br label %return, !dbg !19653

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19655
  br label %return, !dbg !19655

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19656
  ret i1 %1, !dbg !19656
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !19657 !ctir !1540 {
entry:
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19658, metadata !DIExpression()), !dbg !19659
  %0 = load i32, i32* %c.addr, align 4, !dbg !19660, !tbaa !2342
  %cmp = icmp eq i32 %0, 32, !dbg !19661
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !19662

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !19663, !tbaa !2342
  %cmp1 = icmp eq i32 %1, 9, !dbg !19664
  br label %lor.end, !dbg !19662

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !19665
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !19666 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19667, metadata !DIExpression()), !dbg !19668
  %0 = load i32, i32* %c.addr, align 4, !dbg !19669, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !19670

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19671
  br label %return, !dbg !19671

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19673
  br label %return, !dbg !19673

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19674
  ret i1 %1, !dbg !19674
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !19675 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19676, metadata !DIExpression()), !dbg !19677
  %0 = load i32, i32* %c.addr, align 4, !dbg !19678, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !19679

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19680
  br label %return, !dbg !19680

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19682
  br label %return, !dbg !19682

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19683
  ret i1 %1, !dbg !19683
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !19684 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19685, metadata !DIExpression()), !dbg !19686
  %0 = load i32, i32* %c.addr, align 4, !dbg !19687, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19688

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19689
  br label %return, !dbg !19689

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19691
  br label %return, !dbg !19691

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19692
  ret i1 %1, !dbg !19692
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !19693 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19694, metadata !DIExpression()), !dbg !19695
  %0 = load i32, i32* %c.addr, align 4, !dbg !19696, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !19697

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19698
  br label %return, !dbg !19698

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19700
  br label %return, !dbg !19700

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19701
  ret i1 %1, !dbg !19701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !19702 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19703, metadata !DIExpression()), !dbg !19704
  %0 = load i32, i32* %c.addr, align 4, !dbg !19705, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19706

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19707
  br label %return, !dbg !19707

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19709
  br label %return, !dbg !19709

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19710
  ret i1 %1, !dbg !19710
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !19711 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19712, metadata !DIExpression()), !dbg !19713
  %0 = load i32, i32* %c.addr, align 4, !dbg !19714, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !19715

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19716
  br label %return, !dbg !19716

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19718
  br label %return, !dbg !19718

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19719
  ret i1 %1, !dbg !19719
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !19720 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19721, metadata !DIExpression()), !dbg !19722
  %0 = load i32, i32* %c.addr, align 4, !dbg !19723, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !19724

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19725
  br label %return, !dbg !19725

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19727
  br label %return, !dbg !19727

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19728
  ret i1 %1, !dbg !19728
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !19729 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19730, metadata !DIExpression()), !dbg !19731
  %0 = load i32, i32* %c.addr, align 4, !dbg !19732, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19733

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19734
  br label %return, !dbg !19734

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19736
  br label %return, !dbg !19736

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19737
  ret i1 %1, !dbg !19737
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !19738 !ctir !1540 {
entry:
  %retval = alloca i1, align 1, !ctir !102
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19739, metadata !DIExpression()), !dbg !19740
  %0 = load i32, i32* %c.addr, align 4, !dbg !19741, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !19742

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19743
  br label %return, !dbg !19743

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19745
  br label %return, !dbg !19745

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19746
  ret i1 %1, !dbg !19746
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !19747 !ctir !1872 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19748, metadata !DIExpression()), !dbg !19749
  %0 = load i32, i32* %c.addr, align 4, !dbg !19750, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19751

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !19752, !tbaa !2342
  %sub = sub nsw i32 %1, 65, !dbg !19754
  %add = add nsw i32 %sub, 97, !dbg !19755
  store i32 %add, i32* %retval, align 4, !dbg !19756
  br label %return, !dbg !19756

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !19757, !tbaa !2342
  store i32 %2, i32* %retval, align 4, !dbg !19758
  br label %return, !dbg !19758

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !19759
  ret i32 %3, !dbg !19759
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !19760 !ctir !1872 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19761, metadata !DIExpression()), !dbg !19762
  %0 = load i32, i32* %c.addr, align 4, !dbg !19763, !tbaa !2342
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !19764

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !19765, !tbaa !2342
  %sub = sub nsw i32 %1, 97, !dbg !19767
  %add = add nsw i32 %sub, 65, !dbg !19768
  store i32 %add, i32* %retval, align 4, !dbg !19769
  br label %return, !dbg !19769

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !19770, !tbaa !2342
  store i32 %2, i32* %retval, align 4, !dbg !19771
  br label %return, !dbg !19771

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !19772
  ret i32 %3, !dbg !19772
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !19773 !ctir !474 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s2.addr = alloca i8*, align 8, !ctir !87
  %p1 = alloca i8*, align 8, !ctir !2207
  %p2 = alloca i8*, align 8, !ctir !2207
  %c1 = alloca i8, align 1, !ctir !317
  %c2 = alloca i8, align 1, !ctir !317
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !19775, metadata !DIExpression()), !dbg !19776
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !19777, metadata !DIExpression()), !dbg !19778
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !19779, metadata !DIExpression()), !dbg !19780
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !19781, !tbaa !2355
  store i8* %0, i8** %p1, align 8, !dbg !19780, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !19782, metadata !DIExpression()), !dbg !19783
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !19784, !tbaa !2355
  store i8* %1, i8** %p2, align 8, !dbg !19783, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !19785, metadata !DIExpression()), !dbg !19786
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !19787, metadata !DIExpression()), !dbg !19788
  %2 = load i8*, i8** %p1, align 8, !dbg !19789, !tbaa !2355
  %3 = load i8*, i8** %p2, align 8, !dbg !19791, !tbaa !2355
  %cmp = icmp eq i8* %2, %3, !dbg !19792
  br i1 %cmp, label %if.then, label %if.end, !dbg !19793

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19794
  br label %return, !dbg !19794

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !19795

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !19796, !tbaa !2355
  %5 = load i8, i8* %4, align 1, !dbg !19798, !tbaa !2507, !ctir !935
  %conv = zext i8 %5 to i32, !dbg !19798
  %call = call i32 @c_tolower(i32 %conv), !dbg !19799
  %conv1 = trunc i32 %call to i8, !dbg !19799
  store i8 %conv1, i8* %c1, align 1, !dbg !19800, !tbaa !2507
  %6 = load i8*, i8** %p2, align 8, !dbg !19801, !tbaa !2355
  %7 = load i8, i8* %6, align 1, !dbg !19802, !tbaa !2507, !ctir !935
  %conv2 = zext i8 %7 to i32, !dbg !19802
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !19803
  %conv4 = trunc i32 %call3 to i8, !dbg !19803
  store i8 %conv4, i8* %c2, align 1, !dbg !19804, !tbaa !2507
  %8 = load i8, i8* %c1, align 1, !dbg !19805, !tbaa !2507
  %conv5 = zext i8 %8 to i32, !dbg !19805
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !19807
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19808

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !19809

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !19810, !tbaa !2355
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !19810
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !19810, !tbaa !2355
  %10 = load i8*, i8** %p2, align 8, !dbg !19811, !tbaa !2355
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19811
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !19811, !tbaa !2355
  br label %do.cond, !dbg !19812

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !19813, !tbaa !2507
  %conv11 = zext i8 %11 to i32, !dbg !19813
  %12 = load i8, i8* %c2, align 1, !dbg !19814, !tbaa !2507
  %conv12 = zext i8 %12 to i32, !dbg !19814
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !19815
  br i1 %cmp13, label %do.body, label %do.end, !dbg !19812, !llvm.loop !19816

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !19818, !tbaa !2507
  %conv15 = zext i8 %13 to i32, !dbg !19818
  %14 = load i8, i8* %c2, align 1, !dbg !19820, !tbaa !2507
  %conv16 = zext i8 %14 to i32, !dbg !19820
  %sub = sub nsw i32 %conv15, %conv16, !dbg !19821
  store i32 %sub, i32* %retval, align 4, !dbg !19822
  br label %return, !dbg !19822

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !19823
  ret i32 %15, !dbg !19823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !19824 !ctir !2211 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2213
  %some_pending = alloca i8, align 1, !ctir !101
  %prev_fail = alloca i8, align 1, !ctir !101
  %fclose_fail = alloca i8, align 1, !ctir !101
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19826, metadata !DIExpression()), !dbg !19827
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !19828, metadata !DIExpression()), !dbg !19829
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19830, !tbaa !2355
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #12, !dbg !19831
  %cmp = icmp ne i64 %call, 0, !dbg !19832
  %frombool = zext i1 %cmp to i8, !dbg !19829
  store i8 %frombool, i8* %some_pending, align 1, !dbg !19829, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !19833, metadata !DIExpression()), !dbg !19834
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19835, !tbaa !2355
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #12, !dbg !19835
  %cmp2 = icmp ne i32 %call1, 0, !dbg !19836
  %frombool3 = zext i1 %cmp2 to i8, !dbg !19834
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !19834, !tbaa !2499
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !19837, metadata !DIExpression()), !dbg !19838
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19839, !tbaa !2355
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !19840
  %cmp5 = icmp ne i32 %call4, 0, !dbg !19841
  %frombool6 = zext i1 %cmp5 to i8, !dbg !19838
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !19838, !tbaa !2499
  %3 = load i8, i8* %prev_fail, align 1, !dbg !19842, !tbaa !2499
  %tobool = trunc i8 %3 to i1, !dbg !19842
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19844

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !19845, !tbaa !2499
  %tobool7 = trunc i8 %4 to i1, !dbg !19845
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !19846

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !19847, !tbaa !2499
  %tobool8 = trunc i8 %5 to i1, !dbg !19847
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !19848

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !19849
  %6 = load i32, i32* %call10, align 4, !dbg !19849, !tbaa !2342, !ctir !5
  %cmp11 = icmp ne i32 %6, 9, !dbg !19850
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !19851

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !19852, !tbaa !2499
  %tobool12 = trunc i8 %7 to i1, !dbg !19852
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !19855

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !19856
  store i32 0, i32* %call14, align 4, !dbg !19857, !tbaa !2342, !ctir !5
  br label %if.end, !dbg !19856

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19858
  br label %return, !dbg !19858

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !19859
  br label %return, !dbg !19859

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !19860
  ret i32 %8, !dbg !19860
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local { i64, i64 } @dtotimespec(double %sec) #11 !dbg !19861 !ctir !2256 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !2258
  %sec.addr = alloca double, align 8, !ctir !370
  %s = alloca i64, align 8, !ctir !2177
  %frac = alloca double, align 8, !ctir !370
  %ns = alloca i64, align 8, !ctir !32
  store double %sec, double* %sec.addr, align 8, !tbaa !3931
  call void @llvm.dbg.declare(metadata double* %sec.addr, metadata !19863, metadata !DIExpression()), !dbg !19864
  %0 = load double, double* %sec.addr, align 8, !dbg !19865, !tbaa !3931
  %cmp = fcmp olt double 0xC3E0000000000000, %0, !dbg !19867
  br i1 %cmp, label %if.else, label %if.then, !dbg !19868

if.then:                                          ; preds = %entry
  %call = call { i64, i64 } @make_timespec(i64 -9223372036854775808, i64 0), !dbg !19869
  %1 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19869
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !19869
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !19869
  store i64 %3, i64* %2, align 8, !dbg !19869
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !19869
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !19869
  store i64 %5, i64* %4, align 8, !dbg !19869
  br label %return, !dbg !19870

if.else:                                          ; preds = %entry
  %6 = load double, double* %sec.addr, align 8, !dbg !19871, !tbaa !3931
  %cmp1 = fcmp olt double %6, 0x43E0000000000000, !dbg !19873
  br i1 %cmp1, label %if.else4, label %if.then2, !dbg !19874

if.then2:                                         ; preds = %if.else
  %call3 = call { i64, i64 } @make_timespec(i64 9223372036854775807, i64 999999999), !dbg !19875
  %7 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19875
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !19875
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !19875
  store i64 %9, i64* %8, align 8, !dbg !19875
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !19875
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !19875
  store i64 %11, i64* %10, align 8, !dbg !19875
  br label %return, !dbg !19876

if.else4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %s, metadata !19877, metadata !DIExpression()), !dbg !19879
  %12 = load double, double* %sec.addr, align 8, !dbg !19880, !tbaa !3931
  %conv = fptosi double %12 to i64, !dbg !19880
  store i64 %conv, i64* %s, align 8, !dbg !19879, !tbaa !2516
  call void @llvm.dbg.declare(metadata double* %frac, metadata !19881, metadata !DIExpression()), !dbg !19882
  %13 = load double, double* %sec.addr, align 8, !dbg !19883, !tbaa !3931
  %14 = load i64, i64* %s, align 8, !dbg !19884, !tbaa !2516
  %conv5 = sitofp i64 %14 to double, !dbg !19884
  %sub = fsub double %13, %conv5, !dbg !19885
  %mul = fmul double 1.000000e+09, %sub, !dbg !19886
  store double %mul, double* %frac, align 8, !dbg !19882, !tbaa !3931
  call void @llvm.dbg.declare(metadata i64* %ns, metadata !19887, metadata !DIExpression()), !dbg !19888
  %15 = load double, double* %frac, align 8, !dbg !19889, !tbaa !3931
  %conv6 = fptosi double %15 to i64, !dbg !19889
  store i64 %conv6, i64* %ns, align 8, !dbg !19888, !tbaa !2516
  %16 = load i64, i64* %ns, align 8, !dbg !19890, !tbaa !2516
  %conv7 = sitofp i64 %16 to double, !dbg !19890
  %17 = load double, double* %frac, align 8, !dbg !19891, !tbaa !3931
  %cmp8 = fcmp olt double %conv7, %17, !dbg !19892
  %conv9 = zext i1 %cmp8 to i32, !dbg !19892
  %conv10 = sext i32 %conv9 to i64, !dbg !19890
  %18 = load i64, i64* %ns, align 8, !dbg !19893, !tbaa !2516
  %add = add nsw i64 %18, %conv10, !dbg !19893
  store i64 %add, i64* %ns, align 8, !dbg !19893, !tbaa !2516
  %19 = load i64, i64* %ns, align 8, !dbg !19894, !tbaa !2516
  %div = sdiv i64 %19, 1000000000, !dbg !19895
  %20 = load i64, i64* %s, align 8, !dbg !19896, !tbaa !2516
  %add11 = add nsw i64 %20, %div, !dbg !19896
  store i64 %add11, i64* %s, align 8, !dbg !19896, !tbaa !2516
  %21 = load i64, i64* %ns, align 8, !dbg !19897, !tbaa !2516
  %rem = srem i64 %21, 1000000000, !dbg !19897
  store i64 %rem, i64* %ns, align 8, !dbg !19897, !tbaa !2516
  %22 = load i64, i64* %ns, align 8, !dbg !19898, !tbaa !2516
  %cmp12 = icmp slt i64 %22, 0, !dbg !19900
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !19901

if.then14:                                        ; preds = %if.else4
  %23 = load i64, i64* %s, align 8, !dbg !19902, !tbaa !2516
  %dec = add nsw i64 %23, -1, !dbg !19902
  store i64 %dec, i64* %s, align 8, !dbg !19902, !tbaa !2516
  %24 = load i64, i64* %ns, align 8, !dbg !19904, !tbaa !2516
  %add15 = add nsw i64 %24, 1000000000, !dbg !19904
  store i64 %add15, i64* %ns, align 8, !dbg !19904, !tbaa !2516
  br label %if.end, !dbg !19905

if.end:                                           ; preds = %if.then14, %if.else4
  %25 = load i64, i64* %s, align 8, !dbg !19906, !tbaa !2516
  %26 = load i64, i64* %ns, align 8, !dbg !19907, !tbaa !2516
  %call16 = call { i64, i64 } @make_timespec(i64 %25, i64 %26), !dbg !19908
  %27 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19908
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i32 0, i32 0, !dbg !19908
  %29 = extractvalue { i64, i64 } %call16, 0, !dbg !19908
  store i64 %29, i64* %28, align 8, !dbg !19908
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i32 0, i32 1, !dbg !19908
  %31 = extractvalue { i64, i64 } %call16, 1, !dbg !19908
  store i64 %31, i64* %30, align 8, !dbg !19908
  br label %return, !dbg !19909

return:                                           ; preds = %if.end, %if.then2, %if.then
  %32 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19910
  %33 = load { i64, i64 }, { i64, i64 }* %32, align 8, !dbg !19910
  ret { i64, i64 } %33, !dbg !19910
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer_flag(i32 %fd, i32 %flag) #4 !dbg !19911 !ctir !1348 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %flag.addr = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19913, metadata !DIExpression()), !dbg !19914
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !19915, metadata !DIExpression()), !dbg !19916
  %0 = load i32, i32* %fd.addr, align 4, !dbg !19917, !tbaa !2342
  %cmp = icmp sle i32 0, %0, !dbg !19919
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19920

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !19921, !tbaa !2342
  %cmp1 = icmp sle i32 %1, 2, !dbg !19922
  br i1 %cmp1, label %if.then, label %if.end, !dbg !19923

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !19924, metadata !DIExpression()), !dbg !19926
  %2 = load i32, i32* %fd.addr, align 4, !dbg !19927, !tbaa !2342
  %3 = load i32, i32* %flag.addr, align 4, !dbg !19928, !tbaa !2342
  %call = call i32 @dup_safer_flag(i32 %2, i32 %3), !dbg !19929
  store i32 %call, i32* %f, align 4, !dbg !19926, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %e, metadata !19930, metadata !DIExpression()), !dbg !19931
  %call2 = call i32* @__errno_location() #16, !dbg !19932
  %4 = load i32, i32* %call2, align 4, !dbg !19932, !tbaa !2342, !ctir !5
  store i32 %4, i32* %e, align 4, !dbg !19931, !tbaa !2342
  %5 = load i32, i32* %fd.addr, align 4, !dbg !19933, !tbaa !2342
  %call3 = call i32 @close(i32 %5), !dbg !19934
  %6 = load i32, i32* %e, align 4, !dbg !19935, !tbaa !2342
  %call4 = call i32* @__errno_location() #16, !dbg !19936
  store i32 %6, i32* %call4, align 4, !dbg !19937, !tbaa !2342, !ctir !5
  %7 = load i32, i32* %f, align 4, !dbg !19938, !tbaa !2342
  store i32 %7, i32* %fd.addr, align 4, !dbg !19939, !tbaa !2342
  br label %if.end, !dbg !19940

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !19941, !tbaa !2342
  ret i32 %8, !dbg !19942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer_flag(i32 %fd, i32 %flag) #4 !dbg !19943 !ctir !1348 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %flag.addr = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19945, metadata !DIExpression()), !dbg !19946
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !19947, metadata !DIExpression()), !dbg !19948
  %0 = load i32, i32* %fd.addr, align 4, !dbg !19949, !tbaa !2342
  %1 = load i32, i32* %flag.addr, align 4, !dbg !19950, !tbaa !2342
  %and = and i32 %1, 524288, !dbg !19951
  %tobool = icmp ne i32 %and, 0, !dbg !19952
  %2 = zext i1 %tobool to i64, !dbg !19952
  %cond = select i1 %tobool, i32 1030, i32 0, !dbg !19952
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 %cond, i32 3), !dbg !19953
  ret i32 %call, !dbg !19954
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !19955 !ctir !2270 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8, !ctir !2272
  %file.addr = alloca i8*, align 8, !ctir !87
  %mode.addr = alloca i8*, align 8, !ctir !87
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2272
  %fd = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  %e15 = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !19957, metadata !DIExpression()), !dbg !19958
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !19959, metadata !DIExpression()), !dbg !19960
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !19961, metadata !DIExpression()), !dbg !19962
  %0 = load i8*, i8** %file.addr, align 8, !dbg !19963, !tbaa !2355
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !19964, !tbaa !2355
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !19965
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !19962, !tbaa !2355
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19966, !tbaa !2355
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !19966
  br i1 %tobool, label %if.then, label %if.end21, !dbg !19968

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19969, metadata !DIExpression()), !dbg !19971
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19972, !tbaa !2355
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #12, !dbg !19973
  store i32 %call1, i32* %fd, align 4, !dbg !19971, !tbaa !2342
  %4 = load i32, i32* %fd, align 4, !dbg !19974, !tbaa !2342
  %cmp = icmp sle i32 0, %4, !dbg !19976
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !19977

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !19978, !tbaa !2342
  %cmp2 = icmp sle i32 %5, 2, !dbg !19979
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !19980

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !19981, metadata !DIExpression()), !dbg !19983
  %6 = load i32, i32* %fd, align 4, !dbg !19984, !tbaa !2342
  %call4 = call i32 @dup_safer(i32 %6), !dbg !19985
  store i32 %call4, i32* %f, align 4, !dbg !19983, !tbaa !2342
  %7 = load i32, i32* %f, align 4, !dbg !19986, !tbaa !2342
  %cmp5 = icmp slt i32 %7, 0, !dbg !19988
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19989

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !19990, metadata !DIExpression()), !dbg !19992
  %call7 = call i32* @__errno_location() #16, !dbg !19993
  %8 = load i32, i32* %call7, align 4, !dbg !19993, !tbaa !2342, !ctir !5
  store i32 %8, i32* %e, align 4, !dbg !19992, !tbaa !2342
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19994, !tbaa !2355
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !19995
  %10 = load i32, i32* %e, align 4, !dbg !19996, !tbaa !2342
  %call9 = call i32* @__errno_location() #16, !dbg !19997
  store i32 %10, i32* %call9, align 4, !dbg !19998, !tbaa !2342, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !19999
  br label %return, !dbg !19999

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !20000, !tbaa !2355
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !20002
  %cmp11 = icmp ne i32 %call10, 0, !dbg !20003
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !20004

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !20005, !tbaa !2342
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !20006, !tbaa !2355
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #12, !dbg !20007
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !20008, !tbaa !2355
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !20008
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !20009

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !20010, metadata !DIExpression()), !dbg !20012
  %call16 = call i32* @__errno_location() #16, !dbg !20013
  %14 = load i32, i32* %call16, align 4, !dbg !20013, !tbaa !2342, !ctir !5
  store i32 %14, i32* %e15, align 4, !dbg !20012, !tbaa !2342
  %15 = load i32, i32* %f, align 4, !dbg !20014, !tbaa !2342
  %call17 = call i32 @close(i32 %15), !dbg !20015
  %16 = load i32, i32* %e15, align 4, !dbg !20016, !tbaa !2342
  %call18 = call i32* @__errno_location() #16, !dbg !20017
  store i32 %16, i32* %call18, align 4, !dbg !20018, !tbaa !2342, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !20019
  br label %return, !dbg !20019

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !20020

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !20021

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !20022, !tbaa !2355
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !20023
  br label %return, !dbg !20023

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !20024
  ret %struct._IO_FILE* %18, !dbg !20024
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !20025 !ctir !2315 {
entry:
  %codeset = alloca i8*, align 8, !ctir !87
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !20027, metadata !DIExpression()), !dbg !20028
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !20029
  store i8* %call, i8** %codeset, align 8, !dbg !20030, !tbaa !2355
  %0 = load i8*, i8** %codeset, align 8, !dbg !20031, !tbaa !2355
  %cmp = icmp eq i8* %0, null, !dbg !20033
  br i1 %cmp, label %if.then, label %if.end, !dbg !20034

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.421, i64 0, i64 0), i8** %codeset, align 8, !dbg !20035, !tbaa !2355
  br label %if.end, !dbg !20036

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !20037, !tbaa !2355
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !20037, !ctir !87
  %2 = load i8, i8* %arrayidx, align 1, !dbg !20037, !tbaa !2507
  %conv = sext i8 %2 to i32, !dbg !20037
  %cmp1 = icmp eq i32 %conv, 0, !dbg !20041
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !20042

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.422, i64 0, i64 0), i8** %codeset, align 8, !dbg !20043, !tbaa !2355
  br label %if.end4, !dbg !20044

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !20045, !tbaa !2355
  ret i8* %3, !dbg !20046
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @memcoll(i8* %s1, i64 %s1len, i8* %s2, i64 %s2len) #4 !dbg !20047 !ctir !1959 {
entry:
  %s1.addr = alloca i8*, align 8, !ctir !7
  %s1len.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !7
  %s2len.addr = alloca i64, align 8, !ctir !52
  %diff = alloca i32, align 4, !ctir !5
  %n1 = alloca i8, align 1, !ctir !8
  %n2 = alloca i8, align 1, !ctir !8
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20049, metadata !DIExpression()), !dbg !20050
  store i64 %s1len, i64* %s1len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1len.addr, metadata !20051, metadata !DIExpression()), !dbg !20052
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20053, metadata !DIExpression()), !dbg !20054
  store i64 %s2len, i64* %s2len.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2len.addr, metadata !20055, metadata !DIExpression()), !dbg !20056
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !20057, metadata !DIExpression()), !dbg !20058
  %0 = load i64, i64* %s1len.addr, align 8, !dbg !20059, !tbaa !2516
  %1 = load i64, i64* %s2len.addr, align 8, !dbg !20061, !tbaa !2516
  %cmp = icmp eq i64 %0, %1, !dbg !20062
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !20063

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !20064, !tbaa !2355
  %3 = load i8*, i8** %s2.addr, align 8, !dbg !20065, !tbaa !2355
  %4 = load i64, i64* %s1len.addr, align 8, !dbg !20066, !tbaa !2516
  %call = call i32 @memcmp(i8* %2, i8* %3, i64 %4) #14, !dbg !20067
  %cmp1 = icmp eq i32 %call, 0, !dbg !20068
  br i1 %cmp1, label %if.then, label %if.else, !dbg !20069

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !20070
  store i32 0, i32* %call2, align 4, !dbg !20072, !tbaa !2342, !ctir !5
  store i32 0, i32* %diff, align 4, !dbg !20073, !tbaa !2342
  br label %if.end, !dbg !20074

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8* %n1, metadata !20075, metadata !DIExpression()), !dbg !20077
  %5 = load i8*, i8** %s1.addr, align 8, !dbg !20078, !tbaa !2355
  %6 = load i64, i64* %s1len.addr, align 8, !dbg !20079, !tbaa !2516
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !20078, !ctir !7
  %7 = load i8, i8* %arrayidx, align 1, !dbg !20078, !tbaa !2507
  store i8 %7, i8* %n1, align 1, !dbg !20077, !tbaa !2507
  call void @llvm.dbg.declare(metadata i8* %n2, metadata !20080, metadata !DIExpression()), !dbg !20081
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !20082, !tbaa !2355
  %9 = load i64, i64* %s2len.addr, align 8, !dbg !20083, !tbaa !2516
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !20082, !ctir !7
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !20082, !tbaa !2507
  store i8 %10, i8* %n2, align 1, !dbg !20081, !tbaa !2507
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !20084, !tbaa !2355
  %12 = load i64, i64* %s1len.addr, align 8, !dbg !20085, !tbaa !2516
  %arrayidx4 = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !20084, !ctir !7
  store i8 0, i8* %arrayidx4, align 1, !dbg !20086, !tbaa !2507
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !20087, !tbaa !2355
  %14 = load i64, i64* %s2len.addr, align 8, !dbg !20088, !tbaa !2516
  %arrayidx5 = getelementptr inbounds i8, i8* %13, i64 %14, !dbg !20087, !ctir !7
  store i8 0, i8* %arrayidx5, align 1, !dbg !20089, !tbaa !2507
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !20090, !tbaa !2355
  %16 = load i64, i64* %s1len.addr, align 8, !dbg !20091, !tbaa !2516
  %add = add i64 %16, 1, !dbg !20092
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !20093, !tbaa !2355
  %18 = load i64, i64* %s2len.addr, align 8, !dbg !20094, !tbaa !2516
  %add6 = add i64 %18, 1, !dbg !20095
  %call7 = call i32 @strcoll_loop(i8* %15, i64 %add, i8* %17, i64 %add6), !dbg !20096
  store i32 %call7, i32* %diff, align 4, !dbg !20097, !tbaa !2342
  %19 = load i8, i8* %n1, align 1, !dbg !20098, !tbaa !2507
  %20 = load i8*, i8** %s1.addr, align 8, !dbg !20099, !tbaa !2355
  %21 = load i64, i64* %s1len.addr, align 8, !dbg !20100, !tbaa !2516
  %arrayidx8 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !20099, !ctir !7
  store i8 %19, i8* %arrayidx8, align 1, !dbg !20101, !tbaa !2507
  %22 = load i8, i8* %n2, align 1, !dbg !20102, !tbaa !2507
  %23 = load i8*, i8** %s2.addr, align 8, !dbg !20103, !tbaa !2355
  %24 = load i64, i64* %s2len.addr, align 8, !dbg !20104, !tbaa !2516
  %arrayidx9 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !20103, !ctir !7
  store i8 %22, i8* %arrayidx9, align 1, !dbg !20105, !tbaa !2507
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %diff, align 4, !dbg !20106, !tbaa !2342
  ret i32 %25, !dbg !20107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @strcoll_loop(i8* %s1, i64 %s1size, i8* %s2, i64 %s2size) #4 !dbg !20108 !ctir !1533 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s1size.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !87
  %s2size.addr = alloca i64, align 8, !ctir !52
  %diff = alloca i32, align 4, !ctir !5
  %size1 = alloca i64, align 8, !ctir !52
  %size2 = alloca i64, align 8, !ctir !52
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20109, metadata !DIExpression()), !dbg !20110
  store i64 %s1size, i64* %s1size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1size.addr, metadata !20111, metadata !DIExpression()), !dbg !20112
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20113, metadata !DIExpression()), !dbg !20114
  store i64 %s2size, i64* %s2size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2size.addr, metadata !20115, metadata !DIExpression()), !dbg !20116
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !20117, metadata !DIExpression()), !dbg !20118
  br label %while.cond, !dbg !20119

while.cond:                                       ; preds = %if.end14, %entry
  %call = call i32* @__errno_location() #16, !dbg !20120
  store i32 0, i32* %call, align 4, !dbg !20121, !tbaa !2342, !ctir !5
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !20122, !tbaa !2355
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !20123, !tbaa !2355
  %call1 = call i32 @strcoll(i8* %0, i8* %1) #14, !dbg !20124
  store i32 %call1, i32* %diff, align 4, !dbg !20125, !tbaa !2342
  %tobool = icmp ne i32 %call1, 0, !dbg !20125
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !20126

lor.rhs:                                          ; preds = %while.cond
  %call2 = call i32* @__errno_location() #16, !dbg !20127
  %2 = load i32, i32* %call2, align 4, !dbg !20127, !tbaa !2342, !ctir !5
  %tobool3 = icmp ne i32 %2, 0, !dbg !20126
  br label %lor.end, !dbg !20126

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %3 = phi i1 [ true, %while.cond ], [ %tobool3, %lor.rhs ]
  %lnot = xor i1 %3, true, !dbg !20128
  br i1 %lnot, label %while.body, label %while.end, !dbg !20119

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %size1, metadata !20129, metadata !DIExpression()), !dbg !20131
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !20132, !tbaa !2355
  %call4 = call i64 @strlen(i8* %4) #14, !dbg !20133
  %add = add i64 %call4, 1, !dbg !20134
  store i64 %add, i64* %size1, align 8, !dbg !20131, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %size2, metadata !20135, metadata !DIExpression()), !dbg !20136
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !20137, !tbaa !2355
  %call5 = call i64 @strlen(i8* %5) #14, !dbg !20138
  %add6 = add i64 %call5, 1, !dbg !20139
  store i64 %add6, i64* %size2, align 8, !dbg !20136, !tbaa !2516
  %6 = load i64, i64* %size1, align 8, !dbg !20140, !tbaa !2516
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !20141, !tbaa !2355
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %6, !dbg !20141
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !20141, !tbaa !2355
  %8 = load i64, i64* %size2, align 8, !dbg !20142, !tbaa !2516
  %9 = load i8*, i8** %s2.addr, align 8, !dbg !20143, !tbaa !2355
  %add.ptr7 = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !20143
  store i8* %add.ptr7, i8** %s2.addr, align 8, !dbg !20143, !tbaa !2355
  %10 = load i64, i64* %size1, align 8, !dbg !20144, !tbaa !2516
  %11 = load i64, i64* %s1size.addr, align 8, !dbg !20145, !tbaa !2516
  %sub = sub i64 %11, %10, !dbg !20145
  store i64 %sub, i64* %s1size.addr, align 8, !dbg !20145, !tbaa !2516
  %12 = load i64, i64* %size2, align 8, !dbg !20146, !tbaa !2516
  %13 = load i64, i64* %s2size.addr, align 8, !dbg !20147, !tbaa !2516
  %sub8 = sub i64 %13, %12, !dbg !20147
  store i64 %sub8, i64* %s2size.addr, align 8, !dbg !20147, !tbaa !2516
  %14 = load i64, i64* %s1size.addr, align 8, !dbg !20148, !tbaa !2516
  %cmp = icmp eq i64 %14, 0, !dbg !20150
  br i1 %cmp, label %if.then, label %if.end, !dbg !20151

if.then:                                          ; preds = %while.body
  %15 = load i64, i64* %s2size.addr, align 8, !dbg !20152, !tbaa !2516
  %cmp9 = icmp ne i64 %15, 0, !dbg !20153
  %conv = zext i1 %cmp9 to i32, !dbg !20153
  %sub10 = sub nsw i32 0, %conv, !dbg !20154
  store i32 %sub10, i32* %retval, align 4, !dbg !20155
  br label %return, !dbg !20155

if.end:                                           ; preds = %while.body
  %16 = load i64, i64* %s2size.addr, align 8, !dbg !20156, !tbaa !2516
  %cmp11 = icmp eq i64 %16, 0, !dbg !20158
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !20159

if.then13:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !20160
  br label %return, !dbg !20160

if.end14:                                         ; preds = %if.end
  br label %while.cond, !dbg !20119, !llvm.loop !20161

while.end:                                        ; preds = %lor.end
  %17 = load i32, i32* %diff, align 4, !dbg !20163, !tbaa !2342
  store i32 %17, i32* %retval, align 4, !dbg !20164
  br label %return, !dbg !20164

return:                                           ; preds = %while.end, %if.then13, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !20165
  ret i32 %18, !dbg !20165
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @memcoll0(i8* %s1, i64 %s1size, i8* %s2, i64 %s2size) #4 !dbg !20166 !ctir !1533 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !87
  %s1size.addr = alloca i64, align 8, !ctir !52
  %s2.addr = alloca i8*, align 8, !ctir !87
  %s2size.addr = alloca i64, align 8, !ctir !52
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20167, metadata !DIExpression()), !dbg !20168
  store i64 %s1size, i64* %s1size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s1size.addr, metadata !20169, metadata !DIExpression()), !dbg !20170
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2355
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20171, metadata !DIExpression()), !dbg !20172
  store i64 %s2size, i64* %s2size.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s2size.addr, metadata !20173, metadata !DIExpression()), !dbg !20174
  %0 = load i64, i64* %s1size.addr, align 8, !dbg !20175, !tbaa !2516
  %1 = load i64, i64* %s2size.addr, align 8, !dbg !20177, !tbaa !2516
  %cmp = icmp eq i64 %0, %1, !dbg !20178
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !20179

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !20180, !tbaa !2355
  %3 = load i8*, i8** %s2.addr, align 8, !dbg !20181, !tbaa !2355
  %4 = load i64, i64* %s1size.addr, align 8, !dbg !20182, !tbaa !2516
  %call = call i32 @memcmp(i8* %2, i8* %3, i64 %4) #14, !dbg !20183
  %cmp1 = icmp eq i32 %call, 0, !dbg !20184
  br i1 %cmp1, label %if.then, label %if.else, !dbg !20185

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !20186
  store i32 0, i32* %call2, align 4, !dbg !20188, !tbaa !2342, !ctir !5
  store i32 0, i32* %retval, align 4, !dbg !20189
  br label %return, !dbg !20189

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %s1.addr, align 8, !dbg !20190, !tbaa !2355
  %6 = load i64, i64* %s1size.addr, align 8, !dbg !20191, !tbaa !2516
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !20192, !tbaa !2355
  %8 = load i64, i64* %s2size.addr, align 8, !dbg !20193, !tbaa !2516
  %call3 = call i32 @strcoll_loop(i8* %5, i64 %6, i8* %7, i64 %8), !dbg !20194
  store i32 %call3, i32* %retval, align 4, !dbg !20195
  br label %return, !dbg !20195

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !20196
  ret i32 %9, !dbg !20196
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @make_timespec(i64 %s, i64 %ns) #4 !dbg !20197 !ctir !2322 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !2324
  %s.addr = alloca i64, align 8, !ctir !2177
  %ns.addr = alloca i64, align 8, !ctir !32
  store i64 %s, i64* %s.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !20199, metadata !DIExpression()), !dbg !20200
  store i64 %ns, i64* %ns.addr, align 8, !tbaa !2516
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !20201, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !20203, metadata !DIExpression()), !dbg !20204
  %0 = load i64, i64* %s.addr, align 8, !dbg !20205, !tbaa !2516
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !20206, !ctir !2324
  store i64 %0, i64* %tv_sec, align 8, !dbg !20207, !tbaa !18952, !ctir !403
  %1 = load i64, i64* %ns.addr, align 8, !dbg !20208, !tbaa !2516
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !20209, !ctir !2324
  store i64 %1, i64* %tv_nsec, align 8, !dbg !20210, !tbaa !18934, !ctir !405
  %2 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !20211
  %3 = load { i64, i64 }, { i64, i64 }* %2, align 8, !dbg !20211
  ret { i64, i64 } %3, !dbg !20211
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_cmp(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) #9 !dbg !20212 !ctir !2328 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %a = alloca %struct.timespec, align 8, !ctir !2324
  %b = alloca %struct.timespec, align 8, !ctir !2324
  %0 = bitcast %struct.timespec* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  %3 = bitcast %struct.timespec* %b to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %b.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %b.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %a, metadata !20213, metadata !DIExpression()), !dbg !20214
  call void @llvm.dbg.declare(metadata %struct.timespec* %b, metadata !20215, metadata !DIExpression()), !dbg !20216
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20217, !ctir !2324
  %6 = load i64, i64* %tv_sec, align 8, !dbg !20217, !tbaa !18952, !ctir !403
  %tv_sec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 0, !dbg !20219, !ctir !2324
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !20219, !tbaa !18952, !ctir !403
  %cmp = icmp slt i64 %6, %7, !dbg !20220
  br i1 %cmp, label %if.then, label %if.end, !dbg !20221

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !20222
  br label %return, !dbg !20222

if.end:                                           ; preds = %entry
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20223, !ctir !2324
  %8 = load i64, i64* %tv_sec2, align 8, !dbg !20223, !tbaa !18952, !ctir !403
  %tv_sec3 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 0, !dbg !20225, !ctir !2324
  %9 = load i64, i64* %tv_sec3, align 8, !dbg !20225, !tbaa !18952, !ctir !403
  %cmp4 = icmp sgt i64 %8, %9, !dbg !20226
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !20227

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !20228
  br label %return, !dbg !20228

if.end6:                                          ; preds = %if.end
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20229, !ctir !2324
  %10 = load i64, i64* %tv_nsec, align 8, !dbg !20229, !tbaa !18934, !ctir !405
  %cmp7 = icmp sle i64 -1, %10, !dbg !20229
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !20229

land.lhs.true:                                    ; preds = %if.end6
  %tv_nsec8 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20229, !ctir !2324
  %11 = load i64, i64* %tv_nsec8, align 8, !dbg !20229, !tbaa !18934, !ctir !405
  %cmp9 = icmp sle i64 %11, 2000000000, !dbg !20229
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !20229

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !20229

cond.false:                                       ; preds = %land.lhs.true, %if.end6
  unreachable, !dbg !20229

unreachable.cont:                                 ; No predecessors!
  br label %cond.end, !dbg !20229

cond.end:                                         ; preds = %unreachable.cont, %cond.true
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 1, !dbg !20230, !ctir !2324
  %12 = load i64, i64* %tv_nsec10, align 8, !dbg !20230, !tbaa !18934, !ctir !405
  %cmp11 = icmp sle i64 -1, %12, !dbg !20230
  br i1 %cmp11, label %land.lhs.true12, label %cond.false16, !dbg !20230

land.lhs.true12:                                  ; preds = %cond.end
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 1, !dbg !20230, !ctir !2324
  %13 = load i64, i64* %tv_nsec13, align 8, !dbg !20230, !tbaa !18934, !ctir !405
  %cmp14 = icmp sle i64 %13, 2000000000, !dbg !20230
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !20230

cond.true15:                                      ; preds = %land.lhs.true12
  br label %cond.end18, !dbg !20230

cond.false16:                                     ; preds = %land.lhs.true12, %cond.end
  unreachable, !dbg !20230

unreachable.cont17:                               ; No predecessors!
  br label %cond.end18, !dbg !20230

cond.end18:                                       ; preds = %unreachable.cont17, %cond.true15
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20231, !ctir !2324
  %14 = load i64, i64* %tv_nsec19, align 8, !dbg !20231, !tbaa !18934, !ctir !405
  %tv_nsec20 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 1, !dbg !20232, !ctir !2324
  %15 = load i64, i64* %tv_nsec20, align 8, !dbg !20232, !tbaa !18934, !ctir !405
  %sub = sub nsw i64 %14, %15, !dbg !20233
  %conv = trunc i64 %sub to i32, !dbg !20234
  store i32 %conv, i32* %retval, align 4, !dbg !20235
  br label %return, !dbg !20235

return:                                           ; preds = %cond.end18, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !20236
  ret i32 %16, !dbg !20236
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_sign(i64 %a.coerce0, i64 %a.coerce1) #9 !dbg !20237 !ctir !2330 {
entry:
  %a = alloca %struct.timespec, align 8, !ctir !2324
  %0 = bitcast %struct.timespec* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %a, metadata !20238, metadata !DIExpression()), !dbg !20239
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20240, !ctir !2324
  %3 = load i64, i64* %tv_sec, align 8, !dbg !20240, !tbaa !18952, !ctir !403
  %cmp = icmp slt i64 %3, 0, !dbg !20241
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20242

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !20242

cond.false:                                       ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20243, !ctir !2324
  %4 = load i64, i64* %tv_sec1, align 8, !dbg !20243, !tbaa !18952, !ctir !403
  %tobool = icmp ne i64 %4, 0, !dbg !20244
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !20245

lor.rhs:                                          ; preds = %cond.false
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20246, !ctir !2324
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !20246, !tbaa !18934, !ctir !405
  %tobool2 = icmp ne i64 %5, 0, !dbg !20245
  br label %lor.end, !dbg !20245

lor.end:                                          ; preds = %lor.rhs, %cond.false
  %6 = phi i1 [ true, %cond.false ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !20245
  br label %cond.end, !dbg !20242

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %lor.ext, %lor.end ], !dbg !20242
  ret i32 %cond, !dbg !20247
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timespectod(i64 %a.coerce0, i64 %a.coerce1) #4 !dbg !20248 !ctir !2332 {
entry:
  %a = alloca %struct.timespec, align 8, !ctir !2324
  %0 = bitcast %struct.timespec* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %a, metadata !20249, metadata !DIExpression()), !dbg !20250
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20251, !ctir !2324
  %3 = load i64, i64* %tv_sec, align 8, !dbg !20251, !tbaa !18952, !ctir !403
  %conv = sitofp i64 %3 to double, !dbg !20252
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20253, !ctir !2324
  %4 = load i64, i64* %tv_nsec, align 8, !dbg !20253, !tbaa !18934, !ctir !405
  %conv1 = sitofp i64 %4 to double, !dbg !20254
  %div = fdiv double %conv1, 1.000000e+09, !dbg !20255
  %add = fadd double %conv, %div, !dbg !20256
  ret double %add, !dbg !20257
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !20258 !ctir !1872 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2342
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20260, metadata !DIExpression()), !dbg !20261
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20262, !tbaa !2342
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !20263
  ret i32 %call, !dbg !20264
}

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!62, !800, !806, !863, !912, !998, !1469, !1528, !1537, !1005, !1542, !1566, !1571, !1576, !1581, !1598, !1621, !1152, !1630, !1158, !1203, !1635, !1742, !1762, !1855, !1862, !1869, !1874, !1338, !1938, !1953, !1956, !1963, !1968, !1980, !1995, !2005, !2010, !1350, !2055, !2102, !2147, !2164, !2178, !1366, !2185, !2201, !2204, !2208, !2253, !2262, !2265, !2267, !2312, !2316, !2319, !2334}
!llvm.ident = !{!2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336, !2336}
!llvm.module.flags = !{!2337, !2338, !2339, !2340}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !3)
!2 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!3 = !{!4, !6, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !26, !27, !28, !29, !33, !35, !37, !41, !44, !46, !48, !49, !50, !51, !55, !56}
!4 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1, file: !2, line: 242, baseType: !5, size: 32)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1, file: !2, line: 260, baseType: !20, size: 64, offset: 768)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !22)
!22 = !{!23, !24, !25}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21, file: !2, line: 157, baseType: !20, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21, file: !2, line: 158, baseType: !0, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1, file: !2, line: 262, baseType: !0, size: 64, offset: 832)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 131, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!32 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!34 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!36 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 1)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2, line: 150, baseType: null)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 132, baseType: !32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !53, line: 46, baseType: !54)
!53 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!54 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 160, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 20)
!60 = !DIGlobalVariableExpression(var: !61, expr: !DIExpression())
!61 = distinct !DIGlobalVariable(name: "hard_LC_COLLATE", scope: !62, file: !63, line: 160, type: !102, isLocal: true, isDefinition: true)
!62 = distinct !DICompileUnit(language: DW_LANG_C99, file: !63, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !64, retainedTypes: !79, globals: !702, nameTableKind: None)
!63 = !DIFile(filename: "src/sort.c", directory: "/home/mohamad/clone/coreutils")
!64 = !{!65, !71}
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blanktype", file: !63, line: 168, baseType: !66, size: 32, elements: !67)
!66 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "bl_start", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "bl_end", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "bl_both", value: 2, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !72, line: 26, baseType: !66, size: 32, elements: !73)
!72 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mohamad/clone/coreutils")
!73 = !{!74, !75, !76, !77, !78}
!74 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!79 = !{!47, !80, !66, !85, !7, !5, !34, !83, !0, !87, !89, !91, !92, !102, !8, !52, !115, !144, !154, !158, !246, !249, !88, !259, !262, !266, !268, !271, !274, !277, !54, !100, !280, !283, !284, !167, !302, !304, !313, !314, !315, !317, !318, !321, !323, !324, !331, !333, !335, !337, !293, !339, !341, !346, !348, !350, !352, !354, !355, !357, !359, !361, !363, !364, !366, !369, !370, !371, !372, !374, !376, !387, !410, !412, !414, !416, !418, !419, !421, !423, !426, !429, !432, !434, !435, !438, !440, !448, !450, !460, !462, !463, !465, !467, !469, !471, !474, !476, !477, !479, !480, !482, !484, !486, !487, !490, !505, !507, !508, !510, !512, !514, !516, !518, !520, !522, !524, !289, !526, !527, !529, !383, !381, !531, !533, !534, !536, !295, !537, !539, !541, !545, !547, !552, !556, !558, !560, !561, !563, !565, !567, !569, !570, !571, !573, !257, !575, !521, !577, !620, !622, !624, !30, !626, !628, !630, !634, !660, !662, !585, !664, !666, !667, !669, !670, !671, !673, !680, !682, !684, !687, !689, !691, !692, !694, !696, !698, !700}
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !81, line: 85, baseType: !82)
!81 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !5}
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!89 = !DISubroutineType(types: !90)
!90 = !{!5, !5, !91}
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyfield", file: !63, line: 199, size: 576, elements: !94)
!94 = !{!95, !96, !97, !98, !99, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "sword", scope: !93, file: !63, line: 201, baseType: !52, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "schar", scope: !93, file: !63, line: 202, baseType: !52, size: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "eword", scope: !93, file: !63, line: 203, baseType: !52, size: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "echar", scope: !93, file: !63, line: 204, baseType: !52, size: 64, offset: 192)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "ignore", scope: !93, file: !63, line: 205, baseType: !100, size: 64, offset: 256)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!102 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !93, file: !63, line: 206, baseType: !87, size: 64, offset: 320)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "skipsblanks", scope: !93, file: !63, line: 207, baseType: !102, size: 8, offset: 384)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "skipeblanks", scope: !93, file: !63, line: 208, baseType: !102, size: 8, offset: 392)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "numeric", scope: !93, file: !63, line: 209, baseType: !102, size: 8, offset: 400)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !93, file: !63, line: 212, baseType: !102, size: 8, offset: 408)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "general_numeric", scope: !93, file: !63, line: 213, baseType: !102, size: 8, offset: 416)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "human_numeric", scope: !93, file: !63, line: 215, baseType: !102, size: 8, offset: 424)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !93, file: !63, line: 217, baseType: !102, size: 8, offset: 432)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !93, file: !63, line: 218, baseType: !102, size: 8, offset: 440)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !93, file: !63, line: 219, baseType: !102, size: 8, offset: 448)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "traditional_used", scope: !93, file: !63, line: 220, baseType: !102, size: 8, offset: 456)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !93, file: !63, line: 221, baseType: !92, size: 64, offset: 512)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !118, line: 53, size: 768, elements: !119)
!118 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!119 = !{!120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !117, file: !118, line: 57, baseType: !7, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "thousands_sep", scope: !117, file: !118, line: 58, baseType: !7, size: 64, offset: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !117, file: !118, line: 64, baseType: !7, size: 64, offset: 128)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "int_curr_symbol", scope: !117, file: !118, line: 70, baseType: !7, size: 64, offset: 192)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "currency_symbol", scope: !117, file: !118, line: 71, baseType: !7, size: 64, offset: 256)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "mon_decimal_point", scope: !117, file: !118, line: 72, baseType: !7, size: 64, offset: 320)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "mon_thousands_sep", scope: !117, file: !118, line: 73, baseType: !7, size: 64, offset: 384)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "mon_grouping", scope: !117, file: !118, line: 74, baseType: !7, size: 64, offset: 448)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "positive_sign", scope: !117, file: !118, line: 75, baseType: !7, size: 64, offset: 512)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sign", scope: !117, file: !118, line: 76, baseType: !7, size: 64, offset: 576)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "int_frac_digits", scope: !117, file: !118, line: 77, baseType: !8, size: 8, offset: 640)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "frac_digits", scope: !117, file: !118, line: 78, baseType: !8, size: 8, offset: 648)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "p_cs_precedes", scope: !117, file: !118, line: 80, baseType: !8, size: 8, offset: 656)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "p_sep_by_space", scope: !117, file: !118, line: 82, baseType: !8, size: 8, offset: 664)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "n_cs_precedes", scope: !117, file: !118, line: 84, baseType: !8, size: 8, offset: 672)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "n_sep_by_space", scope: !117, file: !118, line: 86, baseType: !8, size: 8, offset: 680)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "p_sign_posn", scope: !117, file: !118, line: 93, baseType: !8, size: 8, offset: 688)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "n_sign_posn", scope: !117, file: !118, line: 94, baseType: !8, size: 8, offset: 696)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_cs_precedes", scope: !117, file: !118, line: 97, baseType: !8, size: 8, offset: 704)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sep_by_space", scope: !117, file: !118, line: 99, baseType: !8, size: 8, offset: 712)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_cs_precedes", scope: !117, file: !118, line: 101, baseType: !8, size: 8, offset: 720)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sep_by_space", scope: !117, file: !118, line: 103, baseType: !8, size: 8, offset: 728)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sign_posn", scope: !117, file: !118, line: 110, baseType: !8, size: 8, offset: 736)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sign_posn", scope: !117, file: !118, line: 111, baseType: !8, size: 8, offset: 744)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !145, line: 37, baseType: !146)
!145 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !147, line: 30, baseType: !148)
!147 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigset.h", directory: "")
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !147, line: 27, size: 1024, elements: !149)
!149 = !{!150}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !148, file: !147, line: 29, baseType: !151, size: 1024)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1024, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 16)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 352, elements: !156)
!155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!156 = !{!157}
!157 = !DISubrange(count: 11)
!158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !160, file: !159, line: 28, size: 64, elements: !169)
!159 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !159, line: 24, size: 1216, elements: !161)
!161 = !{!162, !163, !164, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !160, file: !159, line: 35, baseType: !158, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !160, file: !159, line: 43, baseType: !146, size: 1024, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !160, file: !159, line: 46, baseType: !5, size: 32, offset: 1088)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !160, file: !159, line: 49, baseType: !166, size: 64, offset: 1152)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{null}
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !158, file: !159, line: 31, baseType: !80, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !158, file: !159, line: 33, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DISubroutineType(types: !174)
!174 = !{null, !5, !175, !47}
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !177, line: 133, baseType: !178)
!177 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/siginfo.h", directory: "")
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !177, line: 62, size: 1024, elements: !179)
!179 = !{!180, !181, !182, !183}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !178, file: !177, line: 64, baseType: !5, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !178, file: !177, line: 65, baseType: !5, size: 32, offset: 32)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !178, file: !177, line: 67, baseType: !5, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !178, file: !177, line: 132, baseType: !184, size: 896, offset: 128)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !178, file: !177, line: 69, size: 896, elements: !185)
!185 = !{!186, !190, !197, !208, !214, !224, !235, !240}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !184, file: !177, line: 71, baseType: !187, size: 896)
!187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 896, elements: !188)
!188 = !{!189}
!189 = !DISubrange(count: 28)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !184, file: !177, line: 78, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 74, size: 64, elements: !192)
!192 = !{!193, !195}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !191, file: !177, line: 76, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !31, line: 133, baseType: !5)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !191, file: !177, line: 77, baseType: !196, size: 32, offset: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !31, line: 125, baseType: !66)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !184, file: !177, line: 86, baseType: !198, size: 128)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 81, size: 128, elements: !199)
!199 = !{!200, !201, !202}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !198, file: !177, line: 83, baseType: !5, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !198, file: !177, line: 84, baseType: !5, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !198, file: !177, line: 85, baseType: !203, size: 64, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !177, line: 36, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !177, line: 32, size: 64, elements: !205)
!205 = !{!206, !207}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !204, file: !177, line: 34, baseType: !5, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !204, file: !177, line: 35, baseType: !47, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !184, file: !177, line: 94, baseType: !209, size: 128)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 89, size: 128, elements: !210)
!210 = !{!211, !212, !213}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !209, file: !177, line: 91, baseType: !194, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !209, file: !177, line: 92, baseType: !196, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !209, file: !177, line: 93, baseType: !203, size: 64, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !184, file: !177, line: 104, baseType: !215, size: 256)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 97, size: 256, elements: !216)
!216 = !{!217, !218, !219, !220, !223}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !215, file: !177, line: 99, baseType: !194, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !215, file: !177, line: 100, baseType: !196, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !215, file: !177, line: 101, baseType: !5, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !215, file: !177, line: 102, baseType: !221, size: 64, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigchld_clock_t", file: !177, line: 58, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !31, line: 135, baseType: !32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !215, file: !177, line: 103, baseType: !221, size: 64, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !184, file: !177, line: 116, baseType: !225, size: 256)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 107, size: 256, elements: !226)
!226 = !{!227, !228, !230}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !225, file: !177, line: 109, baseType: !47, size: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !225, file: !177, line: 110, baseType: !229, size: 16, offset: 64)
!229 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_bnd", scope: !225, file: !177, line: 115, baseType: !231, size: 128, offset: 128)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !225, file: !177, line: 111, size: 128, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !231, file: !177, line: 113, baseType: !47, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !231, file: !177, line: 114, baseType: !47, size: 64, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !184, file: !177, line: 123, baseType: !236, size: 128)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 119, size: 128, elements: !237)
!237 = !{!238, !239}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !236, file: !177, line: 121, baseType: !32, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !236, file: !177, line: 122, baseType: !5, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !184, file: !177, line: 131, baseType: !241, size: 128)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !177, line: 126, size: 128, elements: !242)
!242 = !{!243, !244, !245}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !241, file: !177, line: 128, baseType: !47, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !241, file: !177, line: 129, baseType: !5, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !241, file: !177, line: 130, baseType: !66, size: 32, offset: 96)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 248, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 31)
!249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 7936, elements: !247)
!250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !252, line: 104, size: 256, elements: !253)
!252 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!253 = !{!254, !255, !256, !258}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !251, file: !252, line: 106, baseType: !87, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !251, file: !252, line: 109, baseType: !5, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !251, file: !252, line: 110, baseType: !257, size: 64, offset: 128)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !251, file: !252, line: 111, baseType: !5, size: 32, offset: 192)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 48, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 6)
!262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 448, elements: !264)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !87)
!264 = !{!265}
!265 = !DISubrange(count: 7)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !267, line: 61, baseType: !166)
!267 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 16, elements: !269)
!269 = !{!270}
!270 = !DISubrange(count: 2)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 24, elements: !272)
!272 = !{!273}
!273 = !DISubrange(count: 3)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 256, elements: !275)
!275 = !{!276}
!276 = !DISubrange(count: 4)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !1)
!279 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 80, elements: !281)
!281 = !{!282}
!282 = !DISubrange(count: 10)
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 24, elements: !272)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sortfile", file: !63, line: 667, size: 128, elements: !286)
!286 = !{!287, !288}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !285, file: !63, line: 670, baseType: !87, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !285, file: !63, line: 673, baseType: !289, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tempnode", file: !63, line: 656, size: 128, elements: !291)
!291 = !{!292, !294, !297, !298}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !290, file: !63, line: 658, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !289)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !290, file: !63, line: 659, baseType: !295, size: 32, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !296, line: 37, baseType: !194)
!296 = !DIFile(filename: "/usr/include/sched.h", directory: "")
!297 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !290, file: !63, line: 660, baseType: !8, size: 8, offset: 96)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !63, line: 661, baseType: !299, offset: 104)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: -1)
!302 = !DISubroutineType(types: !303)
!303 = !{null, !87}
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, size: 896, elements: !264)
!305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !308, file: !307, line: 633, size: 128, elements: !310)
!307 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!308 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !307, file: !307, line: 631, type: !302, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!309 = !{}
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !306, file: !307, line: 633, baseType: !87, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !306, file: !307, line: 633, baseType: !87, size: 64, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5)
!315 = !DISubroutineType(types: !316)
!316 = !{!317, !8}
!317 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 2048, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 256)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, elements: !319)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 1536, elements: !329)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "month", file: !63, line: 224, size: 128, elements: !326)
!326 = !{!327, !328}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !325, file: !63, line: 226, baseType: !87, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !325, file: !63, line: 227, baseType: !5, size: 32, offset: 64)
!329 = !{!330}
!330 = !DISubrange(count: 12)
!331 = !DISubroutineType(types: !332)
!332 = !{!102, !317}
!333 = !DISubroutineType(types: !334)
!334 = !{!5, !85, !85}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!339 = !DISubroutineType(types: !340)
!340 = !{null, !341}
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cs_status", file: !63, line: 625, size: 1088, elements: !343)
!343 = !{!344, !345}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !342, file: !63, line: 627, baseType: !102, size: 8)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "sigs", scope: !342, file: !63, line: 628, baseType: !144, size: 1024, offset: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{null, !348}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!350 = !DISubroutineType(types: !351)
!351 = !{!92, !92}
!352 = !DISubroutineType(types: !353)
!353 = !{!87, !87, !354, !87}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !356, line: 135, baseType: !54)
!356 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!357 = !DISubroutineType(types: !358)
!358 = !{!7, !87, !92, !65}
!359 = !DISubroutineType(types: !360)
!360 = !{null, !87, !87}
!361 = !DISubroutineType(types: !362)
!362 = !{null, !92}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!364 = !DISubroutineType(types: !365)
!365 = !{null, !5, !8, !87}
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !367, line: 131, baseType: !368)
!367 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "")
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !31, line: 136, baseType: !54)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 88, elements: !156)
!370 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!372 = !DISubroutineType(types: !373)
!373 = !{!52, !5, !8, !87}
!374 = !DISubroutineType(types: !375)
!375 = !{!277, !87, !87}
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !378, line: 46, size: 1152, elements: !379)
!378 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!379 = !{!380, !382, !384, !386, !388, !389, !391, !392, !393, !394, !396, !398, !406, !407, !408}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !377, file: !378, line: 48, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !31, line: 124, baseType: !54)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !377, file: !378, line: 53, baseType: !383, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !31, line: 127, baseType: !54)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !377, file: !378, line: 61, baseType: !385, size: 64, offset: 128)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !31, line: 130, baseType: !54)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !377, file: !378, line: 62, baseType: !387, size: 32, offset: 192)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !31, line: 129, baseType: !66)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !377, file: !378, line: 64, baseType: !196, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !377, file: !378, line: 65, baseType: !390, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !31, line: 126, baseType: !66)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !377, file: !378, line: 67, baseType: !5, size: 32, offset: 288)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !377, file: !378, line: 69, baseType: !381, size: 64, offset: 320)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !377, file: !378, line: 74, baseType: !30, size: 64, offset: 384)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !377, file: !378, line: 78, baseType: !395, size: 64, offset: 448)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !31, line: 153, baseType: !32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !377, file: !378, line: 80, baseType: !397, size: 64, offset: 512)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !31, line: 158, baseType: !32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !377, file: !378, line: 91, baseType: !399, size: 128, offset: 576)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !400, line: 120, size: 128, elements: !401)
!400 = !DIFile(filename: "/usr/include/time.h", directory: "")
!401 = !{!402, !404}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !399, file: !400, line: 122, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 139, baseType: !32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !399, file: !400, line: 123, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !31, line: 175, baseType: !32)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !377, file: !378, line: 92, baseType: !399, size: 128, offset: 704)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !377, file: !378, line: 93, baseType: !399, size: 128, offset: 832)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !377, file: !378, line: 106, baseType: !409, size: 192, offset: 960)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !405, size: 192, elements: !272)
!410 = !DISubroutineType(types: !411)
!411 = !{!376}
!412 = !DISubroutineType(types: !413)
!413 = !{null, !277, !87}
!414 = !DISubroutineType(types: !415)
!415 = !{!102, !416}
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 248, elements: !247)
!419 = !DISubroutineType(types: !420)
!420 = !{null, !416, !7}
!421 = !DISubroutineType(types: !422)
!422 = !{null, !416, !102}
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 168, elements: !424)
!424 = !{!425}
!425 = !DISubrange(count: 21)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 368, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 46)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 376, elements: !430)
!430 = !{!431}
!431 = !DISubrange(count: 47)
!432 = !DISubroutineType(types: !433)
!433 = !{!54, !355}
!434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !152)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !437, line: 25, flags: DIFlagFwdDecl)
!437 = !DIFile(filename: "./lib/randread.h", directory: "/home/mohamad/clone/coreutils")
!438 = !DISubroutineType(types: !439)
!439 = !{!102, !87, !8}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "line", file: !63, line: 174, size: 256, elements: !443)
!443 = !{!444, !445, !446, !447}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !442, file: !63, line: 176, baseType: !7, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !442, file: !63, line: 177, baseType: !52, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "keybeg", scope: !442, file: !63, line: 178, baseType: !7, size: 64, offset: 128)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "keylim", scope: !442, file: !63, line: 179, baseType: !7, size: 64, offset: 192)
!448 = !DISubroutineType(types: !449)
!449 = !{null, !450, !52, !52}
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buffer", file: !63, line: 183, size: 448, elements: !452)
!452 = !{!453, !454, !455, !456, !457, !458, !459}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !451, file: !63, line: 185, baseType: !7, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !451, file: !63, line: 190, baseType: !52, size: 64, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !451, file: !63, line: 191, baseType: !52, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !451, file: !63, line: 192, baseType: !52, size: 64, offset: 192)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !451, file: !63, line: 193, baseType: !52, size: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "line_bytes", scope: !451, file: !63, line: 194, baseType: !52, size: 64, offset: 320)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !451, file: !63, line: 195, baseType: !102, size: 8, offset: 384)
!460 = !DISubroutineType(types: !461)
!461 = !{!102, !450, !277, !87}
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!7, !440, !416}
!465 = !DISubroutineType(types: !466)
!466 = !{!462, !467}
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!469 = !DISubroutineType(types: !470)
!470 = !{!5, !440, !440}
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32000, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 4000)
!474 = !DISubroutineType(types: !475)
!475 = !{!5, !87, !87}
!476 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!477 = !DISubroutineType(types: !478)
!478 = !{!5, !87}
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 2048, elements: !319)
!480 = !DISubroutineType(types: !481)
!481 = !{!317, !371}
!482 = !DISubroutineType(types: !483)
!483 = !{!5, !87, !91}
!484 = !DISubroutineType(types: !485)
!485 = !{!5, !486, !52, !486, !52}
!486 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !7)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 256, elements: !489)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !356, line: 51, baseType: !66)
!489 = !{!270, !276}
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 2496, elements: !269)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "md5_ctx", file: !492, line: 69, size: 1248, elements: !493)
!492 = !DIFile(filename: "./lib/md5.h", directory: "/home/mohamad/clone/coreutils")
!493 = !{!494, !495, !496, !497, !498, !500, !501}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !491, file: !492, line: 71, baseType: !488, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !491, file: !492, line: 72, baseType: !488, size: 32, offset: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !491, file: !492, line: 73, baseType: !488, size: 32, offset: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !491, file: !492, line: 74, baseType: !488, size: 32, offset: 96)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !491, file: !492, line: 76, baseType: !499, size: 64, offset: 128)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 64, elements: !269)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !491, file: !492, line: 77, baseType: !488, size: 32, offset: 192)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !491, file: !492, line: 78, baseType: !502, size: 1024, offset: 224)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 1024, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 32)
!505 = !DISubroutineType(types: !506)
!506 = !{!52, !486, !507, !52}
!507 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !87)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !440, !277, !87}
!510 = !DISubroutineType(types: !511)
!511 = !{null, !440}
!512 = !DISubroutineType(types: !513)
!513 = !{null, !440, !416}
!514 = !DISubroutineType(types: !515)
!515 = !{!52, !87, !87}
!516 = !DISubroutineType(types: !517)
!517 = !{null, !52, !52}
!518 = !DISubroutineType(types: !519)
!519 = !{null, !520, !52}
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!522 = !DISubroutineType(types: !523)
!523 = !{null, !5, !5}
!524 = !DISubroutineType(types: !525)
!525 = !{null, !284, !52, !52, !87}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!289, !526}
!529 = !DISubroutineType(types: !530)
!530 = !{!52, !284, !52, !52, !277, !87}
!531 = !DISubroutineType(types: !532)
!532 = !{!52, !284, !52, !533}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{!277, !289}
!536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !269)
!537 = !DISubroutineType(types: !538)
!538 = !{null, !295}
!539 = !DISubroutineType(types: !540)
!540 = !{!102, !295}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !543, line: 69, baseType: !544)
!543 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !543, line: 67, flags: DIFlagFwdDecl)
!545 = !DISubroutineType(types: !546)
!546 = !{!295, !295}
!547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !548, file: !63, line: 719, size: 32, elements: !549)
!548 = distinct !DISubprogram(name: "reap", scope: !63, file: !63, line: 709, type: !545, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !547, file: !63, line: 719, baseType: !5, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !547, file: !63, line: 719, baseType: !5, size: 32)
!552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !548, file: !63, line: 719, size: 32, elements: !553)
!553 = !{!554, !555}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !552, file: !63, line: 719, baseType: !5, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !552, file: !63, line: 719, baseType: !5, size: 32)
!556 = !DISubroutineType(types: !557)
!557 = !{!295, !257, !52}
!558 = !DISubroutineType(types: !559)
!559 = !{null, !5, !87}
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !329)
!561 = !DISubroutineType(types: !562)
!562 = !{null, !289}
!563 = !DISubroutineType(types: !564)
!564 = !{!52, !85, !52}
!565 = !DISubroutineType(types: !566)
!566 = !{!102, !85, !85}
!567 = !DISubroutineType(types: !568)
!568 = !{null, !284, !52, !52, !277, !87, !526}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!289, !526, !102}
!573 = !DISubroutineType(types: !574)
!574 = !{!289, !257, !102}
!575 = !DISubroutineType(types: !576)
!576 = !{null, !520, !52, !87, !52}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "merge_node", file: !63, line: 231, size: 1024, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !586, !587, !588, !589, !590, !591, !592, !593}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !578, file: !63, line: 233, baseType: !462, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "hi", scope: !578, file: !63, line: 234, baseType: !462, size: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "end_lo", scope: !578, file: !63, line: 235, baseType: !462, size: 64, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "end_hi", scope: !578, file: !63, line: 236, baseType: !462, size: 64, offset: 192)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !578, file: !63, line: 237, baseType: !585, size: 64, offset: 256)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "nlo", scope: !578, file: !63, line: 238, baseType: !52, size: 64, offset: 320)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "nhi", scope: !578, file: !63, line: 239, baseType: !52, size: 64, offset: 384)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !578, file: !63, line: 240, baseType: !577, size: 64, offset: 448)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "lo_child", scope: !578, file: !63, line: 241, baseType: !577, size: 64, offset: 512)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "hi_child", scope: !578, file: !63, line: 242, baseType: !577, size: 64, offset: 576)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !578, file: !63, line: 243, baseType: !66, size: 32, offset: 640)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !578, file: !63, line: 244, baseType: !102, size: 8, offset: 672)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !578, file: !63, line: 245, baseType: !594, size: 320, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !595, line: 128, baseType: !596)
!595 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "")
!596 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !595, line: 90, size: 320, elements: !597)
!597 = !{!598, !615, !619}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !596, file: !595, line: 125, baseType: !599, size: 320)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !595, line: 92, size: 320, elements: !600)
!600 = !{!601, !602, !603, !604, !605, !606, !607, !608}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !599, file: !595, line: 94, baseType: !5, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !599, file: !595, line: 95, baseType: !66, size: 32, offset: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !599, file: !595, line: 96, baseType: !5, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !599, file: !595, line: 98, baseType: !66, size: 32, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !599, file: !595, line: 102, baseType: !5, size: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !599, file: !595, line: 104, baseType: !229, size: 16, offset: 160)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !599, file: !595, line: 105, baseType: !229, size: 16, offset: 176)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !599, file: !595, line: 106, baseType: !609, size: 128, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !595, line: 79, baseType: !610)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !595, line: 75, size: 128, elements: !611)
!611 = !{!612, !614}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !610, file: !595, line: 77, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !610, file: !595, line: 78, baseType: !613, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !596, file: !595, line: 126, baseType: !616, size: 320)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 320, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 40)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !596, file: !595, line: 127, baseType: !32, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!52, !622, !52, !520, !52, !52}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !625, line: 86, baseType: !30)
!625 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!626 = !DISubroutineType(types: !627)
!627 = !{!52}
!628 = !DISubroutineType(types: !629)
!629 = !{null, !630, !52}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "merge_node_queue", file: !63, line: 249, size: 768, elements: !632)
!632 = !{!633, !637, !638}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "priority_queue", scope: !631, file: !63, line: 251, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "heap", file: !636, line: 23, flags: DIFlagFwdDecl)
!636 = !DIFile(filename: "./lib/heap.h", directory: "/home/mohamad/clone/coreutils")
!637 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !631, file: !63, line: 252, baseType: !594, size: 320, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !631, file: !63, line: 253, baseType: !639, size: 384, offset: 384)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !595, line: 154, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !595, line: 139, size: 384, elements: !641)
!641 = !{!642, !654, !658}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !640, file: !595, line: 151, baseType: !643, size: 384)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !595, line: 141, size: 384, elements: !644)
!644 = !{!645, !646, !647, !649, !650, !651, !652, !653}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !643, file: !595, line: 143, baseType: !5, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "__futex", scope: !643, file: !595, line: 144, baseType: !66, size: 32, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "__total_seq", scope: !643, file: !595, line: 145, baseType: !648, size: 64, offset: 64)
!648 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "__wakeup_seq", scope: !643, file: !595, line: 146, baseType: !648, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "__woken_seq", scope: !643, file: !595, line: 147, baseType: !648, size: 64, offset: 192)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "__mutex", scope: !643, file: !595, line: 148, baseType: !47, size: 64, offset: 256)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "__nwaiters", scope: !643, file: !595, line: 149, baseType: !66, size: 32, offset: 320)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "__broadcast_seq", scope: !643, file: !595, line: 150, baseType: !66, size: 32, offset: 352)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !640, file: !595, line: 152, baseType: !655, size: 384)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 384, elements: !656)
!656 = !{!657}
!657 = !DISubrange(count: 48)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !640, file: !595, line: 153, baseType: !659, size: 64)
!659 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !578)
!662 = !DISubroutineType(types: !663)
!663 = !{!577, !52, !52, !462}
!664 = !DISubroutineType(types: !665)
!665 = !{!577, !666, !666, !462, !52, !52, !102}
!666 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !577)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !669, !52, !52, !577, !630, !277, !87}
!669 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !462)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !595, line: 60, baseType: !54)
!671 = !DISubroutineType(types: !672)
!672 = !{!47, !47}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_args", file: !63, line: 3580, size: 448, elements: !676)
!676 = !{!677, !678, !679, !681, !683, !685, !686}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !675, file: !63, line: 3584, baseType: !462, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "nthreads", scope: !675, file: !63, line: 3587, baseType: !52, size: 64, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "total_lines", scope: !675, file: !63, line: 3590, baseType: !680, size: 64, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !675, file: !63, line: 3594, baseType: !682, size: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !675, file: !63, line: 3598, baseType: !684, size: 64, offset: 256)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "tfp", scope: !675, file: !63, line: 3602, baseType: !277, size: 64, offset: 320)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "output_temp", scope: !675, file: !63, line: 3603, baseType: !87, size: 64, offset: 384)
!687 = !DISubroutineType(types: !688)
!688 = !{null, !669, !52, !669, !102}
!689 = !DISubroutineType(types: !690)
!690 = !{null, !669, !52, !691}
!691 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !440)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !630, !577}
!694 = !DISubroutineType(types: !695)
!695 = !{null, !630, !52, !277, !87}
!696 = !DISubroutineType(types: !697)
!697 = !{!577, !630}
!698 = !DISubroutineType(types: !699)
!699 = !{null, !577}
!700 = !DISubroutineType(types: !701)
!701 = !{null, !666, !52, !277, !87}
!702 = !{!703, !706, !708, !710, !712, !60, !714, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768, !771, !773, !775, !777, !779, !781, !783, !785, !787, !791, !793, !796}
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "sig", scope: !705, file: !63, line: 4252, type: !154, isLocal: true, isDefinition: true)
!705 = distinct !DISubprogram(name: "main", scope: !63, file: !63, line: 4194, type: !89, scopeLine: 4195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !309)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "opts", scope: !705, file: !63, line: 4672, type: !280, isLocal: true, isDefinition: true)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "opts", scope: !705, file: !63, line: 4728, type: !283, isLocal: true, isDefinition: true)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "decimal_point", scope: !62, file: !63, line: 154, type: !5, isLocal: true, isDefinition: true)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "thousands_sep", scope: !62, file: !63, line: 157, type: !5, isLocal: true, isDefinition: true)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "hard_LC_TIME", scope: !62, file: !63, line: 162, type: !102, isLocal: true, isDefinition: true)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "sort_size", scope: !62, file: !63, line: 314, type: !52, isLocal: true, isDefinition: true)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "temp_dir_count", scope: !62, file: !63, line: 327, type: !52, isLocal: true, isDefinition: true)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "reverse", scope: !62, file: !63, line: 333, type: !102, isLocal: true, isDefinition: true)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "stable", scope: !62, file: !63, line: 338, type: !102, isLocal: true, isDefinition: true)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "unique", scope: !62, file: !63, line: 350, type: !102, isLocal: true, isDefinition: true)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "have_read_stdin", scope: !62, file: !63, line: 353, type: !102, isLocal: true, isDefinition: true)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "keylist", scope: !62, file: !63, line: 356, type: !92, isLocal: true, isDefinition: true)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "compress_program", scope: !62, file: !63, line: 359, type: !87, isLocal: true, isDefinition: true)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "debug", scope: !62, file: !63, line: 362, type: !102, isLocal: true, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "caught_signals", scope: !62, file: !63, line: 622, type: !144, isLocal: true, isDefinition: true)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "blanks", scope: !62, file: !63, line: 267, type: !318, isLocal: true, isDefinition: true)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "nonprinting", scope: !62, file: !63, line: 270, type: !318, isLocal: true, isDefinition: true)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "nondictionary", scope: !62, file: !63, line: 273, type: !318, isLocal: true, isDefinition: true)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "fold_toupper", scope: !62, file: !63, line: 276, type: !323, isLocal: true, isDefinition: true)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "monthtab", scope: !62, file: !63, line: 282, type: !324, isLocal: true, isDefinition: true)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "temphead", scope: !62, file: !63, line: 663, type: !293, isLocal: true, isDefinition: true)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "short_options", scope: !62, file: !63, line: 545, type: !246, isLocal: true, isDefinition: true)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "long_options", scope: !62, file: !63, line: 547, type: !249, isLocal: true, isDefinition: true)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "sort_types", scope: !62, file: !63, line: 614, type: !259, isLocal: true, isDefinition: true)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "sort_args", scope: !62, file: !63, line: 608, type: !262, isLocal: true, isDefinition: true)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "check_types", scope: !62, file: !63, line: 593, type: !271, isLocal: true, isDefinition: true)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "check_args", scope: !62, file: !63, line: 587, type: !274, isLocal: true, isDefinition: true)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "tab", scope: !62, file: !63, line: 346, type: !5, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "temp_dir_alloc", scope: !62, file: !63, line: 330, type: !52, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "temp_dirs", scope: !62, file: !63, line: 324, type: !371, isLocal: true, isDefinition: true)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "eolchar", scope: !62, file: !63, line: 171, type: !8, isLocal: true, isDefinition: true)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "outstat_errno", scope: !770, file: !63, line: 890, type: !5, isLocal: true, isDefinition: true)
!770 = distinct !DISubprogram(name: "get_outstatus", scope: !63, file: !63, line: 888, type: !410, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "outstat", scope: !770, file: !63, line: 891, type: !377, isLocal: true, isDefinition: true)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "random_md5_state", scope: !62, file: !63, line: 2089, type: !491, isLocal: true, isDefinition: true)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "nmerge", scope: !62, file: !63, line: 366, type: !66, isLocal: true, isDefinition: true)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "merge_buffer_size", scope: !62, file: !63, line: 310, type: !52, isLocal: true, isDefinition: true)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "unit_order", scope: !62, file: !63, line: 1873, type: !479, isLocal: true, isDefinition: true)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "proctab", scope: !62, file: !63, line: 677, type: !541, isLocal: true, isDefinition: true)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "nprocs", scope: !62, file: !63, line: 697, type: !295, isLocal: true, isDefinition: true)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "temptail", scope: !62, file: !63, line: 664, type: !570, isLocal: true, isDefinition: true)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "slashbase", scope: !789, file: !63, line: 843, type: !790, isLocal: true, isDefinition: true)
!789 = distinct !DISubprogram(name: "create_temp_file", scope: !63, file: !63, line: 841, type: !573, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 96, elements: !329)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "temp_dir_index", scope: !789, file: !63, line: 844, type: !52, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "size_bound", scope: !795, file: !63, line: 1519, type: !52, isLocal: true, isDefinition: true)
!795 = distinct !DISubprogram(name: "sort_buffer_size", scope: !63, file: !63, line: 1513, type: !620, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "saved_line", scope: !62, file: !63, line: 258, type: !442, isLocal: true, isDefinition: true)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "Version", scope: !800, file: !801, line: 2, type: !87, isLocal: false, isDefinition: true)
!800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !801, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !802, globals: !803, nameTableKind: None)
!801 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!802 = !{!87}
!803 = !{!798}
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !806, file: !860, line: 67, type: !266, isLocal: false, isDefinition: true)
!806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !807, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !808, globals: !859, nameTableKind: None)
!807 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!808 = !{!47, !87, !266, !809, !811, !812, !85, !52, !102, !813, !815, !817, !855, !857, !167}
!809 = !DISubroutineType(types: !810)
!810 = !{!811, !87, !812, !85, !52}
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !53, line: 35, baseType: !32)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{null, !87, !87, !811}
!815 = !DISubroutineType(types: !816)
!816 = !{null, !812, !85, !52}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !818, file: !2, line: 242, baseType: !5, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !818, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !818, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !818, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !818, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !818, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !818, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !818, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !818, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !818, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !818, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !818, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !818, file: !2, line: 260, baseType: !833, size: 64, offset: 768)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !835)
!835 = !{!836, !837, !838}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !834, file: !2, line: 157, baseType: !833, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !834, file: !2, line: 158, baseType: !817, size: 64, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !834, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !818, file: !2, line: 262, baseType: !817, size: 64, offset: 832)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !818, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !818, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !818, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !818, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !818, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !818, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !818, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !818, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !818, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !818, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !818, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !818, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !818, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !818, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !818, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!855 = !DISubroutineType(types: !856)
!856 = !{!811, !87, !87, !812, !85, !52, !266}
!857 = !DISubroutineType(types: !858)
!858 = !{!87, !85, !812, !85, !52}
!859 = !{!804}
!860 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "file_name", scope: !863, file: !909, line: 46, type: !87, isLocal: true, isDefinition: true)
!863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !864, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !865, globals: !906, nameTableKind: None)
!864 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!865 = !{!302, !87, !866, !102, !167, !868, !5, !314}
!866 = !DISubroutineType(types: !867)
!867 = !{null, !102}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !870)
!870 = !{!871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !869, file: !2, line: 242, baseType: !5, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !869, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !869, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !869, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !869, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !869, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !869, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !869, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !869, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !869, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !869, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !869, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !869, file: !2, line: 260, baseType: !884, size: 64, offset: 768)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !885, file: !2, line: 157, baseType: !884, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !885, file: !2, line: 158, baseType: !868, size: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !885, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !869, file: !2, line: 262, baseType: !868, size: 64, offset: 832)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !869, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !869, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !869, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !869, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !869, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !869, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !869, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !869, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !869, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !869, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !869, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !869, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !869, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !869, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !869, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!906 = !{!861, !907}
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !863, file: !909, line: 56, type: !102, isLocal: true, isDefinition: true)
!909 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "fillbuf", scope: !912, file: !995, line: 70, type: !934, isLocal: true, isDefinition: true)
!912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !913, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !914, globals: !994, nameTableKind: None)
!913 = !DIFile(filename: "./lib/md5.c", directory: "/home/mohamad/clone/coreutils")
!914 = !{!7, !87, !915, !916, !918, !488, !499, !928, !47, !930, !932, !52, !502, !934, !938, !5, !940, !980, !982, !85, !984, !985, !987, !986, !988, !990, !992}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !356, line: 122, baseType: !54)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !918}
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "md5_ctx", file: !492, line: 69, size: 1248, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !919, file: !492, line: 71, baseType: !488, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !919, file: !492, line: 72, baseType: !488, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !919, file: !492, line: 73, baseType: !488, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !919, file: !492, line: 74, baseType: !488, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !919, file: !492, line: 76, baseType: !499, size: 64, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !919, file: !492, line: 77, baseType: !488, size: 32, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !919, file: !492, line: 78, baseType: !502, size: 1024, offset: 224)
!928 = !DISubroutineType(types: !929)
!929 = !{!47, !930, !47}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!932 = !DISubroutineType(types: !933)
!933 = !{!47, !918, !47}
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 512, elements: !936)
!935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!936 = !{!937}
!937 = !DISubrange(count: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!5, !940, !47}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !942, file: !2, line: 242, baseType: !5, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !942, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !942, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !942, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !942, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !942, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !942, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !942, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !942, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !942, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !942, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !942, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !942, file: !2, line: 260, baseType: !957, size: 64, offset: 768)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !959)
!959 = !{!960, !961, !963}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !958, file: !2, line: 157, baseType: !957, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !958, file: !2, line: 158, baseType: !962, size: 64, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !958, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !942, file: !2, line: 262, baseType: !962, size: 64, offset: 832)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !942, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !942, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !942, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !942, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !942, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !942, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !942, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !942, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !942, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !942, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !942, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !942, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !942, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !942, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !942, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!980 = !DISubroutineType(types: !981)
!981 = !{!47, !87, !52, !47}
!982 = !DISubroutineType(types: !983)
!983 = !{null, !85, !52, !918}
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 512, elements: !152)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{null, !7, !488}
!990 = !DISubroutineType(types: !991)
!991 = !{!5, !940, !87, !47, !992}
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !279, line: 102, baseType: !993)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 172, baseType: !32)
!994 = !{!910}
!995 = !DIFile(filename: "lib/md5.c", directory: "/home/mohamad/clone/coreutils")
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "exit_failure", scope: !998, file: !1002, line: 24, type: !314, isLocal: false, isDefinition: true)
!998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !999, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1000, globals: !1001, nameTableKind: None)
!999 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!1000 = !{!314}
!1001 = !{!996}
!1002 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "default_tuning", scope: !1005, file: !1014, line: 130, type: !1030, isLocal: true, isDefinition: true)
!1005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1006, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1007, globals: !1145, nameTableKind: None)
!1006 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!1007 = !{!54, !47, !52, !1008, !1010, !1011, !1023, !1017, !1052, !102, !1054, !1056, !1096, !85, !1044, !1098, !1100, !1102, !1103, !1105, !1109, !87, !317, !88, !1111, !1113, !1030, !1114, !1116, !1029, !1041, !1047, !1012, !1117, !1119, !1121, !5, !1123, !1035, !1124, !1126, !563, !565, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !1143}
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!52, !1010}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !543, line: 69, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1014, line: 52, size: 640, elements: !1015)
!1014 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!1015 = !{!1016, !1022, !1025, !1026, !1027, !1028, !1040, !1043, !1046, !1051}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !1013, file: !1014, line: 57, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !1014, line: 46, size: 128, elements: !1019)
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1018, file: !1014, line: 48, baseType: !47, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1018, file: !1014, line: 49, baseType: !1017, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !1013, file: !1014, line: 58, baseType: !1023, size: 64, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !1013, file: !1014, line: 59, baseType: !52, size: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !1013, file: !1014, line: 60, baseType: !52, size: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !1013, file: !1014, line: 61, baseType: !52, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !1013, file: !1014, line: 64, baseType: !1029, size: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !543, line: 65, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !543, line: 53, size: 160, elements: !1033)
!1033 = !{!1034, !1036, !1037, !1038, !1039}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !1032, file: !543, line: 58, baseType: !1035, size: 32)
!1035 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !1032, file: !543, line: 59, baseType: !1035, size: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !1032, file: !543, line: 60, baseType: !1035, size: 32, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !1032, file: !543, line: 61, baseType: !1035, size: 32, offset: 96)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !1032, file: !543, line: 62, baseType: !102, size: 8, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !1013, file: !1014, line: 71, baseType: !1041, size: 64, offset: 384)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !543, line: 48, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !1013, file: !1014, line: 72, baseType: !1044, size: 64, offset: 448)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !543, line: 49, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !1013, file: !1014, line: 73, baseType: !1047, size: 64, offset: 512)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !543, line: 50, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !47}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !1013, file: !1014, line: 76, baseType: !1017, size: 64, offset: 576)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!102, !1010}
!1054 = !DISubroutineType(types: !1055)
!1055 = !{null, !1010, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1058, file: !2, line: 242, baseType: !5, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1058, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1058, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1058, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1058, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1058, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1058, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1058, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1058, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1058, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1058, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1058, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1058, file: !2, line: 260, baseType: !1073, size: 64, offset: 768)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1075)
!1075 = !{!1076, !1077, !1079}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1074, file: !2, line: 157, baseType: !1073, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1074, file: !2, line: 158, baseType: !1078, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1074, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1058, file: !2, line: 262, baseType: !1078, size: 64, offset: 832)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1058, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1058, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1058, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1058, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1058, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1058, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1058, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1058, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1058, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1058, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1058, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1058, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1058, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1058, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1058, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!47, !1010, !85}
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!47, !1010}
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!52, !1010, !1102, !52}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!52, !1010, !1105, !47}
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !543, line: 51, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!102, !47, !47}
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!52, !87, !52}
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!1116, !52, !1029, !1041, !1044, !1047}
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{null, !1116}
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!102, !1116, !52}
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!5, !1116, !85, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!47, !1116, !85}
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1017, !1010, !85}
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!102, !1116}
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!52, !52, !1029}
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!52, !52}
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!102, !52}
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!102, !1116, !1116, !102}
!1138 = !DISubroutineType(types: !1139)
!1139 = !{null, !1116, !1017}
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!47, !1116, !85, !1142, !102}
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!1017, !1116}
!1145 = !{!1003}
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "have_pipe2_really", scope: !1148, file: !1149, line: 55, type: !5, isLocal: true, isDefinition: true)
!1148 = distinct !DISubprogram(name: "rpl_pipe2", scope: !1149, file: !1149, line: 40, type: !1150, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1152, retainedNodes: !309)
!1149 = !DIFile(filename: "lib/pipe2.c", directory: "/home/mohamad/clone/coreutils")
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!5, !257, !5}
!1152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1153, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1154, globals: !1155, nameTableKind: None)
!1153 = !DIFile(filename: "./lib/pipe2.c", directory: "/home/mohamad/clone/coreutils")
!1154 = !{!1150, !5, !536}
!1155 = !{!1146}
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "program_name", scope: !1158, file: !1200, line: 33, type: !87, isLocal: false, isDefinition: true)
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1159, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1160, globals: !1199, nameTableKind: None)
!1159 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1160 = !{!47, !7, !87, !302, !1161}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1162, file: !2, line: 242, baseType: !5, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1162, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1162, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1162, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1162, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1162, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1162, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1162, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1162, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1162, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1162, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1162, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1162, file: !2, line: 260, baseType: !1177, size: 64, offset: 768)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1179)
!1179 = !{!1180, !1181, !1182}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1178, file: !2, line: 157, baseType: !1177, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1178, file: !2, line: 158, baseType: !1161, size: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1178, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1162, file: !2, line: 262, baseType: !1161, size: 64, offset: 832)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1162, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1162, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1162, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1162, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1162, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1162, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1162, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1162, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1162, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1162, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1162, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1162, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1162, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1162, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1162, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1199 = !{!1156}
!1200 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1203, file: !1228, line: 85, type: !1221, isLocal: false, isDefinition: true)
!1203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1204, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1205, retainedTypes: !1220, globals: !1321, nameTableKind: None)
!1204 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1205 = !{!1206}
!1206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !1207, line: 32, baseType: !66, size: 32, elements: !1208)
!1207 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!1208 = !{!1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219}
!1209 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!1210 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!1211 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!1212 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!1213 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!1214 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!1215 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!1216 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!1217 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!1218 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!1219 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!1220 = !{!5, !34, !52, !1221, !1222, !1224, !1226, !1238, !1240, !1242, !1244, !8, !317, !1246, !66, !1247, !1249, !87, !1251, !7, !1253, !1255, !354, !167, !1257, !323, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !102, !88, !321, !1302, !1314, !1315, !1317, !1319}
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 704, elements: !156)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, size: 320, elements: !281)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!1226, !1226}
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1228, line: 65, size: 448, elements: !1229)
!1228 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1229 = !{!1230, !1231, !1232, !1236, !1237}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1227, file: !1228, line: 68, baseType: !1206, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1227, file: !1228, line: 71, baseType: !5, size: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1227, file: !1228, line: 75, baseType: !1233, size: 256, offset: 64)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 256, elements: !1234)
!1234 = !{!1235}
!1235 = !DISubrange(count: 8)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1227, file: !1228, line: 78, baseType: !87, size: 64, offset: 320)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1227, file: !1228, line: 81, baseType: !87, size: 64, offset: 384)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!1206, !1240}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1227)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{null, !1226, !1206}
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!5, !1226, !8, !5}
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!5, !1226, !5}
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1226, !87, !87}
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!52, !7, !52, !87, !52, !1240}
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!7, !87, !52, !1240}
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!7, !87, !52, !354, !1240}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1228, line: 834, size: 128, elements: !1259)
!1259 = !{!1260, !1261}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1258, file: !1228, line: 836, baseType: !52, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1258, file: !1228, line: 837, baseType: !7, size: 64, offset: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!7, !5, !87}
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!7, !5, !87, !52}
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!7, !87}
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!7, !87, !52}
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!7, !5, !1206, !87}
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!7, !5, !1206, !87, !52}
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!7, !1206, !87}
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!7, !1206, !87, !52}
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!7, !87, !52, !8}
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!7, !87, !8}
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!7, !5, !87, !87, !87}
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!7, !5, !87, !87, !87, !52}
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!7, !87, !87, !87}
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!7, !87, !87, !87, !52}
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!87, !5, !87, !52}
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!87, !87, !52}
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!87, !5, !87}
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!87, !87}
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!52, !7, !52, !87, !52, !1206, !5, !1300, !87, !87}
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !66)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1303, line: 106, baseType: !1304)
!1303 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1303, line: 94, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1303, line: 82, size: 64, elements: !1306)
!1306 = !{!1307, !1308}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1305, file: !1303, line: 84, baseType: !5, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1305, file: !1303, line: 93, baseType: !1309, size: 32, offset: 32)
!1309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1305, file: !1303, line: 85, size: 32, elements: !1310)
!1310 = !{!1311, !1312}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1309, file: !1303, line: 88, baseType: !66, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1309, file: !1303, line: 92, baseType: !1313, size: 32)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !275)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !53, line: 74, baseType: !5)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!87, !87, !1206}
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!7, !5, !87, !52, !1240}
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!1227, !1206}
!1321 = !{!1201, !1322, !1324, !1326, !1328, !1330, !1332, !1334}
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1203, file: !1228, line: 101, type: !1222, isLocal: false, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1203, file: !1228, line: 1052, type: !1227, isLocal: false, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1203, file: !1228, line: 116, type: !1227, isLocal: true, isDefinition: true)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "slot0", scope: !1203, file: !1228, line: 842, type: !323, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "slotvec", scope: !1203, file: !1228, line: 845, type: !1257, isLocal: true, isDefinition: true)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "nslots", scope: !1203, file: !1228, line: 843, type: !5, isLocal: true, isDefinition: true)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1203, file: !1228, line: 844, type: !1258, isLocal: true, isDefinition: true)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1338, file: !1343, line: 26, type: !1341, isLocal: false, isDefinition: true)
!1338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1339, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1340, globals: !1342, nameTableKind: None)
!1339 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1340 = !{!1341}
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 376, elements: !430)
!1342 = !{!1336}
!1343 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1346, file: !1347, line: 507, type: !5, isLocal: true, isDefinition: true)
!1346 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1347, file: !1347, line: 488, type: !1348, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1350, retainedNodes: !309)
!1347 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!5, !5, !5}
!1350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1351, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1352, globals: !1363, nameTableKind: None)
!1351 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1352 = !{!1348, !5, !1353, !47}
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1354, line: 14, baseType: !1355)
!1354 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1351, line: 208, baseType: !1356)
!1356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 192, elements: !39)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1351, line: 208, size: 192, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1357, file: !1351, line: 208, baseType: !66, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1357, file: !1351, line: 208, baseType: !66, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1357, file: !1351, line: 208, baseType: !47, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1357, file: !1351, line: 208, baseType: !47, size: 64, offset: 128)
!1363 = !{!1344}
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !1366, file: !1468, line: 351, type: !166, isLocal: false, isDefinition: true)
!1366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1367, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1368, globals: !1467, nameTableKind: None)
!1367 = !DIFile(filename: "./lib/obstack.c", directory: "/home/mohamad/clone/coreutils")
!1368 = !{!7, !47, !1369, !5, !1371, !52, !1396, !1048, !1393, !1404, !1415, !1400, !1408, !1417, !1377, !166, !1419, !1421, !1423, !1425, !1427, !167, !1429, !314}
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!5, !1371, !52, !52, !1396, !1048}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1373, line: 174, size: 704, elements: !1374)
!1373 = !DIFile(filename: "./lib/obstack.h", directory: "/home/mohamad/clone/coreutils")
!1374 = !{!1375, !1376, !1383, !1384, !1385, !1386, !1391, !1392, !1403, !1411, !1412, !1413, !1414}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1372, file: !1373, line: 176, baseType: !52, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1372, file: !1373, line: 177, baseType: !1377, size: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1373, line: 167, size: 128, elements: !1379)
!1379 = !{!1380, !1381, !1382}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1378, file: !1373, line: 169, baseType: !7, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1378, file: !1373, line: 170, baseType: !1377, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1378, file: !1373, line: 171, baseType: !299, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1372, file: !1373, line: 178, baseType: !7, size: 64, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1372, file: !1373, line: 179, baseType: !7, size: 64, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1372, file: !1373, line: 180, baseType: !7, size: 64, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1372, file: !1373, line: 185, baseType: !1387, size: 64, offset: 320)
!1387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1372, file: !1373, line: 181, size: 64, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1387, file: !1373, line: 183, baseType: !52, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1387, file: !1373, line: 184, baseType: !47, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1372, file: !1373, line: 186, baseType: !52, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1372, file: !1373, line: 193, baseType: !1393, size: 64, offset: 448)
!1393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1372, file: !1373, line: 189, size: 64, elements: !1394)
!1394 = !{!1395, !1399}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1393, file: !1373, line: 191, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{!47, !52}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1393, file: !1373, line: 192, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!47, !47, !52}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1372, file: !1373, line: 198, baseType: !1404, size: 64, offset: 512)
!1404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1372, file: !1373, line: 194, size: 64, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1404, file: !1373, line: 196, baseType: !1048, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1404, file: !1373, line: 197, baseType: !1408, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{null, !47, !47}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1372, file: !1373, line: 200, baseType: !47, size: 64, offset: 576)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1372, file: !1373, line: 201, baseType: !66, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1372, file: !1373, line: 202, baseType: !66, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1372, file: !1373, line: 206, baseType: !66, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!5, !1371, !52, !52, !1400, !1408, !47}
!1417 = !DISubroutineType(types: !1418)
!1418 = !{null, !1371, !52}
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!5, !1371, !47}
!1421 = !DISubroutineType(types: !1422)
!1422 = !{null, !1371, !47}
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!52, !1371}
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!5, !1371, !52, !52}
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!47, !1371, !52}
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1430, file: !2, line: 242, baseType: !5, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1430, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1430, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1430, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1430, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1430, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1430, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1430, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1430, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1430, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1430, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1430, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1430, file: !2, line: 260, baseType: !1445, size: 64, offset: 768)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1447)
!1447 = !{!1448, !1449, !1450}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1446, file: !2, line: 157, baseType: !1445, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1446, file: !2, line: 158, baseType: !1429, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1446, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1430, file: !2, line: 262, baseType: !1429, size: 64, offset: 832)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1430, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1430, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1430, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1430, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1430, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1430, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1430, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1430, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1430, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1430, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1430, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1430, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1430, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1430, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1430, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1467 = !{!1364}
!1468 = !DIFile(filename: "lib/obstack.c", directory: "/home/mohamad/clone/coreutils")
!1469 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1470, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1471, retainedTypes: !1481, nameTableKind: None)
!1470 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!1471 = !{!1472}
!1472 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1473, line: 45, baseType: !66, size: 32, elements: !1474)
!1473 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mohamad/clone/coreutils")
!1474 = !{!1475, !1476, !1477, !1478, !1479, !1480}
!1475 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1476 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1477 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1478 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1479 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1480 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1481 = !{!1482, !5, !1484, !1485, !1486, !1488}
!1482 = !DISubroutineType(types: !1483)
!1483 = !{null, !5, !1484, !1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !279, line: 90, baseType: !30)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1473, line: 52, baseType: !1472)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{null, !1488, !1485}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1490, file: !2, line: 242, baseType: !5, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1490, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1490, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1490, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1490, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1490, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1490, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1490, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1490, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1490, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1490, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1490, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1490, file: !2, line: 260, baseType: !1505, size: 64, offset: 768)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1507)
!1507 = !{!1508, !1509, !1511}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1506, file: !2, line: 157, baseType: !1505, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1506, file: !2, line: 158, baseType: !1510, size: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1506, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1490, file: !2, line: 262, baseType: !1510, size: 64, offset: 832)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1490, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1490, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1490, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1490, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1490, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1490, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1490, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1490, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1490, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1490, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1490, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1490, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1490, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1490, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1490, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1529, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1530, nameTableKind: None)
!1529 = !DIFile(filename: "./lib/filevercmp.c", directory: "/home/mohamad/clone/coreutils")
!1530 = !{!5, !474, !87, !52, !88, !1531, !371, !102, !1533, !1535, !317}
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!87, !371}
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!5, !87, !52, !87, !52}
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!5, !317}
!1537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1538, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1539, nameTableKind: None)
!1538 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!1539 = !{!1540, !102, !5, !87}
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!102, !5}
!1542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1543, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1544, nameTableKind: None)
!1543 = !DIFile(filename: "./lib/heap.c", directory: "/home/mohamad/clone/coreutils")
!1544 = !{!47, !1545, !1547, !1555, !52, !1102, !1556, !1558, !5, !1560, !333, !85, !1562, !1564}
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!1547, !1555, !52}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "heap", file: !1549, line: 33, size: 256, elements: !1550)
!1549 = !DIFile(filename: "lib/heap.c", directory: "/home/mohamad/clone/coreutils")
!1550 = !{!1551, !1552, !1553, !1554}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1548, file: !1549, line: 35, baseType: !1102, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1548, file: !1549, line: 36, baseType: !52, size: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1548, file: !1549, line: 37, baseType: !52, size: 64, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "compare", scope: !1548, file: !1549, line: 38, baseType: !1555, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1547}
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!5, !1547, !47}
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!47, !1547}
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!52, !1102, !52, !52, !1555}
!1564 = !DISubroutineType(types: !1565)
!1565 = !{null, !1102, !52, !1555}
!1566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1567, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1568, nameTableKind: None)
!1567 = !DIFile(filename: "./lib/inttostr.c", directory: "/home/mohamad/clone/coreutils")
!1568 = !{!5, !1569, !7, !8}
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!7, !5, !7}
!1571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1572, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1573, nameTableKind: None)
!1572 = !DIFile(filename: "./lib/uinttostr.c", directory: "/home/mohamad/clone/coreutils")
!1573 = !{!66, !1574, !7, !8}
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!7, !66, !7}
!1576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1577, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1578, nameTableKind: None)
!1577 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/mohamad/clone/coreutils")
!1578 = !{!355, !1579, !7, !8}
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!7, !355, !7}
!1581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1582, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1583, nameTableKind: None)
!1582 = !DIFile(filename: "./lib/mbswidth.c", directory: "/home/mohamad/clone/coreutils")
!1583 = !{!52, !317, !5, !34, !1584, !87, !1586, !88, !1588, !1314, !321}
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!5, !87, !5}
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!5, !87, !52, !5}
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1303, line: 106, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1303, line: 94, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1303, line: 82, size: 64, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1590, file: !1303, line: 84, baseType: !5, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1590, file: !1303, line: 93, baseType: !1594, size: 32, offset: 32)
!1594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1590, file: !1303, line: 85, size: 32, elements: !1595)
!1595 = !{!1596, !1597}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1594, file: !1303, line: 88, baseType: !66, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1594, file: !1303, line: 92, baseType: !1313, size: 32)
!1598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1599, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1600, retainedTypes: !1607, nameTableKind: None)
!1599 = !DIFile(filename: "./lib/nproc.c", directory: "/home/mohamad/clone/coreutils")
!1600 = !{!1601}
!1601 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nproc_query", file: !1602, line: 32, baseType: !66, size: 32, elements: !1603)
!1602 = !DIFile(filename: "./lib/nproc.h", directory: "/home/mohamad/clone/coreutils")
!1603 = !{!1604, !1605, !1606}
!1604 = !DIEnumerator(name: "NPROC_ALL", value: 0, isUnsigned: true)
!1605 = !DIEnumerator(name: "NPROC_CURRENT", value: 1, isUnsigned: true)
!1606 = !DIEnumerator(name: "NPROC_CURRENT_OVERRIDABLE", value: 2, isUnsigned: true)
!1607 = !{!47, !1608, !54, !1610, !87, !88, !7, !8, !32, !1612, !1614}
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!54, !1601}
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!54, !87}
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!54}
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpu_set_t", file: !1615, line: 128, baseType: !1616)
!1615 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sched.h", directory: "")
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1615, line: 125, size: 1024, elements: !1617)
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "__bits", scope: !1616, file: !1615, line: 127, baseType: !1619, size: 1024)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1620, size: 1024, elements: !152)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cpu_mask", file: !1615, line: 118, baseType: !54)
!1621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1622, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1623, nameTableKind: None)
!1622 = !DIFile(filename: "./lib/physmem.c", directory: "/home/mohamad/clone/coreutils")
!1623 = !{!370, !1624, !1626, !1628}
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!370}
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1627, line: 15, baseType: !54)
!1627 = !DIFile(filename: "/usr/include/asm-generic/posix_types.h", directory: "")
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !1629, line: 26, baseType: !66)
!1629 = !DIFile(filename: "/usr/include/asm-generic/int-ll64.h", directory: "")
!1630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1631, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1632, nameTableKind: None)
!1631 = !DIFile(filename: "./lib/posixver.c", directory: "/home/mohamad/clone/coreutils")
!1632 = !{!1633, !5, !32, !87, !88, !7, !8}
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!5}
!1635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1636, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1637, nameTableKind: None)
!1636 = !DIFile(filename: "./lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!1637 = !{!52, !1638, !1640, !87, !1645, !1720, !1686, !1722, !85, !1724, !47, !1726, !5, !1728, !1687, !314, !1730, !7, !1732, !1733, !1734, !1735, !1737, !1738, !1740, !1741}
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!1640, !87, !52}
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1642, line: 79, size: 33216, elements: !1643)
!1642 = !DIFile(filename: "lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!1643 = !{!1644, !1685, !1689, !1690}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1641, file: !1642, line: 83, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1647, file: !2, line: 242, baseType: !5, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1647, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1647, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1647, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1647, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1647, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1647, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1647, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1647, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1647, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1647, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1647, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1647, file: !2, line: 260, baseType: !1662, size: 64, offset: 768)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1664)
!1664 = !{!1665, !1666, !1668}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1663, file: !2, line: 157, baseType: !1662, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1663, file: !2, line: 158, baseType: !1667, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1663, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1647, file: !2, line: 262, baseType: !1667, size: 64, offset: 832)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1647, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1647, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1647, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1647, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1647, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1647, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1647, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1647, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1647, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1647, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1647, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1647, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1647, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1647, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1647, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1641, file: !1642, line: 90, baseType: !1686, size: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{null, !85}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !1641, file: !1642, line: 91, baseType: !85, size: 64, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1641, file: !1642, line: 117, baseType: !1691, size: 33024, offset: 192)
!1691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1641, file: !1642, line: 96, size: 33024, elements: !1692)
!1692 = !{!1693, !1697}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1691, file: !1642, line: 99, baseType: !1694, size: 32768)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32768, elements: !1695)
!1695 = !{!1696}
!1696 = !DISubrange(count: 4096)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !1691, file: !1642, line: 116, baseType: !1698, size: 33024)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !1642, line: 102, size: 33024, elements: !1699)
!1699 = !{!1700, !1701, !1712}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !1698, file: !1642, line: 105, baseType: !52, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1698, file: !1642, line: 108, baseType: !1702, size: 16576, offset: 64)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1703, line: 56, size: 16576, elements: !1704)
!1703 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mohamad/clone/coreutils")
!1704 = !{!1705, !1709, !1710, !1711}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1702, file: !1703, line: 58, baseType: !1706, size: 16384)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1707, size: 16384, elements: !319)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !1703, line: 44, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !356, line: 80, baseType: !54)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1702, file: !1703, line: 59, baseType: !1707, size: 64, offset: 16384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1702, file: !1703, line: 59, baseType: !1707, size: 64, offset: 16448)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1702, file: !1703, line: 59, baseType: !1707, size: 64, offset: 16512)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1698, file: !1642, line: 115, baseType: !1713, size: 16384, offset: 16640)
!1713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1698, file: !1642, line: 111, size: 16384, elements: !1714)
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1713, file: !1642, line: 113, baseType: !1706, size: 16384)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1713, file: !1642, line: 114, baseType: !1717, size: 16384)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 16384, elements: !1718)
!1718 = !{!1719}
!1719 = !DISubrange(count: 2048)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{null, !1640, !1686}
!1722 = !DISubroutineType(types: !1723)
!1723 = !{null, !1640, !85}
!1724 = !DISubroutineType(types: !1725)
!1725 = !{null, !1640, !47, !52}
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!5, !1640}
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!1640, !1645, !85}
!1730 = !DISubroutineType(types: !1731)
!1731 = !{null, !47, !52, !52}
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !625, line: 109, baseType: !993)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !625, line: 98, baseType: !194)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !625, line: 80, baseType: !196)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{null, !1640, !1737, !52}
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{null, !1740, !47, !52}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1743, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1744, nameTableKind: None)
!1743 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!1744 = !{!1707, !1745, !1747, !1741, !1754, !5, !1706, !1756, !1758, !85, !87, !1759, !1760}
!1745 = !DISubroutineType(types: !1746)
!1746 = !{null, !1747, !1741}
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1703, line: 56, size: 16576, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1748, file: !1703, line: 58, baseType: !1706, size: 16384)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1748, file: !1703, line: 59, baseType: !1707, size: 64, offset: 16384)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1748, file: !1703, line: 59, baseType: !1707, size: 64, offset: 16448)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1748, file: !1703, line: 59, baseType: !1707, size: 64, offset: 16512)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !1747}
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!1707, !1758, !1707}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!1707, !1707}
!1762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1763, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1764, nameTableKind: None)
!1763 = !DIFile(filename: "./lib/readtokens0.c", directory: "/home/mohamad/clone/coreutils")
!1764 = !{!47, !7, !52, !1123, !1765, !1767, !91, !354, !1810, !1779, !1811, !102, !1813, !5, !1853, !8, !85, !87}
!1765 = !DISubroutineType(types: !1766)
!1766 = !{null, !1767}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tokens", file: !1769, line: 28, size: 2304, elements: !1770)
!1769 = !DIFile(filename: "./lib/readtokens0.h", directory: "/home/mohamad/clone/coreutils")
!1770 = !{!1771, !1772, !1773, !1774, !1808, !1809}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "n_tok", scope: !1768, file: !1769, line: 30, baseType: !52, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !1768, file: !1769, line: 31, baseType: !91, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "tok_len", scope: !1768, file: !1769, line: 32, baseType: !354, size: 64, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "o_data", scope: !1768, file: !1769, line: 33, baseType: !1775, size: 704, offset: 192)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1373, line: 174, size: 704, elements: !1776)
!1776 = !{!1777, !1778, !1785, !1786, !1787, !1788, !1793, !1794, !1799, !1804, !1805, !1806, !1807}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1775, file: !1373, line: 176, baseType: !52, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1775, file: !1373, line: 177, baseType: !1779, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1373, line: 167, size: 128, elements: !1781)
!1781 = !{!1782, !1783, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1780, file: !1373, line: 169, baseType: !7, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1780, file: !1373, line: 170, baseType: !1779, size: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1780, file: !1373, line: 171, baseType: !299, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1775, file: !1373, line: 178, baseType: !7, size: 64, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1775, file: !1373, line: 179, baseType: !7, size: 64, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1775, file: !1373, line: 180, baseType: !7, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1775, file: !1373, line: 185, baseType: !1789, size: 64, offset: 320)
!1789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1373, line: 181, size: 64, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1789, file: !1373, line: 183, baseType: !52, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1789, file: !1373, line: 184, baseType: !47, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1775, file: !1373, line: 186, baseType: !52, size: 64, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1775, file: !1373, line: 193, baseType: !1795, size: 64, offset: 448)
!1795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1373, line: 189, size: 64, elements: !1796)
!1796 = !{!1797, !1798}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1795, file: !1373, line: 191, baseType: !1396, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1795, file: !1373, line: 192, baseType: !1400, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1775, file: !1373, line: 198, baseType: !1800, size: 64, offset: 512)
!1800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1373, line: 194, size: 64, elements: !1801)
!1801 = !{!1802, !1803}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1800, file: !1373, line: 196, baseType: !1048, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1800, file: !1373, line: 197, baseType: !1408, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1775, file: !1373, line: 200, baseType: !47, size: 64, offset: 576)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1775, file: !1373, line: 201, baseType: !66, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1775, file: !1373, line: 202, baseType: !66, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1775, file: !1373, line: 206, baseType: !66, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok", scope: !1768, file: !1769, line: 34, baseType: !1775, size: 704, offset: 896)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok_len", scope: !1768, file: !1769, line: 35, baseType: !1775, size: 704, offset: 1600)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!102, !1813, !1767}
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1815, file: !2, line: 242, baseType: !5, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1815, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1815, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1815, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1815, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1815, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1815, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1815, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1815, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1815, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1815, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1815, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1815, file: !2, line: 260, baseType: !1830, size: 64, offset: 768)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1832)
!1832 = !{!1833, !1834, !1836}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1831, file: !2, line: 157, baseType: !1830, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1831, file: !2, line: 158, baseType: !1835, size: 64, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1831, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1815, file: !2, line: 262, baseType: !1835, size: 64, offset: 832)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1815, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1815, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1815, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1815, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1815, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1815, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1815, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1815, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1815, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1815, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1815, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1815, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1815, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1815, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1815, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1856, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1857, nameTableKind: None)
!1856 = !DIFile(filename: "./lib/mkstemp-safer.c", directory: "/home/mohamad/clone/coreutils")
!1857 = !{!1858, !5, !7, !1860}
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!5, !7}
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!5, !7, !5}
!1862 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1863, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1864, nameTableKind: None)
!1863 = !DIFile(filename: "./lib/strnumcmp.c", directory: "/home/mohamad/clone/coreutils")
!1864 = !{!66, !1865, !5, !87, !317, !88, !52, !1867, !8}
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!5, !87, !87, !5, !5}
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!5, !87, !87, !8}
!1869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1870, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1871, nameTableKind: None)
!1870 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!1871 = !{!1872, !5}
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!5, !5}
!1874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1875, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1876, nameTableKind: None)
!1875 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!1876 = !{!47, !1877, !1879, !87, !812, !52, !1919, !1920, !1922, !1931, !1932, !1934, !167, !1901}
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1879, !87, !87, !87, !812, !52}
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !1881)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1881, file: !2, line: 242, baseType: !5, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1881, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1881, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1881, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1881, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1881, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1881, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1881, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1881, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1881, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1881, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1881, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1881, file: !2, line: 260, baseType: !1896, size: 64, offset: 768)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1898)
!1898 = !{!1899, !1900, !1902}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1897, file: !2, line: 157, baseType: !1896, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1897, file: !2, line: 158, baseType: !1901, size: 64, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1897, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1881, file: !2, line: 262, baseType: !1901, size: 64, offset: 832)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1881, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1881, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1881, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1881, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1881, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1881, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1881, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1881, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1881, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1881, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1881, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1881, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1881, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1881, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1881, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, elements: !300)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{null, !1879, !87, !87, !87, !812}
!1922 = !DISubroutineType(types: !1923)
!1923 = !{null, !1879, !87, !87, !87, !1924}
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1875, line: 192, size: 192, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1925, file: !1875, line: 192, baseType: !66, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1925, file: !1875, line: 192, baseType: !66, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1925, file: !1875, line: 192, baseType: !47, size: 64, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1925, file: !1875, line: 192, baseType: !47, size: 64, offset: 128)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 640, elements: !281)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{null, !1879, !87, !87, !87}
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !279, line: 79, baseType: !1935)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1354, line: 32, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1875, line: 234, baseType: !1937)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 192, elements: !39)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1940, nameTableKind: None)
!1939 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!1940 = !{!52, !7, !47, !1941, !1943, !1945, !354, !1947, !1397, !1401, !1949, !1951, !85, !1266, !87}
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!47, !52, !52}
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!47, !47, !52, !52}
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!47, !47, !354, !52}
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!7, !52}
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!47, !47, !354}
!1951 = !DISubroutineType(types: !1952)
!1952 = !{!47, !85, !52}
!1953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1954, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1955, nameTableKind: None)
!1954 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!1955 = !{!167, !314}
!1956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1957, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1958, nameTableKind: None)
!1957 = !DIFile(filename: "./lib/xmemcoll.c", directory: "/home/mohamad/clone/coreutils")
!1958 = !{!1959, !5, !7, !52, !1533, !87, !1961, !314}
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!5, !7, !52, !7, !52}
!1961 = !DISubroutineType(types: !1962)
!1962 = !{null, !5, !87, !52, !87, !52}
!1963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1964, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1965, nameTableKind: None)
!1964 = !DIFile(filename: "./lib/xnanosleep.c", directory: "/home/mohamad/clone/coreutils")
!1965 = !{!1966, !5, !370}
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!5, !370}
!1968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1969, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1970, retainedTypes: !1971, nameTableKind: None)
!1969 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mohamad/clone/coreutils")
!1970 = !{!71}
!1971 = !{!5, !34, !1972, !1974, !87, !91, !1975, !7, !54, !317, !88, !321, !8, !1976, !1978}
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!1974, !87, !91, !5, !1975, !87}
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !72, line: 39, baseType: !71)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!1974, !1975, !5}
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!1974, !1975, !5, !5}
!1980 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1981, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1970, retainedTypes: !1982, nameTableKind: None)
!1981 = !DIFile(filename: "./lib/xstrtol-error.c", directory: "/home/mohamad/clone/coreutils")
!1982 = !{!1983, !5, !8, !1985, !87, !314, !1993, !268}
!1983 = !DISubroutineType(types: !1984)
!1984 = !{null, !71, !5, !8, !1985, !87}
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !252, line: 104, size: 256, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1987, file: !252, line: 106, baseType: !87, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1987, file: !252, line: 109, baseType: !5, size: 32, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1987, file: !252, line: 110, baseType: !257, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1987, file: !252, line: 111, baseType: !5, size: 32, offset: 192)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{null, !71, !5, !8, !1985, !87, !5}
!1995 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1996, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1970, retainedTypes: !1997, nameTableKind: None)
!1996 = !DIFile(filename: "./lib/xstrtoumax.c", directory: "/home/mohamad/clone/coreutils")
!1997 = !{!5, !34, !1998, !1974, !87, !91, !2000, !7, !355, !317, !88, !321, !8, !2001, !2003}
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!1974, !87, !91, !5, !2000, !87}
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!1974, !2000, !5}
!2003 = !DISubroutineType(types: !2004)
!2004 = !{!1974, !2000, !5, !5}
!2005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2006, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2007, nameTableKind: None)
!2006 = !DIFile(filename: "./lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!2007 = !{!2008, !47, !52}
!2008 = !DISubroutineType(types: !2009)
!2009 = !{null, !47, !52}
!2010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2011, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2012, nameTableKind: None)
!2011 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!2012 = !{!2013, !5, !2015}
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!5, !2015}
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !2017)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2018)
!2018 = !{!2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2017, file: !2, line: 242, baseType: !5, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2017, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2017, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2017, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2017, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2017, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2017, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2017, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2017, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2017, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2017, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2017, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2017, file: !2, line: 260, baseType: !2032, size: 64, offset: 768)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2038}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2033, file: !2, line: 157, baseType: !2032, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2033, file: !2, line: 158, baseType: !2037, size: 64, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2033, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2017, file: !2, line: 262, baseType: !2037, size: 64, offset: 832)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2017, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2017, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2017, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2017, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2017, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2017, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2017, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2017, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2017, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2017, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2017, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2017, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2017, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2017, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2017, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2056, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2057, nameTableKind: None)
!2056 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!2057 = !{!47, !2058, !5, !2060, !2100, !2061}
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!5, !2060}
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !2062)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2063)
!2063 = !{!2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2062, file: !2, line: 242, baseType: !5, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2062, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2062, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2062, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2062, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2062, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2062, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2062, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2062, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2062, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2062, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2062, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2062, file: !2, line: 260, baseType: !2077, size: 64, offset: 768)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2079)
!2079 = !{!2080, !2081, !2083}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2078, file: !2, line: 157, baseType: !2077, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2078, file: !2, line: 158, baseType: !2082, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2078, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2062, file: !2, line: 262, baseType: !2082, size: 64, offset: 832)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2062, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2062, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2062, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2062, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2062, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2062, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2062, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2062, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2062, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2062, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2062, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2062, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2062, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2062, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2062, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !2060}
!2102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2103, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2104, nameTableKind: None)
!2103 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!2104 = !{!47, !2105, !5, !2107, !1484, !2108, !7, !45}
!2105 = !DISubroutineType(types: !2106)
!2106 = !{!5, !2107, !1484, !5}
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2109, file: !2, line: 242, baseType: !5, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2109, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2109, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2109, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2109, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2109, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2109, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2109, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2109, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2109, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2109, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2109, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2109, file: !2, line: 260, baseType: !2124, size: 64, offset: 768)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2126)
!2126 = !{!2127, !2128, !2130}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2125, file: !2, line: 157, baseType: !2124, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2125, file: !2, line: 158, baseType: !2129, size: 64, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2125, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2109, file: !2, line: 262, baseType: !2129, size: 64, offset: 832)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2109, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2109, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2109, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2109, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2109, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2109, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2109, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2109, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2109, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2109, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2109, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2109, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2109, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2109, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2109, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2147 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2148, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2149, nameTableKind: None)
!2148 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!2149 = !{!52, !2150, !2152, !87, !2153, !1314, !317, !88}
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!52, !2152, !87, !52, !2153}
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1303, line: 106, baseType: !2155)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1303, line: 94, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1303, line: 82, size: 64, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2156, file: !1303, line: 84, baseType: !5, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2156, file: !1303, line: 93, baseType: !2160, size: 32, offset: 32)
!2160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2156, file: !1303, line: 85, size: 32, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2160, file: !1303, line: 88, baseType: !66, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2160, file: !1303, line: 92, baseType: !1313, size: 32)
!2164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2165, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2166, nameTableKind: None)
!2165 = !DIFile(filename: "./lib/nanosleep.c", directory: "/home/mohamad/clone/coreutils")
!2166 = !{!2167, !5, !2169, !2175, !405, !2176, !2177, !403}
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!5, !2169, !2175}
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !400, line: 120, size: 128, elements: !2172)
!2172 = !{!2173, !2174}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2171, file: !400, line: 122, baseType: !403, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2171, file: !400, line: 123, baseType: !405, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2177)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !400, line: 75, baseType: !403)
!2178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2179, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2180, nameTableKind: None)
!2179 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!2180 = !{!2181, !7, !2183}
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!7, !2183}
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !2184, line: 36, baseType: !5)
!2184 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!2185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2186, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2187, nameTableKind: None)
!2186 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!2187 = !{!66, !2188, !2190, !5, !2191, !488, !2193, !52, !2195, !2197, !2198, !2200}
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!2190, !2190, !5}
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !356, line: 55, baseType: !54)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!488, !488, !5}
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!52, !52, !5}
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!2197, !2197, !5}
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !356, line: 49, baseType: !34)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!2200, !2200, !5}
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !356, line: 48, baseType: !317)
!2201 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2202, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2203, nameTableKind: None)
!2202 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!2203 = !{!1540, !102, !5, !1872}
!2204 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2205, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2206, nameTableKind: None)
!2205 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!2206 = !{!2207, !474, !5, !87, !317, !935}
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!2208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2209, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2210, nameTableKind: None)
!2209 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!2210 = !{!2211, !5, !2213, !101}
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!5, !2213}
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !2215)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2216)
!2216 = !{!2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2215, file: !2, line: 242, baseType: !5, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2215, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2215, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2215, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2215, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2215, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2215, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2215, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2215, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2215, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2215, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2215, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2215, file: !2, line: 260, baseType: !2230, size: 64, offset: 768)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2232)
!2232 = !{!2233, !2234, !2236}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2231, file: !2, line: 157, baseType: !2230, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2231, file: !2, line: 158, baseType: !2235, size: 64, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2231, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2215, file: !2, line: 262, baseType: !2235, size: 64, offset: 832)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2215, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2215, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2215, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2215, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2215, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2215, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2215, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2215, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2215, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2215, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2215, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2215, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2215, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2215, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2215, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2254, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2255, nameTableKind: None)
!2254 = !DIFile(filename: "./lib/dtotimespec.c", directory: "/home/mohamad/clone/coreutils")
!2255 = !{!2177, !2256, !370, !32}
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!2258, !370}
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !400, line: 120, size: 128, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2258, file: !400, line: 122, baseType: !403, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2258, file: !400, line: 123, baseType: !405, size: 64, offset: 64)
!2262 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2263, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2264, nameTableKind: None)
!2263 = !DIFile(filename: "./lib/fd-safer-flag.c", directory: "/home/mohamad/clone/coreutils")
!2264 = !{!1348, !5}
!2265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2266, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2264, nameTableKind: None)
!2266 = !DIFile(filename: "./lib/dup-safer-flag.c", directory: "/home/mohamad/clone/coreutils")
!2267 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2268, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2269, nameTableKind: None)
!2268 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!2269 = !{!2270, !2272, !87, !5}
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!2272, !87, !87}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !279, line: 48, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2274, file: !2, line: 242, baseType: !5, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2274, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2274, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2274, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2274, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2274, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2274, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2274, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2274, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2274, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2274, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2274, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2274, file: !2, line: 260, baseType: !2289, size: 64, offset: 768)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2291)
!2291 = !{!2292, !2293, !2295}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2290, file: !2, line: 157, baseType: !2289, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2290, file: !2, line: 158, baseType: !2294, size: 64, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2290, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2274, file: !2, line: 262, baseType: !2294, size: 64, offset: 832)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2274, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2274, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2274, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2274, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2274, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2274, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2274, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2274, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2274, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2274, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2274, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2274, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2274, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2274, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2274, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2314, nameTableKind: None)
!2313 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!2314 = !{!47, !2315, !87}
!2315 = !DISubroutineType(types: !802)
!2316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2317, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2318, nameTableKind: None)
!2317 = !DIFile(filename: "./lib/memcoll.c", directory: "/home/mohamad/clone/coreutils")
!2318 = !{!1959, !5, !7, !52, !8, !1533, !87}
!2319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2320, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !2321, nameTableKind: None)
!2320 = !DIFile(filename: "./lib/timespec.c", directory: "/home/mohamad/clone/coreutils")
!2321 = !{!2322, !2177, !32, !403, !405, !2328, !5, !2330, !2332, !370}
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!2324, !2177, !32}
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !400, line: 120, size: 128, elements: !2325)
!2325 = !{!2326, !2327}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2324, file: !400, line: 122, baseType: !403, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2324, file: !400, line: 123, baseType: !405, size: 64, offset: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!5, !2324, !2324}
!2330 = !DISubroutineType(types: !2331)
!2331 = !{!5, !2324}
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!370, !2324}
!2334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2335, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !309, retainedTypes: !1871, nameTableKind: None)
!2335 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!2336 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!2337 = !{i32 2, !"ctir", i32 1}
!2338 = !{i32 2, !"Dwarf Version", i32 4}
!2339 = !{i32 2, !"Debug Info Version", i32 3}
!2340 = !{i32 1, !"wchar_size", i32 4}
!2341 = distinct !DISubprogram(name: "usage", scope: !63, file: !63, line: 408, type: !83, scopeLine: 409, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !309)
!2342 = !{!2343, !2343, i64 0}
!2343 = !{!"int", !2344, i64 0}
!2344 = !{!"omnipotent char", !2345, i64 0}
!2345 = !{!"Simple C/C++ TBAA"}
!2346 = !DILocalVariable(name: "status", arg: 1, scope: !2341, file: !63, line: 408, type: !5)
!2347 = !DILocation(line: 408, column: 12, scope: !2341)
!2348 = !DILocation(line: 410, column: 7, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2341, file: !63, line: 410, column: 7)
!2350 = !DILocation(line: 410, column: 14, scope: !2349)
!2351 = !DILocation(line: 410, column: 7, scope: !2341)
!2352 = !DILocation(line: 411, column: 5, scope: !2349)
!2353 = !DILocation(line: 411, column: 5, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !63, line: 411, column: 5)
!2355 = !{!2356, !2356, i64 0}
!2356 = !{!"any pointer", !2344, i64 0}
!2357 = !DILocation(line: 414, column: 15, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2349, file: !63, line: 413, column: 5)
!2359 = !DILocation(line: 418, column: 15, scope: !2358)
!2360 = !DILocation(line: 418, column: 29, scope: !2358)
!2361 = !DILocation(line: 414, column: 7, scope: !2358)
!2362 = !DILocation(line: 419, column: 7, scope: !2358)
!2363 = !DILocation(line: 423, column: 7, scope: !2358)
!2364 = !DILocation(line: 424, column: 7, scope: !2358)
!2365 = !DILocation(line: 426, column: 7, scope: !2358)
!2366 = !DILocation(line: 430, column: 7, scope: !2358)
!2367 = !DILocation(line: 436, column: 7, scope: !2358)
!2368 = !DILocation(line: 441, column: 7, scope: !2358)
!2369 = !DILocation(line: 444, column: 7, scope: !2358)
!2370 = !DILocation(line: 450, column: 7, scope: !2358)
!2371 = !DILocation(line: 458, column: 7, scope: !2358)
!2372 = !DILocation(line: 462, column: 7, scope: !2358)
!2373 = !DILocation(line: 466, column: 7, scope: !2358)
!2374 = !DILocation(line: 473, column: 7, scope: !2358)
!2375 = !DILocation(line: 480, column: 7, scope: !2358)
!2376 = !DILocation(line: 484, column: 7, scope: !2358)
!2377 = !DILocation(line: 490, column: 15, scope: !2358)
!2378 = !DILocation(line: 490, column: 7, scope: !2358)
!2379 = !DILocation(line: 499, column: 7, scope: !2358)
!2380 = !DILocation(line: 502, column: 7, scope: !2358)
!2381 = !DILocation(line: 503, column: 7, scope: !2358)
!2382 = !DILocation(line: 504, column: 7, scope: !2358)
!2383 = !DILocation(line: 517, column: 7, scope: !2358)
!2384 = !DILocation(line: 525, column: 7, scope: !2358)
!2385 = !DILocation(line: 528, column: 9, scope: !2341)
!2386 = !DILocation(line: 528, column: 3, scope: !2341)
!2387 = distinct !DISubprogram(name: "emit_stdin_note", scope: !307, file: !307, line: 578, type: !167, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!2388 = !DILocation(line: 580, column: 3, scope: !2387)
!2389 = !DILocation(line: 583, column: 1, scope: !2387)
!2390 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !307, file: !307, line: 585, type: !167, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!2391 = !DILocation(line: 587, column: 3, scope: !2390)
!2392 = !DILocation(line: 590, column: 1, scope: !2390)
!2393 = !DILocalVariable(name: "program", arg: 1, scope: !308, file: !307, line: 631, type: !87)
!2394 = !DILocation(line: 631, column: 34, scope: !308)
!2395 = !DILocalVariable(name: "infomap", scope: !308, file: !307, line: 633, type: !304)
!2396 = !DILocation(line: 633, column: 67, scope: !308)
!2397 = !DILocalVariable(name: "node", scope: !308, file: !307, line: 643, type: !87)
!2398 = !DILocation(line: 643, column: 15, scope: !308)
!2399 = !DILocation(line: 643, column: 22, scope: !308)
!2400 = !DILocalVariable(name: "map_prog", scope: !308, file: !307, line: 644, type: !313)
!2401 = !DILocation(line: 644, column: 25, scope: !308)
!2402 = !DILocation(line: 644, column: 36, scope: !308)
!2403 = !DILocation(line: 646, column: 3, scope: !308)
!2404 = !DILocation(line: 646, column: 10, scope: !308)
!2405 = !DILocation(line: 646, column: 20, scope: !308)
!2406 = !{!2407, !2356, i64 0}
!2407 = !{!"infomap", !2356, i64 0, !2356, i64 8}
!2408 = !DILocation(line: 646, column: 28, scope: !308)
!2409 = !DILocation(line: 646, column: 33, scope: !308)
!2410 = !DILocation(line: 646, column: 31, scope: !308)
!2411 = !DILocation(line: 0, scope: !308)
!2412 = !DILocation(line: 647, column: 13, scope: !308)
!2413 = distinct !{!2413, !2403, !2412}
!2414 = !DILocation(line: 649, column: 7, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !308, file: !307, line: 649, column: 7)
!2416 = !DILocation(line: 649, column: 17, scope: !2415)
!2417 = !{!2407, !2356, i64 8}
!2418 = !DILocation(line: 649, column: 7, scope: !308)
!2419 = !DILocation(line: 650, column: 12, scope: !2415)
!2420 = !DILocation(line: 650, column: 22, scope: !2415)
!2421 = !DILocation(line: 650, column: 10, scope: !2415)
!2422 = !DILocation(line: 650, column: 5, scope: !2415)
!2423 = !DILocation(line: 652, column: 11, scope: !308)
!2424 = !DILocation(line: 652, column: 3, scope: !308)
!2425 = !DILocalVariable(name: "lc_messages", scope: !308, file: !307, line: 656, type: !87)
!2426 = !DILocation(line: 656, column: 15, scope: !308)
!2427 = !DILocation(line: 656, column: 29, scope: !308)
!2428 = !DILocation(line: 657, column: 7, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !308, file: !307, line: 657, column: 7)
!2430 = !DILocation(line: 657, column: 19, scope: !2429)
!2431 = !DILocation(line: 657, column: 22, scope: !2429)
!2432 = !DILocation(line: 657, column: 7, scope: !308)
!2433 = !DILocation(line: 663, column: 7, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2429, file: !307, line: 658, column: 5)
!2435 = !DILocation(line: 665, column: 5, scope: !2434)
!2436 = !DILocation(line: 666, column: 11, scope: !308)
!2437 = !DILocation(line: 667, column: 24, scope: !308)
!2438 = !DILocation(line: 666, column: 3, scope: !308)
!2439 = !DILocation(line: 668, column: 11, scope: !308)
!2440 = !DILocation(line: 669, column: 11, scope: !308)
!2441 = !DILocation(line: 669, column: 17, scope: !308)
!2442 = !DILocation(line: 669, column: 25, scope: !308)
!2443 = !DILocation(line: 669, column: 22, scope: !308)
!2444 = !DILocation(line: 668, column: 3, scope: !308)
!2445 = !DILocation(line: 670, column: 1, scope: !308)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tokens", file: !1769, line: 28, size: 2304, elements: !2447)
!2447 = !{!2448, !2449, !2450, !2451, !2485, !2486}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "n_tok", scope: !2446, file: !1769, line: 30, baseType: !52, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !2446, file: !1769, line: 31, baseType: !91, size: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "tok_len", scope: !2446, file: !1769, line: 32, baseType: !354, size: 64, offset: 128)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "o_data", scope: !2446, file: !1769, line: 33, baseType: !2452, size: 704, offset: 192)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1373, line: 174, size: 704, elements: !2453)
!2453 = !{!2454, !2455, !2462, !2463, !2464, !2465, !2470, !2471, !2476, !2481, !2482, !2483, !2484}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2452, file: !1373, line: 176, baseType: !52, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2452, file: !1373, line: 177, baseType: !2456, size: 64, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1373, line: 167, size: 128, elements: !2458)
!2458 = !{!2459, !2460, !2461}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2457, file: !1373, line: 169, baseType: !7, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2457, file: !1373, line: 170, baseType: !2456, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2457, file: !1373, line: 171, baseType: !299, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2452, file: !1373, line: 178, baseType: !7, size: 64, offset: 128)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2452, file: !1373, line: 179, baseType: !7, size: 64, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2452, file: !1373, line: 180, baseType: !7, size: 64, offset: 256)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2452, file: !1373, line: 185, baseType: !2466, size: 64, offset: 320)
!2466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2452, file: !1373, line: 181, size: 64, elements: !2467)
!2467 = !{!2468, !2469}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2466, file: !1373, line: 183, baseType: !52, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2466, file: !1373, line: 184, baseType: !47, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2452, file: !1373, line: 186, baseType: !52, size: 64, offset: 384)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2452, file: !1373, line: 193, baseType: !2472, size: 64, offset: 448)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2452, file: !1373, line: 189, size: 64, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !2472, file: !1373, line: 191, baseType: !1396, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !2472, file: !1373, line: 192, baseType: !1400, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2452, file: !1373, line: 198, baseType: !2477, size: 64, offset: 512)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2452, file: !1373, line: 194, size: 64, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !2477, file: !1373, line: 196, baseType: !1048, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !2477, file: !1373, line: 197, baseType: !1408, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2452, file: !1373, line: 200, baseType: !47, size: 64, offset: 576)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2452, file: !1373, line: 201, baseType: !66, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2452, file: !1373, line: 202, baseType: !66, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2452, file: !1373, line: 206, baseType: !66, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok", scope: !2446, file: !1769, line: 34, baseType: !2452, size: 704, offset: 896)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok_len", scope: !2446, file: !1769, line: 35, baseType: !2452, size: 704, offset: 1600)
!2487 = !DILocalVariable(name: "argc", arg: 1, scope: !705, file: !63, line: 4194, type: !5)
!2488 = !DILocation(line: 4194, column: 11, scope: !705)
!2489 = !DILocalVariable(name: "argv", arg: 2, scope: !705, file: !63, line: 4194, type: !91)
!2490 = !DILocation(line: 4194, column: 24, scope: !705)
!2491 = !DILocalVariable(name: "key", scope: !705, file: !63, line: 4196, type: !92)
!2492 = !DILocation(line: 4196, column: 20, scope: !705)
!2493 = !DILocalVariable(name: "key_buf", scope: !705, file: !63, line: 4197, type: !93)
!2494 = !DILocation(line: 4197, column: 19, scope: !705)
!2495 = !DILocalVariable(name: "gkey", scope: !705, file: !63, line: 4198, type: !93)
!2496 = !DILocation(line: 4198, column: 19, scope: !705)
!2497 = !DILocalVariable(name: "gkey_only", scope: !705, file: !63, line: 4199, type: !102)
!2498 = !DILocation(line: 4199, column: 8, scope: !705)
!2499 = !{!2500, !2500, i64 0}
!2500 = !{!"_Bool", !2344, i64 0}
!2501 = !DILocalVariable(name: "s", scope: !705, file: !63, line: 4200, type: !87)
!2502 = !DILocation(line: 4200, column: 15, scope: !705)
!2503 = !DILocalVariable(name: "c", scope: !705, file: !63, line: 4201, type: !5)
!2504 = !DILocation(line: 4201, column: 7, scope: !705)
!2505 = !DILocalVariable(name: "checkonly", scope: !705, file: !63, line: 4202, type: !8)
!2506 = !DILocation(line: 4202, column: 8, scope: !705)
!2507 = !{!2344, !2344, i64 0}
!2508 = !DILocalVariable(name: "mergeonly", scope: !705, file: !63, line: 4203, type: !102)
!2509 = !DILocation(line: 4203, column: 8, scope: !705)
!2510 = !DILocalVariable(name: "random_source", scope: !705, file: !63, line: 4204, type: !7)
!2511 = !DILocation(line: 4204, column: 9, scope: !705)
!2512 = !DILocalVariable(name: "need_random", scope: !705, file: !63, line: 4205, type: !102)
!2513 = !DILocation(line: 4205, column: 8, scope: !705)
!2514 = !DILocalVariable(name: "nthreads", scope: !705, file: !63, line: 4206, type: !52)
!2515 = !DILocation(line: 4206, column: 10, scope: !705)
!2516 = !{!2517, !2517, i64 0}
!2517 = !{!"long", !2344, i64 0}
!2518 = !DILocalVariable(name: "nfiles", scope: !705, file: !63, line: 4207, type: !52)
!2519 = !DILocation(line: 4207, column: 10, scope: !705)
!2520 = !DILocalVariable(name: "posixly_correct", scope: !705, file: !63, line: 4208, type: !102)
!2521 = !DILocation(line: 4208, column: 8, scope: !705)
!2522 = !DILocation(line: 4208, column: 27, scope: !705)
!2523 = !DILocation(line: 4208, column: 54, scope: !705)
!2524 = !DILocalVariable(name: "posix_ver", scope: !705, file: !63, line: 4209, type: !5)
!2525 = !DILocation(line: 4209, column: 7, scope: !705)
!2526 = !DILocation(line: 4209, column: 19, scope: !705)
!2527 = !DILocalVariable(name: "traditional_usage", scope: !705, file: !63, line: 4210, type: !102)
!2528 = !DILocation(line: 4210, column: 8, scope: !705)
!2529 = !DILocation(line: 4210, column: 41, scope: !705)
!2530 = !DILocation(line: 4210, column: 38, scope: !705)
!2531 = !DILocation(line: 4210, column: 51, scope: !705)
!2532 = !DILocation(line: 4210, column: 54, scope: !705)
!2533 = !DILocation(line: 4210, column: 64, scope: !705)
!2534 = !DILocation(line: 0, scope: !705)
!2535 = !DILocation(line: 4210, column: 28, scope: !705)
!2536 = !DILocalVariable(name: "files", scope: !705, file: !63, line: 4211, type: !91)
!2537 = !DILocation(line: 4211, column: 10, scope: !705)
!2538 = !DILocalVariable(name: "files_from", scope: !705, file: !63, line: 4212, type: !7)
!2539 = !DILocation(line: 4212, column: 9, scope: !705)
!2540 = !DILocalVariable(name: "tok", scope: !705, file: !63, line: 4213, type: !2446)
!2541 = !DILocation(line: 4213, column: 17, scope: !705)
!2542 = !DILocalVariable(name: "outfile", scope: !705, file: !63, line: 4214, type: !87)
!2543 = !DILocation(line: 4214, column: 15, scope: !705)
!2544 = !DILocalVariable(name: "locale_ok", scope: !705, file: !63, line: 4215, type: !102)
!2545 = !DILocation(line: 4215, column: 8, scope: !705)
!2546 = !DILocation(line: 4218, column: 21, scope: !705)
!2547 = !DILocation(line: 4218, column: 3, scope: !705)
!2548 = !DILocation(line: 4219, column: 18, scope: !705)
!2549 = !DILocation(line: 4219, column: 16, scope: !705)
!2550 = !DILocation(line: 4219, column: 15, scope: !705)
!2551 = !DILocation(line: 4219, column: 13, scope: !705)
!2552 = !DILocation(line: 4220, column: 3, scope: !705)
!2553 = !DILocation(line: 4221, column: 3, scope: !705)
!2554 = !DILocation(line: 4223, column: 3, scope: !705)
!2555 = !DILocation(line: 4225, column: 21, scope: !705)
!2556 = !DILocation(line: 4225, column: 19, scope: !705)
!2557 = !DILocation(line: 4227, column: 18, scope: !705)
!2558 = !DILocation(line: 4227, column: 16, scope: !705)
!2559 = !DILocalVariable(name: "locale", scope: !2560, file: !63, line: 4232, type: !115)
!2560 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4231, column: 3)
!2561 = !DILocation(line: 4232, column: 25, scope: !2560)
!2562 = !DILocation(line: 4232, column: 34, scope: !2560)
!2563 = !DILocation(line: 4237, column: 31, scope: !2560)
!2564 = !DILocation(line: 4237, column: 39, scope: !2560)
!2565 = !{!2566, !2356, i64 0}
!2566 = !{!"lconv", !2356, i64 0, !2356, i64 8, !2356, i64 16, !2356, i64 24, !2356, i64 32, !2356, i64 40, !2356, i64 48, !2356, i64 56, !2356, i64 64, !2356, i64 72, !2344, i64 80, !2344, i64 81, !2344, i64 82, !2344, i64 83, !2344, i64 84, !2344, i64 85, !2344, i64 86, !2344, i64 87, !2344, i64 88, !2344, i64 89, !2344, i64 90, !2344, i64 91, !2344, i64 92, !2344, i64 93}
!2567 = !DILocation(line: 4237, column: 21, scope: !2560)
!2568 = !DILocation(line: 4237, column: 19, scope: !2560)
!2569 = !DILocation(line: 4238, column: 11, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2560, file: !63, line: 4238, column: 9)
!2571 = !DILocation(line: 4238, column: 25, scope: !2570)
!2572 = !DILocation(line: 4238, column: 28, scope: !2570)
!2573 = !DILocation(line: 4238, column: 36, scope: !2570)
!2574 = !DILocation(line: 4238, column: 9, scope: !2560)
!2575 = !DILocation(line: 4239, column: 21, scope: !2570)
!2576 = !DILocation(line: 4239, column: 7, scope: !2570)
!2577 = !DILocation(line: 4242, column: 32, scope: !2560)
!2578 = !DILocation(line: 4242, column: 40, scope: !2560)
!2579 = !{!2566, !2356, i64 8}
!2580 = !DILocation(line: 4242, column: 31, scope: !2560)
!2581 = !DILocation(line: 4242, column: 21, scope: !2560)
!2582 = !DILocation(line: 4242, column: 19, scope: !2560)
!2583 = !DILocation(line: 4243, column: 11, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2560, file: !63, line: 4243, column: 9)
!2585 = !DILocation(line: 4243, column: 25, scope: !2584)
!2586 = !DILocation(line: 4243, column: 28, scope: !2584)
!2587 = !DILocation(line: 4243, column: 36, scope: !2584)
!2588 = !DILocation(line: 4243, column: 9, scope: !2560)
!2589 = !DILocation(line: 4244, column: 21, scope: !2584)
!2590 = !DILocation(line: 4244, column: 7, scope: !2584)
!2591 = !DILocation(line: 4247, column: 19, scope: !705)
!2592 = !DILocation(line: 4248, column: 3, scope: !705)
!2593 = !DILocalVariable(name: "i", scope: !2594, file: !63, line: 4251, type: !52)
!2594 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4250, column: 3)
!2595 = !DILocation(line: 4251, column: 12, scope: !2594)
!2596 = !DILocalVariable(name: "act", scope: !2594, file: !63, line: 4275, type: !160)
!2597 = !DILocation(line: 4275, column: 22, scope: !2594)
!2598 = !DILocation(line: 4277, column: 5, scope: !2594)
!2599 = !DILocation(line: 4278, column: 12, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2594, file: !63, line: 4278, column: 5)
!2601 = !DILocation(line: 4278, column: 10, scope: !2600)
!2602 = !DILocation(line: 4278, column: 17, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2600, file: !63, line: 4278, column: 5)
!2604 = !DILocation(line: 4278, column: 19, scope: !2603)
!2605 = !DILocation(line: 4278, column: 5, scope: !2600)
!2606 = !DILocation(line: 4280, column: 24, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2603, file: !63, line: 4279, column: 7)
!2608 = !DILocation(line: 4280, column: 20, scope: !2607)
!2609 = !DILocation(line: 4280, column: 9, scope: !2607)
!2610 = !DILocation(line: 4281, column: 17, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2607, file: !63, line: 4281, column: 13)
!2612 = !DILocation(line: 4281, column: 28, scope: !2611)
!2613 = !DILocation(line: 4281, column: 13, scope: !2607)
!2614 = !DILocation(line: 4282, column: 43, scope: !2611)
!2615 = !DILocation(line: 4282, column: 39, scope: !2611)
!2616 = !DILocation(line: 4282, column: 11, scope: !2611)
!2617 = !DILocation(line: 4283, column: 7, scope: !2607)
!2618 = !DILocation(line: 4278, column: 29, scope: !2603)
!2619 = !DILocation(line: 4278, column: 5, scope: !2603)
!2620 = distinct !{!2620, !2605, !2621}
!2621 = !DILocation(line: 4283, column: 7, scope: !2600)
!2622 = !DILocation(line: 4285, column: 9, scope: !2594)
!2623 = !DILocation(line: 4285, column: 20, scope: !2594)
!2624 = !DILocation(line: 4286, column: 9, scope: !2594)
!2625 = !DILocation(line: 4286, column: 19, scope: !2594)
!2626 = !{i64 0, i64 128, !2507}
!2627 = !DILocation(line: 4287, column: 9, scope: !2594)
!2628 = !DILocation(line: 4287, column: 18, scope: !2594)
!2629 = !{!2630, !2343, i64 136}
!2630 = !{!"sigaction", !2344, i64 0, !2631, i64 8, !2343, i64 136, !2356, i64 144}
!2631 = !{!"", !2344, i64 0}
!2632 = !DILocation(line: 4289, column: 12, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2594, file: !63, line: 4289, column: 5)
!2634 = !DILocation(line: 4289, column: 10, scope: !2633)
!2635 = !DILocation(line: 4289, column: 17, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2633, file: !63, line: 4289, column: 5)
!2637 = !DILocation(line: 4289, column: 19, scope: !2636)
!2638 = !DILocation(line: 4289, column: 5, scope: !2633)
!2639 = !DILocation(line: 4290, column: 45, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2636, file: !63, line: 4290, column: 11)
!2641 = !DILocation(line: 4290, column: 41, scope: !2640)
!2642 = !DILocation(line: 4290, column: 11, scope: !2640)
!2643 = !DILocation(line: 4290, column: 11, scope: !2636)
!2644 = !DILocation(line: 4291, column: 24, scope: !2640)
!2645 = !DILocation(line: 4291, column: 20, scope: !2640)
!2646 = !DILocation(line: 4291, column: 9, scope: !2640)
!2647 = !DILocation(line: 4290, column: 47, scope: !2640)
!2648 = !DILocation(line: 4289, column: 29, scope: !2636)
!2649 = !DILocation(line: 4289, column: 5, scope: !2636)
!2650 = distinct !{!2650, !2638, !2651}
!2651 = !DILocation(line: 4291, column: 38, scope: !2633)
!2652 = !DILocation(line: 4301, column: 3, scope: !705)
!2653 = !DILocation(line: 4304, column: 3, scope: !705)
!2654 = !DILocation(line: 4306, column: 3, scope: !705)
!2655 = !DILocation(line: 4307, column: 8, scope: !705)
!2656 = !DILocation(line: 4307, column: 14, scope: !705)
!2657 = !{!2658, !2517, i64 0}
!2658 = !{!"keyfield", !2517, i64 0, !2517, i64 8, !2517, i64 16, !2517, i64 24, !2356, i64 32, !2356, i64 40, !2500, i64 48, !2500, i64 49, !2500, i64 50, !2500, i64 51, !2500, i64 52, !2500, i64 53, !2500, i64 54, !2500, i64 55, !2500, i64 56, !2500, i64 57, !2356, i64 64}
!2659 = !DILocation(line: 4309, column: 21, scope: !705)
!2660 = !DILocation(line: 4309, column: 11, scope: !705)
!2661 = !DILocation(line: 4309, column: 9, scope: !705)
!2662 = !DILocation(line: 4311, column: 3, scope: !705)
!2663 = !DILocalVariable(name: "oi", scope: !2664, file: !63, line: 4317, type: !5)
!2664 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4312, column: 5)
!2665 = !DILocation(line: 4317, column: 11, scope: !2664)
!2666 = !DILocation(line: 4319, column: 11, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2664, file: !63, line: 4319, column: 11)
!2668 = !DILocation(line: 4319, column: 13, scope: !2667)
!2669 = !DILocation(line: 4320, column: 11, scope: !2667)
!2670 = !DILocation(line: 4320, column: 15, scope: !2667)
!2671 = !DILocation(line: 4320, column: 31, scope: !2667)
!2672 = !DILocation(line: 4320, column: 34, scope: !2667)
!2673 = !DILocation(line: 4320, column: 41, scope: !2667)
!2674 = !DILocation(line: 4321, column: 15, scope: !2667)
!2675 = !DILocation(line: 4321, column: 21, scope: !2667)
!2676 = !DILocation(line: 4322, column: 21, scope: !2667)
!2677 = !DILocation(line: 4322, column: 26, scope: !2667)
!2678 = !DILocation(line: 4323, column: 21, scope: !2667)
!2679 = !DILocation(line: 4323, column: 24, scope: !2667)
!2680 = !DILocation(line: 4323, column: 34, scope: !2667)
!2681 = !DILocation(line: 4323, column: 31, scope: !2667)
!2682 = !DILocation(line: 4324, column: 21, scope: !2667)
!2683 = !DILocation(line: 4324, column: 24, scope: !2667)
!2684 = !DILocation(line: 4324, column: 29, scope: !2667)
!2685 = !DILocation(line: 4324, column: 40, scope: !2667)
!2686 = !DILocation(line: 4324, column: 47, scope: !2667)
!2687 = !DILocation(line: 4324, column: 50, scope: !2667)
!2688 = !DILocation(line: 4324, column: 55, scope: !2667)
!2689 = !DILocation(line: 4324, column: 66, scope: !2667)
!2690 = !DILocation(line: 4325, column: 21, scope: !2667)
!2691 = !DILocation(line: 4325, column: 25, scope: !2667)
!2692 = !DILocation(line: 4325, column: 30, scope: !2667)
!2693 = !DILocation(line: 4325, column: 41, scope: !2667)
!2694 = !DILocation(line: 4325, column: 44, scope: !2667)
!2695 = !DILocation(line: 4325, column: 51, scope: !2667)
!2696 = !DILocation(line: 4325, column: 58, scope: !2667)
!2697 = !DILocation(line: 4325, column: 55, scope: !2667)
!2698 = !DILocation(line: 4326, column: 11, scope: !2667)
!2699 = !DILocation(line: 4326, column: 33, scope: !2667)
!2700 = !DILocation(line: 4326, column: 39, scope: !2667)
!2701 = !DILocation(line: 4326, column: 20, scope: !2667)
!2702 = !DILocation(line: 4326, column: 18, scope: !2667)
!2703 = !DILocation(line: 4328, column: 15, scope: !2667)
!2704 = !DILocation(line: 4319, column: 11, scope: !2664)
!2705 = !DILocation(line: 4330, column: 15, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2707, file: !63, line: 4330, column: 15)
!2707 = distinct !DILexicalBlock(scope: !2667, file: !63, line: 4329, column: 9)
!2708 = !DILocation(line: 4330, column: 23, scope: !2706)
!2709 = !DILocation(line: 4330, column: 20, scope: !2706)
!2710 = !DILocation(line: 4330, column: 15, scope: !2707)
!2711 = !DILocation(line: 4331, column: 13, scope: !2706)
!2712 = !DILocation(line: 4332, column: 29, scope: !2707)
!2713 = !DILocation(line: 4332, column: 40, scope: !2707)
!2714 = !DILocation(line: 4332, column: 11, scope: !2707)
!2715 = !DILocation(line: 4332, column: 23, scope: !2707)
!2716 = !DILocation(line: 4332, column: 27, scope: !2707)
!2717 = !DILocation(line: 4333, column: 9, scope: !2707)
!2718 = !DILocation(line: 4334, column: 20, scope: !2667)
!2719 = !DILocation(line: 4334, column: 12, scope: !2667)
!2720 = !DILocation(line: 4337, column: 15, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2667, file: !63, line: 4335, column: 9)
!2722 = !DILocation(line: 4338, column: 15, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4338, column: 15)
!2724 = !DILocation(line: 4338, column: 25, scope: !2723)
!2725 = !DILocation(line: 4338, column: 15, scope: !2721)
!2726 = !DILocalVariable(name: "minus_pos_usage", scope: !2727, file: !63, line: 4340, type: !102)
!2727 = distinct !DILexicalBlock(scope: !2723, file: !63, line: 4339, column: 13)
!2728 = !DILocation(line: 4340, column: 20, scope: !2727)
!2729 = !DILocation(line: 4340, column: 39, scope: !2727)
!2730 = !DILocation(line: 4340, column: 49, scope: !2727)
!2731 = !DILocation(line: 4340, column: 46, scope: !2727)
!2732 = !DILocation(line: 4340, column: 54, scope: !2727)
!2733 = !DILocation(line: 4340, column: 57, scope: !2727)
!2734 = !DILocation(line: 4340, column: 62, scope: !2727)
!2735 = !DILocation(line: 4340, column: 73, scope: !2727)
!2736 = !DILocation(line: 4341, column: 39, scope: !2727)
!2737 = !DILocation(line: 4341, column: 42, scope: !2727)
!2738 = !DILocation(line: 0, scope: !2727)
!2739 = !DILocation(line: 4342, column: 36, scope: !2727)
!2740 = !DILocation(line: 4342, column: 52, scope: !2727)
!2741 = !DILocation(line: 4342, column: 56, scope: !2727)
!2742 = !DILocation(line: 4342, column: 55, scope: !2727)
!2743 = !DILocation(line: 4342, column: 33, scope: !2727)
!2744 = !DILocation(line: 4343, column: 19, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2727, file: !63, line: 4343, column: 19)
!2746 = !DILocation(line: 4343, column: 19, scope: !2727)
!2747 = !DILocation(line: 4347, column: 25, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2745, file: !63, line: 4344, column: 17)
!2749 = !DILocation(line: 4347, column: 23, scope: !2748)
!2750 = !DILocation(line: 4348, column: 42, scope: !2748)
!2751 = !DILocation(line: 4348, column: 49, scope: !2748)
!2752 = !DILocation(line: 4348, column: 55, scope: !2748)
!2753 = !DILocation(line: 4348, column: 60, scope: !2748)
!2754 = !DILocation(line: 4348, column: 23, scope: !2748)
!2755 = !DILocation(line: 4348, column: 21, scope: !2748)
!2756 = !DILocation(line: 4349, column: 23, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2748, file: !63, line: 4349, column: 23)
!2758 = !DILocation(line: 4349, column: 25, scope: !2757)
!2759 = !DILocation(line: 4349, column: 29, scope: !2757)
!2760 = !DILocation(line: 4349, column: 28, scope: !2757)
!2761 = !DILocation(line: 4349, column: 31, scope: !2757)
!2762 = !DILocation(line: 4349, column: 23, scope: !2748)
!2763 = !DILocation(line: 4350, column: 44, scope: !2757)
!2764 = !DILocation(line: 4350, column: 46, scope: !2757)
!2765 = !DILocation(line: 4350, column: 52, scope: !2757)
!2766 = !DILocation(line: 4350, column: 57, scope: !2757)
!2767 = !DILocation(line: 4350, column: 25, scope: !2757)
!2768 = !DILocation(line: 4350, column: 23, scope: !2757)
!2769 = !DILocation(line: 4350, column: 21, scope: !2757)
!2770 = !DILocation(line: 4351, column: 26, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2748, file: !63, line: 4351, column: 23)
!2772 = !DILocation(line: 4351, column: 31, scope: !2771)
!2773 = !DILocation(line: 4351, column: 37, scope: !2771)
!2774 = !DILocation(line: 4351, column: 40, scope: !2771)
!2775 = !DILocation(line: 4351, column: 45, scope: !2771)
!2776 = !{!2658, !2517, i64 8}
!2777 = !DILocation(line: 4351, column: 23, scope: !2748)
!2778 = !DILocation(line: 4352, column: 21, scope: !2771)
!2779 = !DILocation(line: 4352, column: 26, scope: !2771)
!2780 = !DILocation(line: 4352, column: 32, scope: !2771)
!2781 = !DILocation(line: 4353, column: 25, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2748, file: !63, line: 4353, column: 23)
!2783 = !DILocation(line: 4353, column: 27, scope: !2782)
!2784 = !DILocation(line: 4353, column: 45, scope: !2782)
!2785 = !DILocation(line: 4353, column: 48, scope: !2782)
!2786 = !DILocation(line: 4353, column: 31, scope: !2782)
!2787 = !DILocation(line: 4353, column: 30, scope: !2782)
!2788 = !DILocation(line: 4353, column: 23, scope: !2748)
!2789 = !DILocation(line: 4354, column: 25, scope: !2782)
!2790 = !DILocation(line: 4354, column: 21, scope: !2782)
!2791 = !DILocation(line: 4357, column: 27, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2793, file: !63, line: 4357, column: 27)
!2793 = distinct !DILexicalBlock(scope: !2782, file: !63, line: 4356, column: 21)
!2794 = !DILocation(line: 4357, column: 27, scope: !2793)
!2795 = !DILocalVariable(name: "optarg1", scope: !2796, file: !63, line: 4359, type: !87)
!2796 = distinct !DILexicalBlock(scope: !2792, file: !63, line: 4358, column: 25)
!2797 = !DILocation(line: 4359, column: 39, scope: !2796)
!2798 = !DILocation(line: 4359, column: 49, scope: !2796)
!2799 = !DILocation(line: 4359, column: 60, scope: !2796)
!2800 = !DILocation(line: 4360, column: 50, scope: !2796)
!2801 = !DILocation(line: 4360, column: 58, scope: !2796)
!2802 = !DILocation(line: 4360, column: 64, scope: !2796)
!2803 = !DILocation(line: 4360, column: 69, scope: !2796)
!2804 = !DILocation(line: 4360, column: 31, scope: !2796)
!2805 = !DILocation(line: 4360, column: 29, scope: !2796)
!2806 = !DILocation(line: 4365, column: 27, scope: !2796)
!2807 = !DILocation(line: 4366, column: 32, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2796, file: !63, line: 4366, column: 31)
!2809 = !DILocation(line: 4366, column: 31, scope: !2808)
!2810 = !DILocation(line: 4366, column: 34, scope: !2808)
!2811 = !DILocation(line: 4366, column: 31, scope: !2796)
!2812 = !DILocation(line: 4367, column: 52, scope: !2808)
!2813 = !DILocation(line: 4367, column: 54, scope: !2808)
!2814 = !DILocation(line: 4367, column: 60, scope: !2808)
!2815 = !DILocation(line: 4367, column: 65, scope: !2808)
!2816 = !DILocation(line: 4367, column: 33, scope: !2808)
!2817 = !DILocation(line: 4367, column: 31, scope: !2808)
!2818 = !DILocation(line: 4367, column: 29, scope: !2808)
!2819 = !DILocation(line: 4369, column: 32, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2796, file: !63, line: 4369, column: 31)
!2821 = !DILocation(line: 4369, column: 37, scope: !2820)
!2822 = !{!2658, !2517, i64 24}
!2823 = !DILocation(line: 4369, column: 43, scope: !2820)
!2824 = !DILocation(line: 4369, column: 46, scope: !2820)
!2825 = !DILocation(line: 4369, column: 51, scope: !2820)
!2826 = !{!2658, !2517, i64 16}
!2827 = !DILocation(line: 4369, column: 31, scope: !2796)
!2828 = !DILocation(line: 4377, column: 31, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2820, file: !63, line: 4370, column: 29)
!2830 = !DILocation(line: 4377, column: 36, scope: !2829)
!2831 = !DILocation(line: 4377, column: 41, scope: !2829)
!2832 = !DILocation(line: 4378, column: 29, scope: !2829)
!2833 = !DILocation(line: 4379, column: 46, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2796, file: !63, line: 4379, column: 31)
!2835 = !DILocation(line: 4379, column: 49, scope: !2834)
!2836 = !DILocation(line: 4379, column: 32, scope: !2834)
!2837 = !DILocation(line: 4379, column: 31, scope: !2834)
!2838 = !DILocation(line: 4379, column: 31, scope: !2796)
!2839 = !DILocation(line: 4380, column: 43, scope: !2834)
!2840 = !DILocation(line: 4380, column: 29, scope: !2834)
!2841 = !DILocation(line: 4382, column: 25, scope: !2796)
!2842 = !DILocation(line: 4383, column: 23, scope: !2793)
!2843 = !DILocation(line: 4383, column: 28, scope: !2793)
!2844 = !DILocation(line: 4383, column: 45, scope: !2793)
!2845 = !{!2658, !2500, i64 57}
!2846 = !DILocation(line: 4384, column: 34, scope: !2793)
!2847 = !DILocation(line: 4384, column: 23, scope: !2793)
!2848 = !DILocation(line: 4386, column: 17, scope: !2748)
!2849 = !DILocation(line: 4387, column: 13, scope: !2727)
!2850 = !DILocation(line: 4388, column: 17, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4388, column: 15)
!2852 = !DILocation(line: 4388, column: 15, scope: !2721)
!2853 = !DILocation(line: 4389, column: 31, scope: !2851)
!2854 = !DILocation(line: 4389, column: 13, scope: !2851)
!2855 = !DILocation(line: 4389, column: 25, scope: !2851)
!2856 = !DILocation(line: 4389, column: 29, scope: !2851)
!2857 = !DILocation(line: 4390, column: 11, scope: !2721)
!2858 = !DILocation(line: 4393, column: 15, scope: !2721)
!2859 = !DILocation(line: 4393, column: 13, scope: !2721)
!2860 = !DILocation(line: 4394, column: 11, scope: !2721)
!2861 = !DILocalVariable(name: "str", scope: !2862, file: !63, line: 4407, type: !268)
!2862 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4406, column: 11)
!2863 = !DILocation(line: 4407, column: 18, scope: !2862)
!2864 = !DILocation(line: 4408, column: 22, scope: !2862)
!2865 = !DILocation(line: 4408, column: 13, scope: !2862)
!2866 = !DILocation(line: 4408, column: 20, scope: !2862)
!2867 = !DILocation(line: 4409, column: 13, scope: !2862)
!2868 = !DILocation(line: 4409, column: 20, scope: !2862)
!2869 = !DILocation(line: 4410, column: 27, scope: !2862)
!2870 = !DILocation(line: 4410, column: 13, scope: !2862)
!2871 = !DILocation(line: 4412, column: 11, scope: !2721)
!2872 = !DILocation(line: 4415, column: 16, scope: !2721)
!2873 = !DILocation(line: 4416, column: 18, scope: !2721)
!2874 = !DILocation(line: 4415, column: 13, scope: !2721)
!2875 = !DILocation(line: 4418, column: 11, scope: !2721)
!2876 = !DILocation(line: 4421, column: 15, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4421, column: 15)
!2878 = !DILocation(line: 4421, column: 25, scope: !2877)
!2879 = !DILocation(line: 4421, column: 28, scope: !2877)
!2880 = !DILocation(line: 4421, column: 41, scope: !2877)
!2881 = !DILocation(line: 4421, column: 38, scope: !2877)
!2882 = !DILocation(line: 4421, column: 15, scope: !2721)
!2883 = !DILocation(line: 4422, column: 13, scope: !2877)
!2884 = !DILocation(line: 4423, column: 23, scope: !2721)
!2885 = !DILocation(line: 4423, column: 21, scope: !2721)
!2886 = !DILocation(line: 4424, column: 11, scope: !2721)
!2887 = !DILocation(line: 4427, column: 15, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4427, column: 15)
!2889 = !DILocation(line: 4427, column: 32, scope: !2888)
!2890 = !DILocation(line: 4427, column: 36, scope: !2888)
!2891 = !DILocation(line: 4427, column: 15, scope: !2721)
!2892 = !DILocation(line: 4428, column: 13, scope: !2888)
!2893 = !DILocation(line: 4429, column: 30, scope: !2721)
!2894 = !DILocation(line: 4429, column: 28, scope: !2721)
!2895 = !DILocation(line: 4430, column: 11, scope: !2721)
!2896 = !DILocation(line: 4433, column: 17, scope: !2721)
!2897 = !DILocation(line: 4434, column: 11, scope: !2721)
!2898 = !DILocation(line: 4437, column: 24, scope: !2721)
!2899 = !DILocation(line: 4437, column: 22, scope: !2721)
!2900 = !DILocation(line: 4438, column: 11, scope: !2721)
!2901 = !DILocation(line: 4441, column: 17, scope: !2721)
!2902 = !DILocation(line: 4441, column: 15, scope: !2721)
!2903 = !DILocation(line: 4444, column: 34, scope: !2721)
!2904 = !DILocation(line: 4444, column: 43, scope: !2721)
!2905 = !DILocation(line: 4444, column: 48, scope: !2721)
!2906 = !DILocation(line: 4444, column: 15, scope: !2721)
!2907 = !DILocation(line: 4444, column: 13, scope: !2721)
!2908 = !DILocation(line: 4446, column: 17, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4446, column: 15)
!2910 = !DILocation(line: 4446, column: 22, scope: !2909)
!2911 = !DILocation(line: 4446, column: 27, scope: !2909)
!2912 = !DILocation(line: 4446, column: 15, scope: !2721)
!2913 = !DILocation(line: 4449, column: 29, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2909, file: !63, line: 4447, column: 13)
!2915 = !DILocation(line: 4449, column: 15, scope: !2914)
!2916 = !DILocation(line: 4451, column: 16, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4451, column: 15)
!2918 = !DILocation(line: 4451, column: 15, scope: !2917)
!2919 = !DILocation(line: 4451, column: 18, scope: !2917)
!2920 = !DILocation(line: 4451, column: 15, scope: !2721)
!2921 = !DILocation(line: 4453, column: 38, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2917, file: !63, line: 4452, column: 13)
!2923 = !DILocation(line: 4453, column: 40, scope: !2922)
!2924 = !DILocation(line: 4453, column: 46, scope: !2922)
!2925 = !DILocation(line: 4453, column: 51, scope: !2922)
!2926 = !DILocation(line: 4453, column: 19, scope: !2922)
!2927 = !DILocation(line: 4453, column: 17, scope: !2922)
!2928 = !DILocation(line: 4455, column: 21, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2922, file: !63, line: 4455, column: 19)
!2930 = !DILocation(line: 4455, column: 26, scope: !2929)
!2931 = !DILocation(line: 4455, column: 31, scope: !2929)
!2932 = !DILocation(line: 4455, column: 19, scope: !2922)
!2933 = !DILocation(line: 4458, column: 33, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2929, file: !63, line: 4456, column: 17)
!2935 = !DILocation(line: 4458, column: 19, scope: !2934)
!2936 = !DILocation(line: 4460, column: 13, scope: !2922)
!2937 = !DILocation(line: 4461, column: 18, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4461, column: 15)
!2939 = !DILocation(line: 4461, column: 23, scope: !2938)
!2940 = !DILocation(line: 4461, column: 29, scope: !2938)
!2941 = !DILocation(line: 4461, column: 32, scope: !2938)
!2942 = !DILocation(line: 4461, column: 37, scope: !2938)
!2943 = !DILocation(line: 4461, column: 15, scope: !2721)
!2944 = !DILocation(line: 4462, column: 13, scope: !2938)
!2945 = !DILocation(line: 4462, column: 18, scope: !2938)
!2946 = !DILocation(line: 4462, column: 24, scope: !2938)
!2947 = !DILocation(line: 4463, column: 29, scope: !2721)
!2948 = !DILocation(line: 4463, column: 32, scope: !2721)
!2949 = !DILocation(line: 4463, column: 15, scope: !2721)
!2950 = !DILocation(line: 4463, column: 13, scope: !2721)
!2951 = !DILocation(line: 4464, column: 16, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4464, column: 15)
!2953 = !DILocation(line: 4464, column: 15, scope: !2952)
!2954 = !DILocation(line: 4464, column: 18, scope: !2952)
!2955 = !DILocation(line: 4464, column: 15, scope: !2721)
!2956 = !DILocation(line: 4466, column: 15, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2952, file: !63, line: 4465, column: 13)
!2958 = !DILocation(line: 4466, column: 20, scope: !2957)
!2959 = !DILocation(line: 4466, column: 26, scope: !2957)
!2960 = !DILocation(line: 4467, column: 15, scope: !2957)
!2961 = !DILocation(line: 4467, column: 20, scope: !2957)
!2962 = !DILocation(line: 4467, column: 26, scope: !2957)
!2963 = !DILocation(line: 4468, column: 13, scope: !2957)
!2964 = !DILocation(line: 4472, column: 38, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2952, file: !63, line: 4470, column: 13)
!2966 = !DILocation(line: 4472, column: 40, scope: !2965)
!2967 = !DILocation(line: 4472, column: 46, scope: !2965)
!2968 = !DILocation(line: 4472, column: 51, scope: !2965)
!2969 = !DILocation(line: 4472, column: 19, scope: !2965)
!2970 = !DILocation(line: 4472, column: 17, scope: !2965)
!2971 = !DILocation(line: 4474, column: 21, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2965, file: !63, line: 4474, column: 19)
!2973 = !DILocation(line: 4474, column: 26, scope: !2972)
!2974 = !DILocation(line: 4474, column: 31, scope: !2972)
!2975 = !DILocation(line: 4474, column: 19, scope: !2965)
!2976 = !DILocation(line: 4477, column: 33, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2972, file: !63, line: 4475, column: 17)
!2978 = !DILocation(line: 4477, column: 19, scope: !2977)
!2979 = !DILocation(line: 4479, column: 20, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2965, file: !63, line: 4479, column: 19)
!2981 = !DILocation(line: 4479, column: 19, scope: !2980)
!2982 = !DILocation(line: 4479, column: 22, scope: !2980)
!2983 = !DILocation(line: 4479, column: 19, scope: !2965)
!2984 = !DILocation(line: 4481, column: 42, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2980, file: !63, line: 4480, column: 17)
!2986 = !DILocation(line: 4481, column: 44, scope: !2985)
!2987 = !DILocation(line: 4481, column: 50, scope: !2985)
!2988 = !DILocation(line: 4481, column: 55, scope: !2985)
!2989 = !DILocation(line: 4481, column: 23, scope: !2985)
!2990 = !DILocation(line: 4481, column: 21, scope: !2985)
!2991 = !DILocation(line: 4483, column: 17, scope: !2985)
!2992 = !DILocation(line: 4484, column: 33, scope: !2965)
!2993 = !DILocation(line: 4484, column: 36, scope: !2965)
!2994 = !DILocation(line: 4484, column: 19, scope: !2965)
!2995 = !DILocation(line: 4484, column: 17, scope: !2965)
!2996 = !DILocation(line: 4486, column: 16, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4486, column: 15)
!2998 = !DILocation(line: 4486, column: 15, scope: !2997)
!2999 = !DILocation(line: 4486, column: 15, scope: !2721)
!3000 = !DILocation(line: 4487, column: 27, scope: !2997)
!3001 = !DILocation(line: 4487, column: 13, scope: !2997)
!3002 = !DILocation(line: 4488, column: 22, scope: !2721)
!3003 = !DILocation(line: 4488, column: 11, scope: !2721)
!3004 = !DILocation(line: 4489, column: 11, scope: !2721)
!3005 = !DILocation(line: 4492, column: 21, scope: !2721)
!3006 = !DILocation(line: 4493, column: 11, scope: !2721)
!3007 = !DILocation(line: 4496, column: 27, scope: !2721)
!3008 = !DILocation(line: 4496, column: 31, scope: !2721)
!3009 = !DILocation(line: 4496, column: 34, scope: !2721)
!3010 = !DILocation(line: 4496, column: 11, scope: !2721)
!3011 = !DILocation(line: 4497, column: 11, scope: !2721)
!3012 = !DILocation(line: 4500, column: 15, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4500, column: 15)
!3014 = !DILocation(line: 4500, column: 23, scope: !3013)
!3015 = !DILocation(line: 4500, column: 27, scope: !3013)
!3016 = !DILocation(line: 4500, column: 15, scope: !2721)
!3017 = !DILocation(line: 4501, column: 13, scope: !3013)
!3018 = !DILocation(line: 4502, column: 21, scope: !2721)
!3019 = !DILocation(line: 4502, column: 19, scope: !2721)
!3020 = !DILocation(line: 4503, column: 11, scope: !2721)
!3021 = !DILocation(line: 4506, column: 15, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4506, column: 15)
!3023 = !DILocation(line: 4506, column: 29, scope: !3022)
!3024 = !DILocation(line: 4506, column: 33, scope: !3022)
!3025 = !DILocation(line: 4506, column: 15, scope: !2721)
!3026 = !DILocation(line: 4507, column: 13, scope: !3022)
!3027 = !DILocation(line: 4508, column: 27, scope: !2721)
!3028 = !DILocation(line: 4508, column: 25, scope: !2721)
!3029 = !DILocation(line: 4509, column: 11, scope: !2721)
!3030 = !DILocation(line: 4512, column: 18, scope: !2721)
!3031 = !DILocation(line: 4513, column: 11, scope: !2721)
!3032 = !DILocation(line: 4516, column: 30, scope: !2721)
!3033 = !DILocation(line: 4516, column: 34, scope: !2721)
!3034 = !DILocation(line: 4516, column: 37, scope: !2721)
!3035 = !DILocation(line: 4516, column: 11, scope: !2721)
!3036 = !DILocation(line: 4517, column: 11, scope: !2721)
!3037 = !DILocalVariable(name: "newtab", scope: !3038, file: !63, line: 4521, type: !8)
!3038 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4520, column: 11)
!3039 = !DILocation(line: 4521, column: 18, scope: !3038)
!3040 = !DILocation(line: 4521, column: 27, scope: !3038)
!3041 = !DILocation(line: 4522, column: 19, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !63, line: 4522, column: 17)
!3043 = !DILocation(line: 4522, column: 17, scope: !3038)
!3044 = !DILocation(line: 4523, column: 15, scope: !3042)
!3045 = !DILocation(line: 4524, column: 17, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3038, file: !63, line: 4524, column: 17)
!3047 = !DILocation(line: 4524, column: 17, scope: !3038)
!3048 = !DILocation(line: 4526, column: 21, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !63, line: 4526, column: 21)
!3050 = distinct !DILexicalBlock(scope: !3046, file: !63, line: 4525, column: 15)
!3051 = !DILocation(line: 4526, column: 21, scope: !3050)
!3052 = !DILocation(line: 4527, column: 26, scope: !3049)
!3053 = !DILocation(line: 4527, column: 19, scope: !3049)
!3054 = !DILocation(line: 4534, column: 21, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3049, file: !63, line: 4529, column: 19)
!3056 = !DILocation(line: 4537, column: 15, scope: !3050)
!3057 = !DILocation(line: 4538, column: 17, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3038, file: !63, line: 4538, column: 17)
!3059 = !DILocation(line: 4538, column: 21, scope: !3058)
!3060 = !DILocation(line: 4538, column: 36, scope: !3058)
!3061 = !DILocation(line: 4538, column: 39, scope: !3058)
!3062 = !DILocation(line: 4538, column: 46, scope: !3058)
!3063 = !DILocation(line: 4538, column: 43, scope: !3058)
!3064 = !DILocation(line: 4538, column: 17, scope: !3038)
!3065 = !DILocation(line: 4539, column: 15, scope: !3058)
!3066 = !DILocation(line: 4540, column: 19, scope: !3038)
!3067 = !DILocation(line: 4540, column: 17, scope: !3038)
!3068 = !DILocation(line: 4542, column: 11, scope: !2721)
!3069 = !DILocation(line: 4545, column: 25, scope: !2721)
!3070 = !DILocation(line: 4545, column: 11, scope: !2721)
!3071 = !DILocation(line: 4546, column: 11, scope: !2721)
!3072 = !DILocation(line: 4549, column: 40, scope: !2721)
!3073 = !DILocation(line: 4549, column: 44, scope: !2721)
!3074 = !DILocation(line: 4549, column: 47, scope: !2721)
!3075 = !DILocation(line: 4549, column: 22, scope: !2721)
!3076 = !DILocation(line: 4549, column: 20, scope: !2721)
!3077 = !DILocation(line: 4550, column: 11, scope: !2721)
!3078 = !DILocation(line: 4553, column: 18, scope: !2721)
!3079 = !DILocation(line: 4554, column: 11, scope: !2721)
!3080 = !DILocation(line: 4567, column: 15, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 4567, column: 15)
!3082 = !DILocation(line: 4567, column: 25, scope: !3081)
!3083 = !DILocation(line: 4567, column: 30, scope: !3081)
!3084 = !DILocation(line: 4567, column: 37, scope: !3081)
!3085 = !DILocation(line: 4567, column: 22, scope: !3081)
!3086 = !DILocation(line: 4567, column: 15, scope: !2721)
!3087 = !DILocalVariable(name: "p", scope: !3088, file: !63, line: 4569, type: !87)
!3088 = distinct !DILexicalBlock(scope: !3081, file: !63, line: 4568, column: 13)
!3089 = !DILocation(line: 4569, column: 27, scope: !3088)
!3090 = !DILocation(line: 4570, column: 24, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3088, file: !63, line: 4570, column: 15)
!3092 = !DILocation(line: 4570, column: 22, scope: !3091)
!3093 = !DILocation(line: 4570, column: 20, scope: !3091)
!3094 = !DILocation(line: 4570, column: 32, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3091, file: !63, line: 4570, column: 15)
!3096 = !DILocation(line: 4570, column: 15, scope: !3091)
!3097 = !DILocation(line: 4571, column: 17, scope: !3095)
!3098 = !DILocation(line: 4570, column: 47, scope: !3095)
!3099 = !DILocation(line: 4570, column: 15, scope: !3095)
!3100 = distinct !{!3100, !3096, !3101}
!3101 = !DILocation(line: 4571, column: 17, scope: !3091)
!3102 = !DILocation(line: 4572, column: 27, scope: !3088)
!3103 = !DILocation(line: 4572, column: 26, scope: !3088)
!3104 = !DILocation(line: 4572, column: 29, scope: !3088)
!3105 = !DILocation(line: 4572, column: 22, scope: !3088)
!3106 = !DILocation(line: 4573, column: 13, scope: !3088)
!3107 = !DILocation(line: 4574, column: 11, scope: !2721)
!3108 = !DILocation(line: 4577, column: 19, scope: !2721)
!3109 = !DILocation(line: 4578, column: 11, scope: !2721)
!3110 = !DILocation(line: 4580, column: 9, scope: !2721)
!3111 = !DILocation(line: 4582, column: 9, scope: !2721)
!3112 = !DILocation(line: 4585, column: 11, scope: !2721)
!3113 = distinct !{!3113, !2662, !3114}
!3114 = !DILocation(line: 4587, column: 5, scope: !705)
!3115 = !DILocation(line: 4589, column: 7, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4589, column: 7)
!3117 = !DILocation(line: 4589, column: 7, scope: !705)
!3118 = !DILocation(line: 4593, column: 11, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3120, file: !63, line: 4593, column: 11)
!3120 = distinct !DILexicalBlock(scope: !3116, file: !63, line: 4590, column: 5)
!3121 = !DILocation(line: 4593, column: 11, scope: !3120)
!3122 = !DILocation(line: 4595, column: 24, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !63, line: 4594, column: 9)
!3124 = !DILocation(line: 4595, column: 47, scope: !3123)
!3125 = !DILocation(line: 4595, column: 11, scope: !3123)
!3126 = !DILocation(line: 4596, column: 20, scope: !3123)
!3127 = !DILocation(line: 4597, column: 20, scope: !3123)
!3128 = !DILocation(line: 4596, column: 11, scope: !3123)
!3129 = !DILocation(line: 4598, column: 11, scope: !3123)
!3130 = !DILocalVariable(name: "stream", scope: !3120, file: !63, line: 4601, type: !277)
!3131 = !DILocation(line: 4601, column: 13, scope: !3120)
!3132 = !DILocation(line: 4601, column: 30, scope: !3120)
!3133 = !DILocation(line: 4601, column: 22, scope: !3120)
!3134 = !DILocation(line: 4603, column: 7, scope: !3120)
!3135 = !DILocation(line: 4605, column: 26, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3120, file: !63, line: 4605, column: 11)
!3137 = !DILocation(line: 4605, column: 13, scope: !3136)
!3138 = !DILocation(line: 4605, column: 11, scope: !3120)
!3139 = !DILocation(line: 4606, column: 9, scope: !3136)
!3140 = !DILocation(line: 4608, column: 16, scope: !3120)
!3141 = !DILocation(line: 4608, column: 24, scope: !3120)
!3142 = !DILocation(line: 4608, column: 7, scope: !3120)
!3143 = !DILocation(line: 4610, column: 15, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3120, file: !63, line: 4610, column: 11)
!3145 = !{!3146, !2517, i64 0}
!3146 = !{!"Tokens", !2517, i64 0, !2356, i64 8, !2356, i64 16, !3147, i64 24, !3147, i64 112, !3147, i64 200}
!3147 = !{!"obstack", !2517, i64 0, !2356, i64 8, !2356, i64 16, !2356, i64 24, !2356, i64 32, !2344, i64 40, !2517, i64 48, !2344, i64 56, !2344, i64 64, !2356, i64 72, !2343, i64 80, !2343, i64 80, !2343, i64 80}
!3148 = !DILocation(line: 4610, column: 11, scope: !3144)
!3149 = !DILocation(line: 4610, column: 11, scope: !3120)
!3150 = !DILocation(line: 4612, column: 17, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3144, file: !63, line: 4611, column: 9)
!3152 = !DILocation(line: 4612, column: 11, scope: !3151)
!3153 = !DILocation(line: 4613, column: 23, scope: !3151)
!3154 = !{!3146, !2356, i64 8}
!3155 = !DILocation(line: 4613, column: 17, scope: !3151)
!3156 = !DILocation(line: 4614, column: 24, scope: !3151)
!3157 = !DILocation(line: 4614, column: 18, scope: !3151)
!3158 = !DILocalVariable(name: "i", scope: !3159, file: !63, line: 4615, type: !52)
!3159 = distinct !DILexicalBlock(scope: !3151, file: !63, line: 4615, column: 11)
!3160 = !DILocation(line: 4615, column: 23, scope: !3159)
!3161 = !DILocation(line: 4615, column: 16, scope: !3159)
!3162 = !DILocation(line: 4615, column: 30, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3159, file: !63, line: 4615, column: 11)
!3164 = !DILocation(line: 4615, column: 34, scope: !3163)
!3165 = !DILocation(line: 4615, column: 32, scope: !3163)
!3166 = !DILocation(line: 4615, column: 11, scope: !3159)
!3167 = !DILocation(line: 4617, column: 19, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !63, line: 4617, column: 19)
!3169 = distinct !DILexicalBlock(scope: !3163, file: !63, line: 4616, column: 13)
!3170 = !DILocation(line: 4617, column: 19, scope: !3169)
!3171 = !DILocation(line: 4618, column: 17, scope: !3168)
!3172 = !DILocation(line: 4621, column: 24, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3168, file: !63, line: 4621, column: 24)
!3174 = !DILocation(line: 4621, column: 30, scope: !3173)
!3175 = !DILocation(line: 4621, column: 36, scope: !3173)
!3176 = !DILocation(line: 4621, column: 24, scope: !3168)
!3177 = !DILocalVariable(name: "file_number", scope: !3178, file: !63, line: 4626, type: !54)
!3178 = distinct !DILexicalBlock(scope: !3173, file: !63, line: 4622, column: 17)
!3179 = !DILocation(line: 4626, column: 37, scope: !3178)
!3180 = !DILocation(line: 4626, column: 51, scope: !3178)
!3181 = !DILocation(line: 4626, column: 53, scope: !3178)
!3182 = !DILocation(line: 4627, column: 19, scope: !3178)
!3183 = !DILocation(line: 4631, column: 13, scope: !3169)
!3184 = !DILocation(line: 4615, column: 43, scope: !3163)
!3185 = !DILocation(line: 4615, column: 11, scope: !3163)
!3186 = distinct !{!3186, !3166, !3187}
!3187 = !DILocation(line: 4631, column: 13, scope: !3159)
!3188 = !DILocation(line: 4632, column: 9, scope: !3151)
!3189 = !DILocation(line: 4634, column: 9, scope: !3144)
!3190 = !DILocation(line: 4636, column: 5, scope: !3120)
!3191 = !DILocation(line: 4639, column: 14, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4639, column: 3)
!3193 = !DILocation(line: 4639, column: 12, scope: !3192)
!3194 = !DILocation(line: 4639, column: 8, scope: !3192)
!3195 = !DILocation(line: 4639, column: 23, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3192, file: !63, line: 4639, column: 3)
!3197 = !DILocation(line: 4639, column: 3, scope: !3192)
!3198 = !DILocation(line: 4641, column: 32, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !63, line: 4641, column: 11)
!3200 = distinct !DILexicalBlock(scope: !3196, file: !63, line: 4640, column: 5)
!3201 = !DILocation(line: 4641, column: 11, scope: !3199)
!3202 = !DILocation(line: 4641, column: 37, scope: !3199)
!3203 = !DILocation(line: 4641, column: 41, scope: !3199)
!3204 = !DILocation(line: 4641, column: 46, scope: !3199)
!3205 = !{!2658, !2500, i64 55}
!3206 = !DILocation(line: 4641, column: 11, scope: !3200)
!3207 = !DILocation(line: 4643, column: 30, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3199, file: !63, line: 4642, column: 9)
!3209 = !{!2658, !2356, i64 32}
!3210 = !DILocation(line: 4643, column: 11, scope: !3208)
!3211 = !DILocation(line: 4643, column: 16, scope: !3208)
!3212 = !DILocation(line: 4643, column: 23, scope: !3208)
!3213 = !DILocation(line: 4644, column: 33, scope: !3208)
!3214 = !{!2658, !2356, i64 40}
!3215 = !DILocation(line: 4644, column: 11, scope: !3208)
!3216 = !DILocation(line: 4644, column: 16, scope: !3208)
!3217 = !DILocation(line: 4644, column: 26, scope: !3208)
!3218 = !DILocation(line: 4645, column: 35, scope: !3208)
!3219 = !{!2658, !2500, i64 48}
!3220 = !DILocation(line: 4645, column: 11, scope: !3208)
!3221 = !DILocation(line: 4645, column: 16, scope: !3208)
!3222 = !DILocation(line: 4645, column: 28, scope: !3208)
!3223 = !DILocation(line: 4646, column: 35, scope: !3208)
!3224 = !{!2658, !2500, i64 49}
!3225 = !DILocation(line: 4646, column: 11, scope: !3208)
!3226 = !DILocation(line: 4646, column: 16, scope: !3208)
!3227 = !DILocation(line: 4646, column: 28, scope: !3208)
!3228 = !DILocation(line: 4647, column: 29, scope: !3208)
!3229 = !{!2658, !2500, i64 54}
!3230 = !DILocation(line: 4647, column: 11, scope: !3208)
!3231 = !DILocation(line: 4647, column: 16, scope: !3208)
!3232 = !DILocation(line: 4647, column: 22, scope: !3208)
!3233 = !DILocation(line: 4648, column: 31, scope: !3208)
!3234 = !{!2658, !2500, i64 50}
!3235 = !DILocation(line: 4648, column: 11, scope: !3208)
!3236 = !DILocation(line: 4648, column: 16, scope: !3208)
!3237 = !DILocation(line: 4648, column: 24, scope: !3208)
!3238 = !DILocation(line: 4649, column: 39, scope: !3208)
!3239 = !{!2658, !2500, i64 52}
!3240 = !DILocation(line: 4649, column: 11, scope: !3208)
!3241 = !DILocation(line: 4649, column: 16, scope: !3208)
!3242 = !DILocation(line: 4649, column: 32, scope: !3208)
!3243 = !DILocation(line: 4650, column: 37, scope: !3208)
!3244 = !{!2658, !2500, i64 53}
!3245 = !DILocation(line: 4650, column: 11, scope: !3208)
!3246 = !DILocation(line: 4650, column: 16, scope: !3208)
!3247 = !DILocation(line: 4650, column: 30, scope: !3208)
!3248 = !DILocation(line: 4651, column: 31, scope: !3208)
!3249 = !{!2658, !2500, i64 56}
!3250 = !DILocation(line: 4651, column: 11, scope: !3208)
!3251 = !DILocation(line: 4651, column: 16, scope: !3208)
!3252 = !DILocation(line: 4651, column: 24, scope: !3208)
!3253 = !DILocation(line: 4652, column: 30, scope: !3208)
!3254 = !{!2658, !2500, i64 51}
!3255 = !DILocation(line: 4652, column: 11, scope: !3208)
!3256 = !DILocation(line: 4652, column: 16, scope: !3208)
!3257 = !DILocation(line: 4652, column: 23, scope: !3208)
!3258 = !DILocation(line: 4653, column: 31, scope: !3208)
!3259 = !DILocation(line: 4653, column: 11, scope: !3208)
!3260 = !DILocation(line: 4653, column: 16, scope: !3208)
!3261 = !DILocation(line: 4653, column: 24, scope: !3208)
!3262 = !DILocation(line: 4654, column: 9, scope: !3208)
!3263 = !DILocation(line: 4656, column: 22, scope: !3200)
!3264 = !DILocation(line: 4656, column: 27, scope: !3200)
!3265 = !DILocation(line: 4656, column: 19, scope: !3200)
!3266 = !DILocation(line: 4657, column: 5, scope: !3200)
!3267 = !DILocation(line: 4639, column: 34, scope: !3196)
!3268 = !DILocation(line: 4639, column: 39, scope: !3196)
!3269 = !{!2658, !2356, i64 64}
!3270 = !DILocation(line: 4639, column: 32, scope: !3196)
!3271 = !DILocation(line: 4639, column: 3, scope: !3196)
!3272 = distinct !{!3272, !3197, !3273}
!3273 = !DILocation(line: 4657, column: 5, scope: !3192)
!3274 = !DILocation(line: 4659, column: 8, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4659, column: 7)
!3276 = !DILocation(line: 4659, column: 16, scope: !3275)
!3277 = !DILocation(line: 4659, column: 20, scope: !3275)
!3278 = !DILocation(line: 4659, column: 7, scope: !705)
!3279 = !DILocation(line: 4661, column: 17, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3275, file: !63, line: 4660, column: 5)
!3281 = !DILocation(line: 4662, column: 7, scope: !3280)
!3282 = !DILocation(line: 4663, column: 27, scope: !3280)
!3283 = !DILocation(line: 4663, column: 22, scope: !3280)
!3284 = !DILocation(line: 4663, column: 19, scope: !3280)
!3285 = !DILocation(line: 4664, column: 5, scope: !3280)
!3286 = !DILocation(line: 4666, column: 3, scope: !705)
!3287 = !DILocation(line: 4668, column: 7, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4668, column: 7)
!3289 = !DILocation(line: 4668, column: 7, scope: !705)
!3290 = !DILocation(line: 4670, column: 11, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !63, line: 4670, column: 11)
!3292 = distinct !DILexicalBlock(scope: !3288, file: !63, line: 4669, column: 5)
!3293 = !DILocation(line: 4670, column: 21, scope: !3291)
!3294 = !DILocation(line: 4670, column: 24, scope: !3291)
!3295 = !DILocation(line: 4670, column: 11, scope: !3292)
!3296 = !DILocation(line: 4673, column: 22, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3291, file: !63, line: 4671, column: 9)
!3298 = !DILocation(line: 4673, column: 34, scope: !3297)
!3299 = !DILocation(line: 4673, column: 21, scope: !3297)
!3300 = !DILocation(line: 4673, column: 19, scope: !3297)
!3301 = !DILocation(line: 4674, column: 11, scope: !3297)
!3302 = !DILocation(line: 4682, column: 11, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3292, file: !63, line: 4682, column: 11)
!3304 = !DILocation(line: 4682, column: 11, scope: !3292)
!3305 = !DILocation(line: 4683, column: 24, scope: !3303)
!3306 = !DILocation(line: 4683, column: 22, scope: !3303)
!3307 = !DILocation(line: 4683, column: 21, scope: !3303)
!3308 = !DILocation(line: 4683, column: 19, scope: !3303)
!3309 = !DILocation(line: 4683, column: 9, scope: !3303)
!3310 = !DILocation(line: 4684, column: 13, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3292, file: !63, line: 4684, column: 11)
!3312 = !DILocation(line: 4684, column: 11, scope: !3292)
!3313 = !DILocation(line: 4685, column: 30, scope: !3311)
!3314 = !DILocation(line: 4685, column: 11, scope: !3311)
!3315 = !DILocation(line: 4686, column: 11, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3292, file: !63, line: 4686, column: 11)
!3317 = !DILocation(line: 4686, column: 11, scope: !3292)
!3318 = !DILocation(line: 4687, column: 22, scope: !3316)
!3319 = !DILocation(line: 4688, column: 23, scope: !3316)
!3320 = !DILocation(line: 4688, column: 16, scope: !3316)
!3321 = !DILocation(line: 4687, column: 9, scope: !3316)
!3322 = !DILocation(line: 4691, column: 16, scope: !3316)
!3323 = !DILocation(line: 4690, column: 9, scope: !3316)
!3324 = !DILocation(line: 4693, column: 28, scope: !3292)
!3325 = !DILocation(line: 4693, column: 7, scope: !3292)
!3326 = !DILocation(line: 4694, column: 5, scope: !3292)
!3327 = !DILocation(line: 4696, column: 18, scope: !705)
!3328 = !DILocation(line: 4696, column: 11, scope: !705)
!3329 = !DILocation(line: 4698, column: 7, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4698, column: 7)
!3331 = !DILocation(line: 4698, column: 7, scope: !705)
!3332 = !DILocation(line: 4699, column: 28, scope: !3330)
!3333 = !DILocation(line: 4699, column: 5, scope: !3330)
!3334 = !DILocation(line: 4701, column: 7, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4701, column: 7)
!3336 = !DILocation(line: 4701, column: 22, scope: !3335)
!3337 = !DILocation(line: 4701, column: 7, scope: !705)
!3338 = !DILocalVariable(name: "tmp_dir", scope: !3339, file: !63, line: 4703, type: !87)
!3339 = distinct !DILexicalBlock(scope: !3335, file: !63, line: 4702, column: 5)
!3340 = !DILocation(line: 4703, column: 19, scope: !3339)
!3341 = !DILocation(line: 4703, column: 29, scope: !3339)
!3342 = !DILocation(line: 4704, column: 21, scope: !3339)
!3343 = !DILocation(line: 4704, column: 31, scope: !3339)
!3344 = !DILocation(line: 4704, column: 7, scope: !3339)
!3345 = !DILocation(line: 4705, column: 5, scope: !3339)
!3346 = !DILocation(line: 4707, column: 7, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4707, column: 7)
!3348 = !DILocation(line: 4707, column: 14, scope: !3347)
!3349 = !DILocation(line: 4707, column: 7, scope: !705)
!3350 = !DILocation(line: 4709, column: 14, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3347, file: !63, line: 4708, column: 5)
!3352 = !DILocation(line: 4710, column: 13, scope: !3351)
!3353 = !DILocation(line: 4710, column: 7, scope: !3351)
!3354 = !DILocation(line: 4711, column: 15, scope: !3351)
!3355 = !DILocation(line: 4711, column: 13, scope: !3351)
!3356 = !DILocation(line: 4712, column: 8, scope: !3351)
!3357 = !DILocation(line: 4712, column: 14, scope: !3351)
!3358 = !DILocation(line: 4713, column: 5, scope: !3351)
!3359 = !DILocation(line: 4717, column: 11, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4717, column: 7)
!3361 = !DILocation(line: 4717, column: 9, scope: !3360)
!3362 = !DILocation(line: 4717, column: 7, scope: !705)
!3363 = !DILocation(line: 4718, column: 17, scope: !3360)
!3364 = !DILocation(line: 4718, column: 15, scope: !3360)
!3365 = !DILocation(line: 4718, column: 5, scope: !3360)
!3366 = !DILocation(line: 4720, column: 7, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4720, column: 7)
!3368 = !DILocation(line: 4720, column: 7, scope: !705)
!3369 = !DILocation(line: 4722, column: 11, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !63, line: 4722, column: 11)
!3371 = distinct !DILexicalBlock(scope: !3367, file: !63, line: 4721, column: 5)
!3372 = !DILocation(line: 4722, column: 18, scope: !3370)
!3373 = !DILocation(line: 4722, column: 11, scope: !3371)
!3374 = !DILocation(line: 4723, column: 9, scope: !3370)
!3375 = !DILocation(line: 4726, column: 11, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3371, file: !63, line: 4726, column: 11)
!3377 = !DILocation(line: 4726, column: 11, scope: !3371)
!3378 = !DILocation(line: 4729, column: 21, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3376, file: !63, line: 4727, column: 9)
!3380 = !DILocation(line: 4729, column: 19, scope: !3379)
!3381 = !DILocation(line: 4730, column: 11, scope: !3379)
!3382 = !DILocation(line: 4735, column: 21, scope: !3371)
!3383 = !DILocation(line: 4735, column: 31, scope: !3371)
!3384 = !DILocation(line: 4735, column: 14, scope: !3371)
!3385 = !DILocation(line: 4735, column: 7, scope: !3371)
!3386 = !DILocation(line: 4739, column: 17, scope: !705)
!3387 = !DILocation(line: 4739, column: 24, scope: !705)
!3388 = !DILocation(line: 4739, column: 3, scope: !705)
!3389 = !DILocation(line: 4742, column: 17, scope: !705)
!3390 = !DILocation(line: 4742, column: 3, scope: !705)
!3391 = !DILocation(line: 4744, column: 7, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4744, column: 7)
!3393 = !DILocation(line: 4744, column: 7, scope: !705)
!3394 = !DILocalVariable(name: "sortfiles", scope: !3395, file: !63, line: 4746, type: !284)
!3395 = distinct !DILexicalBlock(scope: !3392, file: !63, line: 4745, column: 5)
!3396 = !DILocation(line: 4746, column: 24, scope: !3395)
!3397 = !DILocation(line: 4746, column: 45, scope: !3395)
!3398 = !DILocation(line: 4746, column: 36, scope: !3395)
!3399 = !DILocalVariable(name: "i", scope: !3400, file: !63, line: 4748, type: !52)
!3400 = distinct !DILexicalBlock(scope: !3395, file: !63, line: 4748, column: 7)
!3401 = !DILocation(line: 4748, column: 19, scope: !3400)
!3402 = !DILocation(line: 4748, column: 12, scope: !3400)
!3403 = !DILocation(line: 4748, column: 26, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !63, line: 4748, column: 7)
!3405 = !DILocation(line: 4748, column: 30, scope: !3404)
!3406 = !DILocation(line: 4748, column: 28, scope: !3404)
!3407 = !DILocation(line: 4748, column: 7, scope: !3400)
!3408 = !DILocation(line: 4749, column: 29, scope: !3404)
!3409 = !DILocation(line: 4749, column: 35, scope: !3404)
!3410 = !DILocation(line: 4749, column: 9, scope: !3404)
!3411 = !DILocation(line: 4749, column: 19, scope: !3404)
!3412 = !DILocation(line: 4749, column: 22, scope: !3404)
!3413 = !DILocation(line: 4749, column: 27, scope: !3404)
!3414 = !{!3415, !2356, i64 0}
!3415 = !{!"sortfile", !2356, i64 0, !2356, i64 8}
!3416 = !DILocation(line: 4748, column: 38, scope: !3404)
!3417 = !DILocation(line: 4748, column: 7, scope: !3404)
!3418 = distinct !{!3418, !3407, !3419}
!3419 = !DILocation(line: 4749, column: 36, scope: !3400)
!3420 = !DILocation(line: 4751, column: 14, scope: !3395)
!3421 = !DILocation(line: 4751, column: 28, scope: !3395)
!3422 = !DILocation(line: 4751, column: 36, scope: !3395)
!3423 = !DILocation(line: 4751, column: 7, scope: !3395)
!3424 = !DILocation(line: 4753, column: 5, scope: !3395)
!3425 = !DILocation(line: 4756, column: 12, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !63, line: 4756, column: 11)
!3427 = distinct !DILexicalBlock(scope: !3392, file: !63, line: 4755, column: 5)
!3428 = !DILocation(line: 4756, column: 11, scope: !3427)
!3429 = !DILocalVariable(name: "np", scope: !3430, file: !63, line: 4758, type: !54)
!3430 = distinct !DILexicalBlock(scope: !3426, file: !63, line: 4757, column: 9)
!3431 = !DILocation(line: 4758, column: 29, scope: !3430)
!3432 = !DILocation(line: 4758, column: 34, scope: !3430)
!3433 = !DILocation(line: 4759, column: 22, scope: !3430)
!3434 = !DILocation(line: 4759, column: 20, scope: !3430)
!3435 = !DILocation(line: 4760, column: 9, scope: !3430)
!3436 = !DILocalVariable(name: "nthreads_max", scope: !3427, file: !63, line: 4763, type: !52)
!3437 = !DILocation(line: 4763, column: 14, scope: !3427)
!3438 = !DILocation(line: 4764, column: 18, scope: !3427)
!3439 = !DILocation(line: 4764, column: 16, scope: !3427)
!3440 = !DILocation(line: 4766, column: 13, scope: !3427)
!3441 = !DILocation(line: 4766, column: 20, scope: !3427)
!3442 = !DILocation(line: 4766, column: 28, scope: !3427)
!3443 = !DILocation(line: 4766, column: 37, scope: !3427)
!3444 = !DILocation(line: 4766, column: 7, scope: !3427)
!3445 = !DILocation(line: 4776, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !705, file: !63, line: 4776, column: 7)
!3447 = !DILocation(line: 4776, column: 23, scope: !3446)
!3448 = !DILocation(line: 4776, column: 34, scope: !3446)
!3449 = !DILocation(line: 4776, column: 26, scope: !3446)
!3450 = !DILocation(line: 4776, column: 41, scope: !3446)
!3451 = !DILocation(line: 4776, column: 7, scope: !705)
!3452 = !DILocation(line: 4777, column: 15, scope: !3446)
!3453 = !DILocation(line: 4777, column: 5, scope: !3446)
!3454 = !DILocation(line: 4779, column: 3, scope: !705)
!3455 = !DILocation(line: 4780, column: 1, scope: !705)
!3456 = distinct !DISubprogram(name: "initialize_exit_failure", scope: !307, file: !307, line: 99, type: !83, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3457 = !DILocalVariable(name: "status", arg: 1, scope: !3456, file: !307, line: 99, type: !5)
!3458 = !DILocation(line: 99, column: 30, scope: !3456)
!3459 = !DILocation(line: 101, column: 7, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !307, line: 101, column: 7)
!3461 = !DILocation(line: 101, column: 14, scope: !3460)
!3462 = !DILocation(line: 101, column: 7, scope: !3456)
!3463 = !DILocation(line: 102, column: 20, scope: !3460)
!3464 = !DILocation(line: 102, column: 18, scope: !3460)
!3465 = !DILocation(line: 102, column: 5, scope: !3460)
!3466 = !DILocation(line: 103, column: 1, scope: !3456)
!3467 = distinct !DISubprogram(name: "to_uchar", scope: !307, file: !307, line: 156, type: !315, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3468 = !DILocalVariable(name: "ch", arg: 1, scope: !3467, file: !307, line: 156, type: !8)
!3469 = !DILocation(line: 156, column: 44, scope: !3467)
!3470 = !DILocation(line: 156, column: 57, scope: !3467)
!3471 = !DILocation(line: 156, column: 50, scope: !3467)
!3472 = distinct !DISubprogram(name: "inittables", scope: !63, file: !63, line: 1287, type: !167, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3473 = !DILocalVariable(name: "i", scope: !3472, file: !63, line: 1289, type: !52)
!3474 = !DILocation(line: 1289, column: 10, scope: !3472)
!3475 = !DILocation(line: 1291, column: 10, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3472, file: !63, line: 1291, column: 3)
!3477 = !DILocation(line: 1291, column: 8, scope: !3476)
!3478 = !DILocation(line: 1291, column: 15, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3476, file: !63, line: 1291, column: 3)
!3480 = !DILocation(line: 1291, column: 17, scope: !3479)
!3481 = !DILocation(line: 1291, column: 3, scope: !3476)
!3482 = !DILocation(line: 1293, column: 30, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3479, file: !63, line: 1292, column: 5)
!3484 = !DILocation(line: 1293, column: 19, scope: !3483)
!3485 = !DILocation(line: 1293, column: 14, scope: !3483)
!3486 = !DILocation(line: 1293, column: 7, scope: !3483)
!3487 = !DILocation(line: 1293, column: 17, scope: !3483)
!3488 = !DILocation(line: 1294, column: 26, scope: !3483)
!3489 = !{!3490, !3490, i64 0}
!3490 = !{!"short", !2344, i64 0}
!3491 = !DILocation(line: 1294, column: 24, scope: !3483)
!3492 = !DILocation(line: 1294, column: 19, scope: !3483)
!3493 = !DILocation(line: 1294, column: 7, scope: !3483)
!3494 = !DILocation(line: 1294, column: 22, scope: !3483)
!3495 = !DILocation(line: 1295, column: 28, scope: !3483)
!3496 = !DILocation(line: 1295, column: 40, scope: !3483)
!3497 = !DILocation(line: 1295, column: 56, scope: !3483)
!3498 = !DILocation(line: 1295, column: 45, scope: !3483)
!3499 = !DILocation(line: 1295, column: 43, scope: !3483)
!3500 = !DILocation(line: 0, scope: !3483)
!3501 = !DILocation(line: 1295, column: 21, scope: !3483)
!3502 = !DILocation(line: 1295, column: 7, scope: !3483)
!3503 = !DILocation(line: 1295, column: 24, scope: !3483)
!3504 = !DILocation(line: 1296, column: 34, scope: !3483)
!3505 = !DILocation(line: 1296, column: 25, scope: !3483)
!3506 = !DILocation(line: 1296, column: 20, scope: !3483)
!3507 = !DILocation(line: 1296, column: 7, scope: !3483)
!3508 = !DILocation(line: 1296, column: 23, scope: !3483)
!3509 = !DILocation(line: 1297, column: 5, scope: !3483)
!3510 = !DILocation(line: 1291, column: 30, scope: !3479)
!3511 = !DILocation(line: 1291, column: 3, scope: !3479)
!3512 = distinct !{!3512, !3481, !3513}
!3513 = !DILocation(line: 1297, column: 5, scope: !3476)
!3514 = !DILocation(line: 1301, column: 7, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3472, file: !63, line: 1301, column: 7)
!3516 = !DILocation(line: 1301, column: 7, scope: !3472)
!3517 = !DILocation(line: 1303, column: 14, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !63, line: 1303, column: 7)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !63, line: 1302, column: 5)
!3520 = !DILocation(line: 1303, column: 12, scope: !3518)
!3521 = !DILocation(line: 1303, column: 19, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !63, line: 1303, column: 7)
!3523 = !DILocation(line: 1303, column: 21, scope: !3522)
!3524 = !DILocation(line: 1303, column: 7, scope: !3518)
!3525 = !DILocalVariable(name: "s", scope: !3526, file: !63, line: 1305, type: !87)
!3526 = distinct !DILexicalBlock(scope: !3522, file: !63, line: 1304, column: 9)
!3527 = !DILocation(line: 1305, column: 23, scope: !3526)
!3528 = !DILocalVariable(name: "s_len", scope: !3526, file: !63, line: 1306, type: !52)
!3529 = !DILocation(line: 1306, column: 18, scope: !3526)
!3530 = !DILocalVariable(name: "j", scope: !3526, file: !63, line: 1307, type: !52)
!3531 = !DILocation(line: 1307, column: 18, scope: !3526)
!3532 = !DILocalVariable(name: "k", scope: !3526, file: !63, line: 1307, type: !52)
!3533 = !DILocation(line: 1307, column: 21, scope: !3526)
!3534 = !DILocalVariable(name: "name", scope: !3526, file: !63, line: 1308, type: !7)
!3535 = !DILocation(line: 1308, column: 17, scope: !3526)
!3536 = !DILocation(line: 1310, column: 38, scope: !3526)
!3537 = !DILocation(line: 1310, column: 36, scope: !3526)
!3538 = !DILocation(line: 1310, column: 28, scope: !3526)
!3539 = !DILocation(line: 1310, column: 15, scope: !3526)
!3540 = !DILocation(line: 1310, column: 13, scope: !3526)
!3541 = !DILocation(line: 1311, column: 27, scope: !3526)
!3542 = !DILocation(line: 1311, column: 19, scope: !3526)
!3543 = !DILocation(line: 1311, column: 17, scope: !3526)
!3544 = !DILocation(line: 1312, column: 46, scope: !3526)
!3545 = !DILocation(line: 1312, column: 52, scope: !3526)
!3546 = !DILocation(line: 1312, column: 37, scope: !3526)
!3547 = !DILocation(line: 1312, column: 35, scope: !3526)
!3548 = !DILocation(line: 1312, column: 20, scope: !3526)
!3549 = !DILocation(line: 1312, column: 11, scope: !3526)
!3550 = !DILocation(line: 1312, column: 23, scope: !3526)
!3551 = !DILocation(line: 1312, column: 28, scope: !3526)
!3552 = !{!3553, !2356, i64 0}
!3553 = !{!"month", !2356, i64 0, !2343, i64 8}
!3554 = !DILocation(line: 1313, column: 29, scope: !3526)
!3555 = !DILocation(line: 1313, column: 31, scope: !3526)
!3556 = !DILocation(line: 1313, column: 20, scope: !3526)
!3557 = !DILocation(line: 1313, column: 11, scope: !3526)
!3558 = !DILocation(line: 1313, column: 23, scope: !3526)
!3559 = !DILocation(line: 1313, column: 27, scope: !3526)
!3560 = !{!3553, !2343, i64 8}
!3561 = !DILocation(line: 1315, column: 22, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3526, file: !63, line: 1315, column: 11)
!3563 = !DILocation(line: 1315, column: 18, scope: !3562)
!3564 = !DILocation(line: 1315, column: 16, scope: !3562)
!3565 = !DILocation(line: 1315, column: 27, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3562, file: !63, line: 1315, column: 11)
!3567 = !DILocation(line: 1315, column: 31, scope: !3566)
!3568 = !DILocation(line: 1315, column: 29, scope: !3566)
!3569 = !DILocation(line: 1315, column: 11, scope: !3562)
!3570 = !DILocation(line: 1316, column: 19, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !63, line: 1316, column: 17)
!3572 = !DILocation(line: 1316, column: 17, scope: !3566)
!3573 = !DILocation(line: 1317, column: 50, scope: !3571)
!3574 = !DILocation(line: 1317, column: 52, scope: !3571)
!3575 = !DILocation(line: 1317, column: 40, scope: !3571)
!3576 = !DILocation(line: 1317, column: 27, scope: !3571)
!3577 = !DILocation(line: 1317, column: 15, scope: !3571)
!3578 = !DILocation(line: 1317, column: 21, scope: !3571)
!3579 = !DILocation(line: 1317, column: 25, scope: !3571)
!3580 = !DILocation(line: 1315, column: 39, scope: !3566)
!3581 = !DILocation(line: 1315, column: 11, scope: !3566)
!3582 = distinct !{!3582, !3569, !3583}
!3583 = !DILocation(line: 1317, column: 55, scope: !3562)
!3584 = !DILocation(line: 1318, column: 11, scope: !3526)
!3585 = !DILocation(line: 1318, column: 16, scope: !3526)
!3586 = !DILocation(line: 1318, column: 19, scope: !3526)
!3587 = !DILocation(line: 1319, column: 9, scope: !3526)
!3588 = !DILocation(line: 1303, column: 41, scope: !3522)
!3589 = !DILocation(line: 1303, column: 7, scope: !3522)
!3590 = distinct !{!3590, !3524, !3591}
!3591 = !DILocation(line: 1319, column: 9, scope: !3518)
!3592 = !DILocation(line: 1320, column: 7, scope: !3519)
!3593 = !DILocation(line: 1321, column: 5, scope: !3519)
!3594 = !DILocation(line: 1323, column: 1, scope: !3472)
!3595 = distinct !DISubprogram(name: "sighandler", scope: !63, file: !63, line: 4113, type: !83, scopeLine: 4114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3596 = !DILocalVariable(name: "sig", arg: 1, scope: !3595, file: !63, line: 4113, type: !5)
!3597 = !DILocation(line: 4113, column: 17, scope: !3595)
!3598 = !DILocation(line: 4118, column: 3, scope: !3595)
!3599 = !DILocation(line: 4120, column: 11, scope: !3595)
!3600 = !DILocation(line: 4120, column: 3, scope: !3595)
!3601 = !DILocation(line: 4121, column: 10, scope: !3595)
!3602 = !DILocation(line: 4121, column: 3, scope: !3595)
!3603 = !DILocation(line: 4122, column: 1, scope: !3595)
!3604 = distinct !DISubprogram(name: "exit_cleanup", scope: !63, file: !63, line: 819, type: !167, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3605 = !DILocation(line: 821, column: 7, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3604, file: !63, line: 821, column: 7)
!3607 = !DILocation(line: 821, column: 7, scope: !3604)
!3608 = !DILocalVariable(name: "cs", scope: !3609, file: !63, line: 825, type: !342)
!3609 = distinct !DILexicalBlock(scope: !3606, file: !63, line: 822, column: 5)
!3610 = !DILocation(line: 825, column: 24, scope: !3609)
!3611 = !DILocation(line: 826, column: 7, scope: !3609)
!3612 = !DILocation(line: 827, column: 7, scope: !3609)
!3613 = !DILocation(line: 828, column: 7, scope: !3609)
!3614 = !DILocation(line: 829, column: 5, scope: !3609)
!3615 = !DILocation(line: 831, column: 3, scope: !3604)
!3616 = !DILocation(line: 832, column: 1, scope: !3604)
!3617 = distinct !DISubprogram(name: "key_init", scope: !63, file: !63, line: 4186, type: !350, scopeLine: 4187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3618 = !DILocalVariable(name: "key", arg: 1, scope: !3617, file: !63, line: 4186, type: !92)
!3619 = !DILocation(line: 4186, column: 28, scope: !3617)
!3620 = !DILocation(line: 4188, column: 11, scope: !3617)
!3621 = !DILocation(line: 4188, column: 3, scope: !3617)
!3622 = !DILocation(line: 4189, column: 3, scope: !3617)
!3623 = !DILocation(line: 4189, column: 8, scope: !3617)
!3624 = !DILocation(line: 4189, column: 14, scope: !3617)
!3625 = !DILocation(line: 4190, column: 10, scope: !3617)
!3626 = !DILocation(line: 4190, column: 3, scope: !3617)
!3627 = distinct !DISubprogram(name: "parse_field_count", scope: !63, file: !63, line: 4082, type: !352, scopeLine: 4083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3628 = !DILocalVariable(name: "string", arg: 1, scope: !3627, file: !63, line: 4082, type: !87)
!3629 = !DILocation(line: 4082, column: 32, scope: !3627)
!3630 = !DILocalVariable(name: "val", arg: 2, scope: !3627, file: !63, line: 4082, type: !354)
!3631 = !DILocation(line: 4082, column: 48, scope: !3627)
!3632 = !DILocalVariable(name: "msgid", arg: 3, scope: !3627, file: !63, line: 4082, type: !87)
!3633 = !DILocation(line: 4082, column: 65, scope: !3627)
!3634 = !DILocalVariable(name: "suffix", scope: !3627, file: !63, line: 4084, type: !7)
!3635 = !DILocation(line: 4084, column: 9, scope: !3627)
!3636 = !DILocalVariable(name: "n", scope: !3627, file: !63, line: 4085, type: !355)
!3637 = !DILocation(line: 4085, column: 13, scope: !3627)
!3638 = !DILocation(line: 4087, column: 23, scope: !3627)
!3639 = !DILocation(line: 4087, column: 11, scope: !3627)
!3640 = !DILocation(line: 4087, column: 3, scope: !3627)
!3641 = !DILocation(line: 4091, column: 14, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3627, file: !63, line: 4088, column: 5)
!3643 = !DILocation(line: 4091, column: 8, scope: !3642)
!3644 = !DILocation(line: 4091, column: 12, scope: !3642)
!3645 = !DILocation(line: 4092, column: 12, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3642, file: !63, line: 4092, column: 11)
!3647 = !DILocation(line: 4092, column: 11, scope: !3646)
!3648 = !DILocation(line: 4092, column: 19, scope: !3646)
!3649 = !DILocation(line: 4092, column: 16, scope: !3646)
!3650 = !DILocation(line: 4092, column: 11, scope: !3642)
!3651 = !DILocation(line: 4093, column: 9, scope: !3646)
!3652 = !DILocation(line: 4094, column: 7, scope: !3642)
!3653 = !DILocation(line: 4097, column: 8, scope: !3642)
!3654 = !DILocation(line: 4097, column: 12, scope: !3642)
!3655 = !DILocation(line: 4098, column: 7, scope: !3642)
!3656 = !DILocation(line: 4101, column: 11, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3642, file: !63, line: 4101, column: 11)
!3658 = !DILocation(line: 4101, column: 11, scope: !3642)
!3659 = !DILocation(line: 4102, column: 9, scope: !3657)
!3660 = !DILocation(line: 4104, column: 7, scope: !3642)
!3661 = !DILocation(line: 4107, column: 10, scope: !3627)
!3662 = !DILocation(line: 4107, column: 3, scope: !3627)
!3663 = !DILocation(line: 4108, column: 1, scope: !3627)
!3664 = distinct !DISubprogram(name: "set_ordering", scope: !63, file: !63, line: 4130, type: !357, scopeLine: 4131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3665 = !DILocalVariable(name: "s", arg: 1, scope: !3664, file: !63, line: 4130, type: !87)
!3666 = !DILocation(line: 4130, column: 27, scope: !3664)
!3667 = !DILocalVariable(name: "key", arg: 2, scope: !3664, file: !63, line: 4130, type: !92)
!3668 = !DILocation(line: 4130, column: 47, scope: !3664)
!3669 = !DILocalVariable(name: "blanktype", arg: 3, scope: !3664, file: !63, line: 4130, type: !65)
!3670 = !DILocation(line: 4130, column: 67, scope: !3664)
!3671 = !DILocation(line: 4132, column: 3, scope: !3664)
!3672 = !DILocation(line: 4132, column: 11, scope: !3664)
!3673 = !DILocation(line: 4132, column: 10, scope: !3664)
!3674 = !DILocation(line: 4134, column: 16, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3664, file: !63, line: 4133, column: 5)
!3676 = !DILocation(line: 4134, column: 15, scope: !3675)
!3677 = !DILocation(line: 4134, column: 7, scope: !3675)
!3678 = !DILocation(line: 4137, column: 15, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !63, line: 4137, column: 15)
!3680 = distinct !DILexicalBlock(scope: !3675, file: !63, line: 4135, column: 9)
!3681 = !DILocation(line: 4137, column: 25, scope: !3679)
!3682 = !DILocation(line: 4137, column: 37, scope: !3679)
!3683 = !DILocation(line: 4137, column: 40, scope: !3679)
!3684 = !DILocation(line: 4137, column: 50, scope: !3679)
!3685 = !DILocation(line: 4137, column: 15, scope: !3680)
!3686 = !DILocation(line: 4138, column: 13, scope: !3679)
!3687 = !DILocation(line: 4138, column: 18, scope: !3679)
!3688 = !DILocation(line: 4138, column: 30, scope: !3679)
!3689 = !DILocation(line: 4139, column: 15, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3680, file: !63, line: 4139, column: 15)
!3691 = !DILocation(line: 4139, column: 25, scope: !3690)
!3692 = !DILocation(line: 4139, column: 35, scope: !3690)
!3693 = !DILocation(line: 4139, column: 38, scope: !3690)
!3694 = !DILocation(line: 4139, column: 48, scope: !3690)
!3695 = !DILocation(line: 4139, column: 15, scope: !3680)
!3696 = !DILocation(line: 4140, column: 13, scope: !3690)
!3697 = !DILocation(line: 4140, column: 18, scope: !3690)
!3698 = !DILocation(line: 4140, column: 30, scope: !3690)
!3699 = !DILocation(line: 4141, column: 11, scope: !3680)
!3700 = !DILocation(line: 4143, column: 11, scope: !3680)
!3701 = !DILocation(line: 4143, column: 16, scope: !3680)
!3702 = !DILocation(line: 4143, column: 23, scope: !3680)
!3703 = !DILocation(line: 4144, column: 11, scope: !3680)
!3704 = !DILocation(line: 4146, column: 11, scope: !3680)
!3705 = !DILocation(line: 4146, column: 16, scope: !3680)
!3706 = !DILocation(line: 4146, column: 26, scope: !3680)
!3707 = !DILocation(line: 4147, column: 11, scope: !3680)
!3708 = !DILocation(line: 4149, column: 11, scope: !3680)
!3709 = !DILocation(line: 4149, column: 16, scope: !3680)
!3710 = !DILocation(line: 4149, column: 32, scope: !3680)
!3711 = !DILocation(line: 4150, column: 11, scope: !3680)
!3712 = !DILocation(line: 4152, column: 11, scope: !3680)
!3713 = !DILocation(line: 4152, column: 16, scope: !3680)
!3714 = !DILocation(line: 4152, column: 30, scope: !3680)
!3715 = !DILocation(line: 4153, column: 11, scope: !3680)
!3716 = !DILocation(line: 4157, column: 17, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3680, file: !63, line: 4157, column: 15)
!3718 = !DILocation(line: 4157, column: 22, scope: !3717)
!3719 = !DILocation(line: 4157, column: 15, scope: !3680)
!3720 = !DILocation(line: 4158, column: 13, scope: !3717)
!3721 = !DILocation(line: 4158, column: 18, scope: !3717)
!3722 = !DILocation(line: 4158, column: 25, scope: !3717)
!3723 = !DILocation(line: 4159, column: 11, scope: !3680)
!3724 = !DILocation(line: 4161, column: 11, scope: !3680)
!3725 = !DILocation(line: 4161, column: 16, scope: !3680)
!3726 = !DILocation(line: 4161, column: 22, scope: !3680)
!3727 = !DILocation(line: 4162, column: 11, scope: !3680)
!3728 = !DILocation(line: 4164, column: 11, scope: !3680)
!3729 = !DILocation(line: 4164, column: 16, scope: !3680)
!3730 = !DILocation(line: 4164, column: 24, scope: !3680)
!3731 = !DILocation(line: 4165, column: 11, scope: !3680)
!3732 = !DILocation(line: 4167, column: 11, scope: !3680)
!3733 = !DILocation(line: 4167, column: 16, scope: !3680)
!3734 = !DILocation(line: 4167, column: 23, scope: !3680)
!3735 = !DILocation(line: 4168, column: 11, scope: !3680)
!3736 = !DILocation(line: 4170, column: 11, scope: !3680)
!3737 = !DILocation(line: 4170, column: 16, scope: !3680)
!3738 = !DILocation(line: 4170, column: 24, scope: !3680)
!3739 = !DILocation(line: 4171, column: 11, scope: !3680)
!3740 = !DILocation(line: 4173, column: 11, scope: !3680)
!3741 = !DILocation(line: 4173, column: 16, scope: !3680)
!3742 = !DILocation(line: 4173, column: 24, scope: !3680)
!3743 = !DILocation(line: 4174, column: 11, scope: !3680)
!3744 = !DILocation(line: 4176, column: 27, scope: !3680)
!3745 = !DILocation(line: 4176, column: 11, scope: !3680)
!3746 = !DILocation(line: 4178, column: 7, scope: !3675)
!3747 = distinct !{!3747, !3671, !3748}
!3748 = !DILocation(line: 4179, column: 5, scope: !3664)
!3749 = !DILocation(line: 4180, column: 19, scope: !3664)
!3750 = !DILocation(line: 4180, column: 3, scope: !3664)
!3751 = !DILocation(line: 4181, column: 1, scope: !3664)
!3752 = distinct !DISubprogram(name: "badfieldspec", scope: !63, file: !63, line: 4040, type: !359, scopeLine: 4041, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3753 = !DILocalVariable(name: "spec", arg: 1, scope: !3752, file: !63, line: 4040, type: !87)
!3754 = !DILocation(line: 4040, column: 27, scope: !3752)
!3755 = !DILocalVariable(name: "msgid", arg: 2, scope: !3752, file: !63, line: 4040, type: !87)
!3756 = !DILocation(line: 4040, column: 45, scope: !3752)
!3757 = !DILocation(line: 4042, column: 3, scope: !3752)
!3758 = distinct !DISubprogram(name: "insertkey", scope: !63, file: !63, line: 4024, type: !361, scopeLine: 4025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3759 = !DILocalVariable(name: "key_arg", arg: 1, scope: !3758, file: !63, line: 4024, type: !92)
!3760 = !DILocation(line: 4024, column: 29, scope: !3758)
!3761 = !DILocalVariable(name: "p", scope: !3758, file: !63, line: 4026, type: !363)
!3762 = !DILocation(line: 4026, column: 21, scope: !3758)
!3763 = !DILocalVariable(name: "key", scope: !3758, file: !63, line: 4027, type: !92)
!3764 = !DILocation(line: 4027, column: 20, scope: !3758)
!3765 = !DILocation(line: 4027, column: 35, scope: !3758)
!3766 = !DILocation(line: 4027, column: 26, scope: !3758)
!3767 = !DILocation(line: 4029, column: 10, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3758, file: !63, line: 4029, column: 3)
!3769 = !DILocation(line: 4029, column: 8, scope: !3768)
!3770 = !DILocation(line: 4029, column: 23, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3768, file: !63, line: 4029, column: 3)
!3772 = !DILocation(line: 4029, column: 22, scope: !3771)
!3773 = !DILocation(line: 4029, column: 3, scope: !3768)
!3774 = !DILocation(line: 4030, column: 5, scope: !3771)
!3775 = !DILocation(line: 4029, column: 33, scope: !3771)
!3776 = !DILocation(line: 4029, column: 32, scope: !3771)
!3777 = !DILocation(line: 4029, column: 37, scope: !3771)
!3778 = !DILocation(line: 4029, column: 28, scope: !3771)
!3779 = !DILocation(line: 4029, column: 3, scope: !3771)
!3780 = distinct !{!3780, !3773, !3781}
!3781 = !DILocation(line: 4030, column: 5, scope: !3768)
!3782 = !DILocation(line: 4031, column: 8, scope: !3758)
!3783 = !DILocation(line: 4031, column: 4, scope: !3758)
!3784 = !DILocation(line: 4031, column: 6, scope: !3758)
!3785 = !DILocation(line: 4032, column: 3, scope: !3758)
!3786 = !DILocation(line: 4032, column: 8, scope: !3758)
!3787 = !DILocation(line: 4032, column: 13, scope: !3758)
!3788 = !DILocation(line: 4033, column: 1, scope: !3758)
!3789 = distinct !DISubprogram(name: "incompatible_options", scope: !63, file: !63, line: 4050, type: !302, scopeLine: 4051, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3790 = !DILocalVariable(name: "opts", arg: 1, scope: !3789, file: !63, line: 4050, type: !87)
!3791 = !DILocation(line: 4050, column: 35, scope: !3789)
!3792 = !DILocation(line: 4052, column: 3, scope: !3789)
!3793 = distinct !DISubprogram(name: "specify_nmerge", scope: !63, file: !63, line: 1329, type: !364, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !367, line: 139, size: 128, elements: !3795)
!3795 = !{!3796, !3797}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3794, file: !367, line: 142, baseType: !366, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3794, file: !367, line: 144, baseType: !366, size: 64, offset: 64)
!3798 = !DILocalVariable(name: "oi", arg: 1, scope: !3793, file: !63, line: 1329, type: !5)
!3799 = !DILocation(line: 1329, column: 21, scope: !3793)
!3800 = !DILocalVariable(name: "c", arg: 2, scope: !3793, file: !63, line: 1329, type: !8)
!3801 = !DILocation(line: 1329, column: 30, scope: !3793)
!3802 = !DILocalVariable(name: "s", arg: 3, scope: !3793, file: !63, line: 1329, type: !87)
!3803 = !DILocation(line: 1329, column: 45, scope: !3793)
!3804 = !DILocalVariable(name: "n", scope: !3793, file: !63, line: 1331, type: !355)
!3805 = !DILocation(line: 1331, column: 13, scope: !3793)
!3806 = !DILocalVariable(name: "rlimit", scope: !3793, file: !63, line: 1332, type: !3794)
!3807 = !DILocation(line: 1332, column: 17, scope: !3793)
!3808 = !DILocalVariable(name: "e", scope: !3793, file: !63, line: 1333, type: !71)
!3809 = !DILocation(line: 1333, column: 21, scope: !3793)
!3810 = !DILocation(line: 1333, column: 37, scope: !3793)
!3811 = !DILocation(line: 1333, column: 25, scope: !3793)
!3812 = !DILocalVariable(name: "max_nmerge", scope: !3793, file: !63, line: 1338, type: !66)
!3813 = !DILocation(line: 1338, column: 16, scope: !3793)
!3814 = !DILocation(line: 1338, column: 31, scope: !3793)
!3815 = !DILocation(line: 1338, column: 66, scope: !3793)
!3816 = !DILocation(line: 1339, column: 40, scope: !3793)
!3817 = !{!3818, !2517, i64 0}
!3818 = !{!"rlimit", !2517, i64 0, !2517, i64 8}
!3819 = !DILocation(line: 1341, column: 30, scope: !3793)
!3820 = !DILocation(line: 1338, column: 29, scope: !3793)
!3821 = !DILocation(line: 1343, column: 7, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3793, file: !63, line: 1343, column: 7)
!3823 = !DILocation(line: 1343, column: 9, scope: !3822)
!3824 = !DILocation(line: 1343, column: 7, scope: !3793)
!3825 = !DILocation(line: 1345, column: 16, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3822, file: !63, line: 1344, column: 5)
!3827 = !DILocation(line: 1345, column: 14, scope: !3826)
!3828 = !DILocation(line: 1346, column: 11, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3826, file: !63, line: 1346, column: 11)
!3830 = !DILocation(line: 1346, column: 21, scope: !3829)
!3831 = !DILocation(line: 1346, column: 18, scope: !3829)
!3832 = !DILocation(line: 1346, column: 11, scope: !3826)
!3833 = !DILocation(line: 1347, column: 11, scope: !3829)
!3834 = !DILocation(line: 1347, column: 9, scope: !3829)
!3835 = !DILocation(line: 1350, column: 15, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !63, line: 1350, column: 15)
!3837 = distinct !DILexicalBlock(scope: !3829, file: !63, line: 1349, column: 9)
!3838 = !DILocation(line: 1350, column: 22, scope: !3836)
!3839 = !DILocation(line: 1350, column: 15, scope: !3837)
!3840 = !DILocation(line: 1352, column: 28, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3836, file: !63, line: 1351, column: 13)
!3842 = !DILocation(line: 1353, column: 35, scope: !3841)
!3843 = !DILocation(line: 1353, column: 22, scope: !3841)
!3844 = !DILocation(line: 1353, column: 39, scope: !3841)
!3845 = !{!3846, !2356, i64 0}
!3846 = !{!"option", !2356, i64 0, !2343, i64 8, !2356, i64 16, !2343, i64 24}
!3847 = !DILocation(line: 1353, column: 52, scope: !3841)
!3848 = !DILocation(line: 1353, column: 45, scope: !3841)
!3849 = !DILocation(line: 1352, column: 15, scope: !3841)
!3850 = !DILocation(line: 1354, column: 15, scope: !3841)
!3851 = !DILocation(line: 1358, column: 20, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3836, file: !63, line: 1358, column: 20)
!3853 = !DILocation(line: 1358, column: 33, scope: !3852)
!3854 = !DILocation(line: 1358, column: 31, scope: !3852)
!3855 = !DILocation(line: 1358, column: 20, scope: !3836)
!3856 = !DILocation(line: 1360, column: 17, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3852, file: !63, line: 1359, column: 13)
!3858 = !DILocation(line: 1361, column: 13, scope: !3857)
!3859 = !DILocation(line: 1363, column: 13, scope: !3852)
!3860 = !DILocation(line: 1365, column: 5, scope: !3826)
!3861 = !DILocation(line: 1367, column: 7, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3793, file: !63, line: 1367, column: 7)
!3863 = !DILocation(line: 1367, column: 9, scope: !3862)
!3864 = !DILocation(line: 1367, column: 7, scope: !3793)
!3865 = !DILocalVariable(name: "max_nmerge_buf", scope: !3866, file: !63, line: 1369, type: !369)
!3866 = distinct !DILexicalBlock(scope: !3862, file: !63, line: 1368, column: 5)
!3867 = !DILocation(line: 1369, column: 12, scope: !3866)
!3868 = !DILocation(line: 1370, column: 20, scope: !3866)
!3869 = !DILocation(line: 1371, column: 27, scope: !3866)
!3870 = !DILocation(line: 1371, column: 14, scope: !3866)
!3871 = !DILocation(line: 1371, column: 31, scope: !3866)
!3872 = !DILocation(line: 1371, column: 44, scope: !3866)
!3873 = !DILocation(line: 1371, column: 37, scope: !3866)
!3874 = !DILocation(line: 1370, column: 7, scope: !3866)
!3875 = !DILocation(line: 1372, column: 7, scope: !3866)
!3876 = !DILocation(line: 1378, column: 20, scope: !3862)
!3877 = !DILocation(line: 1378, column: 23, scope: !3862)
!3878 = !DILocation(line: 1378, column: 27, scope: !3862)
!3879 = !DILocation(line: 1378, column: 44, scope: !3862)
!3880 = !DILocation(line: 1378, column: 5, scope: !3862)
!3881 = distinct !DISubprogram(name: "specify_sort_size", scope: !63, file: !63, line: 1383, type: !364, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3882 = !DILocalVariable(name: "oi", arg: 1, scope: !3881, file: !63, line: 1383, type: !5)
!3883 = !DILocation(line: 1383, column: 24, scope: !3881)
!3884 = !DILocalVariable(name: "c", arg: 2, scope: !3881, file: !63, line: 1383, type: !8)
!3885 = !DILocation(line: 1383, column: 33, scope: !3881)
!3886 = !DILocalVariable(name: "s", arg: 3, scope: !3881, file: !63, line: 1383, type: !87)
!3887 = !DILocation(line: 1383, column: 48, scope: !3881)
!3888 = !DILocalVariable(name: "n", scope: !3881, file: !63, line: 1385, type: !355)
!3889 = !DILocation(line: 1385, column: 13, scope: !3881)
!3890 = !DILocalVariable(name: "suffix", scope: !3881, file: !63, line: 1386, type: !7)
!3891 = !DILocation(line: 1386, column: 9, scope: !3881)
!3892 = !DILocalVariable(name: "e", scope: !3881, file: !63, line: 1387, type: !71)
!3893 = !DILocation(line: 1387, column: 21, scope: !3881)
!3894 = !DILocation(line: 1387, column: 37, scope: !3881)
!3895 = !DILocation(line: 1387, column: 25, scope: !3881)
!3896 = !DILocation(line: 1390, column: 7, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3881, file: !63, line: 1390, column: 7)
!3898 = !DILocation(line: 1390, column: 9, scope: !3897)
!3899 = !DILocation(line: 1390, column: 23, scope: !3897)
!3900 = !DILocation(line: 1390, column: 26, scope: !3897)
!3901 = !DILocation(line: 1390, column: 7, scope: !3881)
!3902 = !DILocation(line: 1392, column: 11, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !63, line: 1392, column: 11)
!3904 = distinct !DILexicalBlock(scope: !3897, file: !63, line: 1391, column: 5)
!3905 = !DILocation(line: 1392, column: 13, scope: !3903)
!3906 = !DILocation(line: 1392, column: 11, scope: !3904)
!3907 = !DILocation(line: 1393, column: 11, scope: !3903)
!3908 = !DILocation(line: 1393, column: 9, scope: !3903)
!3909 = !DILocation(line: 1395, column: 11, scope: !3903)
!3910 = !DILocation(line: 1396, column: 5, scope: !3904)
!3911 = !DILocation(line: 1399, column: 7, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3881, file: !63, line: 1399, column: 7)
!3913 = !DILocation(line: 1399, column: 9, scope: !3912)
!3914 = !DILocation(line: 1399, column: 40, scope: !3912)
!3915 = !DILocation(line: 1399, column: 43, scope: !3912)
!3916 = !DILocation(line: 1399, column: 64, scope: !3912)
!3917 = !DILocation(line: 1399, column: 69, scope: !3912)
!3918 = !DILocation(line: 1399, column: 7, scope: !3881)
!3919 = !DILocation(line: 1400, column: 13, scope: !3912)
!3920 = !DILocation(line: 1400, column: 5, scope: !3912)
!3921 = !DILocation(line: 1403, column: 11, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3912, file: !63, line: 1401, column: 7)
!3923 = !DILocation(line: 1404, column: 9, scope: !3922)
!3924 = !DILocalVariable(name: "mem", scope: !3925, file: !63, line: 1408, type: !370)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !63, line: 1407, column: 9)
!3926 = !DILocation(line: 1408, column: 18, scope: !3925)
!3927 = !DILocation(line: 1408, column: 24, scope: !3925)
!3928 = !DILocation(line: 1408, column: 43, scope: !3925)
!3929 = !DILocation(line: 1408, column: 41, scope: !3925)
!3930 = !DILocation(line: 1408, column: 45, scope: !3925)
!3931 = !{!3932, !3932, i64 0}
!3932 = !{!"double", !2344, i64 0}
!3933 = !DILocation(line: 1411, column: 15, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3925, file: !63, line: 1411, column: 15)
!3935 = !DILocation(line: 1411, column: 19, scope: !3934)
!3936 = !DILocation(line: 1411, column: 15, scope: !3925)
!3937 = !DILocation(line: 1413, column: 19, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !63, line: 1412, column: 13)
!3939 = !DILocation(line: 1413, column: 17, scope: !3938)
!3940 = !DILocation(line: 1414, column: 17, scope: !3938)
!3941 = !DILocation(line: 1415, column: 13, scope: !3938)
!3942 = !DILocation(line: 1417, column: 15, scope: !3934)
!3943 = !DILocation(line: 1419, column: 9, scope: !3922)
!3944 = !DILocation(line: 1420, column: 7, scope: !3922)
!3945 = !DILocation(line: 1422, column: 7, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3881, file: !63, line: 1422, column: 7)
!3947 = !DILocation(line: 1422, column: 9, scope: !3946)
!3948 = !DILocation(line: 1422, column: 7, scope: !3881)
!3949 = !DILocation(line: 1426, column: 11, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !63, line: 1426, column: 11)
!3951 = distinct !DILexicalBlock(scope: !3946, file: !63, line: 1423, column: 5)
!3952 = !DILocation(line: 1426, column: 15, scope: !3950)
!3953 = !DILocation(line: 1426, column: 13, scope: !3950)
!3954 = !DILocation(line: 1426, column: 11, scope: !3951)
!3955 = !DILocation(line: 1427, column: 9, scope: !3950)
!3956 = !DILocation(line: 1429, column: 19, scope: !3951)
!3957 = !DILocation(line: 1429, column: 17, scope: !3951)
!3958 = !DILocation(line: 1430, column: 11, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3951, file: !63, line: 1430, column: 11)
!3960 = !DILocation(line: 1430, column: 24, scope: !3959)
!3961 = !DILocation(line: 1430, column: 21, scope: !3959)
!3962 = !DILocation(line: 1430, column: 11, scope: !3951)
!3963 = !DILocation(line: 1432, column: 23, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3959, file: !63, line: 1431, column: 9)
!3965 = !DILocation(line: 1432, column: 21, scope: !3964)
!3966 = !DILocation(line: 1433, column: 11, scope: !3964)
!3967 = !DILocation(line: 1436, column: 9, scope: !3951)
!3968 = !DILocation(line: 1437, column: 5, scope: !3951)
!3969 = !DILocation(line: 1439, column: 18, scope: !3881)
!3970 = !DILocation(line: 1439, column: 21, scope: !3881)
!3971 = !DILocation(line: 1439, column: 25, scope: !3881)
!3972 = !DILocation(line: 1439, column: 42, scope: !3881)
!3973 = !DILocation(line: 1439, column: 3, scope: !3881)
!3974 = !DILocation(line: 1440, column: 1, scope: !3881)
!3975 = distinct !DISubprogram(name: "add_temp_dir", scope: !63, file: !63, line: 1231, type: !302, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3976 = !DILocalVariable(name: "dir", arg: 1, scope: !3975, file: !63, line: 1231, type: !87)
!3977 = !DILocation(line: 1231, column: 27, scope: !3975)
!3978 = !DILocation(line: 1233, column: 7, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !63, line: 1233, column: 7)
!3980 = !DILocation(line: 1233, column: 25, scope: !3979)
!3981 = !DILocation(line: 1233, column: 22, scope: !3979)
!3982 = !DILocation(line: 1233, column: 7, scope: !3975)
!3983 = !DILocation(line: 1234, column: 17, scope: !3979)
!3984 = !DILocation(line: 1234, column: 15, scope: !3979)
!3985 = !DILocation(line: 1234, column: 5, scope: !3979)
!3986 = !DILocation(line: 1236, column: 33, scope: !3975)
!3987 = !DILocation(line: 1236, column: 3, scope: !3975)
!3988 = !DILocation(line: 1236, column: 27, scope: !3975)
!3989 = !DILocation(line: 1236, column: 31, scope: !3975)
!3990 = !DILocation(line: 1237, column: 1, scope: !3975)
!3991 = distinct !DISubprogram(name: "specify_nthreads", scope: !63, file: !63, line: 1444, type: !372, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!3992 = !DILocalVariable(name: "oi", arg: 1, scope: !3991, file: !63, line: 1444, type: !5)
!3993 = !DILocation(line: 1444, column: 23, scope: !3991)
!3994 = !DILocalVariable(name: "c", arg: 2, scope: !3991, file: !63, line: 1444, type: !8)
!3995 = !DILocation(line: 1444, column: 32, scope: !3991)
!3996 = !DILocalVariable(name: "s", arg: 3, scope: !3991, file: !63, line: 1444, type: !87)
!3997 = !DILocation(line: 1444, column: 47, scope: !3991)
!3998 = !DILocalVariable(name: "nthreads", scope: !3991, file: !63, line: 1446, type: !54)
!3999 = !DILocation(line: 1446, column: 21, scope: !3991)
!4000 = !DILocalVariable(name: "e", scope: !3991, file: !63, line: 1447, type: !71)
!4001 = !DILocation(line: 1447, column: 21, scope: !3991)
!4002 = !DILocation(line: 1447, column: 35, scope: !3991)
!4003 = !DILocation(line: 1447, column: 25, scope: !3991)
!4004 = !DILocation(line: 1448, column: 7, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3991, file: !63, line: 1448, column: 7)
!4006 = !DILocation(line: 1448, column: 9, scope: !4005)
!4007 = !DILocation(line: 1448, column: 7, scope: !3991)
!4008 = !DILocation(line: 1449, column: 5, scope: !4005)
!4009 = !DILocation(line: 1450, column: 7, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3991, file: !63, line: 1450, column: 7)
!4011 = !DILocation(line: 1450, column: 9, scope: !4010)
!4012 = !DILocation(line: 1450, column: 7, scope: !3991)
!4013 = !DILocation(line: 1451, column: 20, scope: !4010)
!4014 = !DILocation(line: 1451, column: 23, scope: !4010)
!4015 = !DILocation(line: 1451, column: 27, scope: !4010)
!4016 = !DILocation(line: 1451, column: 44, scope: !4010)
!4017 = !DILocation(line: 1451, column: 5, scope: !4010)
!4018 = !DILocation(line: 1452, column: 18, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3991, file: !63, line: 1452, column: 7)
!4020 = !DILocation(line: 1452, column: 16, scope: !4019)
!4021 = !DILocation(line: 1452, column: 7, scope: !3991)
!4022 = !DILocation(line: 1453, column: 14, scope: !4019)
!4023 = !DILocation(line: 1453, column: 5, scope: !4019)
!4024 = !DILocation(line: 1454, column: 7, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3991, file: !63, line: 1454, column: 7)
!4026 = !DILocation(line: 1454, column: 16, scope: !4025)
!4027 = !DILocation(line: 1454, column: 7, scope: !3991)
!4028 = !DILocation(line: 1455, column: 5, scope: !4025)
!4029 = !DILocation(line: 1456, column: 10, scope: !3991)
!4030 = !DILocation(line: 1456, column: 3, scope: !3991)
!4031 = !DILocation(line: 1457, column: 1, scope: !3991)
!4032 = distinct !DISubprogram(name: "xfopen", scope: !63, file: !63, line: 986, type: !374, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4033 = !DILocalVariable(name: "file", arg: 1, scope: !4032, file: !63, line: 986, type: !87)
!4034 = !DILocation(line: 986, column: 21, scope: !4032)
!4035 = !DILocalVariable(name: "how", arg: 2, scope: !4032, file: !63, line: 986, type: !87)
!4036 = !DILocation(line: 986, column: 39, scope: !4032)
!4037 = !DILocalVariable(name: "fp", scope: !4032, file: !63, line: 988, type: !277)
!4038 = !DILocation(line: 988, column: 9, scope: !4032)
!4039 = !DILocation(line: 988, column: 27, scope: !4032)
!4040 = !DILocation(line: 988, column: 33, scope: !4032)
!4041 = !DILocation(line: 988, column: 14, scope: !4032)
!4042 = !DILocation(line: 989, column: 8, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4032, file: !63, line: 989, column: 7)
!4044 = !DILocation(line: 989, column: 7, scope: !4032)
!4045 = !DILocation(line: 990, column: 15, scope: !4043)
!4046 = !DILocation(line: 990, column: 33, scope: !4043)
!4047 = !DILocation(line: 990, column: 5, scope: !4043)
!4048 = !DILocation(line: 991, column: 10, scope: !4032)
!4049 = !DILocation(line: 991, column: 3, scope: !4032)
!4050 = distinct !DISubprogram(name: "xfclose", scope: !63, file: !63, line: 997, type: !412, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4051 = !DILocalVariable(name: "fp", arg: 1, scope: !4050, file: !63, line: 997, type: !277)
!4052 = !DILocation(line: 997, column: 16, scope: !4050)
!4053 = !DILocalVariable(name: "file", arg: 2, scope: !4050, file: !63, line: 997, type: !87)
!4054 = !DILocation(line: 997, column: 32, scope: !4050)
!4055 = !DILocation(line: 999, column: 19, scope: !4050)
!4056 = !DILocation(line: 999, column: 11, scope: !4050)
!4057 = !DILocation(line: 999, column: 3, scope: !4050)
!4058 = !DILocation(line: 1003, column: 11, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !63, line: 1003, column: 11)
!4060 = distinct !DILexicalBlock(scope: !4050, file: !63, line: 1000, column: 5)
!4061 = !DILocation(line: 1003, column: 11, scope: !4060)
!4062 = !DILocation(line: 1004, column: 9, scope: !4059)
!4063 = !DILocation(line: 1005, column: 7, scope: !4060)
!4064 = !DILocation(line: 1009, column: 11, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4060, file: !63, line: 1009, column: 11)
!4066 = !DILocation(line: 1009, column: 23, scope: !4065)
!4067 = !DILocation(line: 1009, column: 11, scope: !4060)
!4068 = !DILocation(line: 1010, column: 19, scope: !4065)
!4069 = !DILocation(line: 1010, column: 39, scope: !4065)
!4070 = !DILocation(line: 1010, column: 9, scope: !4065)
!4071 = !DILocation(line: 1011, column: 7, scope: !4060)
!4072 = !DILocation(line: 1014, column: 19, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4060, file: !63, line: 1014, column: 11)
!4074 = !DILocation(line: 1014, column: 11, scope: !4073)
!4075 = !DILocation(line: 1014, column: 23, scope: !4073)
!4076 = !DILocation(line: 1014, column: 11, scope: !4060)
!4077 = !DILocation(line: 1015, column: 19, scope: !4073)
!4078 = !DILocation(line: 1015, column: 38, scope: !4073)
!4079 = !DILocation(line: 1015, column: 9, scope: !4073)
!4080 = !DILocation(line: 1016, column: 7, scope: !4060)
!4081 = !DILocation(line: 1018, column: 1, scope: !4050)
!4082 = distinct !DISubprogram(name: "default_key_compare", scope: !63, file: !63, line: 2375, type: !414, scopeLine: 2376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4083 = !DILocalVariable(name: "key", arg: 1, scope: !4082, file: !63, line: 2375, type: !416)
!4084 = !DILocation(line: 2375, column: 45, scope: !4082)
!4085 = !DILocation(line: 2377, column: 13, scope: !4082)
!4086 = !DILocation(line: 2377, column: 18, scope: !4082)
!4087 = !DILocation(line: 2378, column: 13, scope: !4082)
!4088 = !DILocation(line: 2378, column: 16, scope: !4082)
!4089 = !DILocation(line: 2378, column: 21, scope: !4082)
!4090 = !DILocation(line: 2379, column: 13, scope: !4082)
!4091 = !DILocation(line: 2379, column: 16, scope: !4082)
!4092 = !DILocation(line: 2379, column: 21, scope: !4082)
!4093 = !DILocation(line: 2380, column: 13, scope: !4082)
!4094 = !DILocation(line: 2380, column: 16, scope: !4082)
!4095 = !DILocation(line: 2380, column: 21, scope: !4082)
!4096 = !DILocation(line: 2381, column: 13, scope: !4082)
!4097 = !DILocation(line: 2381, column: 29, scope: !4082)
!4098 = !DILocation(line: 2381, column: 16, scope: !4082)
!4099 = !DILocation(line: 2382, column: 13, scope: !4082)
!4100 = !DILocation(line: 2382, column: 16, scope: !4082)
!4101 = !DILocation(line: 2382, column: 21, scope: !4082)
!4102 = !DILocation(line: 2383, column: 13, scope: !4082)
!4103 = !DILocation(line: 2383, column: 16, scope: !4082)
!4104 = !DILocation(line: 2383, column: 21, scope: !4082)
!4105 = !DILocation(line: 2384, column: 13, scope: !4082)
!4106 = !DILocation(line: 2384, column: 16, scope: !4082)
!4107 = !DILocation(line: 2384, column: 21, scope: !4082)
!4108 = !DILocation(line: 2377, column: 10, scope: !4082)
!4109 = !DILocation(line: 2377, column: 3, scope: !4082)
!4110 = distinct !DISubprogram(name: "check_ordering_compatibility", scope: !63, file: !63, line: 4058, type: !167, scopeLine: 4059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4111 = !DILocalVariable(name: "key", scope: !4110, file: !63, line: 4060, type: !92)
!4112 = !DILocation(line: 4060, column: 20, scope: !4110)
!4113 = !DILocation(line: 4062, column: 14, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !63, line: 4062, column: 3)
!4115 = !DILocation(line: 4062, column: 12, scope: !4114)
!4116 = !DILocation(line: 4062, column: 8, scope: !4114)
!4117 = !DILocation(line: 4062, column: 23, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4114, file: !63, line: 4062, column: 3)
!4119 = !DILocation(line: 4062, column: 3, scope: !4114)
!4120 = !DILocation(line: 4063, column: 14, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4118, file: !63, line: 4063, column: 9)
!4122 = !DILocation(line: 4063, column: 19, scope: !4121)
!4123 = !DILocation(line: 4063, column: 29, scope: !4121)
!4124 = !DILocation(line: 4063, column: 34, scope: !4121)
!4125 = !DILocation(line: 4063, column: 27, scope: !4121)
!4126 = !DILocation(line: 4063, column: 52, scope: !4121)
!4127 = !DILocation(line: 4063, column: 57, scope: !4121)
!4128 = !DILocation(line: 4063, column: 50, scope: !4121)
!4129 = !DILocation(line: 4064, column: 16, scope: !4121)
!4130 = !DILocation(line: 4064, column: 21, scope: !4121)
!4131 = !DILocation(line: 4064, column: 14, scope: !4121)
!4132 = !DILocation(line: 4064, column: 30, scope: !4121)
!4133 = !DILocation(line: 4064, column: 35, scope: !4121)
!4134 = !DILocation(line: 4064, column: 45, scope: !4121)
!4135 = !DILocation(line: 4064, column: 50, scope: !4121)
!4136 = !DILocation(line: 4064, column: 43, scope: !4121)
!4137 = !DILocation(line: 4064, column: 61, scope: !4121)
!4138 = !DILocation(line: 4064, column: 66, scope: !4121)
!4139 = !DILocation(line: 4064, column: 60, scope: !4121)
!4140 = !DILocation(line: 4064, column: 59, scope: !4121)
!4141 = !DILocation(line: 4064, column: 57, scope: !4121)
!4142 = !DILocation(line: 4064, column: 27, scope: !4121)
!4143 = !DILocation(line: 4063, column: 11, scope: !4121)
!4144 = !DILocation(line: 4063, column: 9, scope: !4118)
!4145 = !DILocalVariable(name: "opts", scope: !4146, file: !63, line: 4067, type: !418)
!4146 = distinct !DILexicalBlock(scope: !4121, file: !63, line: 4065, column: 7)
!4147 = !DILocation(line: 4067, column: 14, scope: !4146)
!4148 = !DILocation(line: 4069, column: 47, scope: !4146)
!4149 = !DILocation(line: 4069, column: 52, scope: !4146)
!4150 = !DILocation(line: 4069, column: 60, scope: !4146)
!4151 = !DILocation(line: 4069, column: 28, scope: !4146)
!4152 = !DILocation(line: 4069, column: 33, scope: !4146)
!4153 = !DILocation(line: 4069, column: 45, scope: !4146)
!4154 = !DILocation(line: 4069, column: 9, scope: !4146)
!4155 = !DILocation(line: 4069, column: 14, scope: !4146)
!4156 = !DILocation(line: 4069, column: 26, scope: !4146)
!4157 = !DILocation(line: 4070, column: 22, scope: !4146)
!4158 = !DILocation(line: 4070, column: 27, scope: !4146)
!4159 = !DILocation(line: 4070, column: 9, scope: !4146)
!4160 = !DILocation(line: 4071, column: 31, scope: !4146)
!4161 = !DILocation(line: 4071, column: 9, scope: !4146)
!4162 = !DILocation(line: 4064, column: 73, scope: !4121)
!4163 = !DILocation(line: 4062, column: 34, scope: !4118)
!4164 = !DILocation(line: 4062, column: 39, scope: !4118)
!4165 = !DILocation(line: 4062, column: 32, scope: !4118)
!4166 = !DILocation(line: 4062, column: 3, scope: !4118)
!4167 = distinct !{!4167, !4119, !4168}
!4168 = !DILocation(line: 4072, column: 7, scope: !4114)
!4169 = !DILocation(line: 4073, column: 1, scope: !4110)
!4170 = distinct !DISubprogram(name: "key_warnings", scope: !63, file: !63, line: 2422, type: !421, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4171 = !DILocalVariable(name: "gkey", arg: 1, scope: !4170, file: !63, line: 2422, type: !416)
!4172 = !DILocation(line: 2422, column: 38, scope: !4170)
!4173 = !DILocalVariable(name: "gkey_only", arg: 2, scope: !4170, file: !63, line: 2422, type: !102)
!4174 = !DILocation(line: 2422, column: 49, scope: !4170)
!4175 = !DILocalVariable(name: "key", scope: !4170, file: !63, line: 2424, type: !416)
!4176 = !DILocation(line: 2424, column: 26, scope: !4170)
!4177 = !DILocalVariable(name: "ugkey", scope: !4170, file: !63, line: 2425, type: !93)
!4178 = !DILocation(line: 2425, column: 19, scope: !4170)
!4179 = !DILocation(line: 2425, column: 28, scope: !4170)
!4180 = !DILocation(line: 2425, column: 27, scope: !4170)
!4181 = !{i64 0, i64 8, !2516, i64 8, i64 8, !2516, i64 16, i64 8, !2516, i64 24, i64 8, !2516, i64 32, i64 8, !2355, i64 40, i64 8, !2355, i64 48, i64 1, !2499, i64 49, i64 1, !2499, i64 50, i64 1, !2499, i64 51, i64 1, !2499, i64 52, i64 1, !2499, i64 53, i64 1, !2499, i64 54, i64 1, !2499, i64 55, i64 1, !2499, i64 56, i64 1, !2499, i64 57, i64 1, !2499, i64 64, i64 8, !2355}
!4182 = !DILocalVariable(name: "keynum", scope: !4170, file: !63, line: 2426, type: !54)
!4183 = !DILocation(line: 2426, column: 17, scope: !4170)
!4184 = !DILocation(line: 2428, column: 14, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4170, file: !63, line: 2428, column: 3)
!4186 = !DILocation(line: 2428, column: 12, scope: !4185)
!4187 = !DILocation(line: 2428, column: 8, scope: !4185)
!4188 = !DILocation(line: 2428, column: 23, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4185, file: !63, line: 2428, column: 3)
!4190 = !DILocation(line: 2428, column: 3, scope: !4185)
!4191 = !DILocation(line: 2430, column: 11, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !63, line: 2430, column: 11)
!4193 = distinct !DILexicalBlock(scope: !4189, file: !63, line: 2429, column: 5)
!4194 = !DILocation(line: 2430, column: 16, scope: !4192)
!4195 = !DILocation(line: 2430, column: 11, scope: !4193)
!4196 = !DILocalVariable(name: "sword", scope: !4197, file: !63, line: 2432, type: !52)
!4197 = distinct !DILexicalBlock(scope: !4192, file: !63, line: 2431, column: 9)
!4198 = !DILocation(line: 2432, column: 18, scope: !4197)
!4199 = !DILocation(line: 2432, column: 26, scope: !4197)
!4200 = !DILocation(line: 2432, column: 31, scope: !4197)
!4201 = !DILocalVariable(name: "eword", scope: !4197, file: !63, line: 2433, type: !52)
!4202 = !DILocation(line: 2433, column: 18, scope: !4197)
!4203 = !DILocation(line: 2433, column: 26, scope: !4197)
!4204 = !DILocation(line: 2433, column: 31, scope: !4197)
!4205 = !DILocalVariable(name: "tmp", scope: !4197, file: !63, line: 2434, type: !423)
!4206 = !DILocation(line: 2434, column: 16, scope: !4197)
!4207 = !DILocalVariable(name: "obuf", scope: !4197, file: !63, line: 2438, type: !426)
!4208 = !DILocation(line: 2438, column: 16, scope: !4197)
!4209 = !DILocalVariable(name: "nbuf", scope: !4197, file: !63, line: 2439, type: !429)
!4210 = !DILocation(line: 2439, column: 16, scope: !4197)
!4211 = !DILocalVariable(name: "po", scope: !4197, file: !63, line: 2440, type: !7)
!4212 = !DILocation(line: 2440, column: 17, scope: !4197)
!4213 = !DILocation(line: 2440, column: 22, scope: !4197)
!4214 = !DILocalVariable(name: "pn", scope: !4197, file: !63, line: 2441, type: !7)
!4215 = !DILocation(line: 2441, column: 17, scope: !4197)
!4216 = !DILocation(line: 2441, column: 22, scope: !4197)
!4217 = !DILocation(line: 2443, column: 15, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4197, file: !63, line: 2443, column: 15)
!4219 = !DILocation(line: 2443, column: 21, scope: !4218)
!4220 = !DILocation(line: 2443, column: 15, scope: !4197)
!4221 = !DILocation(line: 2444, column: 18, scope: !4218)
!4222 = !DILocation(line: 2444, column: 13, scope: !4218)
!4223 = !DILocation(line: 2446, column: 32, scope: !4197)
!4224 = !DILocation(line: 2446, column: 24, scope: !4197)
!4225 = !DILocation(line: 2446, column: 53, scope: !4197)
!4226 = !DILocation(line: 2446, column: 60, scope: !4197)
!4227 = !DILocation(line: 2446, column: 42, scope: !4197)
!4228 = !DILocation(line: 2446, column: 16, scope: !4197)
!4229 = !DILocation(line: 2446, column: 14, scope: !4197)
!4230 = !DILocation(line: 2447, column: 32, scope: !4197)
!4231 = !DILocation(line: 2447, column: 24, scope: !4197)
!4232 = !DILocation(line: 2447, column: 55, scope: !4197)
!4233 = !DILocation(line: 2447, column: 61, scope: !4197)
!4234 = !DILocation(line: 2447, column: 66, scope: !4197)
!4235 = !DILocation(line: 2447, column: 44, scope: !4197)
!4236 = !DILocation(line: 2447, column: 16, scope: !4197)
!4237 = !DILocation(line: 2447, column: 14, scope: !4197)
!4238 = !DILocation(line: 2448, column: 15, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4197, file: !63, line: 2448, column: 15)
!4240 = !DILocation(line: 2448, column: 20, scope: !4239)
!4241 = !DILocation(line: 2448, column: 26, scope: !4239)
!4242 = !DILocation(line: 2448, column: 15, scope: !4197)
!4243 = !DILocation(line: 2450, column: 31, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4239, file: !63, line: 2449, column: 13)
!4245 = !DILocation(line: 2450, column: 23, scope: !4244)
!4246 = !DILocation(line: 2450, column: 53, scope: !4244)
!4247 = !DILocation(line: 2450, column: 59, scope: !4244)
!4248 = !DILocation(line: 2450, column: 64, scope: !4244)
!4249 = !DILocation(line: 2450, column: 42, scope: !4244)
!4250 = !DILocation(line: 2450, column: 15, scope: !4244)
!4251 = !DILocation(line: 2451, column: 31, scope: !4244)
!4252 = !DILocation(line: 2451, column: 23, scope: !4244)
!4253 = !DILocation(line: 2452, column: 34, scope: !4244)
!4254 = !DILocation(line: 2452, column: 40, scope: !4244)
!4255 = !DILocation(line: 2453, column: 37, scope: !4244)
!4256 = !DILocation(line: 2453, column: 42, scope: !4244)
!4257 = !DILocation(line: 2453, column: 48, scope: !4244)
!4258 = !DILocation(line: 2453, column: 36, scope: !4244)
!4259 = !DILocation(line: 2453, column: 34, scope: !4244)
!4260 = !DILocation(line: 2453, column: 62, scope: !4244)
!4261 = !DILocation(line: 2452, column: 23, scope: !4244)
!4262 = !DILocation(line: 2451, column: 15, scope: !4244)
!4263 = !DILocation(line: 2454, column: 13, scope: !4244)
!4264 = !DILocation(line: 2455, column: 24, scope: !4197)
!4265 = !DILocation(line: 2456, column: 30, scope: !4197)
!4266 = !DILocation(line: 2456, column: 18, scope: !4197)
!4267 = !DILocation(line: 2456, column: 49, scope: !4197)
!4268 = !DILocation(line: 2456, column: 37, scope: !4197)
!4269 = !DILocation(line: 2455, column: 11, scope: !4197)
!4270 = !DILocation(line: 2457, column: 9, scope: !4197)
!4271 = !DILocalVariable(name: "zero_width", scope: !4193, file: !63, line: 2460, type: !102)
!4272 = !DILocation(line: 2460, column: 12, scope: !4193)
!4273 = !DILocation(line: 2460, column: 25, scope: !4193)
!4274 = !DILocation(line: 2460, column: 30, scope: !4193)
!4275 = !DILocation(line: 2460, column: 36, scope: !4193)
!4276 = !DILocation(line: 2460, column: 48, scope: !4193)
!4277 = !DILocation(line: 2460, column: 51, scope: !4193)
!4278 = !DILocation(line: 2460, column: 56, scope: !4193)
!4279 = !DILocation(line: 2460, column: 64, scope: !4193)
!4280 = !DILocation(line: 2460, column: 69, scope: !4193)
!4281 = !DILocation(line: 2460, column: 62, scope: !4193)
!4282 = !DILocation(line: 0, scope: !4193)
!4283 = !DILocation(line: 2461, column: 11, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4193, file: !63, line: 2461, column: 11)
!4285 = !DILocation(line: 2461, column: 11, scope: !4193)
!4286 = !DILocation(line: 2462, column: 22, scope: !4284)
!4287 = !DILocation(line: 2462, column: 71, scope: !4284)
!4288 = !DILocation(line: 2462, column: 9, scope: !4284)
!4289 = !DILocalVariable(name: "implicit_skip", scope: !4193, file: !63, line: 2465, type: !102)
!4290 = !DILocation(line: 2465, column: 12, scope: !4193)
!4291 = !DILocation(line: 2465, column: 41, scope: !4193)
!4292 = !DILocation(line: 2465, column: 28, scope: !4193)
!4293 = !DILocation(line: 2465, column: 46, scope: !4193)
!4294 = !DILocation(line: 2465, column: 49, scope: !4193)
!4295 = !DILocation(line: 2465, column: 54, scope: !4193)
!4296 = !DILocalVariable(name: "line_offset", scope: !4193, file: !63, line: 2466, type: !102)
!4297 = !DILocation(line: 2466, column: 12, scope: !4193)
!4298 = !DILocation(line: 2466, column: 26, scope: !4193)
!4299 = !DILocation(line: 2466, column: 31, scope: !4193)
!4300 = !DILocation(line: 2466, column: 37, scope: !4193)
!4301 = !DILocation(line: 2466, column: 42, scope: !4193)
!4302 = !DILocation(line: 2466, column: 45, scope: !4193)
!4303 = !DILocation(line: 2466, column: 50, scope: !4193)
!4304 = !DILocation(line: 2466, column: 56, scope: !4193)
!4305 = !DILocation(line: 2467, column: 12, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4193, file: !63, line: 2467, column: 11)
!4307 = !DILocation(line: 2467, column: 23, scope: !4306)
!4308 = !DILocation(line: 2467, column: 27, scope: !4306)
!4309 = !DILocation(line: 2467, column: 37, scope: !4306)
!4310 = !DILocation(line: 2467, column: 40, scope: !4306)
!4311 = !DILocation(line: 2467, column: 44, scope: !4306)
!4312 = !DILocation(line: 2467, column: 59, scope: !4306)
!4313 = !DILocation(line: 2467, column: 63, scope: !4306)
!4314 = !DILocation(line: 2468, column: 11, scope: !4306)
!4315 = !DILocation(line: 2468, column: 17, scope: !4306)
!4316 = !DILocation(line: 2468, column: 22, scope: !4306)
!4317 = !DILocation(line: 2468, column: 34, scope: !4306)
!4318 = !DILocation(line: 2468, column: 38, scope: !4306)
!4319 = !DILocation(line: 2469, column: 15, scope: !4306)
!4320 = !DILocation(line: 2469, column: 20, scope: !4306)
!4321 = !DILocation(line: 2469, column: 25, scope: !4306)
!4322 = !DILocation(line: 2469, column: 37, scope: !4306)
!4323 = !DILocation(line: 2469, column: 40, scope: !4306)
!4324 = !DILocation(line: 2469, column: 45, scope: !4306)
!4325 = !DILocation(line: 2470, column: 15, scope: !4306)
!4326 = !DILocation(line: 2470, column: 20, scope: !4306)
!4327 = !DILocation(line: 2470, column: 25, scope: !4306)
!4328 = !DILocation(line: 2470, column: 37, scope: !4306)
!4329 = !DILocation(line: 2470, column: 40, scope: !4306)
!4330 = !DILocation(line: 2470, column: 45, scope: !4306)
!4331 = !DILocation(line: 2467, column: 11, scope: !4193)
!4332 = !DILocation(line: 2471, column: 22, scope: !4306)
!4333 = !DILocation(line: 2472, column: 57, scope: !4306)
!4334 = !DILocation(line: 2471, column: 9, scope: !4306)
!4335 = !DILocation(line: 2477, column: 12, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4193, file: !63, line: 2477, column: 11)
!4337 = !DILocation(line: 2477, column: 22, scope: !4336)
!4338 = !DILocation(line: 2477, column: 38, scope: !4336)
!4339 = !DILocation(line: 2477, column: 25, scope: !4336)
!4340 = !DILocation(line: 2477, column: 11, scope: !4193)
!4341 = !DILocalVariable(name: "sword", scope: !4342, file: !63, line: 2479, type: !52)
!4342 = distinct !DILexicalBlock(scope: !4336, file: !63, line: 2478, column: 9)
!4343 = !DILocation(line: 2479, column: 18, scope: !4342)
!4344 = !DILocation(line: 2479, column: 26, scope: !4342)
!4345 = !DILocation(line: 2479, column: 31, scope: !4342)
!4346 = !DILocation(line: 2479, column: 37, scope: !4342)
!4347 = !DILocalVariable(name: "eword", scope: !4342, file: !63, line: 2480, type: !52)
!4348 = !DILocation(line: 2480, column: 18, scope: !4342)
!4349 = !DILocation(line: 2480, column: 26, scope: !4342)
!4350 = !DILocation(line: 2480, column: 31, scope: !4342)
!4351 = !DILocation(line: 2480, column: 37, scope: !4342)
!4352 = !DILocation(line: 2481, column: 16, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4342, file: !63, line: 2481, column: 15)
!4354 = !DILocation(line: 2481, column: 15, scope: !4342)
!4355 = !DILocation(line: 2482, column: 18, scope: !4353)
!4356 = !DILocation(line: 2482, column: 13, scope: !4353)
!4357 = !DILocation(line: 2483, column: 16, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4342, file: !63, line: 2483, column: 15)
!4359 = !DILocation(line: 2483, column: 22, scope: !4358)
!4360 = !DILocation(line: 2483, column: 25, scope: !4358)
!4361 = !DILocation(line: 2483, column: 33, scope: !4358)
!4362 = !DILocation(line: 2483, column: 31, scope: !4358)
!4363 = !DILocation(line: 2483, column: 15, scope: !4342)
!4364 = !DILocation(line: 2484, column: 26, scope: !4358)
!4365 = !DILocation(line: 2485, column: 20, scope: !4358)
!4366 = !DILocation(line: 2484, column: 13, scope: !4358)
!4367 = !DILocation(line: 2486, column: 9, scope: !4342)
!4368 = !DILocation(line: 2489, column: 17, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4193, file: !63, line: 2489, column: 11)
!4370 = !DILocation(line: 2489, column: 11, scope: !4369)
!4371 = !DILocation(line: 2489, column: 24, scope: !4369)
!4372 = !DILocation(line: 2489, column: 34, scope: !4369)
!4373 = !DILocation(line: 2489, column: 44, scope: !4369)
!4374 = !DILocation(line: 2489, column: 49, scope: !4369)
!4375 = !DILocation(line: 2489, column: 41, scope: !4369)
!4376 = !DILocation(line: 2489, column: 11, scope: !4193)
!4377 = !DILocation(line: 2490, column: 15, scope: !4369)
!4378 = !DILocation(line: 2490, column: 22, scope: !4369)
!4379 = !DILocation(line: 2490, column: 9, scope: !4369)
!4380 = !DILocation(line: 2491, column: 17, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4193, file: !63, line: 2491, column: 11)
!4382 = !DILocation(line: 2491, column: 11, scope: !4381)
!4383 = !DILocation(line: 2491, column: 27, scope: !4381)
!4384 = !DILocation(line: 2491, column: 37, scope: !4381)
!4385 = !DILocation(line: 2491, column: 50, scope: !4381)
!4386 = !DILocation(line: 2491, column: 55, scope: !4381)
!4387 = !DILocation(line: 2491, column: 47, scope: !4381)
!4388 = !DILocation(line: 2491, column: 11, scope: !4193)
!4389 = !DILocation(line: 2492, column: 15, scope: !4381)
!4390 = !DILocation(line: 2492, column: 25, scope: !4381)
!4391 = !DILocation(line: 2492, column: 9, scope: !4381)
!4392 = !DILocation(line: 2493, column: 29, scope: !4193)
!4393 = !DILocation(line: 2493, column: 34, scope: !4193)
!4394 = !DILocation(line: 2493, column: 28, scope: !4193)
!4395 = !DILocation(line: 2493, column: 13, scope: !4193)
!4396 = !DILocation(line: 2493, column: 25, scope: !4193)
!4397 = !DILocation(line: 2494, column: 29, scope: !4193)
!4398 = !DILocation(line: 2494, column: 34, scope: !4193)
!4399 = !DILocation(line: 2494, column: 28, scope: !4193)
!4400 = !DILocation(line: 2494, column: 13, scope: !4193)
!4401 = !DILocation(line: 2494, column: 25, scope: !4193)
!4402 = !DILocation(line: 2495, column: 23, scope: !4193)
!4403 = !DILocation(line: 2495, column: 28, scope: !4193)
!4404 = !DILocation(line: 2495, column: 22, scope: !4193)
!4405 = !DILocation(line: 2495, column: 13, scope: !4193)
!4406 = !DILocation(line: 2495, column: 19, scope: !4193)
!4407 = !DILocation(line: 2496, column: 25, scope: !4193)
!4408 = !DILocation(line: 2496, column: 30, scope: !4193)
!4409 = !DILocation(line: 2496, column: 24, scope: !4193)
!4410 = !DILocation(line: 2496, column: 13, scope: !4193)
!4411 = !DILocation(line: 2496, column: 21, scope: !4193)
!4412 = !DILocation(line: 2497, column: 33, scope: !4193)
!4413 = !DILocation(line: 2497, column: 38, scope: !4193)
!4414 = !DILocation(line: 2497, column: 32, scope: !4193)
!4415 = !DILocation(line: 2497, column: 13, scope: !4193)
!4416 = !DILocation(line: 2497, column: 29, scope: !4193)
!4417 = !DILocation(line: 2498, column: 31, scope: !4193)
!4418 = !DILocation(line: 2498, column: 36, scope: !4193)
!4419 = !DILocation(line: 2498, column: 30, scope: !4193)
!4420 = !DILocation(line: 2498, column: 13, scope: !4193)
!4421 = !DILocation(line: 2498, column: 27, scope: !4193)
!4422 = !DILocation(line: 2499, column: 24, scope: !4193)
!4423 = !DILocation(line: 2499, column: 29, scope: !4193)
!4424 = !DILocation(line: 2499, column: 23, scope: !4193)
!4425 = !DILocation(line: 2499, column: 13, scope: !4193)
!4426 = !DILocation(line: 2499, column: 20, scope: !4193)
!4427 = !DILocation(line: 2500, column: 25, scope: !4193)
!4428 = !DILocation(line: 2500, column: 30, scope: !4193)
!4429 = !DILocation(line: 2500, column: 24, scope: !4193)
!4430 = !DILocation(line: 2500, column: 13, scope: !4193)
!4431 = !DILocation(line: 2500, column: 21, scope: !4193)
!4432 = !DILocation(line: 2501, column: 25, scope: !4193)
!4433 = !DILocation(line: 2501, column: 30, scope: !4193)
!4434 = !DILocation(line: 2501, column: 24, scope: !4193)
!4435 = !DILocation(line: 2501, column: 13, scope: !4193)
!4436 = !DILocation(line: 2501, column: 21, scope: !4193)
!4437 = !DILocation(line: 2502, column: 5, scope: !4193)
!4438 = !DILocation(line: 2428, column: 34, scope: !4189)
!4439 = !DILocation(line: 2428, column: 39, scope: !4189)
!4440 = !DILocation(line: 2428, column: 32, scope: !4189)
!4441 = !DILocation(line: 2428, column: 51, scope: !4189)
!4442 = !DILocation(line: 2428, column: 3, scope: !4189)
!4443 = distinct !{!4443, !4190, !4444}
!4444 = !DILocation(line: 2502, column: 5, scope: !4185)
!4445 = !DILocation(line: 2506, column: 8, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4170, file: !63, line: 2506, column: 7)
!4447 = !DILocation(line: 2507, column: 7, scope: !4446)
!4448 = !DILocation(line: 2507, column: 17, scope: !4446)
!4449 = !DILocation(line: 2507, column: 25, scope: !4446)
!4450 = !DILocation(line: 2507, column: 29, scope: !4446)
!4451 = !DILocation(line: 2507, column: 36, scope: !4446)
!4452 = !DILocation(line: 2507, column: 39, scope: !4446)
!4453 = !DILocation(line: 2507, column: 47, scope: !4446)
!4454 = !DILocation(line: 2507, column: 50, scope: !4446)
!4455 = !DILocation(line: 2506, column: 7, scope: !4170)
!4456 = !DILocalVariable(name: "ugkey_reverse", scope: !4457, file: !63, line: 2509, type: !102)
!4457 = distinct !DILexicalBlock(scope: !4446, file: !63, line: 2508, column: 5)
!4458 = !DILocation(line: 2509, column: 12, scope: !4457)
!4459 = !DILocation(line: 2509, column: 34, scope: !4457)
!4460 = !DILocation(line: 2510, column: 13, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4457, file: !63, line: 2510, column: 11)
!4462 = !DILocation(line: 2510, column: 20, scope: !4461)
!4463 = !DILocation(line: 2510, column: 23, scope: !4461)
!4464 = !DILocation(line: 2510, column: 11, scope: !4457)
!4465 = !DILocation(line: 2511, column: 15, scope: !4461)
!4466 = !DILocation(line: 2511, column: 23, scope: !4461)
!4467 = !DILocation(line: 2511, column: 9, scope: !4461)
!4468 = !DILocalVariable(name: "opts", scope: !4457, file: !63, line: 2513, type: !418)
!4469 = !DILocation(line: 2513, column: 12, scope: !4457)
!4470 = !DILocation(line: 2514, column: 28, scope: !4457)
!4471 = !DILocation(line: 2514, column: 7, scope: !4457)
!4472 = !DILocation(line: 2518, column: 47, scope: !4457)
!4473 = !DILocation(line: 2518, column: 39, scope: !4457)
!4474 = !DILocation(line: 2518, column: 24, scope: !4457)
!4475 = !DILocation(line: 2516, column: 14, scope: !4457)
!4476 = !DILocation(line: 2518, column: 56, scope: !4457)
!4477 = !DILocation(line: 2515, column: 7, scope: !4457)
!4478 = !DILocation(line: 2519, column: 23, scope: !4457)
!4479 = !DILocation(line: 2519, column: 13, scope: !4457)
!4480 = !DILocation(line: 2519, column: 21, scope: !4457)
!4481 = !DILocation(line: 2520, column: 5, scope: !4457)
!4482 = !DILocation(line: 2521, column: 13, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4170, file: !63, line: 2521, column: 7)
!4484 = !DILocation(line: 2521, column: 21, scope: !4483)
!4485 = !DILocation(line: 2521, column: 26, scope: !4483)
!4486 = !DILocation(line: 2521, column: 33, scope: !4483)
!4487 = !DILocation(line: 2521, column: 36, scope: !4483)
!4488 = !DILocation(line: 2521, column: 44, scope: !4483)
!4489 = !DILocation(line: 2521, column: 47, scope: !4483)
!4490 = !DILocation(line: 2521, column: 7, scope: !4170)
!4491 = !DILocation(line: 2522, column: 18, scope: !4483)
!4492 = !DILocation(line: 2522, column: 5, scope: !4483)
!4493 = !DILocation(line: 2523, column: 1, scope: !4170)
!4494 = distinct !DISubprogram(name: "random_md5_state_init", scope: !63, file: !63, line: 2094, type: !302, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4495 = !DILocalVariable(name: "random_source", arg: 1, scope: !4494, file: !63, line: 2094, type: !87)
!4496 = !DILocation(line: 2094, column: 36, scope: !4494)
!4497 = !DILocalVariable(name: "buf", scope: !4494, file: !63, line: 2096, type: !434)
!4498 = !DILocation(line: 2096, column: 17, scope: !4494)
!4499 = !DILocalVariable(name: "r", scope: !4494, file: !63, line: 2097, type: !435)
!4500 = !DILocation(line: 2097, column: 27, scope: !4494)
!4501 = !DILocation(line: 2097, column: 45, scope: !4494)
!4502 = !DILocation(line: 2097, column: 31, scope: !4494)
!4503 = !DILocation(line: 2098, column: 9, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4494, file: !63, line: 2098, column: 7)
!4505 = !DILocation(line: 2098, column: 7, scope: !4494)
!4506 = !DILocation(line: 2099, column: 15, scope: !4504)
!4507 = !DILocation(line: 2099, column: 33, scope: !4504)
!4508 = !DILocation(line: 2099, column: 5, scope: !4504)
!4509 = !DILocation(line: 2100, column: 13, scope: !4494)
!4510 = !DILocation(line: 2100, column: 16, scope: !4494)
!4511 = !DILocation(line: 2100, column: 3, scope: !4494)
!4512 = !DILocation(line: 2101, column: 22, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4494, file: !63, line: 2101, column: 7)
!4514 = !DILocation(line: 2101, column: 7, scope: !4513)
!4515 = !DILocation(line: 2101, column: 25, scope: !4513)
!4516 = !DILocation(line: 2101, column: 7, scope: !4494)
!4517 = !DILocation(line: 2102, column: 15, scope: !4513)
!4518 = !DILocation(line: 2102, column: 34, scope: !4513)
!4519 = !DILocation(line: 2102, column: 5, scope: !4513)
!4520 = !DILocation(line: 2103, column: 3, scope: !4494)
!4521 = !DILocation(line: 2104, column: 22, scope: !4494)
!4522 = !DILocation(line: 2104, column: 3, scope: !4494)
!4523 = !DILocation(line: 2105, column: 1, scope: !4494)
!4524 = distinct !DISubprogram(name: "check", scope: !63, file: !63, line: 2816, type: !438, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4525 = !DILocalVariable(name: "file_name", arg: 1, scope: !4524, file: !63, line: 2816, type: !87)
!4526 = !DILocation(line: 2816, column: 20, scope: !4524)
!4527 = !DILocalVariable(name: "checkonly", arg: 2, scope: !4524, file: !63, line: 2816, type: !8)
!4528 = !DILocation(line: 2816, column: 36, scope: !4524)
!4529 = !DILocalVariable(name: "fp", scope: !4524, file: !63, line: 2818, type: !277)
!4530 = !DILocation(line: 2818, column: 9, scope: !4524)
!4531 = !DILocation(line: 2818, column: 22, scope: !4524)
!4532 = !DILocation(line: 2818, column: 14, scope: !4524)
!4533 = !DILocalVariable(name: "buf", scope: !4524, file: !63, line: 2819, type: !451)
!4534 = !DILocation(line: 2819, column: 17, scope: !4524)
!4535 = !DILocalVariable(name: "temp", scope: !4524, file: !63, line: 2820, type: !442)
!4536 = !DILocation(line: 2820, column: 15, scope: !4524)
!4537 = !DILocalVariable(name: "alloc", scope: !4524, file: !63, line: 2821, type: !52)
!4538 = !DILocation(line: 2821, column: 10, scope: !4524)
!4539 = !DILocalVariable(name: "line_number", scope: !4524, file: !63, line: 2822, type: !355)
!4540 = !DILocation(line: 2822, column: 13, scope: !4524)
!4541 = !DILocalVariable(name: "key", scope: !4524, file: !63, line: 2823, type: !416)
!4542 = !DILocation(line: 2823, column: 26, scope: !4524)
!4543 = !DILocation(line: 2823, column: 32, scope: !4524)
!4544 = !DILocalVariable(name: "nonunique", scope: !4524, file: !63, line: 2824, type: !102)
!4545 = !DILocation(line: 2824, column: 8, scope: !4524)
!4546 = !DILocation(line: 2824, column: 22, scope: !4524)
!4547 = !DILocation(line: 2824, column: 20, scope: !4524)
!4548 = !DILocalVariable(name: "ordered", scope: !4524, file: !63, line: 2825, type: !102)
!4549 = !DILocation(line: 2825, column: 8, scope: !4524)
!4550 = !DILocation(line: 2828, column: 12, scope: !4524)
!4551 = !DILocation(line: 2827, column: 3, scope: !4524)
!4552 = !DILocation(line: 2829, column: 8, scope: !4524)
!4553 = !DILocation(line: 2829, column: 13, scope: !4524)
!4554 = !{!4555, !2356, i64 0}
!4555 = !{!"line", !2356, i64 0, !2517, i64 8, !2356, i64 16, !2356, i64 24}
!4556 = !DILocation(line: 2831, column: 3, scope: !4524)
!4557 = !DILocation(line: 2831, column: 25, scope: !4524)
!4558 = !DILocation(line: 2831, column: 29, scope: !4524)
!4559 = !DILocation(line: 2831, column: 10, scope: !4524)
!4560 = !DILocalVariable(name: "line", scope: !4561, file: !63, line: 2833, type: !440)
!4561 = distinct !DILexicalBlock(scope: !4524, file: !63, line: 2832, column: 5)
!4562 = !DILocation(line: 2833, column: 26, scope: !4561)
!4563 = !DILocation(line: 2833, column: 33, scope: !4561)
!4564 = !DILocalVariable(name: "linebase", scope: !4561, file: !63, line: 2834, type: !440)
!4565 = !DILocation(line: 2834, column: 26, scope: !4561)
!4566 = !DILocation(line: 2834, column: 37, scope: !4561)
!4567 = !DILocation(line: 2834, column: 48, scope: !4561)
!4568 = !{!4569, !2517, i64 16}
!4569 = !{!"buffer", !2356, i64 0, !2517, i64 8, !2517, i64 16, !2517, i64 24, !2517, i64 32, !2517, i64 40, !2500, i64 48}
!4570 = !DILocation(line: 2834, column: 42, scope: !4561)
!4571 = !DILocation(line: 2838, column: 11, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4561, file: !63, line: 2838, column: 11)
!4573 = !DILocation(line: 2838, column: 17, scope: !4572)
!4574 = !DILocation(line: 2838, column: 20, scope: !4572)
!4575 = !DILocation(line: 2838, column: 49, scope: !4572)
!4576 = !DILocation(line: 2838, column: 54, scope: !4572)
!4577 = !DILocation(line: 2838, column: 33, scope: !4572)
!4578 = !DILocation(line: 2838, column: 30, scope: !4572)
!4579 = !DILocation(line: 2838, column: 11, scope: !4561)
!4580 = !DILocation(line: 2839, column: 9, scope: !4572)
!4581 = !DILabel(scope: !4582, name: "found_disorder", file: !63, line: 2840)
!4582 = distinct !DILexicalBlock(scope: !4572, file: !63, line: 2839, column: 9)
!4583 = !DILocation(line: 2840, column: 9, scope: !4582)
!4584 = !DILocation(line: 2842, column: 17, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !63, line: 2842, column: 17)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !63, line: 2841, column: 11)
!4587 = !DILocation(line: 2842, column: 27, scope: !4585)
!4588 = !DILocation(line: 2842, column: 17, scope: !4586)
!4589 = !DILocalVariable(name: "disorder_line", scope: !4590, file: !63, line: 2844, type: !440)
!4590 = distinct !DILexicalBlock(scope: !4585, file: !63, line: 2843, column: 15)
!4591 = !DILocation(line: 2844, column: 36, scope: !4590)
!4592 = !DILocation(line: 2844, column: 52, scope: !4590)
!4593 = !DILocation(line: 2844, column: 57, scope: !4590)
!4594 = !DILocalVariable(name: "disorder_line_number", scope: !4590, file: !63, line: 2845, type: !355)
!4595 = !DILocation(line: 2845, column: 27, scope: !4590)
!4596 = !DILocation(line: 2846, column: 19, scope: !4590)
!4597 = !DILocation(line: 2846, column: 43, scope: !4590)
!4598 = !DILocation(line: 2846, column: 41, scope: !4590)
!4599 = !DILocation(line: 2846, column: 59, scope: !4590)
!4600 = !DILocation(line: 2846, column: 57, scope: !4590)
!4601 = !DILocalVariable(name: "hr_buf", scope: !4590, file: !63, line: 2847, type: !423)
!4602 = !DILocation(line: 2847, column: 22, scope: !4590)
!4603 = !DILocation(line: 2848, column: 26, scope: !4590)
!4604 = !DILocation(line: 2848, column: 34, scope: !4590)
!4605 = !DILocation(line: 2849, column: 26, scope: !4590)
!4606 = !DILocation(line: 2849, column: 40, scope: !4590)
!4607 = !DILocation(line: 2850, column: 37, scope: !4590)
!4608 = !DILocation(line: 2850, column: 59, scope: !4590)
!4609 = !DILocation(line: 2850, column: 26, scope: !4590)
!4610 = !DILocation(line: 2848, column: 17, scope: !4590)
!4611 = !DILocation(line: 2851, column: 29, scope: !4590)
!4612 = !DILocation(line: 2851, column: 44, scope: !4590)
!4613 = !DILocation(line: 2851, column: 52, scope: !4590)
!4614 = !DILocation(line: 2851, column: 17, scope: !4590)
!4615 = !DILocation(line: 2852, column: 15, scope: !4590)
!4616 = !DILocation(line: 2854, column: 21, scope: !4586)
!4617 = !DILocation(line: 2855, column: 13, scope: !4586)
!4618 = !DILocation(line: 2860, column: 7, scope: !4561)
!4619 = !DILocation(line: 2860, column: 14, scope: !4561)
!4620 = !DILocation(line: 2860, column: 25, scope: !4561)
!4621 = !DILocation(line: 2860, column: 23, scope: !4561)
!4622 = !DILocation(line: 2861, column: 13, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4561, file: !63, line: 2861, column: 13)
!4624 = !DILocation(line: 2861, column: 35, scope: !4623)
!4625 = !DILocation(line: 2861, column: 41, scope: !4623)
!4626 = !DILocation(line: 2861, column: 46, scope: !4623)
!4627 = !DILocation(line: 2861, column: 26, scope: !4623)
!4628 = !DILocation(line: 2861, column: 23, scope: !4623)
!4629 = !DILocation(line: 2861, column: 13, scope: !4561)
!4630 = !DILocation(line: 2862, column: 11, scope: !4623)
!4631 = distinct !{!4631, !4618, !4632}
!4632 = !DILocation(line: 2862, column: 16, scope: !4561)
!4633 = !DILocation(line: 2864, column: 26, scope: !4561)
!4634 = !DILocation(line: 2864, column: 19, scope: !4561)
!4635 = !DILocation(line: 2867, column: 11, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4561, file: !63, line: 2867, column: 11)
!4637 = !DILocation(line: 2867, column: 19, scope: !4636)
!4638 = !DILocation(line: 2867, column: 25, scope: !4636)
!4639 = !{!4555, !2517, i64 8}
!4640 = !DILocation(line: 2867, column: 17, scope: !4636)
!4641 = !DILocation(line: 2867, column: 11, scope: !4561)
!4642 = !DILocation(line: 2869, column: 11, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4636, file: !63, line: 2868, column: 9)
!4644 = !DILocation(line: 2871, column: 21, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4643, file: !63, line: 2870, column: 13)
!4646 = !DILocation(line: 2872, column: 21, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4645, file: !63, line: 2872, column: 19)
!4648 = !DILocation(line: 2872, column: 19, scope: !4645)
!4649 = !DILocation(line: 2874, column: 27, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4647, file: !63, line: 2873, column: 17)
!4651 = !DILocation(line: 2874, column: 33, scope: !4650)
!4652 = !DILocation(line: 2874, column: 25, scope: !4650)
!4653 = !DILocation(line: 2875, column: 19, scope: !4650)
!4654 = !DILocation(line: 2877, column: 13, scope: !4645)
!4655 = !DILocation(line: 2878, column: 18, scope: !4643)
!4656 = !DILocation(line: 2878, column: 26, scope: !4643)
!4657 = !DILocation(line: 2878, column: 32, scope: !4643)
!4658 = !DILocation(line: 2878, column: 24, scope: !4643)
!4659 = distinct !{!4659, !4642, !4660}
!4660 = !DILocation(line: 2878, column: 38, scope: !4643)
!4661 = !DILocation(line: 2880, column: 22, scope: !4643)
!4662 = !DILocation(line: 2880, column: 11, scope: !4643)
!4663 = !DILocation(line: 2881, column: 32, scope: !4643)
!4664 = !DILocation(line: 2881, column: 23, scope: !4643)
!4665 = !DILocation(line: 2881, column: 16, scope: !4643)
!4666 = !DILocation(line: 2881, column: 21, scope: !4643)
!4667 = !DILocation(line: 2882, column: 9, scope: !4643)
!4668 = !DILocation(line: 2883, column: 20, scope: !4561)
!4669 = !DILocation(line: 2883, column: 26, scope: !4561)
!4670 = !DILocation(line: 2883, column: 32, scope: !4561)
!4671 = !DILocation(line: 2883, column: 38, scope: !4561)
!4672 = !DILocation(line: 2883, column: 44, scope: !4561)
!4673 = !DILocation(line: 2883, column: 7, scope: !4561)
!4674 = !DILocation(line: 2884, column: 21, scope: !4561)
!4675 = !DILocation(line: 2884, column: 27, scope: !4561)
!4676 = !DILocation(line: 2884, column: 12, scope: !4561)
!4677 = !DILocation(line: 2884, column: 19, scope: !4561)
!4678 = !DILocation(line: 2885, column: 11, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4561, file: !63, line: 2885, column: 11)
!4680 = !DILocation(line: 2885, column: 11, scope: !4561)
!4681 = !DILocation(line: 2887, column: 30, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !63, line: 2886, column: 9)
!4683 = !DILocation(line: 2887, column: 38, scope: !4682)
!4684 = !DILocation(line: 2887, column: 44, scope: !4682)
!4685 = !{!4555, !2356, i64 16}
!4686 = !DILocation(line: 2887, column: 53, scope: !4682)
!4687 = !DILocation(line: 2887, column: 59, scope: !4682)
!4688 = !DILocation(line: 2887, column: 51, scope: !4682)
!4689 = !DILocation(line: 2887, column: 35, scope: !4682)
!4690 = !DILocation(line: 2887, column: 16, scope: !4682)
!4691 = !DILocation(line: 2887, column: 23, scope: !4682)
!4692 = !DILocation(line: 2888, column: 30, scope: !4682)
!4693 = !DILocation(line: 2888, column: 38, scope: !4682)
!4694 = !DILocation(line: 2888, column: 44, scope: !4682)
!4695 = !{!4555, !2356, i64 24}
!4696 = !DILocation(line: 2888, column: 53, scope: !4682)
!4697 = !DILocation(line: 2888, column: 59, scope: !4682)
!4698 = !DILocation(line: 2888, column: 51, scope: !4682)
!4699 = !DILocation(line: 2888, column: 35, scope: !4682)
!4700 = !DILocation(line: 2888, column: 16, scope: !4682)
!4701 = !DILocation(line: 2888, column: 23, scope: !4682)
!4702 = !DILocation(line: 2889, column: 9, scope: !4682)
!4703 = distinct !{!4703, !4556, !4704}
!4704 = !DILocation(line: 2890, column: 5, scope: !4524)
!4705 = !DILocation(line: 2892, column: 12, scope: !4524)
!4706 = !DILocation(line: 2892, column: 16, scope: !4524)
!4707 = !DILocation(line: 2892, column: 3, scope: !4524)
!4708 = !DILocation(line: 2893, column: 13, scope: !4524)
!4709 = !{!4569, !2356, i64 0}
!4710 = !DILocation(line: 2893, column: 3, scope: !4524)
!4711 = !DILocation(line: 2894, column: 14, scope: !4524)
!4712 = !DILocation(line: 2894, column: 3, scope: !4524)
!4713 = !DILocation(line: 2895, column: 10, scope: !4524)
!4714 = !DILocation(line: 2895, column: 3, scope: !4524)
!4715 = distinct !DISubprogram(name: "check_inputs", scope: !63, file: !63, line: 3755, type: !518, scopeLine: 3756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4716 = !DILocalVariable(name: "files", arg: 1, scope: !4715, file: !63, line: 3755, type: !520)
!4717 = !DILocation(line: 3755, column: 28, scope: !4715)
!4718 = !DILocalVariable(name: "nfiles", arg: 2, scope: !4715, file: !63, line: 3755, type: !52)
!4719 = !DILocation(line: 3755, column: 42, scope: !4715)
!4720 = !DILocalVariable(name: "i", scope: !4721, file: !63, line: 3757, type: !52)
!4721 = distinct !DILexicalBlock(scope: !4715, file: !63, line: 3757, column: 3)
!4722 = !DILocation(line: 3757, column: 15, scope: !4721)
!4723 = !DILocation(line: 3757, column: 8, scope: !4721)
!4724 = !DILocation(line: 3757, column: 22, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4721, file: !63, line: 3757, column: 3)
!4726 = !DILocation(line: 3757, column: 26, scope: !4725)
!4727 = !DILocation(line: 3757, column: 24, scope: !4725)
!4728 = !DILocation(line: 3757, column: 3, scope: !4721)
!4729 = !DILocation(line: 3759, column: 11, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !63, line: 3759, column: 11)
!4731 = distinct !DILexicalBlock(scope: !4725, file: !63, line: 3758, column: 5)
!4732 = !DILocation(line: 3759, column: 11, scope: !4731)
!4733 = !DILocation(line: 3760, column: 9, scope: !4730)
!4734 = !DILocation(line: 3762, column: 23, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4731, file: !63, line: 3762, column: 11)
!4736 = !DILocation(line: 3762, column: 29, scope: !4735)
!4737 = !DILocation(line: 3762, column: 11, scope: !4735)
!4738 = !DILocation(line: 3762, column: 39, scope: !4735)
!4739 = !DILocation(line: 3762, column: 11, scope: !4731)
!4740 = !DILocation(line: 3763, column: 19, scope: !4735)
!4741 = !DILocation(line: 3763, column: 37, scope: !4735)
!4742 = !DILocation(line: 3763, column: 43, scope: !4735)
!4743 = !DILocation(line: 3763, column: 9, scope: !4735)
!4744 = !DILocation(line: 3764, column: 5, scope: !4731)
!4745 = !DILocation(line: 3757, column: 35, scope: !4725)
!4746 = !DILocation(line: 3757, column: 3, scope: !4725)
!4747 = distinct !{!4747, !4728, !4748}
!4748 = !DILocation(line: 3764, column: 5, scope: !4721)
!4749 = !DILocation(line: 3765, column: 1, scope: !4715)
!4750 = distinct !DISubprogram(name: "check_output", scope: !63, file: !63, line: 3772, type: !302, scopeLine: 3773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4751 = !DILocalVariable(name: "outfile", arg: 1, scope: !4750, file: !63, line: 3772, type: !87)
!4752 = !DILocation(line: 3772, column: 27, scope: !4750)
!4753 = !DILocation(line: 3774, column: 7, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !63, line: 3774, column: 7)
!4755 = !DILocation(line: 3774, column: 7, scope: !4750)
!4756 = !DILocalVariable(name: "oflags", scope: !4757, file: !63, line: 3776, type: !5)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !63, line: 3775, column: 5)
!4758 = !DILocation(line: 3776, column: 11, scope: !4757)
!4759 = !DILocalVariable(name: "outfd", scope: !4757, file: !63, line: 3777, type: !5)
!4760 = !DILocation(line: 3777, column: 11, scope: !4757)
!4761 = !DILocation(line: 3777, column: 25, scope: !4757)
!4762 = !DILocation(line: 3777, column: 34, scope: !4757)
!4763 = !DILocation(line: 3777, column: 19, scope: !4757)
!4764 = !DILocation(line: 3778, column: 11, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4757, file: !63, line: 3778, column: 11)
!4766 = !DILocation(line: 3778, column: 17, scope: !4765)
!4767 = !DILocation(line: 3778, column: 11, scope: !4757)
!4768 = !DILocation(line: 3779, column: 19, scope: !4765)
!4769 = !DILocation(line: 3779, column: 37, scope: !4765)
!4770 = !DILocation(line: 3779, column: 9, scope: !4765)
!4771 = !DILocation(line: 3780, column: 16, scope: !4757)
!4772 = !DILocation(line: 3780, column: 7, scope: !4757)
!4773 = !DILocation(line: 3781, column: 5, scope: !4757)
!4774 = !DILocation(line: 3782, column: 1, scope: !4750)
!4775 = distinct !DISubprogram(name: "merge", scope: !63, file: !63, line: 3790, type: !524, scopeLine: 3792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!4776 = !DILocalVariable(name: "files", arg: 1, scope: !4775, file: !63, line: 3790, type: !284)
!4777 = !DILocation(line: 3790, column: 25, scope: !4775)
!4778 = !DILocalVariable(name: "ntemps", arg: 2, scope: !4775, file: !63, line: 3790, type: !52)
!4779 = !DILocation(line: 3790, column: 39, scope: !4775)
!4780 = !DILocalVariable(name: "nfiles", arg: 3, scope: !4775, file: !63, line: 3790, type: !52)
!4781 = !DILocation(line: 3790, column: 54, scope: !4775)
!4782 = !DILocalVariable(name: "output_file", arg: 4, scope: !4775, file: !63, line: 3791, type: !87)
!4783 = !DILocation(line: 3791, column: 20, scope: !4775)
!4784 = !DILocation(line: 3793, column: 3, scope: !4775)
!4785 = !DILocation(line: 3793, column: 10, scope: !4775)
!4786 = !DILocation(line: 3793, column: 19, scope: !4775)
!4787 = !DILocation(line: 3793, column: 17, scope: !4775)
!4788 = !DILocalVariable(name: "in", scope: !4789, file: !63, line: 3796, type: !52)
!4789 = distinct !DILexicalBlock(scope: !4775, file: !63, line: 3794, column: 5)
!4790 = !DILocation(line: 3796, column: 14, scope: !4789)
!4791 = !DILocalVariable(name: "out", scope: !4789, file: !63, line: 3799, type: !52)
!4792 = !DILocation(line: 3799, column: 14, scope: !4789)
!4793 = !DILocalVariable(name: "remainder", scope: !4789, file: !63, line: 3803, type: !52)
!4794 = !DILocation(line: 3803, column: 14, scope: !4789)
!4795 = !DILocalVariable(name: "cheap_slots", scope: !4789, file: !63, line: 3806, type: !52)
!4796 = !DILocation(line: 3806, column: 14, scope: !4789)
!4797 = !DILocation(line: 3811, column: 21, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4789, file: !63, line: 3811, column: 7)
!4799 = !DILocation(line: 3811, column: 16, scope: !4798)
!4800 = !DILocation(line: 3811, column: 12, scope: !4798)
!4801 = !DILocation(line: 3811, column: 26, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4798, file: !63, line: 3811, column: 7)
!4803 = !DILocation(line: 3811, column: 36, scope: !4802)
!4804 = !DILocation(line: 3811, column: 45, scope: !4802)
!4805 = !DILocation(line: 3811, column: 43, scope: !4802)
!4806 = !DILocation(line: 3811, column: 33, scope: !4802)
!4807 = !DILocation(line: 3811, column: 7, scope: !4798)
!4808 = !DILocalVariable(name: "tfp", scope: !4809, file: !63, line: 3813, type: !277)
!4809 = distinct !DILexicalBlock(scope: !4802, file: !63, line: 3812, column: 9)
!4810 = !DILocation(line: 3813, column: 17, scope: !4809)
!4811 = !DILocalVariable(name: "temp", scope: !4809, file: !63, line: 3814, type: !289)
!4812 = !DILocation(line: 3814, column: 28, scope: !4809)
!4813 = !DILocation(line: 3814, column: 35, scope: !4809)
!4814 = !DILocalVariable(name: "num_merged", scope: !4809, file: !63, line: 3815, type: !52)
!4815 = !DILocation(line: 3815, column: 18, scope: !4809)
!4816 = !DILocation(line: 3815, column: 44, scope: !4809)
!4817 = !DILocation(line: 3815, column: 50, scope: !4809)
!4818 = !DILocation(line: 3815, column: 55, scope: !4809)
!4819 = !DILocation(line: 3816, column: 43, scope: !4809)
!4820 = !DILocation(line: 3816, column: 51, scope: !4809)
!4821 = !DILocation(line: 3816, column: 56, scope: !4809)
!4822 = !DILocation(line: 3816, column: 62, scope: !4809)
!4823 = !DILocation(line: 3815, column: 31, scope: !4809)
!4824 = !DILocation(line: 3817, column: 21, scope: !4809)
!4825 = !DILocation(line: 3817, column: 18, scope: !4809)
!4826 = !DILocation(line: 3818, column: 29, scope: !4809)
!4827 = !DILocation(line: 3818, column: 35, scope: !4809)
!4828 = !DILocation(line: 3818, column: 11, scope: !4809)
!4829 = !DILocation(line: 3818, column: 17, scope: !4809)
!4830 = !DILocation(line: 3818, column: 22, scope: !4809)
!4831 = !DILocation(line: 3818, column: 27, scope: !4809)
!4832 = !DILocation(line: 3819, column: 29, scope: !4809)
!4833 = !DILocation(line: 3819, column: 11, scope: !4809)
!4834 = !DILocation(line: 3819, column: 17, scope: !4809)
!4835 = !DILocation(line: 3819, column: 22, scope: !4809)
!4836 = !DILocation(line: 3819, column: 27, scope: !4809)
!4837 = !{!3415, !2356, i64 8}
!4838 = !DILocation(line: 3820, column: 17, scope: !4809)
!4839 = !DILocation(line: 3820, column: 14, scope: !4809)
!4840 = !DILocation(line: 3821, column: 9, scope: !4809)
!4841 = !DILocation(line: 3811, column: 52, scope: !4802)
!4842 = !DILocation(line: 3811, column: 7, scope: !4802)
!4843 = distinct !{!4843, !4807, !4844}
!4844 = !DILocation(line: 3821, column: 9, scope: !4798)
!4845 = !DILocation(line: 3823, column: 19, scope: !4789)
!4846 = !DILocation(line: 3823, column: 28, scope: !4789)
!4847 = !DILocation(line: 3823, column: 26, scope: !4789)
!4848 = !DILocation(line: 3823, column: 17, scope: !4789)
!4849 = !DILocation(line: 3824, column: 21, scope: !4789)
!4850 = !DILocation(line: 3824, column: 30, scope: !4789)
!4851 = !DILocation(line: 3824, column: 36, scope: !4789)
!4852 = !DILocation(line: 3824, column: 34, scope: !4789)
!4853 = !DILocation(line: 3824, column: 28, scope: !4789)
!4854 = !DILocation(line: 3824, column: 19, scope: !4789)
!4855 = !DILocation(line: 3826, column: 11, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4789, file: !63, line: 3826, column: 11)
!4857 = !DILocation(line: 3826, column: 25, scope: !4856)
!4858 = !DILocation(line: 3826, column: 23, scope: !4856)
!4859 = !DILocation(line: 3826, column: 11, scope: !4789)
!4860 = !DILocalVariable(name: "nshortmerge", scope: !4861, file: !63, line: 3831, type: !52)
!4861 = distinct !DILexicalBlock(scope: !4856, file: !63, line: 3827, column: 9)
!4862 = !DILocation(line: 3831, column: 18, scope: !4861)
!4863 = !DILocation(line: 3831, column: 32, scope: !4861)
!4864 = !DILocation(line: 3831, column: 44, scope: !4861)
!4865 = !DILocation(line: 3831, column: 42, scope: !4861)
!4866 = !DILocation(line: 3831, column: 56, scope: !4861)
!4867 = !DILocalVariable(name: "tfp", scope: !4861, file: !63, line: 3832, type: !277)
!4868 = !DILocation(line: 3832, column: 17, scope: !4861)
!4869 = !DILocalVariable(name: "temp", scope: !4861, file: !63, line: 3833, type: !289)
!4870 = !DILocation(line: 3833, column: 28, scope: !4861)
!4871 = !DILocation(line: 3833, column: 35, scope: !4861)
!4872 = !DILocalVariable(name: "num_merged", scope: !4861, file: !63, line: 3834, type: !52)
!4873 = !DILocation(line: 3834, column: 18, scope: !4861)
!4874 = !DILocation(line: 3834, column: 44, scope: !4861)
!4875 = !DILocation(line: 3834, column: 50, scope: !4861)
!4876 = !DILocation(line: 3834, column: 55, scope: !4861)
!4877 = !DILocation(line: 3835, column: 43, scope: !4861)
!4878 = !DILocation(line: 3835, column: 56, scope: !4861)
!4879 = !DILocation(line: 3835, column: 61, scope: !4861)
!4880 = !DILocation(line: 3835, column: 67, scope: !4861)
!4881 = !DILocation(line: 3834, column: 31, scope: !4861)
!4882 = !DILocation(line: 3836, column: 21, scope: !4861)
!4883 = !DILocation(line: 3836, column: 18, scope: !4861)
!4884 = !DILocation(line: 3837, column: 29, scope: !4861)
!4885 = !DILocation(line: 3837, column: 35, scope: !4861)
!4886 = !DILocation(line: 3837, column: 11, scope: !4861)
!4887 = !DILocation(line: 3837, column: 17, scope: !4861)
!4888 = !DILocation(line: 3837, column: 22, scope: !4861)
!4889 = !DILocation(line: 3837, column: 27, scope: !4861)
!4890 = !DILocation(line: 3838, column: 31, scope: !4861)
!4891 = !DILocation(line: 3838, column: 11, scope: !4861)
!4892 = !DILocation(line: 3838, column: 20, scope: !4861)
!4893 = !DILocation(line: 3838, column: 24, scope: !4861)
!4894 = !DILocation(line: 3838, column: 29, scope: !4861)
!4895 = !DILocation(line: 3839, column: 17, scope: !4861)
!4896 = !DILocation(line: 3839, column: 14, scope: !4861)
!4897 = !DILocation(line: 3840, column: 9, scope: !4861)
!4898 = !DILocation(line: 3844, column: 17, scope: !4789)
!4899 = !DILocation(line: 3844, column: 23, scope: !4789)
!4900 = !DILocation(line: 3844, column: 7, scope: !4789)
!4901 = !DILocation(line: 3844, column: 30, scope: !4789)
!4902 = !DILocation(line: 3844, column: 36, scope: !4789)
!4903 = !DILocation(line: 3844, column: 42, scope: !4789)
!4904 = !DILocation(line: 3844, column: 51, scope: !4789)
!4905 = !DILocation(line: 3844, column: 49, scope: !4789)
!4906 = !DILocation(line: 3844, column: 55, scope: !4789)
!4907 = !DILocation(line: 3845, column: 17, scope: !4789)
!4908 = !DILocation(line: 3845, column: 14, scope: !4789)
!4909 = !DILocation(line: 3846, column: 17, scope: !4789)
!4910 = !DILocation(line: 3846, column: 22, scope: !4789)
!4911 = !DILocation(line: 3846, column: 20, scope: !4789)
!4912 = !DILocation(line: 3846, column: 14, scope: !4789)
!4913 = distinct !{!4913, !4784, !4914}
!4914 = !DILocation(line: 3847, column: 5, scope: !4775)
!4915 = !DILocation(line: 3849, column: 25, scope: !4775)
!4916 = !DILocation(line: 3849, column: 32, scope: !4775)
!4917 = !DILocation(line: 3849, column: 40, scope: !4775)
!4918 = !DILocation(line: 3849, column: 48, scope: !4775)
!4919 = !DILocation(line: 3849, column: 3, scope: !4775)
!4920 = !DILocation(line: 3855, column: 3, scope: !4775)
!4921 = !DILocalVariable(name: "fps", scope: !4922, file: !63, line: 3858, type: !526)
!4922 = distinct !DILexicalBlock(scope: !4775, file: !63, line: 3856, column: 5)
!4923 = !DILocation(line: 3858, column: 14, scope: !4922)
!4924 = !DILocalVariable(name: "nopened", scope: !4922, file: !63, line: 3859, type: !52)
!4925 = !DILocation(line: 3859, column: 14, scope: !4922)
!4926 = !DILocation(line: 3859, column: 42, scope: !4922)
!4927 = !DILocation(line: 3859, column: 49, scope: !4922)
!4928 = !DILocation(line: 3859, column: 24, scope: !4922)
!4929 = !DILocation(line: 3861, column: 11, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4922, file: !63, line: 3861, column: 11)
!4931 = !DILocation(line: 3861, column: 22, scope: !4930)
!4932 = !DILocation(line: 3861, column: 19, scope: !4930)
!4933 = !DILocation(line: 3861, column: 11, scope: !4922)
!4934 = !DILocalVariable(name: "ofp", scope: !4935, file: !63, line: 3863, type: !277)
!4935 = distinct !DILexicalBlock(scope: !4930, file: !63, line: 3862, column: 9)
!4936 = !DILocation(line: 3863, column: 17, scope: !4935)
!4937 = !DILocation(line: 3863, column: 36, scope: !4935)
!4938 = !DILocation(line: 3863, column: 23, scope: !4935)
!4939 = !DILocation(line: 3864, column: 15, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4935, file: !63, line: 3864, column: 15)
!4941 = !DILocation(line: 3864, column: 15, scope: !4935)
!4942 = !DILocation(line: 3866, column: 25, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4940, file: !63, line: 3865, column: 13)
!4944 = !DILocation(line: 3866, column: 32, scope: !4943)
!4945 = !DILocation(line: 3866, column: 40, scope: !4943)
!4946 = !DILocation(line: 3866, column: 48, scope: !4943)
!4947 = !DILocation(line: 3866, column: 53, scope: !4943)
!4948 = !DILocation(line: 3866, column: 66, scope: !4943)
!4949 = !DILocation(line: 3866, column: 15, scope: !4943)
!4950 = !DILocation(line: 3867, column: 15, scope: !4943)
!4951 = !DILocation(line: 3869, column: 15, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4935, file: !63, line: 3869, column: 15)
!4953 = !DILocation(line: 3869, column: 21, scope: !4952)
!4954 = !DILocation(line: 3869, column: 31, scope: !4952)
!4955 = !DILocation(line: 3869, column: 34, scope: !4952)
!4956 = !DILocation(line: 3869, column: 42, scope: !4952)
!4957 = !DILocation(line: 3869, column: 15, scope: !4935)
!4958 = !DILocation(line: 3870, column: 23, scope: !4952)
!4959 = !DILocation(line: 3870, column: 41, scope: !4952)
!4960 = !DILocation(line: 3870, column: 13, scope: !4952)
!4961 = !DILocation(line: 3871, column: 9, scope: !4935)
!4962 = !DILocation(line: 3872, column: 16, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4930, file: !63, line: 3872, column: 16)
!4964 = !DILocation(line: 3872, column: 24, scope: !4963)
!4965 = !DILocation(line: 3872, column: 16, scope: !4930)
!4966 = !DILocation(line: 3873, column: 19, scope: !4963)
!4967 = !DILocation(line: 3873, column: 37, scope: !4963)
!4968 = !DILocation(line: 3873, column: 43, scope: !4963)
!4969 = !DILocation(line: 3873, column: 52, scope: !4963)
!4970 = !DILocation(line: 3873, column: 9, scope: !4963)
!4971 = !DILocalVariable(name: "tfp", scope: !4922, file: !63, line: 3880, type: !277)
!4972 = !DILocation(line: 3880, column: 13, scope: !4922)
!4973 = !DILocalVariable(name: "temp", scope: !4922, file: !63, line: 3881, type: !289)
!4974 = !DILocation(line: 3881, column: 24, scope: !4922)
!4975 = !DILocation(line: 3882, column: 7, scope: !4922)
!4976 = !DILocation(line: 3884, column: 18, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4922, file: !63, line: 3883, column: 9)
!4978 = !DILocation(line: 3885, column: 20, scope: !4977)
!4979 = !DILocation(line: 3885, column: 24, scope: !4977)
!4980 = !DILocation(line: 3885, column: 34, scope: !4977)
!4981 = !DILocation(line: 3885, column: 40, scope: !4977)
!4982 = !DILocation(line: 3885, column: 49, scope: !4977)
!4983 = !DILocation(line: 3885, column: 11, scope: !4977)
!4984 = !DILocation(line: 3886, column: 46, scope: !4977)
!4985 = !DILocation(line: 3886, column: 54, scope: !4977)
!4986 = !DILocation(line: 3886, column: 43, scope: !4977)
!4987 = !DILocation(line: 3886, column: 18, scope: !4977)
!4988 = !DILocation(line: 3886, column: 16, scope: !4977)
!4989 = !DILocation(line: 3887, column: 9, scope: !4977)
!4990 = !DILocation(line: 3888, column: 15, scope: !4922)
!4991 = !DILocation(line: 3888, column: 14, scope: !4922)
!4992 = distinct !{!4992, !4975, !4993}
!4993 = !DILocation(line: 3888, column: 19, scope: !4922)
!4994 = !DILocation(line: 3891, column: 18, scope: !4922)
!4995 = !DILocation(line: 3891, column: 28, scope: !4922)
!4996 = !DILocation(line: 3891, column: 51, scope: !4922)
!4997 = !DILocation(line: 3891, column: 60, scope: !4922)
!4998 = !DILocation(line: 3891, column: 65, scope: !4922)
!4999 = !DILocation(line: 3891, column: 71, scope: !4922)
!5000 = !DILocation(line: 3892, column: 17, scope: !4922)
!5001 = !DILocation(line: 3891, column: 7, scope: !4922)
!5002 = !DILocation(line: 3893, column: 17, scope: !4922)
!5003 = !DILocation(line: 3893, column: 14, scope: !4922)
!5004 = !DILocation(line: 3894, column: 23, scope: !4922)
!5005 = !DILocation(line: 3894, column: 29, scope: !4922)
!5006 = !DILocation(line: 3894, column: 7, scope: !4922)
!5007 = !DILocation(line: 3894, column: 16, scope: !4922)
!5008 = !DILocation(line: 3894, column: 21, scope: !4922)
!5009 = !DILocation(line: 3895, column: 23, scope: !4922)
!5010 = !DILocation(line: 3895, column: 7, scope: !4922)
!5011 = !DILocation(line: 3895, column: 16, scope: !4922)
!5012 = !DILocation(line: 3895, column: 21, scope: !4922)
!5013 = !DILocation(line: 3897, column: 17, scope: !4922)
!5014 = !DILocation(line: 3897, column: 7, scope: !4922)
!5015 = !DILocation(line: 3897, column: 28, scope: !4922)
!5016 = !DILocation(line: 3897, column: 34, scope: !4922)
!5017 = !DILocation(line: 3897, column: 45, scope: !4922)
!5018 = !DILocation(line: 3897, column: 54, scope: !4922)
!5019 = !DILocation(line: 3897, column: 52, scope: !4922)
!5020 = !DILocation(line: 3897, column: 63, scope: !4922)
!5021 = !DILocation(line: 3898, column: 13, scope: !4922)
!5022 = !DILocation(line: 3899, column: 17, scope: !4922)
!5023 = !DILocation(line: 3899, column: 25, scope: !4922)
!5024 = !DILocation(line: 3899, column: 14, scope: !4922)
!5025 = distinct !{!5025, !4920, !5026}
!5026 = !DILocation(line: 3900, column: 5, scope: !4775)
!5027 = !DILocation(line: 3901, column: 1, scope: !4775)
!5028 = distinct !DISubprogram(name: "sort", scope: !63, file: !63, line: 3906, type: !575, scopeLine: 3908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5029 = !DILocalVariable(name: "files", arg: 1, scope: !5028, file: !63, line: 3906, type: !520)
!5030 = !DILocation(line: 3906, column: 20, scope: !5028)
!5031 = !DILocalVariable(name: "nfiles", arg: 2, scope: !5028, file: !63, line: 3906, type: !52)
!5032 = !DILocation(line: 3906, column: 34, scope: !5028)
!5033 = !DILocalVariable(name: "output_file", arg: 3, scope: !5028, file: !63, line: 3906, type: !87)
!5034 = !DILocation(line: 3906, column: 54, scope: !5028)
!5035 = !DILocalVariable(name: "nthreads", arg: 4, scope: !5028, file: !63, line: 3907, type: !52)
!5036 = !DILocation(line: 3907, column: 14, scope: !5028)
!5037 = !DILocalVariable(name: "buf", scope: !5028, file: !63, line: 3909, type: !451)
!5038 = !DILocation(line: 3909, column: 17, scope: !5028)
!5039 = !DILocalVariable(name: "ntemps", scope: !5028, file: !63, line: 3911, type: !52)
!5040 = !DILocation(line: 3911, column: 10, scope: !5028)
!5041 = !DILocalVariable(name: "output_file_created", scope: !5028, file: !63, line: 3912, type: !102)
!5042 = !DILocation(line: 3912, column: 8, scope: !5028)
!5043 = !DILocation(line: 3914, column: 7, scope: !5028)
!5044 = !DILocation(line: 3914, column: 13, scope: !5028)
!5045 = !{!4569, !2517, i64 24}
!5046 = !DILocation(line: 3916, column: 3, scope: !5028)
!5047 = !DILocation(line: 3916, column: 10, scope: !5028)
!5048 = !DILocalVariable(name: "temp_output", scope: !5049, file: !63, line: 3918, type: !87)
!5049 = distinct !DILexicalBlock(scope: !5028, file: !63, line: 3917, column: 5)
!5050 = !DILocation(line: 3918, column: 19, scope: !5049)
!5051 = !DILocalVariable(name: "file", scope: !5049, file: !63, line: 3919, type: !87)
!5052 = !DILocation(line: 3919, column: 19, scope: !5049)
!5053 = !DILocation(line: 3919, column: 27, scope: !5049)
!5054 = !DILocation(line: 3919, column: 26, scope: !5049)
!5055 = !DILocalVariable(name: "fp", scope: !5049, file: !63, line: 3920, type: !277)
!5056 = !DILocation(line: 3920, column: 13, scope: !5049)
!5057 = !DILocation(line: 3920, column: 26, scope: !5049)
!5058 = !DILocation(line: 3920, column: 18, scope: !5049)
!5059 = !DILocalVariable(name: "tfp", scope: !5049, file: !63, line: 3921, type: !277)
!5060 = !DILocation(line: 3921, column: 13, scope: !5049)
!5061 = !DILocalVariable(name: "bytes_per_line", scope: !5049, file: !63, line: 3923, type: !52)
!5062 = !DILocation(line: 3923, column: 14, scope: !5049)
!5063 = !DILocation(line: 3924, column: 11, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5049, file: !63, line: 3924, column: 11)
!5065 = !DILocation(line: 3924, column: 20, scope: !5064)
!5066 = !DILocation(line: 3924, column: 11, scope: !5049)
!5067 = !DILocalVariable(name: "tmp", scope: !5068, file: !63, line: 3927, type: !52)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !63, line: 3925, column: 9)
!5069 = !DILocation(line: 3927, column: 18, scope: !5068)
!5070 = !DILocalVariable(name: "mult", scope: !5068, file: !63, line: 3928, type: !52)
!5071 = !DILocation(line: 3928, column: 18, scope: !5068)
!5072 = !DILocation(line: 3929, column: 11, scope: !5068)
!5073 = !DILocation(line: 3929, column: 18, scope: !5068)
!5074 = !DILocation(line: 3929, column: 24, scope: !5068)
!5075 = !DILocation(line: 3929, column: 22, scope: !5068)
!5076 = !DILocation(line: 3931, column: 19, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5068, file: !63, line: 3930, column: 13)
!5078 = !DILocation(line: 3932, column: 19, scope: !5077)
!5079 = distinct !{!5079, !5072, !5080}
!5080 = !DILocation(line: 3933, column: 13, scope: !5068)
!5081 = !DILocation(line: 3934, column: 29, scope: !5068)
!5082 = !DILocation(line: 3934, column: 34, scope: !5068)
!5083 = !DILocation(line: 3934, column: 26, scope: !5068)
!5084 = !DILocation(line: 3935, column: 9, scope: !5068)
!5085 = !DILocation(line: 3937, column: 24, scope: !5064)
!5086 = !DILocation(line: 3939, column: 17, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5049, file: !63, line: 3939, column: 11)
!5088 = !DILocation(line: 3939, column: 13, scope: !5087)
!5089 = !DILocation(line: 3939, column: 11, scope: !5049)
!5090 = !DILocation(line: 3940, column: 24, scope: !5087)
!5091 = !DILocation(line: 3941, column: 44, scope: !5087)
!5092 = !DILocation(line: 3941, column: 51, scope: !5087)
!5093 = !DILocation(line: 3941, column: 59, scope: !5087)
!5094 = !DILocation(line: 3941, column: 18, scope: !5087)
!5095 = !DILocation(line: 3940, column: 9, scope: !5087)
!5096 = !DILocation(line: 3942, column: 11, scope: !5049)
!5097 = !DILocation(line: 3942, column: 15, scope: !5049)
!5098 = !{!4569, !2500, i64 48}
!5099 = !DILocation(line: 3943, column: 12, scope: !5049)
!5100 = !DILocation(line: 3944, column: 13, scope: !5049)
!5101 = !DILocation(line: 3946, column: 7, scope: !5049)
!5102 = !DILocation(line: 3946, column: 29, scope: !5049)
!5103 = !DILocation(line: 3946, column: 33, scope: !5049)
!5104 = !DILocation(line: 3946, column: 14, scope: !5049)
!5105 = !DILocalVariable(name: "line", scope: !5106, file: !63, line: 3948, type: !462)
!5106 = distinct !DILexicalBlock(scope: !5049, file: !63, line: 3947, column: 9)
!5107 = !DILocation(line: 3948, column: 24, scope: !5106)
!5108 = !DILocation(line: 3950, column: 19, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !63, line: 3950, column: 15)
!5110 = !DILocation(line: 3950, column: 23, scope: !5109)
!5111 = !DILocation(line: 3950, column: 26, scope: !5109)
!5112 = !DILocation(line: 3951, column: 15, scope: !5109)
!5113 = !DILocation(line: 3951, column: 19, scope: !5109)
!5114 = !DILocation(line: 3951, column: 34, scope: !5109)
!5115 = !DILocation(line: 3952, column: 26, scope: !5109)
!5116 = !DILocation(line: 3952, column: 38, scope: !5109)
!5117 = !{!4569, !2517, i64 8}
!5118 = !DILocation(line: 3952, column: 32, scope: !5109)
!5119 = !DILocation(line: 3952, column: 45, scope: !5109)
!5120 = !DILocation(line: 3952, column: 66, scope: !5109)
!5121 = !DILocation(line: 3952, column: 60, scope: !5109)
!5122 = !DILocation(line: 3952, column: 43, scope: !5109)
!5123 = !DILocation(line: 3952, column: 19, scope: !5109)
!5124 = !DILocation(line: 3950, column: 15, scope: !5106)
!5125 = !DILocation(line: 3957, column: 30, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5109, file: !63, line: 3953, column: 13)
!5127 = !DILocation(line: 3957, column: 19, scope: !5126)
!5128 = !DILocation(line: 3957, column: 24, scope: !5126)
!5129 = !{!4569, !2517, i64 32}
!5130 = !DILocation(line: 3958, column: 15, scope: !5126)
!5131 = !DILocation(line: 3961, column: 27, scope: !5106)
!5132 = !DILocation(line: 3962, column: 18, scope: !5106)
!5133 = !DILocation(line: 3962, column: 16, scope: !5106)
!5134 = !DILocation(line: 3963, column: 19, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5106, file: !63, line: 3963, column: 15)
!5136 = !DILocation(line: 3963, column: 23, scope: !5135)
!5137 = !DILocation(line: 3963, column: 27, scope: !5135)
!5138 = !DILocation(line: 3963, column: 34, scope: !5135)
!5139 = !DILocation(line: 3963, column: 38, scope: !5135)
!5140 = !DILocation(line: 3963, column: 45, scope: !5135)
!5141 = !DILocation(line: 3963, column: 53, scope: !5135)
!5142 = !DILocation(line: 3963, column: 49, scope: !5135)
!5143 = !DILocation(line: 3963, column: 15, scope: !5106)
!5144 = !DILocation(line: 3965, column: 24, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5135, file: !63, line: 3964, column: 13)
!5146 = !DILocation(line: 3965, column: 28, scope: !5145)
!5147 = !DILocation(line: 3965, column: 15, scope: !5145)
!5148 = !DILocation(line: 3966, column: 29, scope: !5145)
!5149 = !DILocation(line: 3966, column: 21, scope: !5145)
!5150 = !DILocation(line: 3966, column: 19, scope: !5145)
!5151 = !DILocation(line: 3967, column: 29, scope: !5145)
!5152 = !DILocation(line: 3967, column: 27, scope: !5145)
!5153 = !DILocation(line: 3968, column: 35, scope: !5145)
!5154 = !DILocation(line: 3969, column: 13, scope: !5145)
!5155 = !DILocation(line: 3972, column: 15, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5135, file: !63, line: 3971, column: 13)
!5157 = !DILocation(line: 3973, column: 29, scope: !5156)
!5158 = !DILocation(line: 3973, column: 49, scope: !5156)
!5159 = !DILocation(line: 3973, column: 27, scope: !5156)
!5160 = !DILocation(line: 3975, column: 23, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5106, file: !63, line: 3975, column: 15)
!5162 = !DILocation(line: 3975, column: 17, scope: !5161)
!5163 = !DILocation(line: 3975, column: 15, scope: !5106)
!5164 = !DILocalVariable(name: "queue", scope: !5165, file: !63, line: 3977, type: !631)
!5165 = distinct !DILexicalBlock(scope: !5161, file: !63, line: 3976, column: 13)
!5166 = !DILocation(line: 3977, column: 39, scope: !5165)
!5167 = !DILocation(line: 3978, column: 35, scope: !5165)
!5168 = !DILocation(line: 3978, column: 15, scope: !5165)
!5169 = !DILocalVariable(name: "merge_tree", scope: !5165, file: !63, line: 3979, type: !577)
!5170 = !DILocation(line: 3979, column: 34, scope: !5165)
!5171 = !DILocation(line: 3980, column: 34, scope: !5165)
!5172 = !DILocation(line: 3980, column: 48, scope: !5165)
!5173 = !DILocation(line: 3980, column: 56, scope: !5165)
!5174 = !DILocation(line: 3980, column: 17, scope: !5165)
!5175 = !DILocation(line: 3982, column: 26, scope: !5165)
!5176 = !DILocation(line: 3982, column: 32, scope: !5165)
!5177 = !DILocation(line: 3982, column: 46, scope: !5165)
!5178 = !DILocation(line: 3982, column: 54, scope: !5165)
!5179 = !DILocation(line: 3982, column: 65, scope: !5165)
!5180 = !DILocation(line: 3983, column: 34, scope: !5165)
!5181 = !DILocation(line: 3983, column: 39, scope: !5165)
!5182 = !DILocation(line: 3982, column: 15, scope: !5165)
!5183 = !DILocation(line: 3989, column: 13, scope: !5165)
!5184 = !DILocation(line: 3991, column: 27, scope: !5161)
!5185 = !DILocation(line: 3991, column: 32, scope: !5161)
!5186 = !DILocation(line: 3991, column: 37, scope: !5161)
!5187 = !DILocation(line: 3991, column: 42, scope: !5161)
!5188 = !DILocation(line: 3991, column: 13, scope: !5161)
!5189 = !DILocation(line: 3993, column: 20, scope: !5106)
!5190 = !DILocation(line: 3993, column: 25, scope: !5106)
!5191 = !DILocation(line: 3993, column: 11, scope: !5106)
!5192 = !DILocation(line: 3995, column: 15, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5106, file: !63, line: 3995, column: 15)
!5194 = !DILocation(line: 3995, column: 15, scope: !5106)
!5195 = !DILocation(line: 3996, column: 13, scope: !5193)
!5196 = distinct !{!5196, !5101, !5197}
!5197 = !DILocation(line: 3997, column: 9, scope: !5049)
!5198 = !DILocation(line: 3998, column: 16, scope: !5049)
!5199 = !DILocation(line: 3998, column: 20, scope: !5049)
!5200 = !DILocation(line: 3998, column: 7, scope: !5049)
!5201 = distinct !{!5201, !5046, !5202}
!5202 = !DILocation(line: 3999, column: 5, scope: !5028)
!5203 = !DILabel(scope: !5028, name: "finish", file: !63, line: 4001)
!5204 = !DILocation(line: 4001, column: 2, scope: !5028)
!5205 = !DILocation(line: 4002, column: 13, scope: !5028)
!5206 = !DILocation(line: 4002, column: 3, scope: !5028)
!5207 = !DILocation(line: 4004, column: 9, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5028, file: !63, line: 4004, column: 7)
!5209 = !DILocation(line: 4004, column: 7, scope: !5028)
!5210 = !DILocalVariable(name: "node", scope: !5211, file: !63, line: 4006, type: !289)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !63, line: 4005, column: 5)
!5212 = !DILocation(line: 4006, column: 24, scope: !5211)
!5213 = !DILocation(line: 4006, column: 31, scope: !5211)
!5214 = !DILocalVariable(name: "tempfiles", scope: !5211, file: !63, line: 4007, type: !284)
!5215 = !DILocation(line: 4007, column: 24, scope: !5211)
!5216 = !DILocation(line: 4007, column: 46, scope: !5211)
!5217 = !DILocation(line: 4007, column: 36, scope: !5211)
!5218 = !DILocalVariable(name: "i", scope: !5219, file: !63, line: 4008, type: !52)
!5219 = distinct !DILexicalBlock(scope: !5211, file: !63, line: 4008, column: 7)
!5220 = !DILocation(line: 4008, column: 19, scope: !5219)
!5221 = !DILocation(line: 4008, column: 12, scope: !5219)
!5222 = !DILocation(line: 4008, column: 26, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5219, file: !63, line: 4008, column: 7)
!5224 = !DILocation(line: 4008, column: 7, scope: !5219)
!5225 = !DILocation(line: 4010, column: 31, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5223, file: !63, line: 4009, column: 9)
!5227 = !DILocation(line: 4010, column: 37, scope: !5226)
!5228 = !DILocation(line: 4010, column: 11, scope: !5226)
!5229 = !DILocation(line: 4010, column: 21, scope: !5226)
!5230 = !DILocation(line: 4010, column: 24, scope: !5226)
!5231 = !DILocation(line: 4010, column: 29, scope: !5226)
!5232 = !DILocation(line: 4011, column: 31, scope: !5226)
!5233 = !DILocation(line: 4011, column: 11, scope: !5226)
!5234 = !DILocation(line: 4011, column: 21, scope: !5226)
!5235 = !DILocation(line: 4011, column: 24, scope: !5226)
!5236 = !DILocation(line: 4011, column: 29, scope: !5226)
!5237 = !DILocation(line: 4012, column: 18, scope: !5226)
!5238 = !DILocation(line: 4012, column: 24, scope: !5226)
!5239 = !DILocation(line: 4012, column: 16, scope: !5226)
!5240 = !DILocation(line: 4013, column: 9, scope: !5226)
!5241 = !DILocation(line: 4008, column: 33, scope: !5223)
!5242 = !DILocation(line: 4008, column: 7, scope: !5223)
!5243 = distinct !{!5243, !5224, !5244}
!5244 = !DILocation(line: 4013, column: 9, scope: !5219)
!5245 = !DILocation(line: 4014, column: 14, scope: !5211)
!5246 = !DILocation(line: 4014, column: 25, scope: !5211)
!5247 = !DILocation(line: 4014, column: 33, scope: !5211)
!5248 = !DILocation(line: 4014, column: 41, scope: !5211)
!5249 = !DILocation(line: 4014, column: 7, scope: !5211)
!5250 = !DILocation(line: 4015, column: 13, scope: !5211)
!5251 = !DILocation(line: 4015, column: 7, scope: !5211)
!5252 = !DILocation(line: 4016, column: 5, scope: !5211)
!5253 = !DILocation(line: 4018, column: 3, scope: !5028)
!5254 = !DILocation(line: 4019, column: 1, scope: !5028)
!5255 = distinct !DISubprogram(name: "sort_die", scope: !63, file: !63, line: 401, type: !359, scopeLine: 402, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5256 = !DILocalVariable(name: "message", arg: 1, scope: !5255, file: !63, line: 401, type: !87)
!5257 = !DILocation(line: 401, column: 23, scope: !5255)
!5258 = !DILocalVariable(name: "file", arg: 2, scope: !5255, file: !63, line: 401, type: !87)
!5259 = !DILocation(line: 401, column: 44, scope: !5255)
!5260 = !DILocation(line: 403, column: 3, scope: !5255)
!5261 = !DILocalVariable(name: "fps", arg: 1, scope: !795, file: !63, line: 1513, type: !622)
!5262 = !DILocation(line: 1513, column: 32, scope: !795)
!5263 = !DILocalVariable(name: "nfps", arg: 2, scope: !795, file: !63, line: 1513, type: !52)
!5264 = !DILocation(line: 1513, column: 44, scope: !795)
!5265 = !DILocalVariable(name: "files", arg: 3, scope: !795, file: !63, line: 1514, type: !520)
!5266 = !DILocation(line: 1514, column: 32, scope: !795)
!5267 = !DILocalVariable(name: "nfiles", arg: 4, scope: !795, file: !63, line: 1514, type: !52)
!5268 = !DILocation(line: 1514, column: 46, scope: !795)
!5269 = !DILocalVariable(name: "line_bytes", arg: 5, scope: !795, file: !63, line: 1515, type: !52)
!5270 = !DILocation(line: 1515, column: 26, scope: !795)
!5271 = !DILocalVariable(name: "worst_case_per_input_byte", scope: !795, file: !63, line: 1522, type: !52)
!5272 = !DILocation(line: 1522, column: 10, scope: !795)
!5273 = !DILocation(line: 1522, column: 38, scope: !795)
!5274 = !DILocation(line: 1522, column: 49, scope: !795)
!5275 = !DILocalVariable(name: "size", scope: !795, file: !63, line: 1526, type: !52)
!5276 = !DILocation(line: 1526, column: 10, scope: !795)
!5277 = !DILocation(line: 1526, column: 17, scope: !795)
!5278 = !DILocation(line: 1526, column: 43, scope: !795)
!5279 = !DILocalVariable(name: "i", scope: !5280, file: !63, line: 1528, type: !52)
!5280 = distinct !DILexicalBlock(scope: !795, file: !63, line: 1528, column: 3)
!5281 = !DILocation(line: 1528, column: 15, scope: !5280)
!5282 = !DILocation(line: 1528, column: 8, scope: !5280)
!5283 = !DILocation(line: 1528, column: 22, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5280, file: !63, line: 1528, column: 3)
!5285 = !DILocation(line: 1528, column: 26, scope: !5284)
!5286 = !DILocation(line: 1528, column: 24, scope: !5284)
!5287 = !DILocation(line: 1528, column: 3, scope: !5280)
!5288 = !DILocalVariable(name: "st", scope: !5289, file: !63, line: 1530, type: !377)
!5289 = distinct !DILexicalBlock(scope: !5284, file: !63, line: 1529, column: 5)
!5290 = !DILocation(line: 1530, column: 19, scope: !5289)
!5291 = !DILocalVariable(name: "file_size", scope: !5289, file: !63, line: 1531, type: !624)
!5292 = !DILocation(line: 1531, column: 13, scope: !5289)
!5293 = !DILocalVariable(name: "worst_case", scope: !5289, file: !63, line: 1532, type: !52)
!5294 = !DILocation(line: 1532, column: 14, scope: !5289)
!5295 = !DILocation(line: 1534, column: 12, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5289, file: !63, line: 1534, column: 11)
!5297 = !DILocation(line: 1534, column: 16, scope: !5296)
!5298 = !DILocation(line: 1534, column: 14, scope: !5296)
!5299 = !DILocation(line: 1534, column: 38, scope: !5296)
!5300 = !DILocation(line: 1534, column: 42, scope: !5296)
!5301 = !DILocation(line: 1534, column: 30, scope: !5296)
!5302 = !DILocation(line: 1534, column: 23, scope: !5296)
!5303 = !DILocation(line: 1535, column: 14, scope: !5296)
!5304 = !DILocation(line: 1535, column: 38, scope: !5296)
!5305 = !DILocation(line: 1536, column: 20, scope: !5296)
!5306 = !DILocation(line: 1536, column: 26, scope: !5296)
!5307 = !DILocation(line: 1536, column: 14, scope: !5296)
!5308 = !DILocation(line: 1537, column: 11, scope: !5296)
!5309 = !DILocation(line: 1534, column: 11, scope: !5289)
!5310 = !DILocation(line: 1538, column: 19, scope: !5296)
!5311 = !DILocation(line: 1538, column: 37, scope: !5296)
!5312 = !DILocation(line: 1538, column: 43, scope: !5296)
!5313 = !DILocation(line: 1538, column: 9, scope: !5296)
!5314 = !DILocation(line: 1540, column: 11, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5289, file: !63, line: 1540, column: 11)
!5316 = !{!5317, !2343, i64 24}
!5317 = !{!"stat", !2517, i64 0, !2517, i64 8, !2517, i64 16, !2343, i64 24, !2343, i64 28, !2343, i64 32, !2343, i64 36, !2517, i64 40, !2517, i64 48, !2517, i64 56, !2517, i64 64, !5318, i64 72, !5318, i64 88, !5318, i64 104, !2344, i64 120}
!5318 = !{!"timespec", !2517, i64 0, !2517, i64 8}
!5319 = !DILocation(line: 1540, column: 11, scope: !5289)
!5320 = !DILocation(line: 1541, column: 24, scope: !5315)
!5321 = !{!5317, !2517, i64 48}
!5322 = !DILocation(line: 1541, column: 19, scope: !5315)
!5323 = !DILocation(line: 1541, column: 9, scope: !5315)
!5324 = !DILocation(line: 1546, column: 15, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5326, file: !63, line: 1546, column: 15)
!5326 = distinct !DILexicalBlock(scope: !5315, file: !63, line: 1543, column: 9)
!5327 = !DILocation(line: 1546, column: 15, scope: !5326)
!5328 = !DILocation(line: 1547, column: 20, scope: !5325)
!5329 = !DILocation(line: 1547, column: 13, scope: !5325)
!5330 = !DILocation(line: 1548, column: 21, scope: !5326)
!5331 = !DILocation(line: 1551, column: 13, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5289, file: !63, line: 1551, column: 11)
!5333 = !DILocation(line: 1551, column: 11, scope: !5289)
!5334 = !DILocation(line: 1553, column: 24, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5332, file: !63, line: 1552, column: 9)
!5336 = !DILocation(line: 1553, column: 22, scope: !5335)
!5337 = !DILocation(line: 1554, column: 17, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5335, file: !63, line: 1554, column: 15)
!5339 = !DILocation(line: 1554, column: 15, scope: !5335)
!5340 = !DILocation(line: 1555, column: 26, scope: !5338)
!5341 = !DILocation(line: 1555, column: 24, scope: !5338)
!5342 = !DILocation(line: 1555, column: 13, scope: !5338)
!5343 = !DILocation(line: 1556, column: 9, scope: !5335)
!5344 = !DILocation(line: 1561, column: 20, scope: !5289)
!5345 = !DILocation(line: 1561, column: 32, scope: !5289)
!5346 = !DILocation(line: 1561, column: 30, scope: !5289)
!5347 = !DILocation(line: 1561, column: 58, scope: !5289)
!5348 = !DILocation(line: 1561, column: 18, scope: !5289)
!5349 = !DILocation(line: 1562, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5289, file: !63, line: 1562, column: 11)
!5351 = !DILocation(line: 1562, column: 24, scope: !5350)
!5352 = !DILocation(line: 1562, column: 37, scope: !5350)
!5353 = !DILocation(line: 1562, column: 35, scope: !5350)
!5354 = !DILocation(line: 1562, column: 21, scope: !5350)
!5355 = !DILocation(line: 1563, column: 11, scope: !5350)
!5356 = !DILocation(line: 1563, column: 14, scope: !5350)
!5357 = !DILocation(line: 1563, column: 27, scope: !5350)
!5358 = !DILocation(line: 1563, column: 25, scope: !5350)
!5359 = !DILocation(line: 1563, column: 35, scope: !5350)
!5360 = !DILocation(line: 1563, column: 32, scope: !5350)
!5361 = !DILocation(line: 1562, column: 11, scope: !5289)
!5362 = !DILocation(line: 1564, column: 16, scope: !5350)
!5363 = !DILocation(line: 1564, column: 9, scope: !5350)
!5364 = !DILocation(line: 1565, column: 15, scope: !5289)
!5365 = !DILocation(line: 1565, column: 12, scope: !5289)
!5366 = !DILocation(line: 1566, column: 5, scope: !5289)
!5367 = !DILocation(line: 1528, column: 35, scope: !5284)
!5368 = !DILocation(line: 1528, column: 3, scope: !5284)
!5369 = distinct !{!5369, !5287, !5370}
!5370 = !DILocation(line: 1566, column: 5, scope: !5280)
!5371 = !DILocation(line: 1568, column: 10, scope: !795)
!5372 = !DILocation(line: 1568, column: 3, scope: !795)
!5373 = !DILocation(line: 1569, column: 1, scope: !795)
!5374 = distinct !DISubprogram(name: "initbuf", scope: !63, file: !63, line: 1576, type: !448, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5375 = !DILocalVariable(name: "buf", arg: 1, scope: !5374, file: !63, line: 1576, type: !450)
!5376 = !DILocation(line: 1576, column: 25, scope: !5374)
!5377 = !DILocalVariable(name: "line_bytes", arg: 2, scope: !5374, file: !63, line: 1576, type: !52)
!5378 = !DILocation(line: 1576, column: 37, scope: !5374)
!5379 = !DILocalVariable(name: "alloc", arg: 3, scope: !5374, file: !63, line: 1576, type: !52)
!5380 = !DILocation(line: 1576, column: 56, scope: !5374)
!5381 = !DILocation(line: 1582, column: 3, scope: !5374)
!5382 = !DILocation(line: 1584, column: 39, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5374, file: !63, line: 1583, column: 5)
!5384 = !DILocation(line: 1584, column: 45, scope: !5383)
!5385 = !DILocation(line: 1584, column: 37, scope: !5383)
!5386 = !DILocation(line: 1584, column: 13, scope: !5383)
!5387 = !DILocation(line: 1585, column: 26, scope: !5383)
!5388 = !DILocation(line: 1585, column: 18, scope: !5383)
!5389 = !DILocation(line: 1585, column: 7, scope: !5383)
!5390 = !DILocation(line: 1585, column: 12, scope: !5383)
!5391 = !DILocation(line: 1585, column: 16, scope: !5383)
!5392 = !DILocation(line: 1586, column: 11, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5383, file: !63, line: 1586, column: 11)
!5394 = !DILocation(line: 1586, column: 16, scope: !5393)
!5395 = !DILocation(line: 1586, column: 11, scope: !5383)
!5396 = !DILocation(line: 1587, column: 9, scope: !5393)
!5397 = !DILocation(line: 1588, column: 13, scope: !5383)
!5398 = !DILocation(line: 1589, column: 11, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5383, file: !63, line: 1589, column: 11)
!5400 = !DILocation(line: 1589, column: 20, scope: !5399)
!5401 = !DILocation(line: 1589, column: 31, scope: !5399)
!5402 = !DILocation(line: 1589, column: 17, scope: !5399)
!5403 = !DILocation(line: 1589, column: 11, scope: !5383)
!5404 = !DILocation(line: 1590, column: 9, scope: !5399)
!5405 = distinct !{!5405, !5381, !5406}
!5406 = !DILocation(line: 1591, column: 5, scope: !5374)
!5407 = !DILocation(line: 1593, column: 21, scope: !5374)
!5408 = !DILocation(line: 1593, column: 3, scope: !5374)
!5409 = !DILocation(line: 1593, column: 8, scope: !5374)
!5410 = !DILocation(line: 1593, column: 19, scope: !5374)
!5411 = !{!4569, !2517, i64 40}
!5412 = !DILocation(line: 1594, column: 16, scope: !5374)
!5413 = !DILocation(line: 1594, column: 3, scope: !5374)
!5414 = !DILocation(line: 1594, column: 8, scope: !5374)
!5415 = !DILocation(line: 1594, column: 14, scope: !5374)
!5416 = !DILocation(line: 1595, column: 27, scope: !5374)
!5417 = !DILocation(line: 1595, column: 32, scope: !5374)
!5418 = !DILocation(line: 1595, column: 39, scope: !5374)
!5419 = !DILocation(line: 1595, column: 15, scope: !5374)
!5420 = !DILocation(line: 1595, column: 20, scope: !5374)
!5421 = !DILocation(line: 1595, column: 25, scope: !5374)
!5422 = !DILocation(line: 1595, column: 3, scope: !5374)
!5423 = !DILocation(line: 1595, column: 8, scope: !5374)
!5424 = !DILocation(line: 1595, column: 13, scope: !5374)
!5425 = !DILocation(line: 1596, column: 3, scope: !5374)
!5426 = !DILocation(line: 1596, column: 8, scope: !5374)
!5427 = !DILocation(line: 1596, column: 12, scope: !5374)
!5428 = !DILocation(line: 1597, column: 1, scope: !5374)
!5429 = distinct !DISubprogram(name: "fillbuf", scope: !63, file: !63, line: 1759, type: !460, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5430 = !DILocalVariable(name: "buf", arg: 1, scope: !5429, file: !63, line: 1759, type: !450)
!5431 = !DILocation(line: 1759, column: 25, scope: !5429)
!5432 = !DILocalVariable(name: "fp", arg: 2, scope: !5429, file: !63, line: 1759, type: !277)
!5433 = !DILocation(line: 1759, column: 36, scope: !5429)
!5434 = !DILocalVariable(name: "file", arg: 3, scope: !5429, file: !63, line: 1759, type: !87)
!5435 = !DILocation(line: 1759, column: 52, scope: !5429)
!5436 = !DILocalVariable(name: "key", scope: !5429, file: !63, line: 1761, type: !416)
!5437 = !DILocation(line: 1761, column: 26, scope: !5429)
!5438 = !DILocation(line: 1761, column: 32, scope: !5429)
!5439 = !DILocalVariable(name: "eol", scope: !5429, file: !63, line: 1762, type: !8)
!5440 = !DILocation(line: 1762, column: 8, scope: !5429)
!5441 = !DILocation(line: 1762, column: 14, scope: !5429)
!5442 = !DILocalVariable(name: "line_bytes", scope: !5429, file: !63, line: 1763, type: !52)
!5443 = !DILocation(line: 1763, column: 10, scope: !5429)
!5444 = !DILocation(line: 1763, column: 23, scope: !5429)
!5445 = !DILocation(line: 1763, column: 28, scope: !5429)
!5446 = !DILocalVariable(name: "mergesize", scope: !5429, file: !63, line: 1764, type: !52)
!5447 = !DILocation(line: 1764, column: 10, scope: !5429)
!5448 = !DILocation(line: 1764, column: 22, scope: !5429)
!5449 = !DILocation(line: 1764, column: 40, scope: !5429)
!5450 = !DILocation(line: 1766, column: 7, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5429, file: !63, line: 1766, column: 7)
!5452 = !DILocation(line: 1766, column: 12, scope: !5451)
!5453 = !DILocation(line: 1766, column: 7, scope: !5429)
!5454 = !DILocation(line: 1767, column: 5, scope: !5451)
!5455 = !DILocation(line: 1769, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5429, file: !63, line: 1769, column: 7)
!5457 = !DILocation(line: 1769, column: 12, scope: !5456)
!5458 = !DILocation(line: 1769, column: 20, scope: !5456)
!5459 = !DILocation(line: 1769, column: 25, scope: !5456)
!5460 = !DILocation(line: 1769, column: 17, scope: !5456)
!5461 = !DILocation(line: 1769, column: 7, scope: !5429)
!5462 = !DILocation(line: 1771, column: 16, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5456, file: !63, line: 1770, column: 5)
!5464 = !DILocation(line: 1771, column: 21, scope: !5463)
!5465 = !DILocation(line: 1771, column: 26, scope: !5463)
!5466 = !DILocation(line: 1771, column: 31, scope: !5463)
!5467 = !DILocation(line: 1771, column: 37, scope: !5463)
!5468 = !DILocation(line: 1771, column: 42, scope: !5463)
!5469 = !DILocation(line: 1771, column: 35, scope: !5463)
!5470 = !DILocation(line: 1771, column: 49, scope: !5463)
!5471 = !DILocation(line: 1771, column: 54, scope: !5463)
!5472 = !DILocation(line: 1771, column: 47, scope: !5463)
!5473 = !DILocation(line: 1771, column: 60, scope: !5463)
!5474 = !DILocation(line: 1771, column: 65, scope: !5463)
!5475 = !DILocation(line: 1771, column: 7, scope: !5463)
!5476 = !DILocation(line: 1772, column: 19, scope: !5463)
!5477 = !DILocation(line: 1772, column: 24, scope: !5463)
!5478 = !DILocation(line: 1772, column: 7, scope: !5463)
!5479 = !DILocation(line: 1772, column: 12, scope: !5463)
!5480 = !DILocation(line: 1772, column: 17, scope: !5463)
!5481 = !DILocation(line: 1773, column: 7, scope: !5463)
!5482 = !DILocation(line: 1773, column: 12, scope: !5463)
!5483 = !DILocation(line: 1773, column: 19, scope: !5463)
!5484 = !DILocation(line: 1774, column: 5, scope: !5463)
!5485 = !DILocation(line: 1776, column: 3, scope: !5429)
!5486 = !DILocalVariable(name: "ptr", scope: !5487, file: !63, line: 1778, type: !7)
!5487 = distinct !DILexicalBlock(scope: !5429, file: !63, line: 1777, column: 5)
!5488 = !DILocation(line: 1778, column: 13, scope: !5487)
!5489 = !DILocation(line: 1778, column: 19, scope: !5487)
!5490 = !DILocation(line: 1778, column: 24, scope: !5487)
!5491 = !DILocation(line: 1778, column: 30, scope: !5487)
!5492 = !DILocation(line: 1778, column: 35, scope: !5487)
!5493 = !DILocation(line: 1778, column: 28, scope: !5487)
!5494 = !DILocalVariable(name: "linelim", scope: !5487, file: !63, line: 1779, type: !462)
!5495 = !DILocation(line: 1779, column: 20, scope: !5487)
!5496 = !DILocation(line: 1779, column: 46, scope: !5487)
!5497 = !DILocation(line: 1779, column: 30, scope: !5487)
!5498 = !DILocalVariable(name: "line", scope: !5487, file: !63, line: 1780, type: !462)
!5499 = !DILocation(line: 1780, column: 20, scope: !5487)
!5500 = !DILocation(line: 1780, column: 27, scope: !5487)
!5501 = !DILocation(line: 1780, column: 37, scope: !5487)
!5502 = !DILocation(line: 1780, column: 42, scope: !5487)
!5503 = !DILocation(line: 1780, column: 35, scope: !5487)
!5504 = !DILocalVariable(name: "avail", scope: !5487, file: !63, line: 1781, type: !52)
!5505 = !DILocation(line: 1781, column: 14, scope: !5487)
!5506 = !DILocation(line: 1781, column: 31, scope: !5487)
!5507 = !DILocation(line: 1781, column: 22, scope: !5487)
!5508 = !DILocation(line: 1781, column: 41, scope: !5487)
!5509 = !DILocation(line: 1781, column: 46, scope: !5487)
!5510 = !DILocation(line: 1781, column: 55, scope: !5487)
!5511 = !DILocation(line: 1781, column: 53, scope: !5487)
!5512 = !DILocation(line: 1781, column: 39, scope: !5487)
!5513 = !DILocation(line: 1781, column: 68, scope: !5487)
!5514 = !DILocation(line: 1781, column: 66, scope: !5487)
!5515 = !DILocalVariable(name: "line_start", scope: !5487, file: !63, line: 1782, type: !7)
!5516 = !DILocation(line: 1782, column: 13, scope: !5487)
!5517 = !DILocation(line: 1782, column: 26, scope: !5487)
!5518 = !DILocation(line: 1782, column: 31, scope: !5487)
!5519 = !DILocation(line: 1782, column: 40, scope: !5487)
!5520 = !DILocation(line: 1782, column: 46, scope: !5487)
!5521 = !DILocation(line: 1782, column: 53, scope: !5487)
!5522 = !DILocation(line: 1782, column: 59, scope: !5487)
!5523 = !DILocation(line: 1782, column: 51, scope: !5487)
!5524 = !DILocation(line: 1782, column: 68, scope: !5487)
!5525 = !DILocation(line: 1782, column: 73, scope: !5487)
!5526 = !DILocation(line: 1784, column: 7, scope: !5487)
!5527 = !DILocation(line: 1784, column: 14, scope: !5487)
!5528 = !DILocation(line: 1784, column: 25, scope: !5487)
!5529 = !DILocation(line: 1784, column: 31, scope: !5487)
!5530 = !DILocation(line: 1784, column: 29, scope: !5487)
!5531 = !DILocalVariable(name: "readsize", scope: !5532, file: !63, line: 1791, type: !52)
!5532 = distinct !DILexicalBlock(scope: !5487, file: !63, line: 1785, column: 9)
!5533 = !DILocation(line: 1791, column: 18, scope: !5532)
!5534 = !DILocation(line: 1791, column: 30, scope: !5532)
!5535 = !DILocation(line: 1791, column: 36, scope: !5532)
!5536 = !DILocation(line: 1791, column: 44, scope: !5532)
!5537 = !DILocation(line: 1791, column: 55, scope: !5532)
!5538 = !DILocation(line: 1791, column: 41, scope: !5532)
!5539 = !DILocalVariable(name: "bytes_read", scope: !5532, file: !63, line: 1792, type: !52)
!5540 = !DILocation(line: 1792, column: 18, scope: !5532)
!5541 = !DILocation(line: 1792, column: 31, scope: !5532)
!5542 = !DILocalVariable(name: "ptrlim", scope: !5532, file: !63, line: 1793, type: !7)
!5543 = !DILocation(line: 1793, column: 17, scope: !5532)
!5544 = !DILocation(line: 1793, column: 26, scope: !5532)
!5545 = !DILocation(line: 1793, column: 32, scope: !5532)
!5546 = !DILocation(line: 1793, column: 30, scope: !5532)
!5547 = !DILocalVariable(name: "p", scope: !5532, file: !63, line: 1794, type: !7)
!5548 = !DILocation(line: 1794, column: 17, scope: !5532)
!5549 = !DILocation(line: 1795, column: 20, scope: !5532)
!5550 = !DILocation(line: 1795, column: 17, scope: !5532)
!5551 = !DILocation(line: 1797, column: 15, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5532, file: !63, line: 1797, column: 15)
!5553 = !DILocation(line: 1797, column: 29, scope: !5552)
!5554 = !DILocation(line: 1797, column: 26, scope: !5552)
!5555 = !DILocation(line: 1797, column: 15, scope: !5532)
!5556 = !DILocation(line: 1799, column: 19, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !63, line: 1799, column: 19)
!5558 = distinct !DILexicalBlock(scope: !5552, file: !63, line: 1798, column: 13)
!5559 = !DILocation(line: 1799, column: 19, scope: !5558)
!5560 = !DILocation(line: 1800, column: 27, scope: !5557)
!5561 = !DILocation(line: 1800, column: 45, scope: !5557)
!5562 = !DILocation(line: 1800, column: 17, scope: !5557)
!5563 = !DILocation(line: 1801, column: 19, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5558, file: !63, line: 1801, column: 19)
!5565 = !DILocation(line: 1801, column: 19, scope: !5558)
!5566 = !DILocation(line: 1803, column: 19, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5564, file: !63, line: 1802, column: 17)
!5568 = !DILocation(line: 1803, column: 24, scope: !5567)
!5569 = !DILocation(line: 1803, column: 28, scope: !5567)
!5570 = !DILocation(line: 1804, column: 23, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !63, line: 1804, column: 23)
!5572 = !DILocation(line: 1804, column: 28, scope: !5571)
!5573 = !DILocation(line: 1804, column: 35, scope: !5571)
!5574 = !DILocation(line: 1804, column: 32, scope: !5571)
!5575 = !DILocation(line: 1804, column: 23, scope: !5567)
!5576 = !DILocation(line: 1805, column: 21, scope: !5571)
!5577 = !DILocation(line: 1806, column: 23, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5567, file: !63, line: 1806, column: 23)
!5579 = !DILocation(line: 1806, column: 37, scope: !5578)
!5580 = !DILocation(line: 1806, column: 34, scope: !5578)
!5581 = !DILocation(line: 1806, column: 44, scope: !5578)
!5582 = !DILocation(line: 1806, column: 47, scope: !5578)
!5583 = !DILocation(line: 1806, column: 61, scope: !5578)
!5584 = !DILocation(line: 1806, column: 58, scope: !5578)
!5585 = !DILocation(line: 1806, column: 23, scope: !5567)
!5586 = !DILocation(line: 1807, column: 33, scope: !5578)
!5587 = !DILocation(line: 1807, column: 28, scope: !5578)
!5588 = !DILocation(line: 1807, column: 31, scope: !5578)
!5589 = !DILocation(line: 1807, column: 21, scope: !5578)
!5590 = !DILocation(line: 1808, column: 17, scope: !5567)
!5591 = !DILocation(line: 1809, column: 13, scope: !5558)
!5592 = !DILocation(line: 1812, column: 11, scope: !5532)
!5593 = !DILocation(line: 1812, column: 31, scope: !5532)
!5594 = !DILocation(line: 1812, column: 36, scope: !5532)
!5595 = !DILocation(line: 1812, column: 41, scope: !5532)
!5596 = !DILocation(line: 1812, column: 50, scope: !5532)
!5597 = !DILocation(line: 1812, column: 48, scope: !5532)
!5598 = !DILocation(line: 1812, column: 23, scope: !5532)
!5599 = !DILocation(line: 1812, column: 21, scope: !5532)
!5600 = !DILocation(line: 1817, column: 16, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5532, file: !63, line: 1813, column: 13)
!5602 = !DILocation(line: 1817, column: 18, scope: !5601)
!5603 = !DILocation(line: 1818, column: 21, scope: !5601)
!5604 = !DILocation(line: 1818, column: 23, scope: !5601)
!5605 = !DILocation(line: 1818, column: 19, scope: !5601)
!5606 = !DILocation(line: 1819, column: 19, scope: !5601)
!5607 = !DILocation(line: 1820, column: 28, scope: !5601)
!5608 = !DILocation(line: 1820, column: 15, scope: !5601)
!5609 = !DILocation(line: 1820, column: 21, scope: !5601)
!5610 = !DILocation(line: 1820, column: 26, scope: !5601)
!5611 = !DILocation(line: 1821, column: 30, scope: !5601)
!5612 = !DILocation(line: 1821, column: 36, scope: !5601)
!5613 = !DILocation(line: 1821, column: 34, scope: !5601)
!5614 = !DILocation(line: 1821, column: 15, scope: !5601)
!5615 = !DILocation(line: 1821, column: 21, scope: !5601)
!5616 = !DILocation(line: 1821, column: 28, scope: !5601)
!5617 = !DILocation(line: 1822, column: 27, scope: !5601)
!5618 = !DILocation(line: 1822, column: 25, scope: !5601)
!5619 = !DILocation(line: 1823, column: 24, scope: !5601)
!5620 = !DILocation(line: 1823, column: 21, scope: !5601)
!5621 = !DILocation(line: 1825, column: 19, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5601, file: !63, line: 1825, column: 19)
!5623 = !DILocation(line: 1825, column: 19, scope: !5601)
!5624 = !DILocation(line: 1829, column: 35, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5622, file: !63, line: 1826, column: 17)
!5626 = !DILocation(line: 1829, column: 40, scope: !5625)
!5627 = !DILocation(line: 1829, column: 46, scope: !5625)
!5628 = !DILocation(line: 1830, column: 37, scope: !5625)
!5629 = !DILocation(line: 1831, column: 47, scope: !5625)
!5630 = !DILocation(line: 1831, column: 53, scope: !5625)
!5631 = !DILocation(line: 1831, column: 37, scope: !5625)
!5632 = !DILocation(line: 1829, column: 19, scope: !5625)
!5633 = !DILocation(line: 1829, column: 25, scope: !5625)
!5634 = !DILocation(line: 1829, column: 32, scope: !5625)
!5635 = !DILocation(line: 1833, column: 23, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5625, file: !63, line: 1833, column: 23)
!5637 = !DILocation(line: 1833, column: 28, scope: !5636)
!5638 = !DILocation(line: 1833, column: 34, scope: !5636)
!5639 = !DILocation(line: 1833, column: 23, scope: !5625)
!5640 = !DILocation(line: 1834, column: 46, scope: !5636)
!5641 = !DILocation(line: 1834, column: 52, scope: !5636)
!5642 = !DILocation(line: 1834, column: 36, scope: !5636)
!5643 = !DILocation(line: 1834, column: 21, scope: !5636)
!5644 = !DILocation(line: 1834, column: 27, scope: !5636)
!5645 = !DILocation(line: 1834, column: 34, scope: !5636)
!5646 = !DILocation(line: 1837, column: 27, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !63, line: 1837, column: 27)
!5648 = distinct !DILexicalBlock(scope: !5636, file: !63, line: 1836, column: 21)
!5649 = !DILocation(line: 1837, column: 32, scope: !5647)
!5650 = !DILocation(line: 1837, column: 27, scope: !5648)
!5651 = !DILocation(line: 1838, column: 25, scope: !5647)
!5652 = !DILocation(line: 1838, column: 50, scope: !5647)
!5653 = !DILocation(line: 1838, column: 49, scope: !5647)
!5654 = !DILocation(line: 1838, column: 39, scope: !5647)
!5655 = !DILocation(line: 1838, column: 32, scope: !5647)
!5656 = !DILocation(line: 1839, column: 37, scope: !5647)
!5657 = distinct !{!5657, !5651, !5656}
!5658 = !DILocation(line: 1840, column: 38, scope: !5648)
!5659 = !DILocation(line: 1840, column: 23, scope: !5648)
!5660 = !DILocation(line: 1840, column: 29, scope: !5648)
!5661 = !DILocation(line: 1840, column: 36, scope: !5648)
!5662 = !DILocation(line: 1842, column: 17, scope: !5625)
!5663 = !DILocation(line: 1844, column: 28, scope: !5601)
!5664 = !DILocation(line: 1844, column: 26, scope: !5601)
!5665 = distinct !{!5665, !5592, !5666}
!5666 = !DILocation(line: 1845, column: 13, scope: !5532)
!5667 = !DILocation(line: 1847, column: 17, scope: !5532)
!5668 = !DILocation(line: 1847, column: 15, scope: !5532)
!5669 = !DILocation(line: 1848, column: 15, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5532, file: !63, line: 1848, column: 15)
!5671 = !DILocation(line: 1848, column: 20, scope: !5670)
!5672 = !DILocation(line: 1848, column: 15, scope: !5532)
!5673 = !DILocation(line: 1849, column: 13, scope: !5670)
!5674 = distinct !{!5674, !5526, !5675}
!5675 = !DILocation(line: 1850, column: 9, scope: !5487)
!5676 = !DILocation(line: 1852, column: 19, scope: !5487)
!5677 = !DILocation(line: 1852, column: 25, scope: !5487)
!5678 = !DILocation(line: 1852, column: 30, scope: !5487)
!5679 = !DILocation(line: 1852, column: 23, scope: !5487)
!5680 = !DILocation(line: 1852, column: 7, scope: !5487)
!5681 = !DILocation(line: 1852, column: 12, scope: !5487)
!5682 = !DILocation(line: 1852, column: 17, scope: !5487)
!5683 = !DILocation(line: 1853, column: 37, scope: !5487)
!5684 = !DILocation(line: 1853, column: 21, scope: !5487)
!5685 = !DILocation(line: 1853, column: 44, scope: !5487)
!5686 = !DILocation(line: 1853, column: 42, scope: !5487)
!5687 = !DILocation(line: 1853, column: 7, scope: !5487)
!5688 = !DILocation(line: 1853, column: 12, scope: !5487)
!5689 = !DILocation(line: 1853, column: 19, scope: !5487)
!5690 = !DILocation(line: 1854, column: 11, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5487, file: !63, line: 1854, column: 11)
!5692 = !DILocation(line: 1854, column: 16, scope: !5691)
!5693 = !DILocation(line: 1854, column: 23, scope: !5691)
!5694 = !DILocation(line: 1854, column: 11, scope: !5487)
!5695 = !DILocation(line: 1856, column: 23, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5691, file: !63, line: 1855, column: 9)
!5697 = !DILocation(line: 1856, column: 29, scope: !5696)
!5698 = !DILocation(line: 1856, column: 27, scope: !5696)
!5699 = !DILocation(line: 1856, column: 11, scope: !5696)
!5700 = !DILocation(line: 1856, column: 16, scope: !5696)
!5701 = !DILocation(line: 1856, column: 21, scope: !5696)
!5702 = !DILocation(line: 1857, column: 31, scope: !5696)
!5703 = !DILocation(line: 1857, column: 41, scope: !5696)
!5704 = !DILocation(line: 1857, column: 29, scope: !5696)
!5705 = !DILocation(line: 1858, column: 11, scope: !5696)
!5706 = !DILocalVariable(name: "line_alloc", scope: !5707, file: !63, line: 1865, type: !52)
!5707 = distinct !DILexicalBlock(scope: !5487, file: !63, line: 1861, column: 7)
!5708 = !DILocation(line: 1865, column: 16, scope: !5707)
!5709 = !DILocation(line: 1865, column: 29, scope: !5707)
!5710 = !DILocation(line: 1865, column: 34, scope: !5707)
!5711 = !DILocation(line: 1865, column: 40, scope: !5707)
!5712 = !DILocation(line: 1866, column: 32, scope: !5707)
!5713 = !DILocation(line: 1866, column: 37, scope: !5707)
!5714 = !DILocation(line: 1866, column: 20, scope: !5707)
!5715 = !DILocation(line: 1866, column: 9, scope: !5707)
!5716 = !DILocation(line: 1866, column: 14, scope: !5707)
!5717 = !DILocation(line: 1866, column: 18, scope: !5707)
!5718 = !DILocation(line: 1867, column: 22, scope: !5707)
!5719 = !DILocation(line: 1867, column: 33, scope: !5707)
!5720 = !DILocation(line: 1867, column: 9, scope: !5707)
!5721 = !DILocation(line: 1867, column: 14, scope: !5707)
!5722 = !DILocation(line: 1867, column: 20, scope: !5707)
!5723 = distinct !{!5723, !5485, !5724}
!5724 = !DILocation(line: 1869, column: 5, scope: !5429)
!5725 = !DILocation(line: 1870, column: 1, scope: !5429)
!5726 = distinct !DISubprogram(name: "buffer_linelim", scope: !63, file: !63, line: 1602, type: !465, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5727 = !DILocalVariable(name: "buf", arg: 1, scope: !5726, file: !63, line: 1602, type: !467)
!5728 = !DILocation(line: 1602, column: 38, scope: !5726)
!5729 = !DILocalVariable(name: "linelim", scope: !5726, file: !63, line: 1604, type: !47)
!5730 = !DILocation(line: 1604, column: 9, scope: !5726)
!5731 = !DILocation(line: 1604, column: 19, scope: !5726)
!5732 = !DILocation(line: 1604, column: 24, scope: !5726)
!5733 = !DILocation(line: 1604, column: 30, scope: !5726)
!5734 = !DILocation(line: 1604, column: 35, scope: !5726)
!5735 = !DILocation(line: 1604, column: 28, scope: !5726)
!5736 = !DILocation(line: 1605, column: 10, scope: !5726)
!5737 = !DILocation(line: 1605, column: 3, scope: !5726)
!5738 = distinct !DISubprogram(name: "create_temp", scope: !63, file: !63, line: 1164, type: !527, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5739 = !DILocalVariable(name: "pfp", arg: 1, scope: !5738, file: !63, line: 1164, type: !526)
!5740 = !DILocation(line: 1164, column: 21, scope: !5738)
!5741 = !DILocation(line: 1166, column: 29, scope: !5738)
!5742 = !DILocation(line: 1166, column: 10, scope: !5738)
!5743 = !DILocation(line: 1166, column: 3, scope: !5738)
!5744 = distinct !DISubprogram(name: "queue_init", scope: !63, file: !63, line: 3379, type: !628, scopeLine: 3380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5745 = !DILocalVariable(name: "queue", arg: 1, scope: !5744, file: !63, line: 3379, type: !630)
!5746 = !DILocation(line: 3379, column: 38, scope: !5744)
!5747 = !DILocalVariable(name: "nthreads", arg: 2, scope: !5744, file: !63, line: 3379, type: !52)
!5748 = !DILocation(line: 3379, column: 52, scope: !5744)
!5749 = !DILocation(line: 3384, column: 58, scope: !5744)
!5750 = !DILocation(line: 3384, column: 56, scope: !5744)
!5751 = !DILocation(line: 3384, column: 27, scope: !5744)
!5752 = !DILocation(line: 3384, column: 3, scope: !5744)
!5753 = !DILocation(line: 3384, column: 10, scope: !5744)
!5754 = !DILocation(line: 3384, column: 25, scope: !5744)
!5755 = !{!5756, !2356, i64 0}
!5756 = !{!"merge_node_queue", !2356, i64 0, !2344, i64 8, !2344, i64 48}
!5757 = !DILocation(line: 3385, column: 24, scope: !5744)
!5758 = !DILocation(line: 3385, column: 31, scope: !5744)
!5759 = !DILocation(line: 3385, column: 3, scope: !5744)
!5760 = !DILocation(line: 3386, column: 23, scope: !5744)
!5761 = !DILocation(line: 3386, column: 30, scope: !5744)
!5762 = !DILocation(line: 3386, column: 3, scope: !5744)
!5763 = !DILocation(line: 3387, column: 1, scope: !5744)
!5764 = distinct !DISubprogram(name: "merge_tree_init", scope: !63, file: !63, line: 3253, type: !662, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5765 = !DILocalVariable(name: "nthreads", arg: 1, scope: !5764, file: !63, line: 3253, type: !52)
!5766 = !DILocation(line: 3253, column: 25, scope: !5764)
!5767 = !DILocalVariable(name: "nlines", arg: 2, scope: !5764, file: !63, line: 3253, type: !52)
!5768 = !DILocation(line: 3253, column: 42, scope: !5764)
!5769 = !DILocalVariable(name: "dest", arg: 3, scope: !5764, file: !63, line: 3253, type: !462)
!5770 = !DILocation(line: 3253, column: 63, scope: !5764)
!5771 = !DILocalVariable(name: "merge_tree", scope: !5764, file: !63, line: 3255, type: !577)
!5772 = !DILocation(line: 3255, column: 22, scope: !5764)
!5773 = !DILocation(line: 3255, column: 69, scope: !5764)
!5774 = !DILocation(line: 3255, column: 67, scope: !5764)
!5775 = !DILocation(line: 3255, column: 35, scope: !5764)
!5776 = !DILocalVariable(name: "root", scope: !5764, file: !63, line: 3257, type: !577)
!5777 = !DILocation(line: 3257, column: 22, scope: !5764)
!5778 = !DILocation(line: 3257, column: 29, scope: !5764)
!5779 = !DILocation(line: 3258, column: 40, scope: !5764)
!5780 = !DILocation(line: 3258, column: 46, scope: !5764)
!5781 = !DILocation(line: 3258, column: 53, scope: !5764)
!5782 = !{!5783, !2356, i64 24}
!5783 = !{!"merge_node", !2356, i64 0, !2356, i64 8, !2356, i64 16, !2356, i64 24, !2356, i64 32, !2517, i64 40, !2517, i64 48, !2356, i64 56, !2356, i64 64, !2356, i64 72, !2343, i64 80, !2500, i64 84, !2344, i64 88}
!5784 = !DILocation(line: 3258, column: 25, scope: !5764)
!5785 = !DILocation(line: 3258, column: 31, scope: !5764)
!5786 = !DILocation(line: 3258, column: 38, scope: !5764)
!5787 = !{!5783, !2356, i64 16}
!5788 = !DILocation(line: 3258, column: 14, scope: !5764)
!5789 = !DILocation(line: 3258, column: 20, scope: !5764)
!5790 = !DILocation(line: 3258, column: 23, scope: !5764)
!5791 = !{!5783, !2356, i64 8}
!5792 = !DILocation(line: 3258, column: 3, scope: !5764)
!5793 = !DILocation(line: 3258, column: 9, scope: !5764)
!5794 = !DILocation(line: 3258, column: 12, scope: !5764)
!5795 = !{!5783, !2356, i64 0}
!5796 = !DILocation(line: 3259, column: 3, scope: !5764)
!5797 = !DILocation(line: 3259, column: 9, scope: !5764)
!5798 = !DILocation(line: 3259, column: 14, scope: !5764)
!5799 = !{!5783, !2356, i64 32}
!5800 = !DILocation(line: 3260, column: 27, scope: !5764)
!5801 = !DILocation(line: 3260, column: 15, scope: !5764)
!5802 = !DILocation(line: 3260, column: 21, scope: !5764)
!5803 = !DILocation(line: 3260, column: 25, scope: !5764)
!5804 = !{!5783, !2517, i64 48}
!5805 = !DILocation(line: 3260, column: 3, scope: !5764)
!5806 = !DILocation(line: 3260, column: 9, scope: !5764)
!5807 = !DILocation(line: 3260, column: 13, scope: !5764)
!5808 = !{!5783, !2517, i64 40}
!5809 = !DILocation(line: 3261, column: 3, scope: !5764)
!5810 = !DILocation(line: 3261, column: 9, scope: !5764)
!5811 = !DILocation(line: 3261, column: 16, scope: !5764)
!5812 = !{!5783, !2356, i64 56}
!5813 = !DILocation(line: 3262, column: 3, scope: !5764)
!5814 = !DILocation(line: 3262, column: 9, scope: !5764)
!5815 = !DILocation(line: 3262, column: 15, scope: !5764)
!5816 = !{!5783, !2343, i64 80}
!5817 = !DILocation(line: 3263, column: 3, scope: !5764)
!5818 = !DILocation(line: 3263, column: 9, scope: !5764)
!5819 = !DILocation(line: 3263, column: 16, scope: !5764)
!5820 = !{!5783, !2500, i64 84}
!5821 = !DILocation(line: 3264, column: 24, scope: !5764)
!5822 = !DILocation(line: 3264, column: 30, scope: !5764)
!5823 = !DILocation(line: 3264, column: 3, scope: !5764)
!5824 = !DILocation(line: 3266, column: 14, scope: !5764)
!5825 = !DILocation(line: 3266, column: 20, scope: !5764)
!5826 = !DILocation(line: 3266, column: 25, scope: !5764)
!5827 = !DILocation(line: 3266, column: 30, scope: !5764)
!5828 = !DILocation(line: 3266, column: 36, scope: !5764)
!5829 = !DILocation(line: 3266, column: 46, scope: !5764)
!5830 = !DILocation(line: 3266, column: 3, scope: !5764)
!5831 = !DILocation(line: 3267, column: 10, scope: !5764)
!5832 = !DILocation(line: 3267, column: 3, scope: !5764)
!5833 = distinct !DISubprogram(name: "sortlines", scope: !63, file: !63, line: 3643, type: !667, scopeLine: 3646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5834 = !DILocalVariable(name: "lines", arg: 1, scope: !5833, file: !63, line: 3643, type: !669)
!5835 = !DILocation(line: 3643, column: 34, scope: !5833)
!5836 = !DILocalVariable(name: "nthreads", arg: 2, scope: !5833, file: !63, line: 3643, type: !52)
!5837 = !DILocation(line: 3643, column: 48, scope: !5833)
!5838 = !DILocalVariable(name: "total_lines", arg: 3, scope: !5833, file: !63, line: 3644, type: !52)
!5839 = !DILocation(line: 3644, column: 19, scope: !5833)
!5840 = !DILocalVariable(name: "node", arg: 4, scope: !5833, file: !63, line: 3644, type: !577)
!5841 = !DILocation(line: 3644, column: 51, scope: !5833)
!5842 = !DILocalVariable(name: "queue", arg: 5, scope: !5833, file: !63, line: 3645, type: !630)
!5843 = !DILocation(line: 3645, column: 37, scope: !5833)
!5844 = !DILocalVariable(name: "tfp", arg: 6, scope: !5833, file: !63, line: 3645, type: !277)
!5845 = !DILocation(line: 3645, column: 50, scope: !5833)
!5846 = !DILocalVariable(name: "temp_output", arg: 7, scope: !5833, file: !63, line: 3645, type: !87)
!5847 = !DILocation(line: 3645, column: 67, scope: !5833)
!5848 = !DILocalVariable(name: "nlines", scope: !5833, file: !63, line: 3647, type: !52)
!5849 = !DILocation(line: 3647, column: 10, scope: !5833)
!5850 = !DILocation(line: 3647, column: 19, scope: !5833)
!5851 = !DILocation(line: 3647, column: 25, scope: !5833)
!5852 = !DILocation(line: 3647, column: 31, scope: !5833)
!5853 = !DILocation(line: 3647, column: 37, scope: !5833)
!5854 = !DILocation(line: 3647, column: 29, scope: !5833)
!5855 = !DILocalVariable(name: "lo_threads", scope: !5833, file: !63, line: 3650, type: !52)
!5856 = !DILocation(line: 3650, column: 10, scope: !5833)
!5857 = !DILocation(line: 3650, column: 23, scope: !5833)
!5858 = !DILocation(line: 3650, column: 32, scope: !5833)
!5859 = !DILocalVariable(name: "hi_threads", scope: !5833, file: !63, line: 3651, type: !52)
!5860 = !DILocation(line: 3651, column: 10, scope: !5833)
!5861 = !DILocation(line: 3651, column: 23, scope: !5833)
!5862 = !DILocation(line: 3651, column: 34, scope: !5833)
!5863 = !DILocation(line: 3651, column: 32, scope: !5833)
!5864 = !DILocalVariable(name: "thread", scope: !5833, file: !63, line: 3652, type: !670)
!5865 = !DILocation(line: 3652, column: 13, scope: !5833)
!5866 = !DILocalVariable(name: "args", scope: !5833, file: !63, line: 3653, type: !675)
!5867 = !DILocation(line: 3653, column: 22, scope: !5833)
!5868 = !DILocation(line: 3653, column: 29, scope: !5833)
!5869 = !DILocation(line: 3653, column: 30, scope: !5833)
!5870 = !{!5871, !2356, i64 0}
!5871 = !{!"thread_args", !2356, i64 0, !2517, i64 8, !2517, i64 16, !2356, i64 24, !2356, i64 32, !2356, i64 40, !2356, i64 48}
!5872 = !DILocation(line: 3653, column: 37, scope: !5833)
!5873 = !{!5871, !2517, i64 8}
!5874 = !DILocation(line: 3653, column: 49, scope: !5833)
!5875 = !{!5871, !2517, i64 16}
!5876 = !DILocation(line: 3654, column: 30, scope: !5833)
!5877 = !DILocation(line: 3654, column: 36, scope: !5833)
!5878 = !{!5783, !2356, i64 64}
!5879 = !{!5871, !2356, i64 24}
!5880 = !DILocation(line: 3654, column: 46, scope: !5833)
!5881 = !{!5871, !2356, i64 32}
!5882 = !DILocation(line: 3654, column: 53, scope: !5833)
!5883 = !{!5871, !2356, i64 40}
!5884 = !DILocation(line: 3654, column: 58, scope: !5833)
!5885 = !{!5871, !2356, i64 48}
!5886 = !DILocation(line: 3656, column: 7, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5833, file: !63, line: 3656, column: 7)
!5888 = !DILocation(line: 3656, column: 16, scope: !5887)
!5889 = !DILocation(line: 3656, column: 20, scope: !5887)
!5890 = !DILocation(line: 3656, column: 52, scope: !5887)
!5891 = !DILocation(line: 3656, column: 49, scope: !5887)
!5892 = !DILocation(line: 3657, column: 7, scope: !5887)
!5893 = !DILocation(line: 3657, column: 59, scope: !5887)
!5894 = !DILocation(line: 3657, column: 10, scope: !5887)
!5895 = !DILocation(line: 3657, column: 66, scope: !5887)
!5896 = !DILocation(line: 3656, column: 7, scope: !5833)
!5897 = !DILocation(line: 3659, column: 18, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5887, file: !63, line: 3658, column: 5)
!5899 = !DILocation(line: 3659, column: 26, scope: !5898)
!5900 = !DILocation(line: 3659, column: 32, scope: !5898)
!5901 = !DILocation(line: 3659, column: 24, scope: !5898)
!5902 = !DILocation(line: 3659, column: 37, scope: !5898)
!5903 = !DILocation(line: 3659, column: 49, scope: !5898)
!5904 = !DILocation(line: 3660, column: 18, scope: !5898)
!5905 = !DILocation(line: 3660, column: 24, scope: !5898)
!5906 = !{!5783, !2356, i64 72}
!5907 = !DILocation(line: 3660, column: 34, scope: !5898)
!5908 = !DILocation(line: 3660, column: 41, scope: !5898)
!5909 = !DILocation(line: 3660, column: 46, scope: !5898)
!5910 = !DILocation(line: 3659, column: 7, scope: !5898)
!5911 = !DILocation(line: 3661, column: 21, scope: !5898)
!5912 = !DILocation(line: 3661, column: 7, scope: !5898)
!5913 = !DILocation(line: 3662, column: 5, scope: !5898)
!5914 = !DILocalVariable(name: "nlo", scope: !5915, file: !63, line: 3667, type: !52)
!5915 = distinct !DILexicalBlock(scope: !5887, file: !63, line: 3664, column: 5)
!5916 = !DILocation(line: 3667, column: 14, scope: !5915)
!5917 = !DILocation(line: 3667, column: 20, scope: !5915)
!5918 = !DILocation(line: 3667, column: 26, scope: !5915)
!5919 = !DILocalVariable(name: "nhi", scope: !5915, file: !63, line: 3668, type: !52)
!5920 = !DILocation(line: 3668, column: 14, scope: !5915)
!5921 = !DILocation(line: 3668, column: 20, scope: !5915)
!5922 = !DILocation(line: 3668, column: 26, scope: !5915)
!5923 = !DILocalVariable(name: "temp", scope: !5915, file: !63, line: 3669, type: !462)
!5924 = !DILocation(line: 3669, column: 20, scope: !5915)
!5925 = !DILocation(line: 3669, column: 27, scope: !5915)
!5926 = !DILocation(line: 3669, column: 35, scope: !5915)
!5927 = !DILocation(line: 3669, column: 33, scope: !5915)
!5928 = !DILocation(line: 3670, column: 15, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5915, file: !63, line: 3670, column: 11)
!5930 = !DILocation(line: 3670, column: 13, scope: !5929)
!5931 = !DILocation(line: 3670, column: 11, scope: !5915)
!5932 = !DILocation(line: 3671, column: 26, scope: !5929)
!5933 = !DILocation(line: 3671, column: 34, scope: !5929)
!5934 = !DILocation(line: 3671, column: 32, scope: !5929)
!5935 = !DILocation(line: 3671, column: 39, scope: !5929)
!5936 = !DILocation(line: 3671, column: 44, scope: !5929)
!5937 = !DILocation(line: 3671, column: 51, scope: !5929)
!5938 = !DILocation(line: 3671, column: 55, scope: !5929)
!5939 = !DILocation(line: 3671, column: 49, scope: !5929)
!5940 = !DILocation(line: 3671, column: 9, scope: !5929)
!5941 = !DILocation(line: 3672, column: 15, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5915, file: !63, line: 3672, column: 11)
!5943 = !DILocation(line: 3672, column: 13, scope: !5942)
!5944 = !DILocation(line: 3672, column: 11, scope: !5915)
!5945 = !DILocation(line: 3673, column: 26, scope: !5942)
!5946 = !DILocation(line: 3673, column: 33, scope: !5942)
!5947 = !DILocation(line: 3673, column: 38, scope: !5942)
!5948 = !DILocation(line: 3673, column: 9, scope: !5942)
!5949 = !DILocation(line: 3676, column: 18, scope: !5915)
!5950 = !DILocation(line: 3676, column: 7, scope: !5915)
!5951 = !DILocation(line: 3676, column: 13, scope: !5915)
!5952 = !DILocation(line: 3676, column: 16, scope: !5915)
!5953 = !DILocation(line: 3677, column: 18, scope: !5915)
!5954 = !DILocation(line: 3677, column: 26, scope: !5915)
!5955 = !DILocation(line: 3677, column: 24, scope: !5915)
!5956 = !DILocation(line: 3677, column: 7, scope: !5915)
!5957 = !DILocation(line: 3677, column: 13, scope: !5915)
!5958 = !DILocation(line: 3677, column: 16, scope: !5915)
!5959 = !DILocation(line: 3678, column: 22, scope: !5915)
!5960 = !DILocation(line: 3678, column: 30, scope: !5915)
!5961 = !DILocation(line: 3678, column: 28, scope: !5915)
!5962 = !DILocation(line: 3678, column: 7, scope: !5915)
!5963 = !DILocation(line: 3678, column: 13, scope: !5915)
!5964 = !DILocation(line: 3678, column: 20, scope: !5915)
!5965 = !DILocation(line: 3679, column: 22, scope: !5915)
!5966 = !DILocation(line: 3679, column: 30, scope: !5915)
!5967 = !DILocation(line: 3679, column: 28, scope: !5915)
!5968 = !DILocation(line: 3679, column: 36, scope: !5915)
!5969 = !DILocation(line: 3679, column: 34, scope: !5915)
!5970 = !DILocation(line: 3679, column: 7, scope: !5915)
!5971 = !DILocation(line: 3679, column: 13, scope: !5915)
!5972 = !DILocation(line: 3679, column: 20, scope: !5915)
!5973 = !DILocation(line: 3681, column: 21, scope: !5915)
!5974 = !DILocation(line: 3681, column: 28, scope: !5915)
!5975 = !DILocation(line: 3681, column: 7, scope: !5915)
!5976 = !DILocation(line: 3682, column: 19, scope: !5915)
!5977 = !DILocation(line: 3682, column: 26, scope: !5915)
!5978 = !DILocation(line: 3682, column: 39, scope: !5915)
!5979 = !DILocation(line: 3682, column: 44, scope: !5915)
!5980 = !DILocation(line: 3682, column: 7, scope: !5915)
!5981 = !DILocation(line: 3684, column: 1, scope: !5833)
!5982 = distinct !DISubprogram(name: "write_unique", scope: !63, file: !63, line: 3425, type: !508, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!5983 = !DILocalVariable(name: "line", arg: 1, scope: !5982, file: !63, line: 3425, type: !440)
!5984 = !DILocation(line: 3425, column: 34, scope: !5982)
!5985 = !DILocalVariable(name: "tfp", arg: 2, scope: !5982, file: !63, line: 3425, type: !277)
!5986 = !DILocation(line: 3425, column: 46, scope: !5982)
!5987 = !DILocalVariable(name: "temp_output", arg: 3, scope: !5982, file: !63, line: 3425, type: !87)
!5988 = !DILocation(line: 3425, column: 63, scope: !5982)
!5989 = !DILocation(line: 3427, column: 7, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5982, file: !63, line: 3427, column: 7)
!5991 = !DILocation(line: 3427, column: 7, scope: !5982)
!5992 = !DILocation(line: 3429, column: 22, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5994, file: !63, line: 3429, column: 11)
!5994 = distinct !DILexicalBlock(scope: !5990, file: !63, line: 3428, column: 5)
!5995 = !DILocation(line: 3429, column: 11, scope: !5993)
!5996 = !DILocation(line: 3429, column: 27, scope: !5993)
!5997 = !DILocation(line: 3429, column: 41, scope: !5993)
!5998 = !DILocation(line: 3429, column: 32, scope: !5993)
!5999 = !DILocation(line: 3429, column: 11, scope: !5994)
!6000 = !DILocation(line: 3430, column: 9, scope: !5993)
!6001 = !DILocation(line: 3431, column: 21, scope: !5994)
!6002 = !DILocation(line: 3431, column: 20, scope: !5994)
!6003 = !{i64 0, i64 8, !2355, i64 8, i64 8, !2516, i64 16, i64 8, !2355, i64 24, i64 8, !2355}
!6004 = !DILocation(line: 3432, column: 5, scope: !5994)
!6005 = !DILocation(line: 3434, column: 15, scope: !5982)
!6006 = !DILocation(line: 3434, column: 21, scope: !5982)
!6007 = !DILocation(line: 3434, column: 26, scope: !5982)
!6008 = !DILocation(line: 3434, column: 3, scope: !5982)
!6009 = !DILocation(line: 3435, column: 1, scope: !5982)
!6010 = distinct !DISubprogram(name: "reap_all", scope: !63, file: !63, line: 798, type: !167, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6011 = !DILocation(line: 800, column: 3, scope: !6010)
!6012 = !DILocation(line: 800, column: 14, scope: !6010)
!6013 = !DILocation(line: 800, column: 12, scope: !6010)
!6014 = !DILocation(line: 801, column: 5, scope: !6010)
!6015 = distinct !{!6015, !6011, !6016}
!6016 = !DILocation(line: 801, column: 13, scope: !6010)
!6017 = !DILocation(line: 802, column: 1, scope: !6010)
!6018 = !DILocalVariable(name: "pid", arg: 1, scope: !548, file: !63, line: 709, type: !295)
!6019 = !DILocation(line: 709, column: 13, scope: !548)
!6020 = !DILocalVariable(name: "status", scope: !548, file: !63, line: 711, type: !5)
!6021 = !DILocation(line: 711, column: 7, scope: !548)
!6022 = !DILocalVariable(name: "cpid", scope: !548, file: !63, line: 712, type: !295)
!6023 = !DILocation(line: 712, column: 9, scope: !548)
!6024 = !DILocation(line: 712, column: 26, scope: !548)
!6025 = !DILocation(line: 712, column: 32, scope: !548)
!6026 = !DILocation(line: 712, column: 53, scope: !548)
!6027 = !DILocation(line: 712, column: 16, scope: !548)
!6028 = !DILocation(line: 714, column: 7, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !548, file: !63, line: 714, column: 7)
!6030 = !DILocation(line: 714, column: 12, scope: !6029)
!6031 = !DILocation(line: 714, column: 7, scope: !548)
!6032 = !DILocation(line: 715, column: 5, scope: !6029)
!6033 = !DILocation(line: 717, column: 16, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !63, line: 717, column: 12)
!6035 = !DILocation(line: 717, column: 14, scope: !6034)
!6036 = !DILocation(line: 717, column: 21, scope: !6034)
!6037 = !DILocation(line: 717, column: 29, scope: !6034)
!6038 = !DILocation(line: 717, column: 27, scope: !6034)
!6039 = !DILocation(line: 717, column: 33, scope: !6034)
!6040 = !DILocation(line: 717, column: 49, scope: !6034)
!6041 = !DILocation(line: 717, column: 36, scope: !6034)
!6042 = !DILocation(line: 717, column: 12, scope: !6029)
!6043 = !DILocation(line: 719, column: 13, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !63, line: 719, column: 11)
!6045 = distinct !DILexicalBlock(scope: !6034, file: !63, line: 718, column: 5)
!6046 = !DILocation(line: 719, column: 32, scope: !6044)
!6047 = !DILocation(line: 719, column: 35, scope: !6044)
!6048 = !DILocation(line: 719, column: 11, scope: !6045)
!6049 = !DILocation(line: 720, column: 9, scope: !6044)
!6050 = !DILocation(line: 722, column: 7, scope: !6045)
!6051 = !DILocation(line: 723, column: 5, scope: !6045)
!6052 = !DILocation(line: 725, column: 10, scope: !548)
!6053 = !DILocation(line: 725, column: 3, scope: !548)
!6054 = distinct !DISubprogram(name: "delete_proc", scope: !63, file: !63, line: 754, type: !539, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6055 = !DILocalVariable(name: "pid", arg: 1, scope: !6054, file: !63, line: 754, type: !295)
!6056 = !DILocation(line: 754, column: 20, scope: !6054)
!6057 = !DILocalVariable(name: "test", scope: !6054, file: !63, line: 756, type: !290)
!6058 = !DILocation(line: 756, column: 19, scope: !6054)
!6059 = !DILocation(line: 758, column: 14, scope: !6054)
!6060 = !DILocation(line: 758, column: 8, scope: !6054)
!6061 = !DILocation(line: 758, column: 12, scope: !6054)
!6062 = !DILocalVariable(name: "node", scope: !6054, file: !63, line: 759, type: !289)
!6063 = !DILocation(line: 759, column: 20, scope: !6054)
!6064 = !DILocation(line: 759, column: 40, scope: !6054)
!6065 = !DILocation(line: 759, column: 49, scope: !6054)
!6066 = !DILocation(line: 759, column: 27, scope: !6054)
!6067 = !DILocation(line: 760, column: 9, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6054, file: !63, line: 760, column: 7)
!6069 = !DILocation(line: 760, column: 7, scope: !6054)
!6070 = !DILocation(line: 761, column: 5, scope: !6068)
!6071 = !DILocation(line: 762, column: 3, scope: !6054)
!6072 = !DILocation(line: 762, column: 9, scope: !6054)
!6073 = !DILocation(line: 762, column: 15, scope: !6054)
!6074 = !DILocation(line: 763, column: 3, scope: !6054)
!6075 = !DILocation(line: 764, column: 1, scope: !6054)
!6076 = distinct !DISubprogram(name: "compare", scope: !63, file: !63, line: 2734, type: !469, scopeLine: 2735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6077 = !DILocalVariable(name: "a", arg: 1, scope: !6076, file: !63, line: 2734, type: !440)
!6078 = !DILocation(line: 2734, column: 29, scope: !6076)
!6079 = !DILocalVariable(name: "b", arg: 2, scope: !6076, file: !63, line: 2734, type: !440)
!6080 = !DILocation(line: 2734, column: 51, scope: !6076)
!6081 = !DILocalVariable(name: "diff", scope: !6076, file: !63, line: 2736, type: !5)
!6082 = !DILocation(line: 2736, column: 7, scope: !6076)
!6083 = !DILocalVariable(name: "alen", scope: !6076, file: !63, line: 2737, type: !52)
!6084 = !DILocation(line: 2737, column: 10, scope: !6076)
!6085 = !DILocalVariable(name: "blen", scope: !6076, file: !63, line: 2737, type: !52)
!6086 = !DILocation(line: 2737, column: 16, scope: !6076)
!6087 = !DILocation(line: 2742, column: 7, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6076, file: !63, line: 2742, column: 7)
!6089 = !DILocation(line: 2742, column: 7, scope: !6076)
!6090 = !DILocation(line: 2744, column: 26, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6088, file: !63, line: 2743, column: 5)
!6092 = !DILocation(line: 2744, column: 29, scope: !6091)
!6093 = !DILocation(line: 2744, column: 14, scope: !6091)
!6094 = !DILocation(line: 2744, column: 12, scope: !6091)
!6095 = !DILocation(line: 2745, column: 11, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !63, line: 2745, column: 11)
!6097 = !DILocation(line: 2745, column: 16, scope: !6096)
!6098 = !DILocation(line: 2745, column: 19, scope: !6096)
!6099 = !DILocation(line: 2745, column: 26, scope: !6096)
!6100 = !DILocation(line: 2745, column: 29, scope: !6096)
!6101 = !DILocation(line: 2745, column: 11, scope: !6091)
!6102 = !DILocation(line: 2746, column: 16, scope: !6096)
!6103 = !DILocation(line: 2746, column: 9, scope: !6096)
!6104 = !DILocation(line: 2747, column: 5, scope: !6091)
!6105 = !DILocation(line: 2751, column: 10, scope: !6076)
!6106 = !DILocation(line: 2751, column: 13, scope: !6076)
!6107 = !DILocation(line: 2751, column: 20, scope: !6076)
!6108 = !DILocation(line: 2751, column: 8, scope: !6076)
!6109 = !DILocation(line: 2751, column: 32, scope: !6076)
!6110 = !DILocation(line: 2751, column: 35, scope: !6076)
!6111 = !DILocation(line: 2751, column: 42, scope: !6076)
!6112 = !DILocation(line: 2751, column: 30, scope: !6076)
!6113 = !DILocation(line: 2753, column: 7, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6076, file: !63, line: 2753, column: 7)
!6115 = !DILocation(line: 2753, column: 12, scope: !6114)
!6116 = !DILocation(line: 2753, column: 7, scope: !6076)
!6117 = !DILocation(line: 2754, column: 14, scope: !6114)
!6118 = !DILocation(line: 2754, column: 12, scope: !6114)
!6119 = !DILocation(line: 2754, column: 10, scope: !6114)
!6120 = !DILocation(line: 2754, column: 5, scope: !6114)
!6121 = !DILocation(line: 2755, column: 12, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6114, file: !63, line: 2755, column: 12)
!6123 = !DILocation(line: 2755, column: 17, scope: !6122)
!6124 = !DILocation(line: 2755, column: 12, scope: !6114)
!6125 = !DILocation(line: 2756, column: 10, scope: !6122)
!6126 = !DILocation(line: 2756, column: 5, scope: !6122)
!6127 = !DILocation(line: 2757, column: 12, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6122, file: !63, line: 2757, column: 12)
!6129 = !DILocation(line: 2757, column: 12, scope: !6122)
!6130 = !DILocation(line: 2763, column: 25, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6128, file: !63, line: 2758, column: 5)
!6132 = !DILocation(line: 2763, column: 28, scope: !6131)
!6133 = !DILocation(line: 2763, column: 34, scope: !6131)
!6134 = !DILocation(line: 2763, column: 39, scope: !6131)
!6135 = !DILocation(line: 2763, column: 44, scope: !6131)
!6136 = !DILocation(line: 2763, column: 47, scope: !6131)
!6137 = !DILocation(line: 2763, column: 53, scope: !6131)
!6138 = !DILocation(line: 2763, column: 58, scope: !6131)
!6139 = !DILocation(line: 2763, column: 14, scope: !6131)
!6140 = !DILocation(line: 2763, column: 12, scope: !6131)
!6141 = !DILocation(line: 2764, column: 5, scope: !6131)
!6142 = !DILocation(line: 2765, column: 30, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6128, file: !63, line: 2765, column: 12)
!6144 = !DILocation(line: 2765, column: 33, scope: !6143)
!6145 = !DILocation(line: 2765, column: 39, scope: !6143)
!6146 = !DILocation(line: 2765, column: 42, scope: !6143)
!6147 = !DILocation(line: 2765, column: 48, scope: !6143)
!6148 = !DILocation(line: 2765, column: 22, scope: !6143)
!6149 = !DILocation(line: 2765, column: 20, scope: !6143)
!6150 = !DILocation(line: 2765, column: 12, scope: !6128)
!6151 = !DILocation(line: 2766, column: 12, scope: !6143)
!6152 = !DILocation(line: 2766, column: 19, scope: !6143)
!6153 = !DILocation(line: 2766, column: 17, scope: !6143)
!6154 = !DILocation(line: 2766, column: 31, scope: !6143)
!6155 = !DILocation(line: 2766, column: 39, scope: !6143)
!6156 = !DILocation(line: 2766, column: 36, scope: !6143)
!6157 = !DILocation(line: 2766, column: 10, scope: !6143)
!6158 = !DILocation(line: 2766, column: 5, scope: !6143)
!6159 = !DILocation(line: 2768, column: 10, scope: !6076)
!6160 = !DILocation(line: 2768, column: 21, scope: !6076)
!6161 = !DILocation(line: 2768, column: 20, scope: !6076)
!6162 = !DILocation(line: 2768, column: 28, scope: !6076)
!6163 = !DILocation(line: 2768, column: 3, scope: !6076)
!6164 = !DILocation(line: 2769, column: 1, scope: !6076)
!6165 = distinct !DISubprogram(name: "write_line", scope: !63, file: !63, line: 2777, type: !508, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6166 = !DILocalVariable(name: "line", arg: 1, scope: !6165, file: !63, line: 2777, type: !440)
!6167 = !DILocation(line: 2777, column: 32, scope: !6165)
!6168 = !DILocalVariable(name: "fp", arg: 2, scope: !6165, file: !63, line: 2777, type: !277)
!6169 = !DILocation(line: 2777, column: 44, scope: !6165)
!6170 = !DILocalVariable(name: "output_file", arg: 3, scope: !6165, file: !63, line: 2777, type: !87)
!6171 = !DILocation(line: 2777, column: 60, scope: !6165)
!6172 = !DILocalVariable(name: "buf", scope: !6165, file: !63, line: 2779, type: !7)
!6173 = !DILocation(line: 2779, column: 9, scope: !6165)
!6174 = !DILocation(line: 2779, column: 15, scope: !6165)
!6175 = !DILocation(line: 2779, column: 21, scope: !6165)
!6176 = !DILocalVariable(name: "n_bytes", scope: !6165, file: !63, line: 2780, type: !52)
!6177 = !DILocation(line: 2780, column: 10, scope: !6165)
!6178 = !DILocation(line: 2780, column: 20, scope: !6165)
!6179 = !DILocation(line: 2780, column: 26, scope: !6165)
!6180 = !DILocalVariable(name: "ebuf", scope: !6165, file: !63, line: 2781, type: !7)
!6181 = !DILocation(line: 2781, column: 9, scope: !6165)
!6182 = !DILocation(line: 2781, column: 16, scope: !6165)
!6183 = !DILocation(line: 2781, column: 22, scope: !6165)
!6184 = !DILocation(line: 2781, column: 20, scope: !6165)
!6185 = !DILocation(line: 2783, column: 8, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6165, file: !63, line: 2783, column: 7)
!6187 = !DILocation(line: 2783, column: 20, scope: !6186)
!6188 = !DILocation(line: 2783, column: 23, scope: !6186)
!6189 = !DILocation(line: 2783, column: 7, scope: !6165)
!6190 = !DILocalVariable(name: "c", scope: !6191, file: !63, line: 2786, type: !87)
!6191 = distinct !DILexicalBlock(scope: !6186, file: !63, line: 2784, column: 5)
!6192 = !DILocation(line: 2786, column: 19, scope: !6191)
!6193 = !DILocation(line: 2786, column: 23, scope: !6191)
!6194 = !DILocation(line: 2788, column: 7, scope: !6191)
!6195 = !DILocation(line: 2788, column: 14, scope: !6191)
!6196 = !DILocation(line: 2788, column: 18, scope: !6191)
!6197 = !DILocation(line: 2788, column: 16, scope: !6191)
!6198 = !DILocalVariable(name: "wc", scope: !6199, file: !63, line: 2790, type: !8)
!6199 = distinct !DILexicalBlock(scope: !6191, file: !63, line: 2789, column: 9)
!6200 = !DILocation(line: 2790, column: 16, scope: !6199)
!6201 = !DILocation(line: 2790, column: 23, scope: !6199)
!6202 = !DILocation(line: 2790, column: 21, scope: !6199)
!6203 = !DILocation(line: 2791, column: 15, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !63, line: 2791, column: 15)
!6205 = !DILocation(line: 2791, column: 18, scope: !6204)
!6206 = !DILocation(line: 2791, column: 15, scope: !6199)
!6207 = !DILocation(line: 2792, column: 16, scope: !6204)
!6208 = !DILocation(line: 2792, column: 13, scope: !6204)
!6209 = !DILocation(line: 2793, column: 20, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6204, file: !63, line: 2793, column: 20)
!6211 = !DILocation(line: 2793, column: 25, scope: !6210)
!6212 = !DILocation(line: 2793, column: 22, scope: !6210)
!6213 = !DILocation(line: 2793, column: 20, scope: !6204)
!6214 = !DILocation(line: 2794, column: 16, scope: !6210)
!6215 = !DILocation(line: 2794, column: 13, scope: !6210)
!6216 = !DILocation(line: 2795, column: 15, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6199, file: !63, line: 2795, column: 15)
!6218 = !DILocation(line: 2795, column: 30, scope: !6217)
!6219 = !DILocation(line: 2795, column: 15, scope: !6199)
!6220 = !DILocation(line: 2796, column: 23, scope: !6217)
!6221 = !DILocation(line: 2796, column: 42, scope: !6217)
!6222 = !DILocation(line: 2796, column: 13, scope: !6217)
!6223 = distinct !{!6223, !6194, !6224}
!6224 = !DILocation(line: 2797, column: 9, scope: !6191)
!6225 = !DILocation(line: 2799, column: 19, scope: !6191)
!6226 = !DILocation(line: 2799, column: 7, scope: !6191)
!6227 = !DILocation(line: 2800, column: 5, scope: !6191)
!6228 = !DILocation(line: 2803, column: 18, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6186, file: !63, line: 2802, column: 5)
!6230 = !DILocation(line: 2803, column: 7, scope: !6229)
!6231 = !DILocation(line: 2803, column: 16, scope: !6229)
!6232 = !DILocation(line: 2804, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6229, file: !63, line: 2804, column: 11)
!6234 = !DILocation(line: 2804, column: 43, scope: !6233)
!6235 = !DILocation(line: 2804, column: 40, scope: !6233)
!6236 = !DILocation(line: 2804, column: 11, scope: !6229)
!6237 = !DILocation(line: 2805, column: 19, scope: !6233)
!6238 = !DILocation(line: 2805, column: 38, scope: !6233)
!6239 = !DILocation(line: 2805, column: 9, scope: !6233)
!6240 = !DILocation(line: 2806, column: 7, scope: !6229)
!6241 = !DILocation(line: 2806, column: 16, scope: !6229)
!6242 = !DILocation(line: 2808, column: 1, scope: !6165)
!6243 = distinct !DISubprogram(name: "debug_line", scope: !63, file: !63, line: 2363, type: !510, scopeLine: 2364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6244 = !DILocalVariable(name: "line", arg: 1, scope: !6243, file: !63, line: 2363, type: !440)
!6245 = !DILocation(line: 2363, column: 32, scope: !6243)
!6246 = !DILocalVariable(name: "key", scope: !6243, file: !63, line: 2365, type: !416)
!6247 = !DILocation(line: 2365, column: 26, scope: !6243)
!6248 = !DILocation(line: 2365, column: 32, scope: !6243)
!6249 = !DILocation(line: 2367, column: 3, scope: !6243)
!6250 = !DILocation(line: 2368, column: 16, scope: !6243)
!6251 = !DILocation(line: 2368, column: 22, scope: !6243)
!6252 = !DILocation(line: 2368, column: 5, scope: !6243)
!6253 = !DILocation(line: 2369, column: 10, scope: !6243)
!6254 = !DILocation(line: 2369, column: 14, scope: !6243)
!6255 = !DILocation(line: 2369, column: 25, scope: !6243)
!6256 = !DILocation(line: 2369, column: 30, scope: !6243)
!6257 = !DILocation(line: 2369, column: 23, scope: !6243)
!6258 = !DILocation(line: 2369, column: 36, scope: !6243)
!6259 = !DILocation(line: 2369, column: 42, scope: !6243)
!6260 = !DILocation(line: 2369, column: 49, scope: !6243)
!6261 = !DILocation(line: 2369, column: 52, scope: !6243)
!6262 = !DILocation(line: 2369, column: 39, scope: !6243)
!6263 = !DILocation(line: 0, scope: !6243)
!6264 = distinct !{!6264, !6249, !6265}
!6265 = !DILocation(line: 2369, column: 60, scope: !6243)
!6266 = !DILocation(line: 2370, column: 1, scope: !6243)
!6267 = distinct !DISubprogram(name: "debug_key", scope: !63, file: !63, line: 2306, type: !512, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6268 = !DILocalVariable(name: "line", arg: 1, scope: !6267, file: !63, line: 2306, type: !440)
!6269 = !DILocation(line: 2306, column: 31, scope: !6267)
!6270 = !DILocalVariable(name: "key", arg: 2, scope: !6267, file: !63, line: 2306, type: !416)
!6271 = !DILocation(line: 2306, column: 60, scope: !6267)
!6272 = !DILocalVariable(name: "text", scope: !6267, file: !63, line: 2308, type: !7)
!6273 = !DILocation(line: 2308, column: 9, scope: !6267)
!6274 = !DILocation(line: 2308, column: 16, scope: !6267)
!6275 = !DILocation(line: 2308, column: 22, scope: !6267)
!6276 = !DILocalVariable(name: "beg", scope: !6267, file: !63, line: 2309, type: !7)
!6277 = !DILocation(line: 2309, column: 9, scope: !6267)
!6278 = !DILocation(line: 2309, column: 15, scope: !6267)
!6279 = !DILocalVariable(name: "lim", scope: !6267, file: !63, line: 2310, type: !7)
!6280 = !DILocation(line: 2310, column: 9, scope: !6267)
!6281 = !DILocation(line: 2310, column: 15, scope: !6267)
!6282 = !DILocation(line: 2310, column: 22, scope: !6267)
!6283 = !DILocation(line: 2310, column: 28, scope: !6267)
!6284 = !DILocation(line: 2310, column: 20, scope: !6267)
!6285 = !DILocation(line: 2310, column: 35, scope: !6267)
!6286 = !DILocation(line: 2312, column: 7, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6267, file: !63, line: 2312, column: 7)
!6288 = !DILocation(line: 2312, column: 7, scope: !6267)
!6289 = !DILocation(line: 2314, column: 11, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !63, line: 2314, column: 11)
!6291 = distinct !DILexicalBlock(scope: !6287, file: !63, line: 2313, column: 5)
!6292 = !DILocation(line: 2314, column: 16, scope: !6290)
!6293 = !DILocation(line: 2314, column: 22, scope: !6290)
!6294 = !DILocation(line: 2314, column: 11, scope: !6291)
!6295 = !DILocation(line: 2315, column: 25, scope: !6290)
!6296 = !DILocation(line: 2315, column: 31, scope: !6290)
!6297 = !DILocation(line: 2315, column: 15, scope: !6290)
!6298 = !DILocation(line: 2315, column: 13, scope: !6290)
!6299 = !DILocation(line: 2315, column: 9, scope: !6290)
!6300 = !DILocation(line: 2316, column: 11, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !63, line: 2316, column: 11)
!6302 = !DILocation(line: 2316, column: 16, scope: !6301)
!6303 = !DILocation(line: 2316, column: 22, scope: !6301)
!6304 = !DILocation(line: 2316, column: 11, scope: !6291)
!6305 = !DILocation(line: 2317, column: 25, scope: !6301)
!6306 = !DILocation(line: 2317, column: 31, scope: !6301)
!6307 = !DILocation(line: 2317, column: 15, scope: !6301)
!6308 = !DILocation(line: 2317, column: 13, scope: !6301)
!6309 = !DILocation(line: 2317, column: 9, scope: !6301)
!6310 = !DILocation(line: 2319, column: 12, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6291, file: !63, line: 2319, column: 11)
!6312 = !DILocation(line: 2319, column: 17, scope: !6311)
!6313 = !DILocation(line: 2319, column: 29, scope: !6311)
!6314 = !DILocation(line: 2319, column: 32, scope: !6311)
!6315 = !DILocation(line: 2319, column: 37, scope: !6311)
!6316 = !DILocation(line: 2319, column: 43, scope: !6311)
!6317 = !DILocation(line: 2320, column: 11, scope: !6311)
!6318 = !DILocation(line: 2320, column: 14, scope: !6311)
!6319 = !DILocation(line: 2320, column: 19, scope: !6311)
!6320 = !DILocation(line: 2320, column: 25, scope: !6311)
!6321 = !DILocation(line: 2320, column: 41, scope: !6311)
!6322 = !DILocation(line: 2320, column: 28, scope: !6311)
!6323 = !DILocation(line: 2319, column: 11, scope: !6291)
!6324 = !DILocalVariable(name: "saved", scope: !6325, file: !63, line: 2322, type: !8)
!6325 = distinct !DILexicalBlock(scope: !6311, file: !63, line: 2321, column: 9)
!6326 = !DILocation(line: 2322, column: 16, scope: !6325)
!6327 = !DILocation(line: 2322, column: 25, scope: !6325)
!6328 = !DILocation(line: 2322, column: 24, scope: !6325)
!6329 = !DILocation(line: 2323, column: 12, scope: !6325)
!6330 = !DILocation(line: 2323, column: 16, scope: !6325)
!6331 = !DILocation(line: 2325, column: 11, scope: !6325)
!6332 = !DILocation(line: 2325, column: 36, scope: !6325)
!6333 = !DILocation(line: 2325, column: 35, scope: !6325)
!6334 = !DILocation(line: 2325, column: 25, scope: !6325)
!6335 = !DILocation(line: 2325, column: 18, scope: !6325)
!6336 = !DILocation(line: 2326, column: 16, scope: !6325)
!6337 = distinct !{!6337, !6331, !6336}
!6338 = !DILocalVariable(name: "tighter_lim", scope: !6325, file: !63, line: 2328, type: !7)
!6339 = !DILocation(line: 2328, column: 17, scope: !6325)
!6340 = !DILocation(line: 2328, column: 31, scope: !6325)
!6341 = !DILocation(line: 2330, column: 15, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6325, file: !63, line: 2330, column: 15)
!6343 = !DILocation(line: 2330, column: 21, scope: !6342)
!6344 = !DILocation(line: 2330, column: 19, scope: !6342)
!6345 = !DILocation(line: 2330, column: 15, scope: !6325)
!6346 = !DILocation(line: 2331, column: 27, scope: !6342)
!6347 = !DILocation(line: 2331, column: 25, scope: !6342)
!6348 = !DILocation(line: 2331, column: 13, scope: !6342)
!6349 = !DILocation(line: 2332, column: 20, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6342, file: !63, line: 2332, column: 20)
!6351 = !DILocation(line: 2332, column: 25, scope: !6350)
!6352 = !DILocation(line: 2332, column: 20, scope: !6342)
!6353 = !DILocation(line: 2333, column: 23, scope: !6350)
!6354 = !DILocation(line: 2333, column: 13, scope: !6350)
!6355 = !DILocation(line: 2334, column: 20, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6350, file: !63, line: 2334, column: 20)
!6357 = !DILocation(line: 2334, column: 25, scope: !6356)
!6358 = !DILocation(line: 2334, column: 20, scope: !6350)
!6359 = !DILocalVariable(name: "__x", scope: !6360, file: !63, line: 2335, type: !476)
!6360 = distinct !DILexicalBlock(scope: !6356, file: !63, line: 2335, column: 13)
!6361 = !DILocation(line: 2335, column: 13, scope: !6360)
!6362 = !{!6363, !6363, i64 0}
!6363 = !{!"long double", !2344, i64 0}
!6364 = !DILocation(line: 2335, column: 13, scope: !6356)
!6365 = !DILocation(line: 2336, column: 20, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6356, file: !63, line: 2336, column: 20)
!6367 = !DILocation(line: 2336, column: 25, scope: !6366)
!6368 = !DILocation(line: 2336, column: 33, scope: !6366)
!6369 = !DILocation(line: 2336, column: 36, scope: !6366)
!6370 = !DILocation(line: 2336, column: 41, scope: !6366)
!6371 = !DILocation(line: 2336, column: 20, scope: !6356)
!6372 = !DILocalVariable(name: "p", scope: !6373, file: !63, line: 2338, type: !87)
!6373 = distinct !DILexicalBlock(scope: !6366, file: !63, line: 2337, column: 13)
!6374 = !DILocation(line: 2338, column: 27, scope: !6373)
!6375 = !DILocation(line: 2338, column: 31, scope: !6373)
!6376 = !DILocation(line: 2338, column: 38, scope: !6373)
!6377 = !DILocation(line: 2338, column: 44, scope: !6373)
!6378 = !DILocation(line: 2338, column: 42, scope: !6373)
!6379 = !DILocation(line: 2338, column: 48, scope: !6373)
!6380 = !DILocation(line: 2338, column: 52, scope: !6373)
!6381 = !DILocation(line: 2338, column: 51, scope: !6373)
!6382 = !DILocation(line: 2338, column: 56, scope: !6373)
!6383 = !DILocation(line: 0, scope: !6373)
!6384 = !DILocation(line: 2338, column: 35, scope: !6373)
!6385 = !DILocalVariable(name: "max_digit", scope: !6373, file: !63, line: 2339, type: !317)
!6386 = !DILocation(line: 2339, column: 29, scope: !6373)
!6387 = !DILocation(line: 2339, column: 41, scope: !6373)
!6388 = !DILocation(line: 2340, column: 26, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6373, file: !63, line: 2340, column: 19)
!6390 = !DILocation(line: 2340, column: 23, scope: !6389)
!6391 = !DILocation(line: 2340, column: 19, scope: !6373)
!6392 = !DILocalVariable(name: "ch", scope: !6393, file: !63, line: 2342, type: !317)
!6393 = distinct !DILexicalBlock(scope: !6389, file: !63, line: 2341, column: 17)
!6394 = !DILocation(line: 2342, column: 33, scope: !6393)
!6395 = !DILocation(line: 2342, column: 39, scope: !6393)
!6396 = !DILocation(line: 2342, column: 38, scope: !6393)
!6397 = !DILocation(line: 2343, column: 42, scope: !6393)
!6398 = !DILocation(line: 2344, column: 24, scope: !6393)
!6399 = !DILocation(line: 2344, column: 29, scope: !6393)
!6400 = !DILocation(line: 2344, column: 43, scope: !6393)
!6401 = !DILocation(line: 2344, column: 57, scope: !6393)
!6402 = !DILocation(line: 2344, column: 46, scope: !6393)
!6403 = !DILocation(line: 0, scope: !6393)
!6404 = !DILocation(line: 2344, column: 21, scope: !6393)
!6405 = !DILocation(line: 2343, column: 31, scope: !6393)
!6406 = !DILocation(line: 2345, column: 17, scope: !6393)
!6407 = !DILocation(line: 2346, column: 13, scope: !6373)
!6408 = !DILocation(line: 2348, column: 27, scope: !6366)
!6409 = !DILocation(line: 2348, column: 25, scope: !6366)
!6410 = !DILocation(line: 2350, column: 18, scope: !6325)
!6411 = !DILocation(line: 2350, column: 12, scope: !6325)
!6412 = !DILocation(line: 2350, column: 16, scope: !6325)
!6413 = !DILocation(line: 2351, column: 17, scope: !6325)
!6414 = !DILocation(line: 2351, column: 15, scope: !6325)
!6415 = !DILocation(line: 2352, column: 9, scope: !6325)
!6416 = !DILocation(line: 2353, column: 5, scope: !6291)
!6417 = !DILocalVariable(name: "offset", scope: !6267, file: !63, line: 2355, type: !52)
!6418 = !DILocation(line: 2355, column: 10, scope: !6267)
!6419 = !DILocation(line: 2355, column: 32, scope: !6267)
!6420 = !DILocation(line: 2355, column: 38, scope: !6267)
!6421 = !DILocation(line: 2355, column: 19, scope: !6267)
!6422 = !DILocalVariable(name: "width", scope: !6267, file: !63, line: 2356, type: !52)
!6423 = !DILocation(line: 2356, column: 10, scope: !6267)
!6424 = !DILocation(line: 2356, column: 31, scope: !6267)
!6425 = !DILocation(line: 2356, column: 36, scope: !6267)
!6426 = !DILocation(line: 2356, column: 18, scope: !6267)
!6427 = !DILocation(line: 2357, column: 13, scope: !6267)
!6428 = !DILocation(line: 2357, column: 21, scope: !6267)
!6429 = !DILocation(line: 2357, column: 3, scope: !6267)
!6430 = !DILocation(line: 2358, column: 1, scope: !6267)
!6431 = distinct !DISubprogram(name: "begfield", scope: !63, file: !63, line: 1612, type: !463, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6432 = !DILocalVariable(name: "line", arg: 1, scope: !6431, file: !63, line: 1612, type: !440)
!6433 = !DILocation(line: 1612, column: 30, scope: !6431)
!6434 = !DILocalVariable(name: "key", arg: 2, scope: !6431, file: !63, line: 1612, type: !416)
!6435 = !DILocation(line: 1612, column: 59, scope: !6431)
!6436 = !DILocalVariable(name: "ptr", scope: !6431, file: !63, line: 1614, type: !7)
!6437 = !DILocation(line: 1614, column: 9, scope: !6431)
!6438 = !DILocation(line: 1614, column: 15, scope: !6431)
!6439 = !DILocation(line: 1614, column: 21, scope: !6431)
!6440 = !DILocalVariable(name: "lim", scope: !6431, file: !63, line: 1614, type: !7)
!6441 = !DILocation(line: 1614, column: 28, scope: !6431)
!6442 = !DILocation(line: 1614, column: 34, scope: !6431)
!6443 = !DILocation(line: 1614, column: 40, scope: !6431)
!6444 = !DILocation(line: 1614, column: 46, scope: !6431)
!6445 = !DILocation(line: 1614, column: 38, scope: !6431)
!6446 = !DILocation(line: 1614, column: 53, scope: !6431)
!6447 = !DILocalVariable(name: "sword", scope: !6431, file: !63, line: 1615, type: !52)
!6448 = !DILocation(line: 1615, column: 10, scope: !6431)
!6449 = !DILocation(line: 1615, column: 18, scope: !6431)
!6450 = !DILocation(line: 1615, column: 23, scope: !6431)
!6451 = !DILocalVariable(name: "schar", scope: !6431, file: !63, line: 1616, type: !52)
!6452 = !DILocation(line: 1616, column: 10, scope: !6431)
!6453 = !DILocation(line: 1616, column: 18, scope: !6431)
!6454 = !DILocation(line: 1616, column: 23, scope: !6431)
!6455 = !DILocation(line: 1621, column: 7, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6431, file: !63, line: 1621, column: 7)
!6457 = !DILocation(line: 1621, column: 11, scope: !6456)
!6458 = !DILocation(line: 1621, column: 7, scope: !6431)
!6459 = !DILocation(line: 1622, column: 5, scope: !6456)
!6460 = !DILocation(line: 1622, column: 12, scope: !6456)
!6461 = !DILocation(line: 1622, column: 18, scope: !6456)
!6462 = !DILocation(line: 1622, column: 16, scope: !6456)
!6463 = !DILocation(line: 1622, column: 22, scope: !6456)
!6464 = !DILocation(line: 1622, column: 30, scope: !6456)
!6465 = !DILocation(line: 0, scope: !6456)
!6466 = !DILocation(line: 1624, column: 9, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6456, file: !63, line: 1623, column: 7)
!6468 = !DILocation(line: 1624, column: 16, scope: !6467)
!6469 = !DILocation(line: 1624, column: 22, scope: !6467)
!6470 = !DILocation(line: 1624, column: 20, scope: !6467)
!6471 = !DILocation(line: 1624, column: 26, scope: !6467)
!6472 = !DILocation(line: 1624, column: 30, scope: !6467)
!6473 = !DILocation(line: 1624, column: 29, scope: !6467)
!6474 = !DILocation(line: 1624, column: 37, scope: !6467)
!6475 = !DILocation(line: 1624, column: 34, scope: !6467)
!6476 = !DILocation(line: 0, scope: !6467)
!6477 = !DILocation(line: 1625, column: 11, scope: !6467)
!6478 = distinct !{!6478, !6466, !6479}
!6479 = !DILocation(line: 1625, column: 13, scope: !6467)
!6480 = !DILocation(line: 1626, column: 13, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6467, file: !63, line: 1626, column: 13)
!6482 = !DILocation(line: 1626, column: 19, scope: !6481)
!6483 = !DILocation(line: 1626, column: 17, scope: !6481)
!6484 = !DILocation(line: 1626, column: 13, scope: !6467)
!6485 = !DILocation(line: 1627, column: 11, scope: !6481)
!6486 = distinct !{!6486, !6459, !6487}
!6487 = !DILocation(line: 1628, column: 7, scope: !6456)
!6488 = !DILocation(line: 1630, column: 5, scope: !6456)
!6489 = !DILocation(line: 1630, column: 12, scope: !6456)
!6490 = !DILocation(line: 1630, column: 18, scope: !6456)
!6491 = !DILocation(line: 1630, column: 16, scope: !6456)
!6492 = !DILocation(line: 1630, column: 22, scope: !6456)
!6493 = !DILocation(line: 1630, column: 30, scope: !6456)
!6494 = !DILocation(line: 1632, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6456, file: !63, line: 1631, column: 7)
!6496 = !DILocation(line: 1632, column: 16, scope: !6495)
!6497 = !DILocation(line: 1632, column: 22, scope: !6495)
!6498 = !DILocation(line: 1632, column: 20, scope: !6495)
!6499 = !DILocation(line: 1632, column: 26, scope: !6495)
!6500 = !DILocation(line: 1632, column: 47, scope: !6495)
!6501 = !DILocation(line: 1632, column: 46, scope: !6495)
!6502 = !DILocation(line: 1632, column: 36, scope: !6495)
!6503 = !DILocation(line: 1632, column: 29, scope: !6495)
!6504 = !DILocation(line: 0, scope: !6495)
!6505 = !DILocation(line: 1633, column: 11, scope: !6495)
!6506 = distinct !{!6506, !6494, !6507}
!6507 = !DILocation(line: 1633, column: 13, scope: !6495)
!6508 = !DILocation(line: 1634, column: 9, scope: !6495)
!6509 = !DILocation(line: 1634, column: 16, scope: !6495)
!6510 = !DILocation(line: 1634, column: 22, scope: !6495)
!6511 = !DILocation(line: 1634, column: 20, scope: !6495)
!6512 = !DILocation(line: 1634, column: 26, scope: !6495)
!6513 = !DILocation(line: 1634, column: 48, scope: !6495)
!6514 = !DILocation(line: 1634, column: 47, scope: !6495)
!6515 = !DILocation(line: 1634, column: 37, scope: !6495)
!6516 = !DILocation(line: 1634, column: 30, scope: !6495)
!6517 = !DILocation(line: 1634, column: 29, scope: !6495)
!6518 = !DILocation(line: 1635, column: 11, scope: !6495)
!6519 = distinct !{!6519, !6508, !6520}
!6520 = !DILocation(line: 1635, column: 13, scope: !6495)
!6521 = distinct !{!6521, !6488, !6522}
!6522 = !DILocation(line: 1636, column: 7, scope: !6456)
!6523 = !DILocation(line: 1640, column: 7, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6431, file: !63, line: 1640, column: 7)
!6525 = !DILocation(line: 1640, column: 12, scope: !6524)
!6526 = !DILocation(line: 1640, column: 7, scope: !6431)
!6527 = !DILocation(line: 1641, column: 5, scope: !6524)
!6528 = !DILocation(line: 1641, column: 12, scope: !6524)
!6529 = !DILocation(line: 1641, column: 18, scope: !6524)
!6530 = !DILocation(line: 1641, column: 16, scope: !6524)
!6531 = !DILocation(line: 1641, column: 22, scope: !6524)
!6532 = !DILocation(line: 1641, column: 43, scope: !6524)
!6533 = !DILocation(line: 1641, column: 42, scope: !6524)
!6534 = !DILocation(line: 1641, column: 32, scope: !6524)
!6535 = !DILocation(line: 1641, column: 25, scope: !6524)
!6536 = !DILocation(line: 0, scope: !6524)
!6537 = !DILocation(line: 1642, column: 7, scope: !6524)
!6538 = distinct !{!6538, !6527, !6539}
!6539 = !DILocation(line: 1642, column: 9, scope: !6524)
!6540 = !DILocation(line: 1645, column: 9, scope: !6431)
!6541 = !DILocation(line: 1645, column: 7, scope: !6431)
!6542 = !DILocation(line: 1647, column: 10, scope: !6431)
!6543 = !DILocation(line: 1647, column: 3, scope: !6431)
!6544 = distinct !DISubprogram(name: "limfield", scope: !63, file: !63, line: 1654, type: !463, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6545 = !DILocalVariable(name: "line", arg: 1, scope: !6544, file: !63, line: 1654, type: !440)
!6546 = !DILocation(line: 1654, column: 30, scope: !6544)
!6547 = !DILocalVariable(name: "key", arg: 2, scope: !6544, file: !63, line: 1654, type: !416)
!6548 = !DILocation(line: 1654, column: 59, scope: !6544)
!6549 = !DILocalVariable(name: "ptr", scope: !6544, file: !63, line: 1656, type: !7)
!6550 = !DILocation(line: 1656, column: 9, scope: !6544)
!6551 = !DILocation(line: 1656, column: 15, scope: !6544)
!6552 = !DILocation(line: 1656, column: 21, scope: !6544)
!6553 = !DILocalVariable(name: "lim", scope: !6544, file: !63, line: 1656, type: !7)
!6554 = !DILocation(line: 1656, column: 28, scope: !6544)
!6555 = !DILocation(line: 1656, column: 34, scope: !6544)
!6556 = !DILocation(line: 1656, column: 40, scope: !6544)
!6557 = !DILocation(line: 1656, column: 46, scope: !6544)
!6558 = !DILocation(line: 1656, column: 38, scope: !6544)
!6559 = !DILocation(line: 1656, column: 53, scope: !6544)
!6560 = !DILocalVariable(name: "eword", scope: !6544, file: !63, line: 1657, type: !52)
!6561 = !DILocation(line: 1657, column: 10, scope: !6544)
!6562 = !DILocation(line: 1657, column: 18, scope: !6544)
!6563 = !DILocation(line: 1657, column: 23, scope: !6544)
!6564 = !DILocalVariable(name: "echar", scope: !6544, file: !63, line: 1657, type: !52)
!6565 = !DILocation(line: 1657, column: 30, scope: !6544)
!6566 = !DILocation(line: 1657, column: 38, scope: !6544)
!6567 = !DILocation(line: 1657, column: 43, scope: !6544)
!6568 = !DILocation(line: 1659, column: 7, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6544, file: !63, line: 1659, column: 7)
!6570 = !DILocation(line: 1659, column: 13, scope: !6569)
!6571 = !DILocation(line: 1659, column: 7, scope: !6544)
!6572 = !DILocation(line: 1660, column: 10, scope: !6569)
!6573 = !DILocation(line: 1660, column: 5, scope: !6569)
!6574 = !DILocation(line: 1669, column: 7, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6544, file: !63, line: 1669, column: 7)
!6576 = !DILocation(line: 1669, column: 11, scope: !6575)
!6577 = !DILocation(line: 1669, column: 7, scope: !6544)
!6578 = !DILocation(line: 1670, column: 5, scope: !6575)
!6579 = !DILocation(line: 1670, column: 12, scope: !6575)
!6580 = !DILocation(line: 1670, column: 18, scope: !6575)
!6581 = !DILocation(line: 1670, column: 16, scope: !6575)
!6582 = !DILocation(line: 1670, column: 22, scope: !6575)
!6583 = !DILocation(line: 1670, column: 30, scope: !6575)
!6584 = !DILocation(line: 0, scope: !6575)
!6585 = !DILocation(line: 1672, column: 9, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6575, file: !63, line: 1671, column: 7)
!6587 = !DILocation(line: 1672, column: 16, scope: !6586)
!6588 = !DILocation(line: 1672, column: 22, scope: !6586)
!6589 = !DILocation(line: 1672, column: 20, scope: !6586)
!6590 = !DILocation(line: 1672, column: 26, scope: !6586)
!6591 = !DILocation(line: 1672, column: 30, scope: !6586)
!6592 = !DILocation(line: 1672, column: 29, scope: !6586)
!6593 = !DILocation(line: 1672, column: 37, scope: !6586)
!6594 = !DILocation(line: 1672, column: 34, scope: !6586)
!6595 = !DILocation(line: 0, scope: !6586)
!6596 = !DILocation(line: 1673, column: 11, scope: !6586)
!6597 = distinct !{!6597, !6585, !6598}
!6598 = !DILocation(line: 1673, column: 13, scope: !6586)
!6599 = !DILocation(line: 1674, column: 13, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6586, file: !63, line: 1674, column: 13)
!6601 = !DILocation(line: 1674, column: 19, scope: !6600)
!6602 = !DILocation(line: 1674, column: 17, scope: !6600)
!6603 = !DILocation(line: 1674, column: 23, scope: !6600)
!6604 = !DILocation(line: 1674, column: 27, scope: !6600)
!6605 = !DILocation(line: 1674, column: 33, scope: !6600)
!6606 = !DILocation(line: 1674, column: 36, scope: !6600)
!6607 = !DILocation(line: 1674, column: 13, scope: !6586)
!6608 = !DILocation(line: 1675, column: 11, scope: !6600)
!6609 = distinct !{!6609, !6578, !6610}
!6610 = !DILocation(line: 1676, column: 7, scope: !6575)
!6611 = !DILocation(line: 1678, column: 5, scope: !6575)
!6612 = !DILocation(line: 1678, column: 12, scope: !6575)
!6613 = !DILocation(line: 1678, column: 18, scope: !6575)
!6614 = !DILocation(line: 1678, column: 16, scope: !6575)
!6615 = !DILocation(line: 1678, column: 22, scope: !6575)
!6616 = !DILocation(line: 1678, column: 30, scope: !6575)
!6617 = !DILocation(line: 1680, column: 9, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6575, file: !63, line: 1679, column: 7)
!6619 = !DILocation(line: 1680, column: 16, scope: !6618)
!6620 = !DILocation(line: 1680, column: 22, scope: !6618)
!6621 = !DILocation(line: 1680, column: 20, scope: !6618)
!6622 = !DILocation(line: 1680, column: 26, scope: !6618)
!6623 = !DILocation(line: 1680, column: 47, scope: !6618)
!6624 = !DILocation(line: 1680, column: 46, scope: !6618)
!6625 = !DILocation(line: 1680, column: 36, scope: !6618)
!6626 = !DILocation(line: 1680, column: 29, scope: !6618)
!6627 = !DILocation(line: 0, scope: !6618)
!6628 = !DILocation(line: 1681, column: 11, scope: !6618)
!6629 = distinct !{!6629, !6617, !6630}
!6630 = !DILocation(line: 1681, column: 13, scope: !6618)
!6631 = !DILocation(line: 1682, column: 9, scope: !6618)
!6632 = !DILocation(line: 1682, column: 16, scope: !6618)
!6633 = !DILocation(line: 1682, column: 22, scope: !6618)
!6634 = !DILocation(line: 1682, column: 20, scope: !6618)
!6635 = !DILocation(line: 1682, column: 26, scope: !6618)
!6636 = !DILocation(line: 1682, column: 48, scope: !6618)
!6637 = !DILocation(line: 1682, column: 47, scope: !6618)
!6638 = !DILocation(line: 1682, column: 37, scope: !6618)
!6639 = !DILocation(line: 1682, column: 30, scope: !6618)
!6640 = !DILocation(line: 1682, column: 29, scope: !6618)
!6641 = !DILocation(line: 1683, column: 11, scope: !6618)
!6642 = distinct !{!6642, !6631, !6643}
!6643 = !DILocation(line: 1683, column: 13, scope: !6618)
!6644 = distinct !{!6644, !6611, !6645}
!6645 = !DILocation(line: 1684, column: 7, scope: !6575)
!6646 = !DILocation(line: 1737, column: 7, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6544, file: !63, line: 1737, column: 7)
!6648 = !DILocation(line: 1737, column: 13, scope: !6647)
!6649 = !DILocation(line: 1737, column: 7, scope: !6544)
!6650 = !DILocation(line: 1741, column: 11, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6652, file: !63, line: 1741, column: 11)
!6652 = distinct !DILexicalBlock(scope: !6647, file: !63, line: 1738, column: 5)
!6653 = !DILocation(line: 1741, column: 16, scope: !6651)
!6654 = !DILocation(line: 1741, column: 11, scope: !6652)
!6655 = !DILocation(line: 1742, column: 9, scope: !6651)
!6656 = !DILocation(line: 1742, column: 16, scope: !6651)
!6657 = !DILocation(line: 1742, column: 22, scope: !6651)
!6658 = !DILocation(line: 1742, column: 20, scope: !6651)
!6659 = !DILocation(line: 1742, column: 26, scope: !6651)
!6660 = !DILocation(line: 1742, column: 47, scope: !6651)
!6661 = !DILocation(line: 1742, column: 46, scope: !6651)
!6662 = !DILocation(line: 1742, column: 36, scope: !6651)
!6663 = !DILocation(line: 1742, column: 29, scope: !6651)
!6664 = !DILocation(line: 0, scope: !6651)
!6665 = !DILocation(line: 1743, column: 11, scope: !6651)
!6666 = distinct !{!6666, !6655, !6667}
!6667 = !DILocation(line: 1743, column: 13, scope: !6651)
!6668 = !DILocation(line: 1746, column: 13, scope: !6652)
!6669 = !DILocation(line: 1746, column: 11, scope: !6652)
!6670 = !DILocation(line: 1747, column: 5, scope: !6652)
!6671 = !DILocation(line: 1749, column: 10, scope: !6544)
!6672 = !DILocation(line: 1749, column: 3, scope: !6544)
!6673 = distinct !DISubprogram(name: "key_numeric", scope: !63, file: !63, line: 2297, type: !414, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6674 = !DILocalVariable(name: "key", arg: 1, scope: !6673, file: !63, line: 2297, type: !416)
!6675 = !DILocation(line: 2297, column: 37, scope: !6673)
!6676 = !DILocation(line: 2299, column: 10, scope: !6673)
!6677 = !DILocation(line: 2299, column: 15, scope: !6673)
!6678 = !DILocation(line: 2299, column: 23, scope: !6673)
!6679 = !DILocation(line: 2299, column: 26, scope: !6673)
!6680 = !DILocation(line: 2299, column: 31, scope: !6673)
!6681 = !DILocation(line: 2299, column: 47, scope: !6673)
!6682 = !DILocation(line: 2299, column: 50, scope: !6673)
!6683 = !DILocation(line: 2299, column: 55, scope: !6673)
!6684 = !DILocation(line: 2299, column: 3, scope: !6673)
!6685 = distinct !DISubprogram(name: "getmonth", scope: !63, file: !63, line: 2049, type: !482, scopeLine: 2050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6686 = !DILocalVariable(name: "month", arg: 1, scope: !6685, file: !63, line: 2049, type: !87)
!6687 = !DILocation(line: 2049, column: 23, scope: !6685)
!6688 = !DILocalVariable(name: "ea", arg: 2, scope: !6685, file: !63, line: 2049, type: !91)
!6689 = !DILocation(line: 2049, column: 37, scope: !6685)
!6690 = !DILocalVariable(name: "lo", scope: !6685, file: !63, line: 2051, type: !52)
!6691 = !DILocation(line: 2051, column: 10, scope: !6685)
!6692 = !DILocalVariable(name: "hi", scope: !6685, file: !63, line: 2052, type: !52)
!6693 = !DILocation(line: 2052, column: 10, scope: !6685)
!6694 = !DILocation(line: 2054, column: 3, scope: !6685)
!6695 = !DILocation(line: 2054, column: 28, scope: !6685)
!6696 = !DILocation(line: 2054, column: 27, scope: !6685)
!6697 = !DILocation(line: 2054, column: 17, scope: !6685)
!6698 = !DILocation(line: 2054, column: 10, scope: !6685)
!6699 = !DILocation(line: 2055, column: 10, scope: !6685)
!6700 = distinct !{!6700, !6694, !6699}
!6701 = !DILocation(line: 2057, column: 3, scope: !6685)
!6702 = !DILocalVariable(name: "ix", scope: !6703, file: !63, line: 2059, type: !52)
!6703 = distinct !DILexicalBlock(scope: !6685, file: !63, line: 2058, column: 5)
!6704 = !DILocation(line: 2059, column: 14, scope: !6703)
!6705 = !DILocation(line: 2059, column: 20, scope: !6703)
!6706 = !DILocation(line: 2059, column: 25, scope: !6703)
!6707 = !DILocation(line: 2059, column: 23, scope: !6703)
!6708 = !DILocation(line: 2059, column: 29, scope: !6703)
!6709 = !DILocalVariable(name: "m", scope: !6703, file: !63, line: 2060, type: !87)
!6710 = !DILocation(line: 2060, column: 19, scope: !6703)
!6711 = !DILocation(line: 2060, column: 23, scope: !6703)
!6712 = !DILocalVariable(name: "n", scope: !6703, file: !63, line: 2061, type: !87)
!6713 = !DILocation(line: 2061, column: 19, scope: !6703)
!6714 = !DILocation(line: 2061, column: 32, scope: !6703)
!6715 = !DILocation(line: 2061, column: 23, scope: !6703)
!6716 = !DILocation(line: 2061, column: 36, scope: !6703)
!6717 = !DILocation(line: 2063, column: 7, scope: !6703)
!6718 = !DILocation(line: 2065, column: 17, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !63, line: 2065, column: 15)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !63, line: 2064, column: 9)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !63, line: 2063, column: 7)
!6722 = distinct !DILexicalBlock(scope: !6703, file: !63, line: 2063, column: 7)
!6723 = !DILocation(line: 2065, column: 16, scope: !6719)
!6724 = !DILocation(line: 2065, column: 15, scope: !6720)
!6725 = !DILocation(line: 2067, column: 19, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !63, line: 2067, column: 19)
!6727 = distinct !DILexicalBlock(scope: !6719, file: !63, line: 2066, column: 13)
!6728 = !DILocation(line: 2067, column: 19, scope: !6727)
!6729 = !DILocation(line: 2068, column: 32, scope: !6726)
!6730 = !DILocation(line: 2068, column: 18, scope: !6726)
!6731 = !DILocation(line: 2068, column: 21, scope: !6726)
!6732 = !DILocation(line: 2068, column: 17, scope: !6726)
!6733 = !DILocation(line: 2069, column: 31, scope: !6727)
!6734 = !DILocation(line: 2069, column: 22, scope: !6727)
!6735 = !DILocation(line: 2069, column: 35, scope: !6727)
!6736 = !DILocation(line: 2069, column: 15, scope: !6727)
!6737 = !DILocation(line: 2071, column: 49, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6720, file: !63, line: 2071, column: 15)
!6739 = !DILocation(line: 2071, column: 48, scope: !6738)
!6740 = !DILocation(line: 2071, column: 38, scope: !6738)
!6741 = !DILocation(line: 2071, column: 25, scope: !6738)
!6742 = !DILocation(line: 2071, column: 15, scope: !6738)
!6743 = !DILocation(line: 2071, column: 67, scope: !6738)
!6744 = !DILocation(line: 2071, column: 66, scope: !6738)
!6745 = !DILocation(line: 2071, column: 56, scope: !6738)
!6746 = !DILocation(line: 2071, column: 54, scope: !6738)
!6747 = !DILocation(line: 2071, column: 15, scope: !6720)
!6748 = !DILocation(line: 2073, column: 20, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6738, file: !63, line: 2072, column: 13)
!6750 = !DILocation(line: 2073, column: 18, scope: !6749)
!6751 = !DILocation(line: 2074, column: 15, scope: !6749)
!6752 = !DILocation(line: 2076, column: 54, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6738, file: !63, line: 2076, column: 20)
!6754 = !DILocation(line: 2076, column: 53, scope: !6753)
!6755 = !DILocation(line: 2076, column: 43, scope: !6753)
!6756 = !DILocation(line: 2076, column: 30, scope: !6753)
!6757 = !DILocation(line: 2076, column: 20, scope: !6753)
!6758 = !DILocation(line: 2076, column: 72, scope: !6753)
!6759 = !DILocation(line: 2076, column: 71, scope: !6753)
!6760 = !DILocation(line: 2076, column: 61, scope: !6753)
!6761 = !DILocation(line: 2076, column: 59, scope: !6753)
!6762 = !DILocation(line: 2076, column: 20, scope: !6738)
!6763 = !DILocation(line: 2078, column: 20, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6753, file: !63, line: 2077, column: 13)
!6765 = !DILocation(line: 2078, column: 23, scope: !6764)
!6766 = !DILocation(line: 2078, column: 18, scope: !6764)
!6767 = !DILocation(line: 2079, column: 15, scope: !6764)
!6768 = !DILocation(line: 2081, column: 9, scope: !6720)
!6769 = !DILocation(line: 2063, column: 16, scope: !6721)
!6770 = !DILocation(line: 2063, column: 21, scope: !6721)
!6771 = !DILocation(line: 2063, column: 7, scope: !6721)
!6772 = distinct !{!6772, !6773, !6774}
!6773 = !DILocation(line: 2063, column: 7, scope: !6722)
!6774 = !DILocation(line: 2081, column: 9, scope: !6722)
!6775 = !DILocation(line: 2082, column: 5, scope: !6703)
!6776 = !DILocation(line: 2083, column: 10, scope: !6685)
!6777 = !DILocation(line: 2083, column: 15, scope: !6685)
!6778 = !DILocation(line: 2083, column: 13, scope: !6685)
!6779 = distinct !{!6779, !6701, !6780}
!6780 = !DILocation(line: 2083, column: 17, scope: !6685)
!6781 = !DILocation(line: 2085, column: 3, scope: !6685)
!6782 = !DILocation(line: 2086, column: 1, scope: !6685)
!6783 = distinct !DISubprogram(name: "traverse_raw_number", scope: !63, file: !63, line: 1906, type: !480, scopeLine: 1907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6784 = !DILocalVariable(name: "number", arg: 1, scope: !6783, file: !63, line: 1906, type: !371)
!6785 = !DILocation(line: 1906, column: 35, scope: !6783)
!6786 = !DILocalVariable(name: "p", scope: !6783, file: !63, line: 1908, type: !87)
!6787 = !DILocation(line: 1908, column: 15, scope: !6783)
!6788 = !DILocation(line: 1908, column: 20, scope: !6783)
!6789 = !DILocation(line: 1908, column: 19, scope: !6783)
!6790 = !DILocalVariable(name: "ch", scope: !6783, file: !63, line: 1909, type: !317)
!6791 = !DILocation(line: 1909, column: 17, scope: !6783)
!6792 = !DILocalVariable(name: "max_digit", scope: !6783, file: !63, line: 1910, type: !317)
!6793 = !DILocation(line: 1910, column: 17, scope: !6783)
!6794 = !DILocalVariable(name: "ends_with_thousands_sep", scope: !6783, file: !63, line: 1911, type: !102)
!6795 = !DILocation(line: 1911, column: 8, scope: !6783)
!6796 = !DILocation(line: 1919, column: 3, scope: !6783)
!6797 = !DILocation(line: 1919, column: 10, scope: !6783)
!6798 = !DILocation(line: 1921, column: 11, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !63, line: 1921, column: 11)
!6800 = distinct !DILexicalBlock(scope: !6783, file: !63, line: 1920, column: 5)
!6801 = !DILocation(line: 1921, column: 23, scope: !6799)
!6802 = !DILocation(line: 1921, column: 21, scope: !6799)
!6803 = !DILocation(line: 1921, column: 11, scope: !6800)
!6804 = !DILocation(line: 1922, column: 21, scope: !6799)
!6805 = !DILocation(line: 1922, column: 19, scope: !6799)
!6806 = !DILocation(line: 1922, column: 9, scope: !6799)
!6807 = !DILocation(line: 1927, column: 35, scope: !6800)
!6808 = !DILocation(line: 1927, column: 34, scope: !6800)
!6809 = !DILocation(line: 1927, column: 40, scope: !6800)
!6810 = !DILocation(line: 1927, column: 37, scope: !6800)
!6811 = !DILocation(line: 1927, column: 31, scope: !6800)
!6812 = !DILocation(line: 1928, column: 11, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6800, file: !63, line: 1928, column: 11)
!6814 = !DILocation(line: 1928, column: 11, scope: !6800)
!6815 = !DILocation(line: 1929, column: 9, scope: !6813)
!6816 = distinct !{!6816, !6796, !6817}
!6817 = !DILocation(line: 1930, column: 5, scope: !6783)
!6818 = !DILocation(line: 1932, column: 7, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6783, file: !63, line: 1932, column: 7)
!6820 = !DILocation(line: 1932, column: 7, scope: !6783)
!6821 = !DILocation(line: 1935, column: 17, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6819, file: !63, line: 1933, column: 5)
!6823 = !DILocation(line: 1935, column: 19, scope: !6822)
!6824 = !DILocation(line: 1935, column: 8, scope: !6822)
!6825 = !DILocation(line: 1935, column: 15, scope: !6822)
!6826 = !DILocation(line: 1936, column: 14, scope: !6822)
!6827 = !DILocation(line: 1936, column: 7, scope: !6822)
!6828 = !DILocation(line: 1939, column: 7, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6783, file: !63, line: 1939, column: 7)
!6830 = !DILocation(line: 1939, column: 13, scope: !6829)
!6831 = !DILocation(line: 1939, column: 10, scope: !6829)
!6832 = !DILocation(line: 1939, column: 7, scope: !6783)
!6833 = !DILocation(line: 1940, column: 5, scope: !6829)
!6834 = !DILocation(line: 1940, column: 12, scope: !6829)
!6835 = !DILocation(line: 1941, column: 11, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6829, file: !63, line: 1941, column: 11)
!6837 = !DILocation(line: 1941, column: 23, scope: !6836)
!6838 = !DILocation(line: 1941, column: 21, scope: !6836)
!6839 = !DILocation(line: 1941, column: 11, scope: !6829)
!6840 = !DILocation(line: 1942, column: 21, scope: !6836)
!6841 = !DILocation(line: 1942, column: 19, scope: !6836)
!6842 = !DILocation(line: 1942, column: 9, scope: !6836)
!6843 = distinct !{!6843, !6833, !6844}
!6844 = !DILocation(line: 1942, column: 21, scope: !6829)
!6845 = !DILocation(line: 1944, column: 13, scope: !6783)
!6846 = !DILocation(line: 1944, column: 15, scope: !6783)
!6847 = !DILocation(line: 1944, column: 4, scope: !6783)
!6848 = !DILocation(line: 1944, column: 11, scope: !6783)
!6849 = !DILocation(line: 1945, column: 10, scope: !6783)
!6850 = !DILocation(line: 1945, column: 3, scope: !6783)
!6851 = !DILocation(line: 1946, column: 1, scope: !6783)
!6852 = distinct !DISubprogram(name: "debug_width", scope: !63, file: !63, line: 2265, type: !514, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6853 = !DILocalVariable(name: "text", arg: 1, scope: !6852, file: !63, line: 2265, type: !87)
!6854 = !DILocation(line: 2265, column: 26, scope: !6852)
!6855 = !DILocalVariable(name: "lim", arg: 2, scope: !6852, file: !63, line: 2265, type: !87)
!6856 = !DILocation(line: 2265, column: 44, scope: !6852)
!6857 = !DILocalVariable(name: "width", scope: !6852, file: !63, line: 2267, type: !52)
!6858 = !DILocation(line: 2267, column: 10, scope: !6852)
!6859 = !DILocation(line: 2267, column: 29, scope: !6852)
!6860 = !DILocation(line: 2267, column: 35, scope: !6852)
!6861 = !DILocation(line: 2267, column: 41, scope: !6852)
!6862 = !DILocation(line: 2267, column: 39, scope: !6852)
!6863 = !DILocation(line: 2267, column: 18, scope: !6852)
!6864 = !DILocation(line: 2268, column: 3, scope: !6852)
!6865 = !DILocation(line: 2268, column: 10, scope: !6852)
!6866 = !DILocation(line: 2268, column: 17, scope: !6852)
!6867 = !DILocation(line: 2268, column: 15, scope: !6852)
!6868 = !DILocation(line: 2269, column: 20, scope: !6852)
!6869 = !DILocation(line: 2269, column: 15, scope: !6852)
!6870 = !DILocation(line: 2269, column: 23, scope: !6852)
!6871 = !DILocation(line: 2269, column: 14, scope: !6852)
!6872 = !DILocation(line: 2269, column: 11, scope: !6852)
!6873 = distinct !{!6873, !6864, !6874}
!6874 = !DILocation(line: 2269, column: 30, scope: !6852)
!6875 = !DILocation(line: 2270, column: 10, scope: !6852)
!6876 = !DILocation(line: 2270, column: 3, scope: !6852)
!6877 = distinct !DISubprogram(name: "mark_key", scope: !63, file: !63, line: 2277, type: !516, scopeLine: 2278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6878 = !DILocalVariable(name: "offset", arg: 1, scope: !6877, file: !63, line: 2277, type: !52)
!6879 = !DILocation(line: 2277, column: 18, scope: !6877)
!6880 = !DILocalVariable(name: "width", arg: 2, scope: !6877, file: !63, line: 2277, type: !52)
!6881 = !DILocation(line: 2277, column: 33, scope: !6877)
!6882 = !DILocation(line: 2279, column: 3, scope: !6877)
!6883 = !DILocation(line: 2279, column: 16, scope: !6877)
!6884 = !DILocation(line: 2280, column: 5, scope: !6877)
!6885 = distinct !{!6885, !6882, !6884}
!6886 = !DILocation(line: 2282, column: 8, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6877, file: !63, line: 2282, column: 7)
!6888 = !DILocation(line: 2282, column: 7, scope: !6877)
!6889 = !DILocation(line: 2283, column: 13, scope: !6887)
!6890 = !DILocation(line: 2283, column: 5, scope: !6887)
!6891 = !DILocation(line: 2286, column: 7, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6887, file: !63, line: 2285, column: 5)
!6893 = !DILocation(line: 2287, column: 9, scope: !6892)
!6894 = !DILocation(line: 2288, column: 14, scope: !6892)
!6895 = distinct !{!6895, !6891, !6896}
!6896 = !DILocation(line: 2288, column: 21, scope: !6892)
!6897 = !DILocation(line: 2290, column: 7, scope: !6892)
!6898 = !DILocation(line: 2292, column: 1, scope: !6877)
!6899 = distinct !DISubprogram(name: "keycompare", scope: !63, file: !63, line: 2529, type: !469, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!6900 = !DILocalVariable(name: "a", arg: 1, scope: !6899, file: !63, line: 2529, type: !440)
!6901 = !DILocation(line: 2529, column: 32, scope: !6899)
!6902 = !DILocalVariable(name: "b", arg: 2, scope: !6899, file: !63, line: 2529, type: !440)
!6903 = !DILocation(line: 2529, column: 54, scope: !6899)
!6904 = !DILocalVariable(name: "key", scope: !6899, file: !63, line: 2531, type: !92)
!6905 = !DILocation(line: 2531, column: 20, scope: !6899)
!6906 = !DILocation(line: 2531, column: 26, scope: !6899)
!6907 = !DILocalVariable(name: "texta", scope: !6899, file: !63, line: 2535, type: !7)
!6908 = !DILocation(line: 2535, column: 9, scope: !6899)
!6909 = !DILocation(line: 2535, column: 17, scope: !6899)
!6910 = !DILocation(line: 2535, column: 20, scope: !6899)
!6911 = !DILocalVariable(name: "textb", scope: !6899, file: !63, line: 2536, type: !7)
!6912 = !DILocation(line: 2536, column: 9, scope: !6899)
!6913 = !DILocation(line: 2536, column: 17, scope: !6899)
!6914 = !DILocation(line: 2536, column: 20, scope: !6899)
!6915 = !DILocalVariable(name: "lima", scope: !6899, file: !63, line: 2537, type: !7)
!6916 = !DILocation(line: 2537, column: 9, scope: !6899)
!6917 = !DILocation(line: 2537, column: 16, scope: !6899)
!6918 = !DILocation(line: 2537, column: 19, scope: !6899)
!6919 = !DILocalVariable(name: "limb", scope: !6899, file: !63, line: 2538, type: !7)
!6920 = !DILocation(line: 2538, column: 9, scope: !6899)
!6921 = !DILocation(line: 2538, column: 16, scope: !6899)
!6922 = !DILocation(line: 2538, column: 19, scope: !6899)
!6923 = !DILocalVariable(name: "diff", scope: !6899, file: !63, line: 2540, type: !5)
!6924 = !DILocation(line: 2540, column: 7, scope: !6899)
!6925 = !DILocation(line: 2542, column: 3, scope: !6899)
!6926 = !DILocalVariable(name: "translate", scope: !6927, file: !63, line: 2544, type: !87)
!6927 = distinct !DILexicalBlock(scope: !6899, file: !63, line: 2543, column: 5)
!6928 = !DILocation(line: 2544, column: 19, scope: !6927)
!6929 = !DILocation(line: 2544, column: 31, scope: !6927)
!6930 = !DILocation(line: 2544, column: 36, scope: !6927)
!6931 = !DILocalVariable(name: "ignore", scope: !6927, file: !63, line: 2545, type: !100)
!6932 = !DILocation(line: 2545, column: 19, scope: !6927)
!6933 = !DILocation(line: 2545, column: 28, scope: !6927)
!6934 = !DILocation(line: 2545, column: 33, scope: !6927)
!6935 = !DILocation(line: 2548, column: 14, scope: !6927)
!6936 = !DILocation(line: 2548, column: 12, scope: !6927)
!6937 = !DILocation(line: 2549, column: 14, scope: !6927)
!6938 = !DILocation(line: 2549, column: 12, scope: !6927)
!6939 = !DILocalVariable(name: "lena", scope: !6927, file: !63, line: 2552, type: !52)
!6940 = !DILocation(line: 2552, column: 14, scope: !6927)
!6941 = !DILocation(line: 2552, column: 21, scope: !6927)
!6942 = !DILocation(line: 2552, column: 28, scope: !6927)
!6943 = !DILocation(line: 2552, column: 26, scope: !6927)
!6944 = !DILocalVariable(name: "lenb", scope: !6927, file: !63, line: 2553, type: !52)
!6945 = !DILocation(line: 2553, column: 14, scope: !6927)
!6946 = !DILocation(line: 2553, column: 21, scope: !6927)
!6947 = !DILocation(line: 2553, column: 28, scope: !6927)
!6948 = !DILocation(line: 2553, column: 26, scope: !6927)
!6949 = !DILocation(line: 2555, column: 11, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6927, file: !63, line: 2555, column: 11)
!6951 = !DILocation(line: 2555, column: 27, scope: !6950)
!6952 = !DILocation(line: 2555, column: 43, scope: !6950)
!6953 = !DILocation(line: 2555, column: 30, scope: !6950)
!6954 = !DILocation(line: 2556, column: 11, scope: !6950)
!6955 = !DILocation(line: 2556, column: 14, scope: !6950)
!6956 = !DILocation(line: 2556, column: 19, scope: !6950)
!6957 = !DILocation(line: 2556, column: 25, scope: !6950)
!6958 = !DILocation(line: 2556, column: 28, scope: !6950)
!6959 = !DILocation(line: 2556, column: 33, scope: !6950)
!6960 = !DILocation(line: 2556, column: 40, scope: !6950)
!6961 = !DILocation(line: 2556, column: 43, scope: !6950)
!6962 = !DILocation(line: 2556, column: 48, scope: !6950)
!6963 = !DILocation(line: 2555, column: 11, scope: !6927)
!6964 = !DILocalVariable(name: "ta", scope: !6965, file: !63, line: 2558, type: !7)
!6965 = distinct !DILexicalBlock(scope: !6950, file: !63, line: 2557, column: 9)
!6966 = !DILocation(line: 2558, column: 17, scope: !6965)
!6967 = !DILocalVariable(name: "tb", scope: !6965, file: !63, line: 2559, type: !7)
!6968 = !DILocation(line: 2559, column: 17, scope: !6965)
!6969 = !DILocalVariable(name: "tlena", scope: !6965, file: !63, line: 2560, type: !52)
!6970 = !DILocation(line: 2560, column: 18, scope: !6965)
!6971 = !DILocalVariable(name: "tlenb", scope: !6965, file: !63, line: 2561, type: !52)
!6972 = !DILocation(line: 2561, column: 18, scope: !6965)
!6973 = !DILocalVariable(name: "enda", scope: !6965, file: !63, line: 2563, type: !8)
!6974 = !DILocation(line: 2563, column: 16, scope: !6965)
!6975 = !DILocalVariable(name: "endb", scope: !6965, file: !63, line: 2564, type: !8)
!6976 = !DILocation(line: 2564, column: 16, scope: !6965)
!6977 = !DILocalVariable(name: "allocated", scope: !6965, file: !63, line: 2565, type: !47)
!6978 = !DILocation(line: 2565, column: 17, scope: !6965)
!6979 = !DILocalVariable(name: "stackbuf", scope: !6965, file: !63, line: 2566, type: !471)
!6980 = !DILocation(line: 2566, column: 16, scope: !6965)
!6981 = !DILocation(line: 2568, column: 15, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6965, file: !63, line: 2568, column: 15)
!6983 = !DILocation(line: 2568, column: 22, scope: !6982)
!6984 = !DILocation(line: 2568, column: 25, scope: !6982)
!6985 = !DILocation(line: 2568, column: 15, scope: !6965)
!6986 = !DILocalVariable(name: "i", scope: !6987, file: !63, line: 2574, type: !52)
!6987 = distinct !DILexicalBlock(scope: !6982, file: !63, line: 2569, column: 13)
!6988 = !DILocation(line: 2574, column: 22, scope: !6987)
!6989 = !DILocalVariable(name: "size", scope: !6987, file: !63, line: 2577, type: !52)
!6990 = !DILocation(line: 2577, column: 22, scope: !6987)
!6991 = !DILocation(line: 2577, column: 29, scope: !6987)
!6992 = !DILocation(line: 2577, column: 34, scope: !6987)
!6993 = !DILocation(line: 2577, column: 40, scope: !6987)
!6994 = !DILocation(line: 2577, column: 38, scope: !6987)
!6995 = !DILocation(line: 2577, column: 45, scope: !6987)
!6996 = !DILocation(line: 2578, column: 19, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6987, file: !63, line: 2578, column: 19)
!6998 = !DILocation(line: 2578, column: 24, scope: !6997)
!6999 = !DILocation(line: 2578, column: 19, scope: !6987)
!7000 = !DILocation(line: 2579, column: 22, scope: !6997)
!7001 = !DILocation(line: 2579, column: 20, scope: !6997)
!7002 = !DILocation(line: 2579, column: 42, scope: !6997)
!7003 = !DILocation(line: 2579, column: 17, scope: !6997)
!7004 = !DILocation(line: 2581, column: 43, scope: !6997)
!7005 = !DILocation(line: 2581, column: 34, scope: !6997)
!7006 = !DILocation(line: 2581, column: 32, scope: !6997)
!7007 = !DILocation(line: 2581, column: 20, scope: !6997)
!7008 = !DILocation(line: 2582, column: 20, scope: !6987)
!7009 = !DILocation(line: 2582, column: 25, scope: !6987)
!7010 = !DILocation(line: 2582, column: 23, scope: !6987)
!7011 = !DILocation(line: 2582, column: 30, scope: !6987)
!7012 = !DILocation(line: 2582, column: 18, scope: !6987)
!7013 = !DILocation(line: 2586, column: 30, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6987, file: !63, line: 2586, column: 15)
!7015 = !DILocation(line: 2586, column: 26, scope: !7014)
!7016 = !DILocation(line: 2586, column: 20, scope: !7014)
!7017 = !DILocation(line: 2586, column: 35, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7014, file: !63, line: 2586, column: 15)
!7019 = !DILocation(line: 2586, column: 39, scope: !7018)
!7020 = !DILocation(line: 2586, column: 37, scope: !7018)
!7021 = !DILocation(line: 2586, column: 15, scope: !7014)
!7022 = !DILocation(line: 2587, column: 24, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7018, file: !63, line: 2587, column: 21)
!7024 = !DILocation(line: 2587, column: 31, scope: !7023)
!7025 = !DILocation(line: 2587, column: 34, scope: !7023)
!7026 = !DILocation(line: 2587, column: 51, scope: !7023)
!7027 = !DILocation(line: 2587, column: 57, scope: !7023)
!7028 = !DILocation(line: 2587, column: 41, scope: !7023)
!7029 = !DILocation(line: 2587, column: 21, scope: !7018)
!7030 = !DILocation(line: 2588, column: 34, scope: !7023)
!7031 = !DILocation(line: 2589, column: 36, scope: !7023)
!7032 = !DILocation(line: 2589, column: 56, scope: !7023)
!7033 = !DILocation(line: 2589, column: 62, scope: !7023)
!7034 = !DILocation(line: 2589, column: 46, scope: !7023)
!7035 = !DILocation(line: 2590, column: 36, scope: !7023)
!7036 = !DILocation(line: 2590, column: 42, scope: !7023)
!7037 = !DILocation(line: 2588, column: 33, scope: !7023)
!7038 = !DILocation(line: 2588, column: 19, scope: !7023)
!7039 = !DILocation(line: 2588, column: 27, scope: !7023)
!7040 = !DILocation(line: 2588, column: 31, scope: !7023)
!7041 = !DILocation(line: 2587, column: 61, scope: !7023)
!7042 = !DILocation(line: 2586, column: 46, scope: !7018)
!7043 = !DILocation(line: 2586, column: 15, scope: !7018)
!7044 = distinct !{!7044, !7021, !7045}
!7045 = !DILocation(line: 2590, column: 44, scope: !7014)
!7046 = !DILocation(line: 2591, column: 15, scope: !6987)
!7047 = !DILocation(line: 2591, column: 18, scope: !6987)
!7048 = !DILocation(line: 2591, column: 25, scope: !6987)
!7049 = !DILocation(line: 2593, column: 30, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !6987, file: !63, line: 2593, column: 15)
!7051 = !DILocation(line: 2593, column: 26, scope: !7050)
!7052 = !DILocation(line: 2593, column: 20, scope: !7050)
!7053 = !DILocation(line: 2593, column: 35, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7050, file: !63, line: 2593, column: 15)
!7055 = !DILocation(line: 2593, column: 39, scope: !7054)
!7056 = !DILocation(line: 2593, column: 37, scope: !7054)
!7057 = !DILocation(line: 2593, column: 15, scope: !7050)
!7058 = !DILocation(line: 2594, column: 24, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7054, file: !63, line: 2594, column: 21)
!7060 = !DILocation(line: 2594, column: 31, scope: !7059)
!7061 = !DILocation(line: 2594, column: 34, scope: !7059)
!7062 = !DILocation(line: 2594, column: 51, scope: !7059)
!7063 = !DILocation(line: 2594, column: 57, scope: !7059)
!7064 = !DILocation(line: 2594, column: 41, scope: !7059)
!7065 = !DILocation(line: 2594, column: 21, scope: !7054)
!7066 = !DILocation(line: 2595, column: 34, scope: !7059)
!7067 = !DILocation(line: 2596, column: 36, scope: !7059)
!7068 = !DILocation(line: 2596, column: 56, scope: !7059)
!7069 = !DILocation(line: 2596, column: 62, scope: !7059)
!7070 = !DILocation(line: 2596, column: 46, scope: !7059)
!7071 = !DILocation(line: 2597, column: 36, scope: !7059)
!7072 = !DILocation(line: 2597, column: 42, scope: !7059)
!7073 = !DILocation(line: 2595, column: 33, scope: !7059)
!7074 = !DILocation(line: 2595, column: 19, scope: !7059)
!7075 = !DILocation(line: 2595, column: 27, scope: !7059)
!7076 = !DILocation(line: 2595, column: 31, scope: !7059)
!7077 = !DILocation(line: 2594, column: 61, scope: !7059)
!7078 = !DILocation(line: 2593, column: 46, scope: !7054)
!7079 = !DILocation(line: 2593, column: 15, scope: !7054)
!7080 = distinct !{!7080, !7057, !7081}
!7081 = !DILocation(line: 2597, column: 44, scope: !7050)
!7082 = !DILocation(line: 2598, column: 15, scope: !6987)
!7083 = !DILocation(line: 2598, column: 18, scope: !6987)
!7084 = !DILocation(line: 2598, column: 25, scope: !6987)
!7085 = !DILocation(line: 2599, column: 13, scope: !6987)
!7086 = !DILocation(line: 2603, column: 20, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !6982, file: !63, line: 2601, column: 13)
!7088 = !DILocation(line: 2603, column: 18, scope: !7087)
!7089 = !DILocation(line: 2603, column: 35, scope: !7087)
!7090 = !DILocation(line: 2603, column: 33, scope: !7087)
!7091 = !DILocation(line: 2603, column: 48, scope: !7087)
!7092 = !DILocation(line: 2603, column: 51, scope: !7087)
!7093 = !DILocation(line: 2603, column: 46, scope: !7087)
!7094 = !DILocation(line: 2603, column: 59, scope: !7087)
!7095 = !DILocation(line: 2603, column: 62, scope: !7087)
!7096 = !DILocation(line: 2603, column: 69, scope: !7087)
!7097 = !DILocation(line: 2604, column: 20, scope: !7087)
!7098 = !DILocation(line: 2604, column: 18, scope: !7087)
!7099 = !DILocation(line: 2604, column: 35, scope: !7087)
!7100 = !DILocation(line: 2604, column: 33, scope: !7087)
!7101 = !DILocation(line: 2604, column: 48, scope: !7087)
!7102 = !DILocation(line: 2604, column: 51, scope: !7087)
!7103 = !DILocation(line: 2604, column: 46, scope: !7087)
!7104 = !DILocation(line: 2604, column: 59, scope: !7087)
!7105 = !DILocation(line: 2604, column: 62, scope: !7087)
!7106 = !DILocation(line: 2604, column: 69, scope: !7087)
!7107 = !DILocation(line: 2607, column: 15, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6965, file: !63, line: 2607, column: 15)
!7109 = !DILocation(line: 2607, column: 20, scope: !7108)
!7110 = !DILocation(line: 2607, column: 15, scope: !6965)
!7111 = !DILocation(line: 2608, column: 32, scope: !7108)
!7112 = !DILocation(line: 2608, column: 36, scope: !7108)
!7113 = !DILocation(line: 2608, column: 20, scope: !7108)
!7114 = !DILocation(line: 2608, column: 18, scope: !7108)
!7115 = !DILocation(line: 2608, column: 13, scope: !7108)
!7116 = !DILocation(line: 2609, column: 20, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7108, file: !63, line: 2609, column: 20)
!7118 = !DILocation(line: 2609, column: 25, scope: !7117)
!7119 = !DILocation(line: 2609, column: 20, scope: !7108)
!7120 = !DILocation(line: 2610, column: 40, scope: !7117)
!7121 = !DILocation(line: 2610, column: 44, scope: !7117)
!7122 = !DILocation(line: 2610, column: 20, scope: !7117)
!7123 = !DILocation(line: 2610, column: 18, scope: !7117)
!7124 = !DILocation(line: 2610, column: 13, scope: !7117)
!7125 = !DILocation(line: 2611, column: 20, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7117, file: !63, line: 2611, column: 20)
!7127 = !DILocation(line: 2611, column: 25, scope: !7126)
!7128 = !DILocation(line: 2611, column: 20, scope: !7117)
!7129 = !DILocation(line: 2612, column: 38, scope: !7126)
!7130 = !DILocation(line: 2612, column: 42, scope: !7126)
!7131 = !DILocation(line: 2612, column: 20, scope: !7126)
!7132 = !DILocation(line: 2612, column: 18, scope: !7126)
!7133 = !DILocation(line: 2612, column: 13, scope: !7126)
!7134 = !DILocation(line: 2613, column: 20, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7126, file: !63, line: 2613, column: 20)
!7136 = !DILocation(line: 2613, column: 25, scope: !7135)
!7137 = !DILocation(line: 2613, column: 20, scope: !7126)
!7138 = !DILocation(line: 2614, column: 30, scope: !7135)
!7139 = !DILocation(line: 2614, column: 20, scope: !7135)
!7140 = !DILocation(line: 2614, column: 52, scope: !7135)
!7141 = !DILocation(line: 2614, column: 42, scope: !7135)
!7142 = !DILocation(line: 2614, column: 40, scope: !7135)
!7143 = !DILocation(line: 2614, column: 18, scope: !7135)
!7144 = !DILocation(line: 2614, column: 13, scope: !7135)
!7145 = !DILocation(line: 2615, column: 20, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7135, file: !63, line: 2615, column: 20)
!7147 = !DILocation(line: 2615, column: 25, scope: !7146)
!7148 = !DILocation(line: 2615, column: 20, scope: !7135)
!7149 = !DILocation(line: 2616, column: 36, scope: !7146)
!7150 = !DILocation(line: 2616, column: 40, scope: !7146)
!7151 = !DILocation(line: 2616, column: 47, scope: !7146)
!7152 = !DILocation(line: 2616, column: 51, scope: !7146)
!7153 = !DILocation(line: 2616, column: 20, scope: !7146)
!7154 = !DILocation(line: 2616, column: 18, scope: !7146)
!7155 = !DILocation(line: 2616, column: 13, scope: !7146)
!7156 = !DILocation(line: 2617, column: 20, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7146, file: !63, line: 2617, column: 20)
!7158 = !DILocation(line: 2617, column: 25, scope: !7157)
!7159 = !DILocation(line: 2617, column: 20, scope: !7146)
!7160 = !DILocation(line: 2618, column: 32, scope: !7157)
!7161 = !DILocation(line: 2618, column: 36, scope: !7157)
!7162 = !DILocation(line: 2618, column: 20, scope: !7157)
!7163 = !DILocation(line: 2618, column: 18, scope: !7157)
!7164 = !DILocation(line: 2618, column: 13, scope: !7157)
!7165 = !DILocation(line: 2623, column: 19, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !63, line: 2623, column: 19)
!7167 = distinct !DILexicalBlock(scope: !7157, file: !63, line: 2620, column: 13)
!7168 = !DILocation(line: 2623, column: 25, scope: !7166)
!7169 = !DILocation(line: 2623, column: 19, scope: !7167)
!7170 = !DILocation(line: 2624, column: 26, scope: !7166)
!7171 = !DILocation(line: 2624, column: 24, scope: !7166)
!7172 = !DILocation(line: 2624, column: 22, scope: !7166)
!7173 = !DILocation(line: 2624, column: 17, scope: !7166)
!7174 = !DILocation(line: 2625, column: 24, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7166, file: !63, line: 2625, column: 24)
!7176 = !DILocation(line: 2625, column: 30, scope: !7175)
!7177 = !DILocation(line: 2625, column: 24, scope: !7166)
!7178 = !DILocation(line: 2626, column: 22, scope: !7175)
!7179 = !DILocation(line: 2626, column: 17, scope: !7175)
!7180 = !DILocation(line: 2628, column: 35, scope: !7175)
!7181 = !DILocation(line: 2628, column: 39, scope: !7175)
!7182 = !DILocation(line: 2628, column: 45, scope: !7175)
!7183 = !DILocation(line: 2628, column: 50, scope: !7175)
!7184 = !DILocation(line: 2628, column: 54, scope: !7175)
!7185 = !DILocation(line: 2628, column: 60, scope: !7175)
!7186 = !DILocation(line: 2628, column: 24, scope: !7175)
!7187 = !DILocation(line: 2628, column: 22, scope: !7175)
!7188 = !DILocation(line: 2631, column: 15, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !6965, file: !63, line: 2631, column: 15)
!7190 = !DILocation(line: 2631, column: 22, scope: !7189)
!7191 = !DILocation(line: 2631, column: 25, scope: !7189)
!7192 = !DILocation(line: 2631, column: 15, scope: !6965)
!7193 = !DILocation(line: 2632, column: 19, scope: !7189)
!7194 = !DILocation(line: 2632, column: 13, scope: !7189)
!7195 = !DILocation(line: 2635, column: 27, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7189, file: !63, line: 2634, column: 13)
!7197 = !DILocation(line: 2635, column: 15, scope: !7196)
!7198 = !DILocation(line: 2635, column: 18, scope: !7196)
!7199 = !DILocation(line: 2635, column: 25, scope: !7196)
!7200 = !DILocation(line: 2636, column: 27, scope: !7196)
!7201 = !DILocation(line: 2636, column: 15, scope: !7196)
!7202 = !DILocation(line: 2636, column: 18, scope: !7196)
!7203 = !DILocation(line: 2636, column: 25, scope: !7196)
!7204 = !DILocation(line: 2638, column: 9, scope: !6965)
!7205 = !DILocation(line: 2639, column: 16, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !6950, file: !63, line: 2639, column: 16)
!7207 = !DILocation(line: 2639, column: 16, scope: !6950)
!7208 = !DILocation(line: 2663, column: 15, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !63, line: 2663, column: 15)
!7210 = distinct !DILexicalBlock(scope: !7206, file: !63, line: 2640, column: 9)
!7211 = !DILocation(line: 2663, column: 15, scope: !7210)
!7212 = !DILocation(line: 2664, column: 13, scope: !7209)
!7213 = !DILocation(line: 2664, column: 13, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7209, file: !63, line: 2664, column: 13)
!7215 = !DILocation(line: 2664, column: 13, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7214, file: !63, line: 2664, column: 13)
!7217 = !DILocation(line: 0, scope: !7216)
!7218 = distinct !{!7218, !7215, !7215}
!7219 = distinct !{!7219, !7215, !7215}
!7220 = !DILocation(line: 2664, column: 13, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7216, file: !63, line: 2664, column: 13)
!7222 = !DILocation(line: 2664, column: 13, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7216, file: !63, line: 2664, column: 13)
!7224 = distinct !{!7224, !7213, !7213}
!7225 = !DILocation(line: 2667, column: 13, scope: !7209)
!7226 = !DILocation(line: 2667, column: 13, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7209, file: !63, line: 2667, column: 13)
!7228 = !DILocation(line: 2667, column: 13, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7227, file: !63, line: 2667, column: 13)
!7230 = !DILocation(line: 0, scope: !7229)
!7231 = distinct !{!7231, !7228, !7228}
!7232 = distinct !{!7232, !7228, !7228}
!7233 = !DILocation(line: 2667, column: 13, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7229, file: !63, line: 2667, column: 13)
!7235 = !DILocation(line: 2667, column: 13, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7229, file: !63, line: 2667, column: 13)
!7237 = distinct !{!7237, !7226, !7226}
!7238 = !DILocation(line: 2668, column: 9, scope: !7210)
!7239 = !DILocation(line: 2669, column: 16, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7206, file: !63, line: 2669, column: 16)
!7241 = !DILocation(line: 2669, column: 21, scope: !7240)
!7242 = !DILocation(line: 2669, column: 16, scope: !7206)
!7243 = !DILocation(line: 2670, column: 18, scope: !7240)
!7244 = !DILocation(line: 2670, column: 16, scope: !7240)
!7245 = !DILocation(line: 2670, column: 14, scope: !7240)
!7246 = !DILocation(line: 2670, column: 9, scope: !7240)
!7247 = !DILocation(line: 2671, column: 16, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7240, file: !63, line: 2671, column: 16)
!7249 = !DILocation(line: 2671, column: 21, scope: !7248)
!7250 = !DILocation(line: 2671, column: 16, scope: !7240)
!7251 = !DILocation(line: 2672, column: 9, scope: !7248)
!7252 = !DILocation(line: 2675, column: 15, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !63, line: 2675, column: 15)
!7254 = distinct !DILexicalBlock(scope: !7248, file: !63, line: 2674, column: 9)
!7255 = !DILocation(line: 2675, column: 15, scope: !7254)
!7256 = !DILocation(line: 2677, column: 15, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !63, line: 2676, column: 13)
!7258 = !DILocation(line: 2677, column: 22, scope: !7257)
!7259 = !DILocation(line: 2677, column: 30, scope: !7257)
!7260 = !DILocation(line: 2677, column: 28, scope: !7257)
!7261 = !DILocation(line: 2677, column: 35, scope: !7257)
!7262 = !DILocation(line: 2677, column: 38, scope: !7257)
!7263 = !DILocation(line: 2677, column: 46, scope: !7257)
!7264 = !DILocation(line: 2677, column: 44, scope: !7257)
!7265 = !DILocation(line: 0, scope: !7257)
!7266 = !DILocation(line: 2679, column: 37, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7257, file: !63, line: 2678, column: 17)
!7268 = !DILocation(line: 2679, column: 63, scope: !7267)
!7269 = !DILocation(line: 2679, column: 57, scope: !7267)
!7270 = !DILocation(line: 2679, column: 47, scope: !7267)
!7271 = !DILocation(line: 2679, column: 27, scope: !7267)
!7272 = !DILocation(line: 2680, column: 39, scope: !7267)
!7273 = !DILocation(line: 2680, column: 65, scope: !7267)
!7274 = !DILocation(line: 2680, column: 59, scope: !7267)
!7275 = !DILocation(line: 2680, column: 49, scope: !7267)
!7276 = !DILocation(line: 2680, column: 29, scope: !7267)
!7277 = !DILocation(line: 2680, column: 27, scope: !7267)
!7278 = !DILocation(line: 2679, column: 24, scope: !7267)
!7279 = !DILocation(line: 2681, column: 23, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7267, file: !63, line: 2681, column: 23)
!7281 = !DILocation(line: 2681, column: 23, scope: !7267)
!7282 = !DILocation(line: 2682, column: 21, scope: !7280)
!7283 = distinct !{!7283, !7256, !7284}
!7284 = !DILocation(line: 2683, column: 17, scope: !7257)
!7285 = !DILocation(line: 2684, column: 13, scope: !7257)
!7286 = !DILocation(line: 2687, column: 30, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7253, file: !63, line: 2686, column: 13)
!7288 = !DILocation(line: 2687, column: 37, scope: !7287)
!7289 = !DILocation(line: 2687, column: 44, scope: !7287)
!7290 = !DILocation(line: 2687, column: 22, scope: !7287)
!7291 = !DILocation(line: 2687, column: 20, scope: !7287)
!7292 = !DILocation(line: 2688, column: 19, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7287, file: !63, line: 2688, column: 19)
!7294 = !DILocation(line: 2688, column: 19, scope: !7287)
!7295 = !DILocation(line: 2689, column: 17, scope: !7293)
!7296 = !DILocation(line: 2691, column: 18, scope: !7254)
!7297 = !DILocation(line: 2691, column: 25, scope: !7254)
!7298 = !DILocation(line: 2691, column: 23, scope: !7254)
!7299 = !DILocation(line: 2691, column: 37, scope: !7254)
!7300 = !DILocation(line: 2691, column: 45, scope: !7254)
!7301 = !DILocation(line: 2691, column: 42, scope: !7254)
!7302 = !DILocation(line: 2691, column: 16, scope: !7254)
!7303 = !DILocation(line: 2694, column: 11, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !6927, file: !63, line: 2694, column: 11)
!7305 = !DILocation(line: 2694, column: 11, scope: !6927)
!7306 = !DILocation(line: 2695, column: 9, scope: !7304)
!7307 = !DILocation(line: 2697, column: 13, scope: !6927)
!7308 = !DILocation(line: 2697, column: 18, scope: !6927)
!7309 = !DILocation(line: 2697, column: 11, scope: !6927)
!7310 = !DILocation(line: 2698, column: 13, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !6927, file: !63, line: 2698, column: 11)
!7312 = !DILocation(line: 2698, column: 11, scope: !6927)
!7313 = !DILocation(line: 2699, column: 9, scope: !7311)
!7314 = !DILocation(line: 2702, column: 11, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !6927, file: !63, line: 2702, column: 11)
!7316 = !DILocation(line: 2702, column: 16, scope: !7315)
!7317 = !DILocation(line: 2702, column: 22, scope: !7315)
!7318 = !DILocation(line: 2702, column: 11, scope: !6927)
!7319 = !DILocation(line: 2703, column: 26, scope: !7315)
!7320 = !DILocation(line: 2703, column: 29, scope: !7315)
!7321 = !DILocation(line: 2703, column: 16, scope: !7315)
!7322 = !DILocation(line: 2703, column: 14, scope: !7315)
!7323 = !DILocation(line: 2703, column: 52, scope: !7315)
!7324 = !DILocation(line: 2703, column: 55, scope: !7315)
!7325 = !DILocation(line: 2703, column: 42, scope: !7315)
!7326 = !DILocation(line: 2703, column: 40, scope: !7315)
!7327 = !DILocation(line: 2703, column: 9, scope: !7315)
!7328 = !DILocation(line: 2705, column: 16, scope: !7315)
!7329 = !DILocation(line: 2705, column: 19, scope: !7315)
!7330 = !DILocation(line: 2705, column: 26, scope: !7315)
!7331 = !DILocation(line: 2705, column: 29, scope: !7315)
!7332 = !DILocation(line: 2705, column: 24, scope: !7315)
!7333 = !DILocation(line: 2705, column: 36, scope: !7315)
!7334 = !DILocation(line: 2705, column: 14, scope: !7315)
!7335 = !DILocation(line: 2705, column: 48, scope: !7315)
!7336 = !DILocation(line: 2705, column: 51, scope: !7315)
!7337 = !DILocation(line: 2705, column: 58, scope: !7315)
!7338 = !DILocation(line: 2705, column: 61, scope: !7315)
!7339 = !DILocation(line: 2705, column: 56, scope: !7315)
!7340 = !DILocation(line: 2705, column: 68, scope: !7315)
!7341 = !DILocation(line: 2705, column: 46, scope: !7315)
!7342 = !DILocation(line: 2707, column: 11, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !6927, file: !63, line: 2707, column: 11)
!7344 = !DILocation(line: 2707, column: 16, scope: !7343)
!7345 = !DILocation(line: 2707, column: 22, scope: !7343)
!7346 = !DILocation(line: 2707, column: 11, scope: !6927)
!7347 = !DILocation(line: 2708, column: 27, scope: !7343)
!7348 = !DILocation(line: 2708, column: 30, scope: !7343)
!7349 = !DILocation(line: 2708, column: 17, scope: !7343)
!7350 = !DILocation(line: 2708, column: 15, scope: !7343)
!7351 = !DILocation(line: 2708, column: 54, scope: !7343)
!7352 = !DILocation(line: 2708, column: 57, scope: !7343)
!7353 = !DILocation(line: 2708, column: 44, scope: !7343)
!7354 = !DILocation(line: 2708, column: 42, scope: !7343)
!7355 = !DILocation(line: 2708, column: 9, scope: !7343)
!7356 = !DILocation(line: 2711, column: 19, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7343, file: !63, line: 2710, column: 9)
!7358 = !DILocation(line: 2711, column: 22, scope: !7357)
!7359 = !DILocation(line: 2711, column: 17, scope: !7357)
!7360 = !DILocation(line: 2711, column: 36, scope: !7357)
!7361 = !DILocation(line: 2711, column: 39, scope: !7357)
!7362 = !DILocation(line: 2711, column: 34, scope: !7357)
!7363 = !DILocation(line: 2712, column: 15, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7357, file: !63, line: 2712, column: 15)
!7365 = !DILocation(line: 2712, column: 20, scope: !7364)
!7366 = !DILocation(line: 2712, column: 15, scope: !7357)
!7367 = !DILocation(line: 2714, column: 15, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7364, file: !63, line: 2713, column: 13)
!7369 = !DILocation(line: 2714, column: 22, scope: !7368)
!7370 = !DILocation(line: 2714, column: 30, scope: !7368)
!7371 = !DILocation(line: 2714, column: 28, scope: !7368)
!7372 = !DILocation(line: 2714, column: 35, scope: !7368)
!7373 = !DILocation(line: 2714, column: 56, scope: !7368)
!7374 = !DILocation(line: 2714, column: 55, scope: !7368)
!7375 = !DILocation(line: 2714, column: 45, scope: !7368)
!7376 = !DILocation(line: 2714, column: 38, scope: !7368)
!7377 = !DILocation(line: 0, scope: !7368)
!7378 = !DILocation(line: 2715, column: 17, scope: !7368)
!7379 = distinct !{!7379, !7367, !7380}
!7380 = !DILocation(line: 2715, column: 19, scope: !7368)
!7381 = !DILocation(line: 2716, column: 15, scope: !7368)
!7382 = !DILocation(line: 2716, column: 22, scope: !7368)
!7383 = !DILocation(line: 2716, column: 30, scope: !7368)
!7384 = !DILocation(line: 2716, column: 28, scope: !7368)
!7385 = !DILocation(line: 2716, column: 35, scope: !7368)
!7386 = !DILocation(line: 2716, column: 56, scope: !7368)
!7387 = !DILocation(line: 2716, column: 55, scope: !7368)
!7388 = !DILocation(line: 2716, column: 45, scope: !7368)
!7389 = !DILocation(line: 2716, column: 38, scope: !7368)
!7390 = !DILocation(line: 2717, column: 17, scope: !7368)
!7391 = distinct !{!7391, !7381, !7392}
!7392 = !DILocation(line: 2717, column: 19, scope: !7368)
!7393 = !DILocation(line: 2718, column: 13, scope: !7368)
!7394 = distinct !{!7394, !6925, !7395}
!7395 = !DILocation(line: 2720, column: 5, scope: !6899)
!7396 = !DILocation(line: 2722, column: 3, scope: !6899)
!7397 = !DILabel(scope: !6899, name: "greater", file: !63, line: 2724)
!7398 = !DILocation(line: 2724, column: 2, scope: !6899)
!7399 = !DILocation(line: 2725, column: 8, scope: !6899)
!7400 = !DILocation(line: 2725, column: 3, scope: !6899)
!7401 = !DILabel(scope: !6899, name: "not_equal", file: !63, line: 2726)
!7402 = !DILocation(line: 2726, column: 2, scope: !6899)
!7403 = !DILocation(line: 2727, column: 10, scope: !6899)
!7404 = !DILocation(line: 2727, column: 15, scope: !6899)
!7405 = !DILocation(line: 2727, column: 26, scope: !6899)
!7406 = !DILocation(line: 2727, column: 25, scope: !6899)
!7407 = !DILocation(line: 2727, column: 33, scope: !6899)
!7408 = !DILocation(line: 2727, column: 3, scope: !6899)
!7409 = !DILocation(line: 2728, column: 1, scope: !6899)
!7410 = distinct !DISubprogram(name: "numcompare", scope: !63, file: !63, line: 1989, type: !474, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7411 = !DILocalVariable(name: "a", arg: 1, scope: !7410, file: !63, line: 1989, type: !87)
!7412 = !DILocation(line: 1989, column: 25, scope: !7410)
!7413 = !DILocalVariable(name: "b", arg: 2, scope: !7410, file: !63, line: 1989, type: !87)
!7414 = !DILocation(line: 1989, column: 40, scope: !7410)
!7415 = !DILocation(line: 1991, column: 3, scope: !7410)
!7416 = !DILocation(line: 1991, column: 28, scope: !7410)
!7417 = !DILocation(line: 1991, column: 27, scope: !7410)
!7418 = !DILocation(line: 1991, column: 17, scope: !7410)
!7419 = !DILocation(line: 1991, column: 10, scope: !7410)
!7420 = !DILocation(line: 1992, column: 6, scope: !7410)
!7421 = distinct !{!7421, !7415, !7420}
!7422 = !DILocation(line: 1993, column: 3, scope: !7410)
!7423 = !DILocation(line: 1993, column: 28, scope: !7410)
!7424 = !DILocation(line: 1993, column: 27, scope: !7410)
!7425 = !DILocation(line: 1993, column: 17, scope: !7410)
!7426 = !DILocation(line: 1993, column: 10, scope: !7410)
!7427 = !DILocation(line: 1994, column: 6, scope: !7410)
!7428 = distinct !{!7428, !7422, !7427}
!7429 = !DILocation(line: 1996, column: 21, scope: !7410)
!7430 = !DILocation(line: 1996, column: 24, scope: !7410)
!7431 = !DILocation(line: 1996, column: 27, scope: !7410)
!7432 = !DILocation(line: 1996, column: 42, scope: !7410)
!7433 = !DILocation(line: 1996, column: 10, scope: !7410)
!7434 = !DILocation(line: 1996, column: 3, scope: !7410)
!7435 = distinct !DISubprogram(name: "general_numcompare", scope: !63, file: !63, line: 2018, type: !474, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7436 = !DILocalVariable(name: "sa", arg: 1, scope: !7435, file: !63, line: 2018, type: !87)
!7437 = !DILocation(line: 2018, column: 33, scope: !7435)
!7438 = !DILocalVariable(name: "sb", arg: 2, scope: !7435, file: !63, line: 2018, type: !87)
!7439 = !DILocation(line: 2018, column: 49, scope: !7435)
!7440 = !DILocalVariable(name: "ea", scope: !7435, file: !63, line: 2023, type: !7)
!7441 = !DILocation(line: 2023, column: 9, scope: !7435)
!7442 = !DILocalVariable(name: "eb", scope: !7435, file: !63, line: 2024, type: !7)
!7443 = !DILocation(line: 2024, column: 9, scope: !7435)
!7444 = !DILocalVariable(name: "a", scope: !7435, file: !63, line: 2025, type: !476)
!7445 = !DILocation(line: 2025, column: 15, scope: !7435)
!7446 = !DILocation(line: 2025, column: 28, scope: !7435)
!7447 = !DILocation(line: 2025, column: 19, scope: !7435)
!7448 = !DILocalVariable(name: "b", scope: !7435, file: !63, line: 2026, type: !476)
!7449 = !DILocation(line: 2026, column: 15, scope: !7435)
!7450 = !DILocation(line: 2026, column: 28, scope: !7435)
!7451 = !DILocation(line: 2026, column: 19, scope: !7435)
!7452 = !DILocation(line: 2029, column: 7, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7435, file: !63, line: 2029, column: 7)
!7454 = !DILocation(line: 2029, column: 13, scope: !7453)
!7455 = !DILocation(line: 2029, column: 10, scope: !7453)
!7456 = !DILocation(line: 2029, column: 7, scope: !7435)
!7457 = !DILocation(line: 2030, column: 12, scope: !7453)
!7458 = !DILocation(line: 2030, column: 18, scope: !7453)
!7459 = !DILocation(line: 2030, column: 15, scope: !7453)
!7460 = !DILocation(line: 2030, column: 5, scope: !7453)
!7461 = !DILocation(line: 2031, column: 7, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7435, file: !63, line: 2031, column: 7)
!7463 = !DILocation(line: 2031, column: 13, scope: !7462)
!7464 = !DILocation(line: 2031, column: 10, scope: !7462)
!7465 = !DILocation(line: 2031, column: 7, scope: !7435)
!7466 = !DILocation(line: 2032, column: 5, scope: !7462)
!7467 = !DILocation(line: 2037, column: 11, scope: !7435)
!7468 = !DILocation(line: 2037, column: 15, scope: !7435)
!7469 = !DILocation(line: 2037, column: 13, scope: !7435)
!7470 = !DILocation(line: 2038, column: 13, scope: !7435)
!7471 = !DILocation(line: 2038, column: 17, scope: !7435)
!7472 = !DILocation(line: 2038, column: 15, scope: !7435)
!7473 = !DILocation(line: 2039, column: 13, scope: !7435)
!7474 = !DILocation(line: 2039, column: 18, scope: !7435)
!7475 = !DILocation(line: 2039, column: 15, scope: !7435)
!7476 = !DILocation(line: 2040, column: 13, scope: !7435)
!7477 = !DILocation(line: 2040, column: 18, scope: !7435)
!7478 = !DILocation(line: 2040, column: 15, scope: !7435)
!7479 = !DILocation(line: 2041, column: 13, scope: !7435)
!7480 = !DILocation(line: 2041, column: 18, scope: !7435)
!7481 = !DILocation(line: 2041, column: 15, scope: !7435)
!7482 = !DILocation(line: 2042, column: 26, scope: !7435)
!7483 = !DILocation(line: 2042, column: 30, scope: !7435)
!7484 = !DILocation(line: 2042, column: 13, scope: !7435)
!7485 = !DILocation(line: 2037, column: 3, scope: !7435)
!7486 = !DILocation(line: 2043, column: 1, scope: !7435)
!7487 = distinct !DISubprogram(name: "human_numcompare", scope: !63, file: !63, line: 1973, type: !474, scopeLine: 1974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7488 = !DILocalVariable(name: "a", arg: 1, scope: !7487, file: !63, line: 1973, type: !87)
!7489 = !DILocation(line: 1973, column: 31, scope: !7487)
!7490 = !DILocalVariable(name: "b", arg: 2, scope: !7487, file: !63, line: 1973, type: !87)
!7491 = !DILocation(line: 1973, column: 46, scope: !7487)
!7492 = !DILocation(line: 1975, column: 3, scope: !7487)
!7493 = !DILocation(line: 1975, column: 28, scope: !7487)
!7494 = !DILocation(line: 1975, column: 27, scope: !7487)
!7495 = !DILocation(line: 1975, column: 17, scope: !7487)
!7496 = !DILocation(line: 1975, column: 10, scope: !7487)
!7497 = !DILocation(line: 1976, column: 6, scope: !7487)
!7498 = distinct !{!7498, !7492, !7497}
!7499 = !DILocation(line: 1977, column: 3, scope: !7487)
!7500 = !DILocation(line: 1977, column: 28, scope: !7487)
!7501 = !DILocation(line: 1977, column: 27, scope: !7487)
!7502 = !DILocation(line: 1977, column: 17, scope: !7487)
!7503 = !DILocation(line: 1977, column: 10, scope: !7487)
!7504 = !DILocation(line: 1978, column: 6, scope: !7487)
!7505 = distinct !{!7505, !7499, !7504}
!7506 = !DILocalVariable(name: "diff", scope: !7487, file: !63, line: 1980, type: !5)
!7507 = !DILocation(line: 1980, column: 7, scope: !7487)
!7508 = !DILocation(line: 1980, column: 31, scope: !7487)
!7509 = !DILocation(line: 1980, column: 14, scope: !7487)
!7510 = !DILocation(line: 1980, column: 53, scope: !7487)
!7511 = !DILocation(line: 1980, column: 36, scope: !7487)
!7512 = !DILocation(line: 1980, column: 34, scope: !7487)
!7513 = !DILocation(line: 1981, column: 11, scope: !7487)
!7514 = !DILocation(line: 1981, column: 18, scope: !7487)
!7515 = !DILocation(line: 1981, column: 36, scope: !7487)
!7516 = !DILocation(line: 1981, column: 39, scope: !7487)
!7517 = !DILocation(line: 1981, column: 42, scope: !7487)
!7518 = !DILocation(line: 1981, column: 57, scope: !7487)
!7519 = !DILocation(line: 1981, column: 25, scope: !7487)
!7520 = !DILocation(line: 1981, column: 3, scope: !7487)
!7521 = distinct !DISubprogram(name: "compare_random", scope: !63, file: !63, line: 2132, type: !484, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7522 = !DILocalVariable(name: "texta", arg: 1, scope: !7521, file: !63, line: 2132, type: !486)
!7523 = !DILocation(line: 2132, column: 32, scope: !7521)
!7524 = !DILocalVariable(name: "lena", arg: 2, scope: !7521, file: !63, line: 2132, type: !52)
!7525 = !DILocation(line: 2132, column: 46, scope: !7521)
!7526 = !DILocalVariable(name: "textb", arg: 3, scope: !7521, file: !63, line: 2133, type: !486)
!7527 = !DILocation(line: 2133, column: 32, scope: !7521)
!7528 = !DILocalVariable(name: "lenb", arg: 4, scope: !7521, file: !63, line: 2133, type: !52)
!7529 = !DILocation(line: 2133, column: 46, scope: !7521)
!7530 = !DILocalVariable(name: "xfrm_diff", scope: !7521, file: !63, line: 2139, type: !5)
!7531 = !DILocation(line: 2139, column: 7, scope: !7521)
!7532 = !DILocalVariable(name: "stackbuf", scope: !7521, file: !63, line: 2141, type: !471)
!7533 = !DILocation(line: 2141, column: 8, scope: !7521)
!7534 = !DILocalVariable(name: "buf", scope: !7521, file: !63, line: 2142, type: !7)
!7535 = !DILocation(line: 2142, column: 9, scope: !7521)
!7536 = !DILocation(line: 2142, column: 15, scope: !7521)
!7537 = !DILocalVariable(name: "bufsize", scope: !7521, file: !63, line: 2143, type: !52)
!7538 = !DILocation(line: 2143, column: 10, scope: !7521)
!7539 = !DILocalVariable(name: "allocated", scope: !7521, file: !63, line: 2144, type: !47)
!7540 = !DILocation(line: 2144, column: 9, scope: !7521)
!7541 = !DILocalVariable(name: "dig", scope: !7521, file: !63, line: 2145, type: !487)
!7542 = !DILocation(line: 2145, column: 12, scope: !7521)
!7543 = !DILocalVariable(name: "s", scope: !7521, file: !63, line: 2146, type: !490)
!7544 = !DILocation(line: 2146, column: 18, scope: !7521)
!7545 = !DILocation(line: 2147, column: 3, scope: !7521)
!7546 = !DILocation(line: 2147, column: 10, scope: !7521)
!7547 = !DILocation(line: 2147, column: 17, scope: !7521)
!7548 = !{i64 0, i64 4, !2342, i64 4, i64 4, !2342, i64 8, i64 4, !2342, i64 12, i64 4, !2342, i64 16, i64 8, !2507, i64 24, i64 4, !2342, i64 28, i64 128, !2507}
!7549 = !DILocation(line: 2147, column: 15, scope: !7521)
!7550 = !DILocation(line: 2149, column: 7, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7521, file: !63, line: 2149, column: 7)
!7552 = !DILocation(line: 2149, column: 7, scope: !7521)
!7553 = !DILocalVariable(name: "lima", scope: !7554, file: !63, line: 2151, type: !87)
!7554 = distinct !DILexicalBlock(scope: !7551, file: !63, line: 2150, column: 5)
!7555 = !DILocation(line: 2151, column: 19, scope: !7554)
!7556 = !DILocation(line: 2151, column: 26, scope: !7554)
!7557 = !DILocation(line: 2151, column: 34, scope: !7554)
!7558 = !DILocation(line: 2151, column: 32, scope: !7554)
!7559 = !DILocalVariable(name: "limb", scope: !7554, file: !63, line: 2152, type: !87)
!7560 = !DILocation(line: 2152, column: 19, scope: !7554)
!7561 = !DILocation(line: 2152, column: 26, scope: !7554)
!7562 = !DILocation(line: 2152, column: 34, scope: !7554)
!7563 = !DILocation(line: 2152, column: 32, scope: !7554)
!7564 = !DILocation(line: 2154, column: 7, scope: !7554)
!7565 = !DILocalVariable(name: "guess_bufsize", scope: !7566, file: !63, line: 2171, type: !52)
!7566 = distinct !DILexicalBlock(scope: !7554, file: !63, line: 2155, column: 9)
!7567 = !DILocation(line: 2171, column: 18, scope: !7566)
!7568 = !DILocation(line: 2171, column: 39, scope: !7566)
!7569 = !DILocation(line: 2171, column: 46, scope: !7566)
!7570 = !DILocation(line: 2171, column: 44, scope: !7566)
!7571 = !DILocation(line: 2171, column: 36, scope: !7566)
!7572 = !DILocation(line: 2171, column: 52, scope: !7566)
!7573 = !DILocation(line: 2172, column: 15, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7566, file: !63, line: 2172, column: 15)
!7575 = !DILocation(line: 2172, column: 25, scope: !7574)
!7576 = !DILocation(line: 2172, column: 23, scope: !7574)
!7577 = !DILocation(line: 2172, column: 15, scope: !7566)
!7578 = !DILocation(line: 2174, column: 25, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7574, file: !63, line: 2173, column: 13)
!7580 = !DILocation(line: 2174, column: 23, scope: !7579)
!7581 = !DILocation(line: 2175, column: 21, scope: !7579)
!7582 = !DILocation(line: 2175, column: 15, scope: !7579)
!7583 = !DILocation(line: 2176, column: 41, scope: !7579)
!7584 = !DILocation(line: 2176, column: 33, scope: !7579)
!7585 = !DILocation(line: 2176, column: 31, scope: !7579)
!7586 = !DILocation(line: 2176, column: 19, scope: !7579)
!7587 = !DILocation(line: 2177, column: 21, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7579, file: !63, line: 2177, column: 19)
!7589 = !DILocation(line: 2177, column: 19, scope: !7579)
!7590 = !DILocation(line: 2179, column: 25, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7588, file: !63, line: 2178, column: 17)
!7592 = !DILocation(line: 2179, column: 23, scope: !7591)
!7593 = !DILocation(line: 2180, column: 27, scope: !7591)
!7594 = !DILocation(line: 2181, column: 17, scope: !7591)
!7595 = !DILocation(line: 2182, column: 13, scope: !7579)
!7596 = !DILocalVariable(name: "sizea", scope: !7566, file: !63, line: 2184, type: !52)
!7597 = !DILocation(line: 2184, column: 18, scope: !7566)
!7598 = !DILocation(line: 2185, column: 14, scope: !7566)
!7599 = !DILocation(line: 2185, column: 22, scope: !7566)
!7600 = !DILocation(line: 2185, column: 20, scope: !7566)
!7601 = !DILocation(line: 2185, column: 39, scope: !7566)
!7602 = !DILocation(line: 2185, column: 44, scope: !7566)
!7603 = !DILocation(line: 2185, column: 51, scope: !7566)
!7604 = !DILocation(line: 2185, column: 29, scope: !7566)
!7605 = !DILocation(line: 2185, column: 60, scope: !7566)
!7606 = !DILocalVariable(name: "a_fits", scope: !7566, file: !63, line: 2186, type: !102)
!7607 = !DILocation(line: 2186, column: 16, scope: !7566)
!7608 = !DILocation(line: 2186, column: 25, scope: !7566)
!7609 = !DILocation(line: 2186, column: 34, scope: !7566)
!7610 = !DILocation(line: 2186, column: 31, scope: !7566)
!7611 = !DILocalVariable(name: "sizeb", scope: !7566, file: !63, line: 2187, type: !52)
!7612 = !DILocation(line: 2187, column: 18, scope: !7566)
!7613 = !DILocation(line: 2188, column: 14, scope: !7566)
!7614 = !DILocation(line: 2188, column: 22, scope: !7566)
!7615 = !DILocation(line: 2188, column: 20, scope: !7566)
!7616 = !DILocation(line: 2189, column: 28, scope: !7566)
!7617 = !DILocation(line: 2189, column: 37, scope: !7566)
!7618 = !DILocation(line: 2189, column: 43, scope: !7566)
!7619 = !DILocation(line: 2189, column: 41, scope: !7566)
!7620 = !DILocation(line: 2189, column: 58, scope: !7566)
!7621 = !DILocation(line: 2190, column: 28, scope: !7566)
!7622 = !DILocation(line: 2190, column: 37, scope: !7566)
!7623 = !DILocation(line: 2190, column: 47, scope: !7566)
!7624 = !DILocation(line: 2190, column: 45, scope: !7566)
!7625 = !DILocation(line: 2189, column: 17, scope: !7566)
!7626 = !DILocation(line: 2191, column: 17, scope: !7566)
!7627 = !DILocation(line: 2194, column: 18, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7566, file: !63, line: 2194, column: 15)
!7629 = !DILocation(line: 2194, column: 25, scope: !7628)
!7630 = !DILocation(line: 2194, column: 28, scope: !7628)
!7631 = !DILocation(line: 2194, column: 36, scope: !7628)
!7632 = !DILocation(line: 2194, column: 34, scope: !7628)
!7633 = !DILocation(line: 2194, column: 45, scope: !7628)
!7634 = !DILocation(line: 2194, column: 42, scope: !7628)
!7635 = !DILocation(line: 2194, column: 15, scope: !7566)
!7636 = !DILocation(line: 2196, column: 25, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7628, file: !63, line: 2195, column: 13)
!7638 = !DILocation(line: 2196, column: 33, scope: !7637)
!7639 = !DILocation(line: 2196, column: 31, scope: !7637)
!7640 = !DILocation(line: 2196, column: 23, scope: !7637)
!7641 = !DILocation(line: 2197, column: 19, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7637, file: !63, line: 2197, column: 19)
!7643 = !DILocation(line: 2197, column: 27, scope: !7642)
!7644 = !DILocation(line: 2197, column: 19, scope: !7637)
!7645 = !DILocation(line: 2198, column: 27, scope: !7642)
!7646 = !DILocation(line: 2198, column: 35, scope: !7642)
!7647 = !DILocation(line: 2198, column: 39, scope: !7642)
!7648 = !DILocation(line: 2198, column: 25, scope: !7642)
!7649 = !DILocation(line: 2198, column: 17, scope: !7642)
!7650 = !DILocation(line: 2199, column: 21, scope: !7637)
!7651 = !DILocation(line: 2199, column: 15, scope: !7637)
!7652 = !DILocation(line: 2200, column: 42, scope: !7637)
!7653 = !DILocation(line: 2200, column: 33, scope: !7637)
!7654 = !DILocation(line: 2200, column: 31, scope: !7637)
!7655 = !DILocation(line: 2200, column: 19, scope: !7637)
!7656 = !DILocation(line: 2201, column: 19, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7637, file: !63, line: 2201, column: 19)
!7658 = !DILocation(line: 2201, column: 27, scope: !7657)
!7659 = !DILocation(line: 2201, column: 25, scope: !7657)
!7660 = !DILocation(line: 2201, column: 19, scope: !7637)
!7661 = !DILocation(line: 2202, column: 26, scope: !7657)
!7662 = !DILocation(line: 2202, column: 31, scope: !7657)
!7663 = !DILocation(line: 2202, column: 38, scope: !7657)
!7664 = !DILocation(line: 2202, column: 17, scope: !7657)
!7665 = !DILocation(line: 2203, column: 19, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7637, file: !63, line: 2203, column: 19)
!7667 = !DILocation(line: 2203, column: 27, scope: !7666)
!7668 = !DILocation(line: 2203, column: 25, scope: !7666)
!7669 = !DILocation(line: 2203, column: 19, scope: !7637)
!7670 = !DILocation(line: 2204, column: 26, scope: !7666)
!7671 = !DILocation(line: 2204, column: 32, scope: !7666)
!7672 = !DILocation(line: 2204, column: 30, scope: !7666)
!7673 = !DILocation(line: 2204, column: 39, scope: !7666)
!7674 = !DILocation(line: 2204, column: 46, scope: !7666)
!7675 = !DILocation(line: 2204, column: 17, scope: !7666)
!7676 = !DILocation(line: 2205, column: 13, scope: !7637)
!7677 = !DILocation(line: 2211, column: 15, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7566, file: !63, line: 2211, column: 15)
!7679 = !DILocation(line: 2211, column: 23, scope: !7678)
!7680 = !DILocation(line: 2211, column: 21, scope: !7678)
!7681 = !DILocation(line: 2211, column: 15, scope: !7566)
!7682 = !DILocation(line: 2212, column: 30, scope: !7678)
!7683 = !DILocation(line: 2212, column: 22, scope: !7678)
!7684 = !DILocation(line: 2212, column: 37, scope: !7678)
!7685 = !DILocation(line: 2212, column: 19, scope: !7678)
!7686 = !DILocation(line: 2212, column: 13, scope: !7678)
!7687 = !DILocation(line: 2213, column: 15, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7566, file: !63, line: 2213, column: 15)
!7689 = !DILocation(line: 2213, column: 23, scope: !7688)
!7690 = !DILocation(line: 2213, column: 21, scope: !7688)
!7691 = !DILocation(line: 2213, column: 15, scope: !7566)
!7692 = !DILocation(line: 2214, column: 30, scope: !7688)
!7693 = !DILocation(line: 2214, column: 22, scope: !7688)
!7694 = !DILocation(line: 2214, column: 37, scope: !7688)
!7695 = !DILocation(line: 2214, column: 19, scope: !7688)
!7696 = !DILocation(line: 2214, column: 13, scope: !7688)
!7697 = !DILocation(line: 2215, column: 18, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7566, file: !63, line: 2215, column: 15)
!7699 = !DILocation(line: 2215, column: 26, scope: !7698)
!7700 = !DILocation(line: 2215, column: 24, scope: !7698)
!7701 = !DILocation(line: 2215, column: 31, scope: !7698)
!7702 = !DILocation(line: 2215, column: 34, scope: !7698)
!7703 = !DILocation(line: 2215, column: 42, scope: !7698)
!7704 = !DILocation(line: 2215, column: 40, scope: !7698)
!7705 = !DILocation(line: 2215, column: 15, scope: !7566)
!7706 = !DILocation(line: 2217, column: 22, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7698, file: !63, line: 2216, column: 13)
!7708 = !DILocation(line: 2217, column: 20, scope: !7707)
!7709 = !DILocation(line: 2217, column: 37, scope: !7707)
!7710 = !DILocation(line: 2217, column: 35, scope: !7707)
!7711 = !DILocation(line: 2218, column: 22, scope: !7707)
!7712 = !DILocation(line: 2218, column: 20, scope: !7707)
!7713 = !DILocation(line: 2218, column: 37, scope: !7707)
!7714 = !DILocation(line: 2218, column: 43, scope: !7707)
!7715 = !DILocation(line: 2218, column: 41, scope: !7707)
!7716 = !DILocation(line: 2218, column: 35, scope: !7707)
!7717 = !DILocation(line: 2219, column: 15, scope: !7707)
!7718 = !DILocation(line: 2224, column: 30, scope: !7566)
!7719 = !DILocation(line: 2224, column: 35, scope: !7566)
!7720 = !DILocation(line: 2224, column: 43, scope: !7566)
!7721 = !DILocation(line: 2224, column: 11, scope: !7566)
!7722 = !DILocation(line: 2225, column: 30, scope: !7566)
!7723 = !DILocation(line: 2225, column: 36, scope: !7566)
!7724 = !DILocation(line: 2225, column: 34, scope: !7566)
!7725 = !DILocation(line: 2225, column: 43, scope: !7566)
!7726 = !DILocation(line: 2225, column: 51, scope: !7566)
!7727 = !DILocation(line: 2225, column: 11, scope: !7566)
!7728 = !DILocation(line: 2228, column: 17, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7566, file: !63, line: 2228, column: 15)
!7730 = !DILocation(line: 2228, column: 15, scope: !7566)
!7731 = !DILocation(line: 2230, column: 35, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7729, file: !63, line: 2229, column: 13)
!7733 = !DILocation(line: 2230, column: 40, scope: !7732)
!7734 = !DILocation(line: 2230, column: 46, scope: !7732)
!7735 = !DILocation(line: 2230, column: 44, scope: !7732)
!7736 = !DILocation(line: 2230, column: 53, scope: !7732)
!7737 = !DILocation(line: 2230, column: 27, scope: !7732)
!7738 = !DILocation(line: 2230, column: 25, scope: !7732)
!7739 = !DILocation(line: 2231, column: 21, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7732, file: !63, line: 2231, column: 19)
!7741 = !DILocation(line: 2231, column: 19, scope: !7732)
!7742 = !DILocation(line: 2232, column: 30, scope: !7740)
!7743 = !DILocation(line: 2232, column: 38, scope: !7740)
!7744 = !DILocation(line: 2232, column: 36, scope: !7740)
!7745 = !DILocation(line: 2232, column: 48, scope: !7740)
!7746 = !DILocation(line: 2232, column: 56, scope: !7740)
!7747 = !DILocation(line: 2232, column: 54, scope: !7740)
!7748 = !DILocation(line: 2232, column: 45, scope: !7740)
!7749 = !DILocation(line: 2232, column: 27, scope: !7740)
!7750 = !DILocation(line: 2232, column: 17, scope: !7740)
!7751 = !DILocation(line: 2233, column: 13, scope: !7732)
!7752 = distinct !{!7752, !7564, !7753}
!7753 = !DILocation(line: 2234, column: 9, scope: !7554)
!7754 = !DILocation(line: 2235, column: 5, scope: !7554)
!7755 = !DILocation(line: 2238, column: 22, scope: !7521)
!7756 = !DILocation(line: 2238, column: 29, scope: !7521)
!7757 = !DILocation(line: 2238, column: 36, scope: !7521)
!7758 = !DILocation(line: 2238, column: 3, scope: !7521)
!7759 = !DILocation(line: 2238, column: 60, scope: !7521)
!7760 = !DILocation(line: 2238, column: 66, scope: !7521)
!7761 = !DILocation(line: 2238, column: 43, scope: !7521)
!7762 = !DILocation(line: 2239, column: 22, scope: !7521)
!7763 = !DILocation(line: 2239, column: 29, scope: !7521)
!7764 = !DILocation(line: 2239, column: 36, scope: !7521)
!7765 = !DILocation(line: 2239, column: 3, scope: !7521)
!7766 = !DILocation(line: 2239, column: 60, scope: !7521)
!7767 = !DILocation(line: 2239, column: 66, scope: !7521)
!7768 = !DILocation(line: 2239, column: 43, scope: !7521)
!7769 = !DILocalVariable(name: "diff", scope: !7521, file: !63, line: 2240, type: !5)
!7770 = !DILocation(line: 2240, column: 7, scope: !7521)
!7771 = !DILocation(line: 2240, column: 22, scope: !7521)
!7772 = !DILocation(line: 2240, column: 30, scope: !7521)
!7773 = !DILocation(line: 2240, column: 14, scope: !7521)
!7774 = !DILocation(line: 2243, column: 9, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7521, file: !63, line: 2243, column: 7)
!7776 = !DILocation(line: 2243, column: 7, scope: !7521)
!7777 = !DILocation(line: 2245, column: 13, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !63, line: 2245, column: 11)
!7779 = distinct !DILexicalBlock(scope: !7775, file: !63, line: 2244, column: 5)
!7780 = !DILocation(line: 2245, column: 11, scope: !7779)
!7781 = !DILocation(line: 2247, column: 31, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7778, file: !63, line: 2246, column: 9)
!7783 = !DILocation(line: 2247, column: 38, scope: !7782)
!7784 = !DILocation(line: 2247, column: 45, scope: !7782)
!7785 = !DILocation(line: 2247, column: 23, scope: !7782)
!7786 = !DILocation(line: 2247, column: 21, scope: !7782)
!7787 = !DILocation(line: 2248, column: 17, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7782, file: !63, line: 2248, column: 15)
!7789 = !DILocation(line: 2248, column: 15, scope: !7782)
!7790 = !DILocation(line: 2249, column: 26, scope: !7788)
!7791 = !DILocation(line: 2249, column: 33, scope: !7788)
!7792 = !DILocation(line: 2249, column: 31, scope: !7788)
!7793 = !DILocation(line: 2249, column: 42, scope: !7788)
!7794 = !DILocation(line: 2249, column: 49, scope: !7788)
!7795 = !DILocation(line: 2249, column: 47, scope: !7788)
!7796 = !DILocation(line: 2249, column: 39, scope: !7788)
!7797 = !DILocation(line: 2249, column: 23, scope: !7788)
!7798 = !DILocation(line: 2249, column: 13, scope: !7788)
!7799 = !DILocation(line: 2250, column: 9, scope: !7782)
!7800 = !DILocation(line: 2252, column: 14, scope: !7779)
!7801 = !DILocation(line: 2252, column: 12, scope: !7779)
!7802 = !DILocation(line: 2253, column: 5, scope: !7779)
!7803 = !DILocation(line: 2255, column: 9, scope: !7521)
!7804 = !DILocation(line: 2255, column: 3, scope: !7521)
!7805 = !DILocation(line: 2257, column: 10, scope: !7521)
!7806 = !DILocation(line: 2257, column: 3, scope: !7521)
!7807 = distinct !DISubprogram(name: "xstrxfrm", scope: !63, file: !63, line: 2110, type: !505, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7808 = !DILocalVariable(name: "dest", arg: 1, scope: !7807, file: !63, line: 2110, type: !486)
!7809 = !DILocation(line: 2110, column: 26, scope: !7807)
!7810 = !DILocalVariable(name: "src", arg: 2, scope: !7807, file: !63, line: 2110, type: !507)
!7811 = !DILocation(line: 2110, column: 53, scope: !7807)
!7812 = !DILocalVariable(name: "destsize", arg: 3, scope: !7807, file: !63, line: 2110, type: !52)
!7813 = !DILocation(line: 2110, column: 65, scope: !7807)
!7814 = !DILocation(line: 2112, column: 3, scope: !7807)
!7815 = !DILocation(line: 2112, column: 9, scope: !7807)
!7816 = !DILocalVariable(name: "translated_size", scope: !7807, file: !63, line: 2113, type: !52)
!7817 = !DILocation(line: 2113, column: 10, scope: !7807)
!7818 = !DILocation(line: 2113, column: 37, scope: !7807)
!7819 = !DILocation(line: 2113, column: 43, scope: !7807)
!7820 = !DILocation(line: 2113, column: 48, scope: !7807)
!7821 = !DILocation(line: 2113, column: 28, scope: !7807)
!7822 = !DILocation(line: 2115, column: 7, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7807, file: !63, line: 2115, column: 7)
!7824 = !DILocation(line: 2115, column: 7, scope: !7807)
!7825 = !DILocation(line: 2117, column: 17, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7823, file: !63, line: 2116, column: 5)
!7827 = !DILocation(line: 2117, column: 24, scope: !7826)
!7828 = !DILocation(line: 2117, column: 7, scope: !7826)
!7829 = !DILocation(line: 2118, column: 20, scope: !7826)
!7830 = !DILocation(line: 2118, column: 7, scope: !7826)
!7831 = !DILocation(line: 2119, column: 7, scope: !7826)
!7832 = !DILocation(line: 2124, column: 10, scope: !7807)
!7833 = !DILocation(line: 2124, column: 3, scope: !7807)
!7834 = distinct !DISubprogram(name: "find_unit_order", scope: !63, file: !63, line: 1954, type: !477, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7835 = !DILocalVariable(name: "number", arg: 1, scope: !7834, file: !63, line: 1954, type: !87)
!7836 = !DILocation(line: 1954, column: 30, scope: !7834)
!7837 = !DILocalVariable(name: "minus_sign", scope: !7834, file: !63, line: 1956, type: !102)
!7838 = !DILocation(line: 1956, column: 8, scope: !7834)
!7839 = !DILocation(line: 1956, column: 23, scope: !7834)
!7840 = !DILocation(line: 1956, column: 22, scope: !7834)
!7841 = !DILocation(line: 1956, column: 30, scope: !7834)
!7842 = !DILocalVariable(name: "p", scope: !7834, file: !63, line: 1957, type: !87)
!7843 = !DILocation(line: 1957, column: 15, scope: !7834)
!7844 = !DILocation(line: 1957, column: 19, scope: !7834)
!7845 = !DILocation(line: 1957, column: 28, scope: !7834)
!7846 = !DILocation(line: 1957, column: 26, scope: !7834)
!7847 = !DILocalVariable(name: "max_digit", scope: !7834, file: !63, line: 1958, type: !317)
!7848 = !DILocation(line: 1958, column: 17, scope: !7834)
!7849 = !DILocation(line: 1958, column: 29, scope: !7834)
!7850 = !DILocation(line: 1959, column: 13, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7834, file: !63, line: 1959, column: 7)
!7852 = !DILocation(line: 1959, column: 11, scope: !7851)
!7853 = !DILocation(line: 1959, column: 7, scope: !7834)
!7854 = !DILocalVariable(name: "ch", scope: !7855, file: !63, line: 1961, type: !317)
!7855 = distinct !DILexicalBlock(scope: !7851, file: !63, line: 1960, column: 5)
!7856 = !DILocation(line: 1961, column: 21, scope: !7855)
!7857 = !DILocation(line: 1961, column: 27, scope: !7855)
!7858 = !DILocation(line: 1961, column: 26, scope: !7855)
!7859 = !DILocalVariable(name: "order", scope: !7855, file: !63, line: 1962, type: !5)
!7860 = !DILocation(line: 1962, column: 11, scope: !7855)
!7861 = !DILocation(line: 1962, column: 30, scope: !7855)
!7862 = !DILocation(line: 1962, column: 19, scope: !7855)
!7863 = !DILocation(line: 1963, column: 15, scope: !7855)
!7864 = !DILocation(line: 1963, column: 29, scope: !7855)
!7865 = !DILocation(line: 1963, column: 28, scope: !7855)
!7866 = !DILocation(line: 1963, column: 37, scope: !7855)
!7867 = !DILocation(line: 1963, column: 7, scope: !7855)
!7868 = !DILocation(line: 1966, column: 5, scope: !7851)
!7869 = !DILocation(line: 1967, column: 1, scope: !7834)
!7870 = distinct !DISubprogram(name: "nan_compare", scope: !63, file: !63, line: 2004, type: !474, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7871 = !DILocalVariable(name: "sa", arg: 1, scope: !7870, file: !63, line: 2004, type: !87)
!7872 = !DILocation(line: 2004, column: 26, scope: !7870)
!7873 = !DILocalVariable(name: "sb", arg: 2, scope: !7870, file: !63, line: 2004, type: !87)
!7874 = !DILocation(line: 2004, column: 42, scope: !7870)
!7875 = !DILocalVariable(name: "a", scope: !7870, file: !63, line: 2006, type: !476)
!7876 = !DILocation(line: 2006, column: 15, scope: !7870)
!7877 = !DILocation(line: 2007, column: 3, scope: !7870)
!7878 = !DILocation(line: 2008, column: 16, scope: !7870)
!7879 = !DILocation(line: 2008, column: 7, scope: !7870)
!7880 = !DILocation(line: 2008, column: 5, scope: !7870)
!7881 = !DILocalVariable(name: "b", scope: !7870, file: !63, line: 2010, type: !476)
!7882 = !DILocation(line: 2010, column: 15, scope: !7870)
!7883 = !DILocation(line: 2011, column: 3, scope: !7870)
!7884 = !DILocation(line: 2012, column: 16, scope: !7870)
!7885 = !DILocation(line: 2012, column: 7, scope: !7870)
!7886 = !DILocation(line: 2012, column: 5, scope: !7870)
!7887 = !DILocation(line: 2014, column: 18, scope: !7870)
!7888 = !DILocation(line: 2014, column: 22, scope: !7870)
!7889 = !DILocation(line: 2014, column: 10, scope: !7870)
!7890 = !DILocation(line: 2014, column: 3, scope: !7870)
!7891 = distinct !DISubprogram(name: "sortlines_thread", scope: !63, file: !63, line: 3609, type: !671, scopeLine: 3610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7892 = !DILocalVariable(name: "data", arg: 1, scope: !7891, file: !63, line: 3609, type: !47)
!7893 = !DILocation(line: 3609, column: 25, scope: !7891)
!7894 = !DILocalVariable(name: "args", scope: !7891, file: !63, line: 3611, type: !673)
!7895 = !DILocation(line: 3611, column: 29, scope: !7891)
!7896 = !DILocation(line: 3611, column: 36, scope: !7891)
!7897 = !DILocation(line: 3612, column: 14, scope: !7891)
!7898 = !DILocation(line: 3612, column: 20, scope: !7891)
!7899 = !DILocation(line: 3612, column: 27, scope: !7891)
!7900 = !DILocation(line: 3612, column: 33, scope: !7891)
!7901 = !DILocation(line: 3612, column: 43, scope: !7891)
!7902 = !DILocation(line: 3612, column: 49, scope: !7891)
!7903 = !DILocation(line: 3613, column: 14, scope: !7891)
!7904 = !DILocation(line: 3613, column: 20, scope: !7891)
!7905 = !DILocation(line: 3613, column: 26, scope: !7891)
!7906 = !DILocation(line: 3613, column: 32, scope: !7891)
!7907 = !DILocation(line: 3613, column: 39, scope: !7891)
!7908 = !DILocation(line: 3613, column: 45, scope: !7891)
!7909 = !DILocation(line: 3614, column: 14, scope: !7891)
!7910 = !DILocation(line: 3614, column: 20, scope: !7891)
!7911 = !DILocation(line: 3612, column: 3, scope: !7891)
!7912 = !DILocation(line: 3615, column: 3, scope: !7891)
!7913 = !{!7914}
!7914 = !{i64 2, i64 3, i1 false}
!7915 = distinct !DISubprogram(name: "sequential_sort", scope: !63, file: !63, line: 3195, type: !687, scopeLine: 3197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!7916 = !DILocalVariable(name: "lines", arg: 1, scope: !7915, file: !63, line: 3195, type: !669)
!7917 = !DILocation(line: 3195, column: 40, scope: !7915)
!7918 = !DILocalVariable(name: "nlines", arg: 2, scope: !7915, file: !63, line: 3195, type: !52)
!7919 = !DILocation(line: 3195, column: 54, scope: !7915)
!7920 = !DILocalVariable(name: "temp", arg: 3, scope: !7915, file: !63, line: 3196, type: !669)
!7921 = !DILocation(line: 3196, column: 40, scope: !7915)
!7922 = !DILocalVariable(name: "to_temp", arg: 4, scope: !7915, file: !63, line: 3196, type: !102)
!7923 = !DILocation(line: 3196, column: 51, scope: !7915)
!7924 = !DILocation(line: 3198, column: 7, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7915, file: !63, line: 3198, column: 7)
!7926 = !DILocation(line: 3198, column: 14, scope: !7925)
!7927 = !DILocation(line: 3198, column: 7, scope: !7915)
!7928 = !DILocalVariable(name: "swap", scope: !7929, file: !63, line: 3203, type: !5)
!7929 = distinct !DILexicalBlock(scope: !7925, file: !63, line: 3199, column: 5)
!7930 = !DILocation(line: 3203, column: 11, scope: !7929)
!7931 = !DILocation(line: 3203, column: 33, scope: !7929)
!7932 = !DILocation(line: 3203, column: 45, scope: !7929)
!7933 = !DILocation(line: 3203, column: 23, scope: !7929)
!7934 = !DILocation(line: 3203, column: 21, scope: !7929)
!7935 = !DILocation(line: 3204, column: 11, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7929, file: !63, line: 3204, column: 11)
!7937 = !DILocation(line: 3204, column: 11, scope: !7929)
!7938 = !DILocation(line: 3206, column: 11, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7936, file: !63, line: 3205, column: 9)
!7940 = !DILocation(line: 3206, column: 22, scope: !7939)
!7941 = !DILocation(line: 3206, column: 33, scope: !7939)
!7942 = !DILocation(line: 3206, column: 31, scope: !7939)
!7943 = !DILocation(line: 3207, column: 11, scope: !7939)
!7944 = !DILocation(line: 3207, column: 22, scope: !7939)
!7945 = !DILocation(line: 3207, column: 33, scope: !7939)
!7946 = !DILocation(line: 3207, column: 31, scope: !7939)
!7947 = !DILocation(line: 3208, column: 9, scope: !7939)
!7948 = !DILocation(line: 3209, column: 16, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7936, file: !63, line: 3209, column: 16)
!7950 = !DILocation(line: 3209, column: 16, scope: !7936)
!7951 = !DILocation(line: 3211, column: 11, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7949, file: !63, line: 3210, column: 9)
!7953 = !DILocation(line: 3211, column: 22, scope: !7952)
!7954 = !DILocation(line: 3212, column: 11, scope: !7952)
!7955 = !DILocation(line: 3212, column: 23, scope: !7952)
!7956 = !DILocation(line: 3213, column: 11, scope: !7952)
!7957 = !DILocation(line: 3213, column: 23, scope: !7952)
!7958 = !DILocation(line: 3214, column: 9, scope: !7952)
!7959 = !DILocation(line: 3215, column: 5, scope: !7929)
!7960 = !DILocalVariable(name: "nlo", scope: !7961, file: !63, line: 3218, type: !52)
!7961 = distinct !DILexicalBlock(scope: !7925, file: !63, line: 3217, column: 5)
!7962 = !DILocation(line: 3218, column: 14, scope: !7961)
!7963 = !DILocation(line: 3218, column: 20, scope: !7961)
!7964 = !DILocation(line: 3218, column: 27, scope: !7961)
!7965 = !DILocalVariable(name: "nhi", scope: !7961, file: !63, line: 3219, type: !52)
!7966 = !DILocation(line: 3219, column: 14, scope: !7961)
!7967 = !DILocation(line: 3219, column: 20, scope: !7961)
!7968 = !DILocation(line: 3219, column: 29, scope: !7961)
!7969 = !DILocation(line: 3219, column: 27, scope: !7961)
!7970 = !DILocalVariable(name: "lo", scope: !7961, file: !63, line: 3220, type: !462)
!7971 = !DILocation(line: 3220, column: 20, scope: !7961)
!7972 = !DILocation(line: 3220, column: 25, scope: !7961)
!7973 = !DILocalVariable(name: "hi", scope: !7961, file: !63, line: 3221, type: !462)
!7974 = !DILocation(line: 3221, column: 20, scope: !7961)
!7975 = !DILocation(line: 3221, column: 25, scope: !7961)
!7976 = !DILocation(line: 3221, column: 33, scope: !7961)
!7977 = !DILocation(line: 3221, column: 31, scope: !7961)
!7978 = !DILocation(line: 3223, column: 24, scope: !7961)
!7979 = !DILocation(line: 3223, column: 28, scope: !7961)
!7980 = !DILocation(line: 3223, column: 33, scope: !7961)
!7981 = !DILocation(line: 3223, column: 41, scope: !7961)
!7982 = !DILocation(line: 3223, column: 51, scope: !7961)
!7983 = !DILocation(line: 3223, column: 38, scope: !7961)
!7984 = !DILocation(line: 3223, column: 61, scope: !7961)
!7985 = !DILocation(line: 3223, column: 7, scope: !7961)
!7986 = !DILocation(line: 3224, column: 15, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7961, file: !63, line: 3224, column: 11)
!7988 = !DILocation(line: 3224, column: 13, scope: !7987)
!7989 = !DILocation(line: 3224, column: 11, scope: !7961)
!7990 = !DILocation(line: 3225, column: 26, scope: !7987)
!7991 = !DILocation(line: 3225, column: 30, scope: !7987)
!7992 = !DILocation(line: 3225, column: 35, scope: !7987)
!7993 = !DILocation(line: 3225, column: 42, scope: !7987)
!7994 = !DILocation(line: 3225, column: 41, scope: !7987)
!7995 = !DILocation(line: 3225, column: 9, scope: !7987)
!7996 = !DILocation(line: 3226, column: 17, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7987, file: !63, line: 3226, column: 16)
!7998 = !DILocation(line: 3226, column: 16, scope: !7987)
!7999 = !DILocation(line: 3227, column: 9, scope: !7997)
!8000 = !DILocation(line: 3227, column: 20, scope: !7997)
!8001 = !DILocalVariable(name: "dest", scope: !7961, file: !63, line: 3229, type: !462)
!8002 = !DILocation(line: 3229, column: 20, scope: !7961)
!8003 = !DILocalVariable(name: "sorted_lo", scope: !7961, file: !63, line: 3230, type: !440)
!8004 = !DILocation(line: 3230, column: 26, scope: !7961)
!8005 = !DILocation(line: 3231, column: 11, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7961, file: !63, line: 3231, column: 11)
!8007 = !DILocation(line: 3231, column: 11, scope: !7961)
!8008 = !DILocation(line: 3233, column: 18, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8006, file: !63, line: 3232, column: 9)
!8010 = !DILocation(line: 3233, column: 16, scope: !8009)
!8011 = !DILocation(line: 3234, column: 23, scope: !8009)
!8012 = !DILocation(line: 3234, column: 21, scope: !8009)
!8013 = !DILocation(line: 3235, column: 9, scope: !8009)
!8014 = !DILocation(line: 3238, column: 18, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8006, file: !63, line: 3237, column: 9)
!8016 = !DILocation(line: 3238, column: 16, scope: !8015)
!8017 = !DILocation(line: 3239, column: 23, scope: !8015)
!8018 = !DILocation(line: 3239, column: 21, scope: !8015)
!8019 = !DILocation(line: 3241, column: 19, scope: !7961)
!8020 = !DILocation(line: 3241, column: 25, scope: !7961)
!8021 = !DILocation(line: 3241, column: 33, scope: !7961)
!8022 = !DILocation(line: 3241, column: 7, scope: !7961)
!8023 = !DILocation(line: 3243, column: 1, scope: !7915)
!8024 = distinct !DISubprogram(name: "queue_insert", scope: !63, file: !63, line: 3393, type: !692, scopeLine: 3394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8025 = !DILocalVariable(name: "queue", arg: 1, scope: !8024, file: !63, line: 3393, type: !630)
!8026 = !DILocation(line: 3393, column: 40, scope: !8024)
!8027 = !DILocalVariable(name: "node", arg: 2, scope: !8024, file: !63, line: 3393, type: !577)
!8028 = !DILocation(line: 3393, column: 66, scope: !8024)
!8029 = !DILocation(line: 3395, column: 24, scope: !8024)
!8030 = !DILocation(line: 3395, column: 31, scope: !8024)
!8031 = !DILocation(line: 3395, column: 3, scope: !8024)
!8032 = !DILocation(line: 3396, column: 16, scope: !8024)
!8033 = !DILocation(line: 3396, column: 23, scope: !8024)
!8034 = !DILocation(line: 3396, column: 39, scope: !8024)
!8035 = !DILocation(line: 3396, column: 3, scope: !8024)
!8036 = !DILocation(line: 3397, column: 3, scope: !8024)
!8037 = !DILocation(line: 3397, column: 9, scope: !8024)
!8038 = !DILocation(line: 3397, column: 16, scope: !8024)
!8039 = !DILocation(line: 3398, column: 25, scope: !8024)
!8040 = !DILocation(line: 3398, column: 32, scope: !8024)
!8041 = !DILocation(line: 3398, column: 3, scope: !8024)
!8042 = !DILocation(line: 3399, column: 26, scope: !8024)
!8043 = !DILocation(line: 3399, column: 33, scope: !8024)
!8044 = !DILocation(line: 3399, column: 3, scope: !8024)
!8045 = !DILocation(line: 3400, column: 1, scope: !8024)
!8046 = distinct !DISubprogram(name: "merge_loop", scope: !63, file: !63, line: 3551, type: !694, scopeLine: 3553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8047 = !DILocalVariable(name: "queue", arg: 1, scope: !8046, file: !63, line: 3551, type: !630)
!8048 = !DILocation(line: 3551, column: 38, scope: !8046)
!8049 = !DILocalVariable(name: "total_lines", arg: 2, scope: !8046, file: !63, line: 3552, type: !52)
!8050 = !DILocation(line: 3552, column: 20, scope: !8046)
!8051 = !DILocalVariable(name: "tfp", arg: 3, scope: !8046, file: !63, line: 3552, type: !277)
!8052 = !DILocation(line: 3552, column: 39, scope: !8046)
!8053 = !DILocalVariable(name: "temp_output", arg: 4, scope: !8046, file: !63, line: 3552, type: !87)
!8054 = !DILocation(line: 3552, column: 56, scope: !8046)
!8055 = !DILocation(line: 3554, column: 3, scope: !8046)
!8056 = !DILocalVariable(name: "node", scope: !8057, file: !63, line: 3556, type: !577)
!8057 = distinct !DILexicalBlock(scope: !8046, file: !63, line: 3555, column: 5)
!8058 = !DILocation(line: 3556, column: 26, scope: !8057)
!8059 = !DILocation(line: 3556, column: 44, scope: !8057)
!8060 = !DILocation(line: 3556, column: 33, scope: !8057)
!8061 = !DILocation(line: 3558, column: 11, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8057, file: !63, line: 3558, column: 11)
!8063 = !DILocation(line: 3558, column: 17, scope: !8062)
!8064 = !DILocation(line: 3558, column: 23, scope: !8062)
!8065 = !DILocation(line: 3558, column: 11, scope: !8057)
!8066 = !DILocation(line: 3560, column: 24, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8062, file: !63, line: 3559, column: 9)
!8068 = !DILocation(line: 3560, column: 11, scope: !8067)
!8069 = !DILocation(line: 3562, column: 25, scope: !8067)
!8070 = !DILocation(line: 3562, column: 32, scope: !8067)
!8071 = !DILocation(line: 3562, column: 11, scope: !8067)
!8072 = !DILocation(line: 3563, column: 11, scope: !8067)
!8073 = !DILocation(line: 3565, column: 24, scope: !8057)
!8074 = !DILocation(line: 3565, column: 30, scope: !8057)
!8075 = !DILocation(line: 3565, column: 43, scope: !8057)
!8076 = !DILocation(line: 3565, column: 48, scope: !8057)
!8077 = !DILocation(line: 3565, column: 7, scope: !8057)
!8078 = !DILocation(line: 3566, column: 27, scope: !8057)
!8079 = !DILocation(line: 3566, column: 34, scope: !8057)
!8080 = !DILocation(line: 3566, column: 7, scope: !8057)
!8081 = !DILocation(line: 3567, column: 34, scope: !8057)
!8082 = !DILocation(line: 3567, column: 41, scope: !8057)
!8083 = !DILocation(line: 3567, column: 7, scope: !8057)
!8084 = !DILocation(line: 3569, column: 20, scope: !8057)
!8085 = !DILocation(line: 3569, column: 7, scope: !8057)
!8086 = distinct !{!8086, !8055, !8087}
!8087 = !DILocation(line: 3570, column: 5, scope: !8046)
!8088 = !DILocation(line: 3571, column: 1, scope: !8046)
!8089 = distinct !DISubprogram(name: "queue_pop", scope: !63, file: !63, line: 3405, type: !696, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8090 = !DILocalVariable(name: "queue", arg: 1, scope: !8089, file: !63, line: 3405, type: !630)
!8091 = !DILocation(line: 3405, column: 37, scope: !8089)
!8092 = !DILocalVariable(name: "node", scope: !8089, file: !63, line: 3407, type: !577)
!8093 = !DILocation(line: 3407, column: 22, scope: !8089)
!8094 = !DILocation(line: 3408, column: 24, scope: !8089)
!8095 = !DILocation(line: 3408, column: 31, scope: !8089)
!8096 = !DILocation(line: 3408, column: 3, scope: !8089)
!8097 = !DILocation(line: 3409, column: 3, scope: !8089)
!8098 = !DILocation(line: 3409, column: 37, scope: !8089)
!8099 = !DILocation(line: 3409, column: 44, scope: !8089)
!8100 = !DILocation(line: 3409, column: 20, scope: !8089)
!8101 = !DILocation(line: 3409, column: 18, scope: !8089)
!8102 = !DILocation(line: 3409, column: 10, scope: !8089)
!8103 = !DILocation(line: 3410, column: 25, scope: !8089)
!8104 = !DILocation(line: 3410, column: 32, scope: !8089)
!8105 = !DILocation(line: 3410, column: 39, scope: !8089)
!8106 = !DILocation(line: 3410, column: 46, scope: !8089)
!8107 = !DILocation(line: 3410, column: 5, scope: !8089)
!8108 = distinct !{!8108, !8097, !8109}
!8109 = !DILocation(line: 3410, column: 51, scope: !8089)
!8110 = !DILocation(line: 3411, column: 26, scope: !8089)
!8111 = !DILocation(line: 3411, column: 33, scope: !8089)
!8112 = !DILocation(line: 3411, column: 3, scope: !8089)
!8113 = !DILocation(line: 3412, column: 14, scope: !8089)
!8114 = !DILocation(line: 3412, column: 3, scope: !8089)
!8115 = !DILocation(line: 3413, column: 3, scope: !8089)
!8116 = !DILocation(line: 3413, column: 9, scope: !8089)
!8117 = !DILocation(line: 3413, column: 16, scope: !8089)
!8118 = !DILocation(line: 3414, column: 10, scope: !8089)
!8119 = !DILocation(line: 3414, column: 3, scope: !8089)
!8120 = distinct !DISubprogram(name: "unlock_node", scope: !63, file: !63, line: 3360, type: !698, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8121 = !DILocalVariable(name: "node", arg: 1, scope: !8120, file: !63, line: 3360, type: !577)
!8122 = !DILocation(line: 3360, column: 33, scope: !8120)
!8123 = !DILocation(line: 3362, column: 26, scope: !8120)
!8124 = !DILocation(line: 3362, column: 32, scope: !8120)
!8125 = !DILocation(line: 3362, column: 3, scope: !8120)
!8126 = !DILocation(line: 3363, column: 1, scope: !8120)
!8127 = distinct !DISubprogram(name: "mergelines_node", scope: !63, file: !63, line: 3445, type: !700, scopeLine: 3447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8128 = !DILocalVariable(name: "node", arg: 1, scope: !8127, file: !63, line: 3445, type: !666)
!8129 = !DILocation(line: 3445, column: 46, scope: !8127)
!8130 = !DILocalVariable(name: "total_lines", arg: 2, scope: !8127, file: !63, line: 3445, type: !52)
!8131 = !DILocation(line: 3445, column: 59, scope: !8127)
!8132 = !DILocalVariable(name: "tfp", arg: 3, scope: !8127, file: !63, line: 3446, type: !277)
!8133 = !DILocation(line: 3446, column: 24, scope: !8127)
!8134 = !DILocalVariable(name: "temp_output", arg: 4, scope: !8127, file: !63, line: 3446, type: !87)
!8135 = !DILocation(line: 3446, column: 41, scope: !8127)
!8136 = !DILocalVariable(name: "lo_orig", scope: !8127, file: !63, line: 3448, type: !462)
!8137 = !DILocation(line: 3448, column: 16, scope: !8127)
!8138 = !DILocation(line: 3448, column: 26, scope: !8127)
!8139 = !DILocation(line: 3448, column: 32, scope: !8127)
!8140 = !DILocalVariable(name: "hi_orig", scope: !8127, file: !63, line: 3449, type: !462)
!8141 = !DILocation(line: 3449, column: 16, scope: !8127)
!8142 = !DILocation(line: 3449, column: 26, scope: !8127)
!8143 = !DILocation(line: 3449, column: 32, scope: !8127)
!8144 = !DILocalVariable(name: "to_merge", scope: !8127, file: !63, line: 3450, type: !52)
!8145 = !DILocation(line: 3450, column: 10, scope: !8127)
!8146 = !DILocation(line: 3450, column: 21, scope: !8127)
!8147 = !DILocalVariable(name: "merged_lo", scope: !8127, file: !63, line: 3451, type: !52)
!8148 = !DILocation(line: 3451, column: 10, scope: !8127)
!8149 = !DILocalVariable(name: "merged_hi", scope: !8127, file: !63, line: 3452, type: !52)
!8150 = !DILocation(line: 3452, column: 10, scope: !8127)
!8151 = !DILocation(line: 3454, column: 7, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8127, file: !63, line: 3454, column: 7)
!8153 = !DILocation(line: 3454, column: 13, scope: !8152)
!8154 = !DILocation(line: 3454, column: 19, scope: !8152)
!8155 = !DILocation(line: 3454, column: 7, scope: !8127)
!8156 = !DILocalVariable(name: "dest", scope: !8157, file: !63, line: 3457, type: !462)
!8157 = distinct !DILexicalBlock(scope: !8152, file: !63, line: 3455, column: 5)
!8158 = !DILocation(line: 3457, column: 20, scope: !8157)
!8159 = !DILocation(line: 3457, column: 28, scope: !8157)
!8160 = !DILocation(line: 3457, column: 34, scope: !8157)
!8161 = !DILocation(line: 3457, column: 27, scope: !8157)
!8162 = !DILocation(line: 3458, column: 7, scope: !8157)
!8163 = !DILocation(line: 3458, column: 14, scope: !8157)
!8164 = !DILocation(line: 3458, column: 20, scope: !8157)
!8165 = !DILocation(line: 3458, column: 26, scope: !8157)
!8166 = !DILocation(line: 3458, column: 32, scope: !8157)
!8167 = !DILocation(line: 3458, column: 23, scope: !8157)
!8168 = !DILocation(line: 3458, column: 39, scope: !8157)
!8169 = !DILocation(line: 3458, column: 42, scope: !8157)
!8170 = !DILocation(line: 3458, column: 48, scope: !8157)
!8171 = !DILocation(line: 3458, column: 54, scope: !8157)
!8172 = !DILocation(line: 3458, column: 60, scope: !8157)
!8173 = !DILocation(line: 3458, column: 51, scope: !8157)
!8174 = !DILocation(line: 3458, column: 67, scope: !8157)
!8175 = !DILocation(line: 3458, column: 78, scope: !8157)
!8176 = !DILocation(line: 0, scope: !8157)
!8177 = !DILocation(line: 3459, column: 22, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8157, file: !63, line: 3459, column: 13)
!8179 = !DILocation(line: 3459, column: 28, scope: !8178)
!8180 = !DILocation(line: 3459, column: 31, scope: !8178)
!8181 = !DILocation(line: 3459, column: 36, scope: !8178)
!8182 = !DILocation(line: 3459, column: 42, scope: !8178)
!8183 = !DILocation(line: 3459, column: 45, scope: !8178)
!8184 = !DILocation(line: 3459, column: 13, scope: !8178)
!8185 = !DILocation(line: 3459, column: 50, scope: !8178)
!8186 = !DILocation(line: 3459, column: 13, scope: !8157)
!8187 = !DILocation(line: 3460, column: 12, scope: !8178)
!8188 = !DILocation(line: 3460, column: 24, scope: !8178)
!8189 = !DILocation(line: 3460, column: 30, scope: !8178)
!8190 = !DILocation(line: 3460, column: 22, scope: !8178)
!8191 = !DILocation(line: 3460, column: 21, scope: !8178)
!8192 = !DILocation(line: 3460, column: 11, scope: !8178)
!8193 = !DILocation(line: 3462, column: 12, scope: !8178)
!8194 = !DILocation(line: 3462, column: 24, scope: !8178)
!8195 = !DILocation(line: 3462, column: 30, scope: !8178)
!8196 = !DILocation(line: 3462, column: 22, scope: !8178)
!8197 = !DILocation(line: 3462, column: 21, scope: !8178)
!8198 = distinct !{!8198, !8162, !8199}
!8199 = !DILocation(line: 3462, column: 30, scope: !8157)
!8200 = !DILocation(line: 3464, column: 19, scope: !8157)
!8201 = !DILocation(line: 3464, column: 29, scope: !8157)
!8202 = !DILocation(line: 3464, column: 35, scope: !8157)
!8203 = !DILocation(line: 3464, column: 27, scope: !8157)
!8204 = !DILocation(line: 3464, column: 17, scope: !8157)
!8205 = !DILocation(line: 3465, column: 19, scope: !8157)
!8206 = !DILocation(line: 3465, column: 29, scope: !8157)
!8207 = !DILocation(line: 3465, column: 35, scope: !8157)
!8208 = !DILocation(line: 3465, column: 27, scope: !8157)
!8209 = !DILocation(line: 3465, column: 17, scope: !8157)
!8210 = !DILocation(line: 3467, column: 11, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8157, file: !63, line: 3467, column: 11)
!8212 = !DILocation(line: 3467, column: 17, scope: !8211)
!8213 = !DILocation(line: 3467, column: 24, scope: !8211)
!8214 = !DILocation(line: 3467, column: 21, scope: !8211)
!8215 = !DILocation(line: 3467, column: 11, scope: !8157)
!8216 = !DILocation(line: 3468, column: 9, scope: !8211)
!8217 = !DILocation(line: 3468, column: 16, scope: !8211)
!8218 = !DILocation(line: 3468, column: 22, scope: !8211)
!8219 = !DILocation(line: 3468, column: 28, scope: !8211)
!8220 = !DILocation(line: 3468, column: 34, scope: !8211)
!8221 = !DILocation(line: 3468, column: 25, scope: !8211)
!8222 = !DILocation(line: 3468, column: 41, scope: !8211)
!8223 = !DILocation(line: 3468, column: 52, scope: !8211)
!8224 = !DILocation(line: 0, scope: !8211)
!8225 = !DILocation(line: 3469, column: 12, scope: !8211)
!8226 = !DILocation(line: 3469, column: 24, scope: !8211)
!8227 = !DILocation(line: 3469, column: 30, scope: !8211)
!8228 = !DILocation(line: 3469, column: 22, scope: !8211)
!8229 = !DILocation(line: 3469, column: 21, scope: !8211)
!8230 = distinct !{!8230, !8216, !8227}
!8231 = !DILocation(line: 3470, column: 16, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8211, file: !63, line: 3470, column: 16)
!8233 = !DILocation(line: 3470, column: 22, scope: !8232)
!8234 = !DILocation(line: 3470, column: 29, scope: !8232)
!8235 = !DILocation(line: 3470, column: 26, scope: !8232)
!8236 = !DILocation(line: 3470, column: 16, scope: !8211)
!8237 = !DILocation(line: 3471, column: 9, scope: !8232)
!8238 = !DILocation(line: 3471, column: 16, scope: !8232)
!8239 = !DILocation(line: 3471, column: 22, scope: !8232)
!8240 = !DILocation(line: 3471, column: 28, scope: !8232)
!8241 = !DILocation(line: 3471, column: 34, scope: !8232)
!8242 = !DILocation(line: 3471, column: 25, scope: !8232)
!8243 = !DILocation(line: 3471, column: 41, scope: !8232)
!8244 = !DILocation(line: 3471, column: 52, scope: !8232)
!8245 = !DILocation(line: 0, scope: !8232)
!8246 = !DILocation(line: 3472, column: 12, scope: !8232)
!8247 = !DILocation(line: 3472, column: 24, scope: !8232)
!8248 = !DILocation(line: 3472, column: 30, scope: !8232)
!8249 = !DILocation(line: 3472, column: 22, scope: !8232)
!8250 = !DILocation(line: 3472, column: 21, scope: !8232)
!8251 = distinct !{!8251, !8237, !8248}
!8252 = !DILocation(line: 3473, column: 21, scope: !8157)
!8253 = !DILocation(line: 3473, column: 8, scope: !8157)
!8254 = !DILocation(line: 3473, column: 14, scope: !8157)
!8255 = !DILocation(line: 3473, column: 19, scope: !8157)
!8256 = !DILocation(line: 3474, column: 5, scope: !8157)
!8257 = !DILocation(line: 3478, column: 7, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8152, file: !63, line: 3476, column: 5)
!8259 = !DILocation(line: 3478, column: 14, scope: !8258)
!8260 = !DILocation(line: 3478, column: 20, scope: !8258)
!8261 = !DILocation(line: 3478, column: 26, scope: !8258)
!8262 = !DILocation(line: 3478, column: 32, scope: !8258)
!8263 = !DILocation(line: 3478, column: 23, scope: !8258)
!8264 = !DILocation(line: 3478, column: 39, scope: !8258)
!8265 = !DILocation(line: 3478, column: 42, scope: !8258)
!8266 = !DILocation(line: 3478, column: 48, scope: !8258)
!8267 = !DILocation(line: 3478, column: 54, scope: !8258)
!8268 = !DILocation(line: 3478, column: 60, scope: !8258)
!8269 = !DILocation(line: 3478, column: 51, scope: !8258)
!8270 = !DILocation(line: 3478, column: 67, scope: !8258)
!8271 = !DILocation(line: 3478, column: 78, scope: !8258)
!8272 = !DILocation(line: 0, scope: !8258)
!8273 = !DILocation(line: 3480, column: 24, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !63, line: 3480, column: 15)
!8275 = distinct !DILexicalBlock(scope: !8258, file: !63, line: 3479, column: 9)
!8276 = !DILocation(line: 3480, column: 30, scope: !8274)
!8277 = !DILocation(line: 3480, column: 33, scope: !8274)
!8278 = !DILocation(line: 3480, column: 38, scope: !8274)
!8279 = !DILocation(line: 3480, column: 44, scope: !8274)
!8280 = !DILocation(line: 3480, column: 47, scope: !8274)
!8281 = !DILocation(line: 3480, column: 15, scope: !8274)
!8282 = !DILocation(line: 3480, column: 52, scope: !8274)
!8283 = !DILocation(line: 3480, column: 15, scope: !8275)
!8284 = !DILocation(line: 3481, column: 29, scope: !8274)
!8285 = !DILocation(line: 3481, column: 35, scope: !8274)
!8286 = !DILocation(line: 3481, column: 27, scope: !8274)
!8287 = !DILocation(line: 3481, column: 39, scope: !8274)
!8288 = !DILocation(line: 3481, column: 44, scope: !8274)
!8289 = !DILocation(line: 3481, column: 13, scope: !8274)
!8290 = !DILocation(line: 3483, column: 29, scope: !8274)
!8291 = !DILocation(line: 3483, column: 35, scope: !8274)
!8292 = !DILocation(line: 3483, column: 27, scope: !8274)
!8293 = !DILocation(line: 3483, column: 39, scope: !8274)
!8294 = !DILocation(line: 3483, column: 44, scope: !8274)
!8295 = !DILocation(line: 3483, column: 13, scope: !8274)
!8296 = distinct !{!8296, !8257, !8297}
!8297 = !DILocation(line: 3484, column: 9, scope: !8258)
!8298 = !DILocation(line: 3486, column: 19, scope: !8258)
!8299 = !DILocation(line: 3486, column: 29, scope: !8258)
!8300 = !DILocation(line: 3486, column: 35, scope: !8258)
!8301 = !DILocation(line: 3486, column: 27, scope: !8258)
!8302 = !DILocation(line: 3486, column: 17, scope: !8258)
!8303 = !DILocation(line: 3487, column: 19, scope: !8258)
!8304 = !DILocation(line: 3487, column: 29, scope: !8258)
!8305 = !DILocation(line: 3487, column: 35, scope: !8258)
!8306 = !DILocation(line: 3487, column: 27, scope: !8258)
!8307 = !DILocation(line: 3487, column: 17, scope: !8258)
!8308 = !DILocation(line: 3489, column: 11, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8258, file: !63, line: 3489, column: 11)
!8310 = !DILocation(line: 3489, column: 17, scope: !8309)
!8311 = !DILocation(line: 3489, column: 24, scope: !8309)
!8312 = !DILocation(line: 3489, column: 21, scope: !8309)
!8313 = !DILocation(line: 3489, column: 11, scope: !8258)
!8314 = !DILocation(line: 3491, column: 11, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8309, file: !63, line: 3490, column: 9)
!8316 = !DILocation(line: 3491, column: 18, scope: !8315)
!8317 = !DILocation(line: 3491, column: 24, scope: !8315)
!8318 = !DILocation(line: 3491, column: 30, scope: !8315)
!8319 = !DILocation(line: 3491, column: 36, scope: !8315)
!8320 = !DILocation(line: 3491, column: 27, scope: !8315)
!8321 = !DILocation(line: 3491, column: 43, scope: !8315)
!8322 = !DILocation(line: 3491, column: 54, scope: !8315)
!8323 = !DILocation(line: 0, scope: !8315)
!8324 = !DILocation(line: 3492, column: 29, scope: !8315)
!8325 = !DILocation(line: 3492, column: 35, scope: !8315)
!8326 = !DILocation(line: 3492, column: 27, scope: !8315)
!8327 = !DILocation(line: 3492, column: 39, scope: !8315)
!8328 = !DILocation(line: 3492, column: 44, scope: !8315)
!8329 = !DILocation(line: 3492, column: 13, scope: !8315)
!8330 = distinct !{!8330, !8314, !8331}
!8331 = !DILocation(line: 3492, column: 55, scope: !8315)
!8332 = !DILocation(line: 3493, column: 9, scope: !8315)
!8333 = !DILocation(line: 3494, column: 16, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8309, file: !63, line: 3494, column: 16)
!8335 = !DILocation(line: 3494, column: 22, scope: !8334)
!8336 = !DILocation(line: 3494, column: 29, scope: !8334)
!8337 = !DILocation(line: 3494, column: 26, scope: !8334)
!8338 = !DILocation(line: 3494, column: 16, scope: !8309)
!8339 = !DILocation(line: 3496, column: 11, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8334, file: !63, line: 3495, column: 9)
!8341 = !DILocation(line: 3496, column: 18, scope: !8340)
!8342 = !DILocation(line: 3496, column: 24, scope: !8340)
!8343 = !DILocation(line: 3496, column: 30, scope: !8340)
!8344 = !DILocation(line: 3496, column: 36, scope: !8340)
!8345 = !DILocation(line: 3496, column: 27, scope: !8340)
!8346 = !DILocation(line: 3496, column: 43, scope: !8340)
!8347 = !DILocation(line: 3496, column: 54, scope: !8340)
!8348 = !DILocation(line: 0, scope: !8340)
!8349 = !DILocation(line: 3497, column: 29, scope: !8340)
!8350 = !DILocation(line: 3497, column: 35, scope: !8340)
!8351 = !DILocation(line: 3497, column: 27, scope: !8340)
!8352 = !DILocation(line: 3497, column: 39, scope: !8340)
!8353 = !DILocation(line: 3497, column: 44, scope: !8340)
!8354 = !DILocation(line: 3497, column: 13, scope: !8340)
!8355 = distinct !{!8355, !8339, !8356}
!8356 = !DILocation(line: 3497, column: 55, scope: !8340)
!8357 = !DILocation(line: 3498, column: 9, scope: !8340)
!8358 = !DILocation(line: 3502, column: 15, scope: !8127)
!8359 = !DILocation(line: 3502, column: 25, scope: !8127)
!8360 = !DILocation(line: 3502, column: 31, scope: !8127)
!8361 = !DILocation(line: 3502, column: 23, scope: !8127)
!8362 = !DILocation(line: 3502, column: 13, scope: !8127)
!8363 = !DILocation(line: 3503, column: 15, scope: !8127)
!8364 = !DILocation(line: 3503, column: 25, scope: !8127)
!8365 = !DILocation(line: 3503, column: 31, scope: !8127)
!8366 = !DILocation(line: 3503, column: 23, scope: !8127)
!8367 = !DILocation(line: 3503, column: 13, scope: !8127)
!8368 = !DILocation(line: 3504, column: 16, scope: !8127)
!8369 = !DILocation(line: 3504, column: 3, scope: !8127)
!8370 = !DILocation(line: 3504, column: 9, scope: !8127)
!8371 = !DILocation(line: 3504, column: 13, scope: !8127)
!8372 = !DILocation(line: 3505, column: 16, scope: !8127)
!8373 = !DILocation(line: 3505, column: 3, scope: !8127)
!8374 = !DILocation(line: 3505, column: 9, scope: !8127)
!8375 = !DILocation(line: 3505, column: 13, scope: !8127)
!8376 = !DILocation(line: 3506, column: 1, scope: !8127)
!8377 = distinct !DISubprogram(name: "queue_check_insert", scope: !63, file: !63, line: 3513, type: !692, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8378 = !DILocalVariable(name: "queue", arg: 1, scope: !8377, file: !63, line: 3513, type: !630)
!8379 = !DILocation(line: 3513, column: 46, scope: !8377)
!8380 = !DILocalVariable(name: "node", arg: 2, scope: !8377, file: !63, line: 3513, type: !577)
!8381 = !DILocation(line: 3513, column: 72, scope: !8377)
!8382 = !DILocation(line: 3515, column: 9, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8377, file: !63, line: 3515, column: 7)
!8384 = !DILocation(line: 3515, column: 15, scope: !8383)
!8385 = !DILocation(line: 3515, column: 7, scope: !8377)
!8386 = !DILocalVariable(name: "lo_avail", scope: !8387, file: !63, line: 3517, type: !102)
!8387 = distinct !DILexicalBlock(scope: !8383, file: !63, line: 3516, column: 5)
!8388 = !DILocation(line: 3517, column: 12, scope: !8387)
!8389 = !DILocation(line: 3517, column: 24, scope: !8387)
!8390 = !DILocation(line: 3517, column: 30, scope: !8387)
!8391 = !DILocation(line: 3517, column: 35, scope: !8387)
!8392 = !DILocation(line: 3517, column: 41, scope: !8387)
!8393 = !DILocation(line: 3517, column: 33, scope: !8387)
!8394 = !DILocation(line: 3517, column: 49, scope: !8387)
!8395 = !DILocalVariable(name: "hi_avail", scope: !8387, file: !63, line: 3518, type: !102)
!8396 = !DILocation(line: 3518, column: 12, scope: !8387)
!8397 = !DILocation(line: 3518, column: 24, scope: !8387)
!8398 = !DILocation(line: 3518, column: 30, scope: !8387)
!8399 = !DILocation(line: 3518, column: 35, scope: !8387)
!8400 = !DILocation(line: 3518, column: 41, scope: !8387)
!8401 = !DILocation(line: 3518, column: 33, scope: !8387)
!8402 = !DILocation(line: 3518, column: 49, scope: !8387)
!8403 = !DILocation(line: 3519, column: 11, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8387, file: !63, line: 3519, column: 11)
!8405 = !DILocation(line: 3519, column: 11, scope: !8387)
!8406 = !DILocation(line: 3519, column: 22, scope: !8404)
!8407 = !DILocation(line: 3519, column: 31, scope: !8404)
!8408 = !DILocation(line: 3519, column: 36, scope: !8404)
!8409 = !DILocation(line: 3519, column: 42, scope: !8404)
!8410 = !DILocation(line: 3519, column: 48, scope: !8404)
!8411 = !DILocation(line: 3519, column: 57, scope: !8404)
!8412 = !DILocation(line: 3519, column: 62, scope: !8404)
!8413 = !DILocation(line: 3519, column: 68, scope: !8404)
!8414 = !DILocation(line: 3520, column: 23, scope: !8404)
!8415 = !DILocation(line: 3520, column: 30, scope: !8404)
!8416 = !DILocation(line: 3520, column: 9, scope: !8404)
!8417 = !DILocation(line: 3521, column: 5, scope: !8387)
!8418 = !DILocation(line: 3522, column: 1, scope: !8377)
!8419 = distinct !DISubprogram(name: "queue_check_insert_parent", scope: !63, file: !63, line: 3527, type: !692, scopeLine: 3529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8420 = !DILocalVariable(name: "queue", arg: 1, scope: !8419, file: !63, line: 3527, type: !630)
!8421 = !DILocation(line: 3527, column: 53, scope: !8419)
!8422 = !DILocalVariable(name: "node", arg: 2, scope: !8419, file: !63, line: 3528, type: !577)
!8423 = !DILocation(line: 3528, column: 47, scope: !8419)
!8424 = !DILocation(line: 3530, column: 7, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8419, file: !63, line: 3530, column: 7)
!8426 = !DILocation(line: 3530, column: 13, scope: !8425)
!8427 = !DILocation(line: 3530, column: 19, scope: !8425)
!8428 = !DILocation(line: 3530, column: 7, scope: !8419)
!8429 = !DILocation(line: 3532, column: 18, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8425, file: !63, line: 3531, column: 5)
!8431 = !DILocation(line: 3532, column: 24, scope: !8430)
!8432 = !DILocation(line: 3532, column: 7, scope: !8430)
!8433 = !DILocation(line: 3533, column: 27, scope: !8430)
!8434 = !DILocation(line: 3533, column: 34, scope: !8430)
!8435 = !DILocation(line: 3533, column: 40, scope: !8430)
!8436 = !DILocation(line: 3533, column: 7, scope: !8430)
!8437 = !DILocation(line: 3534, column: 20, scope: !8430)
!8438 = !DILocation(line: 3534, column: 26, scope: !8430)
!8439 = !DILocation(line: 3534, column: 7, scope: !8430)
!8440 = !DILocation(line: 3535, column: 5, scope: !8430)
!8441 = !DILocation(line: 3536, column: 12, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8425, file: !63, line: 3536, column: 12)
!8443 = !DILocation(line: 3536, column: 18, scope: !8442)
!8444 = !DILocation(line: 3536, column: 24, scope: !8442)
!8445 = !DILocation(line: 3536, column: 30, scope: !8442)
!8446 = !DILocation(line: 3536, column: 22, scope: !8442)
!8447 = !DILocation(line: 3536, column: 34, scope: !8442)
!8448 = !DILocation(line: 3536, column: 12, scope: !8425)
!8449 = !DILocation(line: 3540, column: 21, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8442, file: !63, line: 3537, column: 5)
!8451 = !DILocation(line: 3540, column: 28, scope: !8450)
!8452 = !DILocation(line: 3540, column: 34, scope: !8450)
!8453 = !DILocation(line: 3540, column: 7, scope: !8450)
!8454 = !DILocation(line: 3541, column: 5, scope: !8450)
!8455 = !DILocation(line: 3542, column: 1, scope: !8419)
!8456 = distinct !DISubprogram(name: "lock_node", scope: !63, file: !63, line: 3352, type: !698, scopeLine: 3353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8457 = !DILocalVariable(name: "node", arg: 1, scope: !8456, file: !63, line: 3352, type: !577)
!8458 = !DILocation(line: 3352, column: 31, scope: !8456)
!8459 = !DILocation(line: 3354, column: 24, scope: !8456)
!8460 = !DILocation(line: 3354, column: 30, scope: !8456)
!8461 = !DILocation(line: 3354, column: 3, scope: !8456)
!8462 = !DILocation(line: 3355, column: 1, scope: !8456)
!8463 = distinct !DISubprogram(name: "mergelines", scope: !63, file: !63, line: 3148, type: !689, scopeLine: 3150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8464 = !DILocalVariable(name: "t", arg: 1, scope: !8463, file: !63, line: 3148, type: !669)
!8465 = !DILocation(line: 3148, column: 35, scope: !8463)
!8466 = !DILocalVariable(name: "nlines", arg: 2, scope: !8463, file: !63, line: 3148, type: !52)
!8467 = !DILocation(line: 3148, column: 45, scope: !8463)
!8468 = !DILocalVariable(name: "lo", arg: 3, scope: !8463, file: !63, line: 3149, type: !691)
!8469 = !DILocation(line: 3149, column: 41, scope: !8463)
!8470 = !DILocalVariable(name: "nlo", scope: !8463, file: !63, line: 3151, type: !52)
!8471 = !DILocation(line: 3151, column: 10, scope: !8463)
!8472 = !DILocation(line: 3151, column: 16, scope: !8463)
!8473 = !DILocation(line: 3151, column: 23, scope: !8463)
!8474 = !DILocalVariable(name: "nhi", scope: !8463, file: !63, line: 3152, type: !52)
!8475 = !DILocation(line: 3152, column: 10, scope: !8463)
!8476 = !DILocation(line: 3152, column: 16, scope: !8463)
!8477 = !DILocation(line: 3152, column: 25, scope: !8463)
!8478 = !DILocation(line: 3152, column: 23, scope: !8463)
!8479 = !DILocalVariable(name: "hi", scope: !8463, file: !63, line: 3153, type: !462)
!8480 = !DILocation(line: 3153, column: 16, scope: !8463)
!8481 = !DILocation(line: 3153, column: 21, scope: !8463)
!8482 = !DILocation(line: 3153, column: 25, scope: !8463)
!8483 = !DILocation(line: 3153, column: 23, scope: !8463)
!8484 = !DILocation(line: 3155, column: 3, scope: !8463)
!8485 = !DILocation(line: 3156, column: 18, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8463, file: !63, line: 3156, column: 9)
!8487 = !DILocation(line: 3156, column: 21, scope: !8486)
!8488 = !DILocation(line: 3156, column: 26, scope: !8486)
!8489 = !DILocation(line: 3156, column: 29, scope: !8486)
!8490 = !DILocation(line: 3156, column: 9, scope: !8486)
!8491 = !DILocation(line: 3156, column: 34, scope: !8486)
!8492 = !DILocation(line: 3156, column: 9, scope: !8463)
!8493 = !DILocation(line: 3158, column: 10, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8486, file: !63, line: 3157, column: 7)
!8495 = !DILocation(line: 3158, column: 17, scope: !8494)
!8496 = !DILocation(line: 3158, column: 16, scope: !8494)
!8497 = !DILocation(line: 3159, column: 15, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8494, file: !63, line: 3159, column: 13)
!8499 = !DILocation(line: 3159, column: 13, scope: !8494)
!8500 = !DILocation(line: 3163, column: 13, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8498, file: !63, line: 3160, column: 11)
!8502 = !DILocation(line: 3165, column: 7, scope: !8494)
!8503 = !DILocation(line: 3168, column: 10, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8486, file: !63, line: 3167, column: 7)
!8505 = !DILocation(line: 3168, column: 17, scope: !8504)
!8506 = !DILocation(line: 3168, column: 16, scope: !8504)
!8507 = !DILocation(line: 3169, column: 15, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8504, file: !63, line: 3169, column: 13)
!8509 = !DILocation(line: 3169, column: 13, scope: !8504)
!8510 = !DILocation(line: 3171, column: 13, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8508, file: !63, line: 3170, column: 11)
!8512 = !DILocation(line: 3172, column: 16, scope: !8511)
!8513 = !DILocation(line: 3172, column: 23, scope: !8511)
!8514 = !DILocation(line: 3172, column: 22, scope: !8511)
!8515 = !DILocation(line: 3172, column: 15, scope: !8511)
!8516 = !DILocation(line: 3173, column: 20, scope: !8511)
!8517 = distinct !{!8517, !8510, !8518}
!8518 = !DILocation(line: 3173, column: 25, scope: !8511)
!8519 = !DILocation(line: 3175, column: 13, scope: !8511)
!8520 = distinct !{!8520, !8484, !8521}
!8521 = !DILocation(line: 3177, column: 7, scope: !8463)
!8522 = !DILocation(line: 3178, column: 1, scope: !8463)
!8523 = distinct !DISubprogram(name: "init_node", scope: !63, file: !63, line: 3294, type: !664, scopeLine: 3298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8524 = !DILocalVariable(name: "parent", arg: 1, scope: !8523, file: !63, line: 3294, type: !666)
!8525 = !DILocation(line: 3294, column: 40, scope: !8523)
!8526 = !DILocalVariable(name: "node_pool", arg: 2, scope: !8523, file: !63, line: 3295, type: !666)
!8527 = !DILocation(line: 3295, column: 40, scope: !8523)
!8528 = !DILocalVariable(name: "dest", arg: 3, scope: !8523, file: !63, line: 3296, type: !462)
!8529 = !DILocation(line: 3296, column: 25, scope: !8523)
!8530 = !DILocalVariable(name: "nthreads", arg: 4, scope: !8523, file: !63, line: 3296, type: !52)
!8531 = !DILocation(line: 3296, column: 38, scope: !8523)
!8532 = !DILocalVariable(name: "total_lines", arg: 5, scope: !8523, file: !63, line: 3297, type: !52)
!8533 = !DILocation(line: 3297, column: 19, scope: !8523)
!8534 = !DILocalVariable(name: "is_lo_child", arg: 6, scope: !8523, file: !63, line: 3297, type: !102)
!8535 = !DILocation(line: 3297, column: 37, scope: !8523)
!8536 = !DILocalVariable(name: "nlines", scope: !8523, file: !63, line: 3299, type: !52)
!8537 = !DILocation(line: 3299, column: 10, scope: !8523)
!8538 = !DILocation(line: 3299, column: 20, scope: !8523)
!8539 = !DILocation(line: 3299, column: 34, scope: !8523)
!8540 = !DILocation(line: 3299, column: 42, scope: !8523)
!8541 = !DILocation(line: 3299, column: 48, scope: !8523)
!8542 = !DILocation(line: 3299, column: 56, scope: !8523)
!8543 = !DILocalVariable(name: "nlo", scope: !8523, file: !63, line: 3300, type: !52)
!8544 = !DILocation(line: 3300, column: 10, scope: !8523)
!8545 = !DILocation(line: 3300, column: 16, scope: !8523)
!8546 = !DILocation(line: 3300, column: 23, scope: !8523)
!8547 = !DILocalVariable(name: "nhi", scope: !8523, file: !63, line: 3301, type: !52)
!8548 = !DILocation(line: 3301, column: 10, scope: !8523)
!8549 = !DILocation(line: 3301, column: 16, scope: !8523)
!8550 = !DILocation(line: 3301, column: 25, scope: !8523)
!8551 = !DILocation(line: 3301, column: 23, scope: !8523)
!8552 = !DILocalVariable(name: "lo", scope: !8523, file: !63, line: 3302, type: !462)
!8553 = !DILocation(line: 3302, column: 16, scope: !8523)
!8554 = !DILocation(line: 3302, column: 21, scope: !8523)
!8555 = !DILocation(line: 3302, column: 28, scope: !8523)
!8556 = !DILocation(line: 3302, column: 26, scope: !8523)
!8557 = !DILocalVariable(name: "hi", scope: !8523, file: !63, line: 3303, type: !462)
!8558 = !DILocation(line: 3303, column: 16, scope: !8523)
!8559 = !DILocation(line: 3303, column: 21, scope: !8523)
!8560 = !DILocation(line: 3303, column: 26, scope: !8523)
!8561 = !DILocation(line: 3303, column: 24, scope: !8523)
!8562 = !DILocalVariable(name: "parent_end", scope: !8523, file: !63, line: 3304, type: !585)
!8563 = !DILocation(line: 3304, column: 17, scope: !8523)
!8564 = !DILocation(line: 3304, column: 31, scope: !8523)
!8565 = !DILocation(line: 3304, column: 46, scope: !8523)
!8566 = !DILocation(line: 3304, column: 54, scope: !8523)
!8567 = !DILocation(line: 3304, column: 64, scope: !8523)
!8568 = !DILocation(line: 3304, column: 72, scope: !8523)
!8569 = !DILocalVariable(name: "node", scope: !8523, file: !63, line: 3306, type: !577)
!8570 = !DILocation(line: 3306, column: 22, scope: !8523)
!8571 = !DILocation(line: 3306, column: 38, scope: !8523)
!8572 = !DILocation(line: 3307, column: 29, scope: !8523)
!8573 = !DILocation(line: 3307, column: 14, scope: !8523)
!8574 = !DILocation(line: 3307, column: 20, scope: !8523)
!8575 = !DILocation(line: 3307, column: 27, scope: !8523)
!8576 = !DILocation(line: 3307, column: 3, scope: !8523)
!8577 = !DILocation(line: 3307, column: 9, scope: !8523)
!8578 = !DILocation(line: 3307, column: 12, scope: !8523)
!8579 = !DILocation(line: 3308, column: 29, scope: !8523)
!8580 = !DILocation(line: 3308, column: 14, scope: !8523)
!8581 = !DILocation(line: 3308, column: 20, scope: !8523)
!8582 = !DILocation(line: 3308, column: 27, scope: !8523)
!8583 = !DILocation(line: 3308, column: 3, scope: !8523)
!8584 = !DILocation(line: 3308, column: 9, scope: !8523)
!8585 = !DILocation(line: 3308, column: 12, scope: !8523)
!8586 = !DILocation(line: 3309, column: 16, scope: !8523)
!8587 = !DILocation(line: 3309, column: 3, scope: !8523)
!8588 = !DILocation(line: 3309, column: 9, scope: !8523)
!8589 = !DILocation(line: 3309, column: 14, scope: !8523)
!8590 = !DILocation(line: 3310, column: 15, scope: !8523)
!8591 = !DILocation(line: 3310, column: 3, scope: !8523)
!8592 = !DILocation(line: 3310, column: 9, scope: !8523)
!8593 = !DILocation(line: 3310, column: 13, scope: !8523)
!8594 = !DILocation(line: 3311, column: 15, scope: !8523)
!8595 = !DILocation(line: 3311, column: 3, scope: !8523)
!8596 = !DILocation(line: 3311, column: 9, scope: !8523)
!8597 = !DILocation(line: 3311, column: 13, scope: !8523)
!8598 = !DILocation(line: 3312, column: 18, scope: !8523)
!8599 = !DILocation(line: 3312, column: 3, scope: !8523)
!8600 = !DILocation(line: 3312, column: 9, scope: !8523)
!8601 = !DILocation(line: 3312, column: 16, scope: !8523)
!8602 = !DILocation(line: 3313, column: 17, scope: !8523)
!8603 = !DILocation(line: 3313, column: 25, scope: !8523)
!8604 = !DILocation(line: 3313, column: 31, scope: !8523)
!8605 = !DILocation(line: 3313, column: 3, scope: !8523)
!8606 = !DILocation(line: 3313, column: 9, scope: !8523)
!8607 = !DILocation(line: 3313, column: 15, scope: !8523)
!8608 = !DILocation(line: 3314, column: 3, scope: !8523)
!8609 = !DILocation(line: 3314, column: 9, scope: !8523)
!8610 = !DILocation(line: 3314, column: 16, scope: !8523)
!8611 = !DILocation(line: 3315, column: 24, scope: !8523)
!8612 = !DILocation(line: 3315, column: 30, scope: !8523)
!8613 = !DILocation(line: 3315, column: 3, scope: !8523)
!8614 = !DILocation(line: 3317, column: 7, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8523, file: !63, line: 3317, column: 7)
!8616 = !DILocation(line: 3317, column: 16, scope: !8615)
!8617 = !DILocation(line: 3317, column: 7, scope: !8523)
!8618 = !DILocalVariable(name: "lo_threads", scope: !8619, file: !63, line: 3319, type: !52)
!8619 = distinct !DILexicalBlock(scope: !8615, file: !63, line: 3318, column: 5)
!8620 = !DILocation(line: 3319, column: 14, scope: !8619)
!8621 = !DILocation(line: 3319, column: 27, scope: !8619)
!8622 = !DILocation(line: 3319, column: 36, scope: !8619)
!8623 = !DILocalVariable(name: "hi_threads", scope: !8619, file: !63, line: 3320, type: !52)
!8624 = !DILocation(line: 3320, column: 14, scope: !8619)
!8625 = !DILocation(line: 3320, column: 27, scope: !8619)
!8626 = !DILocation(line: 3320, column: 38, scope: !8619)
!8627 = !DILocation(line: 3320, column: 36, scope: !8619)
!8628 = !DILocation(line: 3321, column: 24, scope: !8619)
!8629 = !DILocation(line: 3321, column: 7, scope: !8619)
!8630 = !DILocation(line: 3321, column: 13, scope: !8619)
!8631 = !DILocation(line: 3321, column: 22, scope: !8619)
!8632 = !DILocation(line: 3322, column: 30, scope: !8619)
!8633 = !DILocation(line: 3322, column: 36, scope: !8619)
!8634 = !DILocation(line: 3322, column: 47, scope: !8619)
!8635 = !DILocation(line: 3322, column: 51, scope: !8619)
!8636 = !DILocation(line: 3323, column: 30, scope: !8619)
!8637 = !DILocation(line: 3322, column: 19, scope: !8619)
!8638 = !DILocation(line: 3322, column: 17, scope: !8619)
!8639 = !DILocation(line: 3324, column: 24, scope: !8619)
!8640 = !DILocation(line: 3324, column: 7, scope: !8619)
!8641 = !DILocation(line: 3324, column: 13, scope: !8619)
!8642 = !DILocation(line: 3324, column: 22, scope: !8619)
!8643 = !DILocation(line: 3325, column: 30, scope: !8619)
!8644 = !DILocation(line: 3325, column: 36, scope: !8619)
!8645 = !DILocation(line: 3325, column: 47, scope: !8619)
!8646 = !DILocation(line: 3325, column: 51, scope: !8619)
!8647 = !DILocation(line: 3326, column: 30, scope: !8619)
!8648 = !DILocation(line: 3325, column: 19, scope: !8619)
!8649 = !DILocation(line: 3325, column: 17, scope: !8619)
!8650 = !DILocation(line: 3327, column: 5, scope: !8619)
!8651 = !DILocation(line: 3330, column: 7, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8615, file: !63, line: 3329, column: 5)
!8653 = !DILocation(line: 3330, column: 13, scope: !8652)
!8654 = !DILocation(line: 3330, column: 22, scope: !8652)
!8655 = !DILocation(line: 3331, column: 7, scope: !8652)
!8656 = !DILocation(line: 3331, column: 13, scope: !8652)
!8657 = !DILocation(line: 3331, column: 22, scope: !8652)
!8658 = !DILocation(line: 3333, column: 10, scope: !8523)
!8659 = !DILocation(line: 3333, column: 3, scope: !8523)
!8660 = distinct !DISubprogram(name: "compare_nodes", scope: !63, file: !63, line: 3340, type: !333, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8661 = !DILocalVariable(name: "a", arg: 1, scope: !8660, file: !63, line: 3340, type: !85)
!8662 = !DILocation(line: 3340, column: 28, scope: !8660)
!8663 = !DILocalVariable(name: "b", arg: 2, scope: !8660, file: !63, line: 3340, type: !85)
!8664 = !DILocation(line: 3340, column: 43, scope: !8660)
!8665 = !DILocalVariable(name: "nodea", scope: !8660, file: !63, line: 3342, type: !660)
!8666 = !DILocation(line: 3342, column: 28, scope: !8660)
!8667 = !DILocation(line: 3342, column: 36, scope: !8660)
!8668 = !DILocalVariable(name: "nodeb", scope: !8660, file: !63, line: 3343, type: !660)
!8669 = !DILocation(line: 3343, column: 28, scope: !8660)
!8670 = !DILocation(line: 3343, column: 36, scope: !8660)
!8671 = !DILocation(line: 3344, column: 7, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8660, file: !63, line: 3344, column: 7)
!8673 = !DILocation(line: 3344, column: 14, scope: !8672)
!8674 = !DILocation(line: 3344, column: 23, scope: !8672)
!8675 = !DILocation(line: 3344, column: 30, scope: !8672)
!8676 = !DILocation(line: 3344, column: 20, scope: !8672)
!8677 = !DILocation(line: 3344, column: 7, scope: !8660)
!8678 = !DILocation(line: 3345, column: 15, scope: !8672)
!8679 = !DILocation(line: 3345, column: 22, scope: !8672)
!8680 = !DILocation(line: 3345, column: 28, scope: !8672)
!8681 = !DILocation(line: 3345, column: 35, scope: !8672)
!8682 = !DILocation(line: 3345, column: 26, scope: !8672)
!8683 = !DILocation(line: 3345, column: 43, scope: !8672)
!8684 = !DILocation(line: 3345, column: 50, scope: !8672)
!8685 = !DILocation(line: 3345, column: 56, scope: !8672)
!8686 = !DILocation(line: 3345, column: 63, scope: !8672)
!8687 = !DILocation(line: 3345, column: 54, scope: !8672)
!8688 = !DILocation(line: 3345, column: 40, scope: !8672)
!8689 = !DILocation(line: 3345, column: 7, scope: !8672)
!8690 = !DILocation(line: 3346, column: 10, scope: !8660)
!8691 = !DILocation(line: 3346, column: 17, scope: !8660)
!8692 = !DILocation(line: 3346, column: 25, scope: !8660)
!8693 = !DILocation(line: 3346, column: 32, scope: !8660)
!8694 = !DILocation(line: 3346, column: 23, scope: !8660)
!8695 = !DILocation(line: 3346, column: 3, scope: !8660)
!8696 = !DILocation(line: 3347, column: 1, scope: !8660)
!8697 = distinct !DISubprogram(name: "maybe_create_temp", scope: !63, file: !63, line: 1116, type: !571, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8698 = !DILocalVariable(name: "pfp", arg: 1, scope: !8697, file: !63, line: 1116, type: !526)
!8699 = !DILocation(line: 1116, column: 27, scope: !8697)
!8700 = !DILocalVariable(name: "survive_fd_exhaustion", arg: 2, scope: !8697, file: !63, line: 1116, type: !102)
!8701 = !DILocation(line: 1116, column: 37, scope: !8697)
!8702 = !DILocalVariable(name: "tempfd", scope: !8697, file: !63, line: 1118, type: !5)
!8703 = !DILocation(line: 1118, column: 7, scope: !8697)
!8704 = !DILocalVariable(name: "node", scope: !8697, file: !63, line: 1119, type: !289)
!8705 = !DILocation(line: 1119, column: 20, scope: !8697)
!8706 = !DILocation(line: 1119, column: 54, scope: !8697)
!8707 = !DILocation(line: 1119, column: 27, scope: !8697)
!8708 = !DILocation(line: 1120, column: 9, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8697, file: !63, line: 1120, column: 7)
!8710 = !DILocation(line: 1120, column: 7, scope: !8697)
!8711 = !DILocation(line: 1121, column: 5, scope: !8709)
!8712 = !DILocation(line: 1123, column: 3, scope: !8697)
!8713 = !DILocation(line: 1123, column: 9, scope: !8697)
!8714 = !DILocation(line: 1123, column: 15, scope: !8697)
!8715 = !DILocation(line: 1125, column: 7, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8697, file: !63, line: 1125, column: 7)
!8717 = !DILocation(line: 1125, column: 7, scope: !8697)
!8718 = !DILocalVariable(name: "pipefds", scope: !8719, file: !63, line: 1127, type: !536)
!8719 = distinct !DILexicalBlock(scope: !8716, file: !63, line: 1126, column: 5)
!8720 = !DILocation(line: 1127, column: 11, scope: !8719)
!8721 = !DILocation(line: 1129, column: 30, scope: !8719)
!8722 = !DILocation(line: 1129, column: 19, scope: !8719)
!8723 = !DILocation(line: 1129, column: 7, scope: !8719)
!8724 = !DILocation(line: 1129, column: 13, scope: !8719)
!8725 = !DILocation(line: 1129, column: 17, scope: !8719)
!8726 = !DILocation(line: 1130, column: 15, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8719, file: !63, line: 1130, column: 11)
!8728 = !DILocation(line: 1130, column: 21, scope: !8727)
!8729 = !DILocation(line: 1130, column: 13, scope: !8727)
!8730 = !DILocation(line: 1130, column: 11, scope: !8719)
!8731 = !DILocation(line: 1132, column: 18, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !63, line: 1131, column: 9)
!8733 = !DILocation(line: 1132, column: 11, scope: !8732)
!8734 = !DILocation(line: 1133, column: 18, scope: !8732)
!8735 = !DILocation(line: 1133, column: 11, scope: !8732)
!8736 = !DILocation(line: 1134, column: 20, scope: !8732)
!8737 = !DILocation(line: 1134, column: 18, scope: !8732)
!8738 = !DILocation(line: 1136, column: 26, scope: !8732)
!8739 = !DILocation(line: 1136, column: 11, scope: !8732)
!8740 = !DILocation(line: 1137, column: 9, scope: !8732)
!8741 = !DILocation(line: 1138, column: 16, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8727, file: !63, line: 1138, column: 16)
!8743 = !DILocation(line: 1138, column: 22, scope: !8742)
!8744 = !DILocation(line: 1138, column: 26, scope: !8742)
!8745 = !DILocation(line: 1138, column: 16, scope: !8727)
!8746 = !DILocation(line: 1142, column: 18, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8742, file: !63, line: 1139, column: 9)
!8748 = !DILocation(line: 1142, column: 11, scope: !8747)
!8749 = !DILocation(line: 1143, column: 20, scope: !8747)
!8750 = !DILocation(line: 1143, column: 11, scope: !8747)
!8751 = !DILocation(line: 1144, column: 20, scope: !8747)
!8752 = !DILocation(line: 1144, column: 11, scope: !8747)
!8753 = !DILocation(line: 1146, column: 19, scope: !8747)
!8754 = !DILocation(line: 1146, column: 37, scope: !8747)
!8755 = !DILocation(line: 1146, column: 11, scope: !8747)
!8756 = !DILocation(line: 1148, column: 27, scope: !8747)
!8757 = !DILocation(line: 1148, column: 11, scope: !8747)
!8758 = !DILocation(line: 1150, column: 5, scope: !8719)
!8759 = !DILocation(line: 1152, column: 18, scope: !8697)
!8760 = !DILocation(line: 1152, column: 10, scope: !8697)
!8761 = !DILocation(line: 1152, column: 4, scope: !8697)
!8762 = !DILocation(line: 1152, column: 8, scope: !8697)
!8763 = !DILocation(line: 1153, column: 10, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8697, file: !63, line: 1153, column: 7)
!8765 = !DILocation(line: 1153, column: 9, scope: !8764)
!8766 = !DILocation(line: 1153, column: 7, scope: !8697)
!8767 = !DILocation(line: 1154, column: 15, scope: !8764)
!8768 = !DILocation(line: 1154, column: 52, scope: !8764)
!8769 = !DILocation(line: 1154, column: 58, scope: !8764)
!8770 = !DILocation(line: 1154, column: 5, scope: !8764)
!8771 = !DILocation(line: 1156, column: 10, scope: !8697)
!8772 = !DILocation(line: 1156, column: 3, scope: !8697)
!8773 = !DILocation(line: 1157, column: 1, scope: !8697)
!8774 = !DILocalVariable(name: "pfd", arg: 1, scope: !789, file: !63, line: 841, type: !257)
!8775 = !DILocation(line: 841, column: 24, scope: !789)
!8776 = !DILocalVariable(name: "survive_fd_exhaustion", arg: 2, scope: !789, file: !63, line: 841, type: !102)
!8777 = !DILocation(line: 841, column: 34, scope: !789)
!8778 = !DILocalVariable(name: "fd", scope: !789, file: !63, line: 845, type: !5)
!8779 = !DILocation(line: 845, column: 7, scope: !789)
!8780 = !DILocalVariable(name: "saved_errno", scope: !789, file: !63, line: 846, type: !5)
!8781 = !DILocation(line: 846, column: 7, scope: !789)
!8782 = !DILocalVariable(name: "temp_dir", scope: !789, file: !63, line: 847, type: !87)
!8783 = !DILocation(line: 847, column: 15, scope: !789)
!8784 = !DILocation(line: 847, column: 26, scope: !789)
!8785 = !DILocation(line: 847, column: 36, scope: !789)
!8786 = !DILocalVariable(name: "len", scope: !789, file: !63, line: 848, type: !52)
!8787 = !DILocation(line: 848, column: 10, scope: !789)
!8788 = !DILocation(line: 848, column: 24, scope: !789)
!8789 = !DILocation(line: 848, column: 16, scope: !789)
!8790 = !DILocalVariable(name: "node", scope: !789, file: !63, line: 849, type: !289)
!8791 = !DILocation(line: 849, column: 20, scope: !789)
!8792 = !DILocation(line: 850, column: 14, scope: !789)
!8793 = !DILocation(line: 850, column: 5, scope: !789)
!8794 = !DILocalVariable(name: "file", scope: !789, file: !63, line: 851, type: !7)
!8795 = !DILocation(line: 851, column: 9, scope: !789)
!8796 = !DILocation(line: 851, column: 16, scope: !789)
!8797 = !DILocation(line: 851, column: 22, scope: !789)
!8798 = !DILocalVariable(name: "cs", scope: !789, file: !63, line: 852, type: !342)
!8799 = !DILocation(line: 852, column: 20, scope: !789)
!8800 = !DILocation(line: 854, column: 11, scope: !789)
!8801 = !DILocation(line: 854, column: 17, scope: !789)
!8802 = !DILocation(line: 854, column: 27, scope: !789)
!8803 = !DILocation(line: 854, column: 3, scope: !789)
!8804 = !DILocation(line: 855, column: 11, scope: !789)
!8805 = !DILocation(line: 855, column: 18, scope: !789)
!8806 = !DILocation(line: 855, column: 16, scope: !789)
!8807 = !DILocation(line: 855, column: 3, scope: !789)
!8808 = !DILocation(line: 856, column: 3, scope: !789)
!8809 = !DILocation(line: 856, column: 9, scope: !789)
!8810 = !DILocation(line: 856, column: 14, scope: !789)
!8811 = !DILocation(line: 857, column: 7, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !789, file: !63, line: 857, column: 7)
!8813 = !DILocation(line: 857, column: 27, scope: !8812)
!8814 = !DILocation(line: 857, column: 24, scope: !8812)
!8815 = !DILocation(line: 857, column: 7, scope: !789)
!8816 = !DILocation(line: 858, column: 20, scope: !8812)
!8817 = !DILocation(line: 858, column: 5, scope: !8812)
!8818 = !DILocation(line: 861, column: 3, scope: !789)
!8819 = !DILocation(line: 862, column: 18, scope: !789)
!8820 = !DILocation(line: 862, column: 8, scope: !789)
!8821 = !DILocation(line: 862, column: 6, scope: !789)
!8822 = !DILocation(line: 863, column: 12, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !789, file: !63, line: 863, column: 7)
!8824 = !DILocation(line: 863, column: 9, scope: !8823)
!8825 = !DILocation(line: 863, column: 7, scope: !789)
!8826 = !DILocation(line: 865, column: 19, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !63, line: 864, column: 5)
!8828 = !DILocation(line: 865, column: 8, scope: !8827)
!8829 = !DILocation(line: 865, column: 17, scope: !8827)
!8830 = !DILocation(line: 866, column: 19, scope: !8827)
!8831 = !DILocation(line: 866, column: 25, scope: !8827)
!8832 = !DILocation(line: 866, column: 16, scope: !8827)
!8833 = !DILocation(line: 867, column: 5, scope: !8827)
!8834 = !DILocation(line: 868, column: 17, scope: !789)
!8835 = !DILocation(line: 868, column: 15, scope: !789)
!8836 = !DILocation(line: 869, column: 3, scope: !789)
!8837 = !DILocation(line: 870, column: 11, scope: !789)
!8838 = !DILocation(line: 870, column: 3, scope: !789)
!8839 = !DILocation(line: 870, column: 9, scope: !789)
!8840 = !DILocation(line: 872, column: 7, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !789, file: !63, line: 872, column: 7)
!8842 = !DILocation(line: 872, column: 10, scope: !8841)
!8843 = !DILocation(line: 872, column: 7, scope: !789)
!8844 = !DILocation(line: 874, column: 14, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !63, line: 874, column: 11)
!8846 = distinct !DILexicalBlock(scope: !8841, file: !63, line: 873, column: 5)
!8847 = !DILocation(line: 874, column: 36, scope: !8845)
!8848 = !DILocation(line: 874, column: 39, scope: !8845)
!8849 = !DILocation(line: 874, column: 45, scope: !8845)
!8850 = !DILocation(line: 874, column: 11, scope: !8846)
!8851 = !DILocation(line: 875, column: 9, scope: !8845)
!8852 = !DILocation(line: 877, column: 13, scope: !8846)
!8853 = !DILocation(line: 877, column: 7, scope: !8846)
!8854 = !DILocation(line: 878, column: 12, scope: !8846)
!8855 = !DILocation(line: 879, column: 5, scope: !8846)
!8856 = !DILocation(line: 881, column: 10, scope: !789)
!8857 = !DILocation(line: 881, column: 4, scope: !789)
!8858 = !DILocation(line: 881, column: 8, scope: !789)
!8859 = !DILocation(line: 882, column: 10, scope: !789)
!8860 = !DILocation(line: 882, column: 3, scope: !789)
!8861 = distinct !DISubprogram(name: "pipe_fork", scope: !63, file: !63, line: 1039, type: !556, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8862 = !DILocalVariable(name: "pipefds", arg: 1, scope: !8861, file: !63, line: 1039, type: !257)
!8863 = !DILocation(line: 1039, column: 16, scope: !8861)
!8864 = !DILocalVariable(name: "tries", arg: 2, scope: !8861, file: !63, line: 1039, type: !52)
!8865 = !DILocation(line: 1039, column: 35, scope: !8861)
!8866 = !DILocalVariable(name: "saved_temphead", scope: !8861, file: !63, line: 1042, type: !289)
!8867 = !DILocation(line: 1042, column: 20, scope: !8861)
!8868 = !DILocalVariable(name: "saved_errno", scope: !8861, file: !63, line: 1043, type: !5)
!8869 = !DILocation(line: 1043, column: 7, scope: !8861)
!8870 = !DILocalVariable(name: "wait_retry", scope: !8861, file: !63, line: 1044, type: !370)
!8871 = !DILocation(line: 1044, column: 10, scope: !8861)
!8872 = !DILocalVariable(name: "pid", scope: !8861, file: !63, line: 1045, type: !295)
!8873 = !DILocation(line: 1045, column: 9, scope: !8861)
!8874 = !DILocalVariable(name: "cs", scope: !8861, file: !63, line: 1046, type: !342)
!8875 = !DILocation(line: 1046, column: 20, scope: !8861)
!8876 = !DILocation(line: 1048, column: 14, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8861, file: !63, line: 1048, column: 7)
!8878 = !DILocation(line: 1048, column: 7, scope: !8877)
!8879 = !DILocation(line: 1048, column: 34, scope: !8877)
!8880 = !DILocation(line: 1048, column: 7, scope: !8861)
!8881 = !DILocation(line: 1049, column: 5, scope: !8877)
!8882 = !DILocation(line: 1058, column: 7, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8861, file: !63, line: 1058, column: 7)
!8884 = !DILocation(line: 1058, column: 14, scope: !8883)
!8885 = !DILocation(line: 1058, column: 20, scope: !8883)
!8886 = !DILocation(line: 1058, column: 18, scope: !8883)
!8887 = !DILocation(line: 1058, column: 7, scope: !8861)
!8888 = !DILocation(line: 1059, column: 5, scope: !8883)
!8889 = !DILocation(line: 1061, column: 3, scope: !8861)
!8890 = !DILocation(line: 1061, column: 15, scope: !8861)
!8891 = !DILocation(line: 1065, column: 7, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8861, file: !63, line: 1062, column: 5)
!8893 = !DILocation(line: 1066, column: 24, scope: !8892)
!8894 = !DILocation(line: 1066, column: 22, scope: !8892)
!8895 = !DILocation(line: 1067, column: 16, scope: !8892)
!8896 = !DILocation(line: 1069, column: 13, scope: !8892)
!8897 = !DILocation(line: 1069, column: 11, scope: !8892)
!8898 = !DILocation(line: 1070, column: 21, scope: !8892)
!8899 = !DILocation(line: 1070, column: 19, scope: !8892)
!8900 = !DILocation(line: 1071, column: 11, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8892, file: !63, line: 1071, column: 11)
!8902 = !DILocation(line: 1071, column: 11, scope: !8892)
!8903 = !DILocation(line: 1072, column: 20, scope: !8901)
!8904 = !DILocation(line: 1072, column: 18, scope: !8901)
!8905 = !DILocation(line: 1072, column: 9, scope: !8901)
!8906 = !DILocation(line: 1074, column: 7, scope: !8892)
!8907 = !DILocation(line: 1075, column: 15, scope: !8892)
!8908 = !DILocation(line: 1075, column: 7, scope: !8892)
!8909 = !DILocation(line: 1075, column: 13, scope: !8892)
!8910 = !DILocation(line: 1077, column: 16, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8892, file: !63, line: 1077, column: 11)
!8912 = !DILocation(line: 1077, column: 13, scope: !8911)
!8913 = !DILocation(line: 1077, column: 20, scope: !8911)
!8914 = !DILocation(line: 1077, column: 23, scope: !8911)
!8915 = !DILocation(line: 1077, column: 29, scope: !8911)
!8916 = !DILocation(line: 1077, column: 11, scope: !8892)
!8917 = !DILocation(line: 1078, column: 9, scope: !8911)
!8918 = !DILocation(line: 1081, column: 23, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8911, file: !63, line: 1080, column: 9)
!8920 = !DILocation(line: 1081, column: 11, scope: !8919)
!8921 = !DILocation(line: 1082, column: 22, scope: !8919)
!8922 = !DILocation(line: 1083, column: 11, scope: !8919)
!8923 = distinct !{!8923, !8889, !8924}
!8924 = !DILocation(line: 1085, column: 5, scope: !8861)
!8925 = !DILocation(line: 1087, column: 7, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8861, file: !63, line: 1087, column: 7)
!8927 = !DILocation(line: 1087, column: 11, scope: !8926)
!8928 = !DILocation(line: 1087, column: 7, scope: !8861)
!8929 = !DILocation(line: 1089, column: 21, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8926, file: !63, line: 1088, column: 5)
!8931 = !DILocation(line: 1089, column: 19, scope: !8930)
!8932 = !DILocation(line: 1090, column: 14, scope: !8930)
!8933 = !DILocation(line: 1090, column: 7, scope: !8930)
!8934 = !DILocation(line: 1091, column: 14, scope: !8930)
!8935 = !DILocation(line: 1091, column: 7, scope: !8930)
!8936 = !DILocation(line: 1092, column: 15, scope: !8930)
!8937 = !DILocation(line: 1092, column: 7, scope: !8930)
!8938 = !DILocation(line: 1092, column: 13, scope: !8930)
!8939 = !DILocation(line: 1093, column: 5, scope: !8930)
!8940 = !DILocation(line: 1094, column: 12, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8926, file: !63, line: 1094, column: 12)
!8942 = !DILocation(line: 1094, column: 16, scope: !8941)
!8943 = !DILocation(line: 1094, column: 12, scope: !8926)
!8944 = !DILocation(line: 1096, column: 7, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8941, file: !63, line: 1095, column: 5)
!8946 = !DILocation(line: 1097, column: 7, scope: !8945)
!8947 = !DILocation(line: 1098, column: 5, scope: !8945)
!8948 = !DILocation(line: 1100, column: 5, scope: !8941)
!8949 = !DILocation(line: 1102, column: 10, scope: !8861)
!8950 = !DILocation(line: 1102, column: 3, scope: !8861)
!8951 = !DILocation(line: 1107, column: 1, scope: !8861)
!8952 = distinct !DISubprogram(name: "register_proc", scope: !63, file: !63, line: 732, type: !561, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8953 = !DILocalVariable(name: "temp", arg: 1, scope: !8952, file: !63, line: 732, type: !289)
!8954 = !DILocation(line: 732, column: 33, scope: !8952)
!8955 = !DILocation(line: 734, column: 9, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !63, line: 734, column: 7)
!8957 = !DILocation(line: 734, column: 7, scope: !8952)
!8958 = !DILocation(line: 736, column: 17, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8956, file: !63, line: 735, column: 5)
!8960 = !DILocation(line: 736, column: 15, scope: !8959)
!8961 = !DILocation(line: 740, column: 13, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8959, file: !63, line: 740, column: 11)
!8963 = !DILocation(line: 740, column: 11, scope: !8959)
!8964 = !DILocation(line: 741, column: 9, scope: !8962)
!8965 = !DILocation(line: 742, column: 5, scope: !8959)
!8966 = !DILocation(line: 744, column: 3, scope: !8952)
!8967 = !DILocation(line: 744, column: 9, scope: !8952)
!8968 = !DILocation(line: 744, column: 15, scope: !8952)
!8969 = !DILocation(line: 746, column: 22, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8952, file: !63, line: 746, column: 7)
!8971 = !DILocation(line: 746, column: 31, scope: !8970)
!8972 = !DILocation(line: 746, column: 9, scope: !8970)
!8973 = !DILocation(line: 746, column: 7, scope: !8952)
!8974 = !DILocation(line: 747, column: 5, scope: !8970)
!8975 = !DILocation(line: 748, column: 1, scope: !8952)
!8976 = distinct !DISubprogram(name: "move_fd", scope: !63, file: !63, line: 1023, type: !522, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8977 = !DILocalVariable(name: "oldfd", arg: 1, scope: !8976, file: !63, line: 1023, type: !5)
!8978 = !DILocation(line: 1023, column: 14, scope: !8976)
!8979 = !DILocalVariable(name: "newfd", arg: 2, scope: !8976, file: !63, line: 1023, type: !5)
!8980 = !DILocation(line: 1023, column: 25, scope: !8976)
!8981 = !DILocation(line: 1025, column: 7, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8976, file: !63, line: 1025, column: 7)
!8983 = !DILocation(line: 1025, column: 16, scope: !8982)
!8984 = !DILocation(line: 1025, column: 13, scope: !8982)
!8985 = !DILocation(line: 1025, column: 7, scope: !8976)
!8986 = !DILocation(line: 1028, column: 13, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8982, file: !63, line: 1026, column: 5)
!8988 = !DILocation(line: 1028, column: 20, scope: !8987)
!8989 = !DILocation(line: 1028, column: 7, scope: !8987)
!8990 = !DILocation(line: 1029, column: 14, scope: !8987)
!8991 = !DILocation(line: 1029, column: 7, scope: !8987)
!8992 = !DILocation(line: 1030, column: 5, scope: !8987)
!8993 = !DILocation(line: 1031, column: 1, scope: !8976)
!8994 = distinct !DISubprogram(name: "async_safe_die", scope: !63, file: !63, line: 374, type: !558, scopeLine: 375, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!8995 = !DILocalVariable(name: "errnum", arg: 1, scope: !8994, file: !63, line: 374, type: !5)
!8996 = !DILocation(line: 374, column: 21, scope: !8994)
!8997 = !DILocalVariable(name: "errstr", arg: 2, scope: !8994, file: !63, line: 374, type: !87)
!8998 = !DILocation(line: 374, column: 41, scope: !8994)
!8999 = !DILocalVariable(name: "__x", scope: !9000, file: !63, line: 376, type: !1732)
!9000 = distinct !DILexicalBlock(scope: !8994, file: !63, line: 376, column: 3)
!9001 = !DILocation(line: 376, column: 3, scope: !9000)
!9002 = !DILocation(line: 383, column: 7, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8994, file: !63, line: 383, column: 7)
!9004 = !DILocation(line: 383, column: 7, scope: !8994)
!9005 = !DILocalVariable(name: "errbuf", scope: !9006, file: !63, line: 385, type: !560)
!9006 = distinct !DILexicalBlock(scope: !9003, file: !63, line: 384, column: 5)
!9007 = !DILocation(line: 385, column: 12, scope: !9006)
!9008 = !DILocalVariable(name: "p", scope: !9006, file: !63, line: 386, type: !7)
!9009 = !DILocation(line: 386, column: 13, scope: !9006)
!9010 = !DILocation(line: 386, column: 27, scope: !9006)
!9011 = !DILocation(line: 386, column: 35, scope: !9006)
!9012 = !DILocation(line: 386, column: 17, scope: !9006)
!9013 = !DILocalVariable(name: "__x", scope: !9014, file: !63, line: 387, type: !1732)
!9014 = distinct !DILexicalBlock(scope: !9006, file: !63, line: 387, column: 7)
!9015 = !DILocation(line: 387, column: 7, scope: !9014)
!9016 = !DILocalVariable(name: "__x", scope: !9017, file: !63, line: 388, type: !1732)
!9017 = distinct !DILexicalBlock(scope: !9006, file: !63, line: 388, column: 7)
!9018 = !DILocation(line: 388, column: 7, scope: !9017)
!9019 = !DILocation(line: 389, column: 5, scope: !9006)
!9020 = !DILocalVariable(name: "__x", scope: !9021, file: !63, line: 391, type: !1732)
!9021 = distinct !DILexicalBlock(scope: !8994, file: !63, line: 391, column: 3)
!9022 = !DILocation(line: 391, column: 3, scope: !9021)
!9023 = !DILocation(line: 393, column: 3, scope: !8994)
!9024 = distinct !DISubprogram(name: "proctab_hasher", scope: !63, file: !63, line: 682, type: !563, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9025 = !DILocalVariable(name: "entry", arg: 1, scope: !9024, file: !63, line: 682, type: !85)
!9026 = !DILocation(line: 682, column: 29, scope: !9024)
!9027 = !DILocalVariable(name: "tabsize", arg: 2, scope: !9024, file: !63, line: 682, type: !52)
!9028 = !DILocation(line: 682, column: 43, scope: !9024)
!9029 = !DILocalVariable(name: "node", scope: !9024, file: !63, line: 684, type: !337)
!9030 = !DILocation(line: 684, column: 26, scope: !9024)
!9031 = !DILocation(line: 684, column: 33, scope: !9024)
!9032 = !DILocation(line: 685, column: 10, scope: !9024)
!9033 = !DILocation(line: 685, column: 16, scope: !9024)
!9034 = !DILocation(line: 685, column: 22, scope: !9024)
!9035 = !DILocation(line: 685, column: 20, scope: !9024)
!9036 = !DILocation(line: 685, column: 3, scope: !9024)
!9037 = distinct !DISubprogram(name: "proctab_comparator", scope: !63, file: !63, line: 689, type: !565, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9038 = !DILocalVariable(name: "e1", arg: 1, scope: !9037, file: !63, line: 689, type: !85)
!9039 = !DILocation(line: 689, column: 33, scope: !9037)
!9040 = !DILocalVariable(name: "e2", arg: 2, scope: !9037, file: !63, line: 689, type: !85)
!9041 = !DILocation(line: 689, column: 49, scope: !9037)
!9042 = !DILocalVariable(name: "n1", scope: !9037, file: !63, line: 691, type: !337)
!9043 = !DILocation(line: 691, column: 26, scope: !9037)
!9044 = !DILocation(line: 691, column: 31, scope: !9037)
!9045 = !DILocalVariable(name: "n2", scope: !9037, file: !63, line: 692, type: !337)
!9046 = !DILocation(line: 692, column: 26, scope: !9037)
!9047 = !DILocation(line: 692, column: 31, scope: !9037)
!9048 = !DILocation(line: 693, column: 10, scope: !9037)
!9049 = !DILocation(line: 693, column: 14, scope: !9037)
!9050 = !DILocation(line: 693, column: 21, scope: !9037)
!9051 = !DILocation(line: 693, column: 25, scope: !9037)
!9052 = !DILocation(line: 693, column: 18, scope: !9037)
!9053 = !DILocation(line: 693, column: 3, scope: !9037)
!9054 = distinct !DISubprogram(name: "reap_some", scope: !63, file: !63, line: 789, type: !167, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9055 = !DILocation(line: 791, column: 3, scope: !9054)
!9056 = !DILocation(line: 792, column: 3, scope: !9054)
!9057 = !DILocation(line: 793, column: 1, scope: !9054)
!9058 = distinct !DISubprogram(name: "cs_enter", scope: !63, file: !63, line: 633, type: !339, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9059 = !DILocalVariable(name: "status", arg: 1, scope: !9058, file: !63, line: 633, type: !341)
!9060 = !DILocation(line: 633, column: 29, scope: !9058)
!9061 = !DILocalVariable(name: "ret", scope: !9058, file: !63, line: 635, type: !5)
!9062 = !DILocation(line: 635, column: 7, scope: !9058)
!9063 = !DILocation(line: 635, column: 59, scope: !9058)
!9064 = !DILocation(line: 635, column: 67, scope: !9058)
!9065 = !DILocation(line: 635, column: 13, scope: !9058)
!9066 = !DILocation(line: 636, column: 19, scope: !9058)
!9067 = !DILocation(line: 636, column: 23, scope: !9058)
!9068 = !DILocation(line: 636, column: 3, scope: !9058)
!9069 = !DILocation(line: 636, column: 11, scope: !9058)
!9070 = !DILocation(line: 636, column: 17, scope: !9058)
!9071 = !{!9072, !2500, i64 0}
!9072 = !{!"cs_status", !2500, i64 0, !2631, i64 8}
!9073 = !DILocation(line: 637, column: 1, scope: !9058)
!9074 = distinct !DISubprogram(name: "cs_leave", scope: !63, file: !63, line: 641, type: !346, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9075 = !DILocalVariable(name: "status", arg: 1, scope: !9074, file: !63, line: 641, type: !348)
!9076 = !DILocation(line: 641, column: 35, scope: !9074)
!9077 = !DILocation(line: 643, column: 7, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9074, file: !63, line: 643, column: 7)
!9079 = !DILocation(line: 643, column: 15, scope: !9078)
!9080 = !DILocation(line: 643, column: 7, scope: !9074)
!9081 = !DILocation(line: 646, column: 38, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9078, file: !63, line: 644, column: 5)
!9083 = !DILocation(line: 646, column: 46, scope: !9082)
!9084 = !DILocation(line: 646, column: 7, scope: !9082)
!9085 = !DILocation(line: 647, column: 5, scope: !9082)
!9086 = !DILocation(line: 648, column: 1, scope: !9074)
!9087 = distinct !DISubprogram(name: "reap_exited", scope: !63, file: !63, line: 780, type: !167, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9088 = !DILocation(line: 782, column: 3, scope: !9087)
!9089 = !DILocation(line: 782, column: 14, scope: !9087)
!9090 = !DILocation(line: 782, column: 12, scope: !9087)
!9091 = !DILocation(line: 782, column: 21, scope: !9087)
!9092 = !DILocation(line: 782, column: 24, scope: !9087)
!9093 = !DILocation(line: 0, scope: !9087)
!9094 = !DILocation(line: 783, column: 5, scope: !9087)
!9095 = distinct !{!9095, !9088, !9094}
!9096 = !DILocation(line: 784, column: 1, scope: !9087)
!9097 = distinct !DISubprogram(name: "default_sort_size", scope: !63, file: !63, line: 1461, type: !626, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9098 = !DILocalVariable(name: "size", scope: !9097, file: !63, line: 1467, type: !52)
!9099 = !DILocation(line: 1467, column: 10, scope: !9097)
!9100 = !DILocalVariable(name: "rlimit", scope: !9097, file: !63, line: 1468, type: !3794)
!9101 = !DILocation(line: 1468, column: 17, scope: !9097)
!9102 = !DILocation(line: 1469, column: 7, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9097, file: !63, line: 1469, column: 7)
!9104 = !DILocation(line: 1469, column: 40, scope: !9103)
!9105 = !DILocation(line: 1469, column: 45, scope: !9103)
!9106 = !DILocation(line: 1469, column: 55, scope: !9103)
!9107 = !DILocation(line: 1469, column: 66, scope: !9103)
!9108 = !DILocation(line: 1469, column: 64, scope: !9103)
!9109 = !DILocation(line: 1469, column: 7, scope: !9097)
!9110 = !DILocation(line: 1470, column: 19, scope: !9103)
!9111 = !DILocation(line: 1470, column: 10, scope: !9103)
!9112 = !DILocation(line: 1470, column: 5, scope: !9103)
!9113 = !DILocation(line: 1472, column: 7, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9097, file: !63, line: 1472, column: 7)
!9115 = !DILocation(line: 1472, column: 38, scope: !9114)
!9116 = !DILocation(line: 1472, column: 43, scope: !9114)
!9117 = !DILocation(line: 1472, column: 53, scope: !9114)
!9118 = !DILocation(line: 1472, column: 64, scope: !9114)
!9119 = !DILocation(line: 1472, column: 62, scope: !9114)
!9120 = !DILocation(line: 1472, column: 7, scope: !9097)
!9121 = !DILocation(line: 1473, column: 19, scope: !9114)
!9122 = !DILocation(line: 1473, column: 10, scope: !9114)
!9123 = !DILocation(line: 1473, column: 5, scope: !9114)
!9124 = !DILocation(line: 1478, column: 8, scope: !9097)
!9125 = !DILocation(line: 1483, column: 7, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9097, file: !63, line: 1483, column: 7)
!9127 = !DILocation(line: 1483, column: 39, scope: !9126)
!9128 = !DILocation(line: 1483, column: 44, scope: !9126)
!9129 = !DILocation(line: 1483, column: 54, scope: !9126)
!9130 = !DILocation(line: 1483, column: 63, scope: !9126)
!9131 = !DILocation(line: 1483, column: 68, scope: !9126)
!9132 = !DILocation(line: 1483, column: 75, scope: !9126)
!9133 = !DILocation(line: 1483, column: 73, scope: !9126)
!9134 = !DILocation(line: 1483, column: 7, scope: !9097)
!9135 = !DILocation(line: 1484, column: 19, scope: !9126)
!9136 = !DILocation(line: 1484, column: 28, scope: !9126)
!9137 = !DILocation(line: 1484, column: 33, scope: !9126)
!9138 = !DILocation(line: 1484, column: 10, scope: !9126)
!9139 = !DILocation(line: 1484, column: 5, scope: !9126)
!9140 = !DILocalVariable(name: "avail", scope: !9097, file: !63, line: 1489, type: !370)
!9141 = !DILocation(line: 1489, column: 10, scope: !9097)
!9142 = !DILocation(line: 1489, column: 18, scope: !9097)
!9143 = !DILocalVariable(name: "total", scope: !9097, file: !63, line: 1490, type: !370)
!9144 = !DILocation(line: 1490, column: 10, scope: !9097)
!9145 = !DILocation(line: 1490, column: 18, scope: !9097)
!9146 = !DILocalVariable(name: "mem", scope: !9097, file: !63, line: 1491, type: !370)
!9147 = !DILocation(line: 1491, column: 10, scope: !9097)
!9148 = !DILocation(line: 1491, column: 16, scope: !9097)
!9149 = !DILocation(line: 1494, column: 7, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9097, file: !63, line: 1494, column: 7)
!9151 = !DILocation(line: 1494, column: 13, scope: !9150)
!9152 = !DILocation(line: 1494, column: 22, scope: !9150)
!9153 = !DILocation(line: 1494, column: 20, scope: !9150)
!9154 = !DILocation(line: 1494, column: 7, scope: !9097)
!9155 = !DILocation(line: 1495, column: 12, scope: !9150)
!9156 = !DILocation(line: 1495, column: 18, scope: !9150)
!9157 = !DILocation(line: 1495, column: 10, scope: !9150)
!9158 = !DILocation(line: 1495, column: 5, scope: !9150)
!9159 = !DILocation(line: 1500, column: 7, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9097, file: !63, line: 1500, column: 7)
!9161 = !DILocation(line: 1500, column: 13, scope: !9160)
!9162 = !DILocation(line: 1500, column: 11, scope: !9160)
!9163 = !DILocation(line: 1500, column: 7, scope: !9097)
!9164 = !DILocation(line: 1501, column: 12, scope: !9160)
!9165 = !DILocation(line: 1501, column: 10, scope: !9160)
!9166 = !DILocation(line: 1501, column: 5, scope: !9160)
!9167 = !DILocation(line: 1502, column: 10, scope: !9097)
!9168 = !DILocation(line: 1502, column: 3, scope: !9097)
!9169 = distinct !DISubprogram(name: "mergefiles", scope: !63, file: !63, line: 3130, type: !529, scopeLine: 3132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9170 = !DILocalVariable(name: "files", arg: 1, scope: !9169, file: !63, line: 3130, type: !284)
!9171 = !DILocation(line: 3130, column: 30, scope: !9169)
!9172 = !DILocalVariable(name: "ntemps", arg: 2, scope: !9169, file: !63, line: 3130, type: !52)
!9173 = !DILocation(line: 3130, column: 44, scope: !9169)
!9174 = !DILocalVariable(name: "nfiles", arg: 3, scope: !9169, file: !63, line: 3130, type: !52)
!9175 = !DILocation(line: 3130, column: 59, scope: !9169)
!9176 = !DILocalVariable(name: "ofp", arg: 4, scope: !9169, file: !63, line: 3131, type: !277)
!9177 = !DILocation(line: 3131, column: 19, scope: !9169)
!9178 = !DILocalVariable(name: "output_file", arg: 5, scope: !9169, file: !63, line: 3131, type: !87)
!9179 = !DILocation(line: 3131, column: 36, scope: !9169)
!9180 = !DILocalVariable(name: "fps", scope: !9169, file: !63, line: 3133, type: !526)
!9181 = !DILocation(line: 3133, column: 10, scope: !9169)
!9182 = !DILocalVariable(name: "nopened", scope: !9169, file: !63, line: 3134, type: !52)
!9183 = !DILocation(line: 3134, column: 10, scope: !9169)
!9184 = !DILocation(line: 3134, column: 38, scope: !9169)
!9185 = !DILocation(line: 3134, column: 45, scope: !9169)
!9186 = !DILocation(line: 3134, column: 20, scope: !9169)
!9187 = !DILocation(line: 3135, column: 7, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9169, file: !63, line: 3135, column: 7)
!9189 = !DILocation(line: 3135, column: 17, scope: !9188)
!9190 = !DILocation(line: 3135, column: 15, scope: !9188)
!9191 = !DILocation(line: 3135, column: 24, scope: !9188)
!9192 = !DILocation(line: 3135, column: 27, scope: !9188)
!9193 = !DILocation(line: 3135, column: 35, scope: !9188)
!9194 = !DILocation(line: 3135, column: 7, scope: !9169)
!9195 = !DILocation(line: 3136, column: 15, scope: !9188)
!9196 = !DILocation(line: 3136, column: 33, scope: !9188)
!9197 = !DILocation(line: 3136, column: 39, scope: !9188)
!9198 = !DILocation(line: 3136, column: 48, scope: !9188)
!9199 = !DILocation(line: 3136, column: 5, scope: !9188)
!9200 = !DILocation(line: 3137, column: 13, scope: !9169)
!9201 = !DILocation(line: 3137, column: 20, scope: !9169)
!9202 = !DILocation(line: 3137, column: 28, scope: !9169)
!9203 = !DILocation(line: 3137, column: 37, scope: !9169)
!9204 = !DILocation(line: 3137, column: 42, scope: !9169)
!9205 = !DILocation(line: 3137, column: 55, scope: !9169)
!9206 = !DILocation(line: 3137, column: 3, scope: !9169)
!9207 = !DILocation(line: 3138, column: 10, scope: !9169)
!9208 = !DILocation(line: 3138, column: 3, scope: !9169)
!9209 = distinct !DISubprogram(name: "avoid_trashing_input", scope: !63, file: !63, line: 3704, type: !524, scopeLine: 3706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9210 = !DILocalVariable(name: "files", arg: 1, scope: !9209, file: !63, line: 3704, type: !284)
!9211 = !DILocation(line: 3704, column: 40, scope: !9209)
!9212 = !DILocalVariable(name: "ntemps", arg: 2, scope: !9209, file: !63, line: 3704, type: !52)
!9213 = !DILocation(line: 3704, column: 54, scope: !9209)
!9214 = !DILocalVariable(name: "nfiles", arg: 3, scope: !9209, file: !63, line: 3705, type: !52)
!9215 = !DILocation(line: 3705, column: 30, scope: !9209)
!9216 = !DILocalVariable(name: "outfile", arg: 4, scope: !9209, file: !63, line: 3705, type: !87)
!9217 = !DILocation(line: 3705, column: 50, scope: !9209)
!9218 = !DILocalVariable(name: "tempcopy", scope: !9209, file: !63, line: 3707, type: !289)
!9219 = !DILocation(line: 3707, column: 20, scope: !9209)
!9220 = !DILocalVariable(name: "i", scope: !9221, file: !63, line: 3709, type: !52)
!9221 = distinct !DILexicalBlock(scope: !9209, file: !63, line: 3709, column: 3)
!9222 = !DILocation(line: 3709, column: 15, scope: !9221)
!9223 = !DILocation(line: 3709, column: 19, scope: !9221)
!9224 = !DILocation(line: 3709, column: 8, scope: !9221)
!9225 = !DILocation(line: 3709, column: 27, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9221, file: !63, line: 3709, column: 3)
!9227 = !DILocation(line: 3709, column: 31, scope: !9226)
!9228 = !DILocation(line: 3709, column: 29, scope: !9226)
!9229 = !DILocation(line: 3709, column: 3, scope: !9221)
!9230 = !DILocalVariable(name: "is_stdin", scope: !9231, file: !63, line: 3711, type: !102)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !63, line: 3710, column: 5)
!9232 = !DILocation(line: 3711, column: 12, scope: !9231)
!9233 = !DILocation(line: 3711, column: 23, scope: !9231)
!9234 = !DILocalVariable(name: "same", scope: !9231, file: !63, line: 3712, type: !102)
!9235 = !DILocation(line: 3712, column: 12, scope: !9231)
!9236 = !DILocalVariable(name: "instat", scope: !9231, file: !63, line: 3713, type: !377)
!9237 = !DILocation(line: 3713, column: 19, scope: !9231)
!9238 = !DILocation(line: 3715, column: 11, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9231, file: !63, line: 3715, column: 11)
!9240 = !DILocation(line: 3715, column: 19, scope: !9239)
!9241 = !DILocation(line: 3715, column: 22, scope: !9239)
!9242 = !DILocation(line: 3715, column: 53, scope: !9239)
!9243 = !DILocation(line: 3715, column: 57, scope: !9239)
!9244 = !DILocation(line: 3715, column: 11, scope: !9231)
!9245 = !DILocation(line: 3716, column: 14, scope: !9239)
!9246 = !DILocation(line: 3716, column: 9, scope: !9239)
!9247 = !DILocalVariable(name: "outst", scope: !9248, file: !63, line: 3719, type: !376)
!9248 = distinct !DILexicalBlock(scope: !9239, file: !63, line: 3718, column: 9)
!9249 = !DILocation(line: 3719, column: 24, scope: !9248)
!9250 = !DILocation(line: 3719, column: 32, scope: !9248)
!9251 = !DILocation(line: 3720, column: 16, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9248, file: !63, line: 3720, column: 15)
!9253 = !DILocation(line: 3720, column: 15, scope: !9248)
!9254 = !DILocation(line: 3721, column: 13, scope: !9252)
!9255 = !DILocation(line: 3723, column: 21, scope: !9248)
!9256 = !DILocation(line: 3724, column: 23, scope: !9248)
!9257 = !DILocation(line: 3725, column: 29, scope: !9248)
!9258 = !DILocation(line: 3725, column: 35, scope: !9248)
!9259 = !DILocation(line: 3725, column: 38, scope: !9248)
!9260 = !DILocation(line: 3725, column: 23, scope: !9248)
!9261 = !DILocation(line: 3726, column: 20, scope: !9248)
!9262 = !DILocation(line: 3727, column: 19, scope: !9248)
!9263 = !DILocation(line: 3727, column: 22, scope: !9248)
!9264 = !{!5317, !2517, i64 8}
!9265 = !{!5317, !2517, i64 0}
!9266 = !DILocation(line: 0, scope: !9248)
!9267 = !DILocation(line: 3723, column: 16, scope: !9248)
!9268 = !DILocation(line: 3730, column: 11, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9231, file: !63, line: 3730, column: 11)
!9270 = !DILocation(line: 3730, column: 11, scope: !9231)
!9271 = !DILocation(line: 3732, column: 17, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !63, line: 3732, column: 15)
!9273 = distinct !DILexicalBlock(scope: !9269, file: !63, line: 3731, column: 9)
!9274 = !DILocation(line: 3732, column: 15, scope: !9273)
!9275 = !DILocalVariable(name: "tftp", scope: !9276, file: !63, line: 3734, type: !277)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !63, line: 3733, column: 13)
!9277 = !DILocation(line: 3734, column: 21, scope: !9276)
!9278 = !DILocation(line: 3735, column: 26, scope: !9276)
!9279 = !DILocation(line: 3735, column: 24, scope: !9276)
!9280 = !DILocation(line: 3736, column: 28, scope: !9276)
!9281 = !DILocation(line: 3736, column: 34, scope: !9276)
!9282 = !DILocation(line: 3736, column: 44, scope: !9276)
!9283 = !DILocation(line: 3736, column: 50, scope: !9276)
!9284 = !DILocation(line: 3736, column: 60, scope: !9276)
!9285 = !DILocation(line: 3736, column: 15, scope: !9276)
!9286 = !DILocation(line: 3737, column: 13, scope: !9276)
!9287 = !DILocation(line: 3739, column: 27, scope: !9273)
!9288 = !DILocation(line: 3739, column: 37, scope: !9273)
!9289 = !DILocation(line: 3739, column: 11, scope: !9273)
!9290 = !DILocation(line: 3739, column: 17, scope: !9273)
!9291 = !DILocation(line: 3739, column: 20, scope: !9273)
!9292 = !DILocation(line: 3739, column: 25, scope: !9273)
!9293 = !DILocation(line: 3740, column: 27, scope: !9273)
!9294 = !DILocation(line: 3740, column: 11, scope: !9273)
!9295 = !DILocation(line: 3740, column: 17, scope: !9273)
!9296 = !DILocation(line: 3740, column: 20, scope: !9273)
!9297 = !DILocation(line: 3740, column: 25, scope: !9273)
!9298 = !DILocation(line: 3741, column: 9, scope: !9273)
!9299 = !DILocation(line: 3742, column: 5, scope: !9231)
!9300 = !DILocation(line: 3709, column: 40, scope: !9226)
!9301 = !DILocation(line: 3709, column: 3, scope: !9226)
!9302 = distinct !{!9302, !9229, !9303}
!9303 = !DILocation(line: 3742, column: 5, scope: !9221)
!9304 = !DILocation(line: 3743, column: 1, scope: !9209)
!9305 = distinct !DISubprogram(name: "open_input_files", scope: !63, file: !63, line: 2904, type: !531, scopeLine: 2905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9306 = !DILocalVariable(name: "files", arg: 1, scope: !9305, file: !63, line: 2904, type: !284)
!9307 = !DILocation(line: 2904, column: 36, scope: !9305)
!9308 = !DILocalVariable(name: "nfiles", arg: 2, scope: !9305, file: !63, line: 2904, type: !52)
!9309 = !DILocation(line: 2904, column: 50, scope: !9305)
!9310 = !DILocalVariable(name: "pfps", arg: 3, scope: !9305, file: !63, line: 2904, type: !533)
!9311 = !DILocation(line: 2904, column: 66, scope: !9305)
!9312 = !DILocalVariable(name: "fps", scope: !9305, file: !63, line: 2906, type: !526)
!9313 = !DILocation(line: 2906, column: 10, scope: !9305)
!9314 = !DILocation(line: 2906, column: 34, scope: !9305)
!9315 = !DILocation(line: 2906, column: 24, scope: !9305)
!9316 = !DILocation(line: 2906, column: 17, scope: !9305)
!9317 = !DILocation(line: 2906, column: 22, scope: !9305)
!9318 = !DILocalVariable(name: "i", scope: !9305, file: !63, line: 2907, type: !5)
!9319 = !DILocation(line: 2907, column: 7, scope: !9305)
!9320 = !DILocation(line: 2910, column: 10, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9305, file: !63, line: 2910, column: 3)
!9322 = !DILocation(line: 2910, column: 8, scope: !9321)
!9323 = !DILocation(line: 2910, column: 15, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9321, file: !63, line: 2910, column: 3)
!9325 = !DILocation(line: 2910, column: 19, scope: !9324)
!9326 = !DILocation(line: 2910, column: 17, scope: !9324)
!9327 = !DILocation(line: 2910, column: 3, scope: !9321)
!9328 = !DILocation(line: 2912, column: 17, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9324, file: !63, line: 2911, column: 5)
!9330 = !DILocation(line: 2912, column: 23, scope: !9329)
!9331 = !DILocation(line: 2912, column: 26, scope: !9329)
!9332 = !DILocation(line: 2912, column: 31, scope: !9329)
!9333 = !DILocation(line: 2912, column: 34, scope: !9329)
!9334 = !DILocation(line: 2912, column: 40, scope: !9329)
!9335 = !DILocation(line: 2912, column: 43, scope: !9329)
!9336 = !DILocation(line: 2912, column: 49, scope: !9329)
!9337 = !DILocation(line: 2912, column: 55, scope: !9329)
!9338 = !DILocation(line: 2913, column: 30, scope: !9329)
!9339 = !DILocation(line: 2913, column: 36, scope: !9329)
!9340 = !DILocation(line: 2913, column: 39, scope: !9329)
!9341 = !DILocation(line: 2913, column: 19, scope: !9329)
!9342 = !DILocation(line: 2914, column: 32, scope: !9329)
!9343 = !DILocation(line: 2914, column: 38, scope: !9329)
!9344 = !DILocation(line: 2914, column: 41, scope: !9329)
!9345 = !DILocation(line: 2914, column: 19, scope: !9329)
!9346 = !DILocation(line: 2912, column: 7, scope: !9329)
!9347 = !DILocation(line: 2912, column: 11, scope: !9329)
!9348 = !DILocation(line: 2912, column: 14, scope: !9329)
!9349 = !DILocation(line: 2915, column: 12, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9329, file: !63, line: 2915, column: 11)
!9351 = !DILocation(line: 2915, column: 16, scope: !9350)
!9352 = !DILocation(line: 2915, column: 11, scope: !9329)
!9353 = !DILocation(line: 2916, column: 9, scope: !9350)
!9354 = !DILocation(line: 2917, column: 5, scope: !9329)
!9355 = !DILocation(line: 2910, column: 28, scope: !9324)
!9356 = !DILocation(line: 2910, column: 3, scope: !9324)
!9357 = distinct !{!9357, !9327, !9358}
!9358 = !DILocation(line: 2917, column: 5, scope: !9321)
!9359 = !DILocation(line: 2919, column: 10, scope: !9305)
!9360 = !DILocation(line: 2919, column: 3, scope: !9305)
!9361 = distinct !DISubprogram(name: "stream_open", scope: !63, file: !63, line: 946, type: !374, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9362 = !DILocalVariable(name: "file", arg: 1, scope: !9361, file: !63, line: 946, type: !87)
!9363 = !DILocation(line: 946, column: 26, scope: !9361)
!9364 = !DILocalVariable(name: "how", arg: 2, scope: !9361, file: !63, line: 946, type: !87)
!9365 = !DILocation(line: 946, column: 44, scope: !9361)
!9366 = !DILocalVariable(name: "fp", scope: !9361, file: !63, line: 948, type: !277)
!9367 = !DILocation(line: 948, column: 9, scope: !9361)
!9368 = !DILocation(line: 950, column: 8, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9361, file: !63, line: 950, column: 7)
!9370 = !DILocation(line: 950, column: 7, scope: !9369)
!9371 = !DILocation(line: 950, column: 12, scope: !9369)
!9372 = !DILocation(line: 950, column: 7, scope: !9361)
!9373 = !DILocation(line: 952, column: 11, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !63, line: 952, column: 11)
!9375 = distinct !DILexicalBlock(scope: !9369, file: !63, line: 951, column: 5)
!9376 = !DILocation(line: 952, column: 11, scope: !9375)
!9377 = !DILocation(line: 954, column: 27, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !63, line: 953, column: 9)
!9379 = !DILocation(line: 955, column: 16, scope: !9378)
!9380 = !DILocation(line: 955, column: 14, scope: !9378)
!9381 = !DILocation(line: 956, column: 9, scope: !9378)
!9382 = !DILocalVariable(name: "fd", scope: !9383, file: !63, line: 959, type: !5)
!9383 = distinct !DILexicalBlock(scope: !9374, file: !63, line: 958, column: 9)
!9384 = !DILocation(line: 959, column: 15, scope: !9383)
!9385 = !DILocation(line: 959, column: 26, scope: !9383)
!9386 = !DILocation(line: 959, column: 20, scope: !9383)
!9387 = !DILocation(line: 960, column: 16, scope: !9383)
!9388 = !DILocation(line: 960, column: 19, scope: !9383)
!9389 = !DILocation(line: 960, column: 40, scope: !9383)
!9390 = !DILocation(line: 960, column: 44, scope: !9383)
!9391 = !DILocation(line: 960, column: 32, scope: !9383)
!9392 = !DILocation(line: 960, column: 14, scope: !9383)
!9393 = !DILocation(line: 962, column: 16, scope: !9375)
!9394 = !DILocation(line: 962, column: 7, scope: !9375)
!9395 = !DILocation(line: 963, column: 5, scope: !9375)
!9396 = !DILocation(line: 964, column: 13, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9369, file: !63, line: 964, column: 12)
!9398 = !DILocation(line: 964, column: 12, scope: !9397)
!9399 = !DILocation(line: 964, column: 17, scope: !9397)
!9400 = !DILocation(line: 964, column: 12, scope: !9369)
!9401 = !DILocation(line: 966, column: 11, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !63, line: 966, column: 11)
!9403 = distinct !DILexicalBlock(scope: !9397, file: !63, line: 965, column: 5)
!9404 = !DILocation(line: 966, column: 16, scope: !9402)
!9405 = !DILocation(line: 966, column: 19, scope: !9402)
!9406 = !DILocation(line: 966, column: 48, scope: !9402)
!9407 = !DILocation(line: 966, column: 11, scope: !9403)
!9408 = !DILocalVariable(name: "ftruncate_errno", scope: !9409, file: !63, line: 968, type: !5)
!9409 = distinct !DILexicalBlock(scope: !9402, file: !63, line: 967, column: 9)
!9410 = !DILocation(line: 968, column: 15, scope: !9409)
!9411 = !DILocation(line: 968, column: 33, scope: !9409)
!9412 = !DILocalVariable(name: "outst", scope: !9409, file: !63, line: 969, type: !376)
!9413 = !DILocation(line: 969, column: 24, scope: !9409)
!9414 = !DILocation(line: 969, column: 32, scope: !9409)
!9415 = !DILocation(line: 970, column: 16, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9409, file: !63, line: 970, column: 15)
!9417 = !DILocation(line: 970, column: 22, scope: !9416)
!9418 = !DILocation(line: 970, column: 25, scope: !9416)
!9419 = !DILocation(line: 970, column: 50, scope: !9416)
!9420 = !DILocation(line: 970, column: 53, scope: !9416)
!9421 = !DILocation(line: 970, column: 15, scope: !9409)
!9422 = !DILocation(line: 971, column: 13, scope: !9416)
!9423 = !DILocation(line: 973, column: 9, scope: !9409)
!9424 = !DILocation(line: 974, column: 12, scope: !9403)
!9425 = !DILocation(line: 974, column: 10, scope: !9403)
!9426 = !DILocation(line: 975, column: 5, scope: !9403)
!9427 = !DILocation(line: 977, column: 5, scope: !9397)
!9428 = !DILocation(line: 979, column: 10, scope: !9361)
!9429 = !DILocation(line: 979, column: 3, scope: !9361)
!9430 = distinct !DISubprogram(name: "mergefps", scope: !63, file: !63, line: 2931, type: !567, scopeLine: 2933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9431 = !DILocalVariable(name: "files", arg: 1, scope: !9430, file: !63, line: 2931, type: !284)
!9432 = !DILocation(line: 2931, column: 28, scope: !9430)
!9433 = !DILocalVariable(name: "ntemps", arg: 2, scope: !9430, file: !63, line: 2931, type: !52)
!9434 = !DILocation(line: 2931, column: 42, scope: !9430)
!9435 = !DILocalVariable(name: "nfiles", arg: 3, scope: !9430, file: !63, line: 2931, type: !52)
!9436 = !DILocation(line: 2931, column: 57, scope: !9430)
!9437 = !DILocalVariable(name: "ofp", arg: 4, scope: !9430, file: !63, line: 2932, type: !277)
!9438 = !DILocation(line: 2932, column: 17, scope: !9430)
!9439 = !DILocalVariable(name: "output_file", arg: 5, scope: !9430, file: !63, line: 2932, type: !87)
!9440 = !DILocation(line: 2932, column: 34, scope: !9430)
!9441 = !DILocalVariable(name: "fps", arg: 6, scope: !9430, file: !63, line: 2932, type: !526)
!9442 = !DILocation(line: 2932, column: 54, scope: !9430)
!9443 = !DILocalVariable(name: "buffer", scope: !9430, file: !63, line: 2934, type: !450)
!9444 = !DILocation(line: 2934, column: 18, scope: !9430)
!9445 = !DILocation(line: 2934, column: 37, scope: !9430)
!9446 = !DILocation(line: 2934, column: 27, scope: !9430)
!9447 = !DILocalVariable(name: "saved", scope: !9430, file: !63, line: 2936, type: !442)
!9448 = !DILocation(line: 2936, column: 15, scope: !9430)
!9449 = !DILocalVariable(name: "savedline", scope: !9430, file: !63, line: 2937, type: !440)
!9450 = !DILocation(line: 2937, column: 22, scope: !9430)
!9451 = !DILocalVariable(name: "savealloc", scope: !9430, file: !63, line: 2939, type: !52)
!9452 = !DILocation(line: 2939, column: 10, scope: !9430)
!9453 = !DILocalVariable(name: "cur", scope: !9430, file: !63, line: 2940, type: !569)
!9454 = !DILocation(line: 2940, column: 23, scope: !9430)
!9455 = !DILocation(line: 2940, column: 39, scope: !9430)
!9456 = !DILocation(line: 2940, column: 29, scope: !9430)
!9457 = !DILocalVariable(name: "base", scope: !9430, file: !63, line: 2942, type: !569)
!9458 = !DILocation(line: 2942, column: 23, scope: !9430)
!9459 = !DILocation(line: 2942, column: 40, scope: !9430)
!9460 = !DILocation(line: 2942, column: 30, scope: !9430)
!9461 = !DILocalVariable(name: "ord", scope: !9430, file: !63, line: 2944, type: !354)
!9462 = !DILocation(line: 2944, column: 11, scope: !9430)
!9463 = !DILocation(line: 2944, column: 27, scope: !9430)
!9464 = !DILocation(line: 2944, column: 17, scope: !9430)
!9465 = !DILocalVariable(name: "i", scope: !9430, file: !63, line: 2948, type: !52)
!9466 = !DILocation(line: 2948, column: 10, scope: !9430)
!9467 = !DILocalVariable(name: "j", scope: !9430, file: !63, line: 2949, type: !52)
!9468 = !DILocation(line: 2949, column: 10, scope: !9430)
!9469 = !DILocalVariable(name: "t", scope: !9430, file: !63, line: 2950, type: !52)
!9470 = !DILocation(line: 2950, column: 10, scope: !9430)
!9471 = !DILocalVariable(name: "key", scope: !9430, file: !63, line: 2951, type: !416)
!9472 = !DILocation(line: 2951, column: 26, scope: !9430)
!9473 = !DILocation(line: 2951, column: 32, scope: !9430)
!9474 = !DILocation(line: 2952, column: 9, scope: !9430)
!9475 = !DILocation(line: 2952, column: 14, scope: !9430)
!9476 = !DILocation(line: 2955, column: 10, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9430, file: !63, line: 2955, column: 3)
!9478 = !DILocation(line: 2955, column: 8, scope: !9477)
!9479 = !DILocation(line: 2955, column: 15, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9477, file: !63, line: 2955, column: 3)
!9481 = !DILocation(line: 2955, column: 19, scope: !9480)
!9482 = !DILocation(line: 2955, column: 17, scope: !9480)
!9483 = !DILocation(line: 2955, column: 3, scope: !9477)
!9484 = !DILocation(line: 2957, column: 17, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9480, file: !63, line: 2956, column: 5)
!9486 = !DILocation(line: 2957, column: 24, scope: !9485)
!9487 = !DILocation(line: 2958, column: 16, scope: !9485)
!9488 = !DILocation(line: 2957, column: 7, scope: !9485)
!9489 = !DILocation(line: 2959, column: 21, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9485, file: !63, line: 2959, column: 11)
!9491 = !DILocation(line: 2959, column: 28, scope: !9490)
!9492 = !DILocation(line: 2959, column: 32, scope: !9490)
!9493 = !DILocation(line: 2959, column: 36, scope: !9490)
!9494 = !DILocation(line: 2959, column: 40, scope: !9490)
!9495 = !DILocation(line: 2959, column: 46, scope: !9490)
!9496 = !DILocation(line: 2959, column: 49, scope: !9490)
!9497 = !DILocation(line: 2959, column: 11, scope: !9490)
!9498 = !DILocation(line: 2959, column: 11, scope: !9485)
!9499 = !DILocalVariable(name: "linelim", scope: !9500, file: !63, line: 2961, type: !440)
!9500 = distinct !DILexicalBlock(scope: !9490, file: !63, line: 2960, column: 9)
!9501 = !DILocation(line: 2961, column: 30, scope: !9500)
!9502 = !DILocation(line: 2961, column: 57, scope: !9500)
!9503 = !DILocation(line: 2961, column: 64, scope: !9500)
!9504 = !DILocation(line: 2961, column: 40, scope: !9500)
!9505 = !DILocation(line: 2962, column: 20, scope: !9500)
!9506 = !DILocation(line: 2962, column: 28, scope: !9500)
!9507 = !DILocation(line: 2962, column: 11, scope: !9500)
!9508 = !DILocation(line: 2962, column: 15, scope: !9500)
!9509 = !DILocation(line: 2962, column: 18, scope: !9500)
!9510 = !DILocation(line: 2963, column: 21, scope: !9500)
!9511 = !DILocation(line: 2963, column: 31, scope: !9500)
!9512 = !DILocation(line: 2963, column: 38, scope: !9500)
!9513 = !DILocation(line: 2963, column: 41, scope: !9500)
!9514 = !DILocation(line: 2963, column: 29, scope: !9500)
!9515 = !DILocation(line: 2963, column: 11, scope: !9500)
!9516 = !DILocation(line: 2963, column: 16, scope: !9500)
!9517 = !DILocation(line: 2963, column: 19, scope: !9500)
!9518 = !DILocation(line: 2964, column: 12, scope: !9500)
!9519 = !DILocation(line: 2965, column: 9, scope: !9500)
!9520 = !DILocation(line: 2969, column: 20, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9490, file: !63, line: 2967, column: 9)
!9522 = !DILocation(line: 2969, column: 24, scope: !9521)
!9523 = !DILocation(line: 2969, column: 28, scope: !9521)
!9524 = !DILocation(line: 2969, column: 34, scope: !9521)
!9525 = !DILocation(line: 2969, column: 37, scope: !9521)
!9526 = !DILocation(line: 2969, column: 11, scope: !9521)
!9527 = !DILocation(line: 2970, column: 15, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9521, file: !63, line: 2970, column: 15)
!9529 = !DILocation(line: 2970, column: 19, scope: !9528)
!9530 = !DILocation(line: 2970, column: 17, scope: !9528)
!9531 = !DILocation(line: 2970, column: 15, scope: !9521)
!9532 = !DILocation(line: 2972, column: 21, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9528, file: !63, line: 2971, column: 13)
!9534 = !DILocation(line: 2973, column: 24, scope: !9533)
!9535 = !DILocation(line: 2973, column: 30, scope: !9533)
!9536 = !DILocation(line: 2973, column: 33, scope: !9533)
!9537 = !DILocation(line: 2973, column: 15, scope: !9533)
!9538 = !DILocation(line: 2974, column: 13, scope: !9533)
!9539 = !DILocation(line: 2975, column: 17, scope: !9521)
!9540 = !DILocation(line: 2975, column: 24, scope: !9521)
!9541 = !DILocation(line: 2975, column: 27, scope: !9521)
!9542 = !DILocation(line: 2975, column: 11, scope: !9521)
!9543 = !DILocation(line: 2976, column: 11, scope: !9521)
!9544 = !DILocation(line: 2977, column: 20, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9521, file: !63, line: 2977, column: 11)
!9546 = !DILocation(line: 2977, column: 18, scope: !9545)
!9547 = !DILocation(line: 2977, column: 16, scope: !9545)
!9548 = !DILocation(line: 2977, column: 23, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9545, file: !63, line: 2977, column: 11)
!9550 = !DILocation(line: 2977, column: 27, scope: !9549)
!9551 = !DILocation(line: 2977, column: 25, scope: !9549)
!9552 = !DILocation(line: 2977, column: 11, scope: !9545)
!9553 = !DILocation(line: 2979, column: 15, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9549, file: !63, line: 2978, column: 13)
!9555 = !DILocation(line: 2979, column: 21, scope: !9554)
!9556 = !DILocation(line: 2979, column: 26, scope: !9554)
!9557 = !DILocation(line: 2979, column: 32, scope: !9554)
!9558 = !DILocation(line: 2979, column: 34, scope: !9554)
!9559 = !{i64 0, i64 8, !2355, i64 8, i64 8, !2355}
!9560 = !DILocation(line: 2980, column: 24, scope: !9554)
!9561 = !DILocation(line: 2980, column: 28, scope: !9554)
!9562 = !DILocation(line: 2980, column: 30, scope: !9554)
!9563 = !DILocation(line: 2980, column: 15, scope: !9554)
!9564 = !DILocation(line: 2980, column: 19, scope: !9554)
!9565 = !DILocation(line: 2980, column: 22, scope: !9554)
!9566 = !DILocation(line: 2981, column: 13, scope: !9554)
!9567 = !DILocation(line: 2977, column: 35, scope: !9549)
!9568 = !DILocation(line: 2977, column: 11, scope: !9549)
!9569 = distinct !{!9569, !9552, !9570}
!9570 = !DILocation(line: 2981, column: 13, scope: !9545)
!9571 = !DILocation(line: 2955, column: 3, scope: !9480)
!9572 = distinct !{!9572, !9483, !9573}
!9573 = !DILocation(line: 2983, column: 5, scope: !9477)
!9574 = !DILocation(line: 2988, column: 10, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9430, file: !63, line: 2988, column: 3)
!9576 = !DILocation(line: 2988, column: 8, scope: !9575)
!9577 = !DILocation(line: 2988, column: 15, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9575, file: !63, line: 2988, column: 3)
!9579 = !DILocation(line: 2988, column: 19, scope: !9578)
!9580 = !DILocation(line: 2988, column: 17, scope: !9578)
!9581 = !DILocation(line: 2988, column: 3, scope: !9575)
!9582 = !DILocation(line: 2989, column: 14, scope: !9578)
!9583 = !DILocation(line: 2989, column: 5, scope: !9578)
!9584 = !DILocation(line: 2989, column: 9, scope: !9578)
!9585 = !DILocation(line: 2989, column: 12, scope: !9578)
!9586 = !DILocation(line: 2988, column: 27, scope: !9578)
!9587 = !DILocation(line: 2988, column: 3, scope: !9578)
!9588 = distinct !{!9588, !9581, !9589}
!9589 = !DILocation(line: 2989, column: 14, scope: !9575)
!9590 = !DILocation(line: 2990, column: 10, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9430, file: !63, line: 2990, column: 3)
!9592 = !DILocation(line: 2990, column: 8, scope: !9591)
!9593 = !DILocation(line: 2990, column: 15, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9591, file: !63, line: 2990, column: 3)
!9595 = !DILocation(line: 2990, column: 19, scope: !9594)
!9596 = !DILocation(line: 2990, column: 17, scope: !9594)
!9597 = !DILocation(line: 2990, column: 3, scope: !9591)
!9598 = !DILocation(line: 2991, column: 22, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9594, file: !63, line: 2991, column: 9)
!9600 = !DILocation(line: 2991, column: 26, scope: !9599)
!9601 = !DILocation(line: 2991, column: 30, scope: !9599)
!9602 = !DILocation(line: 2991, column: 32, scope: !9599)
!9603 = !DILocation(line: 2991, column: 39, scope: !9599)
!9604 = !DILocation(line: 2991, column: 43, scope: !9599)
!9605 = !DILocation(line: 2991, column: 47, scope: !9599)
!9606 = !DILocation(line: 2991, column: 13, scope: !9599)
!9607 = !DILocation(line: 2991, column: 11, scope: !9599)
!9608 = !DILocation(line: 2991, column: 9, scope: !9594)
!9609 = !DILocation(line: 2992, column: 11, scope: !9599)
!9610 = !DILocation(line: 2992, column: 15, scope: !9599)
!9611 = !DILocation(line: 2992, column: 17, scope: !9599)
!9612 = !DILocation(line: 2992, column: 9, scope: !9599)
!9613 = !DILocation(line: 2992, column: 36, scope: !9599)
!9614 = !DILocation(line: 2992, column: 40, scope: !9599)
!9615 = !DILocation(line: 2992, column: 23, scope: !9599)
!9616 = !DILocation(line: 2992, column: 27, scope: !9599)
!9617 = !DILocation(line: 2992, column: 29, scope: !9599)
!9618 = !DILocation(line: 2992, column: 34, scope: !9599)
!9619 = !DILocation(line: 2992, column: 53, scope: !9599)
!9620 = !DILocation(line: 2992, column: 44, scope: !9599)
!9621 = !DILocation(line: 2992, column: 48, scope: !9599)
!9622 = !DILocation(line: 2992, column: 51, scope: !9599)
!9623 = !DILocation(line: 2992, column: 58, scope: !9599)
!9624 = !DILocation(line: 2992, column: 7, scope: !9599)
!9625 = !DILocation(line: 2991, column: 50, scope: !9599)
!9626 = !DILocation(line: 2990, column: 27, scope: !9594)
!9627 = !DILocation(line: 2990, column: 3, scope: !9594)
!9628 = distinct !{!9628, !9597, !9629}
!9629 = !DILocation(line: 2992, column: 60, scope: !9591)
!9630 = !DILocation(line: 2995, column: 3, scope: !9430)
!9631 = !DILocation(line: 2995, column: 10, scope: !9430)
!9632 = !DILocalVariable(name: "smallest", scope: !9633, file: !63, line: 2997, type: !440)
!9633 = distinct !DILexicalBlock(scope: !9430, file: !63, line: 2996, column: 5)
!9634 = !DILocation(line: 2997, column: 26, scope: !9633)
!9635 = !DILocation(line: 2997, column: 37, scope: !9633)
!9636 = !DILocation(line: 2997, column: 41, scope: !9633)
!9637 = !DILocation(line: 3001, column: 11, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !63, line: 3001, column: 11)
!9639 = !DILocation(line: 3001, column: 11, scope: !9633)
!9640 = !DILocation(line: 3003, column: 15, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !63, line: 3003, column: 15)
!9642 = distinct !DILexicalBlock(scope: !9638, file: !63, line: 3002, column: 9)
!9643 = !DILocation(line: 3003, column: 25, scope: !9641)
!9644 = !DILocation(line: 3003, column: 37, scope: !9641)
!9645 = !DILocation(line: 3003, column: 48, scope: !9641)
!9646 = !DILocation(line: 3003, column: 28, scope: !9641)
!9647 = !DILocation(line: 3003, column: 15, scope: !9642)
!9648 = !DILocation(line: 3005, column: 25, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9641, file: !63, line: 3004, column: 13)
!9650 = !DILocation(line: 3006, column: 35, scope: !9649)
!9651 = !DILocation(line: 3006, column: 40, scope: !9649)
!9652 = !DILocation(line: 3006, column: 15, scope: !9649)
!9653 = !DILocation(line: 3007, column: 13, scope: !9649)
!9654 = !DILocation(line: 3008, column: 16, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9642, file: !63, line: 3008, column: 15)
!9656 = !DILocation(line: 3008, column: 15, scope: !9642)
!9657 = !DILocation(line: 3010, column: 25, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9655, file: !63, line: 3009, column: 13)
!9659 = !DILocation(line: 3011, column: 19, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9658, file: !63, line: 3011, column: 19)
!9661 = !DILocation(line: 3011, column: 31, scope: !9660)
!9662 = !DILocation(line: 3011, column: 41, scope: !9660)
!9663 = !DILocation(line: 3011, column: 29, scope: !9660)
!9664 = !DILocation(line: 3011, column: 19, scope: !9658)
!9665 = !DILocation(line: 3013, column: 19, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9660, file: !63, line: 3012, column: 17)
!9667 = !DILocation(line: 3014, column: 27, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9666, file: !63, line: 3014, column: 25)
!9669 = !DILocation(line: 3014, column: 25, scope: !9666)
!9670 = !DILocation(line: 3016, column: 37, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9668, file: !63, line: 3015, column: 23)
!9672 = !DILocation(line: 3016, column: 47, scope: !9671)
!9673 = !DILocation(line: 3016, column: 35, scope: !9671)
!9674 = !DILocation(line: 3017, column: 25, scope: !9671)
!9675 = !DILocation(line: 3019, column: 37, scope: !9666)
!9676 = !DILocation(line: 3019, column: 45, scope: !9666)
!9677 = !DILocation(line: 3019, column: 55, scope: !9666)
!9678 = !DILocation(line: 3019, column: 43, scope: !9666)
!9679 = distinct !{!9679, !9665, !9680}
!9680 = !DILocation(line: 3019, column: 61, scope: !9666)
!9681 = !DILocation(line: 3021, column: 31, scope: !9666)
!9682 = !DILocation(line: 3021, column: 19, scope: !9666)
!9683 = !DILocation(line: 3022, column: 41, scope: !9666)
!9684 = !DILocation(line: 3022, column: 32, scope: !9666)
!9685 = !DILocation(line: 3022, column: 25, scope: !9666)
!9686 = !DILocation(line: 3022, column: 30, scope: !9666)
!9687 = !DILocation(line: 3023, column: 17, scope: !9666)
!9688 = !DILocation(line: 3024, column: 30, scope: !9658)
!9689 = !DILocation(line: 3024, column: 40, scope: !9658)
!9690 = !DILocation(line: 3024, column: 21, scope: !9658)
!9691 = !DILocation(line: 3024, column: 28, scope: !9658)
!9692 = !DILocation(line: 3025, column: 29, scope: !9658)
!9693 = !DILocation(line: 3025, column: 35, scope: !9658)
!9694 = !DILocation(line: 3025, column: 45, scope: !9658)
!9695 = !DILocation(line: 3025, column: 57, scope: !9658)
!9696 = !DILocation(line: 3025, column: 15, scope: !9658)
!9697 = !DILocation(line: 3026, column: 19, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9658, file: !63, line: 3026, column: 19)
!9699 = !DILocation(line: 3026, column: 19, scope: !9658)
!9700 = !DILocation(line: 3029, column: 27, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9698, file: !63, line: 3027, column: 17)
!9702 = !DILocation(line: 3029, column: 35, scope: !9701)
!9703 = !DILocation(line: 3029, column: 45, scope: !9701)
!9704 = !DILocation(line: 3029, column: 54, scope: !9701)
!9705 = !DILocation(line: 3029, column: 64, scope: !9701)
!9706 = !DILocation(line: 3029, column: 52, scope: !9701)
!9707 = !DILocation(line: 3029, column: 32, scope: !9701)
!9708 = !DILocation(line: 3028, column: 25, scope: !9701)
!9709 = !DILocation(line: 3028, column: 32, scope: !9701)
!9710 = !DILocation(line: 3031, column: 27, scope: !9701)
!9711 = !DILocation(line: 3031, column: 35, scope: !9701)
!9712 = !DILocation(line: 3031, column: 45, scope: !9701)
!9713 = !DILocation(line: 3031, column: 54, scope: !9701)
!9714 = !DILocation(line: 3031, column: 64, scope: !9701)
!9715 = !DILocation(line: 3031, column: 52, scope: !9701)
!9716 = !DILocation(line: 3031, column: 32, scope: !9701)
!9717 = !DILocation(line: 3030, column: 25, scope: !9701)
!9718 = !DILocation(line: 3030, column: 32, scope: !9701)
!9719 = !DILocation(line: 3032, column: 17, scope: !9701)
!9720 = !DILocation(line: 3033, column: 13, scope: !9658)
!9721 = !DILocation(line: 3034, column: 9, scope: !9642)
!9722 = !DILocation(line: 3036, column: 21, scope: !9638)
!9723 = !DILocation(line: 3036, column: 31, scope: !9638)
!9724 = !DILocation(line: 3036, column: 36, scope: !9638)
!9725 = !DILocation(line: 3036, column: 9, scope: !9638)
!9726 = !DILocation(line: 3039, column: 11, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9633, file: !63, line: 3039, column: 11)
!9728 = !DILocation(line: 3039, column: 16, scope: !9727)
!9729 = !DILocation(line: 3039, column: 26, scope: !9727)
!9730 = !DILocation(line: 3039, column: 24, scope: !9727)
!9731 = !DILocation(line: 3039, column: 11, scope: !9633)
!9732 = !DILocation(line: 3040, column: 23, scope: !9727)
!9733 = !DILocation(line: 3040, column: 32, scope: !9727)
!9734 = !DILocation(line: 3040, column: 9, scope: !9727)
!9735 = !DILocation(line: 3040, column: 13, scope: !9727)
!9736 = !DILocation(line: 3040, column: 21, scope: !9727)
!9737 = !DILocation(line: 3043, column: 25, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9739, file: !63, line: 3043, column: 15)
!9739 = distinct !DILexicalBlock(scope: !9727, file: !63, line: 3042, column: 9)
!9740 = !DILocation(line: 3043, column: 32, scope: !9738)
!9741 = !DILocation(line: 3043, column: 41, scope: !9738)
!9742 = !DILocation(line: 3043, column: 45, scope: !9738)
!9743 = !DILocation(line: 3043, column: 54, scope: !9738)
!9744 = !DILocation(line: 3043, column: 60, scope: !9738)
!9745 = !DILocation(line: 3043, column: 68, scope: !9738)
!9746 = !DILocation(line: 3043, column: 15, scope: !9738)
!9747 = !DILocation(line: 3043, column: 15, scope: !9739)
!9748 = !DILocalVariable(name: "linelim", scope: !9749, file: !63, line: 3045, type: !440)
!9749 = distinct !DILexicalBlock(scope: !9738, file: !63, line: 3044, column: 13)
!9750 = !DILocation(line: 3045, column: 34, scope: !9749)
!9751 = !DILocation(line: 3045, column: 61, scope: !9749)
!9752 = !DILocation(line: 3045, column: 68, scope: !9749)
!9753 = !DILocation(line: 3045, column: 44, scope: !9749)
!9754 = !DILocation(line: 3046, column: 29, scope: !9749)
!9755 = !DILocation(line: 3046, column: 37, scope: !9749)
!9756 = !DILocation(line: 3046, column: 15, scope: !9749)
!9757 = !DILocation(line: 3046, column: 19, scope: !9749)
!9758 = !DILocation(line: 3046, column: 27, scope: !9749)
!9759 = !DILocation(line: 3047, column: 30, scope: !9749)
!9760 = !DILocation(line: 3047, column: 40, scope: !9749)
!9761 = !DILocation(line: 3047, column: 47, scope: !9749)
!9762 = !DILocation(line: 3047, column: 55, scope: !9749)
!9763 = !DILocation(line: 3047, column: 38, scope: !9749)
!9764 = !DILocation(line: 3047, column: 15, scope: !9749)
!9765 = !DILocation(line: 3047, column: 20, scope: !9749)
!9766 = !DILocation(line: 3047, column: 28, scope: !9749)
!9767 = !DILocation(line: 3048, column: 13, scope: !9749)
!9768 = !DILocation(line: 3052, column: 22, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !63, line: 3052, column: 15)
!9770 = distinct !DILexicalBlock(scope: !9738, file: !63, line: 3050, column: 13)
!9771 = !DILocation(line: 3052, column: 20, scope: !9769)
!9772 = !DILocation(line: 3052, column: 27, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9769, file: !63, line: 3052, column: 15)
!9774 = !DILocation(line: 3052, column: 31, scope: !9773)
!9775 = !DILocation(line: 3052, column: 29, scope: !9773)
!9776 = !DILocation(line: 3052, column: 15, scope: !9769)
!9777 = !DILocation(line: 3053, column: 21, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9773, file: !63, line: 3053, column: 21)
!9779 = !DILocation(line: 3053, column: 25, scope: !9778)
!9780 = !DILocation(line: 3053, column: 30, scope: !9778)
!9781 = !DILocation(line: 3053, column: 28, scope: !9778)
!9782 = !DILocation(line: 3053, column: 21, scope: !9773)
!9783 = !DILocation(line: 3054, column: 21, scope: !9778)
!9784 = !DILocation(line: 3054, column: 25, scope: !9778)
!9785 = !DILocation(line: 3054, column: 19, scope: !9778)
!9786 = !DILocation(line: 3053, column: 35, scope: !9778)
!9787 = !DILocation(line: 3052, column: 39, scope: !9773)
!9788 = !DILocation(line: 3052, column: 15, scope: !9773)
!9789 = distinct !{!9789, !9776, !9790}
!9790 = !DILocation(line: 3054, column: 26, scope: !9769)
!9791 = !DILocation(line: 3055, column: 15, scope: !9770)
!9792 = !DILocation(line: 3056, column: 24, scope: !9770)
!9793 = !DILocation(line: 3056, column: 28, scope: !9770)
!9794 = !DILocation(line: 3056, column: 37, scope: !9770)
!9795 = !DILocation(line: 3056, column: 43, scope: !9770)
!9796 = !DILocation(line: 3056, column: 51, scope: !9770)
!9797 = !DILocation(line: 3056, column: 15, scope: !9770)
!9798 = !DILocation(line: 3057, column: 19, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9770, file: !63, line: 3057, column: 19)
!9800 = !DILocation(line: 3057, column: 28, scope: !9799)
!9801 = !DILocation(line: 3057, column: 26, scope: !9799)
!9802 = !DILocation(line: 3057, column: 19, scope: !9770)
!9803 = !DILocation(line: 3059, column: 25, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9799, file: !63, line: 3058, column: 17)
!9805 = !DILocation(line: 3060, column: 28, scope: !9804)
!9806 = !DILocation(line: 3060, column: 34, scope: !9804)
!9807 = !DILocation(line: 3060, column: 42, scope: !9804)
!9808 = !DILocation(line: 3060, column: 19, scope: !9804)
!9809 = !DILocation(line: 3061, column: 17, scope: !9804)
!9810 = !DILocation(line: 3062, column: 21, scope: !9770)
!9811 = !DILocation(line: 3062, column: 28, scope: !9770)
!9812 = !DILocation(line: 3062, column: 36, scope: !9770)
!9813 = !DILocation(line: 3062, column: 15, scope: !9770)
!9814 = !DILocation(line: 3063, column: 24, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9770, file: !63, line: 3063, column: 15)
!9816 = !DILocation(line: 3063, column: 22, scope: !9815)
!9817 = !DILocation(line: 3063, column: 20, scope: !9815)
!9818 = !DILocation(line: 3063, column: 32, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9815, file: !63, line: 3063, column: 15)
!9820 = !DILocation(line: 3063, column: 36, scope: !9819)
!9821 = !DILocation(line: 3063, column: 34, scope: !9819)
!9822 = !DILocation(line: 3063, column: 15, scope: !9815)
!9823 = !DILocation(line: 3065, column: 28, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9819, file: !63, line: 3064, column: 17)
!9825 = !DILocation(line: 3065, column: 32, scope: !9824)
!9826 = !DILocation(line: 3065, column: 34, scope: !9824)
!9827 = !DILocation(line: 3065, column: 19, scope: !9824)
!9828 = !DILocation(line: 3065, column: 23, scope: !9824)
!9829 = !DILocation(line: 3065, column: 26, scope: !9824)
!9830 = !DILocation(line: 3066, column: 19, scope: !9824)
!9831 = !DILocation(line: 3066, column: 25, scope: !9824)
!9832 = !DILocation(line: 3066, column: 30, scope: !9824)
!9833 = !DILocation(line: 3066, column: 36, scope: !9824)
!9834 = !DILocation(line: 3066, column: 38, scope: !9824)
!9835 = !DILocation(line: 3067, column: 19, scope: !9824)
!9836 = !DILocation(line: 3067, column: 26, scope: !9824)
!9837 = !DILocation(line: 3067, column: 31, scope: !9824)
!9838 = !DILocation(line: 3067, column: 38, scope: !9824)
!9839 = !DILocation(line: 3067, column: 40, scope: !9824)
!9840 = !{i64 0, i64 8, !2355, i64 8, i64 8, !2516, i64 16, i64 8, !2516, i64 24, i64 8, !2516, i64 32, i64 8, !2516, i64 40, i64 8, !2516, i64 48, i64 1, !2499}
!9841 = !DILocation(line: 3068, column: 28, scope: !9824)
!9842 = !DILocation(line: 3068, column: 32, scope: !9824)
!9843 = !DILocation(line: 3068, column: 34, scope: !9824)
!9844 = !DILocation(line: 3068, column: 19, scope: !9824)
!9845 = !DILocation(line: 3068, column: 23, scope: !9824)
!9846 = !DILocation(line: 3068, column: 26, scope: !9824)
!9847 = !DILocation(line: 3069, column: 29, scope: !9824)
!9848 = !DILocation(line: 3069, column: 34, scope: !9824)
!9849 = !DILocation(line: 3069, column: 36, scope: !9824)
!9850 = !DILocation(line: 3069, column: 19, scope: !9824)
!9851 = !DILocation(line: 3069, column: 24, scope: !9824)
!9852 = !DILocation(line: 3069, column: 27, scope: !9824)
!9853 = !DILocation(line: 3070, column: 17, scope: !9824)
!9854 = !DILocation(line: 3063, column: 44, scope: !9819)
!9855 = !DILocation(line: 3063, column: 15, scope: !9819)
!9856 = distinct !{!9856, !9822, !9857}
!9857 = !DILocation(line: 3070, column: 17, scope: !9815)
!9858 = !DILocation(line: 3071, column: 22, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9770, file: !63, line: 3071, column: 15)
!9860 = !DILocation(line: 3071, column: 20, scope: !9859)
!9861 = !DILocation(line: 3071, column: 27, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9859, file: !63, line: 3071, column: 15)
!9863 = !DILocation(line: 3071, column: 31, scope: !9862)
!9864 = !DILocation(line: 3071, column: 29, scope: !9862)
!9865 = !DILocation(line: 3071, column: 15, scope: !9859)
!9866 = !DILocation(line: 3072, column: 26, scope: !9862)
!9867 = !DILocation(line: 3072, column: 30, scope: !9862)
!9868 = !DILocation(line: 3072, column: 32, scope: !9862)
!9869 = !DILocation(line: 3072, column: 17, scope: !9862)
!9870 = !DILocation(line: 3072, column: 21, scope: !9862)
!9871 = !DILocation(line: 3072, column: 24, scope: !9862)
!9872 = !DILocation(line: 3071, column: 39, scope: !9862)
!9873 = !DILocation(line: 3071, column: 15, scope: !9862)
!9874 = distinct !{!9874, !9865, !9875}
!9875 = !DILocation(line: 3072, column: 35, scope: !9859)
!9876 = !DILocation(line: 3073, column: 15, scope: !9770)
!9877 = distinct !{!9877, !9630, !9878}
!9878 = !DILocation(line: 3103, column: 5, scope: !9430)
!9879 = !DILocalVariable(name: "lo", scope: !9880, file: !63, line: 3082, type: !52)
!9880 = distinct !DILexicalBlock(scope: !9633, file: !63, line: 3081, column: 7)
!9881 = !DILocation(line: 3082, column: 16, scope: !9880)
!9882 = !DILocalVariable(name: "hi", scope: !9880, file: !63, line: 3083, type: !52)
!9883 = !DILocation(line: 3083, column: 16, scope: !9880)
!9884 = !DILocation(line: 3083, column: 21, scope: !9880)
!9885 = !DILocalVariable(name: "probe", scope: !9880, file: !63, line: 3084, type: !52)
!9886 = !DILocation(line: 3084, column: 16, scope: !9880)
!9887 = !DILocation(line: 3084, column: 24, scope: !9880)
!9888 = !DILocalVariable(name: "ord0", scope: !9880, file: !63, line: 3085, type: !52)
!9889 = !DILocation(line: 3085, column: 16, scope: !9880)
!9890 = !DILocation(line: 3085, column: 23, scope: !9880)
!9891 = !DILocalVariable(name: "count_of_smaller_lines", scope: !9880, file: !63, line: 3086, type: !52)
!9892 = !DILocation(line: 3086, column: 16, scope: !9880)
!9893 = !DILocation(line: 3088, column: 9, scope: !9880)
!9894 = !DILocation(line: 3088, column: 16, scope: !9880)
!9895 = !DILocation(line: 3088, column: 21, scope: !9880)
!9896 = !DILocation(line: 3088, column: 19, scope: !9880)
!9897 = !DILocalVariable(name: "cmp", scope: !9898, file: !63, line: 3090, type: !5)
!9898 = distinct !DILexicalBlock(scope: !9880, file: !63, line: 3089, column: 11)
!9899 = !DILocation(line: 3090, column: 17, scope: !9898)
!9900 = !DILocation(line: 3090, column: 32, scope: !9898)
!9901 = !DILocation(line: 3090, column: 36, scope: !9898)
!9902 = !DILocation(line: 3090, column: 43, scope: !9898)
!9903 = !DILocation(line: 3090, column: 47, scope: !9898)
!9904 = !DILocation(line: 3090, column: 51, scope: !9898)
!9905 = !DILocation(line: 3090, column: 23, scope: !9898)
!9906 = !DILocation(line: 3091, column: 17, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9898, file: !63, line: 3091, column: 17)
!9908 = !DILocation(line: 3091, column: 21, scope: !9907)
!9909 = !DILocation(line: 3091, column: 25, scope: !9907)
!9910 = !DILocation(line: 3091, column: 29, scope: !9907)
!9911 = !DILocation(line: 3091, column: 33, scope: !9907)
!9912 = !DILocation(line: 3091, column: 38, scope: !9907)
!9913 = !DILocation(line: 3091, column: 41, scope: !9907)
!9914 = !DILocation(line: 3091, column: 48, scope: !9907)
!9915 = !DILocation(line: 3091, column: 52, scope: !9907)
!9916 = !DILocation(line: 3091, column: 46, scope: !9907)
!9917 = !DILocation(line: 3091, column: 17, scope: !9898)
!9918 = !DILocation(line: 3092, column: 20, scope: !9907)
!9919 = !DILocation(line: 3092, column: 18, scope: !9907)
!9920 = !DILocation(line: 3092, column: 15, scope: !9907)
!9921 = !DILocation(line: 3094, column: 20, scope: !9907)
!9922 = !DILocation(line: 3094, column: 26, scope: !9907)
!9923 = !DILocation(line: 3094, column: 18, scope: !9907)
!9924 = !DILocation(line: 3095, column: 22, scope: !9898)
!9925 = !DILocation(line: 3095, column: 27, scope: !9898)
!9926 = !DILocation(line: 3095, column: 25, scope: !9898)
!9927 = !DILocation(line: 3095, column: 31, scope: !9898)
!9928 = !DILocation(line: 3095, column: 19, scope: !9898)
!9929 = distinct !{!9929, !9893, !9930}
!9930 = !DILocation(line: 3096, column: 11, scope: !9880)
!9931 = !DILocation(line: 3098, column: 34, scope: !9880)
!9932 = !DILocation(line: 3098, column: 37, scope: !9880)
!9933 = !DILocation(line: 3098, column: 32, scope: !9880)
!9934 = !DILocation(line: 3099, column: 16, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9880, file: !63, line: 3099, column: 9)
!9936 = !DILocation(line: 3099, column: 14, scope: !9935)
!9937 = !DILocation(line: 3099, column: 21, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9935, file: !63, line: 3099, column: 9)
!9939 = !DILocation(line: 3099, column: 25, scope: !9938)
!9940 = !DILocation(line: 3099, column: 23, scope: !9938)
!9941 = !DILocation(line: 3099, column: 9, scope: !9935)
!9942 = !DILocation(line: 3100, column: 20, scope: !9938)
!9943 = !DILocation(line: 3100, column: 24, scope: !9938)
!9944 = !DILocation(line: 3100, column: 26, scope: !9938)
!9945 = !DILocation(line: 3100, column: 11, scope: !9938)
!9946 = !DILocation(line: 3100, column: 15, scope: !9938)
!9947 = !DILocation(line: 3100, column: 18, scope: !9938)
!9948 = !DILocation(line: 3099, column: 50, scope: !9938)
!9949 = !DILocation(line: 3099, column: 9, scope: !9938)
!9950 = distinct !{!9950, !9941, !9951}
!9951 = !DILocation(line: 3100, column: 29, scope: !9935)
!9952 = !DILocation(line: 3101, column: 39, scope: !9880)
!9953 = !DILocation(line: 3101, column: 9, scope: !9880)
!9954 = !DILocation(line: 3101, column: 13, scope: !9880)
!9955 = !DILocation(line: 3101, column: 37, scope: !9880)
!9956 = !DILocation(line: 3105, column: 7, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9430, file: !63, line: 3105, column: 7)
!9958 = !DILocation(line: 3105, column: 14, scope: !9957)
!9959 = !DILocation(line: 3105, column: 17, scope: !9957)
!9960 = !DILocation(line: 3105, column: 7, scope: !9430)
!9961 = !DILocation(line: 3107, column: 27, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9957, file: !63, line: 3106, column: 5)
!9963 = !DILocation(line: 3107, column: 32, scope: !9962)
!9964 = !DILocation(line: 3107, column: 7, scope: !9962)
!9965 = !DILocation(line: 3108, column: 19, scope: !9962)
!9966 = !DILocation(line: 3108, column: 7, scope: !9962)
!9967 = !DILocation(line: 3109, column: 5, scope: !9962)
!9968 = !DILocation(line: 3111, column: 12, scope: !9430)
!9969 = !DILocation(line: 3111, column: 17, scope: !9430)
!9970 = !DILocation(line: 3111, column: 3, scope: !9430)
!9971 = !DILocation(line: 3112, column: 9, scope: !9430)
!9972 = !DILocation(line: 3112, column: 3, scope: !9430)
!9973 = !DILocation(line: 3113, column: 9, scope: !9430)
!9974 = !DILocation(line: 3113, column: 3, scope: !9430)
!9975 = !DILocation(line: 3114, column: 9, scope: !9430)
!9976 = !DILocation(line: 3114, column: 3, scope: !9430)
!9977 = !DILocation(line: 3115, column: 9, scope: !9430)
!9978 = !DILocation(line: 3115, column: 3, scope: !9430)
!9979 = !DILocation(line: 3116, column: 9, scope: !9430)
!9980 = !DILocation(line: 3116, column: 3, scope: !9430)
!9981 = !DILocation(line: 3117, column: 1, scope: !9430)
!9982 = distinct !DISubprogram(name: "zaptemp", scope: !63, file: !63, line: 1242, type: !302, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!9983 = !DILocalVariable(name: "name", arg: 1, scope: !9982, file: !63, line: 1242, type: !87)
!9984 = !DILocation(line: 1242, column: 22, scope: !9982)
!9985 = !DILocalVariable(name: "pnode", scope: !9982, file: !63, line: 1244, type: !570)
!9986 = !DILocation(line: 1244, column: 30, scope: !9982)
!9987 = !DILocalVariable(name: "node", scope: !9982, file: !63, line: 1245, type: !289)
!9988 = !DILocation(line: 1245, column: 20, scope: !9982)
!9989 = !DILocalVariable(name: "next", scope: !9982, file: !63, line: 1246, type: !289)
!9990 = !DILocation(line: 1246, column: 20, scope: !9982)
!9991 = !DILocalVariable(name: "unlink_status", scope: !9982, file: !63, line: 1247, type: !5)
!9992 = !DILocation(line: 1247, column: 7, scope: !9982)
!9993 = !DILocalVariable(name: "unlink_errno", scope: !9982, file: !63, line: 1248, type: !5)
!9994 = !DILocation(line: 1248, column: 7, scope: !9982)
!9995 = !DILocalVariable(name: "cs", scope: !9982, file: !63, line: 1249, type: !342)
!9996 = !DILocation(line: 1249, column: 20, scope: !9982)
!9997 = !DILocation(line: 1251, column: 14, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9982, file: !63, line: 1251, column: 3)
!9999 = !DILocation(line: 1251, column: 8, scope: !9998)
!10000 = !DILocation(line: 1251, column: 36, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9998, file: !63, line: 1251, column: 3)
!10002 = !DILocation(line: 1251, column: 35, scope: !10001)
!10003 = !DILocation(line: 1251, column: 33, scope: !10001)
!10004 = !DILocation(line: 1251, column: 44, scope: !10001)
!10005 = !DILocation(line: 1251, column: 27, scope: !10001)
!10006 = !DILocation(line: 1251, column: 52, scope: !10001)
!10007 = !DILocation(line: 1251, column: 49, scope: !10001)
!10008 = !DILocation(line: 1251, column: 3, scope: !9998)
!10009 = !DILocation(line: 1252, column: 5, scope: !10001)
!10010 = !DILocation(line: 1251, column: 67, scope: !10001)
!10011 = !DILocation(line: 1251, column: 73, scope: !10001)
!10012 = !DILocation(line: 1251, column: 64, scope: !10001)
!10013 = !DILocation(line: 1251, column: 3, scope: !10001)
!10014 = distinct !{!10014, !10008, !10015}
!10015 = !DILocation(line: 1252, column: 5, scope: !9998)
!10016 = !DILocation(line: 1254, column: 7, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9982, file: !63, line: 1254, column: 7)
!10018 = !DILocation(line: 1254, column: 13, scope: !10017)
!10019 = !DILocation(line: 1254, column: 19, scope: !10017)
!10020 = !DILocation(line: 1254, column: 7, scope: !9982)
!10021 = !DILocation(line: 1255, column: 16, scope: !10017)
!10022 = !DILocation(line: 1255, column: 22, scope: !10017)
!10023 = !DILocation(line: 1255, column: 5, scope: !10017)
!10024 = !DILocation(line: 1258, column: 10, scope: !9982)
!10025 = !DILocation(line: 1258, column: 16, scope: !9982)
!10026 = !DILocation(line: 1258, column: 8, scope: !9982)
!10027 = !DILocation(line: 1259, column: 3, scope: !9982)
!10028 = !DILocation(line: 1260, column: 27, scope: !9982)
!10029 = !DILocation(line: 1260, column: 19, scope: !9982)
!10030 = !DILocation(line: 1260, column: 17, scope: !9982)
!10031 = !DILocation(line: 1261, column: 18, scope: !9982)
!10032 = !DILocation(line: 1261, column: 16, scope: !9982)
!10033 = !DILocation(line: 1262, column: 12, scope: !9982)
!10034 = !DILocation(line: 1262, column: 4, scope: !9982)
!10035 = !DILocation(line: 1262, column: 10, scope: !9982)
!10036 = !DILocation(line: 1263, column: 3, scope: !9982)
!10037 = !DILocation(line: 1265, column: 7, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9982, file: !63, line: 1265, column: 7)
!10039 = !DILocation(line: 1265, column: 21, scope: !10038)
!10040 = !DILocation(line: 1265, column: 7, scope: !9982)
!10041 = !DILocation(line: 1266, column: 15, scope: !10038)
!10042 = !DILocation(line: 1266, column: 29, scope: !10038)
!10043 = !DILocation(line: 1266, column: 62, scope: !10038)
!10044 = !DILocation(line: 1266, column: 5, scope: !10038)
!10045 = !DILocation(line: 1267, column: 9, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !9982, file: !63, line: 1267, column: 7)
!10047 = !DILocation(line: 1267, column: 7, scope: !9982)
!10048 = !DILocation(line: 1268, column: 16, scope: !10046)
!10049 = !DILocation(line: 1268, column: 14, scope: !10046)
!10050 = !DILocation(line: 1268, column: 5, scope: !10046)
!10051 = !DILocation(line: 1269, column: 9, scope: !9982)
!10052 = !DILocation(line: 1269, column: 3, scope: !9982)
!10053 = !DILocation(line: 1270, column: 1, scope: !9982)
!10054 = distinct !DISubprogram(name: "wait_proc", scope: !63, file: !63, line: 770, type: !537, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10055 = !DILocalVariable(name: "pid", arg: 1, scope: !10054, file: !63, line: 770, type: !295)
!10056 = !DILocation(line: 770, column: 18, scope: !10054)
!10057 = !DILocation(line: 772, column: 20, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !63, line: 772, column: 7)
!10059 = !DILocation(line: 772, column: 7, scope: !10058)
!10060 = !DILocation(line: 772, column: 7, scope: !10054)
!10061 = !DILocation(line: 773, column: 11, scope: !10058)
!10062 = !DILocation(line: 773, column: 5, scope: !10058)
!10063 = !DILocation(line: 774, column: 1, scope: !10054)
!10064 = !DILocation(line: 892, column: 7, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !770, file: !63, line: 892, column: 7)
!10066 = !DILocation(line: 892, column: 21, scope: !10065)
!10067 = !DILocation(line: 892, column: 7, scope: !770)
!10068 = !DILocation(line: 893, column: 21, scope: !10065)
!10069 = !DILocation(line: 893, column: 53, scope: !10065)
!10070 = !DILocation(line: 893, column: 65, scope: !10065)
!10071 = !DILocation(line: 893, column: 19, scope: !10065)
!10072 = !DILocation(line: 893, column: 5, scope: !10065)
!10073 = !DILocation(line: 894, column: 10, scope: !770)
!10074 = !DILocation(line: 894, column: 24, scope: !770)
!10075 = !DILocation(line: 894, column: 3, scope: !770)
!10076 = distinct !DISubprogram(name: "open_temp", scope: !63, file: !63, line: 1175, type: !534, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10077 = !DILocalVariable(name: "temp", arg: 1, scope: !10076, file: !63, line: 1175, type: !289)
!10078 = !DILocation(line: 1175, column: 29, scope: !10076)
!10079 = !DILocalVariable(name: "tempfd", scope: !10076, file: !63, line: 1177, type: !5)
!10080 = !DILocation(line: 1177, column: 7, scope: !10076)
!10081 = !DILocalVariable(name: "pipefds", scope: !10076, file: !63, line: 1177, type: !536)
!10082 = !DILocation(line: 1177, column: 15, scope: !10076)
!10083 = !DILocalVariable(name: "fp", scope: !10076, file: !63, line: 1178, type: !277)
!10084 = !DILocation(line: 1178, column: 9, scope: !10076)
!10085 = !DILocation(line: 1180, column: 7, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10076, file: !63, line: 1180, column: 7)
!10087 = !DILocation(line: 1180, column: 13, scope: !10086)
!10088 = !DILocation(line: 1180, column: 19, scope: !10086)
!10089 = !DILocation(line: 1180, column: 7, scope: !10076)
!10090 = !DILocation(line: 1181, column: 16, scope: !10086)
!10091 = !DILocation(line: 1181, column: 22, scope: !10086)
!10092 = !DILocation(line: 1181, column: 5, scope: !10086)
!10093 = !DILocation(line: 1183, column: 18, scope: !10076)
!10094 = !DILocation(line: 1183, column: 24, scope: !10076)
!10095 = !DILocation(line: 1183, column: 12, scope: !10076)
!10096 = !DILocation(line: 1183, column: 10, scope: !10076)
!10097 = !DILocation(line: 1184, column: 7, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10076, file: !63, line: 1184, column: 7)
!10099 = !DILocation(line: 1184, column: 14, scope: !10098)
!10100 = !DILocation(line: 1184, column: 7, scope: !10076)
!10101 = !DILocation(line: 1185, column: 5, scope: !10098)
!10102 = !DILocalVariable(name: "child", scope: !10076, file: !63, line: 1187, type: !295)
!10103 = !DILocation(line: 1187, column: 9, scope: !10076)
!10104 = !DILocation(line: 1187, column: 28, scope: !10076)
!10105 = !DILocation(line: 1187, column: 17, scope: !10076)
!10106 = !DILocation(line: 1189, column: 11, scope: !10076)
!10107 = !DILocation(line: 1189, column: 3, scope: !10076)
!10108 = !DILocation(line: 1192, column: 11, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !63, line: 1192, column: 11)
!10110 = distinct !DILexicalBlock(scope: !10076, file: !63, line: 1190, column: 5)
!10111 = !DILocation(line: 1192, column: 17, scope: !10109)
!10112 = !DILocation(line: 1192, column: 11, scope: !10110)
!10113 = !DILocation(line: 1193, column: 9, scope: !10109)
!10114 = !DILocation(line: 1195, column: 14, scope: !10110)
!10115 = !DILocation(line: 1195, column: 7, scope: !10110)
!10116 = !DILocation(line: 1196, column: 7, scope: !10110)
!10117 = !DILocation(line: 1196, column: 13, scope: !10110)
!10118 = !DILocation(line: 1197, column: 7, scope: !10110)
!10119 = !DILocation(line: 1202, column: 14, scope: !10110)
!10120 = !DILocation(line: 1202, column: 7, scope: !10110)
!10121 = !DILocation(line: 1203, column: 16, scope: !10110)
!10122 = !DILocation(line: 1203, column: 7, scope: !10110)
!10123 = !DILocation(line: 1204, column: 16, scope: !10110)
!10124 = !DILocation(line: 1204, column: 7, scope: !10110)
!10125 = !DILocation(line: 1206, column: 15, scope: !10110)
!10126 = !DILocation(line: 1206, column: 33, scope: !10110)
!10127 = !DILocation(line: 1206, column: 7, scope: !10110)
!10128 = !DILocation(line: 1208, column: 23, scope: !10110)
!10129 = !DILocation(line: 1208, column: 7, scope: !10110)
!10130 = !DILocation(line: 1211, column: 19, scope: !10110)
!10131 = !DILocation(line: 1211, column: 7, scope: !10110)
!10132 = !DILocation(line: 1211, column: 13, scope: !10110)
!10133 = !DILocation(line: 1211, column: 17, scope: !10110)
!10134 = !DILocation(line: 1212, column: 22, scope: !10110)
!10135 = !DILocation(line: 1212, column: 7, scope: !10110)
!10136 = !DILocation(line: 1213, column: 14, scope: !10110)
!10137 = !DILocation(line: 1213, column: 7, scope: !10110)
!10138 = !DILocation(line: 1214, column: 14, scope: !10110)
!10139 = !DILocation(line: 1214, column: 7, scope: !10110)
!10140 = !DILocation(line: 1216, column: 20, scope: !10110)
!10141 = !DILocation(line: 1216, column: 12, scope: !10110)
!10142 = !DILocation(line: 1216, column: 10, scope: !10110)
!10143 = !DILocation(line: 1217, column: 13, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10110, file: !63, line: 1217, column: 11)
!10145 = !DILocation(line: 1217, column: 11, scope: !10110)
!10146 = !DILocalVariable(name: "saved_errno", scope: !10147, file: !63, line: 1219, type: !5)
!10147 = distinct !DILexicalBlock(scope: !10144, file: !63, line: 1218, column: 9)
!10148 = !DILocation(line: 1219, column: 15, scope: !10147)
!10149 = !DILocation(line: 1219, column: 29, scope: !10147)
!10150 = !DILocation(line: 1220, column: 18, scope: !10147)
!10151 = !DILocation(line: 1220, column: 11, scope: !10147)
!10152 = !DILocation(line: 1221, column: 19, scope: !10147)
!10153 = !DILocation(line: 1221, column: 11, scope: !10147)
!10154 = !DILocation(line: 1221, column: 17, scope: !10147)
!10155 = !DILocation(line: 1222, column: 9, scope: !10147)
!10156 = !DILocation(line: 1223, column: 7, scope: !10110)
!10157 = !DILocation(line: 1226, column: 10, scope: !10076)
!10158 = !DILocation(line: 1226, column: 3, scope: !10076)
!10159 = !DILocation(line: 1227, column: 1, scope: !10076)
!10160 = distinct !DISubprogram(name: "key_to_opts", scope: !63, file: !63, line: 2392, type: !419, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10161 = !DILocalVariable(name: "key", arg: 1, scope: !10160, file: !63, line: 2392, type: !416)
!10162 = !DILocation(line: 2392, column: 37, scope: !10160)
!10163 = !DILocalVariable(name: "opts", arg: 2, scope: !10160, file: !63, line: 2392, type: !7)
!10164 = !DILocation(line: 2392, column: 48, scope: !10160)
!10165 = !DILocation(line: 2394, column: 7, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2394, column: 7)
!10167 = !DILocation(line: 2394, column: 12, scope: !10166)
!10168 = !DILocation(line: 2394, column: 24, scope: !10166)
!10169 = !DILocation(line: 2394, column: 27, scope: !10166)
!10170 = !DILocation(line: 2394, column: 32, scope: !10166)
!10171 = !DILocation(line: 2394, column: 7, scope: !10160)
!10172 = !DILocation(line: 2395, column: 10, scope: !10166)
!10173 = !DILocation(line: 2395, column: 13, scope: !10166)
!10174 = !DILocation(line: 2395, column: 5, scope: !10166)
!10175 = !DILocation(line: 2396, column: 7, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2396, column: 7)
!10177 = !DILocation(line: 2396, column: 12, scope: !10176)
!10178 = !DILocation(line: 2396, column: 19, scope: !10176)
!10179 = !DILocation(line: 2396, column: 7, scope: !10160)
!10180 = !DILocation(line: 2397, column: 10, scope: !10176)
!10181 = !DILocation(line: 2397, column: 13, scope: !10176)
!10182 = !DILocation(line: 2397, column: 5, scope: !10176)
!10183 = !DILocation(line: 2398, column: 7, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2398, column: 7)
!10185 = !DILocation(line: 2398, column: 12, scope: !10184)
!10186 = !DILocation(line: 2398, column: 7, scope: !10160)
!10187 = !DILocation(line: 2399, column: 10, scope: !10184)
!10188 = !DILocation(line: 2399, column: 13, scope: !10184)
!10189 = !DILocation(line: 2399, column: 5, scope: !10184)
!10190 = !DILocation(line: 2400, column: 7, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2400, column: 7)
!10192 = !DILocation(line: 2400, column: 12, scope: !10191)
!10193 = !DILocation(line: 2400, column: 7, scope: !10160)
!10194 = !DILocation(line: 2401, column: 10, scope: !10191)
!10195 = !DILocation(line: 2401, column: 13, scope: !10191)
!10196 = !DILocation(line: 2401, column: 5, scope: !10191)
!10197 = !DILocation(line: 2402, column: 7, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2402, column: 7)
!10199 = !DILocation(line: 2402, column: 12, scope: !10198)
!10200 = !DILocation(line: 2402, column: 7, scope: !10160)
!10201 = !DILocation(line: 2403, column: 10, scope: !10198)
!10202 = !DILocation(line: 2403, column: 13, scope: !10198)
!10203 = !DILocation(line: 2403, column: 5, scope: !10198)
!10204 = !DILocation(line: 2404, column: 7, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2404, column: 7)
!10206 = !DILocation(line: 2404, column: 12, scope: !10205)
!10207 = !DILocation(line: 2404, column: 19, scope: !10205)
!10208 = !DILocation(line: 2404, column: 7, scope: !10160)
!10209 = !DILocation(line: 2405, column: 10, scope: !10205)
!10210 = !DILocation(line: 2405, column: 13, scope: !10205)
!10211 = !DILocation(line: 2405, column: 5, scope: !10205)
!10212 = !DILocation(line: 2406, column: 7, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2406, column: 7)
!10214 = !DILocation(line: 2406, column: 12, scope: !10213)
!10215 = !DILocation(line: 2406, column: 7, scope: !10160)
!10216 = !DILocation(line: 2407, column: 10, scope: !10213)
!10217 = !DILocation(line: 2407, column: 13, scope: !10213)
!10218 = !DILocation(line: 2407, column: 5, scope: !10213)
!10219 = !DILocation(line: 2408, column: 7, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2408, column: 7)
!10221 = !DILocation(line: 2408, column: 12, scope: !10220)
!10222 = !DILocation(line: 2408, column: 7, scope: !10160)
!10223 = !DILocation(line: 2409, column: 10, scope: !10220)
!10224 = !DILocation(line: 2409, column: 13, scope: !10220)
!10225 = !DILocation(line: 2409, column: 5, scope: !10220)
!10226 = !DILocation(line: 2410, column: 7, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2410, column: 7)
!10228 = !DILocation(line: 2410, column: 12, scope: !10227)
!10229 = !DILocation(line: 2410, column: 7, scope: !10160)
!10230 = !DILocation(line: 2411, column: 10, scope: !10227)
!10231 = !DILocation(line: 2411, column: 13, scope: !10227)
!10232 = !DILocation(line: 2411, column: 5, scope: !10227)
!10233 = !DILocation(line: 2412, column: 7, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2412, column: 7)
!10235 = !DILocation(line: 2412, column: 12, scope: !10234)
!10236 = !DILocation(line: 2412, column: 7, scope: !10160)
!10237 = !DILocation(line: 2413, column: 10, scope: !10234)
!10238 = !DILocation(line: 2413, column: 13, scope: !10234)
!10239 = !DILocation(line: 2413, column: 5, scope: !10234)
!10240 = !DILocation(line: 2414, column: 7, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10160, file: !63, line: 2414, column: 7)
!10242 = !DILocation(line: 2414, column: 12, scope: !10241)
!10243 = !DILocation(line: 2414, column: 7, scope: !10160)
!10244 = !DILocation(line: 2415, column: 10, scope: !10241)
!10245 = !DILocation(line: 2415, column: 13, scope: !10241)
!10246 = !DILocation(line: 2415, column: 5, scope: !10241)
!10247 = !DILocation(line: 2416, column: 4, scope: !10160)
!10248 = !DILocation(line: 2416, column: 9, scope: !10160)
!10249 = !DILocation(line: 2417, column: 1, scope: !10160)
!10250 = distinct !DISubprogram(name: "select_plural", scope: !307, file: !307, line: 183, type: !432, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10251 = !DILocalVariable(name: "n", arg: 1, scope: !10250, file: !307, line: 183, type: !355)
!10252 = !DILocation(line: 183, column: 26, scope: !10250)
!10253 = !DILocation(line: 188, column: 11, scope: !10250)
!10254 = !DILocation(line: 188, column: 13, scope: !10250)
!10255 = !DILocation(line: 188, column: 28, scope: !10250)
!10256 = !DILocation(line: 188, column: 32, scope: !10250)
!10257 = !DILocation(line: 188, column: 34, scope: !10250)
!10258 = !DILocation(line: 188, column: 51, scope: !10250)
!10259 = !DILocation(line: 188, column: 3, scope: !10250)
!10260 = distinct !DISubprogram(name: "cleanup", scope: !63, file: !63, line: 807, type: !167, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10261 = !DILocalVariable(name: "node", scope: !10260, file: !63, line: 809, type: !337)
!10262 = !DILocation(line: 809, column: 26, scope: !10260)
!10263 = !DILocation(line: 811, column: 15, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10260, file: !63, line: 811, column: 3)
!10265 = !DILocation(line: 811, column: 13, scope: !10264)
!10266 = !DILocation(line: 811, column: 8, scope: !10264)
!10267 = !DILocation(line: 811, column: 25, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10264, file: !63, line: 811, column: 3)
!10269 = !DILocation(line: 811, column: 3, scope: !10264)
!10270 = !DILocation(line: 812, column: 13, scope: !10268)
!10271 = !DILocation(line: 812, column: 19, scope: !10268)
!10272 = !DILocation(line: 812, column: 5, scope: !10268)
!10273 = !DILocation(line: 811, column: 38, scope: !10268)
!10274 = !DILocation(line: 811, column: 44, scope: !10268)
!10275 = !DILocation(line: 811, column: 36, scope: !10268)
!10276 = !DILocation(line: 811, column: 3, scope: !10268)
!10277 = distinct !{!10277, !10269, !10278}
!10278 = !DILocation(line: 812, column: 23, scope: !10264)
!10279 = !DILocation(line: 813, column: 12, scope: !10260)
!10280 = !DILocation(line: 814, column: 1, scope: !10260)
!10281 = distinct !DISubprogram(name: "field_sep", scope: !307, file: !307, line: 160, type: !331, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10282 = !DILocalVariable(name: "ch", arg: 1, scope: !10281, file: !307, line: 160, type: !317)
!10283 = !DILocation(line: 160, column: 26, scope: !10281)
!10284 = !DILocation(line: 162, column: 10, scope: !10281)
!10285 = !DILocation(line: 162, column: 23, scope: !10281)
!10286 = !DILocation(line: 162, column: 26, scope: !10281)
!10287 = !DILocation(line: 162, column: 29, scope: !10281)
!10288 = !DILocation(line: 162, column: 3, scope: !10281)
!10289 = distinct !DISubprogram(name: "struct_month_cmp", scope: !63, file: !63, line: 1275, type: !333, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !309)
!10290 = !DILocalVariable(name: "m1", arg: 1, scope: !10289, file: !63, line: 1275, type: !85)
!10291 = !DILocation(line: 1275, column: 31, scope: !10289)
!10292 = !DILocalVariable(name: "m2", arg: 2, scope: !10289, file: !63, line: 1275, type: !85)
!10293 = !DILocation(line: 1275, column: 47, scope: !10289)
!10294 = !DILocalVariable(name: "month1", scope: !10289, file: !63, line: 1277, type: !335)
!10295 = !DILocation(line: 1277, column: 23, scope: !10289)
!10296 = !DILocation(line: 1277, column: 32, scope: !10289)
!10297 = !DILocalVariable(name: "month2", scope: !10289, file: !63, line: 1278, type: !335)
!10298 = !DILocation(line: 1278, column: 23, scope: !10289)
!10299 = !DILocation(line: 1278, column: 32, scope: !10289)
!10300 = !DILocation(line: 1279, column: 18, scope: !10289)
!10301 = !DILocation(line: 1279, column: 26, scope: !10289)
!10302 = !DILocation(line: 1279, column: 32, scope: !10289)
!10303 = !DILocation(line: 1279, column: 40, scope: !10289)
!10304 = !DILocation(line: 1279, column: 10, scope: !10289)
!10305 = !DILocation(line: 1279, column: 3, scope: !10289)
!10306 = distinct !DISubprogram(name: "__argmatch_die", scope: !860, file: !860, line: 60, type: !167, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !806, retainedNodes: !309)
!10307 = !DILocation(line: 62, column: 3, scope: !10306)
!10308 = !DILocation(line: 63, column: 1, scope: !10306)
!10309 = distinct !DISubprogram(name: "argmatch", scope: !860, file: !860, line: 82, type: !809, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !309)
!10310 = !DILocalVariable(name: "arg", arg: 1, scope: !10309, file: !860, line: 82, type: !87)
!10311 = !DILocation(line: 82, column: 23, scope: !10309)
!10312 = !DILocalVariable(name: "arglist", arg: 2, scope: !10309, file: !860, line: 82, type: !812)
!10313 = !DILocation(line: 82, column: 47, scope: !10309)
!10314 = !DILocalVariable(name: "vallist", arg: 3, scope: !10309, file: !860, line: 83, type: !85)
!10315 = !DILocation(line: 83, column: 23, scope: !10309)
!10316 = !DILocalVariable(name: "valsize", arg: 4, scope: !10309, file: !860, line: 83, type: !52)
!10317 = !DILocation(line: 83, column: 39, scope: !10309)
!10318 = !DILocalVariable(name: "i", scope: !10309, file: !860, line: 85, type: !52)
!10319 = !DILocation(line: 85, column: 10, scope: !10309)
!10320 = !DILocalVariable(name: "arglen", scope: !10309, file: !860, line: 86, type: !52)
!10321 = !DILocation(line: 86, column: 10, scope: !10309)
!10322 = !DILocalVariable(name: "matchind", scope: !10309, file: !860, line: 87, type: !811)
!10323 = !DILocation(line: 87, column: 13, scope: !10309)
!10324 = !DILocalVariable(name: "ambiguous", scope: !10309, file: !860, line: 88, type: !102)
!10325 = !DILocation(line: 88, column: 8, scope: !10309)
!10326 = !DILocation(line: 90, column: 20, scope: !10309)
!10327 = !DILocation(line: 90, column: 12, scope: !10309)
!10328 = !DILocation(line: 90, column: 10, scope: !10309)
!10329 = !DILocation(line: 93, column: 10, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10309, file: !860, line: 93, column: 3)
!10331 = !DILocation(line: 93, column: 8, scope: !10330)
!10332 = !DILocation(line: 93, column: 15, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10330, file: !860, line: 93, column: 3)
!10334 = !DILocation(line: 93, column: 23, scope: !10333)
!10335 = !DILocation(line: 93, column: 3, scope: !10330)
!10336 = !DILocation(line: 95, column: 21, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !860, line: 95, column: 11)
!10338 = distinct !DILexicalBlock(scope: !10333, file: !860, line: 94, column: 5)
!10339 = !DILocation(line: 95, column: 29, scope: !10337)
!10340 = !DILocation(line: 95, column: 33, scope: !10337)
!10341 = !DILocation(line: 95, column: 38, scope: !10337)
!10342 = !DILocation(line: 95, column: 12, scope: !10337)
!10343 = !DILocation(line: 95, column: 11, scope: !10338)
!10344 = !DILocation(line: 97, column: 23, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !860, line: 97, column: 15)
!10346 = distinct !DILexicalBlock(scope: !10337, file: !860, line: 96, column: 9)
!10347 = !DILocation(line: 97, column: 31, scope: !10345)
!10348 = !DILocation(line: 97, column: 15, scope: !10345)
!10349 = !DILocation(line: 97, column: 38, scope: !10345)
!10350 = !DILocation(line: 97, column: 35, scope: !10345)
!10351 = !DILocation(line: 97, column: 15, scope: !10346)
!10352 = !DILocation(line: 99, column: 20, scope: !10345)
!10353 = !DILocation(line: 99, column: 13, scope: !10345)
!10354 = !DILocation(line: 100, column: 20, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10345, file: !860, line: 100, column: 20)
!10356 = !DILocation(line: 100, column: 29, scope: !10355)
!10357 = !DILocation(line: 100, column: 20, scope: !10345)
!10358 = !DILocation(line: 102, column: 24, scope: !10355)
!10359 = !DILocation(line: 102, column: 22, scope: !10355)
!10360 = !DILocation(line: 102, column: 13, scope: !10355)
!10361 = !DILocation(line: 106, column: 19, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !860, line: 106, column: 19)
!10363 = distinct !DILexicalBlock(scope: !10355, file: !860, line: 104, column: 13)
!10364 = !DILocation(line: 106, column: 27, scope: !10362)
!10365 = !DILocation(line: 107, column: 19, scope: !10362)
!10366 = !DILocation(line: 107, column: 45, scope: !10362)
!10367 = !DILocation(line: 107, column: 55, scope: !10362)
!10368 = !DILocation(line: 107, column: 65, scope: !10362)
!10369 = !DILocation(line: 107, column: 63, scope: !10362)
!10370 = !DILocation(line: 107, column: 53, scope: !10362)
!10371 = !DILocation(line: 108, column: 45, scope: !10362)
!10372 = !DILocation(line: 108, column: 55, scope: !10362)
!10373 = !DILocation(line: 108, column: 65, scope: !10362)
!10374 = !DILocation(line: 108, column: 63, scope: !10362)
!10375 = !DILocation(line: 108, column: 53, scope: !10362)
!10376 = !DILocation(line: 108, column: 68, scope: !10362)
!10377 = !DILocation(line: 107, column: 22, scope: !10362)
!10378 = !DILocation(line: 106, column: 19, scope: !10363)
!10379 = !DILocation(line: 112, column: 29, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10362, file: !860, line: 109, column: 17)
!10381 = !DILocation(line: 113, column: 17, scope: !10380)
!10382 = !DILocation(line: 115, column: 9, scope: !10346)
!10383 = !DILocation(line: 116, column: 5, scope: !10338)
!10384 = !DILocation(line: 93, column: 28, scope: !10333)
!10385 = !DILocation(line: 93, column: 3, scope: !10333)
!10386 = distinct !{!10386, !10335, !10387}
!10387 = !DILocation(line: 116, column: 5, scope: !10330)
!10388 = !DILocation(line: 117, column: 7, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10309, file: !860, line: 117, column: 7)
!10390 = !DILocation(line: 117, column: 7, scope: !10309)
!10391 = !DILocation(line: 118, column: 5, scope: !10389)
!10392 = !DILocation(line: 120, column: 12, scope: !10389)
!10393 = !DILocation(line: 120, column: 5, scope: !10389)
!10394 = !DILocation(line: 121, column: 1, scope: !10309)
!10395 = distinct !DISubprogram(name: "argmatch_invalid", scope: !860, file: !860, line: 129, type: !813, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !309)
!10396 = !DILocalVariable(name: "context", arg: 1, scope: !10395, file: !860, line: 129, type: !87)
!10397 = !DILocation(line: 129, column: 31, scope: !10395)
!10398 = !DILocalVariable(name: "value", arg: 2, scope: !10395, file: !860, line: 129, type: !87)
!10399 = !DILocation(line: 129, column: 52, scope: !10395)
!10400 = !DILocalVariable(name: "problem", arg: 3, scope: !10395, file: !860, line: 129, type: !811)
!10401 = !DILocation(line: 129, column: 69, scope: !10395)
!10402 = !DILocalVariable(name: "format", scope: !10395, file: !860, line: 131, type: !87)
!10403 = !DILocation(line: 131, column: 15, scope: !10395)
!10404 = !DILocation(line: 131, column: 25, scope: !10395)
!10405 = !DILocation(line: 131, column: 33, scope: !10395)
!10406 = !DILocation(line: 132, column: 27, scope: !10395)
!10407 = !DILocation(line: 133, column: 27, scope: !10395)
!10408 = !DILocation(line: 135, column: 16, scope: !10395)
!10409 = !DILocation(line: 135, column: 69, scope: !10395)
!10410 = !DILocation(line: 135, column: 24, scope: !10395)
!10411 = !DILocation(line: 136, column: 22, scope: !10395)
!10412 = !DILocation(line: 136, column: 10, scope: !10395)
!10413 = !DILocation(line: 135, column: 3, scope: !10395)
!10414 = !DILocation(line: 137, column: 1, scope: !10395)
!10415 = distinct !DISubprogram(name: "argmatch_valid", scope: !860, file: !860, line: 144, type: !815, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !309)
!10416 = !DILocalVariable(name: "arglist", arg: 1, scope: !10415, file: !860, line: 144, type: !812)
!10417 = !DILocation(line: 144, column: 36, scope: !10415)
!10418 = !DILocalVariable(name: "vallist", arg: 2, scope: !10415, file: !860, line: 145, type: !85)
!10419 = !DILocation(line: 145, column: 29, scope: !10415)
!10420 = !DILocalVariable(name: "valsize", arg: 3, scope: !10415, file: !860, line: 145, type: !52)
!10421 = !DILocation(line: 145, column: 45, scope: !10415)
!10422 = !DILocalVariable(name: "i", scope: !10415, file: !860, line: 147, type: !52)
!10423 = !DILocation(line: 147, column: 10, scope: !10415)
!10424 = !DILocalVariable(name: "last_val", scope: !10415, file: !860, line: 148, type: !87)
!10425 = !DILocation(line: 148, column: 15, scope: !10415)
!10426 = !DILocation(line: 152, column: 3, scope: !10415)
!10427 = !DILocation(line: 153, column: 10, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10415, file: !860, line: 153, column: 3)
!10429 = !DILocation(line: 153, column: 8, scope: !10428)
!10430 = !DILocation(line: 153, column: 15, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10428, file: !860, line: 153, column: 3)
!10432 = !DILocation(line: 153, column: 23, scope: !10431)
!10433 = !DILocation(line: 153, column: 3, scope: !10428)
!10434 = !DILocation(line: 154, column: 10, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10431, file: !860, line: 154, column: 9)
!10436 = !DILocation(line: 154, column: 12, scope: !10435)
!10437 = !DILocation(line: 155, column: 9, scope: !10435)
!10438 = !DILocation(line: 155, column: 20, scope: !10435)
!10439 = !DILocation(line: 155, column: 45, scope: !10435)
!10440 = !DILocation(line: 155, column: 55, scope: !10435)
!10441 = !DILocation(line: 155, column: 65, scope: !10435)
!10442 = !DILocation(line: 155, column: 63, scope: !10435)
!10443 = !DILocation(line: 155, column: 53, scope: !10435)
!10444 = !DILocation(line: 155, column: 68, scope: !10435)
!10445 = !DILocation(line: 155, column: 12, scope: !10435)
!10446 = !DILocation(line: 154, column: 9, scope: !10431)
!10447 = !DILocation(line: 157, column: 18, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10435, file: !860, line: 156, column: 7)
!10449 = !DILocation(line: 157, column: 45, scope: !10448)
!10450 = !DILocation(line: 157, column: 53, scope: !10448)
!10451 = !DILocation(line: 157, column: 38, scope: !10448)
!10452 = !DILocation(line: 157, column: 9, scope: !10448)
!10453 = !DILocation(line: 158, column: 35, scope: !10448)
!10454 = !DILocation(line: 158, column: 45, scope: !10448)
!10455 = !DILocation(line: 158, column: 55, scope: !10448)
!10456 = !DILocation(line: 158, column: 53, scope: !10448)
!10457 = !DILocation(line: 158, column: 43, scope: !10448)
!10458 = !DILocation(line: 158, column: 18, scope: !10448)
!10459 = !DILocation(line: 159, column: 7, scope: !10448)
!10460 = !DILocation(line: 162, column: 18, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10435, file: !860, line: 161, column: 7)
!10462 = !DILocation(line: 162, column: 41, scope: !10461)
!10463 = !DILocation(line: 162, column: 49, scope: !10461)
!10464 = !DILocation(line: 162, column: 34, scope: !10461)
!10465 = !DILocation(line: 162, column: 9, scope: !10461)
!10466 = !DILocation(line: 155, column: 75, scope: !10435)
!10467 = !DILocation(line: 153, column: 28, scope: !10431)
!10468 = !DILocation(line: 153, column: 3, scope: !10431)
!10469 = distinct !{!10469, !10433, !10470}
!10470 = !DILocation(line: 163, column: 7, scope: !10428)
!10471 = !DILocation(line: 164, column: 3, scope: !10415)
!10472 = !DILocation(line: 165, column: 1, scope: !10415)
!10473 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !860, file: !860, line: 174, type: !855, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !309)
!10474 = !DILocalVariable(name: "context", arg: 1, scope: !10473, file: !860, line: 174, type: !87)
!10475 = !DILocation(line: 174, column: 35, scope: !10473)
!10476 = !DILocalVariable(name: "arg", arg: 2, scope: !10473, file: !860, line: 175, type: !87)
!10477 = !DILocation(line: 175, column: 35, scope: !10473)
!10478 = !DILocalVariable(name: "arglist", arg: 3, scope: !10473, file: !860, line: 175, type: !812)
!10479 = !DILocation(line: 175, column: 59, scope: !10473)
!10480 = !DILocalVariable(name: "vallist", arg: 4, scope: !10473, file: !860, line: 176, type: !85)
!10481 = !DILocation(line: 176, column: 35, scope: !10473)
!10482 = !DILocalVariable(name: "valsize", arg: 5, scope: !10473, file: !860, line: 176, type: !52)
!10483 = !DILocation(line: 176, column: 51, scope: !10473)
!10484 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !10473, file: !860, line: 177, type: !266)
!10485 = !DILocation(line: 177, column: 40, scope: !10473)
!10486 = !DILocalVariable(name: "res", scope: !10473, file: !860, line: 179, type: !811)
!10487 = !DILocation(line: 179, column: 13, scope: !10473)
!10488 = !DILocation(line: 179, column: 29, scope: !10473)
!10489 = !DILocation(line: 179, column: 34, scope: !10473)
!10490 = !DILocation(line: 179, column: 43, scope: !10473)
!10491 = !DILocation(line: 179, column: 52, scope: !10473)
!10492 = !DILocation(line: 179, column: 19, scope: !10473)
!10493 = !DILocation(line: 180, column: 7, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10473, file: !860, line: 180, column: 7)
!10495 = !DILocation(line: 180, column: 11, scope: !10494)
!10496 = !DILocation(line: 180, column: 7, scope: !10473)
!10497 = !DILocation(line: 182, column: 12, scope: !10494)
!10498 = !DILocation(line: 182, column: 5, scope: !10494)
!10499 = !DILocation(line: 185, column: 21, scope: !10473)
!10500 = !DILocation(line: 185, column: 30, scope: !10473)
!10501 = !DILocation(line: 185, column: 35, scope: !10473)
!10502 = !DILocation(line: 185, column: 3, scope: !10473)
!10503 = !DILocation(line: 186, column: 19, scope: !10473)
!10504 = !DILocation(line: 186, column: 28, scope: !10473)
!10505 = !DILocation(line: 186, column: 37, scope: !10473)
!10506 = !DILocation(line: 186, column: 3, scope: !10473)
!10507 = !DILocation(line: 187, column: 5, scope: !10473)
!10508 = !DILocation(line: 187, column: 3, scope: !10473)
!10509 = !DILocation(line: 189, column: 3, scope: !10473)
!10510 = !DILocation(line: 190, column: 1, scope: !10473)
!10511 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !860, file: !860, line: 195, type: !857, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !309)
!10512 = !DILocalVariable(name: "value", arg: 1, scope: !10511, file: !860, line: 195, type: !85)
!10513 = !DILocation(line: 195, column: 35, scope: !10511)
!10514 = !DILocalVariable(name: "arglist", arg: 2, scope: !10511, file: !860, line: 196, type: !812)
!10515 = !DILocation(line: 196, column: 42, scope: !10511)
!10516 = !DILocalVariable(name: "vallist", arg: 3, scope: !10511, file: !860, line: 197, type: !85)
!10517 = !DILocation(line: 197, column: 35, scope: !10511)
!10518 = !DILocalVariable(name: "valsize", arg: 4, scope: !10511, file: !860, line: 197, type: !52)
!10519 = !DILocation(line: 197, column: 51, scope: !10511)
!10520 = !DILocalVariable(name: "i", scope: !10511, file: !860, line: 199, type: !52)
!10521 = !DILocation(line: 199, column: 10, scope: !10511)
!10522 = !DILocation(line: 201, column: 10, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10511, file: !860, line: 201, column: 3)
!10524 = !DILocation(line: 201, column: 8, scope: !10523)
!10525 = !DILocation(line: 201, column: 15, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10523, file: !860, line: 201, column: 3)
!10527 = !DILocation(line: 201, column: 23, scope: !10526)
!10528 = !DILocation(line: 201, column: 3, scope: !10523)
!10529 = !DILocation(line: 202, column: 18, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10526, file: !860, line: 202, column: 9)
!10531 = !DILocation(line: 202, column: 40, scope: !10530)
!10532 = !DILocation(line: 202, column: 50, scope: !10530)
!10533 = !DILocation(line: 202, column: 60, scope: !10530)
!10534 = !DILocation(line: 202, column: 58, scope: !10530)
!10535 = !DILocation(line: 202, column: 48, scope: !10530)
!10536 = !DILocation(line: 202, column: 63, scope: !10530)
!10537 = !DILocation(line: 202, column: 10, scope: !10530)
!10538 = !DILocation(line: 202, column: 9, scope: !10526)
!10539 = !DILocation(line: 203, column: 14, scope: !10530)
!10540 = !DILocation(line: 203, column: 22, scope: !10530)
!10541 = !DILocation(line: 203, column: 7, scope: !10530)
!10542 = !DILocation(line: 202, column: 70, scope: !10530)
!10543 = !DILocation(line: 201, column: 28, scope: !10526)
!10544 = !DILocation(line: 201, column: 3, scope: !10526)
!10545 = distinct !{!10545, !10528, !10546}
!10546 = !DILocation(line: 203, column: 23, scope: !10523)
!10547 = !DILocation(line: 204, column: 3, scope: !10511)
!10548 = !DILocation(line: 205, column: 1, scope: !10511)
!10549 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !909, file: !909, line: 51, type: !302, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !863, retainedNodes: !309)
!10550 = !DILocalVariable(name: "file", arg: 1, scope: !10549, file: !909, line: 51, type: !87)
!10551 = !DILocation(line: 51, column: 41, scope: !10549)
!10552 = !DILocation(line: 53, column: 15, scope: !10549)
!10553 = !DILocation(line: 53, column: 13, scope: !10549)
!10554 = !DILocation(line: 54, column: 1, scope: !10549)
!10555 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !909, file: !909, line: 88, type: !866, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !863, retainedNodes: !309)
!10556 = !DILocalVariable(name: "ignore", arg: 1, scope: !10555, file: !909, line: 88, type: !102)
!10557 = !DILocation(line: 88, column: 37, scope: !10555)
!10558 = !DILocation(line: 90, column: 18, scope: !10555)
!10559 = !DILocation(line: 90, column: 16, scope: !10555)
!10560 = !DILocation(line: 91, column: 1, scope: !10555)
!10561 = distinct !DISubprogram(name: "close_stdout", scope: !909, file: !909, line: 117, type: !167, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !863, retainedNodes: !309)
!10562 = !DILocation(line: 119, column: 21, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10561, file: !909, line: 119, column: 7)
!10564 = !DILocation(line: 119, column: 7, scope: !10563)
!10565 = !DILocation(line: 119, column: 29, scope: !10563)
!10566 = !DILocation(line: 120, column: 7, scope: !10563)
!10567 = !DILocation(line: 120, column: 12, scope: !10563)
!10568 = !DILocation(line: 120, column: 25, scope: !10563)
!10569 = !DILocation(line: 120, column: 28, scope: !10563)
!10570 = !DILocation(line: 120, column: 34, scope: !10563)
!10571 = !DILocation(line: 119, column: 7, scope: !10561)
!10572 = !DILocalVariable(name: "write_error", scope: !10573, file: !909, line: 122, type: !87)
!10573 = distinct !DILexicalBlock(scope: !10563, file: !909, line: 121, column: 5)
!10574 = !DILocation(line: 122, column: 19, scope: !10573)
!10575 = !DILocation(line: 122, column: 33, scope: !10573)
!10576 = !DILocation(line: 123, column: 11, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10573, file: !909, line: 123, column: 11)
!10578 = !DILocation(line: 123, column: 11, scope: !10573)
!10579 = !DILocation(line: 124, column: 19, scope: !10577)
!10580 = !DILocation(line: 124, column: 52, scope: !10577)
!10581 = !DILocation(line: 124, column: 36, scope: !10577)
!10582 = !DILocation(line: 125, column: 16, scope: !10577)
!10583 = !DILocation(line: 124, column: 9, scope: !10577)
!10584 = !DILocation(line: 127, column: 19, scope: !10577)
!10585 = !DILocation(line: 127, column: 32, scope: !10577)
!10586 = !DILocation(line: 127, column: 9, scope: !10577)
!10587 = !DILocation(line: 129, column: 14, scope: !10573)
!10588 = !DILocation(line: 129, column: 7, scope: !10573)
!10589 = !DILocation(line: 134, column: 42, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10561, file: !909, line: 134, column: 7)
!10591 = !DILocation(line: 134, column: 28, scope: !10590)
!10592 = !DILocation(line: 134, column: 50, scope: !10590)
!10593 = !DILocation(line: 134, column: 7, scope: !10561)
!10594 = !DILocation(line: 135, column: 12, scope: !10590)
!10595 = !DILocation(line: 135, column: 5, scope: !10590)
!10596 = !DILocation(line: 136, column: 1, scope: !10561)
!10597 = distinct !DISubprogram(name: "md5_init_ctx", scope: !995, file: !995, line: 76, type: !916, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!10598 = !DILocalVariable(name: "ctx", arg: 1, scope: !10597, file: !995, line: 76, type: !918)
!10599 = !DILocation(line: 76, column: 31, scope: !10597)
!10600 = !DILocation(line: 78, column: 3, scope: !10597)
!10601 = !DILocation(line: 78, column: 8, scope: !10597)
!10602 = !DILocation(line: 78, column: 10, scope: !10597)
!10603 = !{!10604, !2343, i64 0}
!10604 = !{!"md5_ctx", !2343, i64 0, !2343, i64 4, !2343, i64 8, !2343, i64 12, !2344, i64 16, !2343, i64 24, !2344, i64 28}
!10605 = !DILocation(line: 79, column: 3, scope: !10597)
!10606 = !DILocation(line: 79, column: 8, scope: !10597)
!10607 = !DILocation(line: 79, column: 10, scope: !10597)
!10608 = !{!10604, !2343, i64 4}
!10609 = !DILocation(line: 80, column: 3, scope: !10597)
!10610 = !DILocation(line: 80, column: 8, scope: !10597)
!10611 = !DILocation(line: 80, column: 10, scope: !10597)
!10612 = !{!10604, !2343, i64 8}
!10613 = !DILocation(line: 81, column: 3, scope: !10597)
!10614 = !DILocation(line: 81, column: 8, scope: !10597)
!10615 = !DILocation(line: 81, column: 10, scope: !10597)
!10616 = !{!10604, !2343, i64 12}
!10617 = !DILocation(line: 83, column: 19, scope: !10597)
!10618 = !DILocation(line: 83, column: 24, scope: !10597)
!10619 = !DILocation(line: 83, column: 33, scope: !10597)
!10620 = !DILocation(line: 83, column: 3, scope: !10597)
!10621 = !DILocation(line: 83, column: 8, scope: !10597)
!10622 = !DILocation(line: 83, column: 17, scope: !10597)
!10623 = !DILocation(line: 84, column: 3, scope: !10597)
!10624 = !DILocation(line: 84, column: 8, scope: !10597)
!10625 = !DILocation(line: 84, column: 15, scope: !10597)
!10626 = !{!10604, !2343, i64 24}
!10627 = !DILocation(line: 85, column: 1, scope: !10597)
!10628 = distinct !DISubprogram(name: "md5_read_ctx", scope: !995, file: !995, line: 99, type: !928, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!10629 = !DILocalVariable(name: "ctx", arg: 1, scope: !10628, file: !995, line: 99, type: !930)
!10630 = !DILocation(line: 99, column: 37, scope: !10628)
!10631 = !DILocalVariable(name: "resbuf", arg: 2, scope: !10628, file: !995, line: 99, type: !47)
!10632 = !DILocation(line: 99, column: 48, scope: !10628)
!10633 = !DILocalVariable(name: "r", scope: !10628, file: !995, line: 101, type: !7)
!10634 = !DILocation(line: 101, column: 9, scope: !10628)
!10635 = !DILocation(line: 101, column: 13, scope: !10628)
!10636 = !DILocation(line: 102, column: 15, scope: !10628)
!10637 = !DILocation(line: 102, column: 17, scope: !10628)
!10638 = !DILocation(line: 102, column: 38, scope: !10628)
!10639 = !DILocation(line: 102, column: 3, scope: !10628)
!10640 = !DILocation(line: 103, column: 15, scope: !10628)
!10641 = !DILocation(line: 103, column: 17, scope: !10628)
!10642 = !DILocation(line: 103, column: 38, scope: !10628)
!10643 = !DILocation(line: 103, column: 3, scope: !10628)
!10644 = !DILocation(line: 104, column: 15, scope: !10628)
!10645 = !DILocation(line: 104, column: 17, scope: !10628)
!10646 = !DILocation(line: 104, column: 38, scope: !10628)
!10647 = !DILocation(line: 104, column: 3, scope: !10628)
!10648 = !DILocation(line: 105, column: 15, scope: !10628)
!10649 = !DILocation(line: 105, column: 17, scope: !10628)
!10650 = !DILocation(line: 105, column: 38, scope: !10628)
!10651 = !DILocation(line: 105, column: 3, scope: !10628)
!10652 = !DILocation(line: 107, column: 10, scope: !10628)
!10653 = !DILocation(line: 107, column: 3, scope: !10628)
!10654 = distinct !DISubprogram(name: "set_uint32", scope: !995, file: !995, line: 91, type: !988, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !912, retainedNodes: !309)
!10655 = !DILocalVariable(name: "cp", arg: 1, scope: !10654, file: !995, line: 91, type: !7)
!10656 = !DILocation(line: 91, column: 19, scope: !10654)
!10657 = !DILocalVariable(name: "v", arg: 2, scope: !10654, file: !995, line: 91, type: !488)
!10658 = !DILocation(line: 91, column: 32, scope: !10654)
!10659 = !DILocation(line: 93, column: 11, scope: !10654)
!10660 = !DILocation(line: 93, column: 3, scope: !10654)
!10661 = !DILocation(line: 94, column: 1, scope: !10654)
!10662 = distinct !DISubprogram(name: "md5_finish_ctx", scope: !995, file: !995, line: 113, type: !932, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!10663 = !DILocalVariable(name: "ctx", arg: 1, scope: !10662, file: !995, line: 113, type: !918)
!10664 = !DILocation(line: 113, column: 33, scope: !10662)
!10665 = !DILocalVariable(name: "resbuf", arg: 2, scope: !10662, file: !995, line: 113, type: !47)
!10666 = !DILocation(line: 113, column: 44, scope: !10662)
!10667 = !DILocalVariable(name: "bytes", scope: !10662, file: !995, line: 116, type: !488)
!10668 = !DILocation(line: 116, column: 12, scope: !10662)
!10669 = !DILocation(line: 116, column: 20, scope: !10662)
!10670 = !DILocation(line: 116, column: 25, scope: !10662)
!10671 = !DILocalVariable(name: "size", scope: !10662, file: !995, line: 117, type: !52)
!10672 = !DILocation(line: 117, column: 10, scope: !10662)
!10673 = !DILocation(line: 117, column: 18, scope: !10662)
!10674 = !DILocation(line: 117, column: 24, scope: !10662)
!10675 = !DILocation(line: 117, column: 17, scope: !10662)
!10676 = !DILocation(line: 120, column: 20, scope: !10662)
!10677 = !DILocation(line: 120, column: 3, scope: !10662)
!10678 = !DILocation(line: 120, column: 8, scope: !10662)
!10679 = !DILocation(line: 120, column: 17, scope: !10662)
!10680 = !DILocation(line: 121, column: 7, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10662, file: !995, line: 121, column: 7)
!10682 = !DILocation(line: 121, column: 12, scope: !10681)
!10683 = !DILocation(line: 121, column: 23, scope: !10681)
!10684 = !DILocation(line: 121, column: 21, scope: !10681)
!10685 = !DILocation(line: 121, column: 7, scope: !10662)
!10686 = !DILocation(line: 122, column: 7, scope: !10681)
!10687 = !DILocation(line: 122, column: 12, scope: !10681)
!10688 = !DILocation(line: 122, column: 5, scope: !10681)
!10689 = !DILocation(line: 125, column: 27, scope: !10662)
!10690 = !DILocation(line: 125, column: 3, scope: !10662)
!10691 = !DILocation(line: 125, column: 8, scope: !10662)
!10692 = !DILocation(line: 125, column: 15, scope: !10662)
!10693 = !DILocation(line: 125, column: 20, scope: !10662)
!10694 = !DILocation(line: 125, column: 25, scope: !10662)
!10695 = !DILocation(line: 126, column: 27, scope: !10662)
!10696 = !DILocation(line: 126, column: 3, scope: !10662)
!10697 = !DILocation(line: 126, column: 8, scope: !10662)
!10698 = !DILocation(line: 126, column: 15, scope: !10662)
!10699 = !DILocation(line: 126, column: 20, scope: !10662)
!10700 = !DILocation(line: 126, column: 25, scope: !10662)
!10701 = !DILocation(line: 128, column: 22, scope: !10662)
!10702 = !DILocation(line: 128, column: 27, scope: !10662)
!10703 = !DILocation(line: 128, column: 12, scope: !10662)
!10704 = !DILocation(line: 128, column: 35, scope: !10662)
!10705 = !DILocation(line: 128, column: 53, scope: !10662)
!10706 = !DILocation(line: 128, column: 58, scope: !10662)
!10707 = !DILocation(line: 128, column: 63, scope: !10662)
!10708 = !DILocation(line: 128, column: 69, scope: !10662)
!10709 = !DILocation(line: 128, column: 67, scope: !10662)
!10710 = !DILocation(line: 128, column: 3, scope: !10662)
!10711 = !DILocation(line: 131, column: 22, scope: !10662)
!10712 = !DILocation(line: 131, column: 27, scope: !10662)
!10713 = !DILocation(line: 131, column: 35, scope: !10662)
!10714 = !DILocation(line: 131, column: 40, scope: !10662)
!10715 = !DILocation(line: 131, column: 45, scope: !10662)
!10716 = !DILocation(line: 131, column: 3, scope: !10662)
!10717 = !DILocation(line: 133, column: 24, scope: !10662)
!10718 = !DILocation(line: 133, column: 29, scope: !10662)
!10719 = !DILocation(line: 133, column: 10, scope: !10662)
!10720 = !DILocation(line: 133, column: 3, scope: !10662)
!10721 = distinct !DISubprogram(name: "md5_process_block", scope: !995, file: !995, line: 325, type: !982, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!10722 = !DILocalVariable(name: "buffer", arg: 1, scope: !10721, file: !995, line: 325, type: !85)
!10723 = !DILocation(line: 325, column: 32, scope: !10721)
!10724 = !DILocalVariable(name: "len", arg: 2, scope: !10721, file: !995, line: 325, type: !52)
!10725 = !DILocation(line: 325, column: 47, scope: !10721)
!10726 = !DILocalVariable(name: "ctx", arg: 3, scope: !10721, file: !995, line: 325, type: !918)
!10727 = !DILocation(line: 325, column: 68, scope: !10721)
!10728 = !DILocalVariable(name: "correct_words", scope: !10721, file: !995, line: 327, type: !984)
!10729 = !DILocation(line: 327, column: 12, scope: !10721)
!10730 = !DILocalVariable(name: "words", scope: !10721, file: !995, line: 328, type: !985)
!10731 = !DILocation(line: 328, column: 19, scope: !10721)
!10732 = !DILocation(line: 328, column: 27, scope: !10721)
!10733 = !DILocalVariable(name: "nwords", scope: !10721, file: !995, line: 329, type: !52)
!10734 = !DILocation(line: 329, column: 10, scope: !10721)
!10735 = !DILocation(line: 329, column: 19, scope: !10721)
!10736 = !DILocation(line: 329, column: 23, scope: !10721)
!10737 = !DILocalVariable(name: "endp", scope: !10721, file: !995, line: 330, type: !985)
!10738 = !DILocation(line: 330, column: 19, scope: !10721)
!10739 = !DILocation(line: 330, column: 26, scope: !10721)
!10740 = !DILocation(line: 330, column: 34, scope: !10721)
!10741 = !DILocation(line: 330, column: 32, scope: !10721)
!10742 = !DILocalVariable(name: "A", scope: !10721, file: !995, line: 331, type: !488)
!10743 = !DILocation(line: 331, column: 12, scope: !10721)
!10744 = !DILocation(line: 331, column: 16, scope: !10721)
!10745 = !DILocation(line: 331, column: 21, scope: !10721)
!10746 = !DILocalVariable(name: "B", scope: !10721, file: !995, line: 332, type: !488)
!10747 = !DILocation(line: 332, column: 12, scope: !10721)
!10748 = !DILocation(line: 332, column: 16, scope: !10721)
!10749 = !DILocation(line: 332, column: 21, scope: !10721)
!10750 = !DILocalVariable(name: "C", scope: !10721, file: !995, line: 333, type: !488)
!10751 = !DILocation(line: 333, column: 12, scope: !10721)
!10752 = !DILocation(line: 333, column: 16, scope: !10721)
!10753 = !DILocation(line: 333, column: 21, scope: !10721)
!10754 = !DILocalVariable(name: "D", scope: !10721, file: !995, line: 334, type: !488)
!10755 = !DILocation(line: 334, column: 12, scope: !10721)
!10756 = !DILocation(line: 334, column: 16, scope: !10721)
!10757 = !DILocation(line: 334, column: 21, scope: !10721)
!10758 = !DILocalVariable(name: "lolen", scope: !10721, file: !995, line: 335, type: !488)
!10759 = !DILocation(line: 335, column: 12, scope: !10721)
!10760 = !DILocation(line: 335, column: 20, scope: !10721)
!10761 = !DILocation(line: 340, column: 20, scope: !10721)
!10762 = !DILocation(line: 340, column: 3, scope: !10721)
!10763 = !DILocation(line: 340, column: 8, scope: !10721)
!10764 = !DILocation(line: 340, column: 17, scope: !10721)
!10765 = !DILocation(line: 341, column: 21, scope: !10721)
!10766 = !DILocation(line: 341, column: 25, scope: !10721)
!10767 = !DILocation(line: 341, column: 31, scope: !10721)
!10768 = !DILocation(line: 341, column: 40, scope: !10721)
!10769 = !DILocation(line: 341, column: 45, scope: !10721)
!10770 = !DILocation(line: 341, column: 56, scope: !10721)
!10771 = !DILocation(line: 341, column: 54, scope: !10721)
!10772 = !DILocation(line: 341, column: 39, scope: !10721)
!10773 = !DILocation(line: 341, column: 37, scope: !10721)
!10774 = !DILocation(line: 341, column: 3, scope: !10721)
!10775 = !DILocation(line: 341, column: 8, scope: !10721)
!10776 = !DILocation(line: 341, column: 17, scope: !10721)
!10777 = !DILocation(line: 345, column: 3, scope: !10721)
!10778 = !DILocation(line: 345, column: 10, scope: !10721)
!10779 = !DILocation(line: 345, column: 18, scope: !10721)
!10780 = !DILocation(line: 345, column: 16, scope: !10721)
!10781 = !DILocalVariable(name: "cwp", scope: !10782, file: !995, line: 347, type: !987)
!10782 = distinct !DILexicalBlock(scope: !10721, file: !995, line: 346, column: 5)
!10783 = !DILocation(line: 347, column: 17, scope: !10782)
!10784 = !DILocation(line: 347, column: 23, scope: !10782)
!10785 = !DILocalVariable(name: "A_save", scope: !10782, file: !995, line: 348, type: !488)
!10786 = !DILocation(line: 348, column: 16, scope: !10782)
!10787 = !DILocation(line: 348, column: 25, scope: !10782)
!10788 = !DILocalVariable(name: "B_save", scope: !10782, file: !995, line: 349, type: !488)
!10789 = !DILocation(line: 349, column: 16, scope: !10782)
!10790 = !DILocation(line: 349, column: 25, scope: !10782)
!10791 = !DILocalVariable(name: "C_save", scope: !10782, file: !995, line: 350, type: !488)
!10792 = !DILocation(line: 350, column: 16, scope: !10782)
!10793 = !DILocation(line: 350, column: 25, scope: !10782)
!10794 = !DILocalVariable(name: "D_save", scope: !10782, file: !995, line: 351, type: !488)
!10795 = !DILocation(line: 351, column: 16, scope: !10782)
!10796 = !DILocation(line: 351, column: 25, scope: !10782)
!10797 = !DILocation(line: 385, column: 7, scope: !10782)
!10798 = !DILocation(line: 385, column: 7, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 385, column: 7)
!10800 = !DILocation(line: 386, column: 7, scope: !10782)
!10801 = !DILocation(line: 386, column: 7, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 386, column: 7)
!10803 = !DILocation(line: 387, column: 7, scope: !10782)
!10804 = !DILocation(line: 387, column: 7, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 387, column: 7)
!10806 = !DILocation(line: 388, column: 7, scope: !10782)
!10807 = !DILocation(line: 388, column: 7, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 388, column: 7)
!10809 = !DILocation(line: 389, column: 7, scope: !10782)
!10810 = !DILocation(line: 389, column: 7, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 389, column: 7)
!10812 = !DILocation(line: 390, column: 7, scope: !10782)
!10813 = !DILocation(line: 390, column: 7, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 390, column: 7)
!10815 = !DILocation(line: 391, column: 7, scope: !10782)
!10816 = !DILocation(line: 391, column: 7, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 391, column: 7)
!10818 = !DILocation(line: 392, column: 7, scope: !10782)
!10819 = !DILocation(line: 392, column: 7, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 392, column: 7)
!10821 = !DILocation(line: 393, column: 7, scope: !10782)
!10822 = !DILocation(line: 393, column: 7, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 393, column: 7)
!10824 = !DILocation(line: 394, column: 7, scope: !10782)
!10825 = !DILocation(line: 394, column: 7, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 394, column: 7)
!10827 = !DILocation(line: 395, column: 7, scope: !10782)
!10828 = !DILocation(line: 395, column: 7, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 395, column: 7)
!10830 = !DILocation(line: 396, column: 7, scope: !10782)
!10831 = !DILocation(line: 396, column: 7, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 396, column: 7)
!10833 = !DILocation(line: 397, column: 7, scope: !10782)
!10834 = !DILocation(line: 397, column: 7, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 397, column: 7)
!10836 = !DILocation(line: 398, column: 7, scope: !10782)
!10837 = !DILocation(line: 398, column: 7, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 398, column: 7)
!10839 = !DILocation(line: 399, column: 7, scope: !10782)
!10840 = !DILocation(line: 399, column: 7, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 399, column: 7)
!10842 = !DILocation(line: 400, column: 7, scope: !10782)
!10843 = !DILocation(line: 400, column: 7, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 400, column: 7)
!10845 = !DILocation(line: 416, column: 7, scope: !10782)
!10846 = !DILocation(line: 416, column: 7, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 416, column: 7)
!10848 = !DILocation(line: 417, column: 7, scope: !10782)
!10849 = !DILocation(line: 417, column: 7, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 417, column: 7)
!10851 = !DILocation(line: 418, column: 7, scope: !10782)
!10852 = !DILocation(line: 418, column: 7, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 418, column: 7)
!10854 = !DILocation(line: 419, column: 7, scope: !10782)
!10855 = !DILocation(line: 419, column: 7, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 419, column: 7)
!10857 = !DILocation(line: 420, column: 7, scope: !10782)
!10858 = !DILocation(line: 420, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 420, column: 7)
!10860 = !DILocation(line: 421, column: 7, scope: !10782)
!10861 = !DILocation(line: 421, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 421, column: 7)
!10863 = !DILocation(line: 422, column: 7, scope: !10782)
!10864 = !DILocation(line: 422, column: 7, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 422, column: 7)
!10866 = !DILocation(line: 423, column: 7, scope: !10782)
!10867 = !DILocation(line: 423, column: 7, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 423, column: 7)
!10869 = !DILocation(line: 424, column: 7, scope: !10782)
!10870 = !DILocation(line: 424, column: 7, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 424, column: 7)
!10872 = !DILocation(line: 425, column: 7, scope: !10782)
!10873 = !DILocation(line: 425, column: 7, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 425, column: 7)
!10875 = !DILocation(line: 426, column: 7, scope: !10782)
!10876 = !DILocation(line: 426, column: 7, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 426, column: 7)
!10878 = !DILocation(line: 427, column: 7, scope: !10782)
!10879 = !DILocation(line: 427, column: 7, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 427, column: 7)
!10881 = !DILocation(line: 428, column: 7, scope: !10782)
!10882 = !DILocation(line: 428, column: 7, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 428, column: 7)
!10884 = !DILocation(line: 429, column: 7, scope: !10782)
!10885 = !DILocation(line: 429, column: 7, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 429, column: 7)
!10887 = !DILocation(line: 430, column: 7, scope: !10782)
!10888 = !DILocation(line: 430, column: 7, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 430, column: 7)
!10890 = !DILocation(line: 431, column: 7, scope: !10782)
!10891 = !DILocation(line: 431, column: 7, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 431, column: 7)
!10893 = !DILocation(line: 434, column: 7, scope: !10782)
!10894 = !DILocation(line: 434, column: 7, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 434, column: 7)
!10896 = !DILocation(line: 435, column: 7, scope: !10782)
!10897 = !DILocation(line: 435, column: 7, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 435, column: 7)
!10899 = !DILocation(line: 436, column: 7, scope: !10782)
!10900 = !DILocation(line: 436, column: 7, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 436, column: 7)
!10902 = !DILocation(line: 437, column: 7, scope: !10782)
!10903 = !DILocation(line: 437, column: 7, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 437, column: 7)
!10905 = !DILocation(line: 438, column: 7, scope: !10782)
!10906 = !DILocation(line: 438, column: 7, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 438, column: 7)
!10908 = !DILocation(line: 439, column: 7, scope: !10782)
!10909 = !DILocation(line: 439, column: 7, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 439, column: 7)
!10911 = !DILocation(line: 440, column: 7, scope: !10782)
!10912 = !DILocation(line: 440, column: 7, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 440, column: 7)
!10914 = !DILocation(line: 441, column: 7, scope: !10782)
!10915 = !DILocation(line: 441, column: 7, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 441, column: 7)
!10917 = !DILocation(line: 442, column: 7, scope: !10782)
!10918 = !DILocation(line: 442, column: 7, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 442, column: 7)
!10920 = !DILocation(line: 443, column: 7, scope: !10782)
!10921 = !DILocation(line: 443, column: 7, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 443, column: 7)
!10923 = !DILocation(line: 444, column: 7, scope: !10782)
!10924 = !DILocation(line: 444, column: 7, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 444, column: 7)
!10926 = !DILocation(line: 445, column: 7, scope: !10782)
!10927 = !DILocation(line: 445, column: 7, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 445, column: 7)
!10929 = !DILocation(line: 446, column: 7, scope: !10782)
!10930 = !DILocation(line: 446, column: 7, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 446, column: 7)
!10932 = !DILocation(line: 447, column: 7, scope: !10782)
!10933 = !DILocation(line: 447, column: 7, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 447, column: 7)
!10935 = !DILocation(line: 448, column: 7, scope: !10782)
!10936 = !DILocation(line: 448, column: 7, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 448, column: 7)
!10938 = !DILocation(line: 449, column: 7, scope: !10782)
!10939 = !DILocation(line: 449, column: 7, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 449, column: 7)
!10941 = !DILocation(line: 452, column: 7, scope: !10782)
!10942 = !DILocation(line: 452, column: 7, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 452, column: 7)
!10944 = !DILocation(line: 453, column: 7, scope: !10782)
!10945 = !DILocation(line: 453, column: 7, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 453, column: 7)
!10947 = !DILocation(line: 454, column: 7, scope: !10782)
!10948 = !DILocation(line: 454, column: 7, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 454, column: 7)
!10950 = !DILocation(line: 455, column: 7, scope: !10782)
!10951 = !DILocation(line: 455, column: 7, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 455, column: 7)
!10953 = !DILocation(line: 456, column: 7, scope: !10782)
!10954 = !DILocation(line: 456, column: 7, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 456, column: 7)
!10956 = !DILocation(line: 457, column: 7, scope: !10782)
!10957 = !DILocation(line: 457, column: 7, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 457, column: 7)
!10959 = !DILocation(line: 458, column: 7, scope: !10782)
!10960 = !DILocation(line: 458, column: 7, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 458, column: 7)
!10962 = !DILocation(line: 459, column: 7, scope: !10782)
!10963 = !DILocation(line: 459, column: 7, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 459, column: 7)
!10965 = !DILocation(line: 460, column: 7, scope: !10782)
!10966 = !DILocation(line: 460, column: 7, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 460, column: 7)
!10968 = !DILocation(line: 461, column: 7, scope: !10782)
!10969 = !DILocation(line: 461, column: 7, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 461, column: 7)
!10971 = !DILocation(line: 462, column: 7, scope: !10782)
!10972 = !DILocation(line: 462, column: 7, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 462, column: 7)
!10974 = !DILocation(line: 463, column: 7, scope: !10782)
!10975 = !DILocation(line: 463, column: 7, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 463, column: 7)
!10977 = !DILocation(line: 464, column: 7, scope: !10782)
!10978 = !DILocation(line: 464, column: 7, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 464, column: 7)
!10980 = !DILocation(line: 465, column: 7, scope: !10782)
!10981 = !DILocation(line: 465, column: 7, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 465, column: 7)
!10983 = !DILocation(line: 466, column: 7, scope: !10782)
!10984 = !DILocation(line: 466, column: 7, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 466, column: 7)
!10986 = !DILocation(line: 467, column: 7, scope: !10782)
!10987 = !DILocation(line: 467, column: 7, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10782, file: !995, line: 467, column: 7)
!10989 = !DILocation(line: 470, column: 12, scope: !10782)
!10990 = !DILocation(line: 470, column: 9, scope: !10782)
!10991 = !DILocation(line: 471, column: 12, scope: !10782)
!10992 = !DILocation(line: 471, column: 9, scope: !10782)
!10993 = !DILocation(line: 472, column: 12, scope: !10782)
!10994 = !DILocation(line: 472, column: 9, scope: !10782)
!10995 = !DILocation(line: 473, column: 12, scope: !10782)
!10996 = !DILocation(line: 473, column: 9, scope: !10782)
!10997 = distinct !{!10997, !10777, !10998}
!10998 = !DILocation(line: 474, column: 5, scope: !10721)
!10999 = !DILocation(line: 477, column: 12, scope: !10721)
!11000 = !DILocation(line: 477, column: 3, scope: !10721)
!11001 = !DILocation(line: 477, column: 8, scope: !10721)
!11002 = !DILocation(line: 477, column: 10, scope: !10721)
!11003 = !DILocation(line: 478, column: 12, scope: !10721)
!11004 = !DILocation(line: 478, column: 3, scope: !10721)
!11005 = !DILocation(line: 478, column: 8, scope: !10721)
!11006 = !DILocation(line: 478, column: 10, scope: !10721)
!11007 = !DILocation(line: 479, column: 12, scope: !10721)
!11008 = !DILocation(line: 479, column: 3, scope: !10721)
!11009 = !DILocation(line: 479, column: 8, scope: !10721)
!11010 = !DILocation(line: 479, column: 10, scope: !10721)
!11011 = !DILocation(line: 480, column: 12, scope: !10721)
!11012 = !DILocation(line: 480, column: 3, scope: !10721)
!11013 = !DILocation(line: 480, column: 8, scope: !10721)
!11014 = !DILocation(line: 480, column: 10, scope: !10721)
!11015 = !DILocation(line: 481, column: 1, scope: !10721)
!11016 = distinct !DISubprogram(name: "md5_stream", scope: !995, file: !995, line: 145, type: !938, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!11017 = !DILocalVariable(name: "stream", arg: 1, scope: !11016, file: !995, line: 145, type: !940)
!11018 = !DILocation(line: 145, column: 19, scope: !11016)
!11019 = !DILocalVariable(name: "resblock", arg: 2, scope: !11016, file: !995, line: 145, type: !47)
!11020 = !DILocation(line: 145, column: 33, scope: !11016)
!11021 = !DILocation(line: 147, column: 25, scope: !11016)
!11022 = !DILocation(line: 147, column: 40, scope: !11016)
!11023 = !DILocation(line: 147, column: 11, scope: !11016)
!11024 = !DILocation(line: 147, column: 3, scope: !11016)
!11025 = !DILocation(line: 149, column: 13, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11016, file: !995, line: 148, column: 5)
!11027 = !DILocation(line: 150, column: 16, scope: !11026)
!11028 = !DILocalVariable(name: "buffer", scope: !11016, file: !995, line: 153, type: !7)
!11029 = !DILocation(line: 153, column: 9, scope: !11016)
!11030 = !DILocation(line: 153, column: 18, scope: !11016)
!11031 = !DILocation(line: 154, column: 8, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11016, file: !995, line: 154, column: 7)
!11033 = !DILocation(line: 154, column: 7, scope: !11016)
!11034 = !DILocation(line: 155, column: 5, scope: !11032)
!11035 = !DILocalVariable(name: "ctx", scope: !11016, file: !995, line: 157, type: !919)
!11036 = !DILocation(line: 157, column: 18, scope: !11016)
!11037 = !DILocation(line: 158, column: 3, scope: !11016)
!11038 = !DILocalVariable(name: "sum", scope: !11016, file: !995, line: 159, type: !52)
!11039 = !DILocation(line: 159, column: 10, scope: !11016)
!11040 = !DILocation(line: 162, column: 3, scope: !11016)
!11041 = !DILocalVariable(name: "n", scope: !11042, file: !995, line: 167, type: !52)
!11042 = distinct !DILexicalBlock(scope: !11016, file: !995, line: 163, column: 5)
!11043 = !DILocation(line: 167, column: 14, scope: !11042)
!11044 = !DILocation(line: 168, column: 11, scope: !11042)
!11045 = !DILocation(line: 171, column: 7, scope: !11042)
!11046 = !DILocation(line: 178, column: 15, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !995, line: 178, column: 15)
!11048 = distinct !DILexicalBlock(scope: !11042, file: !995, line: 172, column: 9)
!11049 = !DILocation(line: 178, column: 15, scope: !11048)
!11050 = !DILocation(line: 179, column: 13, scope: !11047)
!11051 = !DILocation(line: 181, column: 15, scope: !11048)
!11052 = !DILocation(line: 181, column: 13, scope: !11048)
!11053 = !DILocation(line: 183, column: 18, scope: !11048)
!11054 = !DILocation(line: 183, column: 15, scope: !11048)
!11055 = !DILocation(line: 185, column: 15, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11048, file: !995, line: 185, column: 15)
!11057 = !DILocation(line: 185, column: 19, scope: !11056)
!11058 = !DILocation(line: 185, column: 15, scope: !11048)
!11059 = !DILocation(line: 186, column: 13, scope: !11056)
!11060 = !DILocation(line: 188, column: 15, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11048, file: !995, line: 188, column: 15)
!11062 = !DILocation(line: 188, column: 17, scope: !11061)
!11063 = !DILocation(line: 188, column: 15, scope: !11048)
!11064 = !DILocation(line: 193, column: 19, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !995, line: 193, column: 19)
!11066 = distinct !DILexicalBlock(scope: !11061, file: !995, line: 189, column: 13)
!11067 = !DILocation(line: 193, column: 19, scope: !11066)
!11068 = !DILocation(line: 195, column: 25, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11065, file: !995, line: 194, column: 17)
!11070 = !DILocation(line: 195, column: 19, scope: !11069)
!11071 = !DILocation(line: 196, column: 19, scope: !11069)
!11072 = !DILocation(line: 198, column: 15, scope: !11066)
!11073 = distinct !{!11073, !11045, !11074}
!11074 = !DILocation(line: 200, column: 9, scope: !11042)
!11075 = !DILocation(line: 205, column: 26, scope: !11042)
!11076 = !DILocation(line: 205, column: 7, scope: !11042)
!11077 = distinct !{!11077, !11040, !11078}
!11078 = !DILocation(line: 206, column: 5, scope: !11016)
!11079 = !DILabel(scope: !11016, name: "process_partial_block", file: !995, line: 208)
!11080 = !DILocation(line: 208, column: 1, scope: !11016)
!11081 = !DILocation(line: 211, column: 7, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11016, file: !995, line: 211, column: 7)
!11083 = !DILocation(line: 211, column: 11, scope: !11082)
!11084 = !DILocation(line: 211, column: 7, scope: !11016)
!11085 = !DILocation(line: 212, column: 24, scope: !11082)
!11086 = !DILocation(line: 212, column: 32, scope: !11082)
!11087 = !DILocation(line: 212, column: 5, scope: !11082)
!11088 = !DILocation(line: 215, column: 25, scope: !11016)
!11089 = !DILocation(line: 215, column: 3, scope: !11016)
!11090 = !DILocation(line: 216, column: 9, scope: !11016)
!11091 = !DILocation(line: 216, column: 3, scope: !11016)
!11092 = !DILocation(line: 217, column: 3, scope: !11016)
!11093 = !DILocation(line: 218, column: 1, scope: !11016)
!11094 = distinct !DISubprogram(name: "afalg_stream", scope: !11095, file: !11095, line: 103, type: !990, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !912, retainedNodes: !309)
!11095 = !DIFile(filename: "./lib/af_alg.h", directory: "/home/mohamad/clone/coreutils")
!11096 = !DILocalVariable(name: "stream", arg: 1, scope: !11094, file: !11095, line: 103, type: !940)
!11097 = !DILocation(line: 103, column: 21, scope: !11094)
!11098 = !DILocalVariable(name: "alg", arg: 2, scope: !11094, file: !11095, line: 103, type: !87)
!11099 = !DILocation(line: 103, column: 41, scope: !11094)
!11100 = !DILocalVariable(name: "resblock", arg: 3, scope: !11094, file: !11095, line: 104, type: !47)
!11101 = !DILocation(line: 104, column: 21, scope: !11094)
!11102 = !DILocalVariable(name: "hashlen", arg: 4, scope: !11094, file: !11095, line: 104, type: !992)
!11103 = !DILocation(line: 104, column: 39, scope: !11094)
!11104 = !DILocation(line: 106, column: 3, scope: !11094)
!11105 = distinct !DISubprogram(name: "md5_process_bytes", scope: !995, file: !995, line: 243, type: !982, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!11106 = !DILocalVariable(name: "buffer", arg: 1, scope: !11105, file: !995, line: 243, type: !85)
!11107 = !DILocation(line: 243, column: 32, scope: !11105)
!11108 = !DILocalVariable(name: "len", arg: 2, scope: !11105, file: !995, line: 243, type: !52)
!11109 = !DILocation(line: 243, column: 47, scope: !11105)
!11110 = !DILocalVariable(name: "ctx", arg: 3, scope: !11105, file: !995, line: 243, type: !918)
!11111 = !DILocation(line: 243, column: 68, scope: !11105)
!11112 = !DILocation(line: 247, column: 7, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11105, file: !995, line: 247, column: 7)
!11114 = !DILocation(line: 247, column: 12, scope: !11113)
!11115 = !DILocation(line: 247, column: 19, scope: !11113)
!11116 = !DILocation(line: 247, column: 7, scope: !11105)
!11117 = !DILocalVariable(name: "left_over", scope: !11118, file: !995, line: 249, type: !52)
!11118 = distinct !DILexicalBlock(scope: !11113, file: !995, line: 248, column: 5)
!11119 = !DILocation(line: 249, column: 14, scope: !11118)
!11120 = !DILocation(line: 249, column: 26, scope: !11118)
!11121 = !DILocation(line: 249, column: 31, scope: !11118)
!11122 = !DILocalVariable(name: "add", scope: !11118, file: !995, line: 250, type: !52)
!11123 = !DILocation(line: 250, column: 14, scope: !11118)
!11124 = !DILocation(line: 250, column: 26, scope: !11118)
!11125 = !DILocation(line: 250, column: 24, scope: !11118)
!11126 = !DILocation(line: 250, column: 38, scope: !11118)
!11127 = !DILocation(line: 250, column: 36, scope: !11118)
!11128 = !DILocation(line: 250, column: 20, scope: !11118)
!11129 = !DILocation(line: 250, column: 44, scope: !11118)
!11130 = !DILocation(line: 250, column: 56, scope: !11118)
!11131 = !DILocation(line: 250, column: 54, scope: !11118)
!11132 = !DILocation(line: 252, column: 26, scope: !11118)
!11133 = !DILocation(line: 252, column: 31, scope: !11118)
!11134 = !DILocation(line: 252, column: 16, scope: !11118)
!11135 = !DILocation(line: 252, column: 39, scope: !11118)
!11136 = !DILocation(line: 252, column: 51, scope: !11118)
!11137 = !DILocation(line: 252, column: 59, scope: !11118)
!11138 = !DILocation(line: 252, column: 7, scope: !11118)
!11139 = !DILocation(line: 253, column: 22, scope: !11118)
!11140 = !DILocation(line: 253, column: 7, scope: !11118)
!11141 = !DILocation(line: 253, column: 12, scope: !11118)
!11142 = !DILocation(line: 253, column: 19, scope: !11118)
!11143 = !DILocation(line: 255, column: 11, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11118, file: !995, line: 255, column: 11)
!11145 = !DILocation(line: 255, column: 16, scope: !11144)
!11146 = !DILocation(line: 255, column: 23, scope: !11144)
!11147 = !DILocation(line: 255, column: 11, scope: !11118)
!11148 = !DILocation(line: 257, column: 30, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11144, file: !995, line: 256, column: 9)
!11150 = !DILocation(line: 257, column: 35, scope: !11149)
!11151 = !DILocation(line: 257, column: 43, scope: !11149)
!11152 = !DILocation(line: 257, column: 48, scope: !11149)
!11153 = !DILocation(line: 257, column: 55, scope: !11149)
!11154 = !DILocation(line: 257, column: 62, scope: !11149)
!11155 = !DILocation(line: 257, column: 11, scope: !11149)
!11156 = !DILocation(line: 259, column: 11, scope: !11149)
!11157 = !DILocation(line: 259, column: 16, scope: !11149)
!11158 = !DILocation(line: 259, column: 23, scope: !11149)
!11159 = !DILocation(line: 262, column: 19, scope: !11149)
!11160 = !DILocation(line: 262, column: 24, scope: !11149)
!11161 = !DILocation(line: 262, column: 11, scope: !11149)
!11162 = !DILocation(line: 263, column: 30, scope: !11149)
!11163 = !DILocation(line: 263, column: 35, scope: !11149)
!11164 = !DILocation(line: 263, column: 20, scope: !11149)
!11165 = !DILocation(line: 263, column: 44, scope: !11149)
!11166 = !DILocation(line: 263, column: 56, scope: !11149)
!11167 = !DILocation(line: 263, column: 54, scope: !11149)
!11168 = !DILocation(line: 263, column: 61, scope: !11149)
!11169 = !DILocation(line: 264, column: 19, scope: !11149)
!11170 = !DILocation(line: 264, column: 24, scope: !11149)
!11171 = !DILocation(line: 265, column: 9, scope: !11149)
!11172 = !DILocation(line: 267, column: 31, scope: !11118)
!11173 = !DILocation(line: 267, column: 40, scope: !11118)
!11174 = !DILocation(line: 267, column: 38, scope: !11118)
!11175 = !DILocation(line: 267, column: 14, scope: !11118)
!11176 = !DILocation(line: 268, column: 14, scope: !11118)
!11177 = !DILocation(line: 268, column: 11, scope: !11118)
!11178 = !DILocation(line: 269, column: 5, scope: !11118)
!11179 = !DILocation(line: 272, column: 7, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11105, file: !995, line: 272, column: 7)
!11181 = !DILocation(line: 272, column: 11, scope: !11180)
!11182 = !DILocation(line: 272, column: 7, scope: !11105)
!11183 = !DILocation(line: 276, column: 11, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !995, line: 276, column: 11)
!11185 = distinct !DILexicalBlock(scope: !11180, file: !995, line: 273, column: 5)
!11186 = !DILocation(line: 276, column: 11, scope: !11185)
!11187 = !DILocation(line: 277, column: 9, scope: !11184)
!11188 = !DILocation(line: 277, column: 16, scope: !11184)
!11189 = !DILocation(line: 277, column: 20, scope: !11184)
!11190 = !DILocation(line: 279, column: 40, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11184, file: !995, line: 278, column: 11)
!11192 = !DILocation(line: 279, column: 45, scope: !11191)
!11193 = !DILocation(line: 279, column: 32, scope: !11191)
!11194 = !DILocation(line: 279, column: 53, scope: !11191)
!11195 = !DILocation(line: 279, column: 70, scope: !11191)
!11196 = !DILocation(line: 279, column: 13, scope: !11191)
!11197 = !DILocation(line: 280, column: 37, scope: !11191)
!11198 = !DILocation(line: 280, column: 44, scope: !11191)
!11199 = !DILocation(line: 280, column: 20, scope: !11191)
!11200 = !DILocation(line: 281, column: 17, scope: !11191)
!11201 = distinct !{!11201, !11187, !11202}
!11202 = !DILocation(line: 282, column: 11, scope: !11184)
!11203 = !DILocation(line: 286, column: 30, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11184, file: !995, line: 285, column: 9)
!11205 = !DILocation(line: 286, column: 38, scope: !11204)
!11206 = !DILocation(line: 286, column: 42, scope: !11204)
!11207 = !DILocation(line: 286, column: 49, scope: !11204)
!11208 = !DILocation(line: 286, column: 11, scope: !11204)
!11209 = !DILocation(line: 287, column: 35, scope: !11204)
!11210 = !DILocation(line: 287, column: 45, scope: !11204)
!11211 = !DILocation(line: 287, column: 49, scope: !11204)
!11212 = !DILocation(line: 287, column: 42, scope: !11204)
!11213 = !DILocation(line: 287, column: 18, scope: !11204)
!11214 = !DILocation(line: 288, column: 15, scope: !11204)
!11215 = !DILocation(line: 290, column: 5, scope: !11185)
!11216 = !DILocation(line: 293, column: 7, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11105, file: !995, line: 293, column: 7)
!11218 = !DILocation(line: 293, column: 11, scope: !11217)
!11219 = !DILocation(line: 293, column: 7, scope: !11105)
!11220 = !DILocalVariable(name: "left_over", scope: !11221, file: !995, line: 295, type: !52)
!11221 = distinct !DILexicalBlock(scope: !11217, file: !995, line: 294, column: 5)
!11222 = !DILocation(line: 295, column: 14, scope: !11221)
!11223 = !DILocation(line: 295, column: 26, scope: !11221)
!11224 = !DILocation(line: 295, column: 31, scope: !11221)
!11225 = !DILocation(line: 297, column: 26, scope: !11221)
!11226 = !DILocation(line: 297, column: 31, scope: !11221)
!11227 = !DILocation(line: 297, column: 16, scope: !11221)
!11228 = !DILocation(line: 297, column: 39, scope: !11221)
!11229 = !DILocation(line: 297, column: 51, scope: !11221)
!11230 = !DILocation(line: 297, column: 59, scope: !11221)
!11231 = !DILocation(line: 297, column: 7, scope: !11221)
!11232 = !DILocation(line: 298, column: 20, scope: !11221)
!11233 = !DILocation(line: 298, column: 17, scope: !11221)
!11234 = !DILocation(line: 299, column: 11, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11221, file: !995, line: 299, column: 11)
!11236 = !DILocation(line: 299, column: 21, scope: !11235)
!11237 = !DILocation(line: 299, column: 11, scope: !11221)
!11238 = !DILocation(line: 301, column: 30, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11235, file: !995, line: 300, column: 9)
!11240 = !DILocation(line: 301, column: 35, scope: !11239)
!11241 = !DILocation(line: 301, column: 47, scope: !11239)
!11242 = !DILocation(line: 301, column: 11, scope: !11239)
!11243 = !DILocation(line: 302, column: 21, scope: !11239)
!11244 = !DILocation(line: 305, column: 19, scope: !11239)
!11245 = !DILocation(line: 305, column: 24, scope: !11239)
!11246 = !DILocation(line: 305, column: 11, scope: !11239)
!11247 = !DILocation(line: 305, column: 33, scope: !11239)
!11248 = !DILocation(line: 305, column: 38, scope: !11239)
!11249 = !DILocation(line: 305, column: 50, scope: !11239)
!11250 = !DILocation(line: 306, column: 9, scope: !11239)
!11251 = !DILocation(line: 307, column: 21, scope: !11221)
!11252 = !DILocation(line: 307, column: 7, scope: !11221)
!11253 = !DILocation(line: 307, column: 12, scope: !11221)
!11254 = !DILocation(line: 307, column: 19, scope: !11221)
!11255 = !DILocation(line: 308, column: 5, scope: !11221)
!11256 = !DILocation(line: 309, column: 1, scope: !11105)
!11257 = distinct !DISubprogram(name: "md5_buffer", scope: !995, file: !995, line: 227, type: !980, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !912, retainedNodes: !309)
!11258 = !DILocalVariable(name: "buffer", arg: 1, scope: !11257, file: !995, line: 227, type: !87)
!11259 = !DILocation(line: 227, column: 25, scope: !11257)
!11260 = !DILocalVariable(name: "len", arg: 2, scope: !11257, file: !995, line: 227, type: !52)
!11261 = !DILocation(line: 227, column: 40, scope: !11257)
!11262 = !DILocalVariable(name: "resblock", arg: 3, scope: !11257, file: !995, line: 227, type: !47)
!11263 = !DILocation(line: 227, column: 51, scope: !11257)
!11264 = !DILocalVariable(name: "ctx", scope: !11257, file: !995, line: 229, type: !919)
!11265 = !DILocation(line: 229, column: 18, scope: !11257)
!11266 = !DILocation(line: 232, column: 3, scope: !11257)
!11267 = !DILocation(line: 235, column: 22, scope: !11257)
!11268 = !DILocation(line: 235, column: 30, scope: !11257)
!11269 = !DILocation(line: 235, column: 3, scope: !11257)
!11270 = !DILocation(line: 238, column: 32, scope: !11257)
!11271 = !DILocation(line: 238, column: 10, scope: !11257)
!11272 = !DILocation(line: 238, column: 3, scope: !11257)
!11273 = distinct !DISubprogram(name: "fdadvise", scope: !11274, file: !11274, line: 31, type: !1482, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1469, retainedNodes: !309)
!11274 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!11275 = !DILocalVariable(name: "fd", arg: 1, scope: !11273, file: !11274, line: 31, type: !5)
!11276 = !DILocation(line: 31, column: 15, scope: !11273)
!11277 = !DILocalVariable(name: "offset", arg: 2, scope: !11273, file: !11274, line: 31, type: !1484)
!11278 = !DILocation(line: 31, column: 25, scope: !11273)
!11279 = !DILocalVariable(name: "len", arg: 3, scope: !11273, file: !11274, line: 31, type: !1484)
!11280 = !DILocation(line: 31, column: 39, scope: !11273)
!11281 = !DILocalVariable(name: "advice", arg: 4, scope: !11273, file: !11274, line: 31, type: !1485)
!11282 = !DILocation(line: 31, column: 54, scope: !11273)
!11283 = !DILocalVariable(name: "__x", scope: !11284, file: !11274, line: 34, type: !5)
!11284 = distinct !DILexicalBlock(scope: !11273, file: !11274, line: 34, column: 3)
!11285 = !DILocation(line: 34, column: 3, scope: !11284)
!11286 = !DILocation(line: 36, column: 1, scope: !11273)
!11287 = distinct !DISubprogram(name: "fadvise", scope: !11274, file: !11274, line: 39, type: !1486, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1469, retainedNodes: !309)
!11288 = !DILocalVariable(name: "fp", arg: 1, scope: !11287, file: !11274, line: 39, type: !1488)
!11289 = !DILocation(line: 39, column: 16, scope: !11287)
!11290 = !DILocalVariable(name: "advice", arg: 2, scope: !11287, file: !11274, line: 39, type: !1485)
!11291 = !DILocation(line: 39, column: 30, scope: !11287)
!11292 = !DILocation(line: 41, column: 7, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11287, file: !11274, line: 41, column: 7)
!11294 = !DILocation(line: 41, column: 7, scope: !11287)
!11295 = !DILocation(line: 42, column: 23, scope: !11293)
!11296 = !DILocation(line: 42, column: 15, scope: !11293)
!11297 = !DILocation(line: 42, column: 34, scope: !11293)
!11298 = !DILocation(line: 42, column: 5, scope: !11293)
!11299 = !DILocation(line: 43, column: 1, scope: !11287)
!11300 = distinct !DISubprogram(name: "filevercmp", scope: !11301, file: !11301, line: 125, type: !474, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1528, retainedNodes: !309)
!11301 = !DIFile(filename: "lib/filevercmp.c", directory: "/home/mohamad/clone/coreutils")
!11302 = !DILocalVariable(name: "s1", arg: 1, scope: !11300, file: !11301, line: 125, type: !87)
!11303 = !DILocation(line: 125, column: 25, scope: !11300)
!11304 = !DILocalVariable(name: "s2", arg: 2, scope: !11300, file: !11301, line: 125, type: !87)
!11305 = !DILocation(line: 125, column: 41, scope: !11300)
!11306 = !DILocalVariable(name: "s1_pos", scope: !11300, file: !11301, line: 127, type: !87)
!11307 = !DILocation(line: 127, column: 15, scope: !11300)
!11308 = !DILocalVariable(name: "s2_pos", scope: !11300, file: !11301, line: 128, type: !87)
!11309 = !DILocation(line: 128, column: 15, scope: !11300)
!11310 = !DILocalVariable(name: "s1_suffix", scope: !11300, file: !11301, line: 129, type: !87)
!11311 = !DILocation(line: 129, column: 15, scope: !11300)
!11312 = !DILocalVariable(name: "s2_suffix", scope: !11300, file: !11301, line: 129, type: !87)
!11313 = !DILocation(line: 129, column: 27, scope: !11300)
!11314 = !DILocalVariable(name: "s1_len", scope: !11300, file: !11301, line: 130, type: !52)
!11315 = !DILocation(line: 130, column: 10, scope: !11300)
!11316 = !DILocalVariable(name: "s2_len", scope: !11300, file: !11301, line: 130, type: !52)
!11317 = !DILocation(line: 130, column: 18, scope: !11300)
!11318 = !DILocalVariable(name: "result", scope: !11300, file: !11301, line: 131, type: !5)
!11319 = !DILocation(line: 131, column: 7, scope: !11300)
!11320 = !DILocalVariable(name: "simple_cmp", scope: !11300, file: !11301, line: 134, type: !5)
!11321 = !DILocation(line: 134, column: 7, scope: !11300)
!11322 = !DILocation(line: 134, column: 28, scope: !11300)
!11323 = !DILocation(line: 134, column: 32, scope: !11300)
!11324 = !DILocation(line: 134, column: 20, scope: !11300)
!11325 = !DILocation(line: 135, column: 7, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 135, column: 7)
!11327 = !DILocation(line: 135, column: 18, scope: !11326)
!11328 = !DILocation(line: 135, column: 7, scope: !11300)
!11329 = !DILocation(line: 136, column: 5, scope: !11326)
!11330 = !DILocation(line: 139, column: 9, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 139, column: 7)
!11332 = !DILocation(line: 139, column: 8, scope: !11331)
!11333 = !DILocation(line: 139, column: 7, scope: !11300)
!11334 = !DILocation(line: 140, column: 5, scope: !11331)
!11335 = !DILocation(line: 141, column: 9, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 141, column: 7)
!11337 = !DILocation(line: 141, column: 8, scope: !11336)
!11338 = !DILocation(line: 141, column: 7, scope: !11300)
!11339 = !DILocation(line: 142, column: 5, scope: !11336)
!11340 = !DILocation(line: 143, column: 25, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 143, column: 7)
!11342 = !DILocation(line: 143, column: 12, scope: !11341)
!11343 = !DILocation(line: 143, column: 9, scope: !11341)
!11344 = !DILocation(line: 143, column: 7, scope: !11300)
!11345 = !DILocation(line: 144, column: 5, scope: !11341)
!11346 = !DILocation(line: 145, column: 25, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 145, column: 7)
!11348 = !DILocation(line: 145, column: 12, scope: !11347)
!11349 = !DILocation(line: 145, column: 9, scope: !11347)
!11350 = !DILocation(line: 145, column: 7, scope: !11300)
!11351 = !DILocation(line: 146, column: 5, scope: !11347)
!11352 = !DILocation(line: 147, column: 26, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 147, column: 7)
!11354 = !DILocation(line: 147, column: 12, scope: !11353)
!11355 = !DILocation(line: 147, column: 9, scope: !11353)
!11356 = !DILocation(line: 147, column: 7, scope: !11300)
!11357 = !DILocation(line: 148, column: 5, scope: !11353)
!11358 = !DILocation(line: 149, column: 26, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 149, column: 7)
!11360 = !DILocation(line: 149, column: 12, scope: !11359)
!11361 = !DILocation(line: 149, column: 9, scope: !11359)
!11362 = !DILocation(line: 149, column: 7, scope: !11300)
!11363 = !DILocation(line: 150, column: 5, scope: !11359)
!11364 = !DILocation(line: 153, column: 8, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 153, column: 7)
!11366 = !DILocation(line: 153, column: 7, scope: !11365)
!11367 = !DILocation(line: 153, column: 11, scope: !11365)
!11368 = !DILocation(line: 153, column: 18, scope: !11365)
!11369 = !DILocation(line: 153, column: 22, scope: !11365)
!11370 = !DILocation(line: 153, column: 21, scope: !11365)
!11371 = !DILocation(line: 153, column: 25, scope: !11365)
!11372 = !DILocation(line: 153, column: 7, scope: !11300)
!11373 = !DILocation(line: 154, column: 5, scope: !11365)
!11374 = !DILocation(line: 155, column: 8, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 155, column: 7)
!11376 = !DILocation(line: 155, column: 7, scope: !11375)
!11377 = !DILocation(line: 155, column: 11, scope: !11375)
!11378 = !DILocation(line: 155, column: 18, scope: !11375)
!11379 = !DILocation(line: 155, column: 22, scope: !11375)
!11380 = !DILocation(line: 155, column: 21, scope: !11375)
!11381 = !DILocation(line: 155, column: 25, scope: !11375)
!11382 = !DILocation(line: 155, column: 7, scope: !11300)
!11383 = !DILocation(line: 156, column: 5, scope: !11375)
!11384 = !DILocation(line: 157, column: 8, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 157, column: 7)
!11386 = !DILocation(line: 157, column: 7, scope: !11385)
!11387 = !DILocation(line: 157, column: 11, scope: !11385)
!11388 = !DILocation(line: 157, column: 18, scope: !11385)
!11389 = !DILocation(line: 157, column: 22, scope: !11385)
!11390 = !DILocation(line: 157, column: 21, scope: !11385)
!11391 = !DILocation(line: 157, column: 25, scope: !11385)
!11392 = !DILocation(line: 157, column: 7, scope: !11300)
!11393 = !DILocation(line: 159, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11385, file: !11301, line: 158, column: 5)
!11395 = !DILocation(line: 160, column: 9, scope: !11394)
!11396 = !DILocation(line: 161, column: 5, scope: !11394)
!11397 = !DILocation(line: 164, column: 12, scope: !11300)
!11398 = !DILocation(line: 164, column: 10, scope: !11300)
!11399 = !DILocation(line: 165, column: 12, scope: !11300)
!11400 = !DILocation(line: 165, column: 10, scope: !11300)
!11401 = !DILocation(line: 166, column: 15, scope: !11300)
!11402 = !DILocation(line: 166, column: 13, scope: !11300)
!11403 = !DILocation(line: 167, column: 15, scope: !11300)
!11404 = !DILocation(line: 167, column: 13, scope: !11300)
!11405 = !DILocation(line: 168, column: 13, scope: !11300)
!11406 = !DILocation(line: 168, column: 25, scope: !11300)
!11407 = !DILocation(line: 168, column: 37, scope: !11300)
!11408 = !DILocation(line: 168, column: 47, scope: !11300)
!11409 = !DILocation(line: 168, column: 45, scope: !11300)
!11410 = !DILocation(line: 168, column: 10, scope: !11300)
!11411 = !DILocation(line: 169, column: 13, scope: !11300)
!11412 = !DILocation(line: 169, column: 25, scope: !11300)
!11413 = !DILocation(line: 169, column: 37, scope: !11300)
!11414 = !DILocation(line: 169, column: 47, scope: !11300)
!11415 = !DILocation(line: 169, column: 45, scope: !11300)
!11416 = !DILocation(line: 169, column: 10, scope: !11300)
!11417 = !DILocation(line: 172, column: 8, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11300, file: !11301, line: 172, column: 7)
!11419 = !DILocation(line: 172, column: 18, scope: !11418)
!11420 = !DILocation(line: 172, column: 21, scope: !11418)
!11421 = !DILocation(line: 172, column: 32, scope: !11418)
!11422 = !DILocation(line: 172, column: 36, scope: !11418)
!11423 = !DILocation(line: 172, column: 46, scope: !11418)
!11424 = !DILocation(line: 172, column: 43, scope: !11418)
!11425 = !DILocation(line: 173, column: 7, scope: !11418)
!11426 = !DILocation(line: 173, column: 24, scope: !11418)
!11427 = !DILocation(line: 173, column: 28, scope: !11418)
!11428 = !DILocation(line: 173, column: 32, scope: !11418)
!11429 = !DILocation(line: 173, column: 15, scope: !11418)
!11430 = !DILocation(line: 173, column: 12, scope: !11418)
!11431 = !DILocation(line: 172, column: 7, scope: !11300)
!11432 = !DILocation(line: 175, column: 16, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11418, file: !11301, line: 174, column: 5)
!11434 = !DILocation(line: 175, column: 25, scope: !11433)
!11435 = !DILocation(line: 175, column: 23, scope: !11433)
!11436 = !DILocation(line: 175, column: 14, scope: !11433)
!11437 = !DILocation(line: 176, column: 16, scope: !11433)
!11438 = !DILocation(line: 176, column: 25, scope: !11433)
!11439 = !DILocation(line: 176, column: 23, scope: !11433)
!11440 = !DILocation(line: 176, column: 14, scope: !11433)
!11441 = !DILocation(line: 177, column: 5, scope: !11433)
!11442 = !DILocation(line: 179, column: 23, scope: !11300)
!11443 = !DILocation(line: 179, column: 27, scope: !11300)
!11444 = !DILocation(line: 179, column: 35, scope: !11300)
!11445 = !DILocation(line: 179, column: 39, scope: !11300)
!11446 = !DILocation(line: 179, column: 12, scope: !11300)
!11447 = !DILocation(line: 179, column: 10, scope: !11300)
!11448 = !DILocation(line: 180, column: 10, scope: !11300)
!11449 = !DILocation(line: 180, column: 17, scope: !11300)
!11450 = !DILocation(line: 180, column: 24, scope: !11300)
!11451 = !DILocation(line: 180, column: 37, scope: !11300)
!11452 = !DILocation(line: 180, column: 3, scope: !11300)
!11453 = !DILocation(line: 181, column: 1, scope: !11300)
!11454 = distinct !DISubprogram(name: "match_suffix", scope: !11301, file: !11301, line: 34, type: !1531, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1528, retainedNodes: !309)
!11455 = !DILocalVariable(name: "str", arg: 1, scope: !11454, file: !11301, line: 34, type: !371)
!11456 = !DILocation(line: 34, column: 28, scope: !11454)
!11457 = !DILocalVariable(name: "match", scope: !11454, file: !11301, line: 36, type: !87)
!11458 = !DILocation(line: 36, column: 15, scope: !11454)
!11459 = !DILocalVariable(name: "read_alpha", scope: !11454, file: !11301, line: 37, type: !102)
!11460 = !DILocation(line: 37, column: 8, scope: !11454)
!11461 = !DILocation(line: 38, column: 3, scope: !11454)
!11462 = !DILocation(line: 38, column: 12, scope: !11454)
!11463 = !DILocation(line: 38, column: 11, scope: !11454)
!11464 = !DILocation(line: 38, column: 10, scope: !11454)
!11465 = !DILocation(line: 40, column: 11, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !11301, line: 40, column: 11)
!11467 = distinct !DILexicalBlock(scope: !11454, file: !11301, line: 39, column: 5)
!11468 = !DILocation(line: 40, column: 11, scope: !11467)
!11469 = !DILocation(line: 42, column: 22, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !11301, line: 41, column: 9)
!11471 = !DILocation(line: 43, column: 29, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11470, file: !11301, line: 43, column: 15)
!11473 = !DILocation(line: 43, column: 28, scope: !11472)
!11474 = !DILocation(line: 43, column: 27, scope: !11472)
!11475 = !DILocation(line: 43, column: 16, scope: !11472)
!11476 = !DILocation(line: 43, column: 34, scope: !11472)
!11477 = !DILocation(line: 43, column: 46, scope: !11472)
!11478 = !DILocation(line: 43, column: 45, scope: !11472)
!11479 = !DILocation(line: 43, column: 44, scope: !11472)
!11480 = !DILocation(line: 43, column: 41, scope: !11472)
!11481 = !DILocation(line: 43, column: 15, scope: !11470)
!11482 = !DILocation(line: 44, column: 19, scope: !11472)
!11483 = !DILocation(line: 44, column: 13, scope: !11472)
!11484 = !DILocation(line: 45, column: 9, scope: !11470)
!11485 = !DILocation(line: 46, column: 25, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11466, file: !11301, line: 46, column: 16)
!11487 = !DILocation(line: 46, column: 24, scope: !11486)
!11488 = !DILocation(line: 46, column: 23, scope: !11486)
!11489 = !DILocation(line: 46, column: 20, scope: !11486)
!11490 = !DILocation(line: 46, column: 16, scope: !11466)
!11491 = !DILocation(line: 48, column: 22, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11486, file: !11301, line: 47, column: 9)
!11493 = !DILocation(line: 49, column: 16, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11492, file: !11301, line: 49, column: 15)
!11495 = !DILocation(line: 49, column: 15, scope: !11492)
!11496 = !DILocation(line: 50, column: 22, scope: !11494)
!11497 = !DILocation(line: 50, column: 21, scope: !11494)
!11498 = !DILocation(line: 50, column: 19, scope: !11494)
!11499 = !DILocation(line: 50, column: 13, scope: !11494)
!11500 = !DILocation(line: 51, column: 9, scope: !11492)
!11501 = !DILocation(line: 52, column: 30, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11486, file: !11301, line: 52, column: 16)
!11503 = !DILocation(line: 52, column: 29, scope: !11502)
!11504 = !DILocation(line: 52, column: 28, scope: !11502)
!11505 = !DILocation(line: 52, column: 17, scope: !11502)
!11506 = !DILocation(line: 52, column: 35, scope: !11502)
!11507 = !DILocation(line: 52, column: 47, scope: !11502)
!11508 = !DILocation(line: 52, column: 46, scope: !11502)
!11509 = !DILocation(line: 52, column: 45, scope: !11502)
!11510 = !DILocation(line: 52, column: 42, scope: !11502)
!11511 = !DILocation(line: 52, column: 16, scope: !11486)
!11512 = !DILocation(line: 53, column: 15, scope: !11502)
!11513 = !DILocation(line: 53, column: 9, scope: !11502)
!11514 = !DILocation(line: 54, column: 9, scope: !11467)
!11515 = !DILocation(line: 54, column: 13, scope: !11467)
!11516 = distinct !{!11516, !11461, !11517}
!11517 = !DILocation(line: 55, column: 5, scope: !11454)
!11518 = !DILocation(line: 56, column: 10, scope: !11454)
!11519 = !DILocation(line: 56, column: 3, scope: !11454)
!11520 = distinct !DISubprogram(name: "verrevcmp", scope: !11301, file: !11301, line: 84, type: !1533, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1528, retainedNodes: !309)
!11521 = !DILocalVariable(name: "s1", arg: 1, scope: !11520, file: !11301, line: 84, type: !87)
!11522 = !DILocation(line: 84, column: 24, scope: !11520)
!11523 = !DILocalVariable(name: "s1_len", arg: 2, scope: !11520, file: !11301, line: 84, type: !52)
!11524 = !DILocation(line: 84, column: 35, scope: !11520)
!11525 = !DILocalVariable(name: "s2", arg: 3, scope: !11520, file: !11301, line: 84, type: !87)
!11526 = !DILocation(line: 84, column: 55, scope: !11520)
!11527 = !DILocalVariable(name: "s2_len", arg: 4, scope: !11520, file: !11301, line: 84, type: !52)
!11528 = !DILocation(line: 84, column: 66, scope: !11520)
!11529 = !DILocalVariable(name: "s1_pos", scope: !11520, file: !11301, line: 86, type: !52)
!11530 = !DILocation(line: 86, column: 10, scope: !11520)
!11531 = !DILocalVariable(name: "s2_pos", scope: !11520, file: !11301, line: 87, type: !52)
!11532 = !DILocation(line: 87, column: 10, scope: !11520)
!11533 = !DILocation(line: 88, column: 3, scope: !11520)
!11534 = !DILocation(line: 88, column: 10, scope: !11520)
!11535 = !DILocation(line: 88, column: 19, scope: !11520)
!11536 = !DILocation(line: 88, column: 17, scope: !11520)
!11537 = !DILocation(line: 88, column: 26, scope: !11520)
!11538 = !DILocation(line: 88, column: 29, scope: !11520)
!11539 = !DILocation(line: 88, column: 38, scope: !11520)
!11540 = !DILocation(line: 88, column: 36, scope: !11520)
!11541 = !DILocalVariable(name: "first_diff", scope: !11542, file: !11301, line: 90, type: !5)
!11542 = distinct !DILexicalBlock(scope: !11520, file: !11301, line: 89, column: 5)
!11543 = !DILocation(line: 90, column: 11, scope: !11542)
!11544 = !DILocation(line: 91, column: 7, scope: !11542)
!11545 = !DILocation(line: 91, column: 15, scope: !11542)
!11546 = !DILocation(line: 91, column: 24, scope: !11542)
!11547 = !DILocation(line: 91, column: 22, scope: !11542)
!11548 = !DILocation(line: 91, column: 31, scope: !11542)
!11549 = !DILocation(line: 91, column: 46, scope: !11542)
!11550 = !DILocation(line: 91, column: 49, scope: !11542)
!11551 = !DILocation(line: 91, column: 35, scope: !11542)
!11552 = !DILocation(line: 92, column: 14, scope: !11542)
!11553 = !DILocation(line: 92, column: 18, scope: !11542)
!11554 = !DILocation(line: 92, column: 27, scope: !11542)
!11555 = !DILocation(line: 92, column: 25, scope: !11542)
!11556 = !DILocation(line: 92, column: 34, scope: !11542)
!11557 = !DILocation(line: 92, column: 49, scope: !11542)
!11558 = !DILocation(line: 92, column: 52, scope: !11542)
!11559 = !DILocation(line: 92, column: 38, scope: !11542)
!11560 = !DILocation(line: 92, column: 37, scope: !11542)
!11561 = !DILocation(line: 0, scope: !11542)
!11562 = !DILocalVariable(name: "s1_c", scope: !11563, file: !11301, line: 94, type: !5)
!11563 = distinct !DILexicalBlock(scope: !11542, file: !11301, line: 93, column: 9)
!11564 = !DILocation(line: 94, column: 15, scope: !11563)
!11565 = !DILocation(line: 94, column: 23, scope: !11563)
!11566 = !DILocation(line: 94, column: 33, scope: !11563)
!11567 = !DILocation(line: 94, column: 30, scope: !11563)
!11568 = !DILocation(line: 94, column: 22, scope: !11563)
!11569 = !DILocation(line: 94, column: 54, scope: !11563)
!11570 = !DILocation(line: 94, column: 57, scope: !11563)
!11571 = !DILocation(line: 94, column: 47, scope: !11563)
!11572 = !DILocalVariable(name: "s2_c", scope: !11563, file: !11301, line: 95, type: !5)
!11573 = !DILocation(line: 95, column: 15, scope: !11563)
!11574 = !DILocation(line: 95, column: 23, scope: !11563)
!11575 = !DILocation(line: 95, column: 33, scope: !11563)
!11576 = !DILocation(line: 95, column: 30, scope: !11563)
!11577 = !DILocation(line: 95, column: 22, scope: !11563)
!11578 = !DILocation(line: 95, column: 54, scope: !11563)
!11579 = !DILocation(line: 95, column: 57, scope: !11563)
!11580 = !DILocation(line: 95, column: 47, scope: !11563)
!11581 = !DILocation(line: 96, column: 15, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11563, file: !11301, line: 96, column: 15)
!11583 = !DILocation(line: 96, column: 23, scope: !11582)
!11584 = !DILocation(line: 96, column: 20, scope: !11582)
!11585 = !DILocation(line: 96, column: 15, scope: !11563)
!11586 = !DILocation(line: 97, column: 20, scope: !11582)
!11587 = !DILocation(line: 97, column: 27, scope: !11582)
!11588 = !DILocation(line: 97, column: 25, scope: !11582)
!11589 = !DILocation(line: 97, column: 13, scope: !11582)
!11590 = !DILocation(line: 98, column: 17, scope: !11563)
!11591 = !DILocation(line: 99, column: 17, scope: !11563)
!11592 = distinct !{!11592, !11544, !11593}
!11593 = !DILocation(line: 100, column: 9, scope: !11542)
!11594 = !DILocation(line: 101, column: 7, scope: !11542)
!11595 = !DILocation(line: 101, column: 14, scope: !11542)
!11596 = !DILocation(line: 101, column: 17, scope: !11542)
!11597 = !DILocation(line: 101, column: 25, scope: !11542)
!11598 = !DILocation(line: 102, column: 15, scope: !11542)
!11599 = distinct !{!11599, !11594, !11598}
!11600 = !DILocation(line: 103, column: 7, scope: !11542)
!11601 = !DILocation(line: 103, column: 14, scope: !11542)
!11602 = !DILocation(line: 103, column: 17, scope: !11542)
!11603 = !DILocation(line: 103, column: 25, scope: !11542)
!11604 = !DILocation(line: 104, column: 15, scope: !11542)
!11605 = distinct !{!11605, !11600, !11604}
!11606 = !DILocation(line: 105, column: 7, scope: !11542)
!11607 = !DILocation(line: 105, column: 25, scope: !11542)
!11608 = !DILocation(line: 105, column: 28, scope: !11542)
!11609 = !DILocation(line: 105, column: 14, scope: !11542)
!11610 = !DILocation(line: 105, column: 37, scope: !11542)
!11611 = !DILocation(line: 105, column: 51, scope: !11542)
!11612 = !DILocation(line: 105, column: 54, scope: !11542)
!11613 = !DILocation(line: 105, column: 40, scope: !11542)
!11614 = !DILocation(line: 107, column: 16, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11301, line: 107, column: 15)
!11616 = distinct !DILexicalBlock(scope: !11542, file: !11301, line: 106, column: 9)
!11617 = !DILocation(line: 107, column: 15, scope: !11616)
!11618 = !DILocation(line: 108, column: 26, scope: !11615)
!11619 = !DILocation(line: 108, column: 29, scope: !11615)
!11620 = !DILocation(line: 108, column: 39, scope: !11615)
!11621 = !DILocation(line: 108, column: 42, scope: !11615)
!11622 = !DILocation(line: 108, column: 37, scope: !11615)
!11623 = !DILocation(line: 108, column: 24, scope: !11615)
!11624 = !DILocation(line: 108, column: 13, scope: !11615)
!11625 = !DILocation(line: 109, column: 17, scope: !11616)
!11626 = !DILocation(line: 110, column: 17, scope: !11616)
!11627 = distinct !{!11627, !11606, !11628}
!11628 = !DILocation(line: 111, column: 9, scope: !11542)
!11629 = !DILocation(line: 112, column: 22, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11542, file: !11301, line: 112, column: 11)
!11631 = !DILocation(line: 112, column: 25, scope: !11630)
!11632 = !DILocation(line: 112, column: 11, scope: !11630)
!11633 = !DILocation(line: 112, column: 11, scope: !11542)
!11634 = !DILocation(line: 113, column: 9, scope: !11630)
!11635 = !DILocation(line: 114, column: 22, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11542, file: !11301, line: 114, column: 11)
!11637 = !DILocation(line: 114, column: 25, scope: !11636)
!11638 = !DILocation(line: 114, column: 11, scope: !11636)
!11639 = !DILocation(line: 114, column: 11, scope: !11542)
!11640 = !DILocation(line: 115, column: 9, scope: !11636)
!11641 = !DILocation(line: 116, column: 11, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11542, file: !11301, line: 116, column: 11)
!11643 = !DILocation(line: 116, column: 11, scope: !11542)
!11644 = !DILocation(line: 117, column: 16, scope: !11642)
!11645 = !DILocation(line: 117, column: 9, scope: !11642)
!11646 = distinct !{!11646, !11533, !11647}
!11647 = !DILocation(line: 118, column: 5, scope: !11520)
!11648 = !DILocation(line: 119, column: 3, scope: !11520)
!11649 = !DILocation(line: 120, column: 1, scope: !11520)
!11650 = distinct !DISubprogram(name: "order", scope: !11301, file: !11301, line: 61, type: !1535, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1528, retainedNodes: !309)
!11651 = !DILocalVariable(name: "c", arg: 1, scope: !11650, file: !11301, line: 61, type: !317)
!11652 = !DILocation(line: 61, column: 22, scope: !11650)
!11653 = !DILocation(line: 63, column: 18, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11650, file: !11301, line: 63, column: 7)
!11655 = !DILocation(line: 63, column: 7, scope: !11654)
!11656 = !DILocation(line: 63, column: 7, scope: !11650)
!11657 = !DILocation(line: 64, column: 5, scope: !11654)
!11658 = !DILocation(line: 65, column: 23, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11654, file: !11301, line: 65, column: 12)
!11660 = !DILocation(line: 65, column: 12, scope: !11659)
!11661 = !DILocation(line: 65, column: 12, scope: !11654)
!11662 = !DILocation(line: 66, column: 12, scope: !11659)
!11663 = !DILocation(line: 66, column: 5, scope: !11659)
!11664 = !DILocation(line: 67, column: 12, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11659, file: !11301, line: 67, column: 12)
!11666 = !DILocation(line: 67, column: 14, scope: !11665)
!11667 = !DILocation(line: 67, column: 12, scope: !11659)
!11668 = !DILocation(line: 68, column: 5, scope: !11665)
!11669 = !DILocation(line: 70, column: 18, scope: !11665)
!11670 = !DILocation(line: 70, column: 12, scope: !11665)
!11671 = !DILocation(line: 70, column: 20, scope: !11665)
!11672 = !DILocation(line: 70, column: 32, scope: !11665)
!11673 = !DILocation(line: 70, column: 5, scope: !11665)
!11674 = !DILocation(line: 71, column: 1, scope: !11650)
!11675 = distinct !DISubprogram(name: "hard_locale", scope: !11676, file: !11676, line: 38, type: !1540, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1537, retainedNodes: !309)
!11676 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!11677 = !DILocalVariable(name: "category", arg: 1, scope: !11675, file: !11676, line: 38, type: !5)
!11678 = !DILocation(line: 38, column: 18, scope: !11675)
!11679 = !DILocalVariable(name: "hard", scope: !11675, file: !11676, line: 40, type: !102)
!11680 = !DILocation(line: 40, column: 8, scope: !11675)
!11681 = !DILocalVariable(name: "p", scope: !11675, file: !11676, line: 41, type: !87)
!11682 = !DILocation(line: 41, column: 15, scope: !11675)
!11683 = !DILocation(line: 41, column: 30, scope: !11675)
!11684 = !DILocation(line: 41, column: 19, scope: !11675)
!11685 = !DILocation(line: 43, column: 7, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11675, file: !11676, line: 43, column: 7)
!11687 = !DILocation(line: 43, column: 7, scope: !11675)
!11688 = !DILocation(line: 47, column: 23, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11690, file: !11676, line: 47, column: 15)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !11676, line: 46, column: 9)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !11676, line: 45, column: 11)
!11692 = distinct !DILexicalBlock(scope: !11686, file: !11676, line: 44, column: 5)
!11693 = !DILocation(line: 47, column: 15, scope: !11689)
!11694 = !DILocation(line: 47, column: 31, scope: !11689)
!11695 = !DILocation(line: 47, column: 36, scope: !11689)
!11696 = !DILocation(line: 47, column: 47, scope: !11689)
!11697 = !DILocation(line: 47, column: 39, scope: !11689)
!11698 = !DILocation(line: 47, column: 59, scope: !11689)
!11699 = !DILocation(line: 47, column: 15, scope: !11690)
!11700 = !DILocation(line: 48, column: 18, scope: !11689)
!11701 = !DILocation(line: 48, column: 13, scope: !11689)
!11702 = !DILocation(line: 69, column: 5, scope: !11692)
!11703 = !DILocation(line: 71, column: 10, scope: !11675)
!11704 = !DILocation(line: 71, column: 3, scope: !11675)
!11705 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !1014, file: !1014, line: 150, type: !1008, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11706 = !DILocalVariable(name: "table", arg: 1, scope: !11705, file: !1014, line: 150, type: !1010)
!11707 = !DILocation(line: 150, column: 39, scope: !11705)
!11708 = !DILocation(line: 152, column: 10, scope: !11705)
!11709 = !DILocation(line: 152, column: 17, scope: !11705)
!11710 = !{!11711, !2517, i64 16}
!11711 = !{!"hash_table", !2356, i64 0, !2356, i64 8, !2517, i64 16, !2517, i64 24, !2517, i64 32, !2356, i64 40, !2356, i64 48, !2356, i64 56, !2356, i64 64, !2356, i64 72}
!11712 = !DILocation(line: 152, column: 3, scope: !11705)
!11713 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !1014, file: !1014, line: 158, type: !1008, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11714 = !DILocalVariable(name: "table", arg: 1, scope: !11713, file: !1014, line: 158, type: !1010)
!11715 = !DILocation(line: 158, column: 44, scope: !11713)
!11716 = !DILocation(line: 160, column: 10, scope: !11713)
!11717 = !DILocation(line: 160, column: 17, scope: !11713)
!11718 = !{!11711, !2517, i64 24}
!11719 = !DILocation(line: 160, column: 3, scope: !11713)
!11720 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !1014, file: !1014, line: 166, type: !1008, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11721 = !DILocalVariable(name: "table", arg: 1, scope: !11720, file: !1014, line: 166, type: !1010)
!11722 = !DILocation(line: 166, column: 39, scope: !11720)
!11723 = !DILocation(line: 168, column: 10, scope: !11720)
!11724 = !DILocation(line: 168, column: 17, scope: !11720)
!11725 = !{!11711, !2517, i64 32}
!11726 = !DILocation(line: 168, column: 3, scope: !11720)
!11727 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !1014, file: !1014, line: 174, type: !1008, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11728 = !DILocalVariable(name: "table", arg: 1, scope: !11727, file: !1014, line: 174, type: !1010)
!11729 = !DILocation(line: 174, column: 47, scope: !11727)
!11730 = !DILocalVariable(name: "bucket", scope: !11727, file: !1014, line: 176, type: !1023)
!11731 = !DILocation(line: 176, column: 28, scope: !11727)
!11732 = !DILocalVariable(name: "max_bucket_length", scope: !11727, file: !1014, line: 177, type: !52)
!11733 = !DILocation(line: 177, column: 10, scope: !11727)
!11734 = !DILocation(line: 179, column: 17, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11727, file: !1014, line: 179, column: 3)
!11736 = !DILocation(line: 179, column: 24, scope: !11735)
!11737 = !{!11711, !2356, i64 0}
!11738 = !DILocation(line: 179, column: 15, scope: !11735)
!11739 = !DILocation(line: 179, column: 8, scope: !11735)
!11740 = !DILocation(line: 179, column: 32, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11735, file: !1014, line: 179, column: 3)
!11742 = !DILocation(line: 179, column: 41, scope: !11741)
!11743 = !DILocation(line: 179, column: 48, scope: !11741)
!11744 = !{!11711, !2356, i64 8}
!11745 = !DILocation(line: 179, column: 39, scope: !11741)
!11746 = !DILocation(line: 179, column: 3, scope: !11735)
!11747 = !DILocation(line: 181, column: 11, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !1014, line: 181, column: 11)
!11749 = distinct !DILexicalBlock(scope: !11741, file: !1014, line: 180, column: 5)
!11750 = !DILocation(line: 181, column: 19, scope: !11748)
!11751 = !{!11752, !2356, i64 0}
!11752 = !{!"hash_entry", !2356, i64 0, !2356, i64 8}
!11753 = !DILocation(line: 181, column: 11, scope: !11749)
!11754 = !DILocalVariable(name: "cursor", scope: !11755, file: !1014, line: 183, type: !1023)
!11755 = distinct !DILexicalBlock(scope: !11748, file: !1014, line: 182, column: 9)
!11756 = !DILocation(line: 183, column: 36, scope: !11755)
!11757 = !DILocation(line: 183, column: 45, scope: !11755)
!11758 = !DILocalVariable(name: "bucket_length", scope: !11755, file: !1014, line: 184, type: !52)
!11759 = !DILocation(line: 184, column: 18, scope: !11755)
!11760 = !DILocation(line: 186, column: 11, scope: !11755)
!11761 = !DILocation(line: 186, column: 27, scope: !11755)
!11762 = !DILocation(line: 186, column: 35, scope: !11755)
!11763 = !{!11752, !2356, i64 8}
!11764 = !DILocation(line: 186, column: 25, scope: !11755)
!11765 = !DILocation(line: 186, column: 41, scope: !11755)
!11766 = !DILocation(line: 187, column: 26, scope: !11755)
!11767 = distinct !{!11767, !11760, !11766}
!11768 = !DILocation(line: 189, column: 15, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11755, file: !1014, line: 189, column: 15)
!11770 = !DILocation(line: 189, column: 31, scope: !11769)
!11771 = !DILocation(line: 189, column: 29, scope: !11769)
!11772 = !DILocation(line: 189, column: 15, scope: !11755)
!11773 = !DILocation(line: 190, column: 33, scope: !11769)
!11774 = !DILocation(line: 190, column: 31, scope: !11769)
!11775 = !DILocation(line: 190, column: 13, scope: !11769)
!11776 = !DILocation(line: 191, column: 9, scope: !11755)
!11777 = !DILocation(line: 192, column: 5, scope: !11749)
!11778 = !DILocation(line: 179, column: 68, scope: !11741)
!11779 = !DILocation(line: 179, column: 3, scope: !11741)
!11780 = distinct !{!11780, !11746, !11781}
!11781 = !DILocation(line: 192, column: 5, scope: !11735)
!11782 = !DILocation(line: 194, column: 10, scope: !11727)
!11783 = !DILocation(line: 194, column: 3, scope: !11727)
!11784 = distinct !DISubprogram(name: "hash_table_ok", scope: !1014, file: !1014, line: 201, type: !1052, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11785 = !DILocalVariable(name: "table", arg: 1, scope: !11784, file: !1014, line: 201, type: !1010)
!11786 = !DILocation(line: 201, column: 34, scope: !11784)
!11787 = !DILocalVariable(name: "bucket", scope: !11784, file: !1014, line: 203, type: !1023)
!11788 = !DILocation(line: 203, column: 28, scope: !11784)
!11789 = !DILocalVariable(name: "n_buckets_used", scope: !11784, file: !1014, line: 204, type: !52)
!11790 = !DILocation(line: 204, column: 10, scope: !11784)
!11791 = !DILocalVariable(name: "n_entries", scope: !11784, file: !1014, line: 205, type: !52)
!11792 = !DILocation(line: 205, column: 10, scope: !11784)
!11793 = !DILocation(line: 207, column: 17, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11784, file: !1014, line: 207, column: 3)
!11795 = !DILocation(line: 207, column: 24, scope: !11794)
!11796 = !DILocation(line: 207, column: 15, scope: !11794)
!11797 = !DILocation(line: 207, column: 8, scope: !11794)
!11798 = !DILocation(line: 207, column: 32, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11794, file: !1014, line: 207, column: 3)
!11800 = !DILocation(line: 207, column: 41, scope: !11799)
!11801 = !DILocation(line: 207, column: 48, scope: !11799)
!11802 = !DILocation(line: 207, column: 39, scope: !11799)
!11803 = !DILocation(line: 207, column: 3, scope: !11794)
!11804 = !DILocation(line: 209, column: 11, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11806, file: !1014, line: 209, column: 11)
!11806 = distinct !DILexicalBlock(scope: !11799, file: !1014, line: 208, column: 5)
!11807 = !DILocation(line: 209, column: 19, scope: !11805)
!11808 = !DILocation(line: 209, column: 11, scope: !11806)
!11809 = !DILocalVariable(name: "cursor", scope: !11810, file: !1014, line: 211, type: !1023)
!11810 = distinct !DILexicalBlock(scope: !11805, file: !1014, line: 210, column: 9)
!11811 = !DILocation(line: 211, column: 36, scope: !11810)
!11812 = !DILocation(line: 211, column: 45, scope: !11810)
!11813 = !DILocation(line: 214, column: 25, scope: !11810)
!11814 = !DILocation(line: 215, column: 20, scope: !11810)
!11815 = !DILocation(line: 218, column: 11, scope: !11810)
!11816 = !DILocation(line: 218, column: 27, scope: !11810)
!11817 = !DILocation(line: 218, column: 35, scope: !11810)
!11818 = !DILocation(line: 218, column: 25, scope: !11810)
!11819 = !DILocation(line: 218, column: 41, scope: !11810)
!11820 = !DILocation(line: 219, column: 22, scope: !11810)
!11821 = distinct !{!11821, !11815, !11820}
!11822 = !DILocation(line: 220, column: 9, scope: !11810)
!11823 = !DILocation(line: 221, column: 5, scope: !11806)
!11824 = !DILocation(line: 207, column: 68, scope: !11799)
!11825 = !DILocation(line: 207, column: 3, scope: !11799)
!11826 = distinct !{!11826, !11803, !11827}
!11827 = !DILocation(line: 221, column: 5, scope: !11794)
!11828 = !DILocation(line: 223, column: 7, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11784, file: !1014, line: 223, column: 7)
!11830 = !DILocation(line: 223, column: 25, scope: !11829)
!11831 = !DILocation(line: 223, column: 32, scope: !11829)
!11832 = !DILocation(line: 223, column: 22, scope: !11829)
!11833 = !DILocation(line: 223, column: 47, scope: !11829)
!11834 = !DILocation(line: 223, column: 50, scope: !11829)
!11835 = !DILocation(line: 223, column: 63, scope: !11829)
!11836 = !DILocation(line: 223, column: 70, scope: !11829)
!11837 = !DILocation(line: 223, column: 60, scope: !11829)
!11838 = !DILocation(line: 223, column: 7, scope: !11784)
!11839 = !DILocation(line: 224, column: 5, scope: !11829)
!11840 = !DILocation(line: 226, column: 3, scope: !11784)
!11841 = !DILocation(line: 227, column: 1, scope: !11784)
!11842 = distinct !DISubprogram(name: "hash_print_statistics", scope: !1014, file: !1014, line: 230, type: !1054, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11843 = !DILocalVariable(name: "table", arg: 1, scope: !11842, file: !1014, line: 230, type: !1010)
!11844 = !DILocation(line: 230, column: 42, scope: !11842)
!11845 = !DILocalVariable(name: "stream", arg: 2, scope: !11842, file: !1014, line: 230, type: !1056)
!11846 = !DILocation(line: 230, column: 55, scope: !11842)
!11847 = !DILocalVariable(name: "n_entries", scope: !11842, file: !1014, line: 232, type: !52)
!11848 = !DILocation(line: 232, column: 10, scope: !11842)
!11849 = !DILocation(line: 232, column: 42, scope: !11842)
!11850 = !DILocation(line: 232, column: 22, scope: !11842)
!11851 = !DILocalVariable(name: "n_buckets", scope: !11842, file: !1014, line: 233, type: !52)
!11852 = !DILocation(line: 233, column: 10, scope: !11842)
!11853 = !DILocation(line: 233, column: 42, scope: !11842)
!11854 = !DILocation(line: 233, column: 22, scope: !11842)
!11855 = !DILocalVariable(name: "n_buckets_used", scope: !11842, file: !1014, line: 234, type: !52)
!11856 = !DILocation(line: 234, column: 10, scope: !11842)
!11857 = !DILocation(line: 234, column: 52, scope: !11842)
!11858 = !DILocation(line: 234, column: 27, scope: !11842)
!11859 = !DILocalVariable(name: "max_bucket_length", scope: !11842, file: !1014, line: 235, type: !52)
!11860 = !DILocation(line: 235, column: 10, scope: !11842)
!11861 = !DILocation(line: 235, column: 58, scope: !11842)
!11862 = !DILocation(line: 235, column: 30, scope: !11842)
!11863 = !DILocation(line: 237, column: 12, scope: !11842)
!11864 = !DILocation(line: 237, column: 68, scope: !11842)
!11865 = !DILocation(line: 237, column: 3, scope: !11842)
!11866 = !DILocation(line: 238, column: 12, scope: !11842)
!11867 = !DILocation(line: 238, column: 68, scope: !11842)
!11868 = !DILocation(line: 238, column: 3, scope: !11842)
!11869 = !DILocation(line: 239, column: 12, scope: !11842)
!11870 = !DILocation(line: 240, column: 32, scope: !11842)
!11871 = !DILocation(line: 241, column: 21, scope: !11842)
!11872 = !DILocation(line: 241, column: 19, scope: !11842)
!11873 = !DILocation(line: 241, column: 39, scope: !11842)
!11874 = !DILocation(line: 241, column: 37, scope: !11842)
!11875 = !DILocation(line: 239, column: 3, scope: !11842)
!11876 = !DILocation(line: 242, column: 12, scope: !11842)
!11877 = !DILocation(line: 243, column: 32, scope: !11842)
!11878 = !DILocation(line: 242, column: 3, scope: !11842)
!11879 = !DILocation(line: 244, column: 1, scope: !11842)
!11880 = distinct !DISubprogram(name: "hash_lookup", scope: !1014, file: !1014, line: 261, type: !1096, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11881 = !DILocalVariable(name: "table", arg: 1, scope: !11880, file: !1014, line: 261, type: !1010)
!11882 = !DILocation(line: 261, column: 32, scope: !11880)
!11883 = !DILocalVariable(name: "entry", arg: 2, scope: !11880, file: !1014, line: 261, type: !85)
!11884 = !DILocation(line: 261, column: 51, scope: !11880)
!11885 = !DILocalVariable(name: "bucket", scope: !11880, file: !1014, line: 263, type: !1023)
!11886 = !DILocation(line: 263, column: 28, scope: !11880)
!11887 = !DILocation(line: 263, column: 50, scope: !11880)
!11888 = !DILocation(line: 263, column: 57, scope: !11880)
!11889 = !DILocation(line: 263, column: 37, scope: !11880)
!11890 = !DILocalVariable(name: "cursor", scope: !11880, file: !1014, line: 264, type: !1023)
!11891 = !DILocation(line: 264, column: 28, scope: !11880)
!11892 = !DILocation(line: 266, column: 7, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11880, file: !1014, line: 266, column: 7)
!11894 = !DILocation(line: 266, column: 15, scope: !11893)
!11895 = !DILocation(line: 266, column: 20, scope: !11893)
!11896 = !DILocation(line: 266, column: 7, scope: !11880)
!11897 = !DILocation(line: 267, column: 5, scope: !11893)
!11898 = !DILocation(line: 269, column: 17, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11880, file: !1014, line: 269, column: 3)
!11900 = !DILocation(line: 269, column: 15, scope: !11899)
!11901 = !DILocation(line: 269, column: 8, scope: !11899)
!11902 = !DILocation(line: 269, column: 25, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11899, file: !1014, line: 269, column: 3)
!11904 = !DILocation(line: 269, column: 3, scope: !11899)
!11905 = !DILocation(line: 270, column: 9, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !1014, line: 270, column: 9)
!11907 = !DILocation(line: 270, column: 18, scope: !11906)
!11908 = !DILocation(line: 270, column: 26, scope: !11906)
!11909 = !DILocation(line: 270, column: 15, scope: !11906)
!11910 = !DILocation(line: 270, column: 31, scope: !11906)
!11911 = !DILocation(line: 270, column: 34, scope: !11906)
!11912 = !DILocation(line: 270, column: 41, scope: !11906)
!11913 = !{!11711, !2356, i64 56}
!11914 = !DILocation(line: 270, column: 53, scope: !11906)
!11915 = !DILocation(line: 270, column: 60, scope: !11906)
!11916 = !DILocation(line: 270, column: 68, scope: !11906)
!11917 = !DILocation(line: 270, column: 9, scope: !11903)
!11918 = !DILocation(line: 271, column: 14, scope: !11906)
!11919 = !DILocation(line: 271, column: 22, scope: !11906)
!11920 = !DILocation(line: 271, column: 7, scope: !11906)
!11921 = !DILocation(line: 270, column: 72, scope: !11906)
!11922 = !DILocation(line: 269, column: 42, scope: !11903)
!11923 = !DILocation(line: 269, column: 50, scope: !11903)
!11924 = !DILocation(line: 269, column: 40, scope: !11903)
!11925 = !DILocation(line: 269, column: 3, scope: !11903)
!11926 = distinct !{!11926, !11904, !11927}
!11927 = !DILocation(line: 271, column: 22, scope: !11899)
!11928 = !DILocation(line: 273, column: 3, scope: !11880)
!11929 = !DILocation(line: 274, column: 1, scope: !11880)
!11930 = distinct !DISubprogram(name: "safe_hasher", scope: !1014, file: !1014, line: 249, type: !1126, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11931 = !DILocalVariable(name: "table", arg: 1, scope: !11930, file: !1014, line: 249, type: !1010)
!11932 = !DILocation(line: 249, column: 32, scope: !11930)
!11933 = !DILocalVariable(name: "key", arg: 2, scope: !11930, file: !1014, line: 249, type: !85)
!11934 = !DILocation(line: 249, column: 51, scope: !11930)
!11935 = !DILocalVariable(name: "n", scope: !11930, file: !1014, line: 251, type: !52)
!11936 = !DILocation(line: 251, column: 10, scope: !11930)
!11937 = !DILocation(line: 251, column: 14, scope: !11930)
!11938 = !DILocation(line: 251, column: 21, scope: !11930)
!11939 = !{!11711, !2356, i64 48}
!11940 = !DILocation(line: 251, column: 29, scope: !11930)
!11941 = !DILocation(line: 251, column: 34, scope: !11930)
!11942 = !DILocation(line: 251, column: 41, scope: !11930)
!11943 = !DILocation(line: 252, column: 10, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11930, file: !1014, line: 252, column: 7)
!11945 = !DILocation(line: 252, column: 14, scope: !11944)
!11946 = !DILocation(line: 252, column: 21, scope: !11944)
!11947 = !DILocation(line: 252, column: 12, scope: !11944)
!11948 = !DILocation(line: 252, column: 7, scope: !11930)
!11949 = !DILocation(line: 253, column: 5, scope: !11944)
!11950 = !DILocation(line: 254, column: 10, scope: !11930)
!11951 = !DILocation(line: 254, column: 17, scope: !11930)
!11952 = !DILocation(line: 254, column: 26, scope: !11930)
!11953 = !DILocation(line: 254, column: 24, scope: !11930)
!11954 = !DILocation(line: 254, column: 3, scope: !11930)
!11955 = distinct !DISubprogram(name: "hash_get_first", scope: !1014, file: !1014, line: 288, type: !1098, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11956 = !DILocalVariable(name: "table", arg: 1, scope: !11955, file: !1014, line: 288, type: !1010)
!11957 = !DILocation(line: 288, column: 35, scope: !11955)
!11958 = !DILocalVariable(name: "bucket", scope: !11955, file: !1014, line: 290, type: !1023)
!11959 = !DILocation(line: 290, column: 28, scope: !11955)
!11960 = !DILocation(line: 292, column: 7, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11955, file: !1014, line: 292, column: 7)
!11962 = !DILocation(line: 292, column: 14, scope: !11961)
!11963 = !DILocation(line: 292, column: 24, scope: !11961)
!11964 = !DILocation(line: 292, column: 7, scope: !11955)
!11965 = !DILocation(line: 293, column: 5, scope: !11961)
!11966 = !DILocation(line: 295, column: 17, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11955, file: !1014, line: 295, column: 3)
!11968 = !DILocation(line: 295, column: 24, scope: !11967)
!11969 = !DILocation(line: 295, column: 15, scope: !11967)
!11970 = !DILocation(line: 295, column: 8, scope: !11967)
!11971 = !DILocation(line: 296, column: 12, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11973, file: !1014, line: 296, column: 9)
!11973 = distinct !DILexicalBlock(scope: !11967, file: !1014, line: 295, column: 3)
!11974 = !DILocation(line: 296, column: 21, scope: !11972)
!11975 = !DILocation(line: 296, column: 28, scope: !11972)
!11976 = !DILocation(line: 296, column: 19, scope: !11972)
!11977 = !DILocation(line: 296, column: 9, scope: !11973)
!11978 = !DILocation(line: 297, column: 7, scope: !11972)
!11979 = !DILocation(line: 298, column: 14, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11972, file: !1014, line: 298, column: 14)
!11981 = !DILocation(line: 298, column: 22, scope: !11980)
!11982 = !DILocation(line: 298, column: 14, scope: !11972)
!11983 = !DILocation(line: 299, column: 14, scope: !11980)
!11984 = !DILocation(line: 299, column: 22, scope: !11980)
!11985 = !DILocation(line: 299, column: 7, scope: !11980)
!11986 = !DILocation(line: 296, column: 40, scope: !11972)
!11987 = !DILocation(line: 295, column: 40, scope: !11973)
!11988 = !DILocation(line: 295, column: 3, scope: !11973)
!11989 = distinct !{!11989, !11990, !11991}
!11990 = !DILocation(line: 295, column: 3, scope: !11967)
!11991 = !DILocation(line: 299, column: 22, scope: !11967)
!11992 = !DILocation(line: 300, column: 1, scope: !11955)
!11993 = distinct !DISubprogram(name: "hash_get_next", scope: !1014, file: !1014, line: 307, type: !1096, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!11994 = !DILocalVariable(name: "table", arg: 1, scope: !11993, file: !1014, line: 307, type: !1010)
!11995 = !DILocation(line: 307, column: 34, scope: !11993)
!11996 = !DILocalVariable(name: "entry", arg: 2, scope: !11993, file: !1014, line: 307, type: !85)
!11997 = !DILocation(line: 307, column: 53, scope: !11993)
!11998 = !DILocalVariable(name: "bucket", scope: !11993, file: !1014, line: 309, type: !1023)
!11999 = !DILocation(line: 309, column: 28, scope: !11993)
!12000 = !DILocation(line: 309, column: 50, scope: !11993)
!12001 = !DILocation(line: 309, column: 57, scope: !11993)
!12002 = !DILocation(line: 309, column: 37, scope: !11993)
!12003 = !DILocalVariable(name: "cursor", scope: !11993, file: !1014, line: 310, type: !1023)
!12004 = !DILocation(line: 310, column: 28, scope: !11993)
!12005 = !DILocation(line: 313, column: 12, scope: !11993)
!12006 = !DILocation(line: 313, column: 10, scope: !11993)
!12007 = !DILocation(line: 314, column: 3, scope: !11993)
!12008 = !DILocation(line: 316, column: 11, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12010, file: !1014, line: 316, column: 11)
!12010 = distinct !DILexicalBlock(scope: !11993, file: !1014, line: 315, column: 5)
!12011 = !DILocation(line: 316, column: 19, scope: !12009)
!12012 = !DILocation(line: 316, column: 27, scope: !12009)
!12013 = !DILocation(line: 316, column: 24, scope: !12009)
!12014 = !DILocation(line: 316, column: 33, scope: !12009)
!12015 = !DILocation(line: 316, column: 36, scope: !12009)
!12016 = !DILocation(line: 316, column: 44, scope: !12009)
!12017 = !DILocation(line: 316, column: 11, scope: !12010)
!12018 = !DILocation(line: 317, column: 16, scope: !12009)
!12019 = !DILocation(line: 317, column: 24, scope: !12009)
!12020 = !DILocation(line: 317, column: 30, scope: !12009)
!12021 = !DILocation(line: 317, column: 9, scope: !12009)
!12022 = !DILocation(line: 318, column: 16, scope: !12010)
!12023 = !DILocation(line: 318, column: 24, scope: !12010)
!12024 = !DILocation(line: 318, column: 14, scope: !12010)
!12025 = !DILocation(line: 319, column: 5, scope: !12010)
!12026 = !DILocation(line: 320, column: 10, scope: !11993)
!12027 = !DILocation(line: 320, column: 17, scope: !11993)
!12028 = distinct !{!12028, !12007, !12029}
!12029 = !DILocation(line: 320, column: 24, scope: !11993)
!12030 = !DILocation(line: 323, column: 3, scope: !11993)
!12031 = !DILocation(line: 323, column: 10, scope: !11993)
!12032 = !DILocation(line: 323, column: 21, scope: !11993)
!12033 = !DILocation(line: 323, column: 28, scope: !11993)
!12034 = !DILocation(line: 323, column: 19, scope: !11993)
!12035 = !DILocation(line: 324, column: 9, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !11993, file: !1014, line: 324, column: 9)
!12037 = !DILocation(line: 324, column: 17, scope: !12036)
!12038 = !DILocation(line: 324, column: 9, scope: !11993)
!12039 = !DILocation(line: 325, column: 14, scope: !12036)
!12040 = !DILocation(line: 325, column: 22, scope: !12036)
!12041 = !DILocation(line: 325, column: 7, scope: !12036)
!12042 = distinct !{!12042, !12030, !12043}
!12043 = !DILocation(line: 325, column: 22, scope: !11993)
!12044 = !DILocation(line: 328, column: 3, scope: !11993)
!12045 = !DILocation(line: 329, column: 1, scope: !11993)
!12046 = distinct !DISubprogram(name: "hash_get_entries", scope: !1014, file: !1014, line: 336, type: !1100, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12047 = !DILocalVariable(name: "table", arg: 1, scope: !12046, file: !1014, line: 336, type: !1010)
!12048 = !DILocation(line: 336, column: 37, scope: !12046)
!12049 = !DILocalVariable(name: "buffer", arg: 2, scope: !12046, file: !1014, line: 336, type: !1102)
!12050 = !DILocation(line: 336, column: 51, scope: !12046)
!12051 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !12046, file: !1014, line: 337, type: !52)
!12052 = !DILocation(line: 337, column: 26, scope: !12046)
!12053 = !DILocalVariable(name: "counter", scope: !12046, file: !1014, line: 339, type: !52)
!12054 = !DILocation(line: 339, column: 10, scope: !12046)
!12055 = !DILocalVariable(name: "bucket", scope: !12046, file: !1014, line: 340, type: !1023)
!12056 = !DILocation(line: 340, column: 28, scope: !12046)
!12057 = !DILocalVariable(name: "cursor", scope: !12046, file: !1014, line: 341, type: !1023)
!12058 = !DILocation(line: 341, column: 28, scope: !12046)
!12059 = !DILocation(line: 343, column: 17, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12046, file: !1014, line: 343, column: 3)
!12061 = !DILocation(line: 343, column: 24, scope: !12060)
!12062 = !DILocation(line: 343, column: 15, scope: !12060)
!12063 = !DILocation(line: 343, column: 8, scope: !12060)
!12064 = !DILocation(line: 343, column: 32, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12060, file: !1014, line: 343, column: 3)
!12066 = !DILocation(line: 343, column: 41, scope: !12065)
!12067 = !DILocation(line: 343, column: 48, scope: !12065)
!12068 = !DILocation(line: 343, column: 39, scope: !12065)
!12069 = !DILocation(line: 343, column: 3, scope: !12060)
!12070 = !DILocation(line: 345, column: 11, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !1014, line: 345, column: 11)
!12072 = distinct !DILexicalBlock(scope: !12065, file: !1014, line: 344, column: 5)
!12073 = !DILocation(line: 345, column: 19, scope: !12071)
!12074 = !DILocation(line: 345, column: 11, scope: !12072)
!12075 = !DILocation(line: 347, column: 25, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !1014, line: 347, column: 11)
!12077 = distinct !DILexicalBlock(scope: !12071, file: !1014, line: 346, column: 9)
!12078 = !DILocation(line: 347, column: 23, scope: !12076)
!12079 = !DILocation(line: 347, column: 16, scope: !12076)
!12080 = !DILocation(line: 347, column: 33, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12076, file: !1014, line: 347, column: 11)
!12082 = !DILocation(line: 347, column: 11, scope: !12076)
!12083 = !DILocation(line: 349, column: 19, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12085, file: !1014, line: 349, column: 19)
!12085 = distinct !DILexicalBlock(scope: !12081, file: !1014, line: 348, column: 13)
!12086 = !DILocation(line: 349, column: 30, scope: !12084)
!12087 = !DILocation(line: 349, column: 27, scope: !12084)
!12088 = !DILocation(line: 349, column: 19, scope: !12085)
!12089 = !DILocation(line: 350, column: 24, scope: !12084)
!12090 = !DILocation(line: 350, column: 17, scope: !12084)
!12091 = !DILocation(line: 351, column: 35, scope: !12085)
!12092 = !DILocation(line: 351, column: 43, scope: !12085)
!12093 = !DILocation(line: 351, column: 15, scope: !12085)
!12094 = !DILocation(line: 351, column: 29, scope: !12085)
!12095 = !DILocation(line: 351, column: 33, scope: !12085)
!12096 = !DILocation(line: 352, column: 13, scope: !12085)
!12097 = !DILocation(line: 347, column: 50, scope: !12081)
!12098 = !DILocation(line: 347, column: 58, scope: !12081)
!12099 = !DILocation(line: 347, column: 48, scope: !12081)
!12100 = !DILocation(line: 347, column: 11, scope: !12081)
!12101 = distinct !{!12101, !12082, !12102}
!12102 = !DILocation(line: 352, column: 13, scope: !12076)
!12103 = !DILocation(line: 353, column: 9, scope: !12077)
!12104 = !DILocation(line: 354, column: 5, scope: !12072)
!12105 = !DILocation(line: 343, column: 68, scope: !12065)
!12106 = !DILocation(line: 343, column: 3, scope: !12065)
!12107 = distinct !{!12107, !12069, !12108}
!12108 = !DILocation(line: 354, column: 5, scope: !12060)
!12109 = !DILocation(line: 356, column: 10, scope: !12046)
!12110 = !DILocation(line: 356, column: 3, scope: !12046)
!12111 = !DILocation(line: 357, column: 1, scope: !12046)
!12112 = distinct !DISubprogram(name: "hash_do_for_each", scope: !1014, file: !1014, line: 368, type: !1103, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12113 = !DILocalVariable(name: "table", arg: 1, scope: !12112, file: !1014, line: 368, type: !1010)
!12114 = !DILocation(line: 368, column: 37, scope: !12112)
!12115 = !DILocalVariable(name: "processor", arg: 2, scope: !12112, file: !1014, line: 368, type: !1105)
!12116 = !DILocation(line: 368, column: 59, scope: !12112)
!12117 = !DILocalVariable(name: "processor_data", arg: 3, scope: !12112, file: !1014, line: 369, type: !47)
!12118 = !DILocation(line: 369, column: 25, scope: !12112)
!12119 = !DILocalVariable(name: "counter", scope: !12112, file: !1014, line: 371, type: !52)
!12120 = !DILocation(line: 371, column: 10, scope: !12112)
!12121 = !DILocalVariable(name: "bucket", scope: !12112, file: !1014, line: 372, type: !1023)
!12122 = !DILocation(line: 372, column: 28, scope: !12112)
!12123 = !DILocalVariable(name: "cursor", scope: !12112, file: !1014, line: 373, type: !1023)
!12124 = !DILocation(line: 373, column: 28, scope: !12112)
!12125 = !DILocation(line: 375, column: 17, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12112, file: !1014, line: 375, column: 3)
!12127 = !DILocation(line: 375, column: 24, scope: !12126)
!12128 = !DILocation(line: 375, column: 15, scope: !12126)
!12129 = !DILocation(line: 375, column: 8, scope: !12126)
!12130 = !DILocation(line: 375, column: 32, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12126, file: !1014, line: 375, column: 3)
!12132 = !DILocation(line: 375, column: 41, scope: !12131)
!12133 = !DILocation(line: 375, column: 48, scope: !12131)
!12134 = !DILocation(line: 375, column: 39, scope: !12131)
!12135 = !DILocation(line: 375, column: 3, scope: !12126)
!12136 = !DILocation(line: 377, column: 11, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !1014, line: 377, column: 11)
!12138 = distinct !DILexicalBlock(scope: !12131, file: !1014, line: 376, column: 5)
!12139 = !DILocation(line: 377, column: 19, scope: !12137)
!12140 = !DILocation(line: 377, column: 11, scope: !12138)
!12141 = !DILocation(line: 379, column: 25, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !1014, line: 379, column: 11)
!12143 = distinct !DILexicalBlock(scope: !12137, file: !1014, line: 378, column: 9)
!12144 = !DILocation(line: 379, column: 23, scope: !12142)
!12145 = !DILocation(line: 379, column: 16, scope: !12142)
!12146 = !DILocation(line: 379, column: 33, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12142, file: !1014, line: 379, column: 11)
!12148 = !DILocation(line: 379, column: 11, scope: !12142)
!12149 = !DILocation(line: 381, column: 21, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !1014, line: 381, column: 19)
!12151 = distinct !DILexicalBlock(scope: !12147, file: !1014, line: 380, column: 13)
!12152 = !DILocation(line: 381, column: 32, scope: !12150)
!12153 = !DILocation(line: 381, column: 40, scope: !12150)
!12154 = !DILocation(line: 381, column: 46, scope: !12150)
!12155 = !DILocation(line: 381, column: 19, scope: !12151)
!12156 = !DILocation(line: 382, column: 24, scope: !12150)
!12157 = !DILocation(line: 382, column: 17, scope: !12150)
!12158 = !DILocation(line: 383, column: 22, scope: !12151)
!12159 = !DILocation(line: 384, column: 13, scope: !12151)
!12160 = !DILocation(line: 379, column: 50, scope: !12147)
!12161 = !DILocation(line: 379, column: 58, scope: !12147)
!12162 = !DILocation(line: 379, column: 48, scope: !12147)
!12163 = !DILocation(line: 379, column: 11, scope: !12147)
!12164 = distinct !{!12164, !12148, !12165}
!12165 = !DILocation(line: 384, column: 13, scope: !12142)
!12166 = !DILocation(line: 385, column: 9, scope: !12143)
!12167 = !DILocation(line: 386, column: 5, scope: !12138)
!12168 = !DILocation(line: 375, column: 68, scope: !12131)
!12169 = !DILocation(line: 375, column: 3, scope: !12131)
!12170 = distinct !{!12170, !12135, !12171}
!12171 = !DILocation(line: 386, column: 5, scope: !12126)
!12172 = !DILocation(line: 388, column: 10, scope: !12112)
!12173 = !DILocation(line: 388, column: 3, scope: !12112)
!12174 = !DILocation(line: 389, column: 1, scope: !12112)
!12175 = distinct !DISubprogram(name: "hash_string", scope: !1014, file: !1014, line: 428, type: !1109, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12176 = !DILocalVariable(name: "string", arg: 1, scope: !12175, file: !1014, line: 428, type: !87)
!12177 = !DILocation(line: 428, column: 26, scope: !12175)
!12178 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12175, file: !1014, line: 428, type: !52)
!12179 = !DILocation(line: 428, column: 41, scope: !12175)
!12180 = !DILocalVariable(name: "value", scope: !12175, file: !1014, line: 430, type: !52)
!12181 = !DILocation(line: 430, column: 10, scope: !12175)
!12182 = !DILocalVariable(name: "ch", scope: !12175, file: !1014, line: 431, type: !317)
!12183 = !DILocation(line: 431, column: 17, scope: !12175)
!12184 = !DILocation(line: 433, column: 3, scope: !12175)
!12185 = !DILocation(line: 433, column: 17, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !1014, line: 433, column: 3)
!12187 = distinct !DILexicalBlock(scope: !12175, file: !1014, line: 433, column: 3)
!12188 = !DILocation(line: 433, column: 16, scope: !12186)
!12189 = !DILocation(line: 433, column: 14, scope: !12186)
!12190 = !DILocation(line: 433, column: 3, scope: !12187)
!12191 = !DILocation(line: 434, column: 14, scope: !12186)
!12192 = !DILocation(line: 434, column: 20, scope: !12186)
!12193 = !DILocation(line: 434, column: 27, scope: !12186)
!12194 = !DILocation(line: 434, column: 25, scope: !12186)
!12195 = !DILocation(line: 434, column: 33, scope: !12186)
!12196 = !DILocation(line: 434, column: 31, scope: !12186)
!12197 = !DILocation(line: 434, column: 11, scope: !12186)
!12198 = !DILocation(line: 434, column: 5, scope: !12186)
!12199 = !DILocation(line: 433, column: 32, scope: !12186)
!12200 = !DILocation(line: 433, column: 3, scope: !12186)
!12201 = distinct !{!12201, !12190, !12202}
!12202 = !DILocation(line: 434, column: 33, scope: !12187)
!12203 = !DILocation(line: 435, column: 10, scope: !12175)
!12204 = !DILocation(line: 435, column: 3, scope: !12175)
!12205 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !1014, file: !1014, line: 479, type: !1111, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12206 = !DILocalVariable(name: "tuning", arg: 1, scope: !12205, file: !1014, line: 479, type: !1113)
!12207 = !DILocation(line: 479, column: 33, scope: !12205)
!12208 = !DILocation(line: 481, column: 4, scope: !12205)
!12209 = !DILocation(line: 481, column: 13, scope: !12205)
!12210 = !{i64 0, i64 4, !12211, i64 4, i64 4, !12211, i64 8, i64 4, !12211, i64 12, i64 4, !12211, i64 16, i64 1, !2499}
!12211 = !{!12212, !12212, i64 0}
!12212 = !{!"float", !2344, i64 0}
!12213 = !DILocation(line: 482, column: 1, scope: !12205)
!12214 = distinct !DISubprogram(name: "hash_initialize", scope: !1014, file: !1014, line: 594, type: !1114, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12215 = !DILocalVariable(name: "candidate", arg: 1, scope: !12214, file: !1014, line: 594, type: !52)
!12216 = !DILocation(line: 594, column: 25, scope: !12214)
!12217 = !DILocalVariable(name: "tuning", arg: 2, scope: !12214, file: !1014, line: 594, type: !1029)
!12218 = !DILocation(line: 594, column: 55, scope: !12214)
!12219 = !DILocalVariable(name: "hasher", arg: 3, scope: !12214, file: !1014, line: 595, type: !1041)
!12220 = !DILocation(line: 595, column: 30, scope: !12214)
!12221 = !DILocalVariable(name: "comparator", arg: 4, scope: !12214, file: !1014, line: 595, type: !1044)
!12222 = !DILocation(line: 595, column: 54, scope: !12214)
!12223 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12214, file: !1014, line: 596, type: !1047)
!12224 = !DILocation(line: 596, column: 34, scope: !12214)
!12225 = !DILocalVariable(name: "table", scope: !12214, file: !1014, line: 598, type: !1116)
!12226 = !DILocation(line: 598, column: 15, scope: !12214)
!12227 = !DILocation(line: 600, column: 7, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 600, column: 7)
!12229 = !DILocation(line: 600, column: 14, scope: !12228)
!12230 = !DILocation(line: 600, column: 7, scope: !12214)
!12231 = !DILocation(line: 601, column: 12, scope: !12228)
!12232 = !DILocation(line: 601, column: 5, scope: !12228)
!12233 = !DILocation(line: 602, column: 7, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 602, column: 7)
!12235 = !DILocation(line: 602, column: 18, scope: !12234)
!12236 = !DILocation(line: 602, column: 7, scope: !12214)
!12237 = !DILocation(line: 603, column: 16, scope: !12234)
!12238 = !DILocation(line: 603, column: 5, scope: !12234)
!12239 = !DILocation(line: 605, column: 11, scope: !12214)
!12240 = !DILocation(line: 605, column: 9, scope: !12214)
!12241 = !DILocation(line: 606, column: 7, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 606, column: 7)
!12243 = !DILocation(line: 606, column: 13, scope: !12242)
!12244 = !DILocation(line: 606, column: 7, scope: !12214)
!12245 = !DILocation(line: 607, column: 5, scope: !12242)
!12246 = !DILocation(line: 609, column: 8, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 609, column: 7)
!12248 = !DILocation(line: 609, column: 7, scope: !12214)
!12249 = !DILocation(line: 610, column: 12, scope: !12247)
!12250 = !DILocation(line: 610, column: 5, scope: !12247)
!12251 = !DILocation(line: 611, column: 19, scope: !12214)
!12252 = !DILocation(line: 611, column: 3, scope: !12214)
!12253 = !DILocation(line: 611, column: 10, scope: !12214)
!12254 = !DILocation(line: 611, column: 17, scope: !12214)
!12255 = !{!11711, !2356, i64 40}
!12256 = !DILocation(line: 612, column: 22, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 612, column: 7)
!12258 = !DILocation(line: 612, column: 8, scope: !12257)
!12259 = !DILocation(line: 612, column: 7, scope: !12214)
!12260 = !DILocation(line: 619, column: 7, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12257, file: !1014, line: 613, column: 5)
!12262 = !DILocation(line: 622, column: 43, scope: !12214)
!12263 = !DILocation(line: 622, column: 54, scope: !12214)
!12264 = !DILocation(line: 622, column: 22, scope: !12214)
!12265 = !DILocation(line: 622, column: 3, scope: !12214)
!12266 = !DILocation(line: 622, column: 10, scope: !12214)
!12267 = !DILocation(line: 622, column: 20, scope: !12214)
!12268 = !DILocation(line: 623, column: 8, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 623, column: 7)
!12270 = !DILocation(line: 623, column: 15, scope: !12269)
!12271 = !DILocation(line: 623, column: 7, scope: !12214)
!12272 = !DILocation(line: 624, column: 5, scope: !12269)
!12273 = !DILocation(line: 626, column: 27, scope: !12214)
!12274 = !DILocation(line: 626, column: 34, scope: !12214)
!12275 = !DILocation(line: 626, column: 19, scope: !12214)
!12276 = !DILocation(line: 626, column: 3, scope: !12214)
!12277 = !DILocation(line: 626, column: 10, scope: !12214)
!12278 = !DILocation(line: 626, column: 17, scope: !12214)
!12279 = !DILocation(line: 627, column: 7, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12214, file: !1014, line: 627, column: 7)
!12281 = !DILocation(line: 627, column: 14, scope: !12280)
!12282 = !DILocation(line: 627, column: 21, scope: !12280)
!12283 = !DILocation(line: 627, column: 7, scope: !12214)
!12284 = !DILocation(line: 628, column: 5, scope: !12280)
!12285 = !DILocation(line: 629, column: 25, scope: !12214)
!12286 = !DILocation(line: 629, column: 32, scope: !12214)
!12287 = !DILocation(line: 629, column: 41, scope: !12214)
!12288 = !DILocation(line: 629, column: 48, scope: !12214)
!12289 = !DILocation(line: 629, column: 39, scope: !12214)
!12290 = !DILocation(line: 629, column: 3, scope: !12214)
!12291 = !DILocation(line: 629, column: 10, scope: !12214)
!12292 = !DILocation(line: 629, column: 23, scope: !12214)
!12293 = !DILocation(line: 630, column: 3, scope: !12214)
!12294 = !DILocation(line: 630, column: 10, scope: !12214)
!12295 = !DILocation(line: 630, column: 25, scope: !12214)
!12296 = !DILocation(line: 631, column: 3, scope: !12214)
!12297 = !DILocation(line: 631, column: 10, scope: !12214)
!12298 = !DILocation(line: 631, column: 20, scope: !12214)
!12299 = !DILocation(line: 633, column: 19, scope: !12214)
!12300 = !DILocation(line: 633, column: 3, scope: !12214)
!12301 = !DILocation(line: 633, column: 10, scope: !12214)
!12302 = !DILocation(line: 633, column: 17, scope: !12214)
!12303 = !DILocation(line: 634, column: 23, scope: !12214)
!12304 = !DILocation(line: 634, column: 3, scope: !12214)
!12305 = !DILocation(line: 634, column: 10, scope: !12214)
!12306 = !DILocation(line: 634, column: 21, scope: !12214)
!12307 = !DILocation(line: 635, column: 23, scope: !12214)
!12308 = !DILocation(line: 635, column: 3, scope: !12214)
!12309 = !DILocation(line: 635, column: 10, scope: !12214)
!12310 = !DILocation(line: 635, column: 21, scope: !12214)
!12311 = !{!11711, !2356, i64 64}
!12312 = !DILocation(line: 637, column: 3, scope: !12214)
!12313 = !DILocation(line: 637, column: 10, scope: !12214)
!12314 = !DILocation(line: 637, column: 26, scope: !12214)
!12315 = !{!11711, !2356, i64 72}
!12316 = !DILocation(line: 641, column: 10, scope: !12214)
!12317 = !DILocation(line: 641, column: 3, scope: !12214)
!12318 = !DILabel(scope: !12214, name: "fail", file: !1014, line: 643)
!12319 = !DILocation(line: 643, column: 2, scope: !12214)
!12320 = !DILocation(line: 644, column: 9, scope: !12214)
!12321 = !DILocation(line: 644, column: 3, scope: !12214)
!12322 = !DILocation(line: 645, column: 3, scope: !12214)
!12323 = !DILocation(line: 646, column: 1, scope: !12214)
!12324 = distinct !DISubprogram(name: "raw_hasher", scope: !1014, file: !1014, line: 486, type: !563, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12325 = !DILocalVariable(name: "data", arg: 1, scope: !12324, file: !1014, line: 486, type: !85)
!12326 = !DILocation(line: 486, column: 25, scope: !12324)
!12327 = !DILocalVariable(name: "n", arg: 2, scope: !12324, file: !1014, line: 486, type: !52)
!12328 = !DILocation(line: 486, column: 38, scope: !12324)
!12329 = !DILocalVariable(name: "val", scope: !12324, file: !1014, line: 493, type: !52)
!12330 = !DILocation(line: 493, column: 10, scope: !12324)
!12331 = !DILocation(line: 493, column: 34, scope: !12324)
!12332 = !DILocation(line: 493, column: 25, scope: !12324)
!12333 = !DILocation(line: 493, column: 16, scope: !12324)
!12334 = !DILocation(line: 494, column: 10, scope: !12324)
!12335 = !DILocation(line: 494, column: 16, scope: !12324)
!12336 = !DILocation(line: 494, column: 14, scope: !12324)
!12337 = !DILocation(line: 494, column: 3, scope: !12324)
!12338 = distinct !DISubprogram(name: "raw_comparator", scope: !1014, file: !1014, line: 499, type: !565, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12339 = !DILocalVariable(name: "a", arg: 1, scope: !12338, file: !1014, line: 499, type: !85)
!12340 = !DILocation(line: 499, column: 29, scope: !12338)
!12341 = !DILocalVariable(name: "b", arg: 2, scope: !12338, file: !1014, line: 499, type: !85)
!12342 = !DILocation(line: 499, column: 44, scope: !12338)
!12343 = !DILocation(line: 501, column: 10, scope: !12338)
!12344 = !DILocation(line: 501, column: 15, scope: !12338)
!12345 = !DILocation(line: 501, column: 12, scope: !12338)
!12346 = !DILocation(line: 501, column: 3, scope: !12338)
!12347 = distinct !DISubprogram(name: "check_tuning", scope: !1014, file: !1014, line: 512, type: !1128, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12348 = !DILocalVariable(name: "table", arg: 1, scope: !12347, file: !1014, line: 512, type: !1116)
!12349 = !DILocation(line: 512, column: 27, scope: !12347)
!12350 = !DILocalVariable(name: "tuning", scope: !12347, file: !1014, line: 514, type: !1029)
!12351 = !DILocation(line: 514, column: 22, scope: !12347)
!12352 = !DILocation(line: 514, column: 31, scope: !12347)
!12353 = !DILocation(line: 514, column: 38, scope: !12347)
!12354 = !DILocalVariable(name: "epsilon", scope: !12347, file: !1014, line: 515, type: !1035)
!12355 = !DILocation(line: 515, column: 9, scope: !12347)
!12356 = !DILocation(line: 516, column: 7, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12347, file: !1014, line: 516, column: 7)
!12358 = !DILocation(line: 516, column: 14, scope: !12357)
!12359 = !DILocation(line: 516, column: 7, scope: !12347)
!12360 = !DILocation(line: 517, column: 5, scope: !12357)
!12361 = !DILocation(line: 524, column: 11, scope: !12347)
!12362 = !DILocation(line: 526, column: 7, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12347, file: !1014, line: 526, column: 7)
!12364 = !DILocation(line: 526, column: 17, scope: !12363)
!12365 = !DILocation(line: 526, column: 25, scope: !12363)
!12366 = !{!12367, !12212, i64 8}
!12367 = !{!"hash_tuning", !12212, i64 0, !12212, i64 4, !12212, i64 8, !12212, i64 12, !2500, i64 16}
!12368 = !DILocation(line: 526, column: 15, scope: !12363)
!12369 = !DILocation(line: 527, column: 7, scope: !12363)
!12370 = !DILocation(line: 527, column: 10, scope: !12363)
!12371 = !DILocation(line: 527, column: 18, scope: !12363)
!12372 = !DILocation(line: 527, column: 41, scope: !12363)
!12373 = !DILocation(line: 527, column: 39, scope: !12363)
!12374 = !DILocation(line: 527, column: 35, scope: !12363)
!12375 = !DILocation(line: 528, column: 7, scope: !12363)
!12376 = !DILocation(line: 528, column: 14, scope: !12363)
!12377 = !DILocation(line: 528, column: 12, scope: !12363)
!12378 = !DILocation(line: 528, column: 24, scope: !12363)
!12379 = !DILocation(line: 528, column: 32, scope: !12363)
!12380 = !{!12367, !12212, i64 12}
!12381 = !DILocation(line: 528, column: 22, scope: !12363)
!12382 = !DILocation(line: 529, column: 7, scope: !12363)
!12383 = !DILocation(line: 529, column: 15, scope: !12363)
!12384 = !DILocation(line: 529, column: 23, scope: !12363)
!12385 = !{!12367, !12212, i64 0}
!12386 = !DILocation(line: 529, column: 12, scope: !12363)
!12387 = !DILocation(line: 530, column: 7, scope: !12363)
!12388 = !DILocation(line: 530, column: 10, scope: !12363)
!12389 = !DILocation(line: 530, column: 18, scope: !12363)
!12390 = !DILocation(line: 530, column: 37, scope: !12363)
!12391 = !DILocation(line: 530, column: 35, scope: !12363)
!12392 = !DILocation(line: 530, column: 47, scope: !12363)
!12393 = !DILocation(line: 530, column: 55, scope: !12363)
!12394 = !{!12367, !12212, i64 4}
!12395 = !DILocation(line: 530, column: 45, scope: !12363)
!12396 = !DILocation(line: 531, column: 7, scope: !12363)
!12397 = !DILocation(line: 531, column: 10, scope: !12363)
!12398 = !DILocation(line: 531, column: 18, scope: !12363)
!12399 = !DILocation(line: 531, column: 32, scope: !12363)
!12400 = !DILocation(line: 532, column: 7, scope: !12363)
!12401 = !DILocation(line: 532, column: 10, scope: !12363)
!12402 = !DILocation(line: 532, column: 18, scope: !12363)
!12403 = !DILocation(line: 532, column: 37, scope: !12363)
!12404 = !DILocation(line: 532, column: 35, scope: !12363)
!12405 = !DILocation(line: 532, column: 47, scope: !12363)
!12406 = !DILocation(line: 532, column: 55, scope: !12363)
!12407 = !DILocation(line: 532, column: 45, scope: !12363)
!12408 = !DILocation(line: 526, column: 7, scope: !12347)
!12409 = !DILocation(line: 533, column: 5, scope: !12363)
!12410 = !DILocation(line: 535, column: 3, scope: !12347)
!12411 = !DILocation(line: 535, column: 10, scope: !12347)
!12412 = !DILocation(line: 535, column: 17, scope: !12347)
!12413 = !DILocation(line: 536, column: 3, scope: !12347)
!12414 = !DILocation(line: 537, column: 1, scope: !12347)
!12415 = distinct !DISubprogram(name: "compute_bucket_size", scope: !1014, file: !1014, line: 544, type: !1130, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12416 = !DILocalVariable(name: "candidate", arg: 1, scope: !12415, file: !1014, line: 544, type: !52)
!12417 = !DILocation(line: 544, column: 29, scope: !12415)
!12418 = !DILocalVariable(name: "tuning", arg: 2, scope: !12415, file: !1014, line: 544, type: !1029)
!12419 = !DILocation(line: 544, column: 59, scope: !12415)
!12420 = !DILocation(line: 546, column: 8, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12415, file: !1014, line: 546, column: 7)
!12422 = !DILocation(line: 546, column: 16, scope: !12421)
!12423 = !{!12367, !2500, i64 16}
!12424 = !DILocation(line: 546, column: 7, scope: !12415)
!12425 = !DILocalVariable(name: "new_candidate", scope: !12426, file: !1014, line: 548, type: !1035)
!12426 = distinct !DILexicalBlock(scope: !12421, file: !1014, line: 547, column: 5)
!12427 = !DILocation(line: 548, column: 13, scope: !12426)
!12428 = !DILocation(line: 548, column: 29, scope: !12426)
!12429 = !DILocation(line: 548, column: 41, scope: !12426)
!12430 = !DILocation(line: 548, column: 49, scope: !12426)
!12431 = !DILocation(line: 548, column: 39, scope: !12426)
!12432 = !DILocation(line: 549, column: 23, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12426, file: !1014, line: 549, column: 11)
!12434 = !DILocation(line: 549, column: 20, scope: !12433)
!12435 = !DILocation(line: 549, column: 11, scope: !12426)
!12436 = !DILocation(line: 550, column: 9, scope: !12433)
!12437 = !DILocation(line: 551, column: 19, scope: !12426)
!12438 = !DILocation(line: 551, column: 17, scope: !12426)
!12439 = !DILocation(line: 552, column: 5, scope: !12426)
!12440 = !DILocation(line: 553, column: 27, scope: !12415)
!12441 = !DILocation(line: 553, column: 15, scope: !12415)
!12442 = !DILocation(line: 553, column: 13, scope: !12415)
!12443 = !DILocation(line: 554, column: 7, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12415, file: !1014, line: 554, column: 7)
!12445 = !DILocation(line: 554, column: 7, scope: !12415)
!12446 = !DILocation(line: 555, column: 5, scope: !12444)
!12447 = !DILocation(line: 556, column: 10, scope: !12415)
!12448 = !DILocation(line: 556, column: 3, scope: !12415)
!12449 = !DILocation(line: 557, column: 1, scope: !12415)
!12450 = distinct !DISubprogram(name: "next_prime", scope: !1014, file: !1014, line: 463, type: !1132, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12451 = !DILocalVariable(name: "candidate", arg: 1, scope: !12450, file: !1014, line: 463, type: !52)
!12452 = !DILocation(line: 463, column: 20, scope: !12450)
!12453 = !DILocation(line: 466, column: 7, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12450, file: !1014, line: 466, column: 7)
!12455 = !DILocation(line: 466, column: 17, scope: !12454)
!12456 = !DILocation(line: 466, column: 7, scope: !12450)
!12457 = !DILocation(line: 467, column: 15, scope: !12454)
!12458 = !DILocation(line: 467, column: 5, scope: !12454)
!12459 = !DILocation(line: 470, column: 13, scope: !12450)
!12460 = !DILocation(line: 472, column: 3, scope: !12450)
!12461 = !DILocation(line: 472, column: 22, scope: !12450)
!12462 = !DILocation(line: 472, column: 19, scope: !12450)
!12463 = !DILocation(line: 472, column: 32, scope: !12450)
!12464 = !DILocation(line: 472, column: 46, scope: !12450)
!12465 = !DILocation(line: 472, column: 36, scope: !12450)
!12466 = !DILocation(line: 472, column: 35, scope: !12450)
!12467 = !DILocation(line: 0, scope: !12450)
!12468 = !DILocation(line: 473, column: 15, scope: !12450)
!12469 = distinct !{!12469, !12460, !12470}
!12470 = !DILocation(line: 473, column: 18, scope: !12450)
!12471 = !DILocation(line: 475, column: 10, scope: !12450)
!12472 = !DILocation(line: 475, column: 3, scope: !12450)
!12473 = distinct !DISubprogram(name: "is_prime", scope: !1014, file: !1014, line: 444, type: !1134, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12474 = !DILocalVariable(name: "candidate", arg: 1, scope: !12473, file: !1014, line: 444, type: !52)
!12475 = !DILocation(line: 444, column: 18, scope: !12473)
!12476 = !DILocalVariable(name: "divisor", scope: !12473, file: !1014, line: 446, type: !52)
!12477 = !DILocation(line: 446, column: 10, scope: !12473)
!12478 = !DILocalVariable(name: "square", scope: !12473, file: !1014, line: 447, type: !52)
!12479 = !DILocation(line: 447, column: 10, scope: !12473)
!12480 = !DILocation(line: 447, column: 19, scope: !12473)
!12481 = !DILocation(line: 447, column: 29, scope: !12473)
!12482 = !DILocation(line: 447, column: 27, scope: !12473)
!12483 = !DILocation(line: 449, column: 3, scope: !12473)
!12484 = !DILocation(line: 449, column: 10, scope: !12473)
!12485 = !DILocation(line: 449, column: 19, scope: !12473)
!12486 = !DILocation(line: 449, column: 17, scope: !12473)
!12487 = !DILocation(line: 449, column: 29, scope: !12473)
!12488 = !DILocation(line: 449, column: 33, scope: !12473)
!12489 = !DILocation(line: 449, column: 45, scope: !12473)
!12490 = !DILocation(line: 449, column: 43, scope: !12473)
!12491 = !DILocation(line: 0, scope: !12473)
!12492 = !DILocation(line: 451, column: 14, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12473, file: !1014, line: 450, column: 5)
!12494 = !DILocation(line: 452, column: 21, scope: !12493)
!12495 = !DILocation(line: 452, column: 19, scope: !12493)
!12496 = !DILocation(line: 452, column: 14, scope: !12493)
!12497 = !DILocation(line: 453, column: 14, scope: !12493)
!12498 = distinct !{!12498, !12483, !12499}
!12499 = !DILocation(line: 454, column: 5, scope: !12473)
!12500 = !DILocation(line: 456, column: 11, scope: !12473)
!12501 = !DILocation(line: 456, column: 23, scope: !12473)
!12502 = !DILocation(line: 456, column: 21, scope: !12473)
!12503 = !DILocation(line: 456, column: 10, scope: !12473)
!12504 = !DILocation(line: 456, column: 3, scope: !12473)
!12505 = distinct !DISubprogram(name: "hash_clear", scope: !1014, file: !1014, line: 653, type: !1117, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12506 = !DILocalVariable(name: "table", arg: 1, scope: !12505, file: !1014, line: 653, type: !1116)
!12507 = !DILocation(line: 653, column: 25, scope: !12505)
!12508 = !DILocalVariable(name: "bucket", scope: !12505, file: !1014, line: 655, type: !1017)
!12509 = !DILocation(line: 655, column: 22, scope: !12505)
!12510 = !DILocation(line: 657, column: 17, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12505, file: !1014, line: 657, column: 3)
!12512 = !DILocation(line: 657, column: 24, scope: !12511)
!12513 = !DILocation(line: 657, column: 15, scope: !12511)
!12514 = !DILocation(line: 657, column: 8, scope: !12511)
!12515 = !DILocation(line: 657, column: 32, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12511, file: !1014, line: 657, column: 3)
!12517 = !DILocation(line: 657, column: 41, scope: !12516)
!12518 = !DILocation(line: 657, column: 48, scope: !12516)
!12519 = !DILocation(line: 657, column: 39, scope: !12516)
!12520 = !DILocation(line: 657, column: 3, scope: !12511)
!12521 = !DILocation(line: 659, column: 11, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12523, file: !1014, line: 659, column: 11)
!12523 = distinct !DILexicalBlock(scope: !12516, file: !1014, line: 658, column: 5)
!12524 = !DILocation(line: 659, column: 19, scope: !12522)
!12525 = !DILocation(line: 659, column: 11, scope: !12523)
!12526 = !DILocalVariable(name: "cursor", scope: !12527, file: !1014, line: 661, type: !1017)
!12527 = distinct !DILexicalBlock(scope: !12522, file: !1014, line: 660, column: 9)
!12528 = !DILocation(line: 661, column: 30, scope: !12527)
!12529 = !DILocalVariable(name: "next", scope: !12527, file: !1014, line: 662, type: !1017)
!12530 = !DILocation(line: 662, column: 30, scope: !12527)
!12531 = !DILocation(line: 665, column: 25, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12527, file: !1014, line: 665, column: 11)
!12533 = !DILocation(line: 665, column: 33, scope: !12532)
!12534 = !DILocation(line: 665, column: 23, scope: !12532)
!12535 = !DILocation(line: 665, column: 16, scope: !12532)
!12536 = !DILocation(line: 665, column: 39, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12532, file: !1014, line: 665, column: 11)
!12538 = !DILocation(line: 665, column: 11, scope: !12532)
!12539 = !DILocation(line: 667, column: 19, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !1014, line: 667, column: 19)
!12541 = distinct !DILexicalBlock(scope: !12537, file: !1014, line: 666, column: 13)
!12542 = !DILocation(line: 667, column: 26, scope: !12540)
!12543 = !DILocation(line: 667, column: 19, scope: !12541)
!12544 = !DILocation(line: 668, column: 17, scope: !12540)
!12545 = !DILocation(line: 668, column: 24, scope: !12540)
!12546 = !DILocation(line: 668, column: 36, scope: !12540)
!12547 = !DILocation(line: 668, column: 44, scope: !12540)
!12548 = !DILocation(line: 669, column: 15, scope: !12541)
!12549 = !DILocation(line: 669, column: 23, scope: !12541)
!12550 = !DILocation(line: 669, column: 28, scope: !12541)
!12551 = !DILocation(line: 671, column: 22, scope: !12541)
!12552 = !DILocation(line: 671, column: 30, scope: !12541)
!12553 = !DILocation(line: 671, column: 20, scope: !12541)
!12554 = !DILocation(line: 674, column: 30, scope: !12541)
!12555 = !DILocation(line: 674, column: 37, scope: !12541)
!12556 = !DILocation(line: 674, column: 15, scope: !12541)
!12557 = !DILocation(line: 674, column: 23, scope: !12541)
!12558 = !DILocation(line: 674, column: 28, scope: !12541)
!12559 = !DILocation(line: 675, column: 40, scope: !12541)
!12560 = !DILocation(line: 675, column: 15, scope: !12541)
!12561 = !DILocation(line: 675, column: 22, scope: !12541)
!12562 = !DILocation(line: 675, column: 38, scope: !12541)
!12563 = !DILocation(line: 676, column: 13, scope: !12541)
!12564 = !DILocation(line: 665, column: 56, scope: !12537)
!12565 = !DILocation(line: 665, column: 54, scope: !12537)
!12566 = !DILocation(line: 665, column: 11, scope: !12537)
!12567 = distinct !{!12567, !12538, !12568}
!12568 = !DILocation(line: 676, column: 13, scope: !12532)
!12569 = !DILocation(line: 679, column: 15, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12527, file: !1014, line: 679, column: 15)
!12571 = !DILocation(line: 679, column: 22, scope: !12570)
!12572 = !DILocation(line: 679, column: 15, scope: !12527)
!12573 = !DILocation(line: 680, column: 13, scope: !12570)
!12574 = !DILocation(line: 680, column: 20, scope: !12570)
!12575 = !DILocation(line: 680, column: 32, scope: !12570)
!12576 = !DILocation(line: 680, column: 40, scope: !12570)
!12577 = !DILocation(line: 681, column: 11, scope: !12527)
!12578 = !DILocation(line: 681, column: 19, scope: !12527)
!12579 = !DILocation(line: 681, column: 24, scope: !12527)
!12580 = !DILocation(line: 682, column: 11, scope: !12527)
!12581 = !DILocation(line: 682, column: 19, scope: !12527)
!12582 = !DILocation(line: 682, column: 24, scope: !12527)
!12583 = !DILocation(line: 683, column: 9, scope: !12527)
!12584 = !DILocation(line: 684, column: 5, scope: !12523)
!12585 = !DILocation(line: 657, column: 68, scope: !12516)
!12586 = !DILocation(line: 657, column: 3, scope: !12516)
!12587 = distinct !{!12587, !12520, !12588}
!12588 = !DILocation(line: 684, column: 5, scope: !12511)
!12589 = !DILocation(line: 686, column: 3, scope: !12505)
!12590 = !DILocation(line: 686, column: 10, scope: !12505)
!12591 = !DILocation(line: 686, column: 25, scope: !12505)
!12592 = !DILocation(line: 687, column: 3, scope: !12505)
!12593 = !DILocation(line: 687, column: 10, scope: !12505)
!12594 = !DILocation(line: 687, column: 20, scope: !12505)
!12595 = !DILocation(line: 688, column: 1, scope: !12505)
!12596 = distinct !DISubprogram(name: "hash_free", scope: !1014, file: !1014, line: 696, type: !1117, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12597 = !DILocalVariable(name: "table", arg: 1, scope: !12596, file: !1014, line: 696, type: !1116)
!12598 = !DILocation(line: 696, column: 24, scope: !12596)
!12599 = !DILocalVariable(name: "bucket", scope: !12596, file: !1014, line: 698, type: !1017)
!12600 = !DILocation(line: 698, column: 22, scope: !12596)
!12601 = !DILocalVariable(name: "cursor", scope: !12596, file: !1014, line: 699, type: !1017)
!12602 = !DILocation(line: 699, column: 22, scope: !12596)
!12603 = !DILocalVariable(name: "next", scope: !12596, file: !1014, line: 700, type: !1017)
!12604 = !DILocation(line: 700, column: 22, scope: !12596)
!12605 = !DILocation(line: 703, column: 7, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12596, file: !1014, line: 703, column: 7)
!12607 = !DILocation(line: 703, column: 14, scope: !12606)
!12608 = !DILocation(line: 703, column: 25, scope: !12606)
!12609 = !DILocation(line: 703, column: 28, scope: !12606)
!12610 = !DILocation(line: 703, column: 35, scope: !12606)
!12611 = !DILocation(line: 703, column: 7, scope: !12596)
!12612 = !DILocation(line: 705, column: 21, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !1014, line: 705, column: 7)
!12614 = distinct !DILexicalBlock(scope: !12606, file: !1014, line: 704, column: 5)
!12615 = !DILocation(line: 705, column: 28, scope: !12613)
!12616 = !DILocation(line: 705, column: 19, scope: !12613)
!12617 = !DILocation(line: 705, column: 12, scope: !12613)
!12618 = !DILocation(line: 705, column: 36, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12613, file: !1014, line: 705, column: 7)
!12620 = !DILocation(line: 705, column: 45, scope: !12619)
!12621 = !DILocation(line: 705, column: 52, scope: !12619)
!12622 = !DILocation(line: 705, column: 43, scope: !12619)
!12623 = !DILocation(line: 705, column: 7, scope: !12613)
!12624 = !DILocation(line: 707, column: 15, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12626, file: !1014, line: 707, column: 15)
!12626 = distinct !DILexicalBlock(scope: !12619, file: !1014, line: 706, column: 9)
!12627 = !DILocation(line: 707, column: 23, scope: !12625)
!12628 = !DILocation(line: 707, column: 15, scope: !12626)
!12629 = !DILocation(line: 709, column: 29, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !1014, line: 709, column: 15)
!12631 = distinct !DILexicalBlock(scope: !12625, file: !1014, line: 708, column: 13)
!12632 = !DILocation(line: 709, column: 27, scope: !12630)
!12633 = !DILocation(line: 709, column: 20, scope: !12630)
!12634 = !DILocation(line: 709, column: 37, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12630, file: !1014, line: 709, column: 15)
!12636 = !DILocation(line: 709, column: 15, scope: !12630)
!12637 = !DILocation(line: 710, column: 17, scope: !12635)
!12638 = !DILocation(line: 710, column: 24, scope: !12635)
!12639 = !DILocation(line: 710, column: 36, scope: !12635)
!12640 = !DILocation(line: 710, column: 44, scope: !12635)
!12641 = !DILocation(line: 709, column: 54, scope: !12635)
!12642 = !DILocation(line: 709, column: 62, scope: !12635)
!12643 = !DILocation(line: 709, column: 52, scope: !12635)
!12644 = !DILocation(line: 709, column: 15, scope: !12635)
!12645 = distinct !{!12645, !12636, !12646}
!12646 = !DILocation(line: 710, column: 48, scope: !12630)
!12647 = !DILocation(line: 711, column: 13, scope: !12631)
!12648 = !DILocation(line: 712, column: 9, scope: !12626)
!12649 = !DILocation(line: 705, column: 72, scope: !12619)
!12650 = !DILocation(line: 705, column: 7, scope: !12619)
!12651 = distinct !{!12651, !12623, !12652}
!12652 = !DILocation(line: 712, column: 9, scope: !12613)
!12653 = !DILocation(line: 713, column: 5, scope: !12614)
!12654 = !DILocation(line: 722, column: 17, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12596, file: !1014, line: 722, column: 3)
!12656 = !DILocation(line: 722, column: 24, scope: !12655)
!12657 = !DILocation(line: 722, column: 15, scope: !12655)
!12658 = !DILocation(line: 722, column: 8, scope: !12655)
!12659 = !DILocation(line: 722, column: 32, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12655, file: !1014, line: 722, column: 3)
!12661 = !DILocation(line: 722, column: 41, scope: !12660)
!12662 = !DILocation(line: 722, column: 48, scope: !12660)
!12663 = !DILocation(line: 722, column: 39, scope: !12660)
!12664 = !DILocation(line: 722, column: 3, scope: !12655)
!12665 = !DILocation(line: 724, column: 21, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !1014, line: 724, column: 7)
!12667 = distinct !DILexicalBlock(scope: !12660, file: !1014, line: 723, column: 5)
!12668 = !DILocation(line: 724, column: 29, scope: !12666)
!12669 = !DILocation(line: 724, column: 19, scope: !12666)
!12670 = !DILocation(line: 724, column: 12, scope: !12666)
!12671 = !DILocation(line: 724, column: 35, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12666, file: !1014, line: 724, column: 7)
!12673 = !DILocation(line: 724, column: 7, scope: !12666)
!12674 = !DILocation(line: 726, column: 18, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12672, file: !1014, line: 725, column: 9)
!12676 = !DILocation(line: 726, column: 26, scope: !12675)
!12677 = !DILocation(line: 726, column: 16, scope: !12675)
!12678 = !DILocation(line: 727, column: 17, scope: !12675)
!12679 = !DILocation(line: 727, column: 11, scope: !12675)
!12680 = !DILocation(line: 728, column: 9, scope: !12675)
!12681 = !DILocation(line: 724, column: 52, scope: !12672)
!12682 = !DILocation(line: 724, column: 50, scope: !12672)
!12683 = !DILocation(line: 724, column: 7, scope: !12672)
!12684 = distinct !{!12684, !12673, !12685}
!12685 = !DILocation(line: 728, column: 9, scope: !12666)
!12686 = !DILocation(line: 729, column: 5, scope: !12667)
!12687 = !DILocation(line: 722, column: 68, scope: !12660)
!12688 = !DILocation(line: 722, column: 3, scope: !12660)
!12689 = distinct !{!12689, !12664, !12690}
!12690 = !DILocation(line: 729, column: 5, scope: !12655)
!12691 = !DILocation(line: 732, column: 17, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12596, file: !1014, line: 732, column: 3)
!12693 = !DILocation(line: 732, column: 24, scope: !12692)
!12694 = !DILocation(line: 732, column: 15, scope: !12692)
!12695 = !DILocation(line: 732, column: 8, scope: !12692)
!12696 = !DILocation(line: 732, column: 41, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12692, file: !1014, line: 732, column: 3)
!12698 = !DILocation(line: 732, column: 3, scope: !12692)
!12699 = !DILocation(line: 734, column: 14, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12697, file: !1014, line: 733, column: 5)
!12701 = !DILocation(line: 734, column: 22, scope: !12700)
!12702 = !DILocation(line: 734, column: 12, scope: !12700)
!12703 = !DILocation(line: 735, column: 13, scope: !12700)
!12704 = !DILocation(line: 735, column: 7, scope: !12700)
!12705 = !DILocation(line: 736, column: 5, scope: !12700)
!12706 = !DILocation(line: 732, column: 58, scope: !12697)
!12707 = !DILocation(line: 732, column: 56, scope: !12697)
!12708 = !DILocation(line: 732, column: 3, scope: !12697)
!12709 = distinct !{!12709, !12698, !12710}
!12710 = !DILocation(line: 736, column: 5, scope: !12692)
!12711 = !DILocation(line: 741, column: 9, scope: !12596)
!12712 = !DILocation(line: 741, column: 16, scope: !12596)
!12713 = !DILocation(line: 741, column: 3, scope: !12596)
!12714 = !DILocation(line: 742, column: 9, scope: !12596)
!12715 = !DILocation(line: 742, column: 3, scope: !12596)
!12716 = !DILocation(line: 743, column: 1, scope: !12596)
!12717 = distinct !DISubprogram(name: "hash_rehash", scope: !1014, file: !1014, line: 943, type: !1119, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12718 = !DILocalVariable(name: "table", arg: 1, scope: !12717, file: !1014, line: 943, type: !1116)
!12719 = !DILocation(line: 943, column: 26, scope: !12717)
!12720 = !DILocalVariable(name: "candidate", arg: 2, scope: !12717, file: !1014, line: 943, type: !52)
!12721 = !DILocation(line: 943, column: 40, scope: !12717)
!12722 = !DILocalVariable(name: "storage", scope: !12717, file: !1014, line: 945, type: !1012)
!12723 = !DILocation(line: 945, column: 14, scope: !12717)
!12724 = !DILocalVariable(name: "new_table", scope: !12717, file: !1014, line: 946, type: !1116)
!12725 = !DILocation(line: 946, column: 15, scope: !12717)
!12726 = !DILocalVariable(name: "new_size", scope: !12717, file: !1014, line: 947, type: !52)
!12727 = !DILocation(line: 947, column: 10, scope: !12717)
!12728 = !DILocation(line: 947, column: 42, scope: !12717)
!12729 = !DILocation(line: 947, column: 53, scope: !12717)
!12730 = !DILocation(line: 947, column: 60, scope: !12717)
!12731 = !DILocation(line: 947, column: 21, scope: !12717)
!12732 = !DILocation(line: 949, column: 8, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12717, file: !1014, line: 949, column: 7)
!12734 = !DILocation(line: 949, column: 7, scope: !12717)
!12735 = !DILocation(line: 950, column: 5, scope: !12733)
!12736 = !DILocation(line: 951, column: 7, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12717, file: !1014, line: 951, column: 7)
!12738 = !DILocation(line: 951, column: 19, scope: !12737)
!12739 = !DILocation(line: 951, column: 26, scope: !12737)
!12740 = !DILocation(line: 951, column: 16, scope: !12737)
!12741 = !DILocation(line: 951, column: 7, scope: !12717)
!12742 = !DILocation(line: 952, column: 5, scope: !12737)
!12743 = !DILocation(line: 953, column: 13, scope: !12717)
!12744 = !DILocation(line: 954, column: 31, scope: !12717)
!12745 = !DILocation(line: 954, column: 23, scope: !12717)
!12746 = !DILocation(line: 954, column: 3, scope: !12717)
!12747 = !DILocation(line: 954, column: 14, scope: !12717)
!12748 = !DILocation(line: 954, column: 21, scope: !12717)
!12749 = !DILocation(line: 955, column: 7, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12717, file: !1014, line: 955, column: 7)
!12751 = !DILocation(line: 955, column: 18, scope: !12750)
!12752 = !DILocation(line: 955, column: 25, scope: !12750)
!12753 = !DILocation(line: 955, column: 7, scope: !12717)
!12754 = !DILocation(line: 956, column: 5, scope: !12750)
!12755 = !DILocation(line: 957, column: 26, scope: !12717)
!12756 = !DILocation(line: 957, column: 3, scope: !12717)
!12757 = !DILocation(line: 957, column: 14, scope: !12717)
!12758 = !DILocation(line: 957, column: 24, scope: !12717)
!12759 = !DILocation(line: 958, column: 29, scope: !12717)
!12760 = !DILocation(line: 958, column: 40, scope: !12717)
!12761 = !DILocation(line: 958, column: 49, scope: !12717)
!12762 = !DILocation(line: 958, column: 47, scope: !12717)
!12763 = !DILocation(line: 958, column: 3, scope: !12717)
!12764 = !DILocation(line: 958, column: 14, scope: !12717)
!12765 = !DILocation(line: 958, column: 27, scope: !12717)
!12766 = !DILocation(line: 959, column: 3, scope: !12717)
!12767 = !DILocation(line: 959, column: 14, scope: !12717)
!12768 = !DILocation(line: 959, column: 29, scope: !12717)
!12769 = !DILocation(line: 960, column: 3, scope: !12717)
!12770 = !DILocation(line: 960, column: 14, scope: !12717)
!12771 = !DILocation(line: 960, column: 24, scope: !12717)
!12772 = !DILocation(line: 961, column: 23, scope: !12717)
!12773 = !DILocation(line: 961, column: 30, scope: !12717)
!12774 = !DILocation(line: 961, column: 3, scope: !12717)
!12775 = !DILocation(line: 961, column: 14, scope: !12717)
!12776 = !DILocation(line: 961, column: 21, scope: !12717)
!12777 = !DILocation(line: 962, column: 23, scope: !12717)
!12778 = !DILocation(line: 962, column: 30, scope: !12717)
!12779 = !DILocation(line: 962, column: 3, scope: !12717)
!12780 = !DILocation(line: 962, column: 14, scope: !12717)
!12781 = !DILocation(line: 962, column: 21, scope: !12717)
!12782 = !DILocation(line: 963, column: 27, scope: !12717)
!12783 = !DILocation(line: 963, column: 34, scope: !12717)
!12784 = !DILocation(line: 963, column: 3, scope: !12717)
!12785 = !DILocation(line: 963, column: 14, scope: !12717)
!12786 = !DILocation(line: 963, column: 25, scope: !12717)
!12787 = !DILocation(line: 964, column: 27, scope: !12717)
!12788 = !DILocation(line: 964, column: 34, scope: !12717)
!12789 = !DILocation(line: 964, column: 3, scope: !12717)
!12790 = !DILocation(line: 964, column: 14, scope: !12717)
!12791 = !DILocation(line: 964, column: 25, scope: !12717)
!12792 = !DILocation(line: 984, column: 32, scope: !12717)
!12793 = !DILocation(line: 984, column: 39, scope: !12717)
!12794 = !DILocation(line: 984, column: 3, scope: !12717)
!12795 = !DILocation(line: 984, column: 14, scope: !12717)
!12796 = !DILocation(line: 984, column: 30, scope: !12717)
!12797 = !DILocation(line: 986, column: 25, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12717, file: !1014, line: 986, column: 7)
!12799 = !DILocation(line: 986, column: 36, scope: !12798)
!12800 = !DILocation(line: 986, column: 7, scope: !12798)
!12801 = !DILocation(line: 986, column: 7, scope: !12717)
!12802 = !DILocation(line: 989, column: 13, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12798, file: !1014, line: 987, column: 5)
!12804 = !DILocation(line: 989, column: 20, scope: !12803)
!12805 = !DILocation(line: 989, column: 7, scope: !12803)
!12806 = !DILocation(line: 990, column: 23, scope: !12803)
!12807 = !DILocation(line: 990, column: 34, scope: !12803)
!12808 = !DILocation(line: 990, column: 7, scope: !12803)
!12809 = !DILocation(line: 990, column: 14, scope: !12803)
!12810 = !DILocation(line: 990, column: 21, scope: !12803)
!12811 = !DILocation(line: 991, column: 29, scope: !12803)
!12812 = !DILocation(line: 991, column: 40, scope: !12803)
!12813 = !DILocation(line: 991, column: 7, scope: !12803)
!12814 = !DILocation(line: 991, column: 14, scope: !12803)
!12815 = !DILocation(line: 991, column: 27, scope: !12803)
!12816 = !DILocation(line: 992, column: 26, scope: !12803)
!12817 = !DILocation(line: 992, column: 37, scope: !12803)
!12818 = !DILocation(line: 992, column: 7, scope: !12803)
!12819 = !DILocation(line: 992, column: 14, scope: !12803)
!12820 = !DILocation(line: 992, column: 24, scope: !12803)
!12821 = !DILocation(line: 993, column: 31, scope: !12803)
!12822 = !DILocation(line: 993, column: 42, scope: !12803)
!12823 = !DILocation(line: 993, column: 7, scope: !12803)
!12824 = !DILocation(line: 993, column: 14, scope: !12803)
!12825 = !DILocation(line: 993, column: 29, scope: !12803)
!12826 = !DILocation(line: 994, column: 32, scope: !12803)
!12827 = !DILocation(line: 994, column: 43, scope: !12803)
!12828 = !DILocation(line: 994, column: 7, scope: !12803)
!12829 = !DILocation(line: 994, column: 14, scope: !12803)
!12830 = !DILocation(line: 994, column: 30, scope: !12803)
!12831 = !DILocation(line: 996, column: 7, scope: !12803)
!12832 = !DILocation(line: 1012, column: 28, scope: !12717)
!12833 = !DILocation(line: 1012, column: 39, scope: !12717)
!12834 = !DILocation(line: 1012, column: 3, scope: !12717)
!12835 = !DILocation(line: 1012, column: 10, scope: !12717)
!12836 = !DILocation(line: 1012, column: 26, scope: !12717)
!12837 = !DILocation(line: 1013, column: 28, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12717, file: !1014, line: 1013, column: 7)
!12839 = !DILocation(line: 1013, column: 35, scope: !12838)
!12840 = !DILocation(line: 1013, column: 10, scope: !12838)
!12841 = !DILocation(line: 1014, column: 10, scope: !12838)
!12842 = !DILocation(line: 1014, column: 31, scope: !12838)
!12843 = !DILocation(line: 1014, column: 38, scope: !12838)
!12844 = !DILocation(line: 1014, column: 13, scope: !12838)
!12845 = !DILocation(line: 1013, column: 7, scope: !12717)
!12846 = !DILocation(line: 1015, column: 5, scope: !12838)
!12847 = !DILocation(line: 1017, column: 9, scope: !12717)
!12848 = !DILocation(line: 1017, column: 20, scope: !12717)
!12849 = !DILocation(line: 1017, column: 3, scope: !12717)
!12850 = !DILocation(line: 1018, column: 3, scope: !12717)
!12851 = !DILocation(line: 1019, column: 1, scope: !12717)
!12852 = distinct !DISubprogram(name: "transfer_entries", scope: !1014, file: !1014, line: 860, type: !1136, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!12853 = !DILocalVariable(name: "dst", arg: 1, scope: !12852, file: !1014, line: 860, type: !1116)
!12854 = !DILocation(line: 860, column: 31, scope: !12852)
!12855 = !DILocalVariable(name: "src", arg: 2, scope: !12852, file: !1014, line: 860, type: !1116)
!12856 = !DILocation(line: 860, column: 48, scope: !12852)
!12857 = !DILocalVariable(name: "safe", arg: 3, scope: !12852, file: !1014, line: 860, type: !102)
!12858 = !DILocation(line: 860, column: 58, scope: !12852)
!12859 = !DILocalVariable(name: "bucket", scope: !12852, file: !1014, line: 862, type: !1017)
!12860 = !DILocation(line: 862, column: 22, scope: !12852)
!12861 = !DILocalVariable(name: "cursor", scope: !12852, file: !1014, line: 863, type: !1017)
!12862 = !DILocation(line: 863, column: 22, scope: !12852)
!12863 = !DILocalVariable(name: "next", scope: !12852, file: !1014, line: 864, type: !1017)
!12864 = !DILocation(line: 864, column: 22, scope: !12852)
!12865 = !DILocation(line: 865, column: 17, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12852, file: !1014, line: 865, column: 3)
!12867 = !DILocation(line: 865, column: 22, scope: !12866)
!12868 = !DILocation(line: 865, column: 15, scope: !12866)
!12869 = !DILocation(line: 865, column: 8, scope: !12866)
!12870 = !DILocation(line: 865, column: 30, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12866, file: !1014, line: 865, column: 3)
!12872 = !DILocation(line: 865, column: 39, scope: !12871)
!12873 = !DILocation(line: 865, column: 44, scope: !12871)
!12874 = !DILocation(line: 865, column: 37, scope: !12871)
!12875 = !DILocation(line: 865, column: 3, scope: !12866)
!12876 = !DILocation(line: 866, column: 9, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12871, file: !1014, line: 866, column: 9)
!12878 = !DILocation(line: 866, column: 17, scope: !12877)
!12879 = !DILocation(line: 866, column: 9, scope: !12871)
!12880 = !DILocalVariable(name: "data", scope: !12881, file: !1014, line: 868, type: !47)
!12881 = distinct !DILexicalBlock(scope: !12877, file: !1014, line: 867, column: 7)
!12882 = !DILocation(line: 868, column: 15, scope: !12881)
!12883 = !DILocalVariable(name: "new_bucket", scope: !12881, file: !1014, line: 869, type: !1017)
!12884 = !DILocation(line: 869, column: 28, scope: !12881)
!12885 = !DILocation(line: 877, column: 23, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12881, file: !1014, line: 877, column: 9)
!12887 = !DILocation(line: 877, column: 31, scope: !12886)
!12888 = !DILocation(line: 877, column: 21, scope: !12886)
!12889 = !DILocation(line: 877, column: 14, scope: !12886)
!12890 = !DILocation(line: 877, column: 37, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12886, file: !1014, line: 877, column: 9)
!12892 = !DILocation(line: 877, column: 9, scope: !12886)
!12893 = !DILocation(line: 879, column: 20, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12891, file: !1014, line: 878, column: 11)
!12895 = !DILocation(line: 879, column: 28, scope: !12894)
!12896 = !DILocation(line: 879, column: 18, scope: !12894)
!12897 = !DILocation(line: 880, column: 39, scope: !12894)
!12898 = !DILocation(line: 880, column: 44, scope: !12894)
!12899 = !DILocation(line: 880, column: 26, scope: !12894)
!12900 = !DILocation(line: 880, column: 24, scope: !12894)
!12901 = !DILocation(line: 882, column: 20, scope: !12894)
!12902 = !DILocation(line: 882, column: 28, scope: !12894)
!12903 = !DILocation(line: 882, column: 18, scope: !12894)
!12904 = !DILocation(line: 884, column: 17, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12894, file: !1014, line: 884, column: 17)
!12906 = !DILocation(line: 884, column: 29, scope: !12905)
!12907 = !DILocation(line: 884, column: 17, scope: !12894)
!12908 = !DILocation(line: 888, column: 32, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12905, file: !1014, line: 885, column: 15)
!12910 = !DILocation(line: 888, column: 44, scope: !12909)
!12911 = !DILocation(line: 888, column: 17, scope: !12909)
!12912 = !DILocation(line: 888, column: 25, scope: !12909)
!12913 = !DILocation(line: 888, column: 30, scope: !12909)
!12914 = !DILocation(line: 889, column: 36, scope: !12909)
!12915 = !DILocation(line: 889, column: 17, scope: !12909)
!12916 = !DILocation(line: 889, column: 29, scope: !12909)
!12917 = !DILocation(line: 889, column: 34, scope: !12909)
!12918 = !DILocation(line: 890, column: 15, scope: !12909)
!12919 = !DILocation(line: 895, column: 36, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12905, file: !1014, line: 892, column: 15)
!12921 = !DILocation(line: 895, column: 17, scope: !12920)
!12922 = !DILocation(line: 895, column: 29, scope: !12920)
!12923 = !DILocation(line: 895, column: 34, scope: !12920)
!12924 = !DILocation(line: 896, column: 17, scope: !12920)
!12925 = !DILocation(line: 896, column: 22, scope: !12920)
!12926 = !DILocation(line: 896, column: 36, scope: !12920)
!12927 = !DILocation(line: 897, column: 29, scope: !12920)
!12928 = !DILocation(line: 897, column: 34, scope: !12920)
!12929 = !DILocation(line: 897, column: 17, scope: !12920)
!12930 = !DILocation(line: 899, column: 11, scope: !12894)
!12931 = !DILocation(line: 877, column: 54, scope: !12891)
!12932 = !DILocation(line: 877, column: 52, scope: !12891)
!12933 = !DILocation(line: 877, column: 9, scope: !12891)
!12934 = distinct !{!12934, !12892, !12935}
!12935 = !DILocation(line: 899, column: 11, scope: !12886)
!12936 = !DILocation(line: 903, column: 16, scope: !12881)
!12937 = !DILocation(line: 903, column: 24, scope: !12881)
!12938 = !DILocation(line: 903, column: 14, scope: !12881)
!12939 = !DILocation(line: 904, column: 9, scope: !12881)
!12940 = !DILocation(line: 904, column: 17, scope: !12881)
!12941 = !DILocation(line: 904, column: 22, scope: !12881)
!12942 = !DILocation(line: 905, column: 13, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12881, file: !1014, line: 905, column: 13)
!12944 = !DILocation(line: 905, column: 13, scope: !12881)
!12945 = !DILocation(line: 906, column: 11, scope: !12943)
!12946 = !DILocation(line: 907, column: 35, scope: !12881)
!12947 = !DILocation(line: 907, column: 40, scope: !12881)
!12948 = !DILocation(line: 907, column: 22, scope: !12881)
!12949 = !DILocation(line: 907, column: 20, scope: !12881)
!12950 = !DILocation(line: 909, column: 13, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12881, file: !1014, line: 909, column: 13)
!12952 = !DILocation(line: 909, column: 25, scope: !12951)
!12953 = !DILocation(line: 909, column: 13, scope: !12881)
!12954 = !DILocalVariable(name: "new_entry", scope: !12955, file: !1014, line: 913, type: !1017)
!12955 = distinct !DILexicalBlock(scope: !12951, file: !1014, line: 910, column: 11)
!12956 = !DILocation(line: 913, column: 32, scope: !12955)
!12957 = !DILocation(line: 913, column: 60, scope: !12955)
!12958 = !DILocation(line: 913, column: 44, scope: !12955)
!12959 = !DILocation(line: 915, column: 17, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12955, file: !1014, line: 915, column: 17)
!12961 = !DILocation(line: 915, column: 27, scope: !12960)
!12962 = !DILocation(line: 915, column: 17, scope: !12955)
!12963 = !DILocation(line: 916, column: 15, scope: !12960)
!12964 = !DILocation(line: 918, column: 31, scope: !12955)
!12965 = !DILocation(line: 918, column: 13, scope: !12955)
!12966 = !DILocation(line: 918, column: 24, scope: !12955)
!12967 = !DILocation(line: 918, column: 29, scope: !12955)
!12968 = !DILocation(line: 919, column: 31, scope: !12955)
!12969 = !DILocation(line: 919, column: 43, scope: !12955)
!12970 = !DILocation(line: 919, column: 13, scope: !12955)
!12971 = !DILocation(line: 919, column: 24, scope: !12955)
!12972 = !DILocation(line: 919, column: 29, scope: !12955)
!12973 = !DILocation(line: 920, column: 32, scope: !12955)
!12974 = !DILocation(line: 920, column: 13, scope: !12955)
!12975 = !DILocation(line: 920, column: 25, scope: !12955)
!12976 = !DILocation(line: 920, column: 30, scope: !12955)
!12977 = !DILocation(line: 921, column: 11, scope: !12955)
!12978 = !DILocation(line: 925, column: 32, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12951, file: !1014, line: 923, column: 11)
!12980 = !DILocation(line: 925, column: 13, scope: !12979)
!12981 = !DILocation(line: 925, column: 25, scope: !12979)
!12982 = !DILocation(line: 925, column: 30, scope: !12979)
!12983 = !DILocation(line: 926, column: 13, scope: !12979)
!12984 = !DILocation(line: 926, column: 18, scope: !12979)
!12985 = !DILocation(line: 926, column: 32, scope: !12979)
!12986 = !DILocation(line: 928, column: 9, scope: !12881)
!12987 = !DILocation(line: 928, column: 17, scope: !12881)
!12988 = !DILocation(line: 928, column: 22, scope: !12881)
!12989 = !DILocation(line: 929, column: 9, scope: !12881)
!12990 = !DILocation(line: 929, column: 14, scope: !12881)
!12991 = !DILocation(line: 929, column: 28, scope: !12881)
!12992 = !DILocation(line: 930, column: 7, scope: !12881)
!12993 = !DILocation(line: 865, column: 64, scope: !12871)
!12994 = !DILocation(line: 865, column: 3, scope: !12871)
!12995 = distinct !{!12995, !12875, !12996}
!12996 = !DILocation(line: 930, column: 7, scope: !12866)
!12997 = !DILocation(line: 931, column: 3, scope: !12852)
!12998 = !DILocation(line: 932, column: 1, scope: !12852)
!12999 = distinct !DISubprogram(name: "free_entry", scope: !1014, file: !1014, line: 776, type: !1138, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!13000 = !DILocalVariable(name: "table", arg: 1, scope: !12999, file: !1014, line: 776, type: !1116)
!13001 = !DILocation(line: 776, column: 25, scope: !12999)
!13002 = !DILocalVariable(name: "entry", arg: 2, scope: !12999, file: !1014, line: 776, type: !1017)
!13003 = !DILocation(line: 776, column: 51, scope: !12999)
!13004 = !DILocation(line: 778, column: 3, scope: !12999)
!13005 = !DILocation(line: 778, column: 10, scope: !12999)
!13006 = !DILocation(line: 778, column: 15, scope: !12999)
!13007 = !DILocation(line: 779, column: 17, scope: !12999)
!13008 = !DILocation(line: 779, column: 24, scope: !12999)
!13009 = !DILocation(line: 779, column: 3, scope: !12999)
!13010 = !DILocation(line: 779, column: 10, scope: !12999)
!13011 = !DILocation(line: 779, column: 15, scope: !12999)
!13012 = !DILocation(line: 780, column: 28, scope: !12999)
!13013 = !DILocation(line: 780, column: 3, scope: !12999)
!13014 = !DILocation(line: 780, column: 10, scope: !12999)
!13015 = !DILocation(line: 780, column: 26, scope: !12999)
!13016 = !DILocation(line: 781, column: 1, scope: !12999)
!13017 = distinct !DISubprogram(name: "allocate_entry", scope: !1014, file: !1014, line: 751, type: !1143, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!13018 = !DILocalVariable(name: "table", arg: 1, scope: !13017, file: !1014, line: 751, type: !1116)
!13019 = !DILocation(line: 751, column: 29, scope: !13017)
!13020 = !DILocalVariable(name: "new", scope: !13017, file: !1014, line: 753, type: !1017)
!13021 = !DILocation(line: 753, column: 22, scope: !13017)
!13022 = !DILocation(line: 755, column: 7, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13017, file: !1014, line: 755, column: 7)
!13024 = !DILocation(line: 755, column: 14, scope: !13023)
!13025 = !DILocation(line: 755, column: 7, scope: !13017)
!13026 = !DILocation(line: 757, column: 13, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13023, file: !1014, line: 756, column: 5)
!13028 = !DILocation(line: 757, column: 20, scope: !13027)
!13029 = !DILocation(line: 757, column: 11, scope: !13027)
!13030 = !DILocation(line: 758, column: 32, scope: !13027)
!13031 = !DILocation(line: 758, column: 37, scope: !13027)
!13032 = !DILocation(line: 758, column: 7, scope: !13027)
!13033 = !DILocation(line: 758, column: 14, scope: !13027)
!13034 = !DILocation(line: 758, column: 30, scope: !13027)
!13035 = !DILocation(line: 759, column: 5, scope: !13027)
!13036 = !DILocation(line: 765, column: 13, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13023, file: !1014, line: 761, column: 5)
!13038 = !DILocation(line: 765, column: 11, scope: !13037)
!13039 = !DILocation(line: 769, column: 10, scope: !13017)
!13040 = !DILocation(line: 769, column: 3, scope: !13017)
!13041 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !1014, file: !1014, line: 1038, type: !1121, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!13042 = !DILocalVariable(name: "table", arg: 1, scope: !13041, file: !1014, line: 1038, type: !1116)
!13043 = !DILocation(line: 1038, column: 36, scope: !13041)
!13044 = !DILocalVariable(name: "entry", arg: 2, scope: !13041, file: !1014, line: 1038, type: !85)
!13045 = !DILocation(line: 1038, column: 55, scope: !13041)
!13046 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !13041, file: !1014, line: 1039, type: !1123)
!13047 = !DILocation(line: 1039, column: 37, scope: !13041)
!13048 = !DILocalVariable(name: "data", scope: !13041, file: !1014, line: 1041, type: !47)
!13049 = !DILocation(line: 1041, column: 9, scope: !13041)
!13050 = !DILocalVariable(name: "bucket", scope: !13041, file: !1014, line: 1042, type: !1017)
!13051 = !DILocation(line: 1042, column: 22, scope: !13041)
!13052 = !DILocation(line: 1047, column: 9, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13041, file: !1014, line: 1047, column: 7)
!13054 = !DILocation(line: 1047, column: 7, scope: !13041)
!13055 = !DILocation(line: 1048, column: 5, scope: !13053)
!13056 = !DILocation(line: 1051, column: 32, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13041, file: !1014, line: 1051, column: 7)
!13058 = !DILocation(line: 1051, column: 39, scope: !13057)
!13059 = !DILocation(line: 1051, column: 15, scope: !13057)
!13060 = !DILocation(line: 1051, column: 13, scope: !13057)
!13061 = !DILocation(line: 1051, column: 63, scope: !13057)
!13062 = !DILocation(line: 1051, column: 7, scope: !13041)
!13063 = !DILocation(line: 1053, column: 11, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13065, file: !1014, line: 1053, column: 11)
!13065 = distinct !DILexicalBlock(scope: !13057, file: !1014, line: 1052, column: 5)
!13066 = !DILocation(line: 1053, column: 11, scope: !13065)
!13067 = !DILocation(line: 1054, column: 24, scope: !13064)
!13068 = !DILocation(line: 1054, column: 10, scope: !13064)
!13069 = !DILocation(line: 1054, column: 22, scope: !13064)
!13070 = !DILocation(line: 1054, column: 9, scope: !13064)
!13071 = !DILocation(line: 1055, column: 7, scope: !13065)
!13072 = !DILocation(line: 1063, column: 7, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13041, file: !1014, line: 1063, column: 7)
!13074 = !DILocation(line: 1063, column: 14, scope: !13073)
!13075 = !DILocation(line: 1064, column: 9, scope: !13073)
!13076 = !DILocation(line: 1064, column: 16, scope: !13073)
!13077 = !DILocation(line: 1064, column: 24, scope: !13073)
!13078 = !DILocation(line: 1064, column: 43, scope: !13073)
!13079 = !DILocation(line: 1064, column: 50, scope: !13073)
!13080 = !DILocation(line: 1064, column: 41, scope: !13073)
!13081 = !DILocation(line: 1064, column: 7, scope: !13073)
!13082 = !DILocation(line: 1063, column: 7, scope: !13041)
!13083 = !DILocation(line: 1068, column: 21, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13073, file: !1014, line: 1065, column: 5)
!13085 = !DILocation(line: 1068, column: 7, scope: !13084)
!13086 = !DILocation(line: 1069, column: 11, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13084, file: !1014, line: 1069, column: 11)
!13088 = !DILocation(line: 1069, column: 18, scope: !13087)
!13089 = !DILocation(line: 1070, column: 13, scope: !13087)
!13090 = !DILocation(line: 1070, column: 20, scope: !13087)
!13091 = !DILocation(line: 1070, column: 28, scope: !13087)
!13092 = !DILocation(line: 1070, column: 47, scope: !13087)
!13093 = !DILocation(line: 1070, column: 54, scope: !13087)
!13094 = !DILocation(line: 1070, column: 45, scope: !13087)
!13095 = !DILocation(line: 1070, column: 11, scope: !13087)
!13096 = !DILocation(line: 1069, column: 11, scope: !13084)
!13097 = !DILocalVariable(name: "tuning", scope: !13098, file: !1014, line: 1072, type: !1029)
!13098 = distinct !DILexicalBlock(scope: !13087, file: !1014, line: 1071, column: 9)
!13099 = !DILocation(line: 1072, column: 30, scope: !13098)
!13100 = !DILocation(line: 1072, column: 39, scope: !13098)
!13101 = !DILocation(line: 1072, column: 46, scope: !13098)
!13102 = !DILocalVariable(name: "candidate", scope: !13098, file: !1014, line: 1073, type: !1035)
!13103 = !DILocation(line: 1073, column: 17, scope: !13098)
!13104 = !DILocation(line: 1074, column: 14, scope: !13098)
!13105 = !DILocation(line: 1074, column: 22, scope: !13098)
!13106 = !DILocation(line: 1075, column: 17, scope: !13098)
!13107 = !DILocation(line: 1075, column: 24, scope: !13098)
!13108 = !DILocation(line: 1075, column: 36, scope: !13098)
!13109 = !DILocation(line: 1075, column: 44, scope: !13098)
!13110 = !DILocation(line: 1075, column: 34, scope: !13098)
!13111 = !DILocation(line: 1076, column: 17, scope: !13098)
!13112 = !DILocation(line: 1076, column: 24, scope: !13098)
!13113 = !DILocation(line: 1076, column: 36, scope: !13098)
!13114 = !DILocation(line: 1076, column: 44, scope: !13098)
!13115 = !DILocation(line: 1076, column: 34, scope: !13098)
!13116 = !DILocation(line: 1077, column: 19, scope: !13098)
!13117 = !DILocation(line: 1077, column: 27, scope: !13098)
!13118 = !DILocation(line: 1077, column: 17, scope: !13098)
!13119 = !DILocation(line: 1079, column: 27, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13098, file: !1014, line: 1079, column: 15)
!13121 = !DILocation(line: 1079, column: 24, scope: !13120)
!13122 = !DILocation(line: 1079, column: 15, scope: !13098)
!13123 = !DILocation(line: 1080, column: 13, scope: !13120)
!13124 = !DILocation(line: 1083, column: 29, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13098, file: !1014, line: 1083, column: 15)
!13126 = !DILocation(line: 1083, column: 36, scope: !13125)
!13127 = !DILocation(line: 1083, column: 16, scope: !13125)
!13128 = !DILocation(line: 1083, column: 15, scope: !13098)
!13129 = !DILocation(line: 1084, column: 13, scope: !13125)
!13130 = !DILocation(line: 1087, column: 32, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13098, file: !1014, line: 1087, column: 15)
!13132 = !DILocation(line: 1087, column: 39, scope: !13131)
!13133 = !DILocation(line: 1087, column: 15, scope: !13131)
!13134 = !DILocation(line: 1087, column: 62, scope: !13131)
!13135 = !DILocation(line: 1087, column: 15, scope: !13098)
!13136 = !DILocation(line: 1088, column: 13, scope: !13131)
!13137 = !DILocation(line: 1089, column: 9, scope: !13098)
!13138 = !DILocation(line: 1090, column: 5, scope: !13084)
!13139 = !DILocation(line: 1094, column: 7, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13041, file: !1014, line: 1094, column: 7)
!13141 = !DILocation(line: 1094, column: 15, scope: !13140)
!13142 = !DILocation(line: 1094, column: 7, scope: !13041)
!13143 = !DILocalVariable(name: "new_entry", scope: !13144, file: !1014, line: 1096, type: !1017)
!13144 = distinct !DILexicalBlock(scope: !13140, file: !1014, line: 1095, column: 5)
!13145 = !DILocation(line: 1096, column: 26, scope: !13144)
!13146 = !DILocation(line: 1096, column: 54, scope: !13144)
!13147 = !DILocation(line: 1096, column: 38, scope: !13144)
!13148 = !DILocation(line: 1098, column: 11, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13144, file: !1014, line: 1098, column: 11)
!13150 = !DILocation(line: 1098, column: 21, scope: !13149)
!13151 = !DILocation(line: 1098, column: 11, scope: !13144)
!13152 = !DILocation(line: 1099, column: 9, scope: !13149)
!13153 = !DILocation(line: 1103, column: 34, scope: !13144)
!13154 = !DILocation(line: 1103, column: 7, scope: !13144)
!13155 = !DILocation(line: 1103, column: 18, scope: !13144)
!13156 = !DILocation(line: 1103, column: 23, scope: !13144)
!13157 = !DILocation(line: 1104, column: 25, scope: !13144)
!13158 = !DILocation(line: 1104, column: 33, scope: !13144)
!13159 = !DILocation(line: 1104, column: 7, scope: !13144)
!13160 = !DILocation(line: 1104, column: 18, scope: !13144)
!13161 = !DILocation(line: 1104, column: 23, scope: !13144)
!13162 = !DILocation(line: 1105, column: 22, scope: !13144)
!13163 = !DILocation(line: 1105, column: 7, scope: !13144)
!13164 = !DILocation(line: 1105, column: 15, scope: !13144)
!13165 = !DILocation(line: 1105, column: 20, scope: !13144)
!13166 = !DILocation(line: 1106, column: 7, scope: !13144)
!13167 = !DILocation(line: 1106, column: 14, scope: !13144)
!13168 = !DILocation(line: 1106, column: 23, scope: !13144)
!13169 = !DILocation(line: 1107, column: 7, scope: !13144)
!13170 = !DILocation(line: 1112, column: 27, scope: !13041)
!13171 = !DILocation(line: 1112, column: 3, scope: !13041)
!13172 = !DILocation(line: 1112, column: 11, scope: !13041)
!13173 = !DILocation(line: 1112, column: 16, scope: !13041)
!13174 = !DILocation(line: 1113, column: 3, scope: !13041)
!13175 = !DILocation(line: 1113, column: 10, scope: !13041)
!13176 = !DILocation(line: 1113, column: 19, scope: !13041)
!13177 = !DILocation(line: 1114, column: 3, scope: !13041)
!13178 = !DILocation(line: 1114, column: 10, scope: !13041)
!13179 = !DILocation(line: 1114, column: 24, scope: !13041)
!13180 = !DILocation(line: 1116, column: 3, scope: !13041)
!13181 = !DILocation(line: 1117, column: 1, scope: !13041)
!13182 = distinct !DISubprogram(name: "hash_find_entry", scope: !1014, file: !1014, line: 790, type: !1140, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!13183 = !DILocalVariable(name: "table", arg: 1, scope: !13182, file: !1014, line: 790, type: !1116)
!13184 = !DILocation(line: 790, column: 30, scope: !13182)
!13185 = !DILocalVariable(name: "entry", arg: 2, scope: !13182, file: !1014, line: 790, type: !85)
!13186 = !DILocation(line: 790, column: 49, scope: !13182)
!13187 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13182, file: !1014, line: 791, type: !1142)
!13188 = !DILocation(line: 791, column: 38, scope: !13182)
!13189 = !DILocalVariable(name: "delete", arg: 4, scope: !13182, file: !1014, line: 791, type: !102)
!13190 = !DILocation(line: 791, column: 56, scope: !13182)
!13191 = !DILocalVariable(name: "bucket", scope: !13182, file: !1014, line: 793, type: !1017)
!13192 = !DILocation(line: 793, column: 22, scope: !13182)
!13193 = !DILocation(line: 793, column: 44, scope: !13182)
!13194 = !DILocation(line: 793, column: 51, scope: !13182)
!13195 = !DILocation(line: 793, column: 31, scope: !13182)
!13196 = !DILocalVariable(name: "cursor", scope: !13182, file: !1014, line: 794, type: !1017)
!13197 = !DILocation(line: 794, column: 22, scope: !13182)
!13198 = !DILocation(line: 796, column: 18, scope: !13182)
!13199 = !DILocation(line: 796, column: 4, scope: !13182)
!13200 = !DILocation(line: 796, column: 16, scope: !13182)
!13201 = !DILocation(line: 799, column: 7, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13182, file: !1014, line: 799, column: 7)
!13203 = !DILocation(line: 799, column: 15, scope: !13202)
!13204 = !DILocation(line: 799, column: 20, scope: !13202)
!13205 = !DILocation(line: 799, column: 7, scope: !13182)
!13206 = !DILocation(line: 800, column: 5, scope: !13202)
!13207 = !DILocation(line: 803, column: 7, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13182, file: !1014, line: 803, column: 7)
!13209 = !DILocation(line: 803, column: 16, scope: !13208)
!13210 = !DILocation(line: 803, column: 24, scope: !13208)
!13211 = !DILocation(line: 803, column: 13, scope: !13208)
!13212 = !DILocation(line: 803, column: 29, scope: !13208)
!13213 = !DILocation(line: 803, column: 32, scope: !13208)
!13214 = !DILocation(line: 803, column: 39, scope: !13208)
!13215 = !DILocation(line: 803, column: 51, scope: !13208)
!13216 = !DILocation(line: 803, column: 58, scope: !13208)
!13217 = !DILocation(line: 803, column: 66, scope: !13208)
!13218 = !DILocation(line: 803, column: 7, scope: !13182)
!13219 = !DILocalVariable(name: "data", scope: !13220, file: !1014, line: 805, type: !47)
!13220 = distinct !DILexicalBlock(scope: !13208, file: !1014, line: 804, column: 5)
!13221 = !DILocation(line: 805, column: 13, scope: !13220)
!13222 = !DILocation(line: 805, column: 20, scope: !13220)
!13223 = !DILocation(line: 805, column: 28, scope: !13220)
!13224 = !DILocation(line: 807, column: 11, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13220, file: !1014, line: 807, column: 11)
!13226 = !DILocation(line: 807, column: 11, scope: !13220)
!13227 = !DILocation(line: 809, column: 15, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13229, file: !1014, line: 809, column: 15)
!13229 = distinct !DILexicalBlock(scope: !13225, file: !1014, line: 808, column: 9)
!13230 = !DILocation(line: 809, column: 23, scope: !13228)
!13231 = !DILocation(line: 809, column: 15, scope: !13229)
!13232 = !DILocalVariable(name: "next", scope: !13233, file: !1014, line: 811, type: !1017)
!13233 = distinct !DILexicalBlock(scope: !13228, file: !1014, line: 810, column: 13)
!13234 = !DILocation(line: 811, column: 34, scope: !13233)
!13235 = !DILocation(line: 811, column: 41, scope: !13233)
!13236 = !DILocation(line: 811, column: 49, scope: !13233)
!13237 = !DILocation(line: 815, column: 16, scope: !13233)
!13238 = !DILocation(line: 815, column: 26, scope: !13233)
!13239 = !DILocation(line: 815, column: 25, scope: !13233)
!13240 = !DILocation(line: 816, column: 27, scope: !13233)
!13241 = !DILocation(line: 816, column: 34, scope: !13233)
!13242 = !DILocation(line: 816, column: 15, scope: !13233)
!13243 = !DILocation(line: 817, column: 13, scope: !13233)
!13244 = !DILocation(line: 820, column: 15, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13228, file: !1014, line: 819, column: 13)
!13246 = !DILocation(line: 820, column: 23, scope: !13245)
!13247 = !DILocation(line: 820, column: 28, scope: !13245)
!13248 = !DILocation(line: 822, column: 9, scope: !13229)
!13249 = !DILocation(line: 824, column: 14, scope: !13220)
!13250 = !DILocation(line: 824, column: 7, scope: !13220)
!13251 = !DILocation(line: 828, column: 17, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13182, file: !1014, line: 828, column: 3)
!13253 = !DILocation(line: 828, column: 15, scope: !13252)
!13254 = !DILocation(line: 828, column: 8, scope: !13252)
!13255 = !DILocation(line: 828, column: 25, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13252, file: !1014, line: 828, column: 3)
!13257 = !DILocation(line: 828, column: 33, scope: !13256)
!13258 = !DILocation(line: 828, column: 3, scope: !13252)
!13259 = !DILocation(line: 830, column: 11, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13261, file: !1014, line: 830, column: 11)
!13261 = distinct !DILexicalBlock(scope: !13256, file: !1014, line: 829, column: 5)
!13262 = !DILocation(line: 830, column: 20, scope: !13260)
!13263 = !DILocation(line: 830, column: 28, scope: !13260)
!13264 = !DILocation(line: 830, column: 34, scope: !13260)
!13265 = !DILocation(line: 830, column: 17, scope: !13260)
!13266 = !DILocation(line: 831, column: 11, scope: !13260)
!13267 = !DILocation(line: 831, column: 14, scope: !13260)
!13268 = !DILocation(line: 831, column: 21, scope: !13260)
!13269 = !DILocation(line: 831, column: 33, scope: !13260)
!13270 = !DILocation(line: 831, column: 40, scope: !13260)
!13271 = !DILocation(line: 831, column: 48, scope: !13260)
!13272 = !DILocation(line: 831, column: 54, scope: !13260)
!13273 = !DILocation(line: 830, column: 11, scope: !13261)
!13274 = !DILocalVariable(name: "data", scope: !13275, file: !1014, line: 833, type: !47)
!13275 = distinct !DILexicalBlock(scope: !13260, file: !1014, line: 832, column: 9)
!13276 = !DILocation(line: 833, column: 17, scope: !13275)
!13277 = !DILocation(line: 833, column: 24, scope: !13275)
!13278 = !DILocation(line: 833, column: 32, scope: !13275)
!13279 = !DILocation(line: 833, column: 38, scope: !13275)
!13280 = !DILocation(line: 835, column: 15, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13275, file: !1014, line: 835, column: 15)
!13282 = !DILocation(line: 835, column: 15, scope: !13275)
!13283 = !DILocalVariable(name: "next", scope: !13284, file: !1014, line: 837, type: !1017)
!13284 = distinct !DILexicalBlock(scope: !13281, file: !1014, line: 836, column: 13)
!13285 = !DILocation(line: 837, column: 34, scope: !13284)
!13286 = !DILocation(line: 837, column: 41, scope: !13284)
!13287 = !DILocation(line: 837, column: 49, scope: !13284)
!13288 = !DILocation(line: 841, column: 30, scope: !13284)
!13289 = !DILocation(line: 841, column: 36, scope: !13284)
!13290 = !DILocation(line: 841, column: 15, scope: !13284)
!13291 = !DILocation(line: 841, column: 23, scope: !13284)
!13292 = !DILocation(line: 841, column: 28, scope: !13284)
!13293 = !DILocation(line: 842, column: 27, scope: !13284)
!13294 = !DILocation(line: 842, column: 34, scope: !13284)
!13295 = !DILocation(line: 842, column: 15, scope: !13284)
!13296 = !DILocation(line: 843, column: 13, scope: !13284)
!13297 = !DILocation(line: 845, column: 18, scope: !13275)
!13298 = !DILocation(line: 845, column: 11, scope: !13275)
!13299 = !DILocation(line: 847, column: 5, scope: !13261)
!13300 = !DILocation(line: 828, column: 48, scope: !13256)
!13301 = !DILocation(line: 828, column: 56, scope: !13256)
!13302 = !DILocation(line: 828, column: 46, scope: !13256)
!13303 = !DILocation(line: 828, column: 3, scope: !13256)
!13304 = distinct !{!13304, !13258, !13305}
!13305 = !DILocation(line: 847, column: 5, scope: !13252)
!13306 = !DILocation(line: 850, column: 3, scope: !13182)
!13307 = !DILocation(line: 851, column: 1, scope: !13182)
!13308 = distinct !DISubprogram(name: "hash_insert", scope: !1014, file: !1014, line: 1126, type: !1124, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!13309 = !DILocalVariable(name: "table", arg: 1, scope: !13308, file: !1014, line: 1126, type: !1116)
!13310 = !DILocation(line: 1126, column: 26, scope: !13308)
!13311 = !DILocalVariable(name: "entry", arg: 2, scope: !13308, file: !1014, line: 1126, type: !85)
!13312 = !DILocation(line: 1126, column: 45, scope: !13308)
!13313 = !DILocalVariable(name: "matched_ent", scope: !13308, file: !1014, line: 1128, type: !85)
!13314 = !DILocation(line: 1128, column: 15, scope: !13308)
!13315 = !DILocalVariable(name: "err", scope: !13308, file: !1014, line: 1129, type: !5)
!13316 = !DILocation(line: 1129, column: 7, scope: !13308)
!13317 = !DILocation(line: 1129, column: 36, scope: !13308)
!13318 = !DILocation(line: 1129, column: 43, scope: !13308)
!13319 = !DILocation(line: 1129, column: 13, scope: !13308)
!13320 = !DILocation(line: 1130, column: 11, scope: !13308)
!13321 = !DILocation(line: 1130, column: 15, scope: !13308)
!13322 = !DILocation(line: 1132, column: 23, scope: !13308)
!13323 = !DILocation(line: 1132, column: 27, scope: !13308)
!13324 = !DILocation(line: 1132, column: 34, scope: !13308)
!13325 = !DILocation(line: 1132, column: 48, scope: !13308)
!13326 = !DILocation(line: 1130, column: 3, scope: !13308)
!13327 = distinct !DISubprogram(name: "hash_delete", scope: !1014, file: !1014, line: 1140, type: !1124, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1005, retainedNodes: !309)
!13328 = !DILocalVariable(name: "table", arg: 1, scope: !13327, file: !1014, line: 1140, type: !1116)
!13329 = !DILocation(line: 1140, column: 26, scope: !13327)
!13330 = !DILocalVariable(name: "entry", arg: 2, scope: !13327, file: !1014, line: 1140, type: !85)
!13331 = !DILocation(line: 1140, column: 45, scope: !13327)
!13332 = !DILocalVariable(name: "data", scope: !13327, file: !1014, line: 1142, type: !47)
!13333 = !DILocation(line: 1142, column: 9, scope: !13327)
!13334 = !DILocalVariable(name: "bucket", scope: !13327, file: !1014, line: 1143, type: !1017)
!13335 = !DILocation(line: 1143, column: 22, scope: !13327)
!13336 = !DILocation(line: 1145, column: 27, scope: !13327)
!13337 = !DILocation(line: 1145, column: 34, scope: !13327)
!13338 = !DILocation(line: 1145, column: 10, scope: !13327)
!13339 = !DILocation(line: 1145, column: 8, scope: !13327)
!13340 = !DILocation(line: 1146, column: 8, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13327, file: !1014, line: 1146, column: 7)
!13342 = !DILocation(line: 1146, column: 7, scope: !13327)
!13343 = !DILocation(line: 1147, column: 5, scope: !13341)
!13344 = !DILocation(line: 1149, column: 3, scope: !13327)
!13345 = !DILocation(line: 1149, column: 10, scope: !13327)
!13346 = !DILocation(line: 1149, column: 19, scope: !13327)
!13347 = !DILocation(line: 1150, column: 8, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13327, file: !1014, line: 1150, column: 7)
!13349 = !DILocation(line: 1150, column: 16, scope: !13348)
!13350 = !DILocation(line: 1150, column: 7, scope: !13327)
!13351 = !DILocation(line: 1152, column: 7, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !1014, line: 1151, column: 5)
!13353 = !DILocation(line: 1152, column: 14, scope: !13352)
!13354 = !DILocation(line: 1152, column: 28, scope: !13352)
!13355 = !DILocation(line: 1157, column: 11, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13352, file: !1014, line: 1157, column: 11)
!13357 = !DILocation(line: 1157, column: 18, scope: !13356)
!13358 = !DILocation(line: 1158, column: 13, scope: !13356)
!13359 = !DILocation(line: 1158, column: 20, scope: !13356)
!13360 = !DILocation(line: 1158, column: 28, scope: !13356)
!13361 = !DILocation(line: 1158, column: 47, scope: !13356)
!13362 = !DILocation(line: 1158, column: 54, scope: !13356)
!13363 = !DILocation(line: 1158, column: 45, scope: !13356)
!13364 = !DILocation(line: 1158, column: 11, scope: !13356)
!13365 = !DILocation(line: 1157, column: 11, scope: !13352)
!13366 = !DILocation(line: 1162, column: 25, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13356, file: !1014, line: 1159, column: 9)
!13368 = !DILocation(line: 1162, column: 11, scope: !13367)
!13369 = !DILocation(line: 1163, column: 15, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13367, file: !1014, line: 1163, column: 15)
!13371 = !DILocation(line: 1163, column: 22, scope: !13370)
!13372 = !DILocation(line: 1164, column: 17, scope: !13370)
!13373 = !DILocation(line: 1164, column: 24, scope: !13370)
!13374 = !DILocation(line: 1164, column: 32, scope: !13370)
!13375 = !DILocation(line: 1164, column: 51, scope: !13370)
!13376 = !DILocation(line: 1164, column: 58, scope: !13370)
!13377 = !DILocation(line: 1164, column: 49, scope: !13370)
!13378 = !DILocation(line: 1164, column: 15, scope: !13370)
!13379 = !DILocation(line: 1163, column: 15, scope: !13367)
!13380 = !DILocalVariable(name: "tuning", scope: !13381, file: !1014, line: 1166, type: !1029)
!13381 = distinct !DILexicalBlock(scope: !13370, file: !1014, line: 1165, column: 13)
!13382 = !DILocation(line: 1166, column: 34, scope: !13381)
!13383 = !DILocation(line: 1166, column: 43, scope: !13381)
!13384 = !DILocation(line: 1166, column: 50, scope: !13381)
!13385 = !DILocalVariable(name: "candidate", scope: !13381, file: !1014, line: 1167, type: !52)
!13386 = !DILocation(line: 1167, column: 22, scope: !13381)
!13387 = !DILocation(line: 1168, column: 18, scope: !13381)
!13388 = !DILocation(line: 1168, column: 26, scope: !13381)
!13389 = !DILocation(line: 1169, column: 20, scope: !13381)
!13390 = !DILocation(line: 1169, column: 27, scope: !13381)
!13391 = !DILocation(line: 1169, column: 39, scope: !13381)
!13392 = !DILocation(line: 1169, column: 47, scope: !13381)
!13393 = !DILocation(line: 1169, column: 37, scope: !13381)
!13394 = !DILocation(line: 1170, column: 21, scope: !13381)
!13395 = !DILocation(line: 1170, column: 28, scope: !13381)
!13396 = !DILocation(line: 1170, column: 40, scope: !13381)
!13397 = !DILocation(line: 1170, column: 48, scope: !13381)
!13398 = !DILocation(line: 1170, column: 38, scope: !13381)
!13399 = !DILocation(line: 1171, column: 23, scope: !13381)
!13400 = !DILocation(line: 1171, column: 31, scope: !13381)
!13401 = !DILocation(line: 1171, column: 21, scope: !13381)
!13402 = !DILocation(line: 1168, column: 17, scope: !13381)
!13403 = !DILocation(line: 1173, column: 33, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13381, file: !1014, line: 1173, column: 19)
!13405 = !DILocation(line: 1173, column: 40, scope: !13404)
!13406 = !DILocation(line: 1173, column: 20, scope: !13404)
!13407 = !DILocation(line: 1173, column: 19, scope: !13381)
!13408 = !DILocalVariable(name: "cursor", scope: !13409, file: !1014, line: 1181, type: !1017)
!13409 = distinct !DILexicalBlock(scope: !13404, file: !1014, line: 1174, column: 17)
!13410 = !DILocation(line: 1181, column: 38, scope: !13409)
!13411 = !DILocation(line: 1181, column: 47, scope: !13409)
!13412 = !DILocation(line: 1181, column: 54, scope: !13409)
!13413 = !DILocalVariable(name: "next", scope: !13409, file: !1014, line: 1182, type: !1017)
!13414 = !DILocation(line: 1182, column: 38, scope: !13409)
!13415 = !DILocation(line: 1183, column: 19, scope: !13409)
!13416 = !DILocation(line: 1183, column: 26, scope: !13409)
!13417 = !DILocation(line: 1185, column: 30, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13409, file: !1014, line: 1184, column: 21)
!13419 = !DILocation(line: 1185, column: 38, scope: !13418)
!13420 = !DILocation(line: 1185, column: 28, scope: !13418)
!13421 = !DILocation(line: 1186, column: 29, scope: !13418)
!13422 = !DILocation(line: 1186, column: 23, scope: !13418)
!13423 = !DILocation(line: 1187, column: 32, scope: !13418)
!13424 = !DILocation(line: 1187, column: 30, scope: !13418)
!13425 = distinct !{!13425, !13415, !13426}
!13426 = !DILocation(line: 1188, column: 21, scope: !13409)
!13427 = !DILocation(line: 1189, column: 19, scope: !13409)
!13428 = !DILocation(line: 1189, column: 26, scope: !13409)
!13429 = !DILocation(line: 1189, column: 42, scope: !13409)
!13430 = !DILocation(line: 1191, column: 17, scope: !13409)
!13431 = !DILocation(line: 1192, column: 13, scope: !13381)
!13432 = !DILocation(line: 1193, column: 9, scope: !13367)
!13433 = !DILocation(line: 1194, column: 5, scope: !13352)
!13434 = !DILocation(line: 1196, column: 10, scope: !13327)
!13435 = !DILocation(line: 1196, column: 3, scope: !13327)
!13436 = !DILocation(line: 1197, column: 1, scope: !13327)
!13437 = distinct !DISubprogram(name: "heap_alloc", scope: !1549, file: !1549, line: 44, type: !1545, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13438 = !DILocalVariable(name: "compare", arg: 1, scope: !13437, file: !1549, line: 44, type: !1555)
!13439 = !DILocation(line: 44, column: 19, scope: !13437)
!13440 = !DILocalVariable(name: "n_reserve", arg: 2, scope: !13437, file: !1549, line: 44, type: !52)
!13441 = !DILocation(line: 44, column: 65, scope: !13437)
!13442 = !DILocalVariable(name: "heap", scope: !13437, file: !1549, line: 46, type: !1547)
!13443 = !DILocation(line: 46, column: 16, scope: !13437)
!13444 = !DILocation(line: 46, column: 23, scope: !13437)
!13445 = !DILocation(line: 48, column: 7, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13437, file: !1549, line: 48, column: 7)
!13447 = !DILocation(line: 48, column: 17, scope: !13446)
!13448 = !DILocation(line: 48, column: 7, scope: !13437)
!13449 = !DILocation(line: 49, column: 15, scope: !13446)
!13450 = !DILocation(line: 49, column: 5, scope: !13446)
!13451 = !DILocation(line: 51, column: 27, scope: !13437)
!13452 = !DILocation(line: 51, column: 17, scope: !13437)
!13453 = !DILocation(line: 51, column: 3, scope: !13437)
!13454 = !DILocation(line: 51, column: 9, scope: !13437)
!13455 = !DILocation(line: 51, column: 15, scope: !13437)
!13456 = !{!13457, !2356, i64 0}
!13457 = !{!"heap", !2356, i64 0, !2517, i64 8, !2517, i64 16, !2356, i64 24}
!13458 = !DILocation(line: 53, column: 3, scope: !13437)
!13459 = !DILocation(line: 53, column: 9, scope: !13437)
!13460 = !DILocation(line: 53, column: 18, scope: !13437)
!13461 = !DILocation(line: 54, column: 20, scope: !13437)
!13462 = !DILocation(line: 54, column: 3, scope: !13437)
!13463 = !DILocation(line: 54, column: 9, scope: !13437)
!13464 = !DILocation(line: 54, column: 18, scope: !13437)
!13465 = !{!13457, !2517, i64 8}
!13466 = !DILocation(line: 55, column: 3, scope: !13437)
!13467 = !DILocation(line: 55, column: 9, scope: !13437)
!13468 = !DILocation(line: 55, column: 15, scope: !13437)
!13469 = !{!13457, !2517, i64 16}
!13470 = !DILocation(line: 56, column: 19, scope: !13437)
!13471 = !DILocation(line: 56, column: 29, scope: !13437)
!13472 = !DILocation(line: 56, column: 3, scope: !13437)
!13473 = !DILocation(line: 56, column: 9, scope: !13437)
!13474 = !DILocation(line: 56, column: 17, scope: !13437)
!13475 = !{!13457, !2356, i64 24}
!13476 = !DILocation(line: 58, column: 10, scope: !13437)
!13477 = !DILocation(line: 58, column: 3, scope: !13437)
!13478 = distinct !DISubprogram(name: "heap_default_compare", scope: !1549, file: !1549, line: 63, type: !333, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13479 = !DILocalVariable(name: "a", arg: 1, scope: !13478, file: !1549, line: 63, type: !85)
!13480 = !DILocation(line: 63, column: 35, scope: !13478)
!13481 = !DILocalVariable(name: "b", arg: 2, scope: !13478, file: !1549, line: 63, type: !85)
!13482 = !DILocation(line: 63, column: 50, scope: !13478)
!13483 = !DILocation(line: 65, column: 3, scope: !13478)
!13484 = distinct !DISubprogram(name: "heap_free", scope: !1549, file: !1549, line: 70, type: !1556, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13485 = !DILocalVariable(name: "heap", arg: 1, scope: !13484, file: !1549, line: 70, type: !1547)
!13486 = !DILocation(line: 70, column: 25, scope: !13484)
!13487 = !DILocation(line: 72, column: 9, scope: !13484)
!13488 = !DILocation(line: 72, column: 15, scope: !13484)
!13489 = !DILocation(line: 72, column: 3, scope: !13484)
!13490 = !DILocation(line: 73, column: 9, scope: !13484)
!13491 = !DILocation(line: 73, column: 3, scope: !13484)
!13492 = !DILocation(line: 74, column: 1, scope: !13484)
!13493 = distinct !DISubprogram(name: "heap_insert", scope: !1549, file: !1549, line: 79, type: !1558, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13494 = !DILocalVariable(name: "heap", arg: 1, scope: !13493, file: !1549, line: 79, type: !1547)
!13495 = !DILocation(line: 79, column: 27, scope: !13493)
!13496 = !DILocalVariable(name: "item", arg: 2, scope: !13493, file: !1549, line: 79, type: !47)
!13497 = !DILocation(line: 79, column: 39, scope: !13493)
!13498 = !DILocation(line: 81, column: 7, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13493, file: !1549, line: 81, column: 7)
!13500 = !DILocation(line: 81, column: 13, scope: !13499)
!13501 = !DILocation(line: 81, column: 22, scope: !13499)
!13502 = !DILocation(line: 81, column: 29, scope: !13499)
!13503 = !DILocation(line: 81, column: 35, scope: !13499)
!13504 = !DILocation(line: 81, column: 26, scope: !13499)
!13505 = !DILocation(line: 81, column: 7, scope: !13493)
!13506 = !DILocation(line: 82, column: 31, scope: !13499)
!13507 = !DILocation(line: 82, column: 37, scope: !13499)
!13508 = !DILocation(line: 82, column: 45, scope: !13499)
!13509 = !DILocation(line: 82, column: 51, scope: !13499)
!13510 = !DILocation(line: 82, column: 19, scope: !13499)
!13511 = !DILocation(line: 82, column: 5, scope: !13499)
!13512 = !DILocation(line: 82, column: 11, scope: !13499)
!13513 = !DILocation(line: 82, column: 17, scope: !13499)
!13514 = !DILocation(line: 85, column: 32, scope: !13493)
!13515 = !DILocation(line: 85, column: 3, scope: !13493)
!13516 = !DILocation(line: 85, column: 9, scope: !13493)
!13517 = !DILocation(line: 85, column: 17, scope: !13493)
!13518 = !DILocation(line: 85, column: 23, scope: !13493)
!13519 = !DILocation(line: 85, column: 15, scope: !13493)
!13520 = !DILocation(line: 85, column: 30, scope: !13493)
!13521 = !DILocation(line: 86, column: 15, scope: !13493)
!13522 = !DILocation(line: 86, column: 21, scope: !13493)
!13523 = !DILocation(line: 86, column: 28, scope: !13493)
!13524 = !DILocation(line: 86, column: 34, scope: !13493)
!13525 = !DILocation(line: 86, column: 41, scope: !13493)
!13526 = !DILocation(line: 86, column: 47, scope: !13493)
!13527 = !DILocation(line: 86, column: 3, scope: !13493)
!13528 = !DILocation(line: 88, column: 3, scope: !13493)
!13529 = distinct !DISubprogram(name: "heapify_up", scope: !1549, file: !1549, line: 138, type: !1564, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13530 = !DILocalVariable(name: "array", arg: 1, scope: !13529, file: !1549, line: 138, type: !1102)
!13531 = !DILocation(line: 138, column: 20, scope: !13529)
!13532 = !DILocalVariable(name: "count", arg: 2, scope: !13529, file: !1549, line: 138, type: !52)
!13533 = !DILocation(line: 138, column: 34, scope: !13529)
!13534 = !DILocalVariable(name: "compare", arg: 3, scope: !13529, file: !1549, line: 139, type: !1555)
!13535 = !DILocation(line: 139, column: 19, scope: !13529)
!13536 = !DILocalVariable(name: "k", scope: !13529, file: !1549, line: 141, type: !52)
!13537 = !DILocation(line: 141, column: 10, scope: !13529)
!13538 = !DILocation(line: 141, column: 14, scope: !13529)
!13539 = !DILocalVariable(name: "new_element", scope: !13529, file: !1549, line: 142, type: !47)
!13540 = !DILocation(line: 142, column: 9, scope: !13529)
!13541 = !DILocation(line: 142, column: 23, scope: !13529)
!13542 = !DILocation(line: 142, column: 29, scope: !13529)
!13543 = !DILocation(line: 144, column: 3, scope: !13529)
!13544 = !DILocation(line: 144, column: 10, scope: !13529)
!13545 = !DILocation(line: 144, column: 12, scope: !13529)
!13546 = !DILocation(line: 144, column: 17, scope: !13529)
!13547 = !DILocation(line: 144, column: 20, scope: !13529)
!13548 = !DILocation(line: 144, column: 29, scope: !13529)
!13549 = !DILocation(line: 144, column: 35, scope: !13529)
!13550 = !DILocation(line: 144, column: 36, scope: !13529)
!13551 = !DILocation(line: 144, column: 41, scope: !13529)
!13552 = !DILocation(line: 144, column: 54, scope: !13529)
!13553 = !DILocation(line: 0, scope: !13529)
!13554 = !DILocation(line: 146, column: 18, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13529, file: !1549, line: 145, column: 5)
!13556 = !DILocation(line: 146, column: 24, scope: !13555)
!13557 = !DILocation(line: 146, column: 25, scope: !13555)
!13558 = !DILocation(line: 146, column: 7, scope: !13555)
!13559 = !DILocation(line: 146, column: 13, scope: !13555)
!13560 = !DILocation(line: 146, column: 16, scope: !13555)
!13561 = !DILocation(line: 147, column: 9, scope: !13555)
!13562 = distinct !{!13562, !13543, !13563}
!13563 = !DILocation(line: 148, column: 5, scope: !13529)
!13564 = !DILocation(line: 150, column: 14, scope: !13529)
!13565 = !DILocation(line: 150, column: 3, scope: !13529)
!13566 = !DILocation(line: 150, column: 9, scope: !13529)
!13567 = !DILocation(line: 150, column: 12, scope: !13529)
!13568 = !DILocation(line: 151, column: 1, scope: !13529)
!13569 = distinct !DISubprogram(name: "heap_remove_top", scope: !1549, file: !1549, line: 94, type: !1560, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13570 = !DILocalVariable(name: "heap", arg: 1, scope: !13569, file: !1549, line: 94, type: !1547)
!13571 = !DILocation(line: 94, column: 31, scope: !13569)
!13572 = !DILocalVariable(name: "top", scope: !13569, file: !1549, line: 96, type: !47)
!13573 = !DILocation(line: 96, column: 9, scope: !13569)
!13574 = !DILocation(line: 98, column: 7, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13569, file: !1549, line: 98, column: 7)
!13576 = !DILocation(line: 98, column: 13, scope: !13575)
!13577 = !DILocation(line: 98, column: 19, scope: !13575)
!13578 = !DILocation(line: 98, column: 7, scope: !13569)
!13579 = !DILocation(line: 99, column: 5, scope: !13575)
!13580 = !DILocation(line: 101, column: 9, scope: !13569)
!13581 = !DILocation(line: 101, column: 15, scope: !13569)
!13582 = !DILocation(line: 101, column: 7, scope: !13569)
!13583 = !DILocation(line: 102, column: 20, scope: !13569)
!13584 = !DILocation(line: 102, column: 26, scope: !13569)
!13585 = !DILocation(line: 102, column: 32, scope: !13569)
!13586 = !DILocation(line: 102, column: 38, scope: !13569)
!13587 = !DILocation(line: 102, column: 43, scope: !13569)
!13588 = !DILocation(line: 102, column: 3, scope: !13569)
!13589 = !DILocation(line: 102, column: 9, scope: !13569)
!13590 = !DILocation(line: 102, column: 18, scope: !13569)
!13591 = !DILocation(line: 103, column: 17, scope: !13569)
!13592 = !DILocation(line: 103, column: 23, scope: !13569)
!13593 = !DILocation(line: 103, column: 30, scope: !13569)
!13594 = !DILocation(line: 103, column: 36, scope: !13569)
!13595 = !DILocation(line: 103, column: 46, scope: !13569)
!13596 = !DILocation(line: 103, column: 52, scope: !13569)
!13597 = !DILocation(line: 103, column: 3, scope: !13569)
!13598 = !DILocation(line: 105, column: 10, scope: !13569)
!13599 = !DILocation(line: 105, column: 3, scope: !13569)
!13600 = !DILocation(line: 106, column: 1, scope: !13569)
!13601 = distinct !DISubprogram(name: "heapify_down", scope: !1549, file: !1549, line: 111, type: !1562, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1542, retainedNodes: !309)
!13602 = !DILocalVariable(name: "array", arg: 1, scope: !13601, file: !1549, line: 111, type: !1102)
!13603 = !DILocation(line: 111, column: 22, scope: !13601)
!13604 = !DILocalVariable(name: "count", arg: 2, scope: !13601, file: !1549, line: 111, type: !52)
!13605 = !DILocation(line: 111, column: 36, scope: !13601)
!13606 = !DILocalVariable(name: "initial", arg: 3, scope: !13601, file: !1549, line: 111, type: !52)
!13607 = !DILocation(line: 111, column: 50, scope: !13601)
!13608 = !DILocalVariable(name: "compare", arg: 4, scope: !13601, file: !1549, line: 112, type: !1555)
!13609 = !DILocation(line: 112, column: 21, scope: !13601)
!13610 = !DILocalVariable(name: "element", scope: !13601, file: !1549, line: 114, type: !47)
!13611 = !DILocation(line: 114, column: 9, scope: !13601)
!13612 = !DILocation(line: 114, column: 19, scope: !13601)
!13613 = !DILocation(line: 114, column: 25, scope: !13601)
!13614 = !DILocalVariable(name: "parent", scope: !13601, file: !1549, line: 116, type: !52)
!13615 = !DILocation(line: 116, column: 10, scope: !13601)
!13616 = !DILocation(line: 116, column: 19, scope: !13601)
!13617 = !DILocation(line: 117, column: 3, scope: !13601)
!13618 = !DILocation(line: 117, column: 10, scope: !13601)
!13619 = !DILocation(line: 117, column: 20, scope: !13601)
!13620 = !DILocation(line: 117, column: 26, scope: !13601)
!13621 = !DILocation(line: 117, column: 17, scope: !13601)
!13622 = !DILocalVariable(name: "child", scope: !13623, file: !1549, line: 119, type: !52)
!13623 = distinct !DILexicalBlock(scope: !13601, file: !1549, line: 118, column: 5)
!13624 = !DILocation(line: 119, column: 14, scope: !13623)
!13625 = !DILocation(line: 119, column: 26, scope: !13623)
!13626 = !DILocation(line: 119, column: 24, scope: !13623)
!13627 = !DILocation(line: 121, column: 11, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13623, file: !1549, line: 121, column: 11)
!13629 = !DILocation(line: 121, column: 19, scope: !13628)
!13630 = !DILocation(line: 121, column: 17, scope: !13628)
!13631 = !DILocation(line: 121, column: 25, scope: !13628)
!13632 = !DILocation(line: 121, column: 28, scope: !13628)
!13633 = !DILocation(line: 121, column: 37, scope: !13628)
!13634 = !DILocation(line: 121, column: 43, scope: !13628)
!13635 = !DILocation(line: 121, column: 51, scope: !13628)
!13636 = !DILocation(line: 121, column: 57, scope: !13628)
!13637 = !DILocation(line: 121, column: 62, scope: !13628)
!13638 = !DILocation(line: 121, column: 67, scope: !13628)
!13639 = !DILocation(line: 121, column: 11, scope: !13623)
!13640 = !DILocation(line: 122, column: 14, scope: !13628)
!13641 = !DILocation(line: 122, column: 9, scope: !13628)
!13642 = !DILocation(line: 124, column: 11, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13623, file: !1549, line: 124, column: 11)
!13644 = !DILocation(line: 124, column: 20, scope: !13643)
!13645 = !DILocation(line: 124, column: 26, scope: !13643)
!13646 = !DILocation(line: 124, column: 34, scope: !13643)
!13647 = !DILocation(line: 124, column: 43, scope: !13643)
!13648 = !DILocation(line: 124, column: 11, scope: !13623)
!13649 = !DILocation(line: 125, column: 9, scope: !13643)
!13650 = !DILocation(line: 127, column: 23, scope: !13623)
!13651 = !DILocation(line: 127, column: 29, scope: !13623)
!13652 = !DILocation(line: 127, column: 7, scope: !13623)
!13653 = !DILocation(line: 127, column: 13, scope: !13623)
!13654 = !DILocation(line: 127, column: 21, scope: !13623)
!13655 = !DILocation(line: 128, column: 16, scope: !13623)
!13656 = !DILocation(line: 128, column: 14, scope: !13623)
!13657 = distinct !{!13657, !13617, !13658}
!13658 = !DILocation(line: 129, column: 5, scope: !13601)
!13659 = !DILocation(line: 131, column: 19, scope: !13601)
!13660 = !DILocation(line: 131, column: 3, scope: !13601)
!13661 = !DILocation(line: 131, column: 9, scope: !13601)
!13662 = !DILocation(line: 131, column: 17, scope: !13601)
!13663 = !DILocation(line: 132, column: 10, scope: !13601)
!13664 = !DILocation(line: 132, column: 3, scope: !13601)
!13665 = distinct !DISubprogram(name: "inttostr", scope: !13666, file: !13666, line: 36, type: !1569, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1566, retainedNodes: !309)
!13666 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/mohamad/clone/coreutils")
!13667 = !DILocalVariable(name: "i", arg: 1, scope: !13665, file: !13666, line: 36, type: !5)
!13668 = !DILocation(line: 36, column: 19, scope: !13665)
!13669 = !DILocalVariable(name: "buf", arg: 2, scope: !13665, file: !13666, line: 36, type: !7)
!13670 = !DILocation(line: 36, column: 28, scope: !13665)
!13671 = !DILocalVariable(name: "p", scope: !13665, file: !13666, line: 38, type: !7)
!13672 = !DILocation(line: 38, column: 9, scope: !13665)
!13673 = !DILocation(line: 38, column: 13, scope: !13665)
!13674 = !DILocation(line: 38, column: 17, scope: !13665)
!13675 = !DILocation(line: 39, column: 4, scope: !13665)
!13676 = !DILocation(line: 39, column: 6, scope: !13665)
!13677 = !DILocation(line: 41, column: 7, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13665, file: !13666, line: 41, column: 7)
!13679 = !DILocation(line: 41, column: 9, scope: !13678)
!13680 = !DILocation(line: 41, column: 7, scope: !13665)
!13681 = !DILocation(line: 43, column: 7, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13678, file: !13666, line: 42, column: 5)
!13683 = !DILocation(line: 44, column: 22, scope: !13682)
!13684 = !DILocation(line: 44, column: 24, scope: !13682)
!13685 = !DILocation(line: 44, column: 20, scope: !13682)
!13686 = !DILocation(line: 44, column: 16, scope: !13682)
!13687 = !DILocation(line: 44, column: 10, scope: !13682)
!13688 = !DILocation(line: 44, column: 14, scope: !13682)
!13689 = !DILocation(line: 44, column: 9, scope: !13682)
!13690 = !DILocation(line: 45, column: 17, scope: !13682)
!13691 = !DILocation(line: 45, column: 24, scope: !13682)
!13692 = distinct !{!13692, !13681, !13693}
!13693 = !DILocation(line: 45, column: 28, scope: !13682)
!13694 = !DILocation(line: 47, column: 8, scope: !13682)
!13695 = !DILocation(line: 47, column: 12, scope: !13682)
!13696 = !DILocation(line: 48, column: 5, scope: !13682)
!13697 = !DILocation(line: 51, column: 7, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13678, file: !13666, line: 50, column: 5)
!13699 = !DILocation(line: 52, column: 22, scope: !13698)
!13700 = !DILocation(line: 52, column: 24, scope: !13698)
!13701 = !DILocation(line: 52, column: 20, scope: !13698)
!13702 = !DILocation(line: 52, column: 16, scope: !13698)
!13703 = !DILocation(line: 52, column: 10, scope: !13698)
!13704 = !DILocation(line: 52, column: 14, scope: !13698)
!13705 = !DILocation(line: 52, column: 9, scope: !13698)
!13706 = !DILocation(line: 53, column: 17, scope: !13698)
!13707 = !DILocation(line: 53, column: 24, scope: !13698)
!13708 = distinct !{!13708, !13697, !13709}
!13709 = !DILocation(line: 53, column: 28, scope: !13698)
!13710 = !DILocation(line: 56, column: 10, scope: !13665)
!13711 = !DILocation(line: 56, column: 3, scope: !13665)
!13712 = distinct !DISubprogram(name: "uinttostr", scope: !13666, file: !13666, line: 36, type: !1574, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1571, retainedNodes: !309)
!13713 = !DILocalVariable(name: "i", arg: 1, scope: !13712, file: !13666, line: 36, type: !66)
!13714 = !DILocation(line: 36, column: 19, scope: !13712)
!13715 = !DILocalVariable(name: "buf", arg: 2, scope: !13712, file: !13666, line: 36, type: !7)
!13716 = !DILocation(line: 36, column: 28, scope: !13712)
!13717 = !DILocalVariable(name: "p", scope: !13712, file: !13666, line: 38, type: !7)
!13718 = !DILocation(line: 38, column: 9, scope: !13712)
!13719 = !DILocation(line: 38, column: 13, scope: !13712)
!13720 = !DILocation(line: 38, column: 17, scope: !13712)
!13721 = !DILocation(line: 39, column: 4, scope: !13712)
!13722 = !DILocation(line: 39, column: 6, scope: !13712)
!13723 = !DILocation(line: 41, column: 7, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13712, file: !13666, line: 41, column: 7)
!13725 = !DILocation(line: 41, column: 9, scope: !13724)
!13726 = !DILocation(line: 41, column: 7, scope: !13712)
!13727 = !DILocation(line: 43, column: 7, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13724, file: !13666, line: 42, column: 5)
!13729 = !DILocation(line: 44, column: 22, scope: !13728)
!13730 = !DILocation(line: 44, column: 24, scope: !13728)
!13731 = !DILocation(line: 44, column: 20, scope: !13728)
!13732 = !DILocation(line: 44, column: 16, scope: !13728)
!13733 = !DILocation(line: 44, column: 10, scope: !13728)
!13734 = !DILocation(line: 44, column: 14, scope: !13728)
!13735 = !DILocation(line: 44, column: 9, scope: !13728)
!13736 = !DILocation(line: 45, column: 17, scope: !13728)
!13737 = !DILocation(line: 45, column: 24, scope: !13728)
!13738 = distinct !{!13738, !13727, !13739}
!13739 = !DILocation(line: 45, column: 28, scope: !13728)
!13740 = !DILocation(line: 47, column: 8, scope: !13728)
!13741 = !DILocation(line: 47, column: 12, scope: !13728)
!13742 = !DILocation(line: 48, column: 5, scope: !13728)
!13743 = !DILocation(line: 51, column: 7, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13724, file: !13666, line: 50, column: 5)
!13745 = !DILocation(line: 52, column: 22, scope: !13744)
!13746 = !DILocation(line: 52, column: 24, scope: !13744)
!13747 = !DILocation(line: 52, column: 20, scope: !13744)
!13748 = !DILocation(line: 52, column: 16, scope: !13744)
!13749 = !DILocation(line: 52, column: 10, scope: !13744)
!13750 = !DILocation(line: 52, column: 14, scope: !13744)
!13751 = !DILocation(line: 52, column: 9, scope: !13744)
!13752 = !DILocation(line: 53, column: 17, scope: !13744)
!13753 = !DILocation(line: 53, column: 24, scope: !13744)
!13754 = distinct !{!13754, !13743, !13755}
!13755 = !DILocation(line: 53, column: 28, scope: !13744)
!13756 = !DILocation(line: 56, column: 10, scope: !13712)
!13757 = !DILocation(line: 56, column: 3, scope: !13712)
!13758 = distinct !DISubprogram(name: "umaxtostr", scope: !13666, file: !13666, line: 36, type: !1579, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1576, retainedNodes: !309)
!13759 = !DILocalVariable(name: "i", arg: 1, scope: !13758, file: !13666, line: 36, type: !355)
!13760 = !DILocation(line: 36, column: 19, scope: !13758)
!13761 = !DILocalVariable(name: "buf", arg: 2, scope: !13758, file: !13666, line: 36, type: !7)
!13762 = !DILocation(line: 36, column: 28, scope: !13758)
!13763 = !DILocalVariable(name: "p", scope: !13758, file: !13666, line: 38, type: !7)
!13764 = !DILocation(line: 38, column: 9, scope: !13758)
!13765 = !DILocation(line: 38, column: 13, scope: !13758)
!13766 = !DILocation(line: 38, column: 17, scope: !13758)
!13767 = !DILocation(line: 39, column: 4, scope: !13758)
!13768 = !DILocation(line: 39, column: 6, scope: !13758)
!13769 = !DILocation(line: 41, column: 7, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13758, file: !13666, line: 41, column: 7)
!13771 = !DILocation(line: 41, column: 9, scope: !13770)
!13772 = !DILocation(line: 41, column: 7, scope: !13758)
!13773 = !DILocation(line: 43, column: 7, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13770, file: !13666, line: 42, column: 5)
!13775 = !DILocation(line: 44, column: 22, scope: !13774)
!13776 = !DILocation(line: 44, column: 24, scope: !13774)
!13777 = !DILocation(line: 44, column: 20, scope: !13774)
!13778 = !DILocation(line: 44, column: 16, scope: !13774)
!13779 = !DILocation(line: 44, column: 10, scope: !13774)
!13780 = !DILocation(line: 44, column: 14, scope: !13774)
!13781 = !DILocation(line: 44, column: 9, scope: !13774)
!13782 = !DILocation(line: 45, column: 17, scope: !13774)
!13783 = !DILocation(line: 45, column: 24, scope: !13774)
!13784 = distinct !{!13784, !13773, !13785}
!13785 = !DILocation(line: 45, column: 28, scope: !13774)
!13786 = !DILocation(line: 47, column: 8, scope: !13774)
!13787 = !DILocation(line: 47, column: 12, scope: !13774)
!13788 = !DILocation(line: 48, column: 5, scope: !13774)
!13789 = !DILocation(line: 51, column: 7, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13770, file: !13666, line: 50, column: 5)
!13791 = !DILocation(line: 52, column: 22, scope: !13790)
!13792 = !DILocation(line: 52, column: 24, scope: !13790)
!13793 = !DILocation(line: 52, column: 20, scope: !13790)
!13794 = !DILocation(line: 52, column: 16, scope: !13790)
!13795 = !DILocation(line: 52, column: 10, scope: !13790)
!13796 = !DILocation(line: 52, column: 14, scope: !13790)
!13797 = !DILocation(line: 52, column: 9, scope: !13790)
!13798 = !DILocation(line: 53, column: 17, scope: !13790)
!13799 = !DILocation(line: 53, column: 24, scope: !13790)
!13800 = distinct !{!13800, !13789, !13801}
!13801 = !DILocation(line: 53, column: 28, scope: !13790)
!13802 = !DILocation(line: 56, column: 10, scope: !13758)
!13803 = !DILocation(line: 56, column: 3, scope: !13758)
!13804 = distinct !DISubprogram(name: "gnu_mbswidth", scope: !13805, file: !13805, line: 47, type: !1584, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1581, retainedNodes: !309)
!13805 = !DIFile(filename: "lib/mbswidth.c", directory: "/home/mohamad/clone/coreutils")
!13806 = !DILocalVariable(name: "string", arg: 1, scope: !13804, file: !13805, line: 47, type: !87)
!13807 = !DILocation(line: 47, column: 23, scope: !13804)
!13808 = !DILocalVariable(name: "flags", arg: 2, scope: !13804, file: !13805, line: 47, type: !5)
!13809 = !DILocation(line: 47, column: 35, scope: !13804)
!13810 = !DILocation(line: 49, column: 21, scope: !13804)
!13811 = !DILocation(line: 49, column: 37, scope: !13804)
!13812 = !DILocation(line: 49, column: 29, scope: !13804)
!13813 = !DILocation(line: 49, column: 46, scope: !13804)
!13814 = !DILocation(line: 49, column: 10, scope: !13804)
!13815 = !DILocation(line: 49, column: 3, scope: !13804)
!13816 = distinct !DISubprogram(name: "mbsnwidth", scope: !13805, file: !13805, line: 57, type: !1586, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1581, retainedNodes: !309)
!13817 = !DILocalVariable(name: "string", arg: 1, scope: !13816, file: !13805, line: 57, type: !87)
!13818 = !DILocation(line: 57, column: 24, scope: !13816)
!13819 = !DILocalVariable(name: "nbytes", arg: 2, scope: !13816, file: !13805, line: 57, type: !52)
!13820 = !DILocation(line: 57, column: 39, scope: !13816)
!13821 = !DILocalVariable(name: "flags", arg: 3, scope: !13816, file: !13805, line: 57, type: !5)
!13822 = !DILocation(line: 57, column: 51, scope: !13816)
!13823 = !DILocalVariable(name: "p", scope: !13816, file: !13805, line: 59, type: !87)
!13824 = !DILocation(line: 59, column: 15, scope: !13816)
!13825 = !DILocation(line: 59, column: 19, scope: !13816)
!13826 = !DILocalVariable(name: "plimit", scope: !13816, file: !13805, line: 60, type: !87)
!13827 = !DILocation(line: 60, column: 15, scope: !13816)
!13828 = !DILocation(line: 60, column: 24, scope: !13816)
!13829 = !DILocation(line: 60, column: 28, scope: !13816)
!13830 = !DILocation(line: 60, column: 26, scope: !13816)
!13831 = !DILocalVariable(name: "width", scope: !13816, file: !13805, line: 61, type: !5)
!13832 = !DILocation(line: 61, column: 7, scope: !13816)
!13833 = !DILocation(line: 63, column: 9, scope: !13816)
!13834 = !DILocation(line: 64, column: 7, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13816, file: !13805, line: 64, column: 7)
!13836 = !DILocation(line: 64, column: 18, scope: !13835)
!13837 = !DILocation(line: 64, column: 7, scope: !13816)
!13838 = !DILocation(line: 66, column: 7, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13835, file: !13805, line: 65, column: 5)
!13840 = !DILocation(line: 66, column: 14, scope: !13839)
!13841 = !DILocation(line: 66, column: 18, scope: !13839)
!13842 = !DILocation(line: 66, column: 16, scope: !13839)
!13843 = !DILocation(line: 67, column: 18, scope: !13839)
!13844 = !DILocation(line: 67, column: 17, scope: !13839)
!13845 = !DILocation(line: 67, column: 9, scope: !13839)
!13846 = !DILocation(line: 90, column: 16, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13839, file: !13805, line: 68, column: 11)
!13848 = !DILocation(line: 91, column: 20, scope: !13847)
!13849 = !DILocation(line: 92, column: 15, scope: !13847)
!13850 = !DILocalVariable(name: "mbstate", scope: !13851, file: !13805, line: 96, type: !1588)
!13851 = distinct !DILexicalBlock(scope: !13847, file: !13805, line: 95, column: 15)
!13852 = !DILocation(line: 96, column: 27, scope: !13851)
!13853 = !DILocation(line: 97, column: 17, scope: !13851)
!13854 = !DILocation(line: 98, column: 17, scope: !13851)
!13855 = !DILocalVariable(name: "wc", scope: !13856, file: !13805, line: 100, type: !1314)
!13856 = distinct !DILexicalBlock(scope: !13851, file: !13805, line: 99, column: 19)
!13857 = !DILocation(line: 100, column: 29, scope: !13856)
!13858 = !DILocalVariable(name: "bytes", scope: !13856, file: !13805, line: 101, type: !52)
!13859 = !DILocation(line: 101, column: 28, scope: !13856)
!13860 = !DILocalVariable(name: "w", scope: !13856, file: !13805, line: 102, type: !5)
!13861 = !DILocation(line: 102, column: 25, scope: !13856)
!13862 = !DILocation(line: 104, column: 43, scope: !13856)
!13863 = !DILocation(line: 104, column: 46, scope: !13856)
!13864 = !DILocation(line: 104, column: 55, scope: !13856)
!13865 = !DILocation(line: 104, column: 53, scope: !13856)
!13866 = !DILocation(line: 104, column: 29, scope: !13856)
!13867 = !DILocation(line: 104, column: 27, scope: !13856)
!13868 = !DILocation(line: 106, column: 25, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13856, file: !13805, line: 106, column: 25)
!13870 = !DILocation(line: 106, column: 31, scope: !13869)
!13871 = !DILocation(line: 106, column: 25, scope: !13856)
!13872 = !DILocation(line: 109, column: 31, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13874, file: !13805, line: 109, column: 29)
!13874 = distinct !DILexicalBlock(scope: !13869, file: !13805, line: 108, column: 23)
!13875 = !DILocation(line: 109, column: 37, scope: !13873)
!13876 = !DILocation(line: 109, column: 29, scope: !13874)
!13877 = !DILocation(line: 111, column: 30, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13873, file: !13805, line: 110, column: 27)
!13879 = !DILocation(line: 112, column: 34, scope: !13878)
!13880 = !DILocation(line: 113, column: 29, scope: !13878)
!13881 = !DILocation(line: 116, column: 27, scope: !13873)
!13882 = !DILocation(line: 119, column: 25, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13856, file: !13805, line: 119, column: 25)
!13884 = !DILocation(line: 119, column: 31, scope: !13883)
!13885 = !DILocation(line: 119, column: 25, scope: !13856)
!13886 = !DILocation(line: 122, column: 31, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !13805, line: 122, column: 29)
!13888 = distinct !DILexicalBlock(scope: !13883, file: !13805, line: 121, column: 23)
!13889 = !DILocation(line: 122, column: 37, scope: !13887)
!13890 = !DILocation(line: 122, column: 29, scope: !13888)
!13891 = !DILocation(line: 124, column: 33, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13887, file: !13805, line: 123, column: 27)
!13893 = !DILocation(line: 124, column: 31, scope: !13892)
!13894 = !DILocation(line: 125, column: 34, scope: !13892)
!13895 = !DILocation(line: 126, column: 29, scope: !13892)
!13896 = !DILocation(line: 129, column: 27, scope: !13887)
!13897 = !DILocation(line: 132, column: 25, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13856, file: !13805, line: 132, column: 25)
!13899 = !DILocation(line: 132, column: 31, scope: !13898)
!13900 = !DILocation(line: 132, column: 25, scope: !13856)
!13901 = !DILocation(line: 134, column: 29, scope: !13898)
!13902 = !DILocation(line: 134, column: 23, scope: !13898)
!13903 = !DILocation(line: 136, column: 34, scope: !13856)
!13904 = !DILocation(line: 136, column: 25, scope: !13856)
!13905 = !DILocation(line: 136, column: 23, scope: !13856)
!13906 = !DILocation(line: 137, column: 25, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13856, file: !13805, line: 137, column: 25)
!13908 = !DILocation(line: 137, column: 27, scope: !13907)
!13909 = !DILocation(line: 137, column: 25, scope: !13856)
!13910 = !DILocation(line: 140, column: 29, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !13805, line: 140, column: 29)
!13912 = distinct !DILexicalBlock(scope: !13907, file: !13805, line: 139, column: 23)
!13913 = !DILocation(line: 140, column: 43, scope: !13911)
!13914 = !DILocation(line: 140, column: 41, scope: !13911)
!13915 = !DILocation(line: 140, column: 31, scope: !13911)
!13916 = !DILocation(line: 140, column: 29, scope: !13912)
!13917 = !DILocation(line: 141, column: 27, scope: !13911)
!13918 = !DILocation(line: 142, column: 34, scope: !13912)
!13919 = !DILocation(line: 142, column: 31, scope: !13912)
!13920 = !DILocation(line: 143, column: 23, scope: !13912)
!13921 = !DILocation(line: 146, column: 29, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13907, file: !13805, line: 146, column: 27)
!13923 = !DILocation(line: 146, column: 35, scope: !13922)
!13924 = !DILocation(line: 146, column: 27, scope: !13907)
!13925 = !DILocation(line: 148, column: 42, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !13805, line: 148, column: 31)
!13927 = distinct !DILexicalBlock(scope: !13922, file: !13805, line: 147, column: 25)
!13928 = !DILocation(line: 148, column: 32, scope: !13926)
!13929 = !DILocation(line: 148, column: 31, scope: !13927)
!13930 = !DILocation(line: 150, column: 35, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13932, file: !13805, line: 150, column: 35)
!13932 = distinct !DILexicalBlock(scope: !13926, file: !13805, line: 149, column: 29)
!13933 = !DILocation(line: 150, column: 41, scope: !13931)
!13934 = !DILocation(line: 150, column: 35, scope: !13932)
!13935 = !DILocation(line: 151, column: 33, scope: !13931)
!13936 = !DILocation(line: 152, column: 36, scope: !13932)
!13937 = !DILocation(line: 153, column: 29, scope: !13932)
!13938 = !DILocation(line: 154, column: 25, scope: !13927)
!13939 = !DILocation(line: 156, column: 25, scope: !13922)
!13940 = !DILocation(line: 158, column: 26, scope: !13856)
!13941 = !DILocation(line: 158, column: 23, scope: !13856)
!13942 = !DILocation(line: 159, column: 19, scope: !13856)
!13943 = !DILocation(line: 160, column: 26, scope: !13851)
!13944 = !DILocation(line: 160, column: 24, scope: !13851)
!13945 = distinct !{!13945, !13854, !13946}
!13946 = !DILocation(line: 160, column: 44, scope: !13851)
!13947 = !DILocation(line: 162, column: 15, scope: !13847)
!13948 = distinct !{!13948, !13838, !13949}
!13949 = !DILocation(line: 163, column: 11, scope: !13839)
!13950 = !DILocation(line: 164, column: 14, scope: !13839)
!13951 = !DILocation(line: 164, column: 7, scope: !13839)
!13952 = !DILocation(line: 167, column: 3, scope: !13816)
!13953 = !DILocation(line: 167, column: 10, scope: !13816)
!13954 = !DILocation(line: 167, column: 14, scope: !13816)
!13955 = !DILocation(line: 167, column: 12, scope: !13816)
!13956 = !DILocalVariable(name: "c", scope: !13957, file: !13805, line: 169, type: !317)
!13957 = distinct !DILexicalBlock(scope: !13816, file: !13805, line: 168, column: 5)
!13958 = !DILocation(line: 169, column: 21, scope: !13957)
!13959 = !DILocation(line: 169, column: 43, scope: !13957)
!13960 = !DILocation(line: 169, column: 41, scope: !13957)
!13961 = !DILocation(line: 171, column: 11, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13957, file: !13805, line: 171, column: 11)
!13963 = !DILocation(line: 171, column: 11, scope: !13957)
!13964 = !DILocation(line: 173, column: 15, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !13805, line: 173, column: 15)
!13966 = distinct !DILexicalBlock(scope: !13962, file: !13805, line: 172, column: 9)
!13967 = !DILocation(line: 173, column: 21, scope: !13965)
!13968 = !DILocation(line: 173, column: 15, scope: !13966)
!13969 = !DILocation(line: 174, column: 13, scope: !13965)
!13970 = !DILocation(line: 175, column: 16, scope: !13966)
!13971 = !DILocation(line: 176, column: 9, scope: !13966)
!13972 = !DILocation(line: 177, column: 18, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13962, file: !13805, line: 177, column: 16)
!13974 = !DILocation(line: 177, column: 24, scope: !13973)
!13975 = !DILocation(line: 177, column: 16, scope: !13962)
!13976 = !DILocation(line: 179, column: 16, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13978, file: !13805, line: 179, column: 15)
!13978 = distinct !DILexicalBlock(scope: !13973, file: !13805, line: 178, column: 9)
!13979 = !DILocation(line: 179, column: 15, scope: !13978)
!13980 = !DILocation(line: 181, column: 19, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13982, file: !13805, line: 181, column: 19)
!13982 = distinct !DILexicalBlock(scope: !13977, file: !13805, line: 180, column: 13)
!13983 = !DILocation(line: 181, column: 25, scope: !13981)
!13984 = !DILocation(line: 181, column: 19, scope: !13982)
!13985 = !DILocation(line: 182, column: 17, scope: !13981)
!13986 = !DILocation(line: 183, column: 20, scope: !13982)
!13987 = !DILocation(line: 184, column: 13, scope: !13982)
!13988 = !DILocation(line: 185, column: 9, scope: !13978)
!13989 = !DILocation(line: 187, column: 9, scope: !13973)
!13990 = distinct !{!13990, !13952, !13991}
!13991 = !DILocation(line: 188, column: 5, scope: !13816)
!13992 = !DILocation(line: 189, column: 10, scope: !13816)
!13993 = !DILocation(line: 189, column: 3, scope: !13816)
!13994 = !DILabel(scope: !13816, name: "overflow", file: !13805, line: 191)
!13995 = !DILocation(line: 191, column: 2, scope: !13816)
!13996 = !DILocation(line: 192, column: 3, scope: !13816)
!13997 = !DILocation(line: 193, column: 1, scope: !13816)
!13998 = distinct !DISubprogram(name: "num_processors", scope: !13999, file: !13999, line: 372, type: !1608, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1598, retainedNodes: !309)
!13999 = !DIFile(filename: "lib/nproc.c", directory: "/home/mohamad/clone/coreutils")
!14000 = !DILocalVariable(name: "query", arg: 1, scope: !13998, file: !13999, line: 372, type: !1601)
!14001 = !DILocation(line: 372, column: 34, scope: !13998)
!14002 = !DILocalVariable(name: "omp_env_limit", scope: !13998, file: !13999, line: 374, type: !54)
!14003 = !DILocation(line: 374, column: 21, scope: !13998)
!14004 = !DILocation(line: 376, column: 7, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !13998, file: !13999, line: 376, column: 7)
!14006 = !DILocation(line: 376, column: 13, scope: !14005)
!14007 = !DILocation(line: 376, column: 7, scope: !13998)
!14008 = !DILocalVariable(name: "omp_env_threads", scope: !14009, file: !13999, line: 378, type: !54)
!14009 = distinct !DILexicalBlock(scope: !14005, file: !13999, line: 377, column: 5)
!14010 = !DILocation(line: 378, column: 25, scope: !14009)
!14011 = !DILocation(line: 381, column: 44, scope: !14009)
!14012 = !DILocation(line: 381, column: 25, scope: !14009)
!14013 = !DILocation(line: 381, column: 23, scope: !14009)
!14014 = !DILocation(line: 382, column: 42, scope: !14009)
!14015 = !DILocation(line: 382, column: 23, scope: !14009)
!14016 = !DILocation(line: 382, column: 21, scope: !14009)
!14017 = !DILocation(line: 383, column: 13, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14009, file: !13999, line: 383, column: 11)
!14019 = !DILocation(line: 383, column: 11, scope: !14009)
!14020 = !DILocation(line: 384, column: 23, scope: !14018)
!14021 = !DILocation(line: 384, column: 9, scope: !14018)
!14022 = !DILocation(line: 386, column: 11, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14009, file: !13999, line: 386, column: 11)
!14024 = !DILocation(line: 386, column: 11, scope: !14009)
!14025 = !DILocation(line: 387, column: 16, scope: !14023)
!14026 = !DILocation(line: 387, column: 9, scope: !14023)
!14027 = !DILocation(line: 389, column: 13, scope: !14009)
!14028 = !DILocation(line: 390, column: 5, scope: !14009)
!14029 = !DILocalVariable(name: "nprocs", scope: !14030, file: !13999, line: 393, type: !54)
!14030 = distinct !DILexicalBlock(scope: !13998, file: !13999, line: 392, column: 3)
!14031 = !DILocation(line: 393, column: 19, scope: !14030)
!14032 = !DILocation(line: 393, column: 57, scope: !14030)
!14033 = !DILocation(line: 393, column: 28, scope: !14030)
!14034 = !DILocation(line: 394, column: 12, scope: !14030)
!14035 = !DILocation(line: 394, column: 5, scope: !14030)
!14036 = !DILocation(line: 396, column: 1, scope: !13998)
!14037 = distinct !DISubprogram(name: "parse_omp_threads", scope: !13999, file: !13999, line: 337, type: !1610, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1598, retainedNodes: !309)
!14038 = !DILocalVariable(name: "threads", arg: 1, scope: !14037, file: !13999, line: 337, type: !87)
!14039 = !DILocation(line: 337, column: 32, scope: !14037)
!14040 = !DILocalVariable(name: "ret", scope: !14037, file: !13999, line: 339, type: !54)
!14041 = !DILocation(line: 339, column: 21, scope: !14037)
!14042 = !DILocation(line: 341, column: 7, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14037, file: !13999, line: 341, column: 7)
!14044 = !DILocation(line: 341, column: 15, scope: !14043)
!14045 = !DILocation(line: 341, column: 7, scope: !14037)
!14046 = !DILocation(line: 342, column: 12, scope: !14043)
!14047 = !DILocation(line: 342, column: 5, scope: !14043)
!14048 = !DILocation(line: 346, column: 3, scope: !14037)
!14049 = !DILocation(line: 346, column: 11, scope: !14037)
!14050 = !DILocation(line: 346, column: 10, scope: !14037)
!14051 = !DILocation(line: 346, column: 19, scope: !14037)
!14052 = !DILocation(line: 346, column: 27, scope: !14037)
!14053 = !DILocation(line: 346, column: 42, scope: !14037)
!14054 = !DILocation(line: 346, column: 41, scope: !14037)
!14055 = !DILocation(line: 346, column: 30, scope: !14037)
!14056 = !DILocation(line: 0, scope: !14037)
!14057 = !DILocation(line: 347, column: 12, scope: !14037)
!14058 = distinct !{!14058, !14048, !14057}
!14059 = !DILocation(line: 350, column: 19, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14037, file: !13999, line: 350, column: 7)
!14061 = !DILocation(line: 350, column: 18, scope: !14060)
!14062 = !DILocation(line: 350, column: 7, scope: !14060)
!14063 = !DILocation(line: 350, column: 7, scope: !14037)
!14064 = !DILocalVariable(name: "endptr", scope: !14065, file: !13999, line: 352, type: !7)
!14065 = distinct !DILexicalBlock(scope: !14060, file: !13999, line: 351, column: 5)
!14066 = !DILocation(line: 352, column: 13, scope: !14065)
!14067 = !DILocalVariable(name: "value", scope: !14065, file: !13999, line: 353, type: !54)
!14068 = !DILocation(line: 353, column: 25, scope: !14065)
!14069 = !DILocation(line: 353, column: 42, scope: !14065)
!14070 = !DILocation(line: 353, column: 33, scope: !14065)
!14071 = !DILocation(line: 355, column: 11, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14065, file: !13999, line: 355, column: 11)
!14073 = !DILocation(line: 355, column: 18, scope: !14072)
!14074 = !DILocation(line: 355, column: 11, scope: !14065)
!14075 = !DILocation(line: 357, column: 11, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14072, file: !13999, line: 356, column: 9)
!14077 = !DILocation(line: 357, column: 19, scope: !14076)
!14078 = !DILocation(line: 357, column: 18, scope: !14076)
!14079 = !DILocation(line: 357, column: 26, scope: !14076)
!14080 = !DILocation(line: 357, column: 34, scope: !14076)
!14081 = !DILocation(line: 357, column: 49, scope: !14076)
!14082 = !DILocation(line: 357, column: 48, scope: !14076)
!14083 = !DILocation(line: 357, column: 37, scope: !14076)
!14084 = !DILocation(line: 0, scope: !14076)
!14085 = !DILocation(line: 358, column: 19, scope: !14076)
!14086 = distinct !{!14086, !14075, !14085}
!14087 = !DILocation(line: 359, column: 16, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14076, file: !13999, line: 359, column: 15)
!14089 = !DILocation(line: 359, column: 15, scope: !14088)
!14090 = !DILocation(line: 359, column: 23, scope: !14088)
!14091 = !DILocation(line: 359, column: 15, scope: !14076)
!14092 = !DILocation(line: 360, column: 20, scope: !14088)
!14093 = !DILocation(line: 360, column: 13, scope: !14088)
!14094 = !DILocation(line: 363, column: 21, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14088, file: !13999, line: 363, column: 20)
!14096 = !DILocation(line: 363, column: 20, scope: !14095)
!14097 = !DILocation(line: 363, column: 28, scope: !14095)
!14098 = !DILocation(line: 363, column: 20, scope: !14088)
!14099 = !DILocation(line: 364, column: 20, scope: !14095)
!14100 = !DILocation(line: 364, column: 13, scope: !14095)
!14101 = !DILocation(line: 365, column: 9, scope: !14076)
!14102 = !DILocation(line: 366, column: 5, scope: !14065)
!14103 = !DILocation(line: 368, column: 10, scope: !14037)
!14104 = !DILocation(line: 368, column: 3, scope: !14037)
!14105 = !DILocation(line: 369, column: 1, scope: !14037)
!14106 = distinct !DISubprogram(name: "num_processors_ignoring_omp", scope: !13999, file: !13999, line: 206, type: !1608, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1598, retainedNodes: !309)
!14107 = !DILocalVariable(name: "query", arg: 1, scope: !14106, file: !13999, line: 206, type: !1601)
!14108 = !DILocation(line: 206, column: 47, scope: !14106)
!14109 = !DILocation(line: 223, column: 7, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14106, file: !13999, line: 223, column: 7)
!14111 = !DILocation(line: 223, column: 13, scope: !14110)
!14112 = !DILocation(line: 223, column: 7, scope: !14106)
!14113 = !DILocalVariable(name: "nprocs", scope: !14114, file: !13999, line: 227, type: !54)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !13999, line: 226, column: 7)
!14115 = distinct !DILexicalBlock(scope: !14110, file: !13999, line: 224, column: 5)
!14116 = !DILocation(line: 227, column: 23, scope: !14114)
!14117 = !DILocation(line: 227, column: 32, scope: !14114)
!14118 = !DILocation(line: 229, column: 13, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14114, file: !13999, line: 229, column: 13)
!14120 = !DILocation(line: 229, column: 20, scope: !14119)
!14121 = !DILocation(line: 229, column: 13, scope: !14114)
!14122 = !DILocation(line: 230, column: 18, scope: !14119)
!14123 = !DILocation(line: 230, column: 11, scope: !14119)
!14124 = !DILocalVariable(name: "nprocs", scope: !14125, file: !13999, line: 236, type: !32)
!14125 = distinct !DILexicalBlock(scope: !14115, file: !13999, line: 234, column: 7)
!14126 = !DILocation(line: 236, column: 18, scope: !14125)
!14127 = !DILocation(line: 236, column: 27, scope: !14125)
!14128 = !DILocation(line: 237, column: 13, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14125, file: !13999, line: 237, column: 13)
!14130 = !DILocation(line: 237, column: 20, scope: !14129)
!14131 = !DILocation(line: 237, column: 13, scope: !14125)
!14132 = !DILocation(line: 238, column: 18, scope: !14129)
!14133 = !DILocation(line: 238, column: 11, scope: !14129)
!14134 = !DILocation(line: 241, column: 5, scope: !14115)
!14135 = !DILocalVariable(name: "nprocs", scope: !14136, file: !13999, line: 247, type: !32)
!14136 = distinct !DILexicalBlock(scope: !14137, file: !13999, line: 245, column: 7)
!14137 = distinct !DILexicalBlock(scope: !14110, file: !13999, line: 243, column: 5)
!14138 = !DILocation(line: 247, column: 18, scope: !14136)
!14139 = !DILocation(line: 247, column: 27, scope: !14136)
!14140 = !DILocation(line: 255, column: 13, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14136, file: !13999, line: 255, column: 13)
!14142 = !DILocation(line: 255, column: 20, scope: !14141)
!14143 = !DILocation(line: 255, column: 25, scope: !14141)
!14144 = !DILocation(line: 255, column: 28, scope: !14141)
!14145 = !DILocation(line: 255, column: 35, scope: !14141)
!14146 = !DILocation(line: 255, column: 13, scope: !14136)
!14147 = !DILocalVariable(name: "nprocs_current", scope: !14148, file: !13999, line: 257, type: !54)
!14148 = distinct !DILexicalBlock(scope: !14141, file: !13999, line: 256, column: 11)
!14149 = !DILocation(line: 257, column: 27, scope: !14148)
!14150 = !DILocation(line: 257, column: 44, scope: !14148)
!14151 = !DILocation(line: 259, column: 45, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14148, file: !13999, line: 259, column: 45)
!14153 = !DILocation(line: 259, column: 62, scope: !14152)
!14154 = !DILocation(line: 259, column: 60, scope: !14152)
!14155 = !DILocation(line: 259, column: 45, scope: !14148)
!14156 = !DILocation(line: 260, column: 24, scope: !14152)
!14157 = !DILocation(line: 260, column: 22, scope: !14152)
!14158 = !DILocation(line: 260, column: 15, scope: !14152)
!14159 = !DILocation(line: 261, column: 11, scope: !14148)
!14160 = !DILocation(line: 264, column: 13, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14136, file: !13999, line: 264, column: 13)
!14162 = !DILocation(line: 264, column: 20, scope: !14161)
!14163 = !DILocation(line: 264, column: 13, scope: !14136)
!14164 = !DILocation(line: 265, column: 18, scope: !14161)
!14165 = !DILocation(line: 265, column: 11, scope: !14161)
!14166 = !DILocation(line: 331, column: 3, scope: !14106)
!14167 = !DILocation(line: 332, column: 1, scope: !14106)
!14168 = distinct !DISubprogram(name: "num_processors_via_affinity_mask", scope: !13999, file: !13999, line: 69, type: !1612, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1598, retainedNodes: !309)
!14169 = !DILocalVariable(name: "set", scope: !14170, file: !13999, line: 129, type: !1614)
!14170 = distinct !DILexicalBlock(scope: !14168, file: !13999, line: 128, column: 3)
!14171 = !DILocation(line: 129, column: 15, scope: !14170)
!14172 = !DILocation(line: 131, column: 9, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14170, file: !13999, line: 131, column: 9)
!14174 = !DILocation(line: 131, column: 51, scope: !14173)
!14175 = !DILocation(line: 131, column: 9, scope: !14170)
!14176 = !DILocalVariable(name: "count", scope: !14177, file: !13999, line: 133, type: !54)
!14177 = distinct !DILexicalBlock(scope: !14173, file: !13999, line: 132, column: 7)
!14178 = !DILocation(line: 133, column: 23, scope: !14177)
!14179 = !DILocation(line: 137, column: 17, scope: !14177)
!14180 = !DILocation(line: 137, column: 15, scope: !14177)
!14181 = !DILocation(line: 146, column: 13, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14177, file: !13999, line: 146, column: 13)
!14183 = !DILocation(line: 146, column: 19, scope: !14182)
!14184 = !DILocation(line: 146, column: 13, scope: !14177)
!14185 = !DILocation(line: 147, column: 18, scope: !14182)
!14186 = !DILocation(line: 147, column: 11, scope: !14182)
!14187 = !DILocation(line: 148, column: 7, scope: !14177)
!14188 = !DILocation(line: 199, column: 3, scope: !14168)
!14189 = !DILocation(line: 200, column: 1, scope: !14168)
!14190 = distinct !DISubprogram(name: "physmem_total", scope: !14191, file: !14191, line: 92, type: !1624, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1621, retainedNodes: !309)
!14191 = !DIFile(filename: "lib/physmem.c", directory: "/home/mohamad/clone/coreutils")
!14192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysinfo", file: !14193, line: 7, size: 896, elements: !14194)
!14193 = !DIFile(filename: "/usr/include/linux/sysinfo.h", directory: "")
!14194 = !{!14195, !14197, !14199, !14200, !14201, !14202, !14203, !14204, !14205, !14207, !14208, !14209, !14210, !14211}
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "uptime", scope: !14192, file: !14193, line: 8, baseType: !14196, size: 64)
!14196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1627, line: 14, baseType: !32)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !14192, file: !14193, line: 9, baseType: !14198, size: 192, offset: 64)
!14198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1626, size: 192, elements: !272)
!14199 = !DIDerivedType(tag: DW_TAG_member, name: "totalram", scope: !14192, file: !14193, line: 10, baseType: !1626, size: 64, offset: 256)
!14200 = !DIDerivedType(tag: DW_TAG_member, name: "freeram", scope: !14192, file: !14193, line: 11, baseType: !1626, size: 64, offset: 320)
!14201 = !DIDerivedType(tag: DW_TAG_member, name: "sharedram", scope: !14192, file: !14193, line: 12, baseType: !1626, size: 64, offset: 384)
!14202 = !DIDerivedType(tag: DW_TAG_member, name: "bufferram", scope: !14192, file: !14193, line: 13, baseType: !1626, size: 64, offset: 448)
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "totalswap", scope: !14192, file: !14193, line: 14, baseType: !1626, size: 64, offset: 512)
!14204 = !DIDerivedType(tag: DW_TAG_member, name: "freeswap", scope: !14192, file: !14193, line: 15, baseType: !1626, size: 64, offset: 576)
!14205 = !DIDerivedType(tag: DW_TAG_member, name: "procs", scope: !14192, file: !14193, line: 16, baseType: !14206, size: 16, offset: 640)
!14206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !1629, line: 23, baseType: !34)
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14192, file: !14193, line: 17, baseType: !14206, size: 16, offset: 656)
!14208 = !DIDerivedType(tag: DW_TAG_member, name: "totalhigh", scope: !14192, file: !14193, line: 18, baseType: !1626, size: 64, offset: 704)
!14209 = !DIDerivedType(tag: DW_TAG_member, name: "freehigh", scope: !14192, file: !14193, line: 19, baseType: !1626, size: 64, offset: 768)
!14210 = !DIDerivedType(tag: DW_TAG_member, name: "mem_unit", scope: !14192, file: !14193, line: 20, baseType: !1628, size: 32, offset: 832)
!14211 = !DIDerivedType(tag: DW_TAG_member, name: "_f", scope: !14192, file: !14193, line: 21, baseType: !14212, offset: 864)
!14212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, elements: !14213)
!14213 = !{!14214}
!14214 = !DISubrange(count: 0)
!14215 = !DILocalVariable(name: "pages", scope: !14216, file: !14191, line: 96, type: !370)
!14216 = distinct !DILexicalBlock(scope: !14190, file: !14191, line: 95, column: 3)
!14217 = !DILocation(line: 96, column: 12, scope: !14216)
!14218 = !DILocation(line: 96, column: 20, scope: !14216)
!14219 = !DILocalVariable(name: "pagesize", scope: !14216, file: !14191, line: 97, type: !370)
!14220 = !DILocation(line: 97, column: 12, scope: !14216)
!14221 = !DILocation(line: 97, column: 23, scope: !14216)
!14222 = !DILocation(line: 98, column: 14, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14216, file: !14191, line: 98, column: 9)
!14224 = !DILocation(line: 98, column: 11, scope: !14223)
!14225 = !DILocation(line: 98, column: 20, scope: !14223)
!14226 = !DILocation(line: 98, column: 28, scope: !14223)
!14227 = !DILocation(line: 98, column: 25, scope: !14223)
!14228 = !DILocation(line: 98, column: 9, scope: !14216)
!14229 = !DILocation(line: 99, column: 14, scope: !14223)
!14230 = !DILocation(line: 99, column: 22, scope: !14223)
!14231 = !DILocation(line: 99, column: 20, scope: !14223)
!14232 = !DILocation(line: 99, column: 7, scope: !14223)
!14233 = !DILocalVariable(name: "si", scope: !14234, file: !14191, line: 105, type: !14192)
!14234 = distinct !DILexicalBlock(scope: !14190, file: !14191, line: 104, column: 3)
!14235 = !DILocation(line: 105, column: 20, scope: !14234)
!14236 = !DILocation(line: 106, column: 9, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14234, file: !14191, line: 106, column: 9)
!14238 = !DILocation(line: 106, column: 22, scope: !14237)
!14239 = !DILocation(line: 106, column: 9, scope: !14234)
!14240 = !DILocation(line: 107, column: 26, scope: !14237)
!14241 = !{!14242, !2517, i64 32}
!14242 = !{!"sysinfo", !2517, i64 0, !2344, i64 8, !2517, i64 32, !2517, i64 40, !2517, i64 48, !2517, i64 56, !2517, i64 64, !2517, i64 72, !3490, i64 80, !3490, i64 82, !2517, i64 88, !2517, i64 96, !2343, i64 104, !2344, i64 108}
!14243 = !DILocation(line: 107, column: 14, scope: !14237)
!14244 = !DILocation(line: 107, column: 40, scope: !14237)
!14245 = !{!14242, !2343, i64 104}
!14246 = !DILocation(line: 107, column: 37, scope: !14237)
!14247 = !DILocation(line: 107, column: 35, scope: !14237)
!14248 = !DILocation(line: 107, column: 7, scope: !14237)
!14249 = !DILocation(line: 199, column: 3, scope: !14190)
!14250 = !DILocation(line: 200, column: 1, scope: !14190)
!14251 = distinct !DISubprogram(name: "physmem_available", scope: !14191, file: !14191, line: 204, type: !1624, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1621, retainedNodes: !309)
!14252 = !DILocalVariable(name: "pages", scope: !14253, file: !14191, line: 208, type: !370)
!14253 = distinct !DILexicalBlock(scope: !14251, file: !14191, line: 207, column: 3)
!14254 = !DILocation(line: 208, column: 12, scope: !14253)
!14255 = !DILocation(line: 208, column: 20, scope: !14253)
!14256 = !DILocalVariable(name: "pagesize", scope: !14253, file: !14191, line: 209, type: !370)
!14257 = !DILocation(line: 209, column: 12, scope: !14253)
!14258 = !DILocation(line: 209, column: 23, scope: !14253)
!14259 = !DILocation(line: 210, column: 14, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14253, file: !14191, line: 210, column: 9)
!14261 = !DILocation(line: 210, column: 11, scope: !14260)
!14262 = !DILocation(line: 210, column: 20, scope: !14260)
!14263 = !DILocation(line: 210, column: 28, scope: !14260)
!14264 = !DILocation(line: 210, column: 25, scope: !14260)
!14265 = !DILocation(line: 210, column: 9, scope: !14253)
!14266 = !DILocation(line: 211, column: 14, scope: !14260)
!14267 = !DILocation(line: 211, column: 22, scope: !14260)
!14268 = !DILocation(line: 211, column: 20, scope: !14260)
!14269 = !DILocation(line: 211, column: 7, scope: !14260)
!14270 = !DILocalVariable(name: "si", scope: !14271, file: !14191, line: 217, type: !14192)
!14271 = distinct !DILexicalBlock(scope: !14251, file: !14191, line: 216, column: 3)
!14272 = !DILocation(line: 217, column: 20, scope: !14271)
!14273 = !DILocation(line: 218, column: 9, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14271, file: !14191, line: 218, column: 9)
!14275 = !DILocation(line: 218, column: 22, scope: !14274)
!14276 = !DILocation(line: 218, column: 9, scope: !14271)
!14277 = !DILocation(line: 219, column: 27, scope: !14274)
!14278 = !{!14242, !2517, i64 40}
!14279 = !DILocation(line: 219, column: 15, scope: !14274)
!14280 = !DILocation(line: 219, column: 40, scope: !14274)
!14281 = !{!14242, !2517, i64 56}
!14282 = !DILocation(line: 219, column: 37, scope: !14274)
!14283 = !DILocation(line: 219, column: 35, scope: !14274)
!14284 = !DILocation(line: 219, column: 56, scope: !14274)
!14285 = !DILocation(line: 219, column: 53, scope: !14274)
!14286 = !DILocation(line: 219, column: 51, scope: !14274)
!14287 = !DILocation(line: 219, column: 7, scope: !14274)
!14288 = !DILocation(line: 308, column: 10, scope: !14251)
!14289 = !DILocation(line: 308, column: 27, scope: !14251)
!14290 = !DILocation(line: 308, column: 3, scope: !14251)
!14291 = !DILocation(line: 309, column: 1, scope: !14251)
!14292 = !DILocalVariable(name: "fd", arg: 1, scope: !1148, file: !1149, line: 40, type: !257)
!14293 = !DILocation(line: 40, column: 12, scope: !1148)
!14294 = !DILocalVariable(name: "flags", arg: 2, scope: !1148, file: !1149, line: 40, type: !5)
!14295 = !DILocation(line: 40, column: 23, scope: !1148)
!14296 = !DILocalVariable(name: "tmp", scope: !1148, file: !1149, line: 45, type: !536)
!14297 = !DILocation(line: 45, column: 7, scope: !1148)
!14298 = !DILocation(line: 46, column: 12, scope: !1148)
!14299 = !DILocation(line: 46, column: 3, scope: !1148)
!14300 = !DILocation(line: 46, column: 10, scope: !1148)
!14301 = !DILocation(line: 47, column: 12, scope: !1148)
!14302 = !DILocation(line: 47, column: 3, scope: !1148)
!14303 = !DILocation(line: 47, column: 10, scope: !1148)
!14304 = !DILocation(line: 56, column: 9, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14306, file: !1149, line: 56, column: 9)
!14306 = distinct !DILexicalBlock(scope: !1148, file: !1149, line: 53, column: 3)
!14307 = !DILocation(line: 56, column: 27, scope: !14305)
!14308 = !DILocation(line: 56, column: 9, scope: !14306)
!14309 = !DILocalVariable(name: "result", scope: !14310, file: !1149, line: 58, type: !5)
!14310 = distinct !DILexicalBlock(scope: !14305, file: !1149, line: 57, column: 7)
!14311 = !DILocation(line: 58, column: 13, scope: !14310)
!14312 = !DILocation(line: 58, column: 29, scope: !14310)
!14313 = !DILocation(line: 58, column: 33, scope: !14310)
!14314 = !DILocation(line: 58, column: 22, scope: !14310)
!14315 = !DILocation(line: 59, column: 15, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14310, file: !1149, line: 59, column: 13)
!14317 = !DILocation(line: 59, column: 22, scope: !14316)
!14318 = !DILocation(line: 59, column: 26, scope: !14316)
!14319 = !DILocation(line: 59, column: 29, scope: !14316)
!14320 = !DILocation(line: 59, column: 35, scope: !14316)
!14321 = !DILocation(line: 59, column: 13, scope: !14310)
!14322 = !DILocation(line: 61, column: 31, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14316, file: !1149, line: 60, column: 11)
!14324 = !DILocation(line: 62, column: 20, scope: !14323)
!14325 = !DILocation(line: 62, column: 13, scope: !14323)
!14326 = !DILocation(line: 64, column: 27, scope: !14310)
!14327 = !DILocation(line: 65, column: 7, scope: !14310)
!14328 = !DILocation(line: 70, column: 8, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !1148, file: !1149, line: 70, column: 7)
!14330 = !DILocation(line: 70, column: 14, scope: !14329)
!14331 = !DILocation(line: 70, column: 63, scope: !14329)
!14332 = !DILocation(line: 70, column: 7, scope: !1148)
!14333 = !DILocation(line: 72, column: 7, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14329, file: !1149, line: 71, column: 5)
!14335 = !DILocation(line: 72, column: 13, scope: !14334)
!14336 = !DILocation(line: 73, column: 7, scope: !14334)
!14337 = !DILocation(line: 107, column: 13, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !1148, file: !1149, line: 107, column: 7)
!14339 = !DILocation(line: 107, column: 7, scope: !14338)
!14340 = !DILocation(line: 107, column: 17, scope: !14338)
!14341 = !DILocation(line: 107, column: 7, scope: !1148)
!14342 = !DILocation(line: 108, column: 5, scope: !14338)
!14343 = !DILocation(line: 116, column: 7, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !1148, file: !1149, line: 116, column: 7)
!14345 = !DILocation(line: 116, column: 13, scope: !14344)
!14346 = !DILocation(line: 116, column: 7, scope: !1148)
!14347 = !DILocalVariable(name: "fcntl_flags", scope: !14348, file: !1149, line: 118, type: !5)
!14348 = distinct !DILexicalBlock(scope: !14344, file: !1149, line: 117, column: 5)
!14349 = !DILocation(line: 118, column: 11, scope: !14348)
!14350 = !DILocation(line: 120, column: 33, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14348, file: !1149, line: 120, column: 11)
!14352 = !DILocation(line: 120, column: 26, scope: !14351)
!14353 = !DILocation(line: 120, column: 24, scope: !14351)
!14354 = !DILocation(line: 120, column: 53, scope: !14351)
!14355 = !DILocation(line: 121, column: 11, scope: !14351)
!14356 = !DILocation(line: 121, column: 21, scope: !14351)
!14357 = !DILocation(line: 121, column: 37, scope: !14351)
!14358 = !DILocation(line: 121, column: 49, scope: !14351)
!14359 = !DILocation(line: 121, column: 14, scope: !14351)
!14360 = !DILocation(line: 121, column: 63, scope: !14351)
!14361 = !DILocation(line: 122, column: 11, scope: !14351)
!14362 = !DILocation(line: 122, column: 36, scope: !14351)
!14363 = !DILocation(line: 122, column: 29, scope: !14351)
!14364 = !DILocation(line: 122, column: 27, scope: !14351)
!14365 = !DILocation(line: 122, column: 56, scope: !14351)
!14366 = !DILocation(line: 123, column: 11, scope: !14351)
!14367 = !DILocation(line: 123, column: 21, scope: !14351)
!14368 = !DILocation(line: 123, column: 37, scope: !14351)
!14369 = !DILocation(line: 123, column: 49, scope: !14351)
!14370 = !DILocation(line: 123, column: 14, scope: !14351)
!14371 = !DILocation(line: 123, column: 63, scope: !14351)
!14372 = !DILocation(line: 120, column: 11, scope: !14348)
!14373 = !DILocation(line: 124, column: 9, scope: !14351)
!14374 = !DILocation(line: 125, column: 5, scope: !14348)
!14375 = !DILocation(line: 127, column: 7, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !1148, file: !1149, line: 127, column: 7)
!14377 = !DILocation(line: 127, column: 13, scope: !14376)
!14378 = !DILocation(line: 127, column: 7, scope: !1148)
!14379 = !DILocalVariable(name: "fcntl_flags", scope: !14380, file: !1149, line: 129, type: !5)
!14380 = distinct !DILexicalBlock(scope: !14376, file: !1149, line: 128, column: 5)
!14381 = !DILocation(line: 129, column: 11, scope: !14380)
!14382 = !DILocation(line: 131, column: 33, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14380, file: !1149, line: 131, column: 11)
!14384 = !DILocation(line: 131, column: 26, scope: !14383)
!14385 = !DILocation(line: 131, column: 24, scope: !14383)
!14386 = !DILocation(line: 131, column: 53, scope: !14383)
!14387 = !DILocation(line: 132, column: 11, scope: !14383)
!14388 = !DILocation(line: 132, column: 21, scope: !14383)
!14389 = !DILocation(line: 132, column: 37, scope: !14383)
!14390 = !DILocation(line: 132, column: 49, scope: !14383)
!14391 = !DILocation(line: 132, column: 14, scope: !14383)
!14392 = !DILocation(line: 132, column: 63, scope: !14383)
!14393 = !DILocation(line: 133, column: 11, scope: !14383)
!14394 = !DILocation(line: 133, column: 36, scope: !14383)
!14395 = !DILocation(line: 133, column: 29, scope: !14383)
!14396 = !DILocation(line: 133, column: 27, scope: !14383)
!14397 = !DILocation(line: 133, column: 56, scope: !14383)
!14398 = !DILocation(line: 134, column: 11, scope: !14383)
!14399 = !DILocation(line: 134, column: 21, scope: !14383)
!14400 = !DILocation(line: 134, column: 37, scope: !14383)
!14401 = !DILocation(line: 134, column: 49, scope: !14383)
!14402 = !DILocation(line: 134, column: 14, scope: !14383)
!14403 = !DILocation(line: 134, column: 63, scope: !14383)
!14404 = !DILocation(line: 131, column: 11, scope: !14380)
!14405 = !DILocation(line: 135, column: 9, scope: !14383)
!14406 = !DILocation(line: 136, column: 5, scope: !14380)
!14407 = !DILocation(line: 151, column: 3, scope: !1148)
!14408 = !DILabel(scope: !1148, name: "fail", file: !1149, line: 156)
!14409 = !DILocation(line: 156, column: 2, scope: !1148)
!14410 = !DILocalVariable(name: "saved_errno", scope: !14411, file: !1149, line: 158, type: !5)
!14411 = distinct !DILexicalBlock(scope: !1148, file: !1149, line: 157, column: 3)
!14412 = !DILocation(line: 158, column: 9, scope: !14411)
!14413 = !DILocation(line: 158, column: 23, scope: !14411)
!14414 = !DILocation(line: 159, column: 12, scope: !14411)
!14415 = !DILocation(line: 159, column: 5, scope: !14411)
!14416 = !DILocation(line: 160, column: 12, scope: !14411)
!14417 = !DILocation(line: 160, column: 5, scope: !14411)
!14418 = !DILocation(line: 161, column: 13, scope: !14411)
!14419 = !DILocation(line: 161, column: 5, scope: !14411)
!14420 = !DILocation(line: 161, column: 11, scope: !14411)
!14421 = !DILocation(line: 162, column: 13, scope: !14411)
!14422 = !DILocation(line: 162, column: 5, scope: !14411)
!14423 = !DILocation(line: 162, column: 11, scope: !14411)
!14424 = !DILocation(line: 163, column: 13, scope: !14411)
!14425 = !DILocation(line: 163, column: 5, scope: !14411)
!14426 = !DILocation(line: 163, column: 11, scope: !14411)
!14427 = !DILocation(line: 164, column: 5, scope: !14411)
!14428 = !DILocation(line: 167, column: 1, scope: !1148)
!14429 = distinct !DISubprogram(name: "posix2_version", scope: !14430, file: !14430, line: 40, type: !1633, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1630, retainedNodes: !309)
!14430 = !DIFile(filename: "lib/posixver.c", directory: "/home/mohamad/clone/coreutils")
!14431 = !DILocalVariable(name: "v", scope: !14429, file: !14430, line: 42, type: !32)
!14432 = !DILocation(line: 42, column: 12, scope: !14429)
!14433 = !DILocalVariable(name: "s", scope: !14429, file: !14430, line: 43, type: !87)
!14434 = !DILocation(line: 43, column: 15, scope: !14429)
!14435 = !DILocation(line: 43, column: 19, scope: !14429)
!14436 = !DILocation(line: 45, column: 7, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14429, file: !14430, line: 45, column: 7)
!14438 = !DILocation(line: 45, column: 9, scope: !14437)
!14439 = !DILocation(line: 45, column: 13, scope: !14437)
!14440 = !DILocation(line: 45, column: 12, scope: !14437)
!14441 = !DILocation(line: 45, column: 7, scope: !14429)
!14442 = !DILocalVariable(name: "e", scope: !14443, file: !14430, line: 47, type: !7)
!14443 = distinct !DILexicalBlock(scope: !14437, file: !14430, line: 46, column: 5)
!14444 = !DILocation(line: 47, column: 13, scope: !14443)
!14445 = !DILocalVariable(name: "i", scope: !14443, file: !14430, line: 48, type: !32)
!14446 = !DILocation(line: 48, column: 16, scope: !14443)
!14447 = !DILocation(line: 48, column: 28, scope: !14443)
!14448 = !DILocation(line: 48, column: 20, scope: !14443)
!14449 = !DILocation(line: 49, column: 14, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14443, file: !14430, line: 49, column: 11)
!14451 = !DILocation(line: 49, column: 13, scope: !14450)
!14452 = !DILocation(line: 49, column: 11, scope: !14443)
!14453 = !DILocation(line: 50, column: 13, scope: !14450)
!14454 = !DILocation(line: 50, column: 11, scope: !14450)
!14455 = !DILocation(line: 50, column: 9, scope: !14450)
!14456 = !DILocation(line: 51, column: 5, scope: !14443)
!14457 = !DILocation(line: 53, column: 10, scope: !14429)
!14458 = !DILocation(line: 53, column: 12, scope: !14429)
!14459 = !DILocation(line: 53, column: 34, scope: !14429)
!14460 = !DILocation(line: 53, column: 36, scope: !14429)
!14461 = !DILocation(line: 53, column: 48, scope: !14429)
!14462 = !DILocation(line: 53, column: 3, scope: !14429)
!14463 = distinct !DISubprogram(name: "set_program_name", scope: !1200, file: !1200, line: 39, type: !302, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1158, retainedNodes: !309)
!14464 = !DILocalVariable(name: "argv0", arg: 1, scope: !14463, file: !1200, line: 39, type: !87)
!14465 = !DILocation(line: 39, column: 31, scope: !14463)
!14466 = !DILocalVariable(name: "slash", scope: !14463, file: !1200, line: 46, type: !87)
!14467 = !DILocation(line: 46, column: 15, scope: !14463)
!14468 = !DILocalVariable(name: "base", scope: !14463, file: !1200, line: 47, type: !87)
!14469 = !DILocation(line: 47, column: 15, scope: !14463)
!14470 = !DILocation(line: 51, column: 7, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14463, file: !1200, line: 51, column: 7)
!14472 = !DILocation(line: 51, column: 13, scope: !14471)
!14473 = !DILocation(line: 51, column: 7, scope: !14463)
!14474 = !DILocation(line: 55, column: 14, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14471, file: !1200, line: 52, column: 5)
!14476 = !DILocation(line: 54, column: 7, scope: !14475)
!14477 = !DILocation(line: 56, column: 7, scope: !14475)
!14478 = !DILocation(line: 59, column: 20, scope: !14463)
!14479 = !DILocation(line: 59, column: 11, scope: !14463)
!14480 = !DILocation(line: 59, column: 9, scope: !14463)
!14481 = !DILocation(line: 60, column: 11, scope: !14463)
!14482 = !DILocation(line: 60, column: 17, scope: !14463)
!14483 = !DILocation(line: 60, column: 27, scope: !14463)
!14484 = !DILocation(line: 60, column: 33, scope: !14463)
!14485 = !DILocation(line: 60, column: 39, scope: !14463)
!14486 = !DILocation(line: 60, column: 8, scope: !14463)
!14487 = !DILocation(line: 61, column: 7, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14463, file: !1200, line: 61, column: 7)
!14489 = !DILocation(line: 61, column: 14, scope: !14488)
!14490 = !DILocation(line: 61, column: 12, scope: !14488)
!14491 = !DILocation(line: 61, column: 20, scope: !14488)
!14492 = !DILocation(line: 61, column: 25, scope: !14488)
!14493 = !DILocation(line: 61, column: 37, scope: !14488)
!14494 = !DILocation(line: 61, column: 42, scope: !14488)
!14495 = !DILocation(line: 61, column: 28, scope: !14488)
!14496 = !DILocation(line: 61, column: 61, scope: !14488)
!14497 = !DILocation(line: 61, column: 7, scope: !14463)
!14498 = !DILocation(line: 63, column: 15, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14488, file: !1200, line: 62, column: 5)
!14500 = !DILocation(line: 63, column: 13, scope: !14499)
!14501 = !DILocation(line: 64, column: 20, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14499, file: !1200, line: 64, column: 11)
!14503 = !DILocation(line: 64, column: 11, scope: !14502)
!14504 = !DILocation(line: 64, column: 36, scope: !14502)
!14505 = !DILocation(line: 64, column: 11, scope: !14499)
!14506 = !DILocation(line: 66, column: 19, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14502, file: !1200, line: 65, column: 9)
!14508 = !DILocation(line: 66, column: 24, scope: !14507)
!14509 = !DILocation(line: 66, column: 17, scope: !14507)
!14510 = !DILocation(line: 70, column: 52, scope: !14507)
!14511 = !DILocation(line: 70, column: 41, scope: !14507)
!14512 = !DILocation(line: 72, column: 9, scope: !14507)
!14513 = !DILocation(line: 73, column: 5, scope: !14499)
!14514 = !DILocation(line: 84, column: 18, scope: !14463)
!14515 = !DILocation(line: 84, column: 16, scope: !14463)
!14516 = !DILocation(line: 90, column: 38, scope: !14463)
!14517 = !DILocation(line: 90, column: 27, scope: !14463)
!14518 = !DILocation(line: 92, column: 1, scope: !14463)
!14519 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1228, file: !1228, line: 122, type: !1224, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14520 = !DILocalVariable(name: "o", arg: 1, scope: !14519, file: !1228, line: 122, type: !1226)
!14521 = !DILocation(line: 122, column: 48, scope: !14519)
!14522 = !DILocalVariable(name: "e", scope: !14519, file: !1228, line: 124, type: !5)
!14523 = !DILocation(line: 124, column: 7, scope: !14519)
!14524 = !DILocation(line: 124, column: 11, scope: !14519)
!14525 = !DILocalVariable(name: "p", scope: !14519, file: !1228, line: 125, type: !1226)
!14526 = !DILocation(line: 125, column: 27, scope: !14519)
!14527 = !DILocation(line: 125, column: 40, scope: !14519)
!14528 = !DILocation(line: 125, column: 44, scope: !14519)
!14529 = !DILocation(line: 125, column: 31, scope: !14519)
!14530 = !DILocation(line: 127, column: 11, scope: !14519)
!14531 = !DILocation(line: 127, column: 3, scope: !14519)
!14532 = !DILocation(line: 127, column: 9, scope: !14519)
!14533 = !DILocation(line: 128, column: 10, scope: !14519)
!14534 = !DILocation(line: 128, column: 3, scope: !14519)
!14535 = distinct !DISubprogram(name: "get_quoting_style", scope: !1228, file: !1228, line: 133, type: !1238, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14536 = !DILocalVariable(name: "o", arg: 1, scope: !14535, file: !1228, line: 133, type: !1240)
!14537 = !DILocation(line: 133, column: 50, scope: !14535)
!14538 = !DILocation(line: 135, column: 11, scope: !14535)
!14539 = !DILocation(line: 135, column: 15, scope: !14535)
!14540 = !DILocation(line: 135, column: 46, scope: !14535)
!14541 = !{!14542, !2344, i64 0}
!14542 = !{!"quoting_options", !2344, i64 0, !2343, i64 4, !2344, i64 8, !2356, i64 40, !2356, i64 48}
!14543 = !DILocation(line: 135, column: 3, scope: !14535)
!14544 = distinct !DISubprogram(name: "set_quoting_style", scope: !1228, file: !1228, line: 141, type: !1242, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14545 = !DILocalVariable(name: "o", arg: 1, scope: !14544, file: !1228, line: 141, type: !1226)
!14546 = !DILocation(line: 141, column: 44, scope: !14544)
!14547 = !DILocalVariable(name: "s", arg: 2, scope: !14544, file: !1228, line: 141, type: !1206)
!14548 = !DILocation(line: 141, column: 66, scope: !14544)
!14549 = !DILocation(line: 143, column: 47, scope: !14544)
!14550 = !DILocation(line: 143, column: 4, scope: !14544)
!14551 = !DILocation(line: 143, column: 8, scope: !14544)
!14552 = !DILocation(line: 143, column: 39, scope: !14544)
!14553 = !DILocation(line: 143, column: 45, scope: !14544)
!14554 = !DILocation(line: 144, column: 1, scope: !14544)
!14555 = distinct !DISubprogram(name: "set_char_quoting", scope: !1228, file: !1228, line: 152, type: !1244, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14556 = !DILocalVariable(name: "o", arg: 1, scope: !14555, file: !1228, line: 152, type: !1226)
!14557 = !DILocation(line: 152, column: 43, scope: !14555)
!14558 = !DILocalVariable(name: "c", arg: 2, scope: !14555, file: !1228, line: 152, type: !8)
!14559 = !DILocation(line: 152, column: 51, scope: !14555)
!14560 = !DILocalVariable(name: "i", arg: 3, scope: !14555, file: !1228, line: 152, type: !5)
!14561 = !DILocation(line: 152, column: 58, scope: !14555)
!14562 = !DILocalVariable(name: "uc", scope: !14555, file: !1228, line: 154, type: !317)
!14563 = !DILocation(line: 154, column: 17, scope: !14555)
!14564 = !DILocation(line: 154, column: 22, scope: !14555)
!14565 = !DILocalVariable(name: "p", scope: !14555, file: !1228, line: 155, type: !1246)
!14566 = !DILocation(line: 155, column: 17, scope: !14555)
!14567 = !DILocation(line: 156, column: 6, scope: !14555)
!14568 = !DILocation(line: 156, column: 10, scope: !14555)
!14569 = !DILocation(line: 156, column: 41, scope: !14555)
!14570 = !DILocation(line: 156, column: 5, scope: !14555)
!14571 = !DILocation(line: 156, column: 59, scope: !14555)
!14572 = !DILocation(line: 156, column: 62, scope: !14555)
!14573 = !DILocation(line: 156, column: 57, scope: !14555)
!14574 = !DILocalVariable(name: "shift", scope: !14555, file: !1228, line: 157, type: !5)
!14575 = !DILocation(line: 157, column: 7, scope: !14555)
!14576 = !DILocation(line: 157, column: 15, scope: !14555)
!14577 = !DILocation(line: 157, column: 18, scope: !14555)
!14578 = !DILocalVariable(name: "r", scope: !14555, file: !1228, line: 158, type: !5)
!14579 = !DILocation(line: 158, column: 7, scope: !14555)
!14580 = !DILocation(line: 158, column: 13, scope: !14555)
!14581 = !DILocation(line: 158, column: 12, scope: !14555)
!14582 = !DILocation(line: 158, column: 18, scope: !14555)
!14583 = !DILocation(line: 158, column: 15, scope: !14555)
!14584 = !DILocation(line: 158, column: 25, scope: !14555)
!14585 = !DILocation(line: 159, column: 11, scope: !14555)
!14586 = !DILocation(line: 159, column: 13, scope: !14555)
!14587 = !DILocation(line: 159, column: 20, scope: !14555)
!14588 = !DILocation(line: 159, column: 18, scope: !14555)
!14589 = !DILocation(line: 159, column: 26, scope: !14555)
!14590 = !DILocation(line: 159, column: 23, scope: !14555)
!14591 = !DILocation(line: 159, column: 4, scope: !14555)
!14592 = !DILocation(line: 159, column: 6, scope: !14555)
!14593 = !DILocation(line: 160, column: 10, scope: !14555)
!14594 = !DILocation(line: 160, column: 3, scope: !14555)
!14595 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1228, file: !1228, line: 168, type: !1247, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14596 = !DILocalVariable(name: "o", arg: 1, scope: !14595, file: !1228, line: 168, type: !1226)
!14597 = !DILocation(line: 168, column: 44, scope: !14595)
!14598 = !DILocalVariable(name: "i", arg: 2, scope: !14595, file: !1228, line: 168, type: !5)
!14599 = !DILocation(line: 168, column: 51, scope: !14595)
!14600 = !DILocalVariable(name: "r", scope: !14595, file: !1228, line: 170, type: !5)
!14601 = !DILocation(line: 170, column: 7, scope: !14595)
!14602 = !DILocation(line: 171, column: 8, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14595, file: !1228, line: 171, column: 7)
!14604 = !DILocation(line: 171, column: 7, scope: !14595)
!14605 = !DILocation(line: 172, column: 7, scope: !14603)
!14606 = !DILocation(line: 172, column: 5, scope: !14603)
!14607 = !DILocation(line: 173, column: 7, scope: !14595)
!14608 = !DILocation(line: 173, column: 10, scope: !14595)
!14609 = !{!14542, !2343, i64 4}
!14610 = !DILocation(line: 173, column: 5, scope: !14595)
!14611 = !DILocation(line: 174, column: 14, scope: !14595)
!14612 = !DILocation(line: 174, column: 3, scope: !14595)
!14613 = !DILocation(line: 174, column: 6, scope: !14595)
!14614 = !DILocation(line: 174, column: 12, scope: !14595)
!14615 = !DILocation(line: 175, column: 10, scope: !14595)
!14616 = !DILocation(line: 175, column: 3, scope: !14595)
!14617 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1228, file: !1228, line: 179, type: !1249, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14618 = !DILocalVariable(name: "o", arg: 1, scope: !14617, file: !1228, line: 179, type: !1226)
!14619 = !DILocation(line: 179, column: 45, scope: !14617)
!14620 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14617, file: !1228, line: 180, type: !87)
!14621 = !DILocation(line: 180, column: 33, scope: !14617)
!14622 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14617, file: !1228, line: 180, type: !87)
!14623 = !DILocation(line: 180, column: 57, scope: !14617)
!14624 = !DILocation(line: 182, column: 8, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14617, file: !1228, line: 182, column: 7)
!14626 = !DILocation(line: 182, column: 7, scope: !14617)
!14627 = !DILocation(line: 183, column: 7, scope: !14625)
!14628 = !DILocation(line: 183, column: 5, scope: !14625)
!14629 = !DILocation(line: 184, column: 3, scope: !14617)
!14630 = !DILocation(line: 184, column: 6, scope: !14617)
!14631 = !DILocation(line: 184, column: 12, scope: !14617)
!14632 = !DILocation(line: 185, column: 8, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14617, file: !1228, line: 185, column: 7)
!14634 = !DILocation(line: 185, column: 19, scope: !14633)
!14635 = !DILocation(line: 185, column: 23, scope: !14633)
!14636 = !DILocation(line: 185, column: 7, scope: !14617)
!14637 = !DILocation(line: 186, column: 5, scope: !14633)
!14638 = !DILocation(line: 187, column: 19, scope: !14617)
!14639 = !DILocation(line: 187, column: 3, scope: !14617)
!14640 = !DILocation(line: 187, column: 6, scope: !14617)
!14641 = !DILocation(line: 187, column: 17, scope: !14617)
!14642 = !{!14542, !2356, i64 40}
!14643 = !DILocation(line: 188, column: 20, scope: !14617)
!14644 = !DILocation(line: 188, column: 3, scope: !14617)
!14645 = !DILocation(line: 188, column: 6, scope: !14617)
!14646 = !DILocation(line: 188, column: 18, scope: !14617)
!14647 = !{!14542, !2356, i64 48}
!14648 = !DILocation(line: 189, column: 1, scope: !14617)
!14649 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1228, file: !1228, line: 784, type: !1251, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14650 = !DILocalVariable(name: "buffer", arg: 1, scope: !14649, file: !1228, line: 784, type: !7)
!14651 = !DILocation(line: 784, column: 24, scope: !14649)
!14652 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14649, file: !1228, line: 784, type: !52)
!14653 = !DILocation(line: 784, column: 39, scope: !14649)
!14654 = !DILocalVariable(name: "arg", arg: 3, scope: !14649, file: !1228, line: 785, type: !87)
!14655 = !DILocation(line: 785, column: 30, scope: !14649)
!14656 = !DILocalVariable(name: "argsize", arg: 4, scope: !14649, file: !1228, line: 785, type: !52)
!14657 = !DILocation(line: 785, column: 42, scope: !14649)
!14658 = !DILocalVariable(name: "o", arg: 5, scope: !14649, file: !1228, line: 786, type: !1240)
!14659 = !DILocation(line: 786, column: 48, scope: !14649)
!14660 = !DILocalVariable(name: "p", scope: !14649, file: !1228, line: 788, type: !1240)
!14661 = !DILocation(line: 788, column: 33, scope: !14649)
!14662 = !DILocation(line: 788, column: 37, scope: !14649)
!14663 = !DILocation(line: 788, column: 41, scope: !14649)
!14664 = !DILocalVariable(name: "e", scope: !14649, file: !1228, line: 789, type: !5)
!14665 = !DILocation(line: 789, column: 7, scope: !14649)
!14666 = !DILocation(line: 789, column: 11, scope: !14649)
!14667 = !DILocalVariable(name: "r", scope: !14649, file: !1228, line: 790, type: !52)
!14668 = !DILocation(line: 790, column: 10, scope: !14649)
!14669 = !DILocation(line: 790, column: 40, scope: !14649)
!14670 = !DILocation(line: 790, column: 48, scope: !14649)
!14671 = !DILocation(line: 790, column: 60, scope: !14649)
!14672 = !DILocation(line: 790, column: 65, scope: !14649)
!14673 = !DILocation(line: 791, column: 40, scope: !14649)
!14674 = !DILocation(line: 791, column: 43, scope: !14649)
!14675 = !DILocation(line: 791, column: 50, scope: !14649)
!14676 = !DILocation(line: 791, column: 53, scope: !14649)
!14677 = !DILocation(line: 791, column: 60, scope: !14649)
!14678 = !DILocation(line: 791, column: 63, scope: !14649)
!14679 = !DILocation(line: 792, column: 40, scope: !14649)
!14680 = !DILocation(line: 792, column: 43, scope: !14649)
!14681 = !DILocation(line: 792, column: 55, scope: !14649)
!14682 = !DILocation(line: 792, column: 58, scope: !14649)
!14683 = !DILocation(line: 790, column: 14, scope: !14649)
!14684 = !DILocation(line: 793, column: 11, scope: !14649)
!14685 = !DILocation(line: 793, column: 3, scope: !14649)
!14686 = !DILocation(line: 793, column: 9, scope: !14649)
!14687 = !DILocation(line: 794, column: 10, scope: !14649)
!14688 = !DILocation(line: 794, column: 3, scope: !14649)
!14689 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1228, file: !1228, line: 256, type: !1298, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!14690 = !DILocalVariable(name: "buffer", arg: 1, scope: !14689, file: !1228, line: 256, type: !7)
!14691 = !DILocation(line: 256, column: 33, scope: !14689)
!14692 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14689, file: !1228, line: 256, type: !52)
!14693 = !DILocation(line: 256, column: 48, scope: !14689)
!14694 = !DILocalVariable(name: "arg", arg: 3, scope: !14689, file: !1228, line: 257, type: !87)
!14695 = !DILocation(line: 257, column: 39, scope: !14689)
!14696 = !DILocalVariable(name: "argsize", arg: 4, scope: !14689, file: !1228, line: 257, type: !52)
!14697 = !DILocation(line: 257, column: 51, scope: !14689)
!14698 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !14689, file: !1228, line: 258, type: !1206)
!14699 = !DILocation(line: 258, column: 46, scope: !14689)
!14700 = !DILocalVariable(name: "flags", arg: 6, scope: !14689, file: !1228, line: 258, type: !5)
!14701 = !DILocation(line: 258, column: 65, scope: !14689)
!14702 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !14689, file: !1228, line: 259, type: !1300)
!14703 = !DILocation(line: 259, column: 47, scope: !14689)
!14704 = !DILocalVariable(name: "left_quote", arg: 8, scope: !14689, file: !1228, line: 260, type: !87)
!14705 = !DILocation(line: 260, column: 39, scope: !14689)
!14706 = !DILocalVariable(name: "right_quote", arg: 9, scope: !14689, file: !1228, line: 261, type: !87)
!14707 = !DILocation(line: 261, column: 39, scope: !14689)
!14708 = !DILocalVariable(name: "i", scope: !14689, file: !1228, line: 263, type: !52)
!14709 = !DILocation(line: 263, column: 10, scope: !14689)
!14710 = !DILocalVariable(name: "len", scope: !14689, file: !1228, line: 264, type: !52)
!14711 = !DILocation(line: 264, column: 10, scope: !14689)
!14712 = !DILocalVariable(name: "orig_buffersize", scope: !14689, file: !1228, line: 265, type: !52)
!14713 = !DILocation(line: 265, column: 10, scope: !14689)
!14714 = !DILocalVariable(name: "quote_string", scope: !14689, file: !1228, line: 266, type: !87)
!14715 = !DILocation(line: 266, column: 15, scope: !14689)
!14716 = !DILocalVariable(name: "quote_string_len", scope: !14689, file: !1228, line: 267, type: !52)
!14717 = !DILocation(line: 267, column: 10, scope: !14689)
!14718 = !DILocalVariable(name: "backslash_escapes", scope: !14689, file: !1228, line: 268, type: !102)
!14719 = !DILocation(line: 268, column: 8, scope: !14689)
!14720 = !DILocalVariable(name: "unibyte_locale", scope: !14689, file: !1228, line: 269, type: !102)
!14721 = !DILocation(line: 269, column: 8, scope: !14689)
!14722 = !DILocation(line: 269, column: 25, scope: !14689)
!14723 = !DILocation(line: 269, column: 36, scope: !14689)
!14724 = !DILocalVariable(name: "elide_outer_quotes", scope: !14689, file: !1228, line: 270, type: !102)
!14725 = !DILocation(line: 270, column: 8, scope: !14689)
!14726 = !DILocation(line: 270, column: 30, scope: !14689)
!14727 = !DILocation(line: 270, column: 36, scope: !14689)
!14728 = !DILocation(line: 270, column: 61, scope: !14689)
!14729 = !DILocalVariable(name: "pending_shell_escape_end", scope: !14689, file: !1228, line: 271, type: !102)
!14730 = !DILocation(line: 271, column: 8, scope: !14689)
!14731 = !DILocalVariable(name: "encountered_single_quote", scope: !14689, file: !1228, line: 272, type: !102)
!14732 = !DILocation(line: 272, column: 8, scope: !14689)
!14733 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !14689, file: !1228, line: 273, type: !102)
!14734 = !DILocation(line: 273, column: 8, scope: !14689)
!14735 = !DILocation(line: 273, column: 3, scope: !14689)
!14736 = !DILabel(scope: !14689, name: "process_input", file: !1228, line: 314)
!14737 = !DILocation(line: 314, column: 2, scope: !14689)
!14738 = !DILocation(line: 316, column: 11, scope: !14689)
!14739 = !DILocation(line: 316, column: 3, scope: !14689)
!14740 = !DILocation(line: 319, column: 21, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 317, column: 5)
!14742 = !DILocation(line: 320, column: 26, scope: !14741)
!14743 = !DILocation(line: 321, column: 7, scope: !14741)
!14744 = !DILocation(line: 323, column: 12, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14741, file: !1228, line: 323, column: 11)
!14746 = !DILocation(line: 323, column: 11, scope: !14741)
!14747 = !DILocation(line: 324, column: 9, scope: !14745)
!14748 = !DILocation(line: 324, column: 9, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14750, file: !1228, line: 324, column: 9)
!14750 = distinct !DILexicalBlock(scope: !14745, file: !1228, line: 324, column: 9)
!14751 = !DILocation(line: 324, column: 9, scope: !14750)
!14752 = !DILocation(line: 325, column: 25, scope: !14741)
!14753 = !DILocation(line: 326, column: 20, scope: !14741)
!14754 = !DILocation(line: 327, column: 24, scope: !14741)
!14755 = !DILocation(line: 328, column: 7, scope: !14741)
!14756 = !DILocation(line: 331, column: 25, scope: !14741)
!14757 = !DILocation(line: 332, column: 26, scope: !14741)
!14758 = !DILocation(line: 333, column: 7, scope: !14741)
!14759 = !DILocation(line: 339, column: 13, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !1228, line: 339, column: 13)
!14761 = distinct !DILexicalBlock(scope: !14741, file: !1228, line: 338, column: 7)
!14762 = !DILocation(line: 339, column: 27, scope: !14760)
!14763 = !DILocation(line: 339, column: 13, scope: !14761)
!14764 = !DILocation(line: 362, column: 50, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14760, file: !1228, line: 340, column: 11)
!14766 = !DILocation(line: 362, column: 26, scope: !14765)
!14767 = !DILocation(line: 362, column: 24, scope: !14765)
!14768 = !DILocation(line: 363, column: 51, scope: !14765)
!14769 = !DILocation(line: 363, column: 27, scope: !14765)
!14770 = !DILocation(line: 363, column: 25, scope: !14765)
!14771 = !DILocation(line: 364, column: 11, scope: !14765)
!14772 = !DILocation(line: 365, column: 14, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14761, file: !1228, line: 365, column: 13)
!14774 = !DILocation(line: 365, column: 13, scope: !14761)
!14775 = !DILocation(line: 366, column: 31, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14773, file: !1228, line: 366, column: 11)
!14777 = !DILocation(line: 366, column: 29, scope: !14776)
!14778 = !DILocation(line: 366, column: 16, scope: !14776)
!14779 = !DILocation(line: 366, column: 44, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14776, file: !1228, line: 366, column: 11)
!14781 = !DILocation(line: 366, column: 43, scope: !14780)
!14782 = !DILocation(line: 366, column: 11, scope: !14776)
!14783 = !DILocation(line: 367, column: 13, scope: !14780)
!14784 = !DILocation(line: 367, column: 13, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14786, file: !1228, line: 367, column: 13)
!14786 = distinct !DILexicalBlock(scope: !14780, file: !1228, line: 367, column: 13)
!14787 = !DILocation(line: 367, column: 13, scope: !14786)
!14788 = !DILocation(line: 366, column: 70, scope: !14780)
!14789 = !DILocation(line: 366, column: 11, scope: !14780)
!14790 = distinct !{!14790, !14782, !14791}
!14791 = !DILocation(line: 367, column: 13, scope: !14776)
!14792 = !DILocation(line: 368, column: 27, scope: !14761)
!14793 = !DILocation(line: 369, column: 24, scope: !14761)
!14794 = !DILocation(line: 369, column: 22, scope: !14761)
!14795 = !DILocation(line: 370, column: 36, scope: !14761)
!14796 = !DILocation(line: 370, column: 28, scope: !14761)
!14797 = !DILocation(line: 370, column: 26, scope: !14761)
!14798 = !DILocation(line: 372, column: 7, scope: !14741)
!14799 = !DILocation(line: 375, column: 25, scope: !14741)
!14800 = !DILocation(line: 376, column: 7, scope: !14741)
!14801 = !DILocation(line: 378, column: 26, scope: !14741)
!14802 = !DILocation(line: 379, column: 7, scope: !14741)
!14803 = !DILocation(line: 381, column: 12, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14741, file: !1228, line: 381, column: 11)
!14805 = !DILocation(line: 381, column: 11, scope: !14741)
!14806 = !DILocation(line: 382, column: 27, scope: !14804)
!14807 = !DILocation(line: 382, column: 9, scope: !14804)
!14808 = !DILocation(line: 383, column: 7, scope: !14741)
!14809 = !DILocation(line: 385, column: 21, scope: !14741)
!14810 = !DILocation(line: 386, column: 12, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14741, file: !1228, line: 386, column: 11)
!14812 = !DILocation(line: 386, column: 11, scope: !14741)
!14813 = !DILocation(line: 387, column: 9, scope: !14811)
!14814 = !DILocation(line: 387, column: 9, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14816, file: !1228, line: 387, column: 9)
!14816 = distinct !DILexicalBlock(scope: !14811, file: !1228, line: 387, column: 9)
!14817 = !DILocation(line: 387, column: 9, scope: !14816)
!14818 = !DILocation(line: 388, column: 20, scope: !14741)
!14819 = !DILocation(line: 389, column: 24, scope: !14741)
!14820 = !DILocation(line: 390, column: 7, scope: !14741)
!14821 = !DILocation(line: 393, column: 26, scope: !14741)
!14822 = !DILocation(line: 394, column: 7, scope: !14741)
!14823 = !DILocation(line: 397, column: 7, scope: !14741)
!14824 = !DILocation(line: 400, column: 10, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 400, column: 3)
!14826 = !DILocation(line: 400, column: 8, scope: !14825)
!14827 = !DILocation(line: 400, column: 19, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14825, file: !1228, line: 400, column: 3)
!14829 = !DILocation(line: 400, column: 27, scope: !14828)
!14830 = !DILocation(line: 400, column: 41, scope: !14828)
!14831 = !DILocation(line: 400, column: 45, scope: !14828)
!14832 = !DILocation(line: 400, column: 48, scope: !14828)
!14833 = !DILocation(line: 400, column: 58, scope: !14828)
!14834 = !DILocation(line: 400, column: 63, scope: !14828)
!14835 = !DILocation(line: 400, column: 60, scope: !14828)
!14836 = !DILocation(line: 400, column: 16, scope: !14828)
!14837 = !DILocation(line: 400, column: 3, scope: !14825)
!14838 = !DILocalVariable(name: "c", scope: !14839, file: !1228, line: 402, type: !317)
!14839 = distinct !DILexicalBlock(scope: !14828, file: !1228, line: 401, column: 5)
!14840 = !DILocation(line: 402, column: 21, scope: !14839)
!14841 = !DILocalVariable(name: "esc", scope: !14839, file: !1228, line: 403, type: !317)
!14842 = !DILocation(line: 403, column: 21, scope: !14839)
!14843 = !DILocalVariable(name: "is_right_quote", scope: !14839, file: !1228, line: 404, type: !102)
!14844 = !DILocation(line: 404, column: 12, scope: !14839)
!14845 = !DILocalVariable(name: "escaping", scope: !14839, file: !1228, line: 405, type: !102)
!14846 = !DILocation(line: 405, column: 12, scope: !14839)
!14847 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !14839, file: !1228, line: 406, type: !102)
!14848 = !DILocation(line: 406, column: 12, scope: !14839)
!14849 = !DILocation(line: 408, column: 11, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 408, column: 11)
!14851 = !DILocation(line: 409, column: 11, scope: !14850)
!14852 = !DILocation(line: 409, column: 14, scope: !14850)
!14853 = !DILocation(line: 409, column: 28, scope: !14850)
!14854 = !DILocation(line: 410, column: 11, scope: !14850)
!14855 = !DILocation(line: 410, column: 14, scope: !14850)
!14856 = !DILocation(line: 411, column: 11, scope: !14850)
!14857 = !DILocation(line: 411, column: 15, scope: !14850)
!14858 = !DILocation(line: 411, column: 19, scope: !14850)
!14859 = !DILocation(line: 411, column: 17, scope: !14850)
!14860 = !DILocation(line: 412, column: 19, scope: !14850)
!14861 = !DILocation(line: 412, column: 27, scope: !14850)
!14862 = !DILocation(line: 412, column: 39, scope: !14850)
!14863 = !DILocation(line: 412, column: 46, scope: !14850)
!14864 = !DILocation(line: 412, column: 44, scope: !14850)
!14865 = !DILocation(line: 416, column: 40, scope: !14850)
!14866 = !DILocation(line: 416, column: 32, scope: !14850)
!14867 = !DILocation(line: 416, column: 30, scope: !14850)
!14868 = !DILocation(line: 416, column: 48, scope: !14850)
!14869 = !DILocation(line: 412, column: 15, scope: !14850)
!14870 = !DILocation(line: 417, column: 11, scope: !14850)
!14871 = !DILocation(line: 417, column: 22, scope: !14850)
!14872 = !DILocation(line: 417, column: 28, scope: !14850)
!14873 = !DILocation(line: 417, column: 26, scope: !14850)
!14874 = !DILocation(line: 417, column: 31, scope: !14850)
!14875 = !DILocation(line: 417, column: 45, scope: !14850)
!14876 = !DILocation(line: 417, column: 14, scope: !14850)
!14877 = !DILocation(line: 417, column: 63, scope: !14850)
!14878 = !DILocation(line: 408, column: 11, scope: !14839)
!14879 = !DILocation(line: 419, column: 15, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !1228, line: 419, column: 15)
!14881 = distinct !DILexicalBlock(scope: !14850, file: !1228, line: 418, column: 9)
!14882 = !DILocation(line: 419, column: 15, scope: !14881)
!14883 = !DILocation(line: 420, column: 13, scope: !14880)
!14884 = !DILocation(line: 421, column: 26, scope: !14881)
!14885 = !DILocation(line: 422, column: 9, scope: !14881)
!14886 = !DILocation(line: 424, column: 11, scope: !14839)
!14887 = !DILocation(line: 424, column: 15, scope: !14839)
!14888 = !DILocation(line: 424, column: 9, scope: !14839)
!14889 = !DILocation(line: 425, column: 15, scope: !14839)
!14890 = !DILocation(line: 425, column: 7, scope: !14839)
!14891 = !DILocation(line: 428, column: 15, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 428, column: 15)
!14893 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 426, column: 9)
!14894 = !DILocation(line: 428, column: 15, scope: !14893)
!14895 = !DILocation(line: 430, column: 15, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14892, file: !1228, line: 429, column: 13)
!14897 = !DILocation(line: 430, column: 15, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !1228, line: 430, column: 15)
!14899 = distinct !DILexicalBlock(scope: !14896, file: !1228, line: 430, column: 15)
!14900 = !DILocation(line: 430, column: 15, scope: !14899)
!14901 = !DILocation(line: 430, column: 15, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14899, file: !1228, line: 430, column: 15)
!14903 = !DILocation(line: 430, column: 15, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14902, file: !1228, line: 430, column: 15)
!14905 = !DILocation(line: 430, column: 15, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14907, file: !1228, line: 430, column: 15)
!14907 = distinct !DILexicalBlock(scope: !14904, file: !1228, line: 430, column: 15)
!14908 = !DILocation(line: 430, column: 15, scope: !14907)
!14909 = !DILocation(line: 430, column: 15, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14911, file: !1228, line: 430, column: 15)
!14911 = distinct !DILexicalBlock(scope: !14904, file: !1228, line: 430, column: 15)
!14912 = !DILocation(line: 430, column: 15, scope: !14911)
!14913 = !DILocation(line: 430, column: 15, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14915, file: !1228, line: 430, column: 15)
!14915 = distinct !DILexicalBlock(scope: !14904, file: !1228, line: 430, column: 15)
!14916 = !DILocation(line: 430, column: 15, scope: !14915)
!14917 = !DILocation(line: 430, column: 15, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14919, file: !1228, line: 430, column: 15)
!14919 = distinct !DILexicalBlock(scope: !14899, file: !1228, line: 430, column: 15)
!14920 = !DILocation(line: 430, column: 15, scope: !14919)
!14921 = !DILocation(line: 437, column: 19, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14896, file: !1228, line: 437, column: 19)
!14923 = !DILocation(line: 437, column: 33, scope: !14922)
!14924 = !DILocation(line: 438, column: 19, scope: !14922)
!14925 = !DILocation(line: 438, column: 22, scope: !14922)
!14926 = !DILocation(line: 438, column: 24, scope: !14922)
!14927 = !DILocation(line: 438, column: 30, scope: !14922)
!14928 = !DILocation(line: 438, column: 28, scope: !14922)
!14929 = !DILocation(line: 438, column: 38, scope: !14922)
!14930 = !DILocation(line: 438, column: 48, scope: !14922)
!14931 = !DILocation(line: 438, column: 52, scope: !14922)
!14932 = !DILocation(line: 438, column: 54, scope: !14922)
!14933 = !DILocation(line: 438, column: 45, scope: !14922)
!14934 = !DILocation(line: 438, column: 59, scope: !14922)
!14935 = !DILocation(line: 438, column: 62, scope: !14922)
!14936 = !DILocation(line: 438, column: 66, scope: !14922)
!14937 = !DILocation(line: 438, column: 68, scope: !14922)
!14938 = !DILocation(line: 438, column: 73, scope: !14922)
!14939 = !DILocation(line: 437, column: 19, scope: !14896)
!14940 = !DILocation(line: 440, column: 19, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14922, file: !1228, line: 439, column: 17)
!14942 = !DILocation(line: 440, column: 19, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14944, file: !1228, line: 440, column: 19)
!14944 = distinct !DILexicalBlock(scope: !14941, file: !1228, line: 440, column: 19)
!14945 = !DILocation(line: 440, column: 19, scope: !14944)
!14946 = !DILocation(line: 441, column: 19, scope: !14941)
!14947 = !DILocation(line: 441, column: 19, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14949, file: !1228, line: 441, column: 19)
!14949 = distinct !DILexicalBlock(scope: !14941, file: !1228, line: 441, column: 19)
!14950 = !DILocation(line: 441, column: 19, scope: !14949)
!14951 = !DILocation(line: 442, column: 17, scope: !14941)
!14952 = !DILocation(line: 443, column: 17, scope: !14896)
!14953 = !DILocation(line: 448, column: 13, scope: !14896)
!14954 = !DILocation(line: 449, column: 20, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14892, file: !1228, line: 449, column: 20)
!14956 = !DILocation(line: 449, column: 26, scope: !14955)
!14957 = !DILocation(line: 449, column: 20, scope: !14892)
!14958 = !DILocation(line: 450, column: 13, scope: !14955)
!14959 = !DILocation(line: 451, column: 11, scope: !14893)
!14960 = !DILocation(line: 454, column: 19, scope: !14893)
!14961 = !DILocation(line: 454, column: 11, scope: !14893)
!14962 = !DILocation(line: 457, column: 19, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14964, file: !1228, line: 457, column: 19)
!14964 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 455, column: 13)
!14965 = !DILocation(line: 457, column: 19, scope: !14964)
!14966 = !DILocation(line: 458, column: 17, scope: !14963)
!14967 = !DILocation(line: 459, column: 15, scope: !14964)
!14968 = !DILocation(line: 462, column: 20, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14964, file: !1228, line: 462, column: 19)
!14970 = !DILocation(line: 462, column: 26, scope: !14969)
!14971 = !DILocation(line: 463, column: 19, scope: !14969)
!14972 = !DILocation(line: 463, column: 22, scope: !14969)
!14973 = !DILocation(line: 463, column: 24, scope: !14969)
!14974 = !DILocation(line: 463, column: 30, scope: !14969)
!14975 = !DILocation(line: 463, column: 28, scope: !14969)
!14976 = !DILocation(line: 463, column: 38, scope: !14969)
!14977 = !DILocation(line: 463, column: 41, scope: !14969)
!14978 = !DILocation(line: 463, column: 45, scope: !14969)
!14979 = !DILocation(line: 463, column: 47, scope: !14969)
!14980 = !DILocation(line: 463, column: 52, scope: !14969)
!14981 = !DILocation(line: 462, column: 19, scope: !14964)
!14982 = !DILocation(line: 464, column: 25, scope: !14969)
!14983 = !DILocation(line: 464, column: 29, scope: !14969)
!14984 = !DILocation(line: 464, column: 31, scope: !14969)
!14985 = !DILocation(line: 464, column: 17, scope: !14969)
!14986 = !DILocation(line: 471, column: 25, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14988, file: !1228, line: 471, column: 25)
!14988 = distinct !DILexicalBlock(scope: !14969, file: !1228, line: 465, column: 19)
!14989 = !DILocation(line: 471, column: 25, scope: !14988)
!14990 = !DILocation(line: 472, column: 23, scope: !14987)
!14991 = !DILocation(line: 473, column: 25, scope: !14988)
!14992 = !DILocation(line: 473, column: 29, scope: !14988)
!14993 = !DILocation(line: 473, column: 31, scope: !14988)
!14994 = !DILocation(line: 473, column: 23, scope: !14988)
!14995 = !DILocation(line: 474, column: 23, scope: !14988)
!14996 = !DILocation(line: 475, column: 21, scope: !14988)
!14997 = !DILocation(line: 475, column: 21, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14999, file: !1228, line: 475, column: 21)
!14999 = distinct !DILexicalBlock(scope: !14988, file: !1228, line: 475, column: 21)
!15000 = !DILocation(line: 475, column: 21, scope: !14999)
!15001 = !DILocation(line: 476, column: 21, scope: !14988)
!15002 = !DILocation(line: 476, column: 21, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !15004, file: !1228, line: 476, column: 21)
!15004 = distinct !DILexicalBlock(scope: !14988, file: !1228, line: 476, column: 21)
!15005 = !DILocation(line: 476, column: 21, scope: !15004)
!15006 = !DILocation(line: 477, column: 21, scope: !14988)
!15007 = !DILocation(line: 477, column: 21, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15009, file: !1228, line: 477, column: 21)
!15009 = distinct !DILexicalBlock(scope: !14988, file: !1228, line: 477, column: 21)
!15010 = !DILocation(line: 477, column: 21, scope: !15009)
!15011 = !DILocation(line: 478, column: 21, scope: !14988)
!15012 = !DILocation(line: 478, column: 21, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !1228, line: 478, column: 21)
!15014 = distinct !DILexicalBlock(scope: !14988, file: !1228, line: 478, column: 21)
!15015 = !DILocation(line: 478, column: 21, scope: !15014)
!15016 = !DILocation(line: 479, column: 21, scope: !14988)
!15017 = !DILocation(line: 482, column: 21, scope: !14988)
!15018 = !DILocation(line: 483, column: 19, scope: !14988)
!15019 = !DILocation(line: 484, column: 15, scope: !14964)
!15020 = !DILocation(line: 487, column: 15, scope: !14964)
!15021 = !DILocation(line: 489, column: 11, scope: !14893)
!15022 = !DILocation(line: 491, column: 24, scope: !14893)
!15023 = !DILocation(line: 491, column: 31, scope: !14893)
!15024 = !DILocation(line: 492, column: 24, scope: !14893)
!15025 = !DILocation(line: 492, column: 31, scope: !14893)
!15026 = !DILocation(line: 493, column: 24, scope: !14893)
!15027 = !DILocation(line: 493, column: 31, scope: !14893)
!15028 = !DILocation(line: 494, column: 24, scope: !14893)
!15029 = !DILocation(line: 494, column: 31, scope: !14893)
!15030 = !DILocation(line: 495, column: 24, scope: !14893)
!15031 = !DILocation(line: 495, column: 31, scope: !14893)
!15032 = !DILocation(line: 496, column: 24, scope: !14893)
!15033 = !DILocation(line: 496, column: 31, scope: !14893)
!15034 = !DILocation(line: 497, column: 24, scope: !14893)
!15035 = !DILocation(line: 497, column: 31, scope: !14893)
!15036 = !DILocation(line: 498, column: 26, scope: !14893)
!15037 = !DILocation(line: 498, column: 24, scope: !14893)
!15038 = !DILocation(line: 500, column: 15, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 500, column: 15)
!15040 = !DILocation(line: 500, column: 29, scope: !15039)
!15041 = !DILocation(line: 500, column: 15, scope: !14893)
!15042 = !DILocation(line: 502, column: 19, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15044, file: !1228, line: 502, column: 19)
!15044 = distinct !DILexicalBlock(scope: !15039, file: !1228, line: 501, column: 13)
!15045 = !DILocation(line: 502, column: 19, scope: !15044)
!15046 = !DILocation(line: 503, column: 17, scope: !15043)
!15047 = !DILocation(line: 504, column: 15, scope: !15044)
!15048 = !DILocation(line: 509, column: 15, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 509, column: 15)
!15050 = !DILocation(line: 509, column: 33, scope: !15049)
!15051 = !DILocation(line: 509, column: 36, scope: !15049)
!15052 = !DILocation(line: 509, column: 55, scope: !15049)
!15053 = !DILocation(line: 509, column: 58, scope: !15049)
!15054 = !DILocation(line: 509, column: 15, scope: !14893)
!15055 = !DILocation(line: 510, column: 13, scope: !15049)
!15056 = !DILabel(scope: !14893, name: "c_and_shell_escape", file: !1228, line: 512)
!15057 = !DILocation(line: 512, column: 9, scope: !14893)
!15058 = !DILocation(line: 513, column: 15, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 513, column: 15)
!15060 = !DILocation(line: 513, column: 29, scope: !15059)
!15061 = !DILocation(line: 514, column: 15, scope: !15059)
!15062 = !DILocation(line: 514, column: 18, scope: !15059)
!15063 = !DILocation(line: 513, column: 15, scope: !14893)
!15064 = !DILocation(line: 515, column: 13, scope: !15059)
!15065 = !DILabel(scope: !14893, name: "c_escape", file: !1228, line: 517)
!15066 = !DILocation(line: 517, column: 9, scope: !14893)
!15067 = !DILocation(line: 518, column: 15, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 518, column: 15)
!15069 = !DILocation(line: 518, column: 15, scope: !14893)
!15070 = !DILocation(line: 520, column: 19, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15068, file: !1228, line: 519, column: 13)
!15072 = !DILocation(line: 520, column: 17, scope: !15071)
!15073 = !DILocation(line: 521, column: 15, scope: !15071)
!15074 = !DILocation(line: 523, column: 11, scope: !14893)
!15075 = !DILocation(line: 526, column: 18, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 526, column: 15)
!15077 = !DILocation(line: 526, column: 26, scope: !15076)
!15078 = !DILocation(line: 526, column: 15, scope: !14893)
!15079 = !DILocation(line: 526, column: 40, scope: !15076)
!15080 = !DILocation(line: 526, column: 47, scope: !15076)
!15081 = !DILocation(line: 526, column: 57, scope: !15076)
!15082 = !DILocation(line: 526, column: 65, scope: !15076)
!15083 = !DILocation(line: 527, column: 13, scope: !15076)
!15084 = !DILocation(line: 528, column: 11, scope: !14893)
!15085 = !DILocation(line: 530, column: 15, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 530, column: 15)
!15087 = !DILocation(line: 530, column: 17, scope: !15086)
!15088 = !DILocation(line: 530, column: 15, scope: !14893)
!15089 = !DILocation(line: 531, column: 13, scope: !15086)
!15090 = !DILocation(line: 532, column: 11, scope: !14893)
!15091 = !DILocation(line: 534, column: 36, scope: !14893)
!15092 = !DILocation(line: 535, column: 11, scope: !14893)
!15093 = !DILocation(line: 548, column: 15, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 548, column: 15)
!15095 = !DILocation(line: 548, column: 29, scope: !15094)
!15096 = !DILocation(line: 549, column: 15, scope: !15094)
!15097 = !DILocation(line: 549, column: 18, scope: !15094)
!15098 = !DILocation(line: 548, column: 15, scope: !14893)
!15099 = !DILocation(line: 550, column: 13, scope: !15094)
!15100 = !DILocation(line: 551, column: 11, scope: !14893)
!15101 = !DILocation(line: 554, column: 36, scope: !14893)
!15102 = !DILocation(line: 555, column: 36, scope: !14893)
!15103 = !DILocation(line: 556, column: 15, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 556, column: 15)
!15105 = !DILocation(line: 556, column: 29, scope: !15104)
!15106 = !DILocation(line: 556, column: 15, scope: !14893)
!15107 = !DILocation(line: 558, column: 19, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15109, file: !1228, line: 558, column: 19)
!15109 = distinct !DILexicalBlock(scope: !15104, file: !1228, line: 557, column: 13)
!15110 = !DILocation(line: 558, column: 19, scope: !15109)
!15111 = !DILocation(line: 559, column: 17, scope: !15108)
!15112 = !DILocation(line: 561, column: 19, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15109, file: !1228, line: 561, column: 19)
!15114 = !DILocation(line: 561, column: 30, scope: !15113)
!15115 = !DILocation(line: 561, column: 35, scope: !15113)
!15116 = !DILocation(line: 561, column: 19, scope: !15109)
!15117 = !DILocation(line: 566, column: 37, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15113, file: !1228, line: 562, column: 17)
!15119 = !DILocation(line: 566, column: 35, scope: !15118)
!15120 = !DILocation(line: 567, column: 30, scope: !15118)
!15121 = !DILocation(line: 568, column: 17, scope: !15118)
!15122 = !DILocation(line: 570, column: 15, scope: !15109)
!15123 = !DILocation(line: 570, column: 15, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !1228, line: 570, column: 15)
!15125 = distinct !DILexicalBlock(scope: !15109, file: !1228, line: 570, column: 15)
!15126 = !DILocation(line: 570, column: 15, scope: !15125)
!15127 = !DILocation(line: 571, column: 15, scope: !15109)
!15128 = !DILocation(line: 571, column: 15, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15130, file: !1228, line: 571, column: 15)
!15130 = distinct !DILexicalBlock(scope: !15109, file: !1228, line: 571, column: 15)
!15131 = !DILocation(line: 571, column: 15, scope: !15130)
!15132 = !DILocation(line: 572, column: 15, scope: !15109)
!15133 = !DILocation(line: 572, column: 15, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !1228, line: 572, column: 15)
!15135 = distinct !DILexicalBlock(scope: !15109, file: !1228, line: 572, column: 15)
!15136 = !DILocation(line: 572, column: 15, scope: !15135)
!15137 = !DILocation(line: 573, column: 40, scope: !15109)
!15138 = !DILocation(line: 574, column: 13, scope: !15109)
!15139 = !DILocation(line: 575, column: 11, scope: !14893)
!15140 = !DILocation(line: 599, column: 36, scope: !14893)
!15141 = !DILocation(line: 600, column: 11, scope: !14893)
!15142 = !DILocalVariable(name: "m", scope: !15143, file: !1228, line: 610, type: !52)
!15143 = distinct !DILexicalBlock(scope: !14893, file: !1228, line: 608, column: 11)
!15144 = !DILocation(line: 610, column: 20, scope: !15143)
!15145 = !DILocalVariable(name: "printable", scope: !15143, file: !1228, line: 612, type: !102)
!15146 = !DILocation(line: 612, column: 18, scope: !15143)
!15147 = !DILocation(line: 614, column: 17, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15143, file: !1228, line: 614, column: 17)
!15149 = !DILocation(line: 614, column: 17, scope: !15143)
!15150 = !DILocation(line: 616, column: 19, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15148, file: !1228, line: 615, column: 15)
!15152 = !DILocation(line: 617, column: 29, scope: !15151)
!15153 = !DILocation(line: 617, column: 41, scope: !15151)
!15154 = !DILocation(line: 617, column: 27, scope: !15151)
!15155 = !DILocation(line: 618, column: 15, scope: !15151)
!15156 = !DILocalVariable(name: "mbstate", scope: !15157, file: !1228, line: 621, type: !1302)
!15157 = distinct !DILexicalBlock(scope: !15148, file: !1228, line: 620, column: 15)
!15158 = !DILocation(line: 621, column: 27, scope: !15157)
!15159 = !DILocation(line: 622, column: 17, scope: !15157)
!15160 = !DILocation(line: 624, column: 19, scope: !15157)
!15161 = !DILocation(line: 625, column: 27, scope: !15157)
!15162 = !DILocation(line: 626, column: 21, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15157, file: !1228, line: 626, column: 21)
!15164 = !DILocation(line: 626, column: 29, scope: !15163)
!15165 = !DILocation(line: 626, column: 21, scope: !15157)
!15166 = !DILocation(line: 627, column: 37, scope: !15163)
!15167 = !DILocation(line: 627, column: 29, scope: !15163)
!15168 = !DILocation(line: 627, column: 27, scope: !15163)
!15169 = !DILocation(line: 627, column: 19, scope: !15163)
!15170 = !DILocation(line: 629, column: 17, scope: !15157)
!15171 = !DILocalVariable(name: "w", scope: !15172, file: !1228, line: 631, type: !1314)
!15172 = distinct !DILexicalBlock(scope: !15157, file: !1228, line: 630, column: 19)
!15173 = !DILocation(line: 631, column: 29, scope: !15172)
!15174 = !DILocalVariable(name: "bytes", scope: !15172, file: !1228, line: 632, type: !52)
!15175 = !DILocation(line: 632, column: 28, scope: !15172)
!15176 = !DILocation(line: 632, column: 50, scope: !15172)
!15177 = !DILocation(line: 632, column: 54, scope: !15172)
!15178 = !DILocation(line: 632, column: 58, scope: !15172)
!15179 = !DILocation(line: 632, column: 56, scope: !15172)
!15180 = !DILocation(line: 633, column: 45, scope: !15172)
!15181 = !DILocation(line: 633, column: 56, scope: !15172)
!15182 = !DILocation(line: 633, column: 60, scope: !15172)
!15183 = !DILocation(line: 633, column: 58, scope: !15172)
!15184 = !DILocation(line: 633, column: 53, scope: !15172)
!15185 = !DILocation(line: 632, column: 36, scope: !15172)
!15186 = !DILocation(line: 634, column: 25, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15172, file: !1228, line: 634, column: 25)
!15188 = !DILocation(line: 634, column: 31, scope: !15187)
!15189 = !DILocation(line: 634, column: 25, scope: !15172)
!15190 = !DILocation(line: 635, column: 23, scope: !15187)
!15191 = !DILocation(line: 636, column: 30, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15187, file: !1228, line: 636, column: 30)
!15193 = !DILocation(line: 636, column: 36, scope: !15192)
!15194 = !DILocation(line: 636, column: 30, scope: !15187)
!15195 = !DILocation(line: 638, column: 35, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15192, file: !1228, line: 637, column: 23)
!15197 = !DILocation(line: 639, column: 25, scope: !15196)
!15198 = !DILocation(line: 641, column: 30, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15192, file: !1228, line: 641, column: 30)
!15200 = !DILocation(line: 641, column: 36, scope: !15199)
!15201 = !DILocation(line: 641, column: 30, scope: !15192)
!15202 = !DILocation(line: 643, column: 35, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15199, file: !1228, line: 642, column: 23)
!15204 = !DILocation(line: 644, column: 25, scope: !15203)
!15205 = !DILocation(line: 644, column: 32, scope: !15203)
!15206 = !DILocation(line: 644, column: 36, scope: !15203)
!15207 = !DILocation(line: 644, column: 34, scope: !15203)
!15208 = !DILocation(line: 644, column: 40, scope: !15203)
!15209 = !DILocation(line: 644, column: 38, scope: !15203)
!15210 = !DILocation(line: 644, column: 48, scope: !15203)
!15211 = !DILocation(line: 644, column: 51, scope: !15203)
!15212 = !DILocation(line: 644, column: 55, scope: !15203)
!15213 = !DILocation(line: 644, column: 59, scope: !15203)
!15214 = !DILocation(line: 644, column: 57, scope: !15203)
!15215 = !DILocation(line: 0, scope: !15203)
!15216 = !DILocation(line: 645, column: 28, scope: !15203)
!15217 = distinct !{!15217, !15204, !15216}
!15218 = !DILocation(line: 646, column: 25, scope: !15203)
!15219 = !DILocation(line: 654, column: 44, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15221, file: !1228, line: 654, column: 29)
!15221 = distinct !DILexicalBlock(scope: !15199, file: !1228, line: 649, column: 23)
!15222 = !DILocation(line: 655, column: 29, scope: !15220)
!15223 = !DILocation(line: 655, column: 32, scope: !15220)
!15224 = !DILocation(line: 655, column: 46, scope: !15220)
!15225 = !DILocation(line: 654, column: 29, scope: !15221)
!15226 = !DILocalVariable(name: "j", scope: !15227, file: !1228, line: 657, type: !52)
!15227 = distinct !DILexicalBlock(scope: !15220, file: !1228, line: 656, column: 27)
!15228 = !DILocation(line: 657, column: 36, scope: !15227)
!15229 = !DILocation(line: 658, column: 36, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15227, file: !1228, line: 658, column: 29)
!15231 = !DILocation(line: 658, column: 34, scope: !15230)
!15232 = !DILocation(line: 658, column: 41, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15230, file: !1228, line: 658, column: 29)
!15234 = !DILocation(line: 658, column: 45, scope: !15233)
!15235 = !DILocation(line: 658, column: 43, scope: !15233)
!15236 = !DILocation(line: 658, column: 29, scope: !15230)
!15237 = !DILocation(line: 659, column: 39, scope: !15233)
!15238 = !DILocation(line: 659, column: 43, scope: !15233)
!15239 = !DILocation(line: 659, column: 47, scope: !15233)
!15240 = !DILocation(line: 659, column: 45, scope: !15233)
!15241 = !DILocation(line: 659, column: 51, scope: !15233)
!15242 = !DILocation(line: 659, column: 49, scope: !15233)
!15243 = !DILocation(line: 659, column: 31, scope: !15233)
!15244 = !DILocation(line: 663, column: 35, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15233, file: !1228, line: 660, column: 33)
!15246 = !DILocation(line: 666, column: 35, scope: !15245)
!15247 = !DILocation(line: 667, column: 33, scope: !15245)
!15248 = !DILocation(line: 658, column: 53, scope: !15233)
!15249 = !DILocation(line: 658, column: 29, scope: !15233)
!15250 = distinct !{!15250, !15236, !15251}
!15251 = !DILocation(line: 667, column: 33, scope: !15230)
!15252 = !DILocation(line: 668, column: 27, scope: !15227)
!15253 = !DILocation(line: 670, column: 41, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15221, file: !1228, line: 670, column: 29)
!15255 = !DILocation(line: 670, column: 31, scope: !15254)
!15256 = !DILocation(line: 670, column: 29, scope: !15221)
!15257 = !DILocation(line: 671, column: 37, scope: !15254)
!15258 = !DILocation(line: 671, column: 27, scope: !15254)
!15259 = !DILocation(line: 672, column: 30, scope: !15221)
!15260 = !DILocation(line: 672, column: 27, scope: !15221)
!15261 = !DILocation(line: 674, column: 19, scope: !15172)
!15262 = !DILocation(line: 675, column: 26, scope: !15157)
!15263 = !DILocation(line: 675, column: 24, scope: !15157)
!15264 = distinct !{!15264, !15170, !15265}
!15265 = !DILocation(line: 675, column: 44, scope: !15157)
!15266 = !DILocation(line: 678, column: 40, scope: !15143)
!15267 = !DILocation(line: 678, column: 38, scope: !15143)
!15268 = !DILocation(line: 680, column: 21, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15143, file: !1228, line: 680, column: 17)
!15270 = !DILocation(line: 680, column: 19, scope: !15269)
!15271 = !DILocation(line: 680, column: 23, scope: !15269)
!15272 = !DILocation(line: 680, column: 27, scope: !15269)
!15273 = !DILocation(line: 680, column: 45, scope: !15269)
!15274 = !DILocation(line: 680, column: 50, scope: !15269)
!15275 = !DILocation(line: 680, column: 17, scope: !15143)
!15276 = !DILocalVariable(name: "ilim", scope: !15277, file: !1228, line: 684, type: !52)
!15277 = distinct !DILexicalBlock(scope: !15269, file: !1228, line: 681, column: 15)
!15278 = !DILocation(line: 684, column: 24, scope: !15277)
!15279 = !DILocation(line: 684, column: 31, scope: !15277)
!15280 = !DILocation(line: 684, column: 35, scope: !15277)
!15281 = !DILocation(line: 684, column: 33, scope: !15277)
!15282 = !DILocation(line: 686, column: 17, scope: !15277)
!15283 = !DILocation(line: 688, column: 25, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15285, file: !1228, line: 688, column: 25)
!15285 = distinct !DILexicalBlock(scope: !15286, file: !1228, line: 687, column: 19)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !1228, line: 686, column: 17)
!15287 = distinct !DILexicalBlock(scope: !15277, file: !1228, line: 686, column: 17)
!15288 = !DILocation(line: 688, column: 43, scope: !15284)
!15289 = !DILocation(line: 688, column: 48, scope: !15284)
!15290 = !DILocation(line: 688, column: 25, scope: !15285)
!15291 = !DILocation(line: 690, column: 25, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15284, file: !1228, line: 689, column: 23)
!15293 = !DILocation(line: 690, column: 25, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15295, file: !1228, line: 690, column: 25)
!15295 = distinct !DILexicalBlock(scope: !15292, file: !1228, line: 690, column: 25)
!15296 = !DILocation(line: 690, column: 25, scope: !15295)
!15297 = !DILocation(line: 690, column: 25, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15295, file: !1228, line: 690, column: 25)
!15299 = !DILocation(line: 690, column: 25, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15298, file: !1228, line: 690, column: 25)
!15301 = !DILocation(line: 690, column: 25, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15303, file: !1228, line: 690, column: 25)
!15303 = distinct !DILexicalBlock(scope: !15300, file: !1228, line: 690, column: 25)
!15304 = !DILocation(line: 690, column: 25, scope: !15303)
!15305 = !DILocation(line: 690, column: 25, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15307, file: !1228, line: 690, column: 25)
!15307 = distinct !DILexicalBlock(scope: !15300, file: !1228, line: 690, column: 25)
!15308 = !DILocation(line: 690, column: 25, scope: !15307)
!15309 = !DILocation(line: 690, column: 25, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15311, file: !1228, line: 690, column: 25)
!15311 = distinct !DILexicalBlock(scope: !15300, file: !1228, line: 690, column: 25)
!15312 = !DILocation(line: 690, column: 25, scope: !15311)
!15313 = !DILocation(line: 690, column: 25, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15315, file: !1228, line: 690, column: 25)
!15315 = distinct !DILexicalBlock(scope: !15295, file: !1228, line: 690, column: 25)
!15316 = !DILocation(line: 690, column: 25, scope: !15315)
!15317 = !DILocation(line: 691, column: 25, scope: !15292)
!15318 = !DILocation(line: 691, column: 25, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15320, file: !1228, line: 691, column: 25)
!15320 = distinct !DILexicalBlock(scope: !15292, file: !1228, line: 691, column: 25)
!15321 = !DILocation(line: 691, column: 25, scope: !15320)
!15322 = !DILocation(line: 692, column: 25, scope: !15292)
!15323 = !DILocation(line: 692, column: 25, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15325, file: !1228, line: 692, column: 25)
!15325 = distinct !DILexicalBlock(scope: !15292, file: !1228, line: 692, column: 25)
!15326 = !DILocation(line: 692, column: 25, scope: !15325)
!15327 = !DILocation(line: 693, column: 36, scope: !15292)
!15328 = !DILocation(line: 693, column: 38, scope: !15292)
!15329 = !DILocation(line: 693, column: 33, scope: !15292)
!15330 = !DILocation(line: 693, column: 29, scope: !15292)
!15331 = !DILocation(line: 693, column: 27, scope: !15292)
!15332 = !DILocation(line: 694, column: 23, scope: !15292)
!15333 = !DILocation(line: 695, column: 30, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15284, file: !1228, line: 695, column: 30)
!15335 = !DILocation(line: 695, column: 30, scope: !15284)
!15336 = !DILocation(line: 697, column: 25, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15334, file: !1228, line: 696, column: 23)
!15338 = !DILocation(line: 697, column: 25, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15340, file: !1228, line: 697, column: 25)
!15340 = distinct !DILexicalBlock(scope: !15337, file: !1228, line: 697, column: 25)
!15341 = !DILocation(line: 697, column: 25, scope: !15340)
!15342 = !DILocation(line: 698, column: 40, scope: !15337)
!15343 = !DILocation(line: 699, column: 23, scope: !15337)
!15344 = !DILocation(line: 700, column: 25, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15285, file: !1228, line: 700, column: 25)
!15346 = !DILocation(line: 700, column: 33, scope: !15345)
!15347 = !DILocation(line: 700, column: 35, scope: !15345)
!15348 = !DILocation(line: 700, column: 30, scope: !15345)
!15349 = !DILocation(line: 700, column: 25, scope: !15285)
!15350 = !DILocation(line: 701, column: 23, scope: !15345)
!15351 = !DILocation(line: 702, column: 21, scope: !15285)
!15352 = !DILocation(line: 702, column: 21, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !1228, line: 702, column: 21)
!15354 = distinct !DILexicalBlock(scope: !15285, file: !1228, line: 702, column: 21)
!15355 = !DILocation(line: 702, column: 21, scope: !15354)
!15356 = !DILocation(line: 702, column: 21, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15353, file: !1228, line: 702, column: 21)
!15358 = !DILocation(line: 702, column: 21, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15360, file: !1228, line: 702, column: 21)
!15360 = distinct !DILexicalBlock(scope: !15357, file: !1228, line: 702, column: 21)
!15361 = !DILocation(line: 702, column: 21, scope: !15360)
!15362 = !DILocation(line: 702, column: 21, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15364, file: !1228, line: 702, column: 21)
!15364 = distinct !DILexicalBlock(scope: !15357, file: !1228, line: 702, column: 21)
!15365 = !DILocation(line: 702, column: 21, scope: !15364)
!15366 = !DILocation(line: 703, column: 21, scope: !15285)
!15367 = !DILocation(line: 703, column: 21, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !1228, line: 703, column: 21)
!15369 = distinct !DILexicalBlock(scope: !15285, file: !1228, line: 703, column: 21)
!15370 = !DILocation(line: 703, column: 21, scope: !15369)
!15371 = !DILocation(line: 704, column: 25, scope: !15285)
!15372 = !DILocation(line: 704, column: 29, scope: !15285)
!15373 = !DILocation(line: 704, column: 23, scope: !15285)
!15374 = !DILocation(line: 686, column: 17, scope: !15286)
!15375 = distinct !{!15375, !15376, !15377}
!15376 = !DILocation(line: 686, column: 17, scope: !15287)
!15377 = !DILocation(line: 705, column: 19, scope: !15287)
!15378 = !DILocation(line: 707, column: 17, scope: !15277)
!15379 = !DILocation(line: 710, column: 9, scope: !14893)
!15380 = !DILocation(line: 712, column: 16, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 712, column: 11)
!15382 = !DILocation(line: 712, column: 34, scope: !15381)
!15383 = !DILocation(line: 712, column: 37, scope: !15381)
!15384 = !DILocation(line: 712, column: 51, scope: !15381)
!15385 = !DILocation(line: 713, column: 15, scope: !15381)
!15386 = !DILocation(line: 713, column: 18, scope: !15381)
!15387 = !DILocation(line: 714, column: 14, scope: !15381)
!15388 = !DILocation(line: 714, column: 17, scope: !15381)
!15389 = !DILocation(line: 715, column: 14, scope: !15381)
!15390 = !DILocation(line: 715, column: 17, scope: !15381)
!15391 = !DILocation(line: 715, column: 33, scope: !15381)
!15392 = !DILocation(line: 715, column: 35, scope: !15381)
!15393 = !DILocation(line: 715, column: 51, scope: !15381)
!15394 = !DILocation(line: 715, column: 53, scope: !15381)
!15395 = !DILocation(line: 715, column: 47, scope: !15381)
!15396 = !DILocation(line: 715, column: 65, scope: !15381)
!15397 = !DILocation(line: 716, column: 11, scope: !15381)
!15398 = !DILocation(line: 716, column: 15, scope: !15381)
!15399 = !DILocation(line: 712, column: 11, scope: !14839)
!15400 = !DILocation(line: 717, column: 9, scope: !15381)
!15401 = !DILabel(scope: !14839, name: "store_escape", file: !1228, line: 719)
!15402 = !DILocation(line: 719, column: 5, scope: !14839)
!15403 = !DILocation(line: 720, column: 7, scope: !14839)
!15404 = !DILocation(line: 720, column: 7, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15406, file: !1228, line: 720, column: 7)
!15406 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 720, column: 7)
!15407 = !DILocation(line: 720, column: 7, scope: !15406)
!15408 = !DILocation(line: 720, column: 7, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15406, file: !1228, line: 720, column: 7)
!15410 = !DILocation(line: 720, column: 7, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15409, file: !1228, line: 720, column: 7)
!15412 = !DILocation(line: 720, column: 7, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15414, file: !1228, line: 720, column: 7)
!15414 = distinct !DILexicalBlock(scope: !15411, file: !1228, line: 720, column: 7)
!15415 = !DILocation(line: 720, column: 7, scope: !15414)
!15416 = !DILocation(line: 720, column: 7, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !1228, line: 720, column: 7)
!15418 = distinct !DILexicalBlock(scope: !15411, file: !1228, line: 720, column: 7)
!15419 = !DILocation(line: 720, column: 7, scope: !15418)
!15420 = !DILocation(line: 720, column: 7, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15422, file: !1228, line: 720, column: 7)
!15422 = distinct !DILexicalBlock(scope: !15411, file: !1228, line: 720, column: 7)
!15423 = !DILocation(line: 720, column: 7, scope: !15422)
!15424 = !DILocation(line: 720, column: 7, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15426, file: !1228, line: 720, column: 7)
!15426 = distinct !DILexicalBlock(scope: !15406, file: !1228, line: 720, column: 7)
!15427 = !DILocation(line: 720, column: 7, scope: !15426)
!15428 = !DILabel(scope: !14839, name: "store_c", file: !1228, line: 722)
!15429 = !DILocation(line: 722, column: 5, scope: !14839)
!15430 = !DILocation(line: 723, column: 7, scope: !14839)
!15431 = !DILocation(line: 723, column: 7, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15433, file: !1228, line: 723, column: 7)
!15433 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 723, column: 7)
!15434 = !DILocation(line: 723, column: 7, scope: !15433)
!15435 = !DILocation(line: 723, column: 7, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15432, file: !1228, line: 723, column: 7)
!15437 = !DILocation(line: 723, column: 7, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15439, file: !1228, line: 723, column: 7)
!15439 = distinct !DILexicalBlock(scope: !15436, file: !1228, line: 723, column: 7)
!15440 = !DILocation(line: 723, column: 7, scope: !15439)
!15441 = !DILocation(line: 723, column: 7, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15443, file: !1228, line: 723, column: 7)
!15443 = distinct !DILexicalBlock(scope: !15436, file: !1228, line: 723, column: 7)
!15444 = !DILocation(line: 723, column: 7, scope: !15443)
!15445 = !DILocation(line: 724, column: 7, scope: !14839)
!15446 = !DILocation(line: 724, column: 7, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15448, file: !1228, line: 724, column: 7)
!15448 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 724, column: 7)
!15449 = !DILocation(line: 724, column: 7, scope: !15448)
!15450 = !DILocation(line: 726, column: 13, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !14839, file: !1228, line: 726, column: 11)
!15452 = !DILocation(line: 726, column: 11, scope: !14839)
!15453 = !DILocation(line: 727, column: 38, scope: !15451)
!15454 = !DILocation(line: 727, column: 9, scope: !15451)
!15455 = !DILocation(line: 728, column: 5, scope: !14839)
!15456 = !DILocation(line: 400, column: 75, scope: !14828)
!15457 = !DILocation(line: 400, column: 3, scope: !14828)
!15458 = distinct !{!15458, !14837, !15459}
!15459 = !DILocation(line: 728, column: 5, scope: !14825)
!15460 = !DILocation(line: 730, column: 7, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 730, column: 7)
!15462 = !DILocation(line: 730, column: 11, scope: !15461)
!15463 = !DILocation(line: 730, column: 16, scope: !15461)
!15464 = !DILocation(line: 730, column: 19, scope: !15461)
!15465 = !DILocation(line: 730, column: 33, scope: !15461)
!15466 = !DILocation(line: 731, column: 7, scope: !15461)
!15467 = !DILocation(line: 731, column: 10, scope: !15461)
!15468 = !DILocation(line: 730, column: 7, scope: !14689)
!15469 = !DILocation(line: 732, column: 5, scope: !15461)
!15470 = !DILocation(line: 738, column: 7, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 738, column: 7)
!15472 = !DILocation(line: 738, column: 21, scope: !15471)
!15473 = !DILocation(line: 738, column: 51, scope: !15471)
!15474 = !DILocation(line: 738, column: 56, scope: !15471)
!15475 = !DILocation(line: 739, column: 7, scope: !15471)
!15476 = !DILocation(line: 739, column: 10, scope: !15471)
!15477 = !DILocation(line: 738, column: 7, scope: !14689)
!15478 = !DILocation(line: 741, column: 11, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15480, file: !1228, line: 741, column: 11)
!15480 = distinct !DILexicalBlock(scope: !15471, file: !1228, line: 740, column: 5)
!15481 = !DILocation(line: 741, column: 11, scope: !15480)
!15482 = !DILocation(line: 742, column: 42, scope: !15479)
!15483 = !DILocation(line: 742, column: 50, scope: !15479)
!15484 = !DILocation(line: 742, column: 67, scope: !15479)
!15485 = !DILocation(line: 742, column: 72, scope: !15479)
!15486 = !DILocation(line: 744, column: 42, scope: !15479)
!15487 = !DILocation(line: 744, column: 49, scope: !15479)
!15488 = !DILocation(line: 745, column: 42, scope: !15479)
!15489 = !DILocation(line: 745, column: 54, scope: !15479)
!15490 = !DILocation(line: 742, column: 16, scope: !15479)
!15491 = !DILocation(line: 742, column: 9, scope: !15479)
!15492 = !DILocation(line: 746, column: 18, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15479, file: !1228, line: 746, column: 16)
!15494 = !DILocation(line: 746, column: 29, scope: !15493)
!15495 = !DILocation(line: 746, column: 32, scope: !15493)
!15496 = !DILocation(line: 746, column: 16, scope: !15479)
!15497 = !DILocation(line: 749, column: 24, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15493, file: !1228, line: 747, column: 9)
!15499 = !DILocation(line: 749, column: 22, scope: !15498)
!15500 = !DILocation(line: 750, column: 15, scope: !15498)
!15501 = !DILocation(line: 751, column: 11, scope: !15498)
!15502 = !DILocation(line: 753, column: 5, scope: !15480)
!15503 = !DILocation(line: 755, column: 7, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 755, column: 7)
!15505 = !DILocation(line: 755, column: 20, scope: !15504)
!15506 = !DILocation(line: 755, column: 24, scope: !15504)
!15507 = !DILocation(line: 755, column: 7, scope: !14689)
!15508 = !DILocation(line: 756, column: 5, scope: !15504)
!15509 = !DILocation(line: 756, column: 13, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !1228, line: 756, column: 5)
!15511 = distinct !DILexicalBlock(scope: !15504, file: !1228, line: 756, column: 5)
!15512 = !DILocation(line: 756, column: 12, scope: !15510)
!15513 = !DILocation(line: 756, column: 5, scope: !15511)
!15514 = !DILocation(line: 757, column: 7, scope: !15510)
!15515 = !DILocation(line: 757, column: 7, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !1228, line: 757, column: 7)
!15517 = distinct !DILexicalBlock(scope: !15510, file: !1228, line: 757, column: 7)
!15518 = !DILocation(line: 757, column: 7, scope: !15517)
!15519 = !DILocation(line: 756, column: 39, scope: !15510)
!15520 = !DILocation(line: 756, column: 5, scope: !15510)
!15521 = distinct !{!15521, !15513, !15522}
!15522 = !DILocation(line: 757, column: 7, scope: !15511)
!15523 = !DILocation(line: 759, column: 7, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 759, column: 7)
!15525 = !DILocation(line: 759, column: 13, scope: !15524)
!15526 = !DILocation(line: 759, column: 11, scope: !15524)
!15527 = !DILocation(line: 759, column: 7, scope: !14689)
!15528 = !DILocation(line: 760, column: 5, scope: !15524)
!15529 = !DILocation(line: 760, column: 12, scope: !15524)
!15530 = !DILocation(line: 760, column: 17, scope: !15524)
!15531 = !DILocation(line: 761, column: 10, scope: !14689)
!15532 = !DILocation(line: 761, column: 3, scope: !14689)
!15533 = !DILabel(scope: !14689, name: "force_outer_quoting_style", file: !1228, line: 763)
!15534 = !DILocation(line: 763, column: 2, scope: !14689)
!15535 = !DILocation(line: 766, column: 7, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !14689, file: !1228, line: 766, column: 7)
!15537 = !DILocation(line: 766, column: 21, scope: !15536)
!15538 = !DILocation(line: 766, column: 51, scope: !15536)
!15539 = !DILocation(line: 766, column: 54, scope: !15536)
!15540 = !DILocation(line: 766, column: 7, scope: !14689)
!15541 = !DILocation(line: 767, column: 19, scope: !15536)
!15542 = !DILocation(line: 767, column: 5, scope: !15536)
!15543 = !DILocation(line: 768, column: 36, scope: !14689)
!15544 = !DILocation(line: 768, column: 44, scope: !14689)
!15545 = !DILocation(line: 768, column: 56, scope: !14689)
!15546 = !DILocation(line: 768, column: 61, scope: !14689)
!15547 = !DILocation(line: 769, column: 36, scope: !14689)
!15548 = !DILocation(line: 770, column: 36, scope: !14689)
!15549 = !DILocation(line: 770, column: 42, scope: !14689)
!15550 = !DILocation(line: 771, column: 36, scope: !14689)
!15551 = !DILocation(line: 771, column: 48, scope: !14689)
!15552 = !DILocation(line: 768, column: 10, scope: !14689)
!15553 = !DILocation(line: 768, column: 3, scope: !14689)
!15554 = !DILocation(line: 772, column: 1, scope: !14689)
!15555 = distinct !DISubprogram(name: "gettext_quote", scope: !1228, file: !1228, line: 207, type: !1315, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15556 = !DILocalVariable(name: "msgid", arg: 1, scope: !15555, file: !1228, line: 207, type: !87)
!15557 = !DILocation(line: 207, column: 28, scope: !15555)
!15558 = !DILocalVariable(name: "s", arg: 2, scope: !15555, file: !1228, line: 207, type: !1206)
!15559 = !DILocation(line: 207, column: 54, scope: !15555)
!15560 = !DILocalVariable(name: "translation", scope: !15555, file: !1228, line: 209, type: !87)
!15561 = !DILocation(line: 209, column: 15, scope: !15555)
!15562 = !DILocation(line: 209, column: 29, scope: !15555)
!15563 = !DILocalVariable(name: "locale_code", scope: !15555, file: !1228, line: 210, type: !87)
!15564 = !DILocation(line: 210, column: 15, scope: !15555)
!15565 = !DILocation(line: 212, column: 7, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15555, file: !1228, line: 212, column: 7)
!15567 = !DILocation(line: 212, column: 22, scope: !15566)
!15568 = !DILocation(line: 212, column: 19, scope: !15566)
!15569 = !DILocation(line: 212, column: 7, scope: !15555)
!15570 = !DILocation(line: 213, column: 12, scope: !15566)
!15571 = !DILocation(line: 213, column: 5, scope: !15566)
!15572 = !DILocation(line: 233, column: 17, scope: !15555)
!15573 = !DILocation(line: 233, column: 15, scope: !15555)
!15574 = !DILocation(line: 234, column: 7, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15555, file: !1228, line: 234, column: 7)
!15576 = !DILocation(line: 234, column: 7, scope: !15555)
!15577 = !DILocation(line: 235, column: 12, scope: !15575)
!15578 = !DILocation(line: 235, column: 21, scope: !15575)
!15579 = !DILocation(line: 235, column: 5, scope: !15575)
!15580 = !DILocation(line: 236, column: 7, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15555, file: !1228, line: 236, column: 7)
!15582 = !DILocation(line: 236, column: 7, scope: !15555)
!15583 = !DILocation(line: 237, column: 12, scope: !15581)
!15584 = !DILocation(line: 237, column: 21, scope: !15581)
!15585 = !DILocation(line: 237, column: 5, scope: !15581)
!15586 = !DILocation(line: 239, column: 11, scope: !15555)
!15587 = !DILocation(line: 239, column: 13, scope: !15555)
!15588 = !DILocation(line: 239, column: 3, scope: !15555)
!15589 = !DILocation(line: 240, column: 1, scope: !15555)
!15590 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1228, file: !1228, line: 799, type: !1253, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15591 = !DILocalVariable(name: "arg", arg: 1, scope: !15590, file: !1228, line: 799, type: !87)
!15592 = !DILocation(line: 799, column: 29, scope: !15590)
!15593 = !DILocalVariable(name: "argsize", arg: 2, scope: !15590, file: !1228, line: 799, type: !52)
!15594 = !DILocation(line: 799, column: 41, scope: !15590)
!15595 = !DILocalVariable(name: "o", arg: 3, scope: !15590, file: !1228, line: 800, type: !1240)
!15596 = !DILocation(line: 800, column: 47, scope: !15590)
!15597 = !DILocation(line: 802, column: 30, scope: !15590)
!15598 = !DILocation(line: 802, column: 35, scope: !15590)
!15599 = !DILocation(line: 802, column: 50, scope: !15590)
!15600 = !DILocation(line: 802, column: 10, scope: !15590)
!15601 = !DILocation(line: 802, column: 3, scope: !15590)
!15602 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1228, file: !1228, line: 812, type: !1255, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15603 = !DILocalVariable(name: "arg", arg: 1, scope: !15602, file: !1228, line: 812, type: !87)
!15604 = !DILocation(line: 812, column: 33, scope: !15602)
!15605 = !DILocalVariable(name: "argsize", arg: 2, scope: !15602, file: !1228, line: 812, type: !52)
!15606 = !DILocation(line: 812, column: 45, scope: !15602)
!15607 = !DILocalVariable(name: "size", arg: 3, scope: !15602, file: !1228, line: 812, type: !354)
!15608 = !DILocation(line: 812, column: 62, scope: !15602)
!15609 = !DILocalVariable(name: "o", arg: 4, scope: !15602, file: !1228, line: 813, type: !1240)
!15610 = !DILocation(line: 813, column: 51, scope: !15602)
!15611 = !DILocalVariable(name: "p", scope: !15602, file: !1228, line: 815, type: !1240)
!15612 = !DILocation(line: 815, column: 33, scope: !15602)
!15613 = !DILocation(line: 815, column: 37, scope: !15602)
!15614 = !DILocation(line: 815, column: 41, scope: !15602)
!15615 = !DILocalVariable(name: "e", scope: !15602, file: !1228, line: 816, type: !5)
!15616 = !DILocation(line: 816, column: 7, scope: !15602)
!15617 = !DILocation(line: 816, column: 11, scope: !15602)
!15618 = !DILocalVariable(name: "flags", scope: !15602, file: !1228, line: 818, type: !5)
!15619 = !DILocation(line: 818, column: 7, scope: !15602)
!15620 = !DILocation(line: 818, column: 15, scope: !15602)
!15621 = !DILocation(line: 818, column: 18, scope: !15602)
!15622 = !DILocation(line: 818, column: 27, scope: !15602)
!15623 = !DILocation(line: 818, column: 24, scope: !15602)
!15624 = !DILocalVariable(name: "bufsize", scope: !15602, file: !1228, line: 819, type: !52)
!15625 = !DILocation(line: 819, column: 10, scope: !15602)
!15626 = !DILocation(line: 819, column: 52, scope: !15602)
!15627 = !DILocation(line: 819, column: 57, scope: !15602)
!15628 = !DILocation(line: 819, column: 66, scope: !15602)
!15629 = !DILocation(line: 819, column: 69, scope: !15602)
!15630 = !DILocation(line: 820, column: 46, scope: !15602)
!15631 = !DILocation(line: 820, column: 53, scope: !15602)
!15632 = !DILocation(line: 820, column: 56, scope: !15602)
!15633 = !DILocation(line: 821, column: 46, scope: !15602)
!15634 = !DILocation(line: 821, column: 49, scope: !15602)
!15635 = !DILocation(line: 822, column: 46, scope: !15602)
!15636 = !DILocation(line: 822, column: 49, scope: !15602)
!15637 = !DILocation(line: 819, column: 20, scope: !15602)
!15638 = !DILocation(line: 822, column: 62, scope: !15602)
!15639 = !DILocalVariable(name: "buf", scope: !15602, file: !1228, line: 823, type: !7)
!15640 = !DILocation(line: 823, column: 9, scope: !15602)
!15641 = !DILocation(line: 823, column: 27, scope: !15602)
!15642 = !DILocation(line: 823, column: 15, scope: !15602)
!15643 = !DILocation(line: 824, column: 29, scope: !15602)
!15644 = !DILocation(line: 824, column: 34, scope: !15602)
!15645 = !DILocation(line: 824, column: 43, scope: !15602)
!15646 = !DILocation(line: 824, column: 48, scope: !15602)
!15647 = !DILocation(line: 824, column: 57, scope: !15602)
!15648 = !DILocation(line: 824, column: 60, scope: !15602)
!15649 = !DILocation(line: 824, column: 67, scope: !15602)
!15650 = !DILocation(line: 825, column: 29, scope: !15602)
!15651 = !DILocation(line: 825, column: 32, scope: !15602)
!15652 = !DILocation(line: 826, column: 29, scope: !15602)
!15653 = !DILocation(line: 826, column: 32, scope: !15602)
!15654 = !DILocation(line: 826, column: 44, scope: !15602)
!15655 = !DILocation(line: 826, column: 47, scope: !15602)
!15656 = !DILocation(line: 824, column: 3, scope: !15602)
!15657 = !DILocation(line: 827, column: 11, scope: !15602)
!15658 = !DILocation(line: 827, column: 3, scope: !15602)
!15659 = !DILocation(line: 827, column: 9, scope: !15602)
!15660 = !DILocation(line: 828, column: 7, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15602, file: !1228, line: 828, column: 7)
!15662 = !DILocation(line: 828, column: 7, scope: !15602)
!15663 = !DILocation(line: 829, column: 13, scope: !15661)
!15664 = !DILocation(line: 829, column: 21, scope: !15661)
!15665 = !DILocation(line: 829, column: 6, scope: !15661)
!15666 = !DILocation(line: 829, column: 11, scope: !15661)
!15667 = !DILocation(line: 829, column: 5, scope: !15661)
!15668 = !DILocation(line: 830, column: 10, scope: !15602)
!15669 = !DILocation(line: 830, column: 3, scope: !15602)
!15670 = distinct !DISubprogram(name: "quotearg_free", scope: !1228, file: !1228, line: 848, type: !167, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15671 = !DILocalVariable(name: "sv", scope: !15670, file: !1228, line: 850, type: !1257)
!15672 = !DILocation(line: 850, column: 19, scope: !15670)
!15673 = !DILocation(line: 850, column: 24, scope: !15670)
!15674 = !DILocalVariable(name: "i", scope: !15670, file: !1228, line: 851, type: !5)
!15675 = !DILocation(line: 851, column: 7, scope: !15670)
!15676 = !DILocation(line: 852, column: 10, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15670, file: !1228, line: 852, column: 3)
!15678 = !DILocation(line: 852, column: 8, scope: !15677)
!15679 = !DILocation(line: 852, column: 15, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15677, file: !1228, line: 852, column: 3)
!15681 = !DILocation(line: 852, column: 19, scope: !15680)
!15682 = !DILocation(line: 852, column: 17, scope: !15680)
!15683 = !DILocation(line: 852, column: 3, scope: !15677)
!15684 = !DILocation(line: 853, column: 11, scope: !15680)
!15685 = !DILocation(line: 853, column: 14, scope: !15680)
!15686 = !DILocation(line: 853, column: 17, scope: !15680)
!15687 = !{!15688, !2356, i64 8}
!15688 = !{!"slotvec", !2517, i64 0, !2356, i64 8}
!15689 = !DILocation(line: 853, column: 5, scope: !15680)
!15690 = !DILocation(line: 852, column: 28, scope: !15680)
!15691 = !DILocation(line: 852, column: 3, scope: !15680)
!15692 = distinct !{!15692, !15683, !15693}
!15693 = !DILocation(line: 853, column: 20, scope: !15677)
!15694 = !DILocation(line: 854, column: 7, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15670, file: !1228, line: 854, column: 7)
!15696 = !DILocation(line: 854, column: 13, scope: !15695)
!15697 = !DILocation(line: 854, column: 17, scope: !15695)
!15698 = !DILocation(line: 854, column: 7, scope: !15670)
!15699 = !DILocation(line: 856, column: 13, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15695, file: !1228, line: 855, column: 5)
!15701 = !DILocation(line: 856, column: 19, scope: !15700)
!15702 = !DILocation(line: 856, column: 7, scope: !15700)
!15703 = !DILocation(line: 857, column: 21, scope: !15700)
!15704 = !{!15688, !2517, i64 0}
!15705 = !DILocation(line: 858, column: 20, scope: !15700)
!15706 = !DILocation(line: 859, column: 5, scope: !15700)
!15707 = !DILocation(line: 860, column: 7, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15670, file: !1228, line: 860, column: 7)
!15709 = !DILocation(line: 860, column: 10, scope: !15708)
!15710 = !DILocation(line: 860, column: 7, scope: !15670)
!15711 = !DILocation(line: 862, column: 13, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15708, file: !1228, line: 861, column: 5)
!15713 = !DILocation(line: 862, column: 7, scope: !15712)
!15714 = !DILocation(line: 863, column: 15, scope: !15712)
!15715 = !DILocation(line: 864, column: 5, scope: !15712)
!15716 = !DILocation(line: 865, column: 10, scope: !15670)
!15717 = !DILocation(line: 866, column: 1, scope: !15670)
!15718 = distinct !DISubprogram(name: "quotearg_n", scope: !1228, file: !1228, line: 931, type: !1262, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15719 = !DILocalVariable(name: "n", arg: 1, scope: !15718, file: !1228, line: 931, type: !5)
!15720 = !DILocation(line: 931, column: 17, scope: !15718)
!15721 = !DILocalVariable(name: "arg", arg: 2, scope: !15718, file: !1228, line: 931, type: !87)
!15722 = !DILocation(line: 931, column: 32, scope: !15718)
!15723 = !DILocation(line: 933, column: 30, scope: !15718)
!15724 = !DILocation(line: 933, column: 33, scope: !15718)
!15725 = !DILocation(line: 933, column: 10, scope: !15718)
!15726 = !DILocation(line: 933, column: 3, scope: !15718)
!15727 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1228, file: !1228, line: 877, type: !1317, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15728 = !DILocalVariable(name: "n", arg: 1, scope: !15727, file: !1228, line: 877, type: !5)
!15729 = !DILocation(line: 877, column: 25, scope: !15727)
!15730 = !DILocalVariable(name: "arg", arg: 2, scope: !15727, file: !1228, line: 877, type: !87)
!15731 = !DILocation(line: 877, column: 40, scope: !15727)
!15732 = !DILocalVariable(name: "argsize", arg: 3, scope: !15727, file: !1228, line: 877, type: !52)
!15733 = !DILocation(line: 877, column: 52, scope: !15727)
!15734 = !DILocalVariable(name: "options", arg: 4, scope: !15727, file: !1228, line: 878, type: !1240)
!15735 = !DILocation(line: 878, column: 51, scope: !15727)
!15736 = !DILocalVariable(name: "e", scope: !15727, file: !1228, line: 880, type: !5)
!15737 = !DILocation(line: 880, column: 7, scope: !15727)
!15738 = !DILocation(line: 880, column: 11, scope: !15727)
!15739 = !DILocalVariable(name: "sv", scope: !15727, file: !1228, line: 882, type: !1257)
!15740 = !DILocation(line: 882, column: 19, scope: !15727)
!15741 = !DILocation(line: 882, column: 24, scope: !15727)
!15742 = !DILocation(line: 884, column: 7, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15727, file: !1228, line: 884, column: 7)
!15744 = !DILocation(line: 884, column: 9, scope: !15743)
!15745 = !DILocation(line: 884, column: 7, scope: !15727)
!15746 = !DILocation(line: 885, column: 5, scope: !15743)
!15747 = !DILocation(line: 887, column: 7, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15727, file: !1228, line: 887, column: 7)
!15749 = !DILocation(line: 887, column: 17, scope: !15748)
!15750 = !DILocation(line: 887, column: 14, scope: !15748)
!15751 = !DILocation(line: 887, column: 7, scope: !15727)
!15752 = !DILocalVariable(name: "preallocated", scope: !15753, file: !1228, line: 889, type: !102)
!15753 = distinct !DILexicalBlock(scope: !15748, file: !1228, line: 888, column: 5)
!15754 = !DILocation(line: 889, column: 12, scope: !15753)
!15755 = !DILocation(line: 889, column: 28, scope: !15753)
!15756 = !DILocation(line: 889, column: 31, scope: !15753)
!15757 = !DILocalVariable(name: "nmax", scope: !15753, file: !1228, line: 890, type: !5)
!15758 = !DILocation(line: 890, column: 11, scope: !15753)
!15759 = !DILocation(line: 892, column: 11, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15753, file: !1228, line: 892, column: 11)
!15761 = !DILocation(line: 892, column: 18, scope: !15760)
!15762 = !DILocation(line: 892, column: 16, scope: !15760)
!15763 = !DILocation(line: 892, column: 11, scope: !15753)
!15764 = !DILocation(line: 893, column: 9, scope: !15760)
!15765 = !DILocation(line: 895, column: 32, scope: !15753)
!15766 = !DILocation(line: 895, column: 54, scope: !15753)
!15767 = !DILocation(line: 895, column: 59, scope: !15753)
!15768 = !DILocation(line: 895, column: 61, scope: !15753)
!15769 = !DILocation(line: 895, column: 58, scope: !15753)
!15770 = !DILocation(line: 895, column: 66, scope: !15753)
!15771 = !DILocation(line: 895, column: 22, scope: !15753)
!15772 = !DILocation(line: 895, column: 20, scope: !15753)
!15773 = !DILocation(line: 895, column: 15, scope: !15753)
!15774 = !DILocation(line: 896, column: 11, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15753, file: !1228, line: 896, column: 11)
!15776 = !DILocation(line: 896, column: 11, scope: !15753)
!15777 = !DILocation(line: 897, column: 10, scope: !15775)
!15778 = !DILocation(line: 897, column: 15, scope: !15775)
!15779 = !{i64 0, i64 8, !2516, i64 8, i64 8, !2355}
!15780 = !DILocation(line: 897, column: 9, scope: !15775)
!15781 = !DILocation(line: 898, column: 15, scope: !15753)
!15782 = !DILocation(line: 898, column: 20, scope: !15753)
!15783 = !DILocation(line: 898, column: 18, scope: !15753)
!15784 = !DILocation(line: 898, column: 7, scope: !15753)
!15785 = !DILocation(line: 898, column: 32, scope: !15753)
!15786 = !DILocation(line: 898, column: 34, scope: !15753)
!15787 = !DILocation(line: 898, column: 40, scope: !15753)
!15788 = !DILocation(line: 898, column: 38, scope: !15753)
!15789 = !DILocation(line: 898, column: 31, scope: !15753)
!15790 = !DILocation(line: 898, column: 48, scope: !15753)
!15791 = !DILocation(line: 899, column: 16, scope: !15753)
!15792 = !DILocation(line: 899, column: 18, scope: !15753)
!15793 = !DILocation(line: 899, column: 14, scope: !15753)
!15794 = !DILocation(line: 900, column: 5, scope: !15753)
!15795 = !DILocalVariable(name: "size", scope: !15796, file: !1228, line: 903, type: !52)
!15796 = distinct !DILexicalBlock(scope: !15727, file: !1228, line: 902, column: 3)
!15797 = !DILocation(line: 903, column: 12, scope: !15796)
!15798 = !DILocation(line: 903, column: 19, scope: !15796)
!15799 = !DILocation(line: 903, column: 22, scope: !15796)
!15800 = !DILocation(line: 903, column: 25, scope: !15796)
!15801 = !DILocalVariable(name: "val", scope: !15796, file: !1228, line: 904, type: !7)
!15802 = !DILocation(line: 904, column: 11, scope: !15796)
!15803 = !DILocation(line: 904, column: 17, scope: !15796)
!15804 = !DILocation(line: 904, column: 20, scope: !15796)
!15805 = !DILocation(line: 904, column: 23, scope: !15796)
!15806 = !DILocalVariable(name: "flags", scope: !15796, file: !1228, line: 906, type: !5)
!15807 = !DILocation(line: 906, column: 9, scope: !15796)
!15808 = !DILocation(line: 906, column: 17, scope: !15796)
!15809 = !DILocation(line: 906, column: 26, scope: !15796)
!15810 = !DILocation(line: 906, column: 32, scope: !15796)
!15811 = !DILocalVariable(name: "qsize", scope: !15796, file: !1228, line: 907, type: !52)
!15812 = !DILocation(line: 907, column: 12, scope: !15796)
!15813 = !DILocation(line: 907, column: 46, scope: !15796)
!15814 = !DILocation(line: 907, column: 51, scope: !15796)
!15815 = !DILocation(line: 907, column: 57, scope: !15796)
!15816 = !DILocation(line: 907, column: 62, scope: !15796)
!15817 = !DILocation(line: 908, column: 46, scope: !15796)
!15818 = !DILocation(line: 908, column: 55, scope: !15796)
!15819 = !DILocation(line: 908, column: 62, scope: !15796)
!15820 = !DILocation(line: 909, column: 46, scope: !15796)
!15821 = !DILocation(line: 909, column: 55, scope: !15796)
!15822 = !DILocation(line: 910, column: 46, scope: !15796)
!15823 = !DILocation(line: 910, column: 55, scope: !15796)
!15824 = !DILocation(line: 911, column: 46, scope: !15796)
!15825 = !DILocation(line: 911, column: 55, scope: !15796)
!15826 = !DILocation(line: 907, column: 20, scope: !15796)
!15827 = !DILocation(line: 913, column: 9, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15796, file: !1228, line: 913, column: 9)
!15829 = !DILocation(line: 913, column: 17, scope: !15828)
!15830 = !DILocation(line: 913, column: 14, scope: !15828)
!15831 = !DILocation(line: 913, column: 9, scope: !15796)
!15832 = !DILocation(line: 915, column: 29, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15828, file: !1228, line: 914, column: 7)
!15834 = !DILocation(line: 915, column: 35, scope: !15833)
!15835 = !DILocation(line: 915, column: 27, scope: !15833)
!15836 = !DILocation(line: 915, column: 9, scope: !15833)
!15837 = !DILocation(line: 915, column: 12, scope: !15833)
!15838 = !DILocation(line: 915, column: 15, scope: !15833)
!15839 = !DILocation(line: 915, column: 20, scope: !15833)
!15840 = !DILocation(line: 916, column: 13, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15833, file: !1228, line: 916, column: 13)
!15842 = !DILocation(line: 916, column: 17, scope: !15841)
!15843 = !DILocation(line: 916, column: 13, scope: !15833)
!15844 = !DILocation(line: 917, column: 17, scope: !15841)
!15845 = !DILocation(line: 917, column: 11, scope: !15841)
!15846 = !DILocation(line: 918, column: 39, scope: !15833)
!15847 = !DILocation(line: 918, column: 27, scope: !15833)
!15848 = !DILocation(line: 918, column: 25, scope: !15833)
!15849 = !DILocation(line: 918, column: 9, scope: !15833)
!15850 = !DILocation(line: 918, column: 12, scope: !15833)
!15851 = !DILocation(line: 918, column: 15, scope: !15833)
!15852 = !DILocation(line: 918, column: 19, scope: !15833)
!15853 = !DILocation(line: 919, column: 35, scope: !15833)
!15854 = !DILocation(line: 919, column: 40, scope: !15833)
!15855 = !DILocation(line: 919, column: 46, scope: !15833)
!15856 = !DILocation(line: 919, column: 51, scope: !15833)
!15857 = !DILocation(line: 919, column: 60, scope: !15833)
!15858 = !DILocation(line: 919, column: 69, scope: !15833)
!15859 = !DILocation(line: 920, column: 35, scope: !15833)
!15860 = !DILocation(line: 920, column: 42, scope: !15833)
!15861 = !DILocation(line: 920, column: 51, scope: !15833)
!15862 = !DILocation(line: 921, column: 35, scope: !15833)
!15863 = !DILocation(line: 921, column: 44, scope: !15833)
!15864 = !DILocation(line: 922, column: 35, scope: !15833)
!15865 = !DILocation(line: 922, column: 44, scope: !15833)
!15866 = !DILocation(line: 919, column: 9, scope: !15833)
!15867 = !DILocation(line: 923, column: 7, scope: !15833)
!15868 = !DILocation(line: 925, column: 13, scope: !15796)
!15869 = !DILocation(line: 925, column: 5, scope: !15796)
!15870 = !DILocation(line: 925, column: 11, scope: !15796)
!15871 = !DILocation(line: 926, column: 12, scope: !15796)
!15872 = !DILocation(line: 926, column: 5, scope: !15796)
!15873 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1228, file: !1228, line: 937, type: !1264, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15874 = !DILocalVariable(name: "n", arg: 1, scope: !15873, file: !1228, line: 937, type: !5)
!15875 = !DILocation(line: 937, column: 21, scope: !15873)
!15876 = !DILocalVariable(name: "arg", arg: 2, scope: !15873, file: !1228, line: 937, type: !87)
!15877 = !DILocation(line: 937, column: 36, scope: !15873)
!15878 = !DILocalVariable(name: "argsize", arg: 3, scope: !15873, file: !1228, line: 937, type: !52)
!15879 = !DILocation(line: 937, column: 48, scope: !15873)
!15880 = !DILocation(line: 939, column: 30, scope: !15873)
!15881 = !DILocation(line: 939, column: 33, scope: !15873)
!15882 = !DILocation(line: 939, column: 38, scope: !15873)
!15883 = !DILocation(line: 939, column: 10, scope: !15873)
!15884 = !DILocation(line: 939, column: 3, scope: !15873)
!15885 = distinct !DISubprogram(name: "quotearg", scope: !1228, file: !1228, line: 943, type: !1266, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15886 = !DILocalVariable(name: "arg", arg: 1, scope: !15885, file: !1228, line: 943, type: !87)
!15887 = !DILocation(line: 943, column: 23, scope: !15885)
!15888 = !DILocation(line: 945, column: 25, scope: !15885)
!15889 = !DILocation(line: 945, column: 10, scope: !15885)
!15890 = !DILocation(line: 945, column: 3, scope: !15885)
!15891 = distinct !DISubprogram(name: "quotearg_mem", scope: !1228, file: !1228, line: 949, type: !1268, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15892 = !DILocalVariable(name: "arg", arg: 1, scope: !15891, file: !1228, line: 949, type: !87)
!15893 = !DILocation(line: 949, column: 27, scope: !15891)
!15894 = !DILocalVariable(name: "argsize", arg: 2, scope: !15891, file: !1228, line: 949, type: !52)
!15895 = !DILocation(line: 949, column: 39, scope: !15891)
!15896 = !DILocation(line: 951, column: 29, scope: !15891)
!15897 = !DILocation(line: 951, column: 34, scope: !15891)
!15898 = !DILocation(line: 951, column: 10, scope: !15891)
!15899 = !DILocation(line: 951, column: 3, scope: !15891)
!15900 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1228, file: !1228, line: 955, type: !1270, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15901 = !DILocalVariable(name: "n", arg: 1, scope: !15900, file: !1228, line: 955, type: !5)
!15902 = !DILocation(line: 955, column: 23, scope: !15900)
!15903 = !DILocalVariable(name: "s", arg: 2, scope: !15900, file: !1228, line: 955, type: !1206)
!15904 = !DILocation(line: 955, column: 45, scope: !15900)
!15905 = !DILocalVariable(name: "arg", arg: 3, scope: !15900, file: !1228, line: 955, type: !87)
!15906 = !DILocation(line: 955, column: 60, scope: !15900)
!15907 = !DILocalVariable(name: "o", scope: !15900, file: !1228, line: 957, type: !1241)
!15908 = !DILocation(line: 957, column: 32, scope: !15900)
!15909 = !DILocation(line: 957, column: 64, scope: !15900)
!15910 = !DILocation(line: 957, column: 36, scope: !15900)
!15911 = !DILocation(line: 958, column: 30, scope: !15900)
!15912 = !DILocation(line: 958, column: 33, scope: !15900)
!15913 = !DILocation(line: 958, column: 10, scope: !15900)
!15914 = !DILocation(line: 958, column: 3, scope: !15900)
!15915 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1228, file: !1228, line: 193, type: !1319, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15916 = !DILocalVariable(name: "style", arg: 1, scope: !15915, file: !1228, line: 193, type: !1206)
!15917 = !DILocation(line: 193, column: 48, scope: !15915)
!15918 = !DILocalVariable(name: "o", scope: !15915, file: !1228, line: 195, type: !1227)
!15919 = !DILocation(line: 195, column: 26, scope: !15915)
!15920 = !DILocation(line: 196, column: 7, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15915, file: !1228, line: 196, column: 7)
!15922 = !DILocation(line: 196, column: 13, scope: !15921)
!15923 = !DILocation(line: 196, column: 7, scope: !15915)
!15924 = !DILocation(line: 197, column: 5, scope: !15921)
!15925 = !DILocation(line: 198, column: 13, scope: !15915)
!15926 = !DILocation(line: 198, column: 5, scope: !15915)
!15927 = !DILocation(line: 198, column: 11, scope: !15915)
!15928 = !DILocation(line: 199, column: 3, scope: !15915)
!15929 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1228, file: !1228, line: 962, type: !1272, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15930 = !DILocalVariable(name: "n", arg: 1, scope: !15929, file: !1228, line: 962, type: !5)
!15931 = !DILocation(line: 962, column: 27, scope: !15929)
!15932 = !DILocalVariable(name: "s", arg: 2, scope: !15929, file: !1228, line: 962, type: !1206)
!15933 = !DILocation(line: 962, column: 49, scope: !15929)
!15934 = !DILocalVariable(name: "arg", arg: 3, scope: !15929, file: !1228, line: 963, type: !87)
!15935 = !DILocation(line: 963, column: 35, scope: !15929)
!15936 = !DILocalVariable(name: "argsize", arg: 4, scope: !15929, file: !1228, line: 963, type: !52)
!15937 = !DILocation(line: 963, column: 47, scope: !15929)
!15938 = !DILocalVariable(name: "o", scope: !15929, file: !1228, line: 965, type: !1241)
!15939 = !DILocation(line: 965, column: 32, scope: !15929)
!15940 = !DILocation(line: 965, column: 64, scope: !15929)
!15941 = !DILocation(line: 965, column: 36, scope: !15929)
!15942 = !DILocation(line: 966, column: 30, scope: !15929)
!15943 = !DILocation(line: 966, column: 33, scope: !15929)
!15944 = !DILocation(line: 966, column: 38, scope: !15929)
!15945 = !DILocation(line: 966, column: 10, scope: !15929)
!15946 = !DILocation(line: 966, column: 3, scope: !15929)
!15947 = distinct !DISubprogram(name: "quotearg_style", scope: !1228, file: !1228, line: 970, type: !1274, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15948 = !DILocalVariable(name: "s", arg: 1, scope: !15947, file: !1228, line: 970, type: !1206)
!15949 = !DILocation(line: 970, column: 36, scope: !15947)
!15950 = !DILocalVariable(name: "arg", arg: 2, scope: !15947, file: !1228, line: 970, type: !87)
!15951 = !DILocation(line: 970, column: 51, scope: !15947)
!15952 = !DILocation(line: 972, column: 31, scope: !15947)
!15953 = !DILocation(line: 972, column: 34, scope: !15947)
!15954 = !DILocation(line: 972, column: 10, scope: !15947)
!15955 = !DILocation(line: 972, column: 3, scope: !15947)
!15956 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1228, file: !1228, line: 976, type: !1276, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15957 = !DILocalVariable(name: "s", arg: 1, scope: !15956, file: !1228, line: 976, type: !1206)
!15958 = !DILocation(line: 976, column: 40, scope: !15956)
!15959 = !DILocalVariable(name: "arg", arg: 2, scope: !15956, file: !1228, line: 976, type: !87)
!15960 = !DILocation(line: 976, column: 55, scope: !15956)
!15961 = !DILocalVariable(name: "argsize", arg: 3, scope: !15956, file: !1228, line: 976, type: !52)
!15962 = !DILocation(line: 976, column: 67, scope: !15956)
!15963 = !DILocation(line: 978, column: 35, scope: !15956)
!15964 = !DILocation(line: 978, column: 38, scope: !15956)
!15965 = !DILocation(line: 978, column: 43, scope: !15956)
!15966 = !DILocation(line: 978, column: 10, scope: !15956)
!15967 = !DILocation(line: 978, column: 3, scope: !15956)
!15968 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1228, file: !1228, line: 982, type: !1278, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15969 = !DILocalVariable(name: "arg", arg: 1, scope: !15968, file: !1228, line: 982, type: !87)
!15970 = !DILocation(line: 982, column: 32, scope: !15968)
!15971 = !DILocalVariable(name: "argsize", arg: 2, scope: !15968, file: !1228, line: 982, type: !52)
!15972 = !DILocation(line: 982, column: 44, scope: !15968)
!15973 = !DILocalVariable(name: "ch", arg: 3, scope: !15968, file: !1228, line: 982, type: !8)
!15974 = !DILocation(line: 982, column: 58, scope: !15968)
!15975 = !DILocalVariable(name: "options", scope: !15968, file: !1228, line: 984, type: !1227)
!15976 = !DILocation(line: 984, column: 26, scope: !15968)
!15977 = !DILocation(line: 985, column: 13, scope: !15968)
!15978 = !{i64 0, i64 4, !2507, i64 4, i64 4, !2342, i64 8, i64 32, !2507, i64 40, i64 8, !2355, i64 48, i64 8, !2355}
!15979 = !DILocation(line: 986, column: 31, scope: !15968)
!15980 = !DILocation(line: 986, column: 3, scope: !15968)
!15981 = !DILocation(line: 987, column: 33, scope: !15968)
!15982 = !DILocation(line: 987, column: 38, scope: !15968)
!15983 = !DILocation(line: 987, column: 10, scope: !15968)
!15984 = !DILocation(line: 987, column: 3, scope: !15968)
!15985 = distinct !DISubprogram(name: "quotearg_char", scope: !1228, file: !1228, line: 991, type: !1280, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15986 = !DILocalVariable(name: "arg", arg: 1, scope: !15985, file: !1228, line: 991, type: !87)
!15987 = !DILocation(line: 991, column: 28, scope: !15985)
!15988 = !DILocalVariable(name: "ch", arg: 2, scope: !15985, file: !1228, line: 991, type: !8)
!15989 = !DILocation(line: 991, column: 38, scope: !15985)
!15990 = !DILocation(line: 993, column: 29, scope: !15985)
!15991 = !DILocation(line: 993, column: 44, scope: !15985)
!15992 = !DILocation(line: 993, column: 10, scope: !15985)
!15993 = !DILocation(line: 993, column: 3, scope: !15985)
!15994 = distinct !DISubprogram(name: "quotearg_colon", scope: !1228, file: !1228, line: 997, type: !1266, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!15995 = !DILocalVariable(name: "arg", arg: 1, scope: !15994, file: !1228, line: 997, type: !87)
!15996 = !DILocation(line: 997, column: 29, scope: !15994)
!15997 = !DILocation(line: 999, column: 25, scope: !15994)
!15998 = !DILocation(line: 999, column: 10, scope: !15994)
!15999 = !DILocation(line: 999, column: 3, scope: !15994)
!16000 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1228, file: !1228, line: 1003, type: !1268, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16001 = !DILocalVariable(name: "arg", arg: 1, scope: !16000, file: !1228, line: 1003, type: !87)
!16002 = !DILocation(line: 1003, column: 33, scope: !16000)
!16003 = !DILocalVariable(name: "argsize", arg: 2, scope: !16000, file: !1228, line: 1003, type: !52)
!16004 = !DILocation(line: 1003, column: 45, scope: !16000)
!16005 = !DILocation(line: 1005, column: 29, scope: !16000)
!16006 = !DILocation(line: 1005, column: 34, scope: !16000)
!16007 = !DILocation(line: 1005, column: 10, scope: !16000)
!16008 = !DILocation(line: 1005, column: 3, scope: !16000)
!16009 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1228, file: !1228, line: 1009, type: !1270, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16010 = !DILocalVariable(name: "n", arg: 1, scope: !16009, file: !1228, line: 1009, type: !5)
!16011 = !DILocation(line: 1009, column: 29, scope: !16009)
!16012 = !DILocalVariable(name: "s", arg: 2, scope: !16009, file: !1228, line: 1009, type: !1206)
!16013 = !DILocation(line: 1009, column: 51, scope: !16009)
!16014 = !DILocalVariable(name: "arg", arg: 3, scope: !16009, file: !1228, line: 1009, type: !87)
!16015 = !DILocation(line: 1009, column: 66, scope: !16009)
!16016 = !DILocalVariable(name: "options", scope: !16009, file: !1228, line: 1011, type: !1227)
!16017 = !DILocation(line: 1011, column: 26, scope: !16009)
!16018 = !DILocation(line: 1012, column: 41, scope: !16009)
!16019 = !DILocation(line: 1012, column: 13, scope: !16009)
!16020 = !DILocation(line: 1013, column: 3, scope: !16009)
!16021 = !DILocation(line: 1014, column: 30, scope: !16009)
!16022 = !DILocation(line: 1014, column: 33, scope: !16009)
!16023 = !DILocation(line: 1014, column: 10, scope: !16009)
!16024 = !DILocation(line: 1014, column: 3, scope: !16009)
!16025 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1228, file: !1228, line: 1018, type: !1282, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16026 = !DILocalVariable(name: "n", arg: 1, scope: !16025, file: !1228, line: 1018, type: !5)
!16027 = !DILocation(line: 1018, column: 24, scope: !16025)
!16028 = !DILocalVariable(name: "left_quote", arg: 2, scope: !16025, file: !1228, line: 1018, type: !87)
!16029 = !DILocation(line: 1018, column: 39, scope: !16025)
!16030 = !DILocalVariable(name: "right_quote", arg: 3, scope: !16025, file: !1228, line: 1019, type: !87)
!16031 = !DILocation(line: 1019, column: 32, scope: !16025)
!16032 = !DILocalVariable(name: "arg", arg: 4, scope: !16025, file: !1228, line: 1019, type: !87)
!16033 = !DILocation(line: 1019, column: 57, scope: !16025)
!16034 = !DILocation(line: 1021, column: 33, scope: !16025)
!16035 = !DILocation(line: 1021, column: 36, scope: !16025)
!16036 = !DILocation(line: 1021, column: 48, scope: !16025)
!16037 = !DILocation(line: 1021, column: 61, scope: !16025)
!16038 = !DILocation(line: 1021, column: 10, scope: !16025)
!16039 = !DILocation(line: 1021, column: 3, scope: !16025)
!16040 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1228, file: !1228, line: 1026, type: !1284, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16041 = !DILocalVariable(name: "n", arg: 1, scope: !16040, file: !1228, line: 1026, type: !5)
!16042 = !DILocation(line: 1026, column: 28, scope: !16040)
!16043 = !DILocalVariable(name: "left_quote", arg: 2, scope: !16040, file: !1228, line: 1026, type: !87)
!16044 = !DILocation(line: 1026, column: 43, scope: !16040)
!16045 = !DILocalVariable(name: "right_quote", arg: 3, scope: !16040, file: !1228, line: 1027, type: !87)
!16046 = !DILocation(line: 1027, column: 36, scope: !16040)
!16047 = !DILocalVariable(name: "arg", arg: 4, scope: !16040, file: !1228, line: 1028, type: !87)
!16048 = !DILocation(line: 1028, column: 36, scope: !16040)
!16049 = !DILocalVariable(name: "argsize", arg: 5, scope: !16040, file: !1228, line: 1028, type: !52)
!16050 = !DILocation(line: 1028, column: 48, scope: !16040)
!16051 = !DILocalVariable(name: "o", scope: !16040, file: !1228, line: 1030, type: !1227)
!16052 = !DILocation(line: 1030, column: 26, scope: !16040)
!16053 = !DILocation(line: 1030, column: 30, scope: !16040)
!16054 = !DILocation(line: 1031, column: 27, scope: !16040)
!16055 = !DILocation(line: 1031, column: 39, scope: !16040)
!16056 = !DILocation(line: 1031, column: 3, scope: !16040)
!16057 = !DILocation(line: 1032, column: 30, scope: !16040)
!16058 = !DILocation(line: 1032, column: 33, scope: !16040)
!16059 = !DILocation(line: 1032, column: 38, scope: !16040)
!16060 = !DILocation(line: 1032, column: 10, scope: !16040)
!16061 = !DILocation(line: 1032, column: 3, scope: !16040)
!16062 = distinct !DISubprogram(name: "quotearg_custom", scope: !1228, file: !1228, line: 1036, type: !1286, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16063 = !DILocalVariable(name: "left_quote", arg: 1, scope: !16062, file: !1228, line: 1036, type: !87)
!16064 = !DILocation(line: 1036, column: 30, scope: !16062)
!16065 = !DILocalVariable(name: "right_quote", arg: 2, scope: !16062, file: !1228, line: 1036, type: !87)
!16066 = !DILocation(line: 1036, column: 54, scope: !16062)
!16067 = !DILocalVariable(name: "arg", arg: 3, scope: !16062, file: !1228, line: 1037, type: !87)
!16068 = !DILocation(line: 1037, column: 30, scope: !16062)
!16069 = !DILocation(line: 1039, column: 32, scope: !16062)
!16070 = !DILocation(line: 1039, column: 44, scope: !16062)
!16071 = !DILocation(line: 1039, column: 57, scope: !16062)
!16072 = !DILocation(line: 1039, column: 10, scope: !16062)
!16073 = !DILocation(line: 1039, column: 3, scope: !16062)
!16074 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1228, file: !1228, line: 1043, type: !1288, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16075 = !DILocalVariable(name: "left_quote", arg: 1, scope: !16074, file: !1228, line: 1043, type: !87)
!16076 = !DILocation(line: 1043, column: 34, scope: !16074)
!16077 = !DILocalVariable(name: "right_quote", arg: 2, scope: !16074, file: !1228, line: 1043, type: !87)
!16078 = !DILocation(line: 1043, column: 58, scope: !16074)
!16079 = !DILocalVariable(name: "arg", arg: 3, scope: !16074, file: !1228, line: 1044, type: !87)
!16080 = !DILocation(line: 1044, column: 34, scope: !16074)
!16081 = !DILocalVariable(name: "argsize", arg: 4, scope: !16074, file: !1228, line: 1044, type: !52)
!16082 = !DILocation(line: 1044, column: 46, scope: !16074)
!16083 = !DILocation(line: 1046, column: 36, scope: !16074)
!16084 = !DILocation(line: 1046, column: 48, scope: !16074)
!16085 = !DILocation(line: 1046, column: 61, scope: !16074)
!16086 = !DILocation(line: 1047, column: 33, scope: !16074)
!16087 = !DILocation(line: 1046, column: 10, scope: !16074)
!16088 = !DILocation(line: 1046, column: 3, scope: !16074)
!16089 = distinct !DISubprogram(name: "quote_n_mem", scope: !1228, file: !1228, line: 1061, type: !1290, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16090 = !DILocalVariable(name: "n", arg: 1, scope: !16089, file: !1228, line: 1061, type: !5)
!16091 = !DILocation(line: 1061, column: 18, scope: !16089)
!16092 = !DILocalVariable(name: "arg", arg: 2, scope: !16089, file: !1228, line: 1061, type: !87)
!16093 = !DILocation(line: 1061, column: 33, scope: !16089)
!16094 = !DILocalVariable(name: "argsize", arg: 3, scope: !16089, file: !1228, line: 1061, type: !52)
!16095 = !DILocation(line: 1061, column: 45, scope: !16089)
!16096 = !DILocation(line: 1063, column: 30, scope: !16089)
!16097 = !DILocation(line: 1063, column: 33, scope: !16089)
!16098 = !DILocation(line: 1063, column: 38, scope: !16089)
!16099 = !DILocation(line: 1063, column: 10, scope: !16089)
!16100 = !DILocation(line: 1063, column: 3, scope: !16089)
!16101 = distinct !DISubprogram(name: "quote_mem", scope: !1228, file: !1228, line: 1067, type: !1292, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16102 = !DILocalVariable(name: "arg", arg: 1, scope: !16101, file: !1228, line: 1067, type: !87)
!16103 = !DILocation(line: 1067, column: 24, scope: !16101)
!16104 = !DILocalVariable(name: "argsize", arg: 2, scope: !16101, file: !1228, line: 1067, type: !52)
!16105 = !DILocation(line: 1067, column: 36, scope: !16101)
!16106 = !DILocation(line: 1069, column: 26, scope: !16101)
!16107 = !DILocation(line: 1069, column: 31, scope: !16101)
!16108 = !DILocation(line: 1069, column: 10, scope: !16101)
!16109 = !DILocation(line: 1069, column: 3, scope: !16101)
!16110 = distinct !DISubprogram(name: "quote_n", scope: !1228, file: !1228, line: 1073, type: !1294, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16111 = !DILocalVariable(name: "n", arg: 1, scope: !16110, file: !1228, line: 1073, type: !5)
!16112 = !DILocation(line: 1073, column: 14, scope: !16110)
!16113 = !DILocalVariable(name: "arg", arg: 2, scope: !16110, file: !1228, line: 1073, type: !87)
!16114 = !DILocation(line: 1073, column: 29, scope: !16110)
!16115 = !DILocation(line: 1075, column: 23, scope: !16110)
!16116 = !DILocation(line: 1075, column: 26, scope: !16110)
!16117 = !DILocation(line: 1075, column: 10, scope: !16110)
!16118 = !DILocation(line: 1075, column: 3, scope: !16110)
!16119 = distinct !DISubprogram(name: "quote", scope: !1228, file: !1228, line: 1079, type: !1296, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1203, retainedNodes: !309)
!16120 = !DILocalVariable(name: "arg", arg: 1, scope: !16119, file: !1228, line: 1079, type: !87)
!16121 = !DILocation(line: 1079, column: 20, scope: !16119)
!16122 = !DILocation(line: 1081, column: 22, scope: !16119)
!16123 = !DILocation(line: 1081, column: 10, scope: !16119)
!16124 = !DILocation(line: 1081, column: 3, scope: !16119)
!16125 = distinct !DISubprogram(name: "randread_new", scope: !1642, file: !1642, line: 204, type: !1638, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16126 = !DILocalVariable(name: "name", arg: 1, scope: !16125, file: !1642, line: 204, type: !87)
!16127 = !DILocation(line: 204, column: 27, scope: !16125)
!16128 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !16125, file: !1642, line: 204, type: !52)
!16129 = !DILocation(line: 204, column: 40, scope: !16125)
!16130 = !DILocation(line: 206, column: 7, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16125, file: !1642, line: 206, column: 7)
!16132 = !DILocation(line: 206, column: 19, scope: !16131)
!16133 = !DILocation(line: 206, column: 7, scope: !16125)
!16134 = !DILocation(line: 207, column: 12, scope: !16131)
!16135 = !DILocation(line: 207, column: 5, scope: !16131)
!16136 = !DILocalVariable(name: "source", scope: !16137, file: !1642, line: 210, type: !1645)
!16137 = distinct !DILexicalBlock(scope: !16131, file: !1642, line: 209, column: 5)
!16138 = !DILocation(line: 210, column: 13, scope: !16137)
!16139 = !DILocalVariable(name: "s", scope: !16137, file: !1642, line: 211, type: !1640)
!16140 = !DILocation(line: 211, column: 31, scope: !16137)
!16141 = !DILocation(line: 213, column: 11, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16137, file: !1642, line: 213, column: 11)
!16143 = !DILocation(line: 213, column: 11, scope: !16137)
!16144 = !DILocation(line: 214, column: 38, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16142, file: !1642, line: 214, column: 13)
!16146 = !DILocation(line: 214, column: 25, scope: !16145)
!16147 = !DILocation(line: 214, column: 23, scope: !16145)
!16148 = !DILocation(line: 214, column: 13, scope: !16142)
!16149 = !DILocation(line: 215, column: 11, scope: !16145)
!16150 = !DILocation(line: 214, column: 49, scope: !16145)
!16151 = !DILocation(line: 217, column: 23, scope: !16137)
!16152 = !DILocation(line: 217, column: 31, scope: !16137)
!16153 = !DILocation(line: 217, column: 11, scope: !16137)
!16154 = !DILocation(line: 217, column: 9, scope: !16137)
!16155 = !DILocation(line: 219, column: 11, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16137, file: !1642, line: 219, column: 11)
!16157 = !DILocation(line: 219, column: 11, scope: !16137)
!16158 = !DILocation(line: 220, column: 18, scope: !16156)
!16159 = !DILocation(line: 220, column: 26, scope: !16156)
!16160 = !DILocation(line: 220, column: 29, scope: !16156)
!16161 = !DILocation(line: 220, column: 33, scope: !16156)
!16162 = !DILocation(line: 220, column: 44, scope: !16156)
!16163 = !DILocation(line: 220, column: 9, scope: !16156)
!16164 = !DILocation(line: 223, column: 11, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16156, file: !1642, line: 222, column: 9)
!16166 = !DILocation(line: 223, column: 14, scope: !16165)
!16167 = !DILocation(line: 223, column: 18, scope: !16165)
!16168 = !DILocation(line: 223, column: 24, scope: !16165)
!16169 = !DILocation(line: 223, column: 33, scope: !16165)
!16170 = !DILocation(line: 224, column: 22, scope: !16165)
!16171 = !DILocation(line: 224, column: 25, scope: !16165)
!16172 = !DILocation(line: 224, column: 29, scope: !16165)
!16173 = !DILocation(line: 224, column: 35, scope: !16165)
!16174 = !DILocation(line: 224, column: 41, scope: !16165)
!16175 = !DILocation(line: 225, column: 22, scope: !16165)
!16176 = !DILocation(line: 224, column: 11, scope: !16165)
!16177 = !DILocation(line: 226, column: 24, scope: !16165)
!16178 = !DILocation(line: 226, column: 27, scope: !16165)
!16179 = !DILocation(line: 226, column: 31, scope: !16165)
!16180 = !DILocation(line: 226, column: 37, scope: !16165)
!16181 = !DILocation(line: 226, column: 11, scope: !16165)
!16182 = !DILocation(line: 229, column: 14, scope: !16137)
!16183 = !DILocation(line: 229, column: 7, scope: !16137)
!16184 = !DILocation(line: 231, column: 1, scope: !16125)
!16185 = distinct !DISubprogram(name: "simple_new", scope: !1642, file: !1642, line: 137, type: !1728, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16186 = !DILocalVariable(name: "source", arg: 1, scope: !16185, file: !1642, line: 137, type: !1645)
!16187 = !DILocation(line: 137, column: 19, scope: !16185)
!16188 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !16185, file: !1642, line: 137, type: !85)
!16189 = !DILocation(line: 137, column: 39, scope: !16185)
!16190 = !DILocalVariable(name: "s", scope: !16185, file: !1642, line: 139, type: !1640)
!16191 = !DILocation(line: 139, column: 27, scope: !16185)
!16192 = !DILocation(line: 139, column: 31, scope: !16185)
!16193 = !DILocation(line: 140, column: 15, scope: !16185)
!16194 = !DILocation(line: 140, column: 3, scope: !16185)
!16195 = !DILocation(line: 140, column: 6, scope: !16185)
!16196 = !DILocation(line: 140, column: 13, scope: !16185)
!16197 = !{!16198, !2356, i64 0}
!16198 = !{!"randread_source", !2356, i64 0, !2356, i64 8, !2356, i64 16, !2344, i64 24}
!16199 = !DILocation(line: 141, column: 3, scope: !16185)
!16200 = !DILocation(line: 141, column: 6, scope: !16185)
!16201 = !DILocation(line: 141, column: 14, scope: !16185)
!16202 = !{!16198, !2356, i64 8}
!16203 = !DILocation(line: 142, column: 20, scope: !16185)
!16204 = !DILocation(line: 142, column: 3, scope: !16185)
!16205 = !DILocation(line: 142, column: 6, scope: !16185)
!16206 = !DILocation(line: 142, column: 18, scope: !16185)
!16207 = !{!16198, !2356, i64 16}
!16208 = !DILocation(line: 143, column: 10, scope: !16185)
!16209 = !DILocation(line: 143, column: 3, scope: !16185)
!16210 = distinct !DISubprogram(name: "get_nonce", scope: !1642, file: !1642, line: 151, type: !1730, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !16212, line: 30, size: 128, elements: !16213)
!16212 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "")
!16213 = !{!16214, !16215}
!16214 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16211, file: !16212, line: 32, baseType: !403, size: 64)
!16215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !16211, file: !16212, line: 33, baseType: !16216, size: 64, offset: 64)
!16216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 141, baseType: !32)
!16217 = !DILocalVariable(name: "buffer", arg: 1, scope: !16210, file: !1642, line: 151, type: !47)
!16218 = !DILocation(line: 151, column: 18, scope: !16210)
!16219 = !DILocalVariable(name: "bufsize", arg: 2, scope: !16210, file: !1642, line: 151, type: !52)
!16220 = !DILocation(line: 151, column: 33, scope: !16210)
!16221 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !16210, file: !1642, line: 151, type: !52)
!16222 = !DILocation(line: 151, column: 49, scope: !16210)
!16223 = !DILocalVariable(name: "buf", scope: !16210, file: !1642, line: 153, type: !7)
!16224 = !DILocation(line: 153, column: 9, scope: !16210)
!16225 = !DILocation(line: 153, column: 15, scope: !16210)
!16226 = !DILocalVariable(name: "seeded", scope: !16210, file: !1642, line: 154, type: !1732)
!16227 = !DILocation(line: 154, column: 11, scope: !16210)
!16228 = !DILocalVariable(name: "fd", scope: !16210, file: !1642, line: 157, type: !5)
!16229 = !DILocation(line: 157, column: 7, scope: !16210)
!16230 = !DILocation(line: 157, column: 12, scope: !16210)
!16231 = !DILocation(line: 158, column: 12, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16210, file: !1642, line: 158, column: 7)
!16233 = !DILocation(line: 158, column: 9, scope: !16232)
!16234 = !DILocation(line: 158, column: 7, scope: !16210)
!16235 = !DILocation(line: 160, column: 22, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16232, file: !1642, line: 159, column: 5)
!16237 = !DILocation(line: 160, column: 26, scope: !16236)
!16238 = !DILocation(line: 160, column: 31, scope: !16236)
!16239 = !DILocation(line: 160, column: 16, scope: !16236)
!16240 = !DILocation(line: 160, column: 14, scope: !16236)
!16241 = !DILocation(line: 161, column: 11, scope: !16242)
!16242 = distinct !DILexicalBlock(scope: !16236, file: !1642, line: 161, column: 11)
!16243 = !DILocation(line: 161, column: 18, scope: !16242)
!16244 = !DILocation(line: 161, column: 11, scope: !16236)
!16245 = !DILocation(line: 162, column: 16, scope: !16242)
!16246 = !DILocation(line: 162, column: 9, scope: !16242)
!16247 = !DILocation(line: 163, column: 14, scope: !16236)
!16248 = !DILocation(line: 163, column: 7, scope: !16236)
!16249 = !DILocation(line: 164, column: 5, scope: !16236)
!16250 = !DILocation(line: 177, column: 3, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16210, file: !1642, line: 177, column: 3)
!16252 = !DILocation(line: 177, column: 3, scope: !16210)
!16253 = !DILocalVariable(name: "v", scope: !16254, file: !1642, line: 177, type: !16211)
!16254 = distinct !DILexicalBlock(scope: !16251, file: !1642, line: 177, column: 3)
!16255 = !DILocation(line: 177, column: 3, scope: !16254)
!16256 = !DILocalVariable(name: "nbytes", scope: !16254, file: !1642, line: 177, type: !52)
!16257 = !DILocation(line: 178, column: 3, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16210, file: !1642, line: 178, column: 3)
!16259 = !DILocation(line: 178, column: 3, scope: !16210)
!16260 = !DILocalVariable(name: "v", scope: !16261, file: !1642, line: 178, type: !1733)
!16261 = distinct !DILexicalBlock(scope: !16258, file: !1642, line: 178, column: 3)
!16262 = !DILocation(line: 178, column: 3, scope: !16261)
!16263 = !DILocalVariable(name: "nbytes", scope: !16261, file: !1642, line: 178, type: !52)
!16264 = !DILocation(line: 179, column: 3, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16210, file: !1642, line: 179, column: 3)
!16266 = !DILocation(line: 179, column: 3, scope: !16210)
!16267 = !DILocalVariable(name: "v", scope: !16268, file: !1642, line: 179, type: !1733)
!16268 = distinct !DILexicalBlock(scope: !16265, file: !1642, line: 179, column: 3)
!16269 = !DILocation(line: 179, column: 3, scope: !16268)
!16270 = !DILocalVariable(name: "nbytes", scope: !16268, file: !1642, line: 179, type: !52)
!16271 = !DILocation(line: 180, column: 3, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16210, file: !1642, line: 180, column: 3)
!16273 = !DILocation(line: 180, column: 3, scope: !16210)
!16274 = !DILocalVariable(name: "v", scope: !16275, file: !1642, line: 180, type: !1734)
!16275 = distinct !DILexicalBlock(scope: !16272, file: !1642, line: 180, column: 3)
!16276 = !DILocation(line: 180, column: 3, scope: !16275)
!16277 = !DILocalVariable(name: "nbytes", scope: !16275, file: !1642, line: 180, type: !52)
!16278 = !DILocation(line: 181, column: 3, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16210, file: !1642, line: 181, column: 3)
!16280 = !DILocation(line: 181, column: 3, scope: !16210)
!16281 = !DILocalVariable(name: "v", scope: !16282, file: !1642, line: 181, type: !1734)
!16282 = distinct !DILexicalBlock(scope: !16279, file: !1642, line: 181, column: 3)
!16283 = !DILocation(line: 181, column: 3, scope: !16282)
!16284 = !DILocalVariable(name: "nbytes", scope: !16282, file: !1642, line: 181, type: !52)
!16285 = !DILocation(line: 189, column: 1, scope: !16210)
!16286 = distinct !DISubprogram(name: "randread_error", scope: !1642, file: !1642, line: 124, type: !1687, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16287 = !DILocalVariable(name: "file_name", arg: 1, scope: !16286, file: !1642, line: 124, type: !85)
!16288 = !DILocation(line: 124, column: 29, scope: !16286)
!16289 = !DILocation(line: 126, column: 7, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16286, file: !1642, line: 126, column: 7)
!16291 = !DILocation(line: 126, column: 7, scope: !16286)
!16292 = !DILocation(line: 127, column: 12, scope: !16290)
!16293 = !DILocation(line: 127, column: 26, scope: !16290)
!16294 = !DILocation(line: 128, column: 12, scope: !16290)
!16295 = !DILocation(line: 128, column: 18, scope: !16290)
!16296 = !DILocation(line: 128, column: 25, scope: !16290)
!16297 = !DILocation(line: 128, column: 48, scope: !16290)
!16298 = !DILocation(line: 129, column: 19, scope: !16290)
!16299 = !DILocation(line: 129, column: 12, scope: !16290)
!16300 = !DILocation(line: 127, column: 5, scope: !16290)
!16301 = !DILocation(line: 130, column: 3, scope: !16286)
!16302 = distinct !DISubprogram(name: "randread_set_handler", scope: !1642, file: !1642, line: 242, type: !1720, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16303 = !DILocalVariable(name: "s", arg: 1, scope: !16302, file: !1642, line: 242, type: !1640)
!16304 = !DILocation(line: 242, column: 47, scope: !16302)
!16305 = !DILocalVariable(name: "handler", arg: 2, scope: !16302, file: !1642, line: 242, type: !1686)
!16306 = !DILocation(line: 242, column: 57, scope: !16302)
!16307 = !DILocation(line: 244, column: 16, scope: !16302)
!16308 = !DILocation(line: 244, column: 3, scope: !16302)
!16309 = !DILocation(line: 244, column: 6, scope: !16302)
!16310 = !DILocation(line: 244, column: 14, scope: !16302)
!16311 = !DILocation(line: 245, column: 1, scope: !16302)
!16312 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !1642, file: !1642, line: 248, type: !1722, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16313 = !DILocalVariable(name: "s", arg: 1, scope: !16312, file: !1642, line: 248, type: !1640)
!16314 = !DILocation(line: 248, column: 51, scope: !16312)
!16315 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !16312, file: !1642, line: 248, type: !85)
!16316 = !DILocation(line: 248, column: 66, scope: !16312)
!16317 = !DILocation(line: 250, column: 20, scope: !16312)
!16318 = !DILocation(line: 250, column: 3, scope: !16312)
!16319 = !DILocation(line: 250, column: 6, scope: !16312)
!16320 = !DILocation(line: 250, column: 18, scope: !16312)
!16321 = !DILocation(line: 251, column: 1, scope: !16312)
!16322 = distinct !DISubprogram(name: "randread", scope: !1642, file: !1642, line: 326, type: !1724, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16323 = !DILocalVariable(name: "s", arg: 1, scope: !16322, file: !1642, line: 326, type: !1640)
!16324 = !DILocation(line: 326, column: 35, scope: !16322)
!16325 = !DILocalVariable(name: "buf", arg: 2, scope: !16322, file: !1642, line: 326, type: !47)
!16326 = !DILocation(line: 326, column: 44, scope: !16322)
!16327 = !DILocalVariable(name: "size", arg: 3, scope: !16322, file: !1642, line: 326, type: !52)
!16328 = !DILocation(line: 326, column: 56, scope: !16322)
!16329 = !DILocation(line: 328, column: 7, scope: !16330)
!16330 = distinct !DILexicalBlock(scope: !16322, file: !1642, line: 328, column: 7)
!16331 = !DILocation(line: 328, column: 10, scope: !16330)
!16332 = !DILocation(line: 328, column: 7, scope: !16322)
!16333 = !DILocation(line: 329, column: 17, scope: !16330)
!16334 = !DILocation(line: 329, column: 20, scope: !16330)
!16335 = !DILocation(line: 329, column: 25, scope: !16330)
!16336 = !DILocation(line: 329, column: 5, scope: !16330)
!16337 = !DILocation(line: 331, column: 17, scope: !16330)
!16338 = !DILocation(line: 331, column: 20, scope: !16330)
!16339 = !DILocation(line: 331, column: 24, scope: !16330)
!16340 = !DILocation(line: 331, column: 31, scope: !16330)
!16341 = !DILocation(line: 331, column: 36, scope: !16330)
!16342 = !DILocation(line: 331, column: 5, scope: !16330)
!16343 = !DILocation(line: 332, column: 1, scope: !16322)
!16344 = distinct !DISubprogram(name: "readsource", scope: !1642, file: !1642, line: 258, type: !1735, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16345 = !DILocalVariable(name: "s", arg: 1, scope: !16344, file: !1642, line: 258, type: !1640)
!16346 = !DILocation(line: 258, column: 37, scope: !16344)
!16347 = !DILocalVariable(name: "p", arg: 2, scope: !16344, file: !1642, line: 258, type: !1737)
!16348 = !DILocation(line: 258, column: 55, scope: !16344)
!16349 = !DILocalVariable(name: "size", arg: 3, scope: !16344, file: !1642, line: 258, type: !52)
!16350 = !DILocation(line: 258, column: 65, scope: !16344)
!16351 = !DILocation(line: 260, column: 3, scope: !16344)
!16352 = !DILocalVariable(name: "inbytes", scope: !16353, file: !1642, line: 262, type: !52)
!16353 = distinct !DILexicalBlock(scope: !16344, file: !1642, line: 261, column: 5)
!16354 = !DILocation(line: 262, column: 14, scope: !16353)
!16355 = !DILocation(line: 262, column: 24, scope: !16353)
!16356 = !DILocalVariable(name: "fread_errno", scope: !16353, file: !1642, line: 263, type: !5)
!16357 = !DILocation(line: 263, column: 11, scope: !16353)
!16358 = !DILocation(line: 263, column: 25, scope: !16353)
!16359 = !DILocation(line: 264, column: 12, scope: !16353)
!16360 = !DILocation(line: 264, column: 9, scope: !16353)
!16361 = !DILocation(line: 265, column: 15, scope: !16353)
!16362 = !DILocation(line: 265, column: 12, scope: !16353)
!16363 = !DILocation(line: 266, column: 11, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16353, file: !1642, line: 266, column: 11)
!16365 = !DILocation(line: 266, column: 16, scope: !16364)
!16366 = !DILocation(line: 266, column: 11, scope: !16353)
!16367 = !DILocation(line: 267, column: 9, scope: !16364)
!16368 = !DILocation(line: 268, column: 16, scope: !16353)
!16369 = !DILocation(line: 268, column: 37, scope: !16353)
!16370 = !DILocation(line: 268, column: 7, scope: !16353)
!16371 = !DILocation(line: 268, column: 13, scope: !16353)
!16372 = !DILocation(line: 269, column: 7, scope: !16353)
!16373 = !DILocation(line: 269, column: 10, scope: !16353)
!16374 = !DILocation(line: 269, column: 19, scope: !16353)
!16375 = !DILocation(line: 269, column: 22, scope: !16353)
!16376 = distinct !{!16376, !16351, !16377}
!16377 = !DILocation(line: 270, column: 5, scope: !16344)
!16378 = !DILocation(line: 271, column: 1, scope: !16344)
!16379 = distinct !DISubprogram(name: "readisaac", scope: !1642, file: !1642, line: 278, type: !1738, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16380 = !DILocalVariable(name: "isaac", arg: 1, scope: !16379, file: !1642, line: 278, type: !1740)
!16381 = !DILocation(line: 278, column: 26, scope: !16379)
!16382 = !DILocalVariable(name: "p", arg: 2, scope: !16379, file: !1642, line: 278, type: !47)
!16383 = !DILocation(line: 278, column: 39, scope: !16379)
!16384 = !DILocalVariable(name: "size", arg: 3, scope: !16379, file: !1642, line: 278, type: !52)
!16385 = !DILocation(line: 278, column: 49, scope: !16379)
!16386 = !DILocalVariable(name: "inbytes", scope: !16379, file: !1642, line: 280, type: !52)
!16387 = !DILocation(line: 280, column: 10, scope: !16379)
!16388 = !DILocation(line: 280, column: 20, scope: !16379)
!16389 = !DILocation(line: 280, column: 27, scope: !16379)
!16390 = !{!16391, !2517, i64 0}
!16391 = !{!"isaac", !2517, i64 0, !16392, i64 8, !2344, i64 2080}
!16392 = !{!"isaac_state", !2344, i64 0, !2517, i64 2048, !2517, i64 2056, !2517, i64 2064}
!16393 = !DILocation(line: 282, column: 3, scope: !16379)
!16394 = !DILocalVariable(name: "char_p", scope: !16395, file: !1642, line: 284, type: !7)
!16395 = distinct !DILexicalBlock(scope: !16379, file: !1642, line: 283, column: 5)
!16396 = !DILocation(line: 284, column: 13, scope: !16395)
!16397 = !DILocation(line: 284, column: 22, scope: !16395)
!16398 = !DILocation(line: 286, column: 11, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16395, file: !1642, line: 286, column: 11)
!16400 = !DILocation(line: 286, column: 19, scope: !16399)
!16401 = !DILocation(line: 286, column: 16, scope: !16399)
!16402 = !DILocation(line: 286, column: 11, scope: !16395)
!16403 = !DILocation(line: 288, column: 19, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16399, file: !1642, line: 287, column: 9)
!16405 = !DILocation(line: 288, column: 22, scope: !16404)
!16406 = !DILocation(line: 288, column: 29, scope: !16404)
!16407 = !DILocation(line: 288, column: 34, scope: !16404)
!16408 = !DILocation(line: 288, column: 36, scope: !16404)
!16409 = !DILocation(line: 288, column: 52, scope: !16404)
!16410 = !DILocation(line: 288, column: 50, scope: !16404)
!16411 = !DILocation(line: 288, column: 61, scope: !16404)
!16412 = !DILocation(line: 288, column: 11, scope: !16404)
!16413 = !DILocation(line: 289, column: 29, scope: !16404)
!16414 = !DILocation(line: 289, column: 39, scope: !16404)
!16415 = !DILocation(line: 289, column: 37, scope: !16404)
!16416 = !DILocation(line: 289, column: 11, scope: !16404)
!16417 = !DILocation(line: 289, column: 18, scope: !16404)
!16418 = !DILocation(line: 289, column: 27, scope: !16404)
!16419 = !DILocation(line: 290, column: 11, scope: !16404)
!16420 = !DILocation(line: 293, column: 15, scope: !16395)
!16421 = !DILocation(line: 293, column: 18, scope: !16395)
!16422 = !DILocation(line: 293, column: 25, scope: !16395)
!16423 = !DILocation(line: 293, column: 30, scope: !16395)
!16424 = !DILocation(line: 293, column: 32, scope: !16395)
!16425 = !DILocation(line: 293, column: 48, scope: !16395)
!16426 = !DILocation(line: 293, column: 46, scope: !16395)
!16427 = !DILocation(line: 293, column: 57, scope: !16395)
!16428 = !DILocation(line: 293, column: 7, scope: !16395)
!16429 = !DILocation(line: 294, column: 11, scope: !16395)
!16430 = !DILocation(line: 294, column: 20, scope: !16395)
!16431 = !DILocation(line: 294, column: 18, scope: !16395)
!16432 = !DILocation(line: 294, column: 9, scope: !16395)
!16433 = !DILocation(line: 295, column: 15, scope: !16395)
!16434 = !DILocation(line: 295, column: 12, scope: !16395)
!16435 = !DILocation(line: 299, column: 11, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16395, file: !1642, line: 299, column: 11)
!16437 = !DILocation(line: 299, column: 11, scope: !16395)
!16438 = !DILocalVariable(name: "wp", scope: !16439, file: !1642, line: 301, type: !1741)
!16439 = distinct !DILexicalBlock(scope: !16436, file: !1642, line: 300, column: 9)
!16440 = !DILocation(line: 301, column: 23, scope: !16439)
!16441 = !DILocation(line: 301, column: 28, scope: !16439)
!16442 = !DILocation(line: 302, column: 11, scope: !16439)
!16443 = !DILocation(line: 302, column: 33, scope: !16439)
!16444 = !DILocation(line: 302, column: 30, scope: !16439)
!16445 = !DILocation(line: 304, column: 30, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16439, file: !1642, line: 303, column: 13)
!16447 = !DILocation(line: 304, column: 37, scope: !16446)
!16448 = !DILocation(line: 304, column: 44, scope: !16446)
!16449 = !DILocation(line: 304, column: 15, scope: !16446)
!16450 = !DILocation(line: 305, column: 18, scope: !16446)
!16451 = !DILocation(line: 306, column: 20, scope: !16446)
!16452 = !DILocation(line: 307, column: 19, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16446, file: !1642, line: 307, column: 19)
!16454 = !DILocation(line: 307, column: 24, scope: !16453)
!16455 = !DILocation(line: 307, column: 19, scope: !16446)
!16456 = !DILocation(line: 309, column: 19, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16453, file: !1642, line: 308, column: 17)
!16458 = !DILocation(line: 309, column: 26, scope: !16457)
!16459 = !DILocation(line: 309, column: 35, scope: !16457)
!16460 = !DILocation(line: 310, column: 19, scope: !16457)
!16461 = distinct !{!16461, !16442, !16462}
!16462 = !DILocation(line: 312, column: 13, scope: !16439)
!16463 = !DILocation(line: 313, column: 15, scope: !16439)
!16464 = !DILocation(line: 313, column: 13, scope: !16439)
!16465 = !DILocation(line: 314, column: 9, scope: !16439)
!16466 = !DILocation(line: 316, column: 22, scope: !16395)
!16467 = !DILocation(line: 316, column: 29, scope: !16395)
!16468 = !DILocation(line: 316, column: 36, scope: !16395)
!16469 = !DILocation(line: 316, column: 43, scope: !16395)
!16470 = !DILocation(line: 316, column: 48, scope: !16395)
!16471 = !DILocation(line: 316, column: 7, scope: !16395)
!16472 = !DILocation(line: 317, column: 15, scope: !16395)
!16473 = distinct !{!16473, !16393, !16474}
!16474 = !DILocation(line: 318, column: 5, scope: !16379)
!16475 = !DILocation(line: 319, column: 1, scope: !16379)
!16476 = distinct !DISubprogram(name: "randread_free", scope: !1642, file: !1642, line: 341, type: !1726, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1635, retainedNodes: !309)
!16477 = !DILocalVariable(name: "s", arg: 1, scope: !16476, file: !1642, line: 341, type: !1640)
!16478 = !DILocation(line: 341, column: 40, scope: !16476)
!16479 = !DILocalVariable(name: "source", scope: !16476, file: !1642, line: 343, type: !1645)
!16480 = !DILocation(line: 343, column: 9, scope: !16476)
!16481 = !DILocation(line: 343, column: 18, scope: !16476)
!16482 = !DILocation(line: 343, column: 21, scope: !16476)
!16483 = !DILocation(line: 344, column: 19, scope: !16476)
!16484 = !DILocation(line: 344, column: 3, scope: !16476)
!16485 = !DILocation(line: 345, column: 9, scope: !16476)
!16486 = !DILocation(line: 345, column: 3, scope: !16476)
!16487 = !DILocation(line: 346, column: 11, scope: !16476)
!16488 = !DILocation(line: 346, column: 28, scope: !16476)
!16489 = !DILocation(line: 346, column: 20, scope: !16476)
!16490 = !DILocation(line: 346, column: 3, scope: !16476)
!16491 = distinct !DISubprogram(name: "isaac_refill", scope: !16492, file: !16492, line: 90, type: !1745, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1742, retainedNodes: !309)
!16492 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!16493 = !DILocalVariable(name: "s", arg: 1, scope: !16491, file: !16492, line: 90, type: !1747)
!16494 = !DILocation(line: 90, column: 35, scope: !16491)
!16495 = !DILocalVariable(name: "result", arg: 2, scope: !16491, file: !16492, line: 90, type: !1741)
!16496 = !DILocation(line: 90, column: 49, scope: !16491)
!16497 = !DILocalVariable(name: "a", scope: !16491, file: !16492, line: 93, type: !1707)
!16498 = !DILocation(line: 93, column: 14, scope: !16491)
!16499 = !DILocation(line: 93, column: 18, scope: !16491)
!16500 = !DILocation(line: 93, column: 21, scope: !16491)
!16501 = !{!16392, !2517, i64 2048}
!16502 = !DILocalVariable(name: "b", scope: !16491, file: !16492, line: 94, type: !1707)
!16503 = !DILocation(line: 94, column: 14, scope: !16491)
!16504 = !DILocation(line: 94, column: 18, scope: !16491)
!16505 = !DILocation(line: 94, column: 21, scope: !16491)
!16506 = !{!16392, !2517, i64 2056}
!16507 = !DILocation(line: 94, column: 28, scope: !16491)
!16508 = !DILocation(line: 94, column: 31, scope: !16491)
!16509 = !DILocation(line: 94, column: 26, scope: !16491)
!16510 = !{!16392, !2517, i64 2064}
!16511 = !DILocation(line: 94, column: 23, scope: !16491)
!16512 = !DILocalVariable(name: "m", scope: !16491, file: !16492, line: 97, type: !1741)
!16513 = !DILocation(line: 97, column: 15, scope: !16491)
!16514 = !DILocation(line: 97, column: 19, scope: !16491)
!16515 = !DILocation(line: 97, column: 22, scope: !16491)
!16516 = !DILocalVariable(name: "r", scope: !16491, file: !16492, line: 98, type: !1741)
!16517 = !DILocation(line: 98, column: 15, scope: !16491)
!16518 = !DILocation(line: 98, column: 19, scope: !16491)
!16519 = !DILocation(line: 116, column: 3, scope: !16491)
!16520 = !DILocalVariable(name: "x", scope: !16521, file: !16492, line: 118, type: !1707)
!16521 = distinct !DILexicalBlock(scope: !16522, file: !16492, line: 118, column: 7)
!16522 = distinct !DILexicalBlock(scope: !16491, file: !16492, line: 117, column: 5)
!16523 = !DILocation(line: 118, column: 7, scope: !16521)
!16524 = !DILocalVariable(name: "y", scope: !16521, file: !16492, line: 118, type: !1707)
!16525 = !DILocalVariable(name: "x", scope: !16526, file: !16492, line: 119, type: !1707)
!16526 = distinct !DILexicalBlock(scope: !16522, file: !16492, line: 119, column: 7)
!16527 = !DILocation(line: 119, column: 7, scope: !16526)
!16528 = !DILocalVariable(name: "y", scope: !16526, file: !16492, line: 119, type: !1707)
!16529 = !DILocalVariable(name: "x", scope: !16530, file: !16492, line: 120, type: !1707)
!16530 = distinct !DILexicalBlock(scope: !16522, file: !16492, line: 120, column: 7)
!16531 = !DILocation(line: 120, column: 7, scope: !16530)
!16532 = !DILocalVariable(name: "y", scope: !16530, file: !16492, line: 120, type: !1707)
!16533 = !DILocalVariable(name: "x", scope: !16534, file: !16492, line: 121, type: !1707)
!16534 = distinct !DILexicalBlock(scope: !16522, file: !16492, line: 121, column: 7)
!16535 = !DILocation(line: 121, column: 7, scope: !16534)
!16536 = !DILocalVariable(name: "y", scope: !16534, file: !16492, line: 121, type: !1707)
!16537 = !DILocation(line: 122, column: 9, scope: !16522)
!16538 = !DILocation(line: 123, column: 5, scope: !16522)
!16539 = !DILocation(line: 124, column: 13, scope: !16491)
!16540 = !DILocation(line: 124, column: 21, scope: !16491)
!16541 = !DILocation(line: 124, column: 24, scope: !16491)
!16542 = !DILocation(line: 124, column: 26, scope: !16491)
!16543 = !DILocation(line: 124, column: 19, scope: !16491)
!16544 = distinct !{!16544, !16519, !16545}
!16545 = !DILocation(line: 124, column: 32, scope: !16491)
!16546 = !DILocation(line: 126, column: 3, scope: !16491)
!16547 = !DILocalVariable(name: "x", scope: !16548, file: !16492, line: 128, type: !1707)
!16548 = distinct !DILexicalBlock(scope: !16549, file: !16492, line: 128, column: 7)
!16549 = distinct !DILexicalBlock(scope: !16491, file: !16492, line: 127, column: 5)
!16550 = !DILocation(line: 128, column: 7, scope: !16548)
!16551 = !DILocalVariable(name: "y", scope: !16548, file: !16492, line: 128, type: !1707)
!16552 = !DILocalVariable(name: "x", scope: !16553, file: !16492, line: 129, type: !1707)
!16553 = distinct !DILexicalBlock(scope: !16549, file: !16492, line: 129, column: 7)
!16554 = !DILocation(line: 129, column: 7, scope: !16553)
!16555 = !DILocalVariable(name: "y", scope: !16553, file: !16492, line: 129, type: !1707)
!16556 = !DILocalVariable(name: "x", scope: !16557, file: !16492, line: 130, type: !1707)
!16557 = distinct !DILexicalBlock(scope: !16549, file: !16492, line: 130, column: 7)
!16558 = !DILocation(line: 130, column: 7, scope: !16557)
!16559 = !DILocalVariable(name: "y", scope: !16557, file: !16492, line: 130, type: !1707)
!16560 = !DILocalVariable(name: "x", scope: !16561, file: !16492, line: 131, type: !1707)
!16561 = distinct !DILexicalBlock(scope: !16549, file: !16492, line: 131, column: 7)
!16562 = !DILocation(line: 131, column: 7, scope: !16561)
!16563 = !DILocalVariable(name: "y", scope: !16561, file: !16492, line: 131, type: !1707)
!16564 = !DILocation(line: 132, column: 9, scope: !16549)
!16565 = !DILocation(line: 133, column: 5, scope: !16549)
!16566 = !DILocation(line: 134, column: 13, scope: !16491)
!16567 = !DILocation(line: 134, column: 21, scope: !16491)
!16568 = !DILocation(line: 134, column: 24, scope: !16491)
!16569 = !DILocation(line: 134, column: 26, scope: !16491)
!16570 = !DILocation(line: 134, column: 19, scope: !16491)
!16571 = distinct !{!16571, !16546, !16572}
!16572 = !DILocation(line: 134, column: 39, scope: !16491)
!16573 = !DILocation(line: 136, column: 10, scope: !16491)
!16574 = !DILocation(line: 136, column: 3, scope: !16491)
!16575 = !DILocation(line: 136, column: 6, scope: !16491)
!16576 = !DILocation(line: 136, column: 8, scope: !16491)
!16577 = !DILocation(line: 137, column: 10, scope: !16491)
!16578 = !DILocation(line: 137, column: 3, scope: !16491)
!16579 = !DILocation(line: 137, column: 6, scope: !16491)
!16580 = !DILocation(line: 137, column: 8, scope: !16491)
!16581 = !DILocation(line: 138, column: 1, scope: !16491)
!16582 = distinct !DISubprogram(name: "ind", scope: !16492, file: !16492, line: 68, type: !1756, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1742, retainedNodes: !309)
!16583 = !DILocalVariable(name: "m", arg: 1, scope: !16582, file: !16492, line: 68, type: !1758)
!16584 = !DILocation(line: 68, column: 24, scope: !16582)
!16585 = !DILocalVariable(name: "x", arg: 2, scope: !16582, file: !16492, line: 68, type: !1707)
!16586 = !DILocation(line: 68, column: 38, scope: !16582)
!16587 = !DILocalVariable(name: "void_m", scope: !16588, file: !16492, line: 75, type: !85)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !16492, line: 71, column: 5)
!16589 = distinct !DILexicalBlock(scope: !16582, file: !16492, line: 70, column: 7)
!16590 = !DILocation(line: 75, column: 19, scope: !16588)
!16591 = !DILocation(line: 75, column: 28, scope: !16588)
!16592 = !DILocalVariable(name: "base_p", scope: !16588, file: !16492, line: 76, type: !87)
!16593 = !DILocation(line: 76, column: 19, scope: !16588)
!16594 = !DILocation(line: 76, column: 28, scope: !16588)
!16595 = !DILocalVariable(name: "word_p", scope: !16588, file: !16492, line: 77, type: !85)
!16596 = !DILocation(line: 77, column: 19, scope: !16588)
!16597 = !DILocation(line: 77, column: 28, scope: !16588)
!16598 = !DILocation(line: 77, column: 38, scope: !16588)
!16599 = !DILocation(line: 77, column: 40, scope: !16588)
!16600 = !DILocation(line: 77, column: 35, scope: !16588)
!16601 = !DILocalVariable(name: "p", scope: !16588, file: !16492, line: 78, type: !1758)
!16602 = !DILocation(line: 78, column: 25, scope: !16588)
!16603 = !DILocation(line: 78, column: 29, scope: !16588)
!16604 = !DILocation(line: 79, column: 15, scope: !16588)
!16605 = !DILocation(line: 79, column: 14, scope: !16588)
!16606 = !DILocation(line: 79, column: 7, scope: !16588)
!16607 = distinct !DISubprogram(name: "just", scope: !16492, file: !16492, line: 60, type: !1760, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1742, retainedNodes: !309)
!16608 = !DILocalVariable(name: "a", arg: 1, scope: !16607, file: !16492, line: 60, type: !1707)
!16609 = !DILocation(line: 60, column: 18, scope: !16607)
!16610 = !DILocalVariable(name: "desired_bits", scope: !16607, file: !16492, line: 62, type: !1707)
!16611 = !DILocation(line: 62, column: 14, scope: !16607)
!16612 = !DILocation(line: 63, column: 10, scope: !16607)
!16613 = !DILocation(line: 63, column: 14, scope: !16607)
!16614 = !DILocation(line: 63, column: 12, scope: !16607)
!16615 = !DILocation(line: 63, column: 3, scope: !16607)
!16616 = distinct !DISubprogram(name: "isaac_seed", scope: !16492, file: !16492, line: 248, type: !1754, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1742, retainedNodes: !309)
!16617 = !DILocalVariable(name: "s", arg: 1, scope: !16616, file: !16492, line: 248, type: !1747)
!16618 = !DILocation(line: 248, column: 33, scope: !16616)
!16619 = !DILocalVariable(name: "a", scope: !16616, file: !16492, line: 250, type: !1707)
!16620 = !DILocation(line: 250, column: 14, scope: !16616)
!16621 = !DILocalVariable(name: "b", scope: !16616, file: !16492, line: 251, type: !1707)
!16622 = !DILocation(line: 251, column: 14, scope: !16616)
!16623 = !DILocalVariable(name: "c", scope: !16616, file: !16492, line: 252, type: !1707)
!16624 = !DILocation(line: 252, column: 14, scope: !16616)
!16625 = !DILocalVariable(name: "d", scope: !16616, file: !16492, line: 253, type: !1707)
!16626 = !DILocation(line: 253, column: 14, scope: !16616)
!16627 = !DILocalVariable(name: "e", scope: !16616, file: !16492, line: 254, type: !1707)
!16628 = !DILocation(line: 254, column: 14, scope: !16616)
!16629 = !DILocalVariable(name: "f", scope: !16616, file: !16492, line: 255, type: !1707)
!16630 = !DILocation(line: 255, column: 14, scope: !16616)
!16631 = !DILocalVariable(name: "g", scope: !16616, file: !16492, line: 256, type: !1707)
!16632 = !DILocation(line: 256, column: 14, scope: !16616)
!16633 = !DILocalVariable(name: "h", scope: !16616, file: !16492, line: 257, type: !1707)
!16634 = !DILocation(line: 257, column: 14, scope: !16616)
!16635 = !DILocalVariable(name: "i", scope: !16636, file: !16492, line: 269, type: !5)
!16636 = distinct !DILexicalBlock(scope: !16616, file: !16492, line: 269, column: 3)
!16637 = !DILocation(line: 269, column: 3, scope: !16636)
!16638 = !DILocation(line: 269, column: 3, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16636, file: !16492, line: 269, column: 3)
!16640 = !DILocation(line: 269, column: 3, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16639, file: !16492, line: 269, column: 3)
!16642 = !DILocation(line: 269, column: 3, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16641, file: !16492, line: 269, column: 3)
!16644 = !DILocation(line: 269, column: 3, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16643, file: !16492, line: 269, column: 3)
!16646 = distinct !{!16646, !16638, !16638}
!16647 = !DILocalVariable(name: "i", scope: !16648, file: !16492, line: 270, type: !5)
!16648 = distinct !DILexicalBlock(scope: !16616, file: !16492, line: 270, column: 3)
!16649 = !DILocation(line: 270, column: 3, scope: !16648)
!16650 = !DILocation(line: 270, column: 3, scope: !16651)
!16651 = distinct !DILexicalBlock(scope: !16648, file: !16492, line: 270, column: 3)
!16652 = !DILocation(line: 270, column: 3, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16651, file: !16492, line: 270, column: 3)
!16654 = !DILocation(line: 270, column: 3, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16653, file: !16492, line: 270, column: 3)
!16656 = !DILocation(line: 270, column: 3, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16655, file: !16492, line: 270, column: 3)
!16658 = distinct !{!16658, !16650, !16650}
!16659 = !DILocation(line: 272, column: 17, scope: !16616)
!16660 = !DILocation(line: 272, column: 20, scope: !16616)
!16661 = !DILocation(line: 272, column: 22, scope: !16616)
!16662 = !DILocation(line: 272, column: 10, scope: !16616)
!16663 = !DILocation(line: 272, column: 13, scope: !16616)
!16664 = !DILocation(line: 272, column: 15, scope: !16616)
!16665 = !DILocation(line: 272, column: 3, scope: !16616)
!16666 = !DILocation(line: 272, column: 6, scope: !16616)
!16667 = !DILocation(line: 272, column: 8, scope: !16616)
!16668 = !DILocation(line: 273, column: 1, scope: !16616)
!16669 = distinct !DISubprogram(name: "readtokens0_init", scope: !16670, file: !16670, line: 30, type: !1765, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1762, retainedNodes: !309)
!16670 = !DIFile(filename: "lib/readtokens0.c", directory: "/home/mohamad/clone/coreutils")
!16671 = !DILocalVariable(name: "t", arg: 1, scope: !16669, file: !16670, line: 30, type: !1767)
!16672 = !DILocation(line: 30, column: 34, scope: !16669)
!16673 = !DILocation(line: 32, column: 3, scope: !16669)
!16674 = !DILocation(line: 32, column: 6, scope: !16669)
!16675 = !DILocation(line: 32, column: 12, scope: !16669)
!16676 = !DILocation(line: 33, column: 3, scope: !16669)
!16677 = !DILocation(line: 33, column: 6, scope: !16669)
!16678 = !DILocation(line: 33, column: 10, scope: !16669)
!16679 = !DILocation(line: 34, column: 3, scope: !16669)
!16680 = !DILocation(line: 34, column: 6, scope: !16669)
!16681 = !DILocation(line: 34, column: 14, scope: !16669)
!16682 = !{!3146, !2356, i64 16}
!16683 = !DILocation(line: 35, column: 3, scope: !16669)
!16684 = !DILocation(line: 36, column: 3, scope: !16669)
!16685 = !DILocation(line: 37, column: 3, scope: !16669)
!16686 = !DILocation(line: 38, column: 1, scope: !16669)
!16687 = distinct !DISubprogram(name: "readtokens0_free", scope: !16670, file: !16670, line: 41, type: !1765, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1762, retainedNodes: !309)
!16688 = !DILocalVariable(name: "t", arg: 1, scope: !16687, file: !16670, line: 41, type: !1767)
!16689 = !DILocation(line: 41, column: 34, scope: !16687)
!16690 = !DILocalVariable(name: "__o", scope: !16691, file: !16670, line: 43, type: !1810)
!16691 = distinct !DILexicalBlock(scope: !16687, file: !16670, line: 43, column: 3)
!16692 = !DILocation(line: 43, column: 3, scope: !16691)
!16693 = !DILocalVariable(name: "__obj", scope: !16691, file: !16670, line: 43, type: !47)
!16694 = !DILocation(line: 43, column: 3, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16691, file: !16670, line: 43, column: 3)
!16696 = !{!3147, !2356, i64 8}
!16697 = !{!3147, !2356, i64 32}
!16698 = !{!3147, !2356, i64 16}
!16699 = !{!3147, !2356, i64 24}
!16700 = !DILocalVariable(name: "__o", scope: !16701, file: !16670, line: 44, type: !1810)
!16701 = distinct !DILexicalBlock(scope: !16687, file: !16670, line: 44, column: 3)
!16702 = !DILocation(line: 44, column: 3, scope: !16701)
!16703 = !DILocalVariable(name: "__obj", scope: !16701, file: !16670, line: 44, type: !47)
!16704 = !DILocation(line: 44, column: 3, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16701, file: !16670, line: 44, column: 3)
!16706 = !DILocalVariable(name: "__o", scope: !16707, file: !16670, line: 45, type: !1810)
!16707 = distinct !DILexicalBlock(scope: !16687, file: !16670, line: 45, column: 3)
!16708 = !DILocation(line: 45, column: 3, scope: !16707)
!16709 = !DILocalVariable(name: "__obj", scope: !16707, file: !16670, line: 45, type: !47)
!16710 = !DILocation(line: 45, column: 3, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16707, file: !16670, line: 45, column: 3)
!16712 = !DILocation(line: 46, column: 1, scope: !16687)
!16713 = distinct !DISubprogram(name: "readtokens0", scope: !16670, file: !16670, line: 66, type: !1811, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1762, retainedNodes: !309)
!16714 = !DILocalVariable(name: "in", arg: 1, scope: !16713, file: !16670, line: 66, type: !1813)
!16715 = !DILocation(line: 66, column: 20, scope: !16713)
!16716 = !DILocalVariable(name: "t", arg: 2, scope: !16713, file: !16670, line: 66, type: !1767)
!16717 = !DILocation(line: 66, column: 39, scope: !16713)
!16718 = !DILocation(line: 69, column: 3, scope: !16713)
!16719 = !DILocalVariable(name: "c", scope: !16720, file: !16670, line: 71, type: !5)
!16720 = distinct !DILexicalBlock(scope: !16713, file: !16670, line: 70, column: 5)
!16721 = !DILocation(line: 71, column: 11, scope: !16720)
!16722 = !DILocation(line: 71, column: 22, scope: !16720)
!16723 = !DILocation(line: 71, column: 15, scope: !16720)
!16724 = !DILocation(line: 72, column: 11, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16720, file: !16670, line: 72, column: 11)
!16726 = !DILocation(line: 72, column: 13, scope: !16725)
!16727 = !DILocation(line: 72, column: 11, scope: !16720)
!16728 = !DILocalVariable(name: "len", scope: !16729, file: !16670, line: 74, type: !52)
!16729 = distinct !DILexicalBlock(scope: !16725, file: !16670, line: 73, column: 9)
!16730 = !DILocation(line: 74, column: 18, scope: !16729)
!16731 = !DILocalVariable(name: "__o", scope: !16732, file: !16670, line: 74, type: !1853)
!16732 = distinct !DILexicalBlock(scope: !16729, file: !16670, line: 74, column: 24)
!16733 = !DILocation(line: 74, column: 24, scope: !16732)
!16734 = !DILocation(line: 78, column: 15, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16729, file: !16670, line: 78, column: 15)
!16736 = !DILocation(line: 78, column: 15, scope: !16729)
!16737 = !DILocalVariable(name: "__o", scope: !16738, file: !16670, line: 80, type: !1810)
!16738 = distinct !DILexicalBlock(scope: !16739, file: !16670, line: 80, column: 15)
!16739 = distinct !DILexicalBlock(scope: !16735, file: !16670, line: 79, column: 13)
!16740 = !DILocation(line: 80, column: 15, scope: !16738)
!16741 = !DILocalVariable(name: "__o1", scope: !16742, file: !16670, line: 80, type: !1853)
!16742 = distinct !DILexicalBlock(scope: !16743, file: !16670, line: 80, column: 15)
!16743 = distinct !DILexicalBlock(scope: !16738, file: !16670, line: 80, column: 15)
!16744 = !DILocation(line: 80, column: 15, scope: !16742)
!16745 = !DILocation(line: 80, column: 15, scope: !16743)
!16746 = !DILocation(line: 81, column: 27, scope: !16739)
!16747 = !DILocation(line: 81, column: 15, scope: !16739)
!16748 = !DILocation(line: 82, column: 13, scope: !16739)
!16749 = !DILocation(line: 84, column: 11, scope: !16729)
!16750 = !DILocalVariable(name: "__o", scope: !16751, file: !16670, line: 87, type: !1810)
!16751 = distinct !DILexicalBlock(scope: !16720, file: !16670, line: 87, column: 7)
!16752 = !DILocation(line: 87, column: 7, scope: !16751)
!16753 = !DILocalVariable(name: "__o1", scope: !16754, file: !16670, line: 87, type: !1853)
!16754 = distinct !DILexicalBlock(scope: !16755, file: !16670, line: 87, column: 7)
!16755 = distinct !DILexicalBlock(scope: !16751, file: !16670, line: 87, column: 7)
!16756 = !DILocation(line: 87, column: 7, scope: !16754)
!16757 = !DILocation(line: 87, column: 7, scope: !16755)
!16758 = !DILocation(line: 88, column: 11, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16720, file: !16670, line: 88, column: 11)
!16760 = !DILocation(line: 88, column: 13, scope: !16759)
!16761 = !DILocation(line: 88, column: 11, scope: !16720)
!16762 = !DILocation(line: 89, column: 21, scope: !16759)
!16763 = !DILocation(line: 89, column: 9, scope: !16759)
!16764 = distinct !{!16764, !16718, !16765}
!16765 = !DILocation(line: 90, column: 5, scope: !16713)
!16766 = !DILocalVariable(name: "__o", scope: !16767, file: !16670, line: 94, type: !1810)
!16767 = distinct !DILexicalBlock(scope: !16713, file: !16670, line: 94, column: 3)
!16768 = !DILocation(line: 94, column: 3, scope: !16767)
!16769 = !DILocalVariable(name: "__o1", scope: !16770, file: !16670, line: 94, type: !1853)
!16770 = distinct !DILexicalBlock(scope: !16771, file: !16670, line: 94, column: 3)
!16771 = distinct !DILexicalBlock(scope: !16767, file: !16670, line: 94, column: 3)
!16772 = !DILocation(line: 94, column: 3, scope: !16770)
!16773 = !DILocation(line: 94, column: 3, scope: !16771)
!16774 = !DILocalVariable(name: "__o1", scope: !16775, file: !16670, line: 94, type: !1810)
!16775 = distinct !DILexicalBlock(scope: !16767, file: !16670, line: 94, column: 3)
!16776 = !DILocation(line: 94, column: 3, scope: !16775)
!16777 = !DILocalVariable(name: "__p1", scope: !16775, file: !16670, line: 94, type: !47)
!16778 = !DILocalVariable(name: "__o1", scope: !16779, file: !16670, line: 96, type: !1810)
!16779 = distinct !DILexicalBlock(scope: !16713, file: !16670, line: 96, column: 12)
!16780 = !DILocation(line: 96, column: 12, scope: !16779)
!16781 = !DILocalVariable(name: "__value", scope: !16779, file: !16670, line: 96, type: !47)
!16782 = !DILocation(line: 96, column: 12, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16779, file: !16670, line: 96, column: 12)
!16784 = !{!3147, !2517, i64 48}
!16785 = !DILocation(line: 96, column: 12, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16779, file: !16670, line: 96, column: 12)
!16787 = !DILocation(line: 96, column: 12, scope: !16713)
!16788 = !DILocation(line: 96, column: 3, scope: !16713)
!16789 = !DILocation(line: 96, column: 6, scope: !16713)
!16790 = !DILocation(line: 96, column: 10, scope: !16713)
!16791 = !DILocalVariable(name: "__o1", scope: !16792, file: !16670, line: 97, type: !1810)
!16792 = distinct !DILexicalBlock(scope: !16713, file: !16670, line: 97, column: 16)
!16793 = !DILocation(line: 97, column: 16, scope: !16792)
!16794 = !DILocalVariable(name: "__value", scope: !16792, file: !16670, line: 97, type: !47)
!16795 = !DILocation(line: 97, column: 16, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16792, file: !16670, line: 97, column: 16)
!16797 = !DILocation(line: 97, column: 16, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16792, file: !16670, line: 97, column: 16)
!16799 = !DILocation(line: 97, column: 16, scope: !16713)
!16800 = !DILocation(line: 97, column: 3, scope: !16713)
!16801 = !DILocation(line: 97, column: 6, scope: !16713)
!16802 = !DILocation(line: 97, column: 14, scope: !16713)
!16803 = !DILocation(line: 98, column: 20, scope: !16713)
!16804 = !DILocation(line: 98, column: 12, scope: !16713)
!16805 = !DILocation(line: 98, column: 10, scope: !16713)
!16806 = !DILocation(line: 98, column: 3, scope: !16713)
!16807 = distinct !DISubprogram(name: "save_token", scope: !16670, file: !16670, line: 51, type: !1765, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1762, retainedNodes: !309)
!16808 = !DILocalVariable(name: "t", arg: 1, scope: !16807, file: !16670, line: 51, type: !1767)
!16809 = !DILocation(line: 51, column: 28, scope: !16807)
!16810 = !DILocalVariable(name: "len", scope: !16807, file: !16670, line: 54, type: !52)
!16811 = !DILocation(line: 54, column: 10, scope: !16807)
!16812 = !DILocalVariable(name: "__o", scope: !16813, file: !16670, line: 54, type: !1853)
!16813 = distinct !DILexicalBlock(scope: !16807, file: !16670, line: 54, column: 16)
!16814 = !DILocation(line: 54, column: 16, scope: !16813)
!16815 = !DILocation(line: 54, column: 49, scope: !16807)
!16816 = !DILocalVariable(name: "s", scope: !16807, file: !16670, line: 55, type: !87)
!16817 = !DILocation(line: 55, column: 15, scope: !16807)
!16818 = !DILocalVariable(name: "__o1", scope: !16819, file: !16670, line: 55, type: !1810)
!16819 = distinct !DILexicalBlock(scope: !16807, file: !16670, line: 55, column: 19)
!16820 = !DILocation(line: 55, column: 19, scope: !16819)
!16821 = !DILocalVariable(name: "__value", scope: !16819, file: !16670, line: 55, type: !47)
!16822 = !DILocation(line: 55, column: 19, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16819, file: !16670, line: 55, column: 19)
!16824 = !DILocation(line: 55, column: 19, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16819, file: !16670, line: 55, column: 19)
!16826 = !DILocalVariable(name: "__o", scope: !16827, file: !16670, line: 56, type: !1810)
!16827 = distinct !DILexicalBlock(scope: !16807, file: !16670, line: 56, column: 3)
!16828 = !DILocation(line: 56, column: 3, scope: !16827)
!16829 = !DILocalVariable(name: "__o1", scope: !16830, file: !16670, line: 56, type: !1853)
!16830 = distinct !DILexicalBlock(scope: !16831, file: !16670, line: 56, column: 3)
!16831 = distinct !DILexicalBlock(scope: !16827, file: !16670, line: 56, column: 3)
!16832 = !DILocation(line: 56, column: 3, scope: !16830)
!16833 = !DILocation(line: 56, column: 3, scope: !16831)
!16834 = !DILocalVariable(name: "__o1", scope: !16835, file: !16670, line: 56, type: !1810)
!16835 = distinct !DILexicalBlock(scope: !16827, file: !16670, line: 56, column: 3)
!16836 = !DILocation(line: 56, column: 3, scope: !16835)
!16837 = !DILocalVariable(name: "__p1", scope: !16835, file: !16670, line: 56, type: !47)
!16838 = !DILocalVariable(name: "__o", scope: !16839, file: !16670, line: 57, type: !1810)
!16839 = distinct !DILexicalBlock(scope: !16807, file: !16670, line: 57, column: 3)
!16840 = !DILocation(line: 57, column: 3, scope: !16839)
!16841 = !DILocalVariable(name: "__len", scope: !16839, file: !16670, line: 57, type: !52)
!16842 = !DILocalVariable(name: "__o1", scope: !16843, file: !16670, line: 57, type: !1853)
!16843 = distinct !DILexicalBlock(scope: !16844, file: !16670, line: 57, column: 3)
!16844 = distinct !DILexicalBlock(scope: !16839, file: !16670, line: 57, column: 3)
!16845 = !DILocation(line: 57, column: 3, scope: !16843)
!16846 = !DILocation(line: 57, column: 3, scope: !16844)
!16847 = !DILocation(line: 58, column: 3, scope: !16807)
!16848 = !DILocation(line: 58, column: 6, scope: !16807)
!16849 = !DILocation(line: 58, column: 11, scope: !16807)
!16850 = !DILocation(line: 59, column: 1, scope: !16807)
!16851 = distinct !DISubprogram(name: "mkstemp_safer", scope: !16852, file: !16852, line: 31, type: !1858, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !309)
!16852 = !DIFile(filename: "lib/mkstemp-safer.c", directory: "/home/mohamad/clone/coreutils")
!16853 = !DILocalVariable(name: "templ", arg: 1, scope: !16851, file: !16852, line: 31, type: !7)
!16854 = !DILocation(line: 31, column: 22, scope: !16851)
!16855 = !DILocation(line: 33, column: 29, scope: !16851)
!16856 = !DILocation(line: 33, column: 20, scope: !16851)
!16857 = !DILocation(line: 33, column: 10, scope: !16851)
!16858 = !DILocation(line: 33, column: 3, scope: !16851)
!16859 = distinct !DISubprogram(name: "mkostemp_safer", scope: !16852, file: !16852, line: 40, type: !1860, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !309)
!16860 = !DILocalVariable(name: "templ", arg: 1, scope: !16859, file: !16852, line: 40, type: !7)
!16861 = !DILocation(line: 40, column: 23, scope: !16859)
!16862 = !DILocalVariable(name: "flags", arg: 2, scope: !16859, file: !16852, line: 40, type: !5)
!16863 = !DILocation(line: 40, column: 34, scope: !16859)
!16864 = !DILocation(line: 42, column: 35, scope: !16859)
!16865 = !DILocation(line: 42, column: 42, scope: !16859)
!16866 = !DILocation(line: 42, column: 25, scope: !16859)
!16867 = !DILocation(line: 42, column: 50, scope: !16859)
!16868 = !DILocation(line: 42, column: 10, scope: !16859)
!16869 = !DILocation(line: 42, column: 3, scope: !16859)
!16870 = distinct !DISubprogram(name: "strnumcmp", scope: !16871, file: !16871, line: 27, type: !1865, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !309)
!16871 = !DIFile(filename: "lib/strnumcmp.c", directory: "/home/mohamad/clone/coreutils")
!16872 = !DILocalVariable(name: "a", arg: 1, scope: !16870, file: !16871, line: 27, type: !87)
!16873 = !DILocation(line: 27, column: 24, scope: !16870)
!16874 = !DILocalVariable(name: "b", arg: 2, scope: !16870, file: !16871, line: 27, type: !87)
!16875 = !DILocation(line: 27, column: 39, scope: !16870)
!16876 = !DILocalVariable(name: "decimal_point", arg: 3, scope: !16870, file: !16871, line: 28, type: !5)
!16877 = !DILocation(line: 28, column: 16, scope: !16870)
!16878 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !16870, file: !16871, line: 28, type: !5)
!16879 = !DILocation(line: 28, column: 35, scope: !16870)
!16880 = !DILocation(line: 30, column: 22, scope: !16870)
!16881 = !DILocation(line: 30, column: 25, scope: !16870)
!16882 = !DILocation(line: 30, column: 28, scope: !16870)
!16883 = !DILocation(line: 30, column: 43, scope: !16870)
!16884 = !DILocation(line: 30, column: 10, scope: !16870)
!16885 = !DILocation(line: 30, column: 3, scope: !16870)
!16886 = distinct !DISubprogram(name: "numcompare", scope: !16887, file: !16887, line: 114, type: !1865, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1862, retainedNodes: !309)
!16887 = !DIFile(filename: "./lib/strnumcmp-in.h", directory: "/home/mohamad/clone/coreutils")
!16888 = !DILocalVariable(name: "a", arg: 1, scope: !16886, file: !16887, line: 114, type: !87)
!16889 = !DILocation(line: 114, column: 25, scope: !16886)
!16890 = !DILocalVariable(name: "b", arg: 2, scope: !16886, file: !16887, line: 114, type: !87)
!16891 = !DILocation(line: 114, column: 40, scope: !16886)
!16892 = !DILocalVariable(name: "decimal_point", arg: 3, scope: !16886, file: !16887, line: 115, type: !5)
!16893 = !DILocation(line: 115, column: 17, scope: !16886)
!16894 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !16886, file: !16887, line: 115, type: !5)
!16895 = !DILocation(line: 115, column: 36, scope: !16886)
!16896 = !DILocalVariable(name: "tmpa", scope: !16886, file: !16887, line: 117, type: !317)
!16897 = !DILocation(line: 117, column: 17, scope: !16886)
!16898 = !DILocation(line: 117, column: 25, scope: !16886)
!16899 = !DILocation(line: 117, column: 24, scope: !16886)
!16900 = !DILocalVariable(name: "tmpb", scope: !16886, file: !16887, line: 118, type: !317)
!16901 = !DILocation(line: 118, column: 17, scope: !16886)
!16902 = !DILocation(line: 118, column: 25, scope: !16886)
!16903 = !DILocation(line: 118, column: 24, scope: !16886)
!16904 = !DILocalVariable(name: "tmp", scope: !16886, file: !16887, line: 119, type: !5)
!16905 = !DILocation(line: 119, column: 7, scope: !16886)
!16906 = !DILocalVariable(name: "log_a", scope: !16886, file: !16887, line: 120, type: !52)
!16907 = !DILocation(line: 120, column: 10, scope: !16886)
!16908 = !DILocalVariable(name: "log_b", scope: !16886, file: !16887, line: 121, type: !52)
!16909 = !DILocation(line: 121, column: 10, scope: !16886)
!16910 = !DILocation(line: 123, column: 7, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16886, file: !16887, line: 123, column: 7)
!16912 = !DILocation(line: 123, column: 12, scope: !16911)
!16913 = !DILocation(line: 123, column: 7, scope: !16886)
!16914 = !DILocation(line: 125, column: 7, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16911, file: !16887, line: 124, column: 5)
!16916 = !DILocation(line: 126, column: 17, scope: !16915)
!16917 = !DILocation(line: 126, column: 16, scope: !16915)
!16918 = !DILocation(line: 126, column: 14, scope: !16915)
!16919 = !DILocation(line: 126, column: 9, scope: !16915)
!16920 = !DILocation(line: 127, column: 14, scope: !16915)
!16921 = !DILocation(line: 127, column: 19, scope: !16915)
!16922 = !DILocation(line: 127, column: 35, scope: !16915)
!16923 = !DILocation(line: 127, column: 38, scope: !16915)
!16924 = !DILocation(line: 127, column: 46, scope: !16915)
!16925 = !DILocation(line: 127, column: 43, scope: !16915)
!16926 = distinct !{!16926, !16914, !16927}
!16927 = !DILocation(line: 127, column: 59, scope: !16915)
!16928 = !DILocation(line: 128, column: 11, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 128, column: 11)
!16930 = !DILocation(line: 128, column: 16, scope: !16929)
!16931 = !DILocation(line: 128, column: 11, scope: !16915)
!16932 = !DILocation(line: 130, column: 15, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !16887, line: 130, column: 15)
!16934 = distinct !DILexicalBlock(scope: !16929, file: !16887, line: 129, column: 9)
!16935 = !DILocation(line: 130, column: 23, scope: !16933)
!16936 = !DILocation(line: 130, column: 20, scope: !16933)
!16937 = !DILocation(line: 130, column: 15, scope: !16934)
!16938 = !DILocation(line: 131, column: 13, scope: !16933)
!16939 = !DILocation(line: 132, column: 23, scope: !16933)
!16940 = !DILocation(line: 132, column: 22, scope: !16933)
!16941 = !DILocation(line: 132, column: 20, scope: !16933)
!16942 = !DILocation(line: 132, column: 15, scope: !16933)
!16943 = !DILocation(line: 133, column: 20, scope: !16933)
!16944 = !DILocation(line: 133, column: 25, scope: !16933)
!16945 = distinct !{!16945, !16938, !16946}
!16946 = !DILocation(line: 133, column: 40, scope: !16933)
!16947 = !DILocation(line: 134, column: 15, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16934, file: !16887, line: 134, column: 15)
!16949 = !DILocation(line: 134, column: 15, scope: !16934)
!16950 = !DILocation(line: 135, column: 13, scope: !16948)
!16951 = !DILocation(line: 136, column: 11, scope: !16934)
!16952 = !DILocation(line: 136, column: 18, scope: !16934)
!16953 = !DILocation(line: 136, column: 23, scope: !16934)
!16954 = !DILocation(line: 136, column: 39, scope: !16934)
!16955 = !DILocation(line: 136, column: 42, scope: !16934)
!16956 = !DILocation(line: 136, column: 50, scope: !16934)
!16957 = !DILocation(line: 136, column: 47, scope: !16934)
!16958 = !DILocation(line: 137, column: 21, scope: !16934)
!16959 = !DILocation(line: 137, column: 20, scope: !16934)
!16960 = !DILocation(line: 137, column: 18, scope: !16934)
!16961 = distinct !{!16961, !16951, !16962}
!16962 = !DILocation(line: 137, column: 23, scope: !16934)
!16963 = !DILocation(line: 138, column: 15, scope: !16964)
!16964 = distinct !DILexicalBlock(scope: !16934, file: !16887, line: 138, column: 15)
!16965 = !DILocation(line: 138, column: 23, scope: !16964)
!16966 = !DILocation(line: 138, column: 20, scope: !16964)
!16967 = !DILocation(line: 138, column: 15, scope: !16934)
!16968 = !DILocation(line: 139, column: 13, scope: !16964)
!16969 = !DILocation(line: 140, column: 23, scope: !16964)
!16970 = !DILocation(line: 140, column: 22, scope: !16964)
!16971 = !DILocation(line: 140, column: 20, scope: !16964)
!16972 = !DILocation(line: 140, column: 15, scope: !16964)
!16973 = !DILocation(line: 141, column: 20, scope: !16964)
!16974 = !DILocation(line: 141, column: 25, scope: !16964)
!16975 = distinct !{!16975, !16968, !16976}
!16976 = !DILocation(line: 141, column: 40, scope: !16964)
!16977 = !DILocation(line: 142, column: 20, scope: !16934)
!16978 = !DILocation(line: 142, column: 18, scope: !16934)
!16979 = !DILocation(line: 142, column: 11, scope: !16934)
!16980 = !DILocation(line: 144, column: 7, scope: !16915)
!16981 = !DILocation(line: 145, column: 17, scope: !16915)
!16982 = !DILocation(line: 145, column: 16, scope: !16915)
!16983 = !DILocation(line: 145, column: 14, scope: !16915)
!16984 = !DILocation(line: 145, column: 9, scope: !16915)
!16985 = !DILocation(line: 146, column: 14, scope: !16915)
!16986 = !DILocation(line: 146, column: 19, scope: !16915)
!16987 = !DILocation(line: 146, column: 35, scope: !16915)
!16988 = !DILocation(line: 146, column: 38, scope: !16915)
!16989 = !DILocation(line: 146, column: 46, scope: !16915)
!16990 = !DILocation(line: 146, column: 43, scope: !16915)
!16991 = distinct !{!16991, !16980, !16992}
!16992 = !DILocation(line: 146, column: 59, scope: !16915)
!16993 = !DILocation(line: 148, column: 7, scope: !16915)
!16994 = !DILocation(line: 148, column: 14, scope: !16915)
!16995 = !DILocation(line: 148, column: 22, scope: !16915)
!16996 = !DILocation(line: 148, column: 19, scope: !16915)
!16997 = !DILocation(line: 148, column: 27, scope: !16915)
!16998 = !DILocation(line: 148, column: 30, scope: !16915)
!16999 = !DILocation(line: 0, scope: !16915)
!17000 = !DILocation(line: 150, column: 11, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 149, column: 9)
!17002 = !DILocation(line: 151, column: 21, scope: !17001)
!17003 = !DILocation(line: 151, column: 20, scope: !17001)
!17004 = !DILocation(line: 151, column: 18, scope: !17001)
!17005 = !DILocation(line: 151, column: 13, scope: !17001)
!17006 = !DILocation(line: 152, column: 18, scope: !17001)
!17007 = !DILocation(line: 152, column: 26, scope: !17001)
!17008 = !DILocation(line: 152, column: 23, scope: !17001)
!17009 = distinct !{!17009, !17000, !17010}
!17010 = !DILocation(line: 152, column: 39, scope: !17001)
!17011 = !DILocation(line: 153, column: 11, scope: !17001)
!17012 = !DILocation(line: 154, column: 21, scope: !17001)
!17013 = !DILocation(line: 154, column: 20, scope: !17001)
!17014 = !DILocation(line: 154, column: 18, scope: !17001)
!17015 = !DILocation(line: 154, column: 13, scope: !17001)
!17016 = !DILocation(line: 155, column: 18, scope: !17001)
!17017 = !DILocation(line: 155, column: 26, scope: !17001)
!17018 = !DILocation(line: 155, column: 23, scope: !17001)
!17019 = distinct !{!17019, !17011, !17020}
!17020 = !DILocation(line: 155, column: 39, scope: !17001)
!17021 = distinct !{!17021, !16993, !17022}
!17022 = !DILocation(line: 156, column: 9, scope: !16915)
!17023 = !DILocation(line: 158, column: 12, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 158, column: 11)
!17025 = !DILocation(line: 158, column: 20, scope: !17024)
!17026 = !DILocation(line: 158, column: 17, scope: !17024)
!17027 = !DILocation(line: 158, column: 34, scope: !17024)
!17028 = !DILocation(line: 158, column: 38, scope: !17024)
!17029 = !DILocation(line: 159, column: 11, scope: !17024)
!17030 = !DILocation(line: 159, column: 15, scope: !17024)
!17031 = !DILocation(line: 159, column: 23, scope: !17024)
!17032 = !DILocation(line: 159, column: 20, scope: !17024)
!17033 = !DILocation(line: 159, column: 37, scope: !17024)
!17034 = !DILocation(line: 159, column: 41, scope: !17024)
!17035 = !DILocation(line: 158, column: 11, scope: !16915)
!17036 = !DILocation(line: 160, column: 29, scope: !17024)
!17037 = !DILocation(line: 160, column: 32, scope: !17024)
!17038 = !DILocation(line: 160, column: 35, scope: !17024)
!17039 = !DILocation(line: 160, column: 16, scope: !17024)
!17040 = !DILocation(line: 160, column: 9, scope: !17024)
!17041 = !DILocation(line: 162, column: 13, scope: !16915)
!17042 = !DILocation(line: 162, column: 20, scope: !16915)
!17043 = !DILocation(line: 162, column: 18, scope: !16915)
!17044 = !DILocation(line: 162, column: 11, scope: !16915)
!17045 = !DILocation(line: 164, column: 18, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 164, column: 7)
!17047 = !DILocation(line: 164, column: 12, scope: !17046)
!17048 = !DILocation(line: 164, column: 23, scope: !17049)
!17049 = distinct !DILexicalBlock(scope: !17046, file: !16887, line: 164, column: 7)
!17050 = !DILocation(line: 164, column: 7, scope: !17046)
!17051 = !DILocation(line: 165, column: 9, scope: !17049)
!17052 = !DILocation(line: 166, column: 19, scope: !17049)
!17053 = !DILocation(line: 166, column: 18, scope: !17049)
!17054 = !DILocation(line: 166, column: 16, scope: !17049)
!17055 = !DILocation(line: 166, column: 11, scope: !17049)
!17056 = !DILocation(line: 167, column: 16, scope: !17049)
!17057 = !DILocation(line: 167, column: 24, scope: !17049)
!17058 = !DILocation(line: 167, column: 21, scope: !17049)
!17059 = distinct !{!17059, !17051, !17060}
!17060 = !DILocation(line: 167, column: 37, scope: !17049)
!17061 = !DILocation(line: 164, column: 39, scope: !17049)
!17062 = !DILocation(line: 164, column: 7, scope: !17049)
!17063 = distinct !{!17063, !17050, !17064}
!17064 = !DILocation(line: 167, column: 37, scope: !17046)
!17065 = !DILocation(line: 169, column: 18, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 169, column: 7)
!17067 = !DILocation(line: 169, column: 12, scope: !17066)
!17068 = !DILocation(line: 169, column: 23, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17066, file: !16887, line: 169, column: 7)
!17070 = !DILocation(line: 169, column: 7, scope: !17066)
!17071 = !DILocation(line: 170, column: 9, scope: !17069)
!17072 = !DILocation(line: 171, column: 19, scope: !17069)
!17073 = !DILocation(line: 171, column: 18, scope: !17069)
!17074 = !DILocation(line: 171, column: 16, scope: !17069)
!17075 = !DILocation(line: 171, column: 11, scope: !17069)
!17076 = !DILocation(line: 172, column: 16, scope: !17069)
!17077 = !DILocation(line: 172, column: 24, scope: !17069)
!17078 = !DILocation(line: 172, column: 21, scope: !17069)
!17079 = distinct !{!17079, !17071, !17080}
!17080 = !DILocation(line: 172, column: 37, scope: !17069)
!17081 = !DILocation(line: 169, column: 39, scope: !17069)
!17082 = !DILocation(line: 169, column: 7, scope: !17069)
!17083 = distinct !{!17083, !17070, !17084}
!17084 = !DILocation(line: 172, column: 37, scope: !17066)
!17085 = !DILocation(line: 174, column: 11, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 174, column: 11)
!17087 = !DILocation(line: 174, column: 20, scope: !17086)
!17088 = !DILocation(line: 174, column: 17, scope: !17086)
!17089 = !DILocation(line: 174, column: 11, scope: !16915)
!17090 = !DILocation(line: 175, column: 16, scope: !17086)
!17091 = !DILocation(line: 175, column: 24, scope: !17086)
!17092 = !DILocation(line: 175, column: 22, scope: !17086)
!17093 = !DILocation(line: 175, column: 9, scope: !17086)
!17094 = !DILocation(line: 177, column: 12, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !16915, file: !16887, line: 177, column: 11)
!17096 = !DILocation(line: 177, column: 11, scope: !16915)
!17097 = !DILocation(line: 178, column: 9, scope: !17095)
!17098 = !DILocation(line: 180, column: 14, scope: !16915)
!17099 = !DILocation(line: 180, column: 7, scope: !16915)
!17100 = !DILocation(line: 182, column: 12, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !16911, file: !16887, line: 182, column: 12)
!17102 = !DILocation(line: 182, column: 17, scope: !17101)
!17103 = !DILocation(line: 182, column: 12, scope: !16911)
!17104 = !DILocation(line: 184, column: 7, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17101, file: !16887, line: 183, column: 5)
!17106 = !DILocation(line: 185, column: 17, scope: !17105)
!17107 = !DILocation(line: 185, column: 16, scope: !17105)
!17108 = !DILocation(line: 185, column: 14, scope: !17105)
!17109 = !DILocation(line: 185, column: 9, scope: !17105)
!17110 = !DILocation(line: 186, column: 14, scope: !17105)
!17111 = !DILocation(line: 186, column: 19, scope: !17105)
!17112 = !DILocation(line: 186, column: 35, scope: !17105)
!17113 = !DILocation(line: 186, column: 38, scope: !17105)
!17114 = !DILocation(line: 186, column: 46, scope: !17105)
!17115 = !DILocation(line: 186, column: 43, scope: !17105)
!17116 = distinct !{!17116, !17104, !17117}
!17117 = !DILocation(line: 186, column: 59, scope: !17105)
!17118 = !DILocation(line: 187, column: 11, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17105, file: !16887, line: 187, column: 11)
!17120 = !DILocation(line: 187, column: 19, scope: !17119)
!17121 = !DILocation(line: 187, column: 16, scope: !17119)
!17122 = !DILocation(line: 187, column: 11, scope: !17105)
!17123 = !DILocation(line: 188, column: 9, scope: !17119)
!17124 = !DILocation(line: 189, column: 19, scope: !17119)
!17125 = !DILocation(line: 189, column: 18, scope: !17119)
!17126 = !DILocation(line: 189, column: 16, scope: !17119)
!17127 = !DILocation(line: 189, column: 11, scope: !17119)
!17128 = !DILocation(line: 190, column: 16, scope: !17119)
!17129 = !DILocation(line: 190, column: 21, scope: !17119)
!17130 = distinct !{!17130, !17123, !17131}
!17131 = !DILocation(line: 190, column: 36, scope: !17119)
!17132 = !DILocation(line: 191, column: 11, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17105, file: !16887, line: 191, column: 11)
!17134 = !DILocation(line: 191, column: 11, scope: !17105)
!17135 = !DILocation(line: 192, column: 9, scope: !17133)
!17136 = !DILocation(line: 193, column: 7, scope: !17105)
!17137 = !DILocation(line: 193, column: 14, scope: !17105)
!17138 = !DILocation(line: 193, column: 19, scope: !17105)
!17139 = !DILocation(line: 193, column: 35, scope: !17105)
!17140 = !DILocation(line: 193, column: 38, scope: !17105)
!17141 = !DILocation(line: 193, column: 46, scope: !17105)
!17142 = !DILocation(line: 193, column: 43, scope: !17105)
!17143 = !DILocation(line: 194, column: 17, scope: !17105)
!17144 = !DILocation(line: 194, column: 16, scope: !17105)
!17145 = !DILocation(line: 194, column: 14, scope: !17105)
!17146 = distinct !{!17146, !17136, !17147}
!17147 = !DILocation(line: 194, column: 19, scope: !17105)
!17148 = !DILocation(line: 195, column: 11, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17105, file: !16887, line: 195, column: 11)
!17150 = !DILocation(line: 195, column: 19, scope: !17149)
!17151 = !DILocation(line: 195, column: 16, scope: !17149)
!17152 = !DILocation(line: 195, column: 11, scope: !17105)
!17153 = !DILocation(line: 196, column: 9, scope: !17149)
!17154 = !DILocation(line: 197, column: 19, scope: !17149)
!17155 = !DILocation(line: 197, column: 18, scope: !17149)
!17156 = !DILocation(line: 197, column: 16, scope: !17149)
!17157 = !DILocation(line: 197, column: 11, scope: !17149)
!17158 = !DILocation(line: 198, column: 16, scope: !17149)
!17159 = !DILocation(line: 198, column: 21, scope: !17149)
!17160 = distinct !{!17160, !17153, !17161}
!17161 = !DILocation(line: 198, column: 36, scope: !17149)
!17162 = !DILocation(line: 199, column: 14, scope: !17105)
!17163 = !DILocation(line: 199, column: 7, scope: !17105)
!17164 = !DILocation(line: 203, column: 7, scope: !17165)
!17165 = distinct !DILexicalBlock(scope: !17101, file: !16887, line: 202, column: 5)
!17166 = !DILocation(line: 203, column: 14, scope: !17165)
!17167 = !DILocation(line: 203, column: 19, scope: !17165)
!17168 = !DILocation(line: 203, column: 35, scope: !17165)
!17169 = !DILocation(line: 203, column: 38, scope: !17165)
!17170 = !DILocation(line: 203, column: 46, scope: !17165)
!17171 = !DILocation(line: 203, column: 43, scope: !17165)
!17172 = !DILocation(line: 204, column: 17, scope: !17165)
!17173 = !DILocation(line: 204, column: 16, scope: !17165)
!17174 = !DILocation(line: 204, column: 14, scope: !17165)
!17175 = distinct !{!17175, !17164, !17176}
!17176 = !DILocation(line: 204, column: 19, scope: !17165)
!17177 = !DILocation(line: 205, column: 7, scope: !17165)
!17178 = !DILocation(line: 205, column: 14, scope: !17165)
!17179 = !DILocation(line: 205, column: 19, scope: !17165)
!17180 = !DILocation(line: 205, column: 35, scope: !17165)
!17181 = !DILocation(line: 205, column: 38, scope: !17165)
!17182 = !DILocation(line: 205, column: 46, scope: !17165)
!17183 = !DILocation(line: 205, column: 43, scope: !17165)
!17184 = !DILocation(line: 206, column: 17, scope: !17165)
!17185 = !DILocation(line: 206, column: 16, scope: !17165)
!17186 = !DILocation(line: 206, column: 14, scope: !17165)
!17187 = distinct !{!17187, !17177, !17188}
!17188 = !DILocation(line: 206, column: 19, scope: !17165)
!17189 = !DILocation(line: 208, column: 7, scope: !17165)
!17190 = !DILocation(line: 208, column: 14, scope: !17165)
!17191 = !DILocation(line: 208, column: 22, scope: !17165)
!17192 = !DILocation(line: 208, column: 19, scope: !17165)
!17193 = !DILocation(line: 208, column: 27, scope: !17165)
!17194 = !DILocation(line: 208, column: 30, scope: !17165)
!17195 = !DILocation(line: 0, scope: !17165)
!17196 = !DILocation(line: 210, column: 11, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17165, file: !16887, line: 209, column: 9)
!17198 = !DILocation(line: 211, column: 21, scope: !17197)
!17199 = !DILocation(line: 211, column: 20, scope: !17197)
!17200 = !DILocation(line: 211, column: 18, scope: !17197)
!17201 = !DILocation(line: 211, column: 13, scope: !17197)
!17202 = !DILocation(line: 212, column: 18, scope: !17197)
!17203 = !DILocation(line: 212, column: 26, scope: !17197)
!17204 = !DILocation(line: 212, column: 23, scope: !17197)
!17205 = distinct !{!17205, !17196, !17206}
!17206 = !DILocation(line: 212, column: 39, scope: !17197)
!17207 = !DILocation(line: 213, column: 11, scope: !17197)
!17208 = !DILocation(line: 214, column: 21, scope: !17197)
!17209 = !DILocation(line: 214, column: 20, scope: !17197)
!17210 = !DILocation(line: 214, column: 18, scope: !17197)
!17211 = !DILocation(line: 214, column: 13, scope: !17197)
!17212 = !DILocation(line: 215, column: 18, scope: !17197)
!17213 = !DILocation(line: 215, column: 26, scope: !17197)
!17214 = !DILocation(line: 215, column: 23, scope: !17197)
!17215 = distinct !{!17215, !17207, !17216}
!17216 = !DILocation(line: 215, column: 39, scope: !17197)
!17217 = distinct !{!17217, !17189, !17218}
!17218 = !DILocation(line: 216, column: 9, scope: !17165)
!17219 = !DILocation(line: 218, column: 12, scope: !17220)
!17220 = distinct !DILexicalBlock(scope: !17165, file: !16887, line: 218, column: 11)
!17221 = !DILocation(line: 218, column: 20, scope: !17220)
!17222 = !DILocation(line: 218, column: 17, scope: !17220)
!17223 = !DILocation(line: 218, column: 34, scope: !17220)
!17224 = !DILocation(line: 218, column: 38, scope: !17220)
!17225 = !DILocation(line: 219, column: 11, scope: !17220)
!17226 = !DILocation(line: 219, column: 15, scope: !17220)
!17227 = !DILocation(line: 219, column: 23, scope: !17220)
!17228 = !DILocation(line: 219, column: 20, scope: !17220)
!17229 = !DILocation(line: 219, column: 37, scope: !17220)
!17230 = !DILocation(line: 219, column: 41, scope: !17220)
!17231 = !DILocation(line: 218, column: 11, scope: !17165)
!17232 = !DILocation(line: 220, column: 29, scope: !17220)
!17233 = !DILocation(line: 220, column: 32, scope: !17220)
!17234 = !DILocation(line: 220, column: 35, scope: !17220)
!17235 = !DILocation(line: 220, column: 16, scope: !17220)
!17236 = !DILocation(line: 220, column: 9, scope: !17220)
!17237 = !DILocation(line: 222, column: 13, scope: !17165)
!17238 = !DILocation(line: 222, column: 20, scope: !17165)
!17239 = !DILocation(line: 222, column: 18, scope: !17165)
!17240 = !DILocation(line: 222, column: 11, scope: !17165)
!17241 = !DILocation(line: 224, column: 18, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17165, file: !16887, line: 224, column: 7)
!17243 = !DILocation(line: 224, column: 12, scope: !17242)
!17244 = !DILocation(line: 224, column: 23, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17242, file: !16887, line: 224, column: 7)
!17246 = !DILocation(line: 224, column: 7, scope: !17242)
!17247 = !DILocation(line: 225, column: 9, scope: !17245)
!17248 = !DILocation(line: 226, column: 19, scope: !17245)
!17249 = !DILocation(line: 226, column: 18, scope: !17245)
!17250 = !DILocation(line: 226, column: 16, scope: !17245)
!17251 = !DILocation(line: 226, column: 11, scope: !17245)
!17252 = !DILocation(line: 227, column: 16, scope: !17245)
!17253 = !DILocation(line: 227, column: 24, scope: !17245)
!17254 = !DILocation(line: 227, column: 21, scope: !17245)
!17255 = distinct !{!17255, !17247, !17256}
!17256 = !DILocation(line: 227, column: 37, scope: !17245)
!17257 = !DILocation(line: 224, column: 39, scope: !17245)
!17258 = !DILocation(line: 224, column: 7, scope: !17245)
!17259 = distinct !{!17259, !17246, !17260}
!17260 = !DILocation(line: 227, column: 37, scope: !17242)
!17261 = !DILocation(line: 229, column: 18, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17165, file: !16887, line: 229, column: 7)
!17263 = !DILocation(line: 229, column: 12, scope: !17262)
!17264 = !DILocation(line: 229, column: 23, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17262, file: !16887, line: 229, column: 7)
!17266 = !DILocation(line: 229, column: 7, scope: !17262)
!17267 = !DILocation(line: 230, column: 9, scope: !17265)
!17268 = !DILocation(line: 231, column: 19, scope: !17265)
!17269 = !DILocation(line: 231, column: 18, scope: !17265)
!17270 = !DILocation(line: 231, column: 16, scope: !17265)
!17271 = !DILocation(line: 231, column: 11, scope: !17265)
!17272 = !DILocation(line: 232, column: 16, scope: !17265)
!17273 = !DILocation(line: 232, column: 24, scope: !17265)
!17274 = !DILocation(line: 232, column: 21, scope: !17265)
!17275 = distinct !{!17275, !17267, !17276}
!17276 = !DILocation(line: 232, column: 37, scope: !17265)
!17277 = !DILocation(line: 229, column: 39, scope: !17265)
!17278 = !DILocation(line: 229, column: 7, scope: !17265)
!17279 = distinct !{!17279, !17266, !17280}
!17280 = !DILocation(line: 232, column: 37, scope: !17262)
!17281 = !DILocation(line: 234, column: 11, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17165, file: !16887, line: 234, column: 11)
!17283 = !DILocation(line: 234, column: 20, scope: !17282)
!17284 = !DILocation(line: 234, column: 17, scope: !17282)
!17285 = !DILocation(line: 234, column: 11, scope: !17165)
!17286 = !DILocation(line: 235, column: 16, scope: !17282)
!17287 = !DILocation(line: 235, column: 24, scope: !17282)
!17288 = !DILocation(line: 235, column: 22, scope: !17282)
!17289 = !DILocation(line: 235, column: 9, scope: !17282)
!17290 = !DILocation(line: 237, column: 12, scope: !17291)
!17291 = distinct !DILexicalBlock(scope: !17165, file: !16887, line: 237, column: 11)
!17292 = !DILocation(line: 237, column: 11, scope: !17165)
!17293 = !DILocation(line: 238, column: 9, scope: !17291)
!17294 = !DILocation(line: 240, column: 14, scope: !17165)
!17295 = !DILocation(line: 240, column: 7, scope: !17165)
!17296 = !DILocation(line: 242, column: 1, scope: !16886)
!17297 = distinct !DISubprogram(name: "fraccompare", scope: !16887, file: !16887, line: 74, type: !1867, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1862, retainedNodes: !309)
!17298 = !DILocalVariable(name: "a", arg: 1, scope: !17297, file: !16887, line: 74, type: !87)
!17299 = !DILocation(line: 74, column: 26, scope: !17297)
!17300 = !DILocalVariable(name: "b", arg: 2, scope: !17297, file: !16887, line: 74, type: !87)
!17301 = !DILocation(line: 74, column: 41, scope: !17297)
!17302 = !DILocalVariable(name: "decimal_point", arg: 3, scope: !17297, file: !16887, line: 74, type: !8)
!17303 = !DILocation(line: 74, column: 49, scope: !17297)
!17304 = !DILocation(line: 76, column: 8, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17297, file: !16887, line: 76, column: 7)
!17306 = !DILocation(line: 76, column: 7, scope: !17305)
!17307 = !DILocation(line: 76, column: 13, scope: !17305)
!17308 = !DILocation(line: 76, column: 10, scope: !17305)
!17309 = !DILocation(line: 76, column: 27, scope: !17305)
!17310 = !DILocation(line: 76, column: 31, scope: !17305)
!17311 = !DILocation(line: 76, column: 30, scope: !17305)
!17312 = !DILocation(line: 76, column: 36, scope: !17305)
!17313 = !DILocation(line: 76, column: 33, scope: !17305)
!17314 = !DILocation(line: 76, column: 7, scope: !17297)
!17315 = !DILocation(line: 78, column: 7, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17305, file: !16887, line: 77, column: 5)
!17317 = !DILocation(line: 78, column: 15, scope: !17316)
!17318 = !DILocation(line: 78, column: 14, scope: !17316)
!17319 = !DILocation(line: 78, column: 23, scope: !17316)
!17320 = !DILocation(line: 78, column: 22, scope: !17316)
!17321 = !DILocation(line: 78, column: 19, scope: !17316)
!17322 = !DILocation(line: 79, column: 15, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17316, file: !16887, line: 79, column: 13)
!17324 = !DILocation(line: 79, column: 13, scope: !17316)
!17325 = !DILocation(line: 80, column: 11, scope: !17323)
!17326 = distinct !{!17326, !17315, !17327}
!17327 = !DILocation(line: 80, column: 18, scope: !17316)
!17328 = !DILocation(line: 81, column: 11, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17316, file: !16887, line: 81, column: 11)
!17330 = !DILocation(line: 81, column: 24, scope: !17329)
!17331 = !DILocation(line: 81, column: 27, scope: !17329)
!17332 = !DILocation(line: 81, column: 11, scope: !17316)
!17333 = !DILocation(line: 82, column: 17, scope: !17329)
!17334 = !DILocation(line: 82, column: 16, scope: !17329)
!17335 = !DILocation(line: 82, column: 22, scope: !17329)
!17336 = !DILocation(line: 82, column: 21, scope: !17329)
!17337 = !DILocation(line: 82, column: 19, scope: !17329)
!17338 = !DILocation(line: 82, column: 9, scope: !17329)
!17339 = !DILocation(line: 83, column: 11, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17316, file: !16887, line: 83, column: 11)
!17341 = !DILocation(line: 83, column: 11, scope: !17316)
!17342 = !DILocation(line: 84, column: 9, scope: !17340)
!17343 = !DILocation(line: 85, column: 11, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17316, file: !16887, line: 85, column: 11)
!17345 = !DILocation(line: 85, column: 11, scope: !17316)
!17346 = !DILocation(line: 86, column: 9, scope: !17344)
!17347 = !DILocation(line: 87, column: 7, scope: !17316)
!17348 = !DILocation(line: 89, column: 14, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17305, file: !16887, line: 89, column: 12)
!17350 = !DILocation(line: 89, column: 12, scope: !17349)
!17351 = !DILocation(line: 89, column: 20, scope: !17349)
!17352 = !DILocation(line: 89, column: 17, scope: !17349)
!17353 = !DILocation(line: 89, column: 12, scope: !17305)
!17354 = !DILocation(line: 90, column: 5, scope: !17349)
!17355 = !DILabel(scope: !17356, name: "a_trailing_nonzero", file: !16887, line: 91)
!17356 = distinct !DILexicalBlock(scope: !17349, file: !16887, line: 90, column: 5)
!17357 = !DILocation(line: 91, column: 5, scope: !17356)
!17358 = !DILocation(line: 92, column: 7, scope: !17356)
!17359 = !DILocation(line: 92, column: 15, scope: !17356)
!17360 = !DILocation(line: 92, column: 14, scope: !17356)
!17361 = !DILocation(line: 92, column: 17, scope: !17356)
!17362 = !DILocation(line: 93, column: 10, scope: !17356)
!17363 = distinct !{!17363, !17358, !17362}
!17364 = !DILocation(line: 94, column: 14, scope: !17356)
!17365 = !DILocation(line: 94, column: 7, scope: !17356)
!17366 = !DILocation(line: 96, column: 14, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17349, file: !16887, line: 96, column: 12)
!17368 = !DILocation(line: 96, column: 12, scope: !17367)
!17369 = !DILocation(line: 96, column: 20, scope: !17367)
!17370 = !DILocation(line: 96, column: 17, scope: !17367)
!17371 = !DILocation(line: 96, column: 12, scope: !17349)
!17372 = !DILocation(line: 97, column: 5, scope: !17367)
!17373 = !DILabel(scope: !17374, name: "b_trailing_nonzero", file: !16887, line: 98)
!17374 = distinct !DILexicalBlock(scope: !17367, file: !16887, line: 97, column: 5)
!17375 = !DILocation(line: 98, column: 5, scope: !17374)
!17376 = !DILocation(line: 99, column: 7, scope: !17374)
!17377 = !DILocation(line: 99, column: 15, scope: !17374)
!17378 = !DILocation(line: 99, column: 14, scope: !17374)
!17379 = !DILocation(line: 99, column: 17, scope: !17374)
!17380 = !DILocation(line: 100, column: 10, scope: !17374)
!17381 = distinct !{!17381, !17376, !17380}
!17382 = !DILocation(line: 101, column: 16, scope: !17374)
!17383 = !DILocation(line: 101, column: 14, scope: !17374)
!17384 = !DILocation(line: 101, column: 7, scope: !17374)
!17385 = !DILocation(line: 103, column: 3, scope: !17297)
!17386 = !DILocation(line: 104, column: 1, scope: !17297)
!17387 = distinct !DISubprogram(name: "fd_safer", scope: !17388, file: !17388, line: 37, type: !1872, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1869, retainedNodes: !309)
!17388 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!17389 = !DILocalVariable(name: "fd", arg: 1, scope: !17387, file: !17388, line: 37, type: !5)
!17390 = !DILocation(line: 37, column: 15, scope: !17387)
!17391 = !DILocation(line: 39, column: 23, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17387, file: !17388, line: 39, column: 7)
!17393 = !DILocation(line: 39, column: 20, scope: !17392)
!17394 = !DILocation(line: 39, column: 26, scope: !17392)
!17395 = !DILocation(line: 39, column: 29, scope: !17392)
!17396 = !DILocation(line: 39, column: 32, scope: !17392)
!17397 = !DILocation(line: 39, column: 7, scope: !17387)
!17398 = !DILocalVariable(name: "f", scope: !17399, file: !17388, line: 41, type: !5)
!17399 = distinct !DILexicalBlock(scope: !17392, file: !17388, line: 40, column: 5)
!17400 = !DILocation(line: 41, column: 11, scope: !17399)
!17401 = !DILocation(line: 41, column: 26, scope: !17399)
!17402 = !DILocation(line: 41, column: 15, scope: !17399)
!17403 = !DILocalVariable(name: "e", scope: !17399, file: !17388, line: 42, type: !5)
!17404 = !DILocation(line: 42, column: 11, scope: !17399)
!17405 = !DILocation(line: 42, column: 15, scope: !17399)
!17406 = !DILocation(line: 43, column: 14, scope: !17399)
!17407 = !DILocation(line: 43, column: 7, scope: !17399)
!17408 = !DILocation(line: 44, column: 15, scope: !17399)
!17409 = !DILocation(line: 44, column: 7, scope: !17399)
!17410 = !DILocation(line: 44, column: 13, scope: !17399)
!17411 = !DILocation(line: 45, column: 12, scope: !17399)
!17412 = !DILocation(line: 45, column: 10, scope: !17399)
!17413 = !DILocation(line: 46, column: 5, scope: !17399)
!17414 = !DILocation(line: 48, column: 10, scope: !17387)
!17415 = !DILocation(line: 48, column: 3, scope: !17387)
!17416 = distinct !DISubprogram(name: "version_etc_arn", scope: !17417, file: !17417, line: 61, type: !1877, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !309)
!17417 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!17418 = !DILocalVariable(name: "stream", arg: 1, scope: !17416, file: !17417, line: 61, type: !1879)
!17419 = !DILocation(line: 61, column: 24, scope: !17416)
!17420 = !DILocalVariable(name: "command_name", arg: 2, scope: !17416, file: !17417, line: 62, type: !87)
!17421 = !DILocation(line: 62, column: 30, scope: !17416)
!17422 = !DILocalVariable(name: "package", arg: 3, scope: !17416, file: !17417, line: 62, type: !87)
!17423 = !DILocation(line: 62, column: 56, scope: !17416)
!17424 = !DILocalVariable(name: "version", arg: 4, scope: !17416, file: !17417, line: 63, type: !87)
!17425 = !DILocation(line: 63, column: 30, scope: !17416)
!17426 = !DILocalVariable(name: "authors", arg: 5, scope: !17416, file: !17417, line: 64, type: !812)
!17427 = !DILocation(line: 64, column: 39, scope: !17416)
!17428 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17416, file: !17417, line: 64, type: !52)
!17429 = !DILocation(line: 64, column: 55, scope: !17416)
!17430 = !DILocation(line: 66, column: 7, scope: !17431)
!17431 = distinct !DILexicalBlock(scope: !17416, file: !17417, line: 66, column: 7)
!17432 = !DILocation(line: 66, column: 7, scope: !17416)
!17433 = !DILocation(line: 67, column: 14, scope: !17431)
!17434 = !DILocation(line: 67, column: 38, scope: !17431)
!17435 = !DILocation(line: 67, column: 52, scope: !17431)
!17436 = !DILocation(line: 67, column: 61, scope: !17431)
!17437 = !DILocation(line: 67, column: 5, scope: !17431)
!17438 = !DILocation(line: 69, column: 14, scope: !17431)
!17439 = !DILocation(line: 69, column: 33, scope: !17431)
!17440 = !DILocation(line: 69, column: 42, scope: !17431)
!17441 = !DILocation(line: 69, column: 5, scope: !17431)
!17442 = !DILocation(line: 83, column: 12, scope: !17416)
!17443 = !DILocation(line: 83, column: 43, scope: !17416)
!17444 = !DILocation(line: 83, column: 3, scope: !17416)
!17445 = !DILocation(line: 85, column: 3, scope: !17416)
!17446 = !DILocation(line: 88, column: 12, scope: !17416)
!17447 = !DILocation(line: 88, column: 20, scope: !17416)
!17448 = !DILocation(line: 88, column: 3, scope: !17416)
!17449 = !DILocation(line: 95, column: 3, scope: !17416)
!17450 = !DILocation(line: 97, column: 11, scope: !17416)
!17451 = !DILocation(line: 97, column: 3, scope: !17416)
!17452 = !DILocation(line: 102, column: 7, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17416, file: !17417, line: 98, column: 5)
!17454 = !DILocation(line: 105, column: 16, scope: !17453)
!17455 = !DILocation(line: 105, column: 24, scope: !17453)
!17456 = !DILocation(line: 105, column: 47, scope: !17453)
!17457 = !DILocation(line: 105, column: 7, scope: !17453)
!17458 = !DILocation(line: 106, column: 7, scope: !17453)
!17459 = !DILocation(line: 109, column: 16, scope: !17453)
!17460 = !DILocation(line: 109, column: 24, scope: !17453)
!17461 = !DILocation(line: 109, column: 54, scope: !17453)
!17462 = !DILocation(line: 109, column: 66, scope: !17453)
!17463 = !DILocation(line: 109, column: 7, scope: !17453)
!17464 = !DILocation(line: 110, column: 7, scope: !17453)
!17465 = !DILocation(line: 113, column: 16, scope: !17453)
!17466 = !DILocation(line: 113, column: 24, scope: !17453)
!17467 = !DILocation(line: 114, column: 16, scope: !17453)
!17468 = !DILocation(line: 114, column: 28, scope: !17453)
!17469 = !DILocation(line: 114, column: 40, scope: !17453)
!17470 = !DILocation(line: 113, column: 7, scope: !17453)
!17471 = !DILocation(line: 115, column: 7, scope: !17453)
!17472 = !DILocation(line: 120, column: 16, scope: !17453)
!17473 = !DILocation(line: 120, column: 24, scope: !17453)
!17474 = !DILocation(line: 121, column: 16, scope: !17453)
!17475 = !DILocation(line: 121, column: 28, scope: !17453)
!17476 = !DILocation(line: 121, column: 40, scope: !17453)
!17477 = !DILocation(line: 121, column: 52, scope: !17453)
!17478 = !DILocation(line: 120, column: 7, scope: !17453)
!17479 = !DILocation(line: 122, column: 7, scope: !17453)
!17480 = !DILocation(line: 127, column: 16, scope: !17453)
!17481 = !DILocation(line: 127, column: 24, scope: !17453)
!17482 = !DILocation(line: 128, column: 16, scope: !17453)
!17483 = !DILocation(line: 128, column: 28, scope: !17453)
!17484 = !DILocation(line: 128, column: 40, scope: !17453)
!17485 = !DILocation(line: 128, column: 52, scope: !17453)
!17486 = !DILocation(line: 128, column: 64, scope: !17453)
!17487 = !DILocation(line: 127, column: 7, scope: !17453)
!17488 = !DILocation(line: 129, column: 7, scope: !17453)
!17489 = !DILocation(line: 134, column: 16, scope: !17453)
!17490 = !DILocation(line: 134, column: 24, scope: !17453)
!17491 = !DILocation(line: 135, column: 16, scope: !17453)
!17492 = !DILocation(line: 135, column: 28, scope: !17453)
!17493 = !DILocation(line: 135, column: 40, scope: !17453)
!17494 = !DILocation(line: 135, column: 52, scope: !17453)
!17495 = !DILocation(line: 135, column: 64, scope: !17453)
!17496 = !DILocation(line: 136, column: 16, scope: !17453)
!17497 = !DILocation(line: 134, column: 7, scope: !17453)
!17498 = !DILocation(line: 137, column: 7, scope: !17453)
!17499 = !DILocation(line: 142, column: 16, scope: !17453)
!17500 = !DILocation(line: 142, column: 24, scope: !17453)
!17501 = !DILocation(line: 143, column: 16, scope: !17453)
!17502 = !DILocation(line: 143, column: 28, scope: !17453)
!17503 = !DILocation(line: 143, column: 40, scope: !17453)
!17504 = !DILocation(line: 143, column: 52, scope: !17453)
!17505 = !DILocation(line: 143, column: 64, scope: !17453)
!17506 = !DILocation(line: 144, column: 16, scope: !17453)
!17507 = !DILocation(line: 144, column: 28, scope: !17453)
!17508 = !DILocation(line: 142, column: 7, scope: !17453)
!17509 = !DILocation(line: 145, column: 7, scope: !17453)
!17510 = !DILocation(line: 150, column: 16, scope: !17453)
!17511 = !DILocation(line: 150, column: 24, scope: !17453)
!17512 = !DILocation(line: 152, column: 17, scope: !17453)
!17513 = !DILocation(line: 152, column: 29, scope: !17453)
!17514 = !DILocation(line: 152, column: 41, scope: !17453)
!17515 = !DILocation(line: 152, column: 53, scope: !17453)
!17516 = !DILocation(line: 152, column: 65, scope: !17453)
!17517 = !DILocation(line: 153, column: 17, scope: !17453)
!17518 = !DILocation(line: 153, column: 29, scope: !17453)
!17519 = !DILocation(line: 153, column: 41, scope: !17453)
!17520 = !DILocation(line: 150, column: 7, scope: !17453)
!17521 = !DILocation(line: 154, column: 7, scope: !17453)
!17522 = !DILocation(line: 159, column: 16, scope: !17453)
!17523 = !DILocation(line: 159, column: 24, scope: !17453)
!17524 = !DILocation(line: 161, column: 16, scope: !17453)
!17525 = !DILocation(line: 161, column: 28, scope: !17453)
!17526 = !DILocation(line: 161, column: 40, scope: !17453)
!17527 = !DILocation(line: 161, column: 52, scope: !17453)
!17528 = !DILocation(line: 161, column: 64, scope: !17453)
!17529 = !DILocation(line: 162, column: 16, scope: !17453)
!17530 = !DILocation(line: 162, column: 28, scope: !17453)
!17531 = !DILocation(line: 162, column: 40, scope: !17453)
!17532 = !DILocation(line: 162, column: 52, scope: !17453)
!17533 = !DILocation(line: 159, column: 7, scope: !17453)
!17534 = !DILocation(line: 163, column: 7, scope: !17453)
!17535 = !DILocation(line: 170, column: 16, scope: !17453)
!17536 = !DILocation(line: 170, column: 24, scope: !17453)
!17537 = !DILocation(line: 172, column: 17, scope: !17453)
!17538 = !DILocation(line: 172, column: 29, scope: !17453)
!17539 = !DILocation(line: 172, column: 41, scope: !17453)
!17540 = !DILocation(line: 172, column: 53, scope: !17453)
!17541 = !DILocation(line: 172, column: 65, scope: !17453)
!17542 = !DILocation(line: 173, column: 17, scope: !17453)
!17543 = !DILocation(line: 173, column: 29, scope: !17453)
!17544 = !DILocation(line: 173, column: 41, scope: !17453)
!17545 = !DILocation(line: 173, column: 53, scope: !17453)
!17546 = !DILocation(line: 170, column: 7, scope: !17453)
!17547 = !DILocation(line: 174, column: 7, scope: !17453)
!17548 = !DILocation(line: 176, column: 1, scope: !17416)
!17549 = distinct !DISubprogram(name: "version_etc_ar", scope: !17417, file: !17417, line: 183, type: !1920, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !309)
!17550 = !DILocalVariable(name: "stream", arg: 1, scope: !17549, file: !17417, line: 183, type: !1879)
!17551 = !DILocation(line: 183, column: 23, scope: !17549)
!17552 = !DILocalVariable(name: "command_name", arg: 2, scope: !17549, file: !17417, line: 184, type: !87)
!17553 = !DILocation(line: 184, column: 29, scope: !17549)
!17554 = !DILocalVariable(name: "package", arg: 3, scope: !17549, file: !17417, line: 184, type: !87)
!17555 = !DILocation(line: 184, column: 55, scope: !17549)
!17556 = !DILocalVariable(name: "version", arg: 4, scope: !17549, file: !17417, line: 185, type: !87)
!17557 = !DILocation(line: 185, column: 29, scope: !17549)
!17558 = !DILocalVariable(name: "authors", arg: 5, scope: !17549, file: !17417, line: 185, type: !812)
!17559 = !DILocation(line: 185, column: 59, scope: !17549)
!17560 = !DILocalVariable(name: "n_authors", scope: !17549, file: !17417, line: 187, type: !52)
!17561 = !DILocation(line: 187, column: 10, scope: !17549)
!17562 = !DILocation(line: 189, column: 18, scope: !17563)
!17563 = distinct !DILexicalBlock(scope: !17549, file: !17417, line: 189, column: 3)
!17564 = !DILocation(line: 189, column: 8, scope: !17563)
!17565 = !DILocation(line: 189, column: 23, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17563, file: !17417, line: 189, column: 3)
!17567 = !DILocation(line: 189, column: 31, scope: !17566)
!17568 = !DILocation(line: 189, column: 3, scope: !17563)
!17569 = !DILocation(line: 189, column: 52, scope: !17566)
!17570 = !DILocation(line: 189, column: 3, scope: !17566)
!17571 = distinct !{!17571, !17568, !17572}
!17572 = !DILocation(line: 190, column: 5, scope: !17563)
!17573 = !DILocation(line: 191, column: 20, scope: !17549)
!17574 = !DILocation(line: 191, column: 28, scope: !17549)
!17575 = !DILocation(line: 191, column: 42, scope: !17549)
!17576 = !DILocation(line: 191, column: 51, scope: !17549)
!17577 = !DILocation(line: 191, column: 60, scope: !17549)
!17578 = !DILocation(line: 191, column: 69, scope: !17549)
!17579 = !DILocation(line: 191, column: 3, scope: !17549)
!17580 = !DILocation(line: 192, column: 1, scope: !17549)
!17581 = distinct !DISubprogram(name: "version_etc_va", scope: !17417, file: !17417, line: 199, type: !1922, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !309)
!17582 = !DILocalVariable(name: "stream", arg: 1, scope: !17581, file: !17417, line: 199, type: !1879)
!17583 = !DILocation(line: 199, column: 23, scope: !17581)
!17584 = !DILocalVariable(name: "command_name", arg: 2, scope: !17581, file: !17417, line: 200, type: !87)
!17585 = !DILocation(line: 200, column: 29, scope: !17581)
!17586 = !DILocalVariable(name: "package", arg: 3, scope: !17581, file: !17417, line: 200, type: !87)
!17587 = !DILocation(line: 200, column: 55, scope: !17581)
!17588 = !DILocalVariable(name: "version", arg: 4, scope: !17581, file: !17417, line: 201, type: !87)
!17589 = !DILocation(line: 201, column: 29, scope: !17581)
!17590 = !DILocalVariable(name: "authors", arg: 5, scope: !17581, file: !17417, line: 201, type: !1924)
!17591 = !DILocation(line: 201, column: 46, scope: !17581)
!17592 = !DILocalVariable(name: "n_authors", scope: !17581, file: !17417, line: 203, type: !52)
!17593 = !DILocation(line: 203, column: 10, scope: !17581)
!17594 = !DILocalVariable(name: "authtab", scope: !17581, file: !17417, line: 204, type: !1931)
!17595 = !DILocation(line: 204, column: 15, scope: !17581)
!17596 = !DILocation(line: 206, column: 18, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17581, file: !17417, line: 206, column: 3)
!17598 = !DILocation(line: 206, column: 8, scope: !17597)
!17599 = !DILocation(line: 207, column: 8, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17597, file: !17417, line: 206, column: 3)
!17601 = !DILocation(line: 207, column: 18, scope: !17600)
!17602 = !DILocation(line: 208, column: 10, scope: !17600)
!17603 = !DILocation(line: 208, column: 35, scope: !17600)
!17604 = !DILocation(line: 208, column: 22, scope: !17600)
!17605 = !DILocation(line: 208, column: 14, scope: !17600)
!17606 = !DILocation(line: 208, column: 33, scope: !17600)
!17607 = !DILocation(line: 208, column: 67, scope: !17600)
!17608 = !DILocation(line: 0, scope: !17600)
!17609 = !DILocation(line: 206, column: 3, scope: !17597)
!17610 = !DILocation(line: 209, column: 17, scope: !17600)
!17611 = !DILocation(line: 206, column: 3, scope: !17600)
!17612 = distinct !{!17612, !17609, !17613}
!17613 = !DILocation(line: 210, column: 5, scope: !17597)
!17614 = !DILocation(line: 211, column: 20, scope: !17581)
!17615 = !DILocation(line: 211, column: 28, scope: !17581)
!17616 = !DILocation(line: 211, column: 42, scope: !17581)
!17617 = !DILocation(line: 211, column: 51, scope: !17581)
!17618 = !DILocation(line: 212, column: 20, scope: !17581)
!17619 = !DILocation(line: 212, column: 29, scope: !17581)
!17620 = !DILocation(line: 211, column: 3, scope: !17581)
!17621 = !DILocation(line: 213, column: 1, scope: !17581)
!17622 = distinct !DISubprogram(name: "version_etc", scope: !17417, file: !17417, line: 230, type: !17623, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !309)
!17623 = !DISubroutineType(types: !17624)
!17624 = !{null, !1879, !87, !87, !87, null}
!17625 = !DILocalVariable(name: "stream", arg: 1, scope: !17622, file: !17417, line: 230, type: !1879)
!17626 = !DILocation(line: 230, column: 20, scope: !17622)
!17627 = !DILocalVariable(name: "command_name", arg: 2, scope: !17622, file: !17417, line: 231, type: !87)
!17628 = !DILocation(line: 231, column: 26, scope: !17622)
!17629 = !DILocalVariable(name: "package", arg: 3, scope: !17622, file: !17417, line: 231, type: !87)
!17630 = !DILocation(line: 231, column: 52, scope: !17622)
!17631 = !DILocalVariable(name: "version", arg: 4, scope: !17622, file: !17417, line: 232, type: !87)
!17632 = !DILocation(line: 232, column: 26, scope: !17622)
!17633 = !DILocalVariable(name: "authors", scope: !17622, file: !17417, line: 234, type: !1934)
!17634 = !DILocation(line: 234, column: 11, scope: !17622)
!17635 = !DILocation(line: 236, column: 3, scope: !17622)
!17636 = !DILocation(line: 237, column: 19, scope: !17622)
!17637 = !DILocation(line: 237, column: 27, scope: !17622)
!17638 = !DILocation(line: 237, column: 41, scope: !17622)
!17639 = !DILocation(line: 237, column: 50, scope: !17622)
!17640 = !DILocation(line: 237, column: 59, scope: !17622)
!17641 = !DILocation(line: 237, column: 3, scope: !17622)
!17642 = !DILocation(line: 238, column: 3, scope: !17622)
!17643 = !DILocation(line: 239, column: 1, scope: !17622)
!17644 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17417, file: !17417, line: 242, type: !167, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !309)
!17645 = !DILocation(line: 244, column: 3, scope: !17644)
!17646 = !DILocation(line: 249, column: 11, scope: !17644)
!17647 = !DILocation(line: 249, column: 3, scope: !17644)
!17648 = !DILocation(line: 255, column: 11, scope: !17644)
!17649 = !DILocation(line: 255, column: 3, scope: !17644)
!17650 = !DILocation(line: 260, column: 11, scope: !17644)
!17651 = !DILocation(line: 260, column: 3, scope: !17644)
!17652 = !DILocation(line: 262, column: 1, scope: !17644)
!17653 = distinct !DISubprogram(name: "xnmalloc", scope: !17654, file: !17654, line: 99, type: !1941, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17654 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!17655 = !DILocalVariable(name: "n", arg: 1, scope: !17653, file: !17654, line: 99, type: !52)
!17656 = !DILocation(line: 99, column: 18, scope: !17653)
!17657 = !DILocalVariable(name: "s", arg: 2, scope: !17653, file: !17654, line: 99, type: !52)
!17658 = !DILocation(line: 99, column: 28, scope: !17653)
!17659 = !DILocation(line: 101, column: 7, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !17653, file: !17654, line: 101, column: 7)
!17661 = !DILocation(line: 101, column: 7, scope: !17653)
!17662 = !DILocation(line: 102, column: 5, scope: !17660)
!17663 = !DILocation(line: 103, column: 19, scope: !17653)
!17664 = !DILocation(line: 103, column: 23, scope: !17653)
!17665 = !DILocation(line: 103, column: 21, scope: !17653)
!17666 = !DILocation(line: 103, column: 10, scope: !17653)
!17667 = !DILocation(line: 103, column: 3, scope: !17653)
!17668 = distinct !DISubprogram(name: "xmalloc", scope: !17669, file: !17669, line: 39, type: !1397, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17669 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!17670 = !DILocalVariable(name: "n", arg: 1, scope: !17668, file: !17669, line: 39, type: !52)
!17671 = !DILocation(line: 39, column: 17, scope: !17668)
!17672 = !DILocalVariable(name: "p", scope: !17668, file: !17669, line: 41, type: !47)
!17673 = !DILocation(line: 41, column: 9, scope: !17668)
!17674 = !DILocation(line: 41, column: 21, scope: !17668)
!17675 = !DILocation(line: 41, column: 13, scope: !17668)
!17676 = !DILocation(line: 42, column: 8, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17668, file: !17669, line: 42, column: 7)
!17678 = !DILocation(line: 42, column: 10, scope: !17677)
!17679 = !DILocation(line: 42, column: 13, scope: !17677)
!17680 = !DILocation(line: 42, column: 15, scope: !17677)
!17681 = !DILocation(line: 42, column: 7, scope: !17668)
!17682 = !DILocation(line: 43, column: 5, scope: !17677)
!17683 = !DILocation(line: 44, column: 10, scope: !17668)
!17684 = !DILocation(line: 44, column: 3, scope: !17668)
!17685 = distinct !DISubprogram(name: "xnrealloc", scope: !17654, file: !17654, line: 112, type: !1943, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17686 = !DILocalVariable(name: "p", arg: 1, scope: !17685, file: !17654, line: 112, type: !47)
!17687 = !DILocation(line: 112, column: 18, scope: !17685)
!17688 = !DILocalVariable(name: "n", arg: 2, scope: !17685, file: !17654, line: 112, type: !52)
!17689 = !DILocation(line: 112, column: 28, scope: !17685)
!17690 = !DILocalVariable(name: "s", arg: 3, scope: !17685, file: !17654, line: 112, type: !52)
!17691 = !DILocation(line: 112, column: 38, scope: !17685)
!17692 = !DILocation(line: 114, column: 7, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17685, file: !17654, line: 114, column: 7)
!17694 = !DILocation(line: 114, column: 7, scope: !17685)
!17695 = !DILocation(line: 115, column: 5, scope: !17693)
!17696 = !DILocation(line: 116, column: 20, scope: !17685)
!17697 = !DILocation(line: 116, column: 23, scope: !17685)
!17698 = !DILocation(line: 116, column: 27, scope: !17685)
!17699 = !DILocation(line: 116, column: 25, scope: !17685)
!17700 = !DILocation(line: 116, column: 10, scope: !17685)
!17701 = !DILocation(line: 116, column: 3, scope: !17685)
!17702 = distinct !DISubprogram(name: "xrealloc", scope: !17669, file: !17669, line: 51, type: !1401, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17703 = !DILocalVariable(name: "p", arg: 1, scope: !17702, file: !17669, line: 51, type: !47)
!17704 = !DILocation(line: 51, column: 17, scope: !17702)
!17705 = !DILocalVariable(name: "n", arg: 2, scope: !17702, file: !17669, line: 51, type: !52)
!17706 = !DILocation(line: 51, column: 27, scope: !17702)
!17707 = !DILocation(line: 53, column: 8, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17702, file: !17669, line: 53, column: 7)
!17709 = !DILocation(line: 53, column: 10, scope: !17708)
!17710 = !DILocation(line: 53, column: 13, scope: !17708)
!17711 = !DILocation(line: 53, column: 7, scope: !17702)
!17712 = !DILocation(line: 57, column: 13, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17708, file: !17669, line: 54, column: 5)
!17714 = !DILocation(line: 57, column: 7, scope: !17713)
!17715 = !DILocation(line: 58, column: 7, scope: !17713)
!17716 = !DILocation(line: 61, column: 16, scope: !17702)
!17717 = !DILocation(line: 61, column: 19, scope: !17702)
!17718 = !DILocation(line: 61, column: 7, scope: !17702)
!17719 = !DILocation(line: 61, column: 5, scope: !17702)
!17720 = !DILocation(line: 62, column: 8, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17702, file: !17669, line: 62, column: 7)
!17722 = !DILocation(line: 62, column: 10, scope: !17721)
!17723 = !DILocation(line: 62, column: 13, scope: !17721)
!17724 = !DILocation(line: 62, column: 7, scope: !17702)
!17725 = !DILocation(line: 63, column: 5, scope: !17721)
!17726 = !DILocation(line: 64, column: 10, scope: !17702)
!17727 = !DILocation(line: 64, column: 3, scope: !17702)
!17728 = !DILocation(line: 65, column: 1, scope: !17702)
!17729 = distinct !DISubprogram(name: "x2nrealloc", scope: !17654, file: !17654, line: 174, type: !1945, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17730 = !DILocalVariable(name: "p", arg: 1, scope: !17729, file: !17654, line: 174, type: !47)
!17731 = !DILocation(line: 174, column: 19, scope: !17729)
!17732 = !DILocalVariable(name: "pn", arg: 2, scope: !17729, file: !17654, line: 174, type: !354)
!17733 = !DILocation(line: 174, column: 30, scope: !17729)
!17734 = !DILocalVariable(name: "s", arg: 3, scope: !17729, file: !17654, line: 174, type: !52)
!17735 = !DILocation(line: 174, column: 41, scope: !17729)
!17736 = !DILocalVariable(name: "n", scope: !17729, file: !17654, line: 176, type: !52)
!17737 = !DILocation(line: 176, column: 10, scope: !17729)
!17738 = !DILocation(line: 176, column: 15, scope: !17729)
!17739 = !DILocation(line: 176, column: 14, scope: !17729)
!17740 = !DILocation(line: 178, column: 9, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17729, file: !17654, line: 178, column: 7)
!17742 = !DILocation(line: 178, column: 7, scope: !17729)
!17743 = !DILocation(line: 180, column: 13, scope: !17744)
!17744 = distinct !DILexicalBlock(scope: !17745, file: !17654, line: 180, column: 11)
!17745 = distinct !DILexicalBlock(scope: !17741, file: !17654, line: 179, column: 5)
!17746 = !DILocation(line: 180, column: 11, scope: !17745)
!17747 = !DILocation(line: 188, column: 32, scope: !17748)
!17748 = distinct !DILexicalBlock(scope: !17744, file: !17654, line: 181, column: 9)
!17749 = !DILocation(line: 188, column: 30, scope: !17748)
!17750 = !DILocation(line: 188, column: 13, scope: !17748)
!17751 = !DILocation(line: 189, column: 17, scope: !17748)
!17752 = !DILocation(line: 189, column: 16, scope: !17748)
!17753 = !DILocation(line: 189, column: 13, scope: !17748)
!17754 = !DILocation(line: 190, column: 9, scope: !17748)
!17755 = !DILocation(line: 191, column: 11, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17745, file: !17654, line: 191, column: 11)
!17757 = !DILocation(line: 191, column: 11, scope: !17745)
!17758 = !DILocation(line: 192, column: 9, scope: !17756)
!17759 = !DILocation(line: 193, column: 5, scope: !17745)
!17760 = !DILocation(line: 200, column: 71, scope: !17761)
!17761 = distinct !DILexicalBlock(scope: !17762, file: !17654, line: 200, column: 11)
!17762 = distinct !DILexicalBlock(scope: !17741, file: !17654, line: 195, column: 5)
!17763 = !DILocation(line: 200, column: 69, scope: !17761)
!17764 = !DILocation(line: 201, column: 14, scope: !17761)
!17765 = !DILocation(line: 201, column: 11, scope: !17761)
!17766 = !DILocation(line: 200, column: 11, scope: !17762)
!17767 = !DILocation(line: 202, column: 9, scope: !17761)
!17768 = !DILocation(line: 203, column: 12, scope: !17762)
!17769 = !DILocation(line: 203, column: 14, scope: !17762)
!17770 = !DILocation(line: 203, column: 18, scope: !17762)
!17771 = !DILocation(line: 203, column: 9, scope: !17762)
!17772 = !DILocation(line: 206, column: 9, scope: !17729)
!17773 = !DILocation(line: 206, column: 4, scope: !17729)
!17774 = !DILocation(line: 206, column: 7, scope: !17729)
!17775 = !DILocation(line: 207, column: 20, scope: !17729)
!17776 = !DILocation(line: 207, column: 23, scope: !17729)
!17777 = !DILocation(line: 207, column: 27, scope: !17729)
!17778 = !DILocation(line: 207, column: 25, scope: !17729)
!17779 = !DILocation(line: 207, column: 10, scope: !17729)
!17780 = !DILocation(line: 207, column: 3, scope: !17729)
!17781 = distinct !DISubprogram(name: "xcharalloc", scope: !17654, file: !17654, line: 216, type: !1947, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17782 = !DILocalVariable(name: "n", arg: 1, scope: !17781, file: !17654, line: 216, type: !52)
!17783 = !DILocation(line: 216, column: 20, scope: !17781)
!17784 = !DILocation(line: 218, column: 10, scope: !17781)
!17785 = !DILocation(line: 218, column: 3, scope: !17781)
!17786 = distinct !DISubprogram(name: "x2realloc", scope: !17669, file: !17669, line: 74, type: !1949, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17787 = !DILocalVariable(name: "p", arg: 1, scope: !17786, file: !17669, line: 74, type: !47)
!17788 = !DILocation(line: 74, column: 18, scope: !17786)
!17789 = !DILocalVariable(name: "pn", arg: 2, scope: !17786, file: !17669, line: 74, type: !354)
!17790 = !DILocation(line: 74, column: 29, scope: !17786)
!17791 = !DILocation(line: 76, column: 22, scope: !17786)
!17792 = !DILocation(line: 76, column: 25, scope: !17786)
!17793 = !DILocation(line: 76, column: 10, scope: !17786)
!17794 = !DILocation(line: 76, column: 3, scope: !17786)
!17795 = distinct !DISubprogram(name: "xzalloc", scope: !17669, file: !17669, line: 84, type: !1397, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17796 = !DILocalVariable(name: "s", arg: 1, scope: !17795, file: !17669, line: 84, type: !52)
!17797 = !DILocation(line: 84, column: 17, scope: !17795)
!17798 = !DILocation(line: 86, column: 27, scope: !17795)
!17799 = !DILocation(line: 86, column: 18, scope: !17795)
!17800 = !DILocation(line: 86, column: 34, scope: !17795)
!17801 = !DILocation(line: 86, column: 10, scope: !17795)
!17802 = !DILocation(line: 86, column: 3, scope: !17795)
!17803 = distinct !DISubprogram(name: "xcalloc", scope: !17669, file: !17669, line: 93, type: !1941, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17804 = !DILocalVariable(name: "n", arg: 1, scope: !17803, file: !17669, line: 93, type: !52)
!17805 = !DILocation(line: 93, column: 17, scope: !17803)
!17806 = !DILocalVariable(name: "s", arg: 2, scope: !17803, file: !17669, line: 93, type: !52)
!17807 = !DILocation(line: 93, column: 27, scope: !17803)
!17808 = !DILocalVariable(name: "p", scope: !17803, file: !17669, line: 95, type: !47)
!17809 = !DILocation(line: 95, column: 9, scope: !17803)
!17810 = !DILocation(line: 100, column: 7, scope: !17811)
!17811 = distinct !DILexicalBlock(scope: !17803, file: !17669, line: 100, column: 7)
!17812 = !DILocation(line: 101, column: 7, scope: !17811)
!17813 = !DILocation(line: 101, column: 26, scope: !17811)
!17814 = !DILocation(line: 101, column: 29, scope: !17811)
!17815 = !DILocation(line: 101, column: 18, scope: !17811)
!17816 = !DILocation(line: 101, column: 16, scope: !17811)
!17817 = !DILocation(line: 100, column: 7, scope: !17803)
!17818 = !DILocation(line: 102, column: 5, scope: !17811)
!17819 = !DILocation(line: 103, column: 10, scope: !17803)
!17820 = !DILocation(line: 103, column: 3, scope: !17803)
!17821 = distinct !DISubprogram(name: "xmemdup", scope: !17669, file: !17669, line: 111, type: !1951, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17822 = !DILocalVariable(name: "p", arg: 1, scope: !17821, file: !17669, line: 111, type: !85)
!17823 = !DILocation(line: 111, column: 22, scope: !17821)
!17824 = !DILocalVariable(name: "s", arg: 2, scope: !17821, file: !17669, line: 111, type: !52)
!17825 = !DILocation(line: 111, column: 32, scope: !17821)
!17826 = !DILocation(line: 113, column: 27, scope: !17821)
!17827 = !DILocation(line: 113, column: 18, scope: !17821)
!17828 = !DILocation(line: 113, column: 31, scope: !17821)
!17829 = !DILocation(line: 113, column: 34, scope: !17821)
!17830 = !DILocation(line: 113, column: 10, scope: !17821)
!17831 = !DILocation(line: 113, column: 3, scope: !17821)
!17832 = distinct !DISubprogram(name: "xstrdup", scope: !17669, file: !17669, line: 119, type: !1266, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1938, retainedNodes: !309)
!17833 = !DILocalVariable(name: "string", arg: 1, scope: !17832, file: !17669, line: 119, type: !87)
!17834 = !DILocation(line: 119, column: 22, scope: !17832)
!17835 = !DILocation(line: 121, column: 19, scope: !17832)
!17836 = !DILocation(line: 121, column: 35, scope: !17832)
!17837 = !DILocation(line: 121, column: 27, scope: !17832)
!17838 = !DILocation(line: 121, column: 43, scope: !17832)
!17839 = !DILocation(line: 121, column: 10, scope: !17832)
!17840 = !DILocation(line: 121, column: 3, scope: !17832)
!17841 = distinct !DISubprogram(name: "xalloc_die", scope: !17842, file: !17842, line: 32, type: !167, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1953, retainedNodes: !309)
!17842 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!17843 = !DILocation(line: 34, column: 10, scope: !17841)
!17844 = !DILocation(line: 34, column: 33, scope: !17841)
!17845 = !DILocation(line: 34, column: 3, scope: !17841)
!17846 = !DILocation(line: 40, column: 3, scope: !17841)
!17847 = distinct !DISubprogram(name: "xmemcoll", scope: !17848, file: !17848, line: 54, type: !1959, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1956, retainedNodes: !309)
!17848 = !DIFile(filename: "lib/xmemcoll.c", directory: "/home/mohamad/clone/coreutils")
!17849 = !DILocalVariable(name: "s1", arg: 1, scope: !17847, file: !17848, line: 54, type: !7)
!17850 = !DILocation(line: 54, column: 17, scope: !17847)
!17851 = !DILocalVariable(name: "s1len", arg: 2, scope: !17847, file: !17848, line: 54, type: !52)
!17852 = !DILocation(line: 54, column: 28, scope: !17847)
!17853 = !DILocalVariable(name: "s2", arg: 3, scope: !17847, file: !17848, line: 54, type: !7)
!17854 = !DILocation(line: 54, column: 41, scope: !17847)
!17855 = !DILocalVariable(name: "s2len", arg: 4, scope: !17847, file: !17848, line: 54, type: !52)
!17856 = !DILocation(line: 54, column: 52, scope: !17847)
!17857 = !DILocalVariable(name: "diff", scope: !17847, file: !17848, line: 56, type: !5)
!17858 = !DILocation(line: 56, column: 7, scope: !17847)
!17859 = !DILocation(line: 56, column: 23, scope: !17847)
!17860 = !DILocation(line: 56, column: 27, scope: !17847)
!17861 = !DILocation(line: 56, column: 34, scope: !17847)
!17862 = !DILocation(line: 56, column: 38, scope: !17847)
!17863 = !DILocation(line: 56, column: 14, scope: !17847)
!17864 = !DILocalVariable(name: "collation_errno", scope: !17847, file: !17848, line: 57, type: !5)
!17865 = !DILocation(line: 57, column: 7, scope: !17847)
!17866 = !DILocation(line: 57, column: 25, scope: !17847)
!17867 = !DILocation(line: 58, column: 7, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !17847, file: !17848, line: 58, column: 7)
!17869 = !DILocation(line: 58, column: 7, scope: !17847)
!17870 = !DILocation(line: 59, column: 20, scope: !17868)
!17871 = !DILocation(line: 59, column: 37, scope: !17868)
!17872 = !DILocation(line: 59, column: 41, scope: !17868)
!17873 = !DILocation(line: 59, column: 48, scope: !17868)
!17874 = !DILocation(line: 59, column: 52, scope: !17868)
!17875 = !DILocation(line: 59, column: 5, scope: !17868)
!17876 = !DILocation(line: 60, column: 10, scope: !17847)
!17877 = !DILocation(line: 60, column: 3, scope: !17847)
!17878 = distinct !DISubprogram(name: "collate_error", scope: !17848, file: !17848, line: 35, type: !1961, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1956, retainedNodes: !309)
!17879 = !DILocalVariable(name: "collation_errno", arg: 1, scope: !17878, file: !17848, line: 35, type: !5)
!17880 = !DILocation(line: 35, column: 20, scope: !17878)
!17881 = !DILocalVariable(name: "s1", arg: 2, scope: !17878, file: !17848, line: 36, type: !87)
!17882 = !DILocation(line: 36, column: 28, scope: !17878)
!17883 = !DILocalVariable(name: "s1len", arg: 3, scope: !17878, file: !17848, line: 36, type: !52)
!17884 = !DILocation(line: 36, column: 39, scope: !17878)
!17885 = !DILocalVariable(name: "s2", arg: 4, scope: !17878, file: !17848, line: 37, type: !87)
!17886 = !DILocation(line: 37, column: 28, scope: !17878)
!17887 = !DILocalVariable(name: "s2len", arg: 5, scope: !17878, file: !17848, line: 37, type: !52)
!17888 = !DILocation(line: 37, column: 39, scope: !17878)
!17889 = !DILocation(line: 39, column: 13, scope: !17878)
!17890 = !DILocation(line: 39, column: 30, scope: !17878)
!17891 = !DILocation(line: 39, column: 3, scope: !17878)
!17892 = !DILocation(line: 40, column: 16, scope: !17878)
!17893 = !DILocation(line: 40, column: 3, scope: !17878)
!17894 = !DILocation(line: 41, column: 10, scope: !17878)
!17895 = !DILocation(line: 42, column: 10, scope: !17878)
!17896 = !DILocation(line: 43, column: 57, scope: !17878)
!17897 = !DILocation(line: 43, column: 61, scope: !17878)
!17898 = !DILocation(line: 43, column: 10, scope: !17878)
!17899 = !DILocation(line: 44, column: 57, scope: !17878)
!17900 = !DILocation(line: 44, column: 61, scope: !17878)
!17901 = !DILocation(line: 44, column: 10, scope: !17878)
!17902 = !DILocation(line: 41, column: 3, scope: !17878)
!17903 = !DILocation(line: 45, column: 1, scope: !17878)
!17904 = distinct !DISubprogram(name: "xmemcoll0", scope: !17848, file: !17848, line: 69, type: !1533, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1956, retainedNodes: !309)
!17905 = !DILocalVariable(name: "s1", arg: 1, scope: !17904, file: !17848, line: 69, type: !87)
!17906 = !DILocation(line: 69, column: 24, scope: !17904)
!17907 = !DILocalVariable(name: "s1size", arg: 2, scope: !17904, file: !17848, line: 69, type: !52)
!17908 = !DILocation(line: 69, column: 35, scope: !17904)
!17909 = !DILocalVariable(name: "s2", arg: 3, scope: !17904, file: !17848, line: 69, type: !87)
!17910 = !DILocation(line: 69, column: 55, scope: !17904)
!17911 = !DILocalVariable(name: "s2size", arg: 4, scope: !17904, file: !17848, line: 69, type: !52)
!17912 = !DILocation(line: 69, column: 66, scope: !17904)
!17913 = !DILocalVariable(name: "diff", scope: !17904, file: !17848, line: 71, type: !5)
!17914 = !DILocation(line: 71, column: 7, scope: !17904)
!17915 = !DILocation(line: 71, column: 24, scope: !17904)
!17916 = !DILocation(line: 71, column: 28, scope: !17904)
!17917 = !DILocation(line: 71, column: 36, scope: !17904)
!17918 = !DILocation(line: 71, column: 40, scope: !17904)
!17919 = !DILocation(line: 71, column: 14, scope: !17904)
!17920 = !DILocalVariable(name: "collation_errno", scope: !17904, file: !17848, line: 72, type: !5)
!17921 = !DILocation(line: 72, column: 7, scope: !17904)
!17922 = !DILocation(line: 72, column: 25, scope: !17904)
!17923 = !DILocation(line: 73, column: 7, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17904, file: !17848, line: 73, column: 7)
!17925 = !DILocation(line: 73, column: 7, scope: !17904)
!17926 = !DILocation(line: 74, column: 20, scope: !17924)
!17927 = !DILocation(line: 74, column: 37, scope: !17924)
!17928 = !DILocation(line: 74, column: 41, scope: !17924)
!17929 = !DILocation(line: 74, column: 48, scope: !17924)
!17930 = !DILocation(line: 74, column: 53, scope: !17924)
!17931 = !DILocation(line: 74, column: 57, scope: !17924)
!17932 = !DILocation(line: 74, column: 64, scope: !17924)
!17933 = !DILocation(line: 74, column: 5, scope: !17924)
!17934 = !DILocation(line: 75, column: 10, scope: !17904)
!17935 = !DILocation(line: 75, column: 3, scope: !17904)
!17936 = distinct !DISubprogram(name: "xnanosleep", scope: !17937, file: !17937, line: 38, type: !1966, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1963, retainedNodes: !309)
!17937 = !DIFile(filename: "lib/xnanosleep.c", directory: "/home/mohamad/clone/coreutils")
!17938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !400, line: 120, size: 128, elements: !17939)
!17939 = !{!17940, !17941}
!17940 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17938, file: !400, line: 122, baseType: !403, size: 64)
!17941 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17938, file: !400, line: 123, baseType: !405, size: 64, offset: 64)
!17942 = !DILocalVariable(name: "seconds", arg: 1, scope: !17936, file: !17937, line: 38, type: !370)
!17943 = !DILocation(line: 38, column: 20, scope: !17936)
!17944 = !DILocalVariable(name: "ts_sleep", scope: !17936, file: !17937, line: 40, type: !17938)
!17945 = !DILocation(line: 40, column: 19, scope: !17936)
!17946 = !DILocation(line: 40, column: 43, scope: !17936)
!17947 = !DILocation(line: 40, column: 30, scope: !17936)
!17948 = !DILocation(line: 42, column: 3, scope: !17936)
!17949 = !DILocation(line: 50, column: 7, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17951, file: !17937, line: 43, column: 5)
!17951 = distinct !DILexicalBlock(scope: !17952, file: !17937, line: 42, column: 3)
!17952 = distinct !DILexicalBlock(scope: !17936, file: !17937, line: 42, column: 3)
!17953 = !DILocation(line: 50, column: 13, scope: !17950)
!17954 = !DILocation(line: 51, column: 11, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17950, file: !17937, line: 51, column: 11)
!17956 = !DILocation(line: 51, column: 39, scope: !17955)
!17957 = !DILocation(line: 51, column: 11, scope: !17950)
!17958 = !DILocation(line: 52, column: 9, scope: !17955)
!17959 = !DILocation(line: 53, column: 11, scope: !17960)
!17960 = distinct !DILexicalBlock(scope: !17950, file: !17937, line: 53, column: 11)
!17961 = !DILocation(line: 53, column: 17, scope: !17960)
!17962 = !DILocation(line: 53, column: 26, scope: !17960)
!17963 = !DILocation(line: 53, column: 29, scope: !17960)
!17964 = !DILocation(line: 53, column: 35, scope: !17960)
!17965 = !DILocation(line: 53, column: 11, scope: !17950)
!17966 = !DILocation(line: 54, column: 9, scope: !17960)
!17967 = !DILocation(line: 42, column: 3, scope: !17951)
!17968 = distinct !{!17968, !17969, !17970}
!17969 = !DILocation(line: 42, column: 3, scope: !17952)
!17970 = !DILocation(line: 55, column: 5, scope: !17952)
!17971 = !DILocation(line: 57, column: 3, scope: !17936)
!17972 = !DILocation(line: 58, column: 1, scope: !17936)
!17973 = distinct !DISubprogram(name: "xstrtoul", scope: !17974, file: !17974, line: 76, type: !1972, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1968, retainedNodes: !309)
!17974 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mohamad/clone/coreutils")
!17975 = !DILocalVariable(name: "s", arg: 1, scope: !17973, file: !17974, line: 76, type: !87)
!17976 = !DILocation(line: 76, column: 24, scope: !17973)
!17977 = !DILocalVariable(name: "ptr", arg: 2, scope: !17973, file: !17974, line: 76, type: !91)
!17978 = !DILocation(line: 76, column: 34, scope: !17973)
!17979 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !17973, file: !17974, line: 76, type: !5)
!17980 = !DILocation(line: 76, column: 43, scope: !17973)
!17981 = !DILocalVariable(name: "val", arg: 4, scope: !17973, file: !17974, line: 77, type: !1975)
!17982 = !DILocation(line: 77, column: 24, scope: !17973)
!17983 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !17973, file: !17974, line: 77, type: !87)
!17984 = !DILocation(line: 77, column: 41, scope: !17973)
!17985 = !DILocalVariable(name: "t_ptr", scope: !17973, file: !17974, line: 79, type: !7)
!17986 = !DILocation(line: 79, column: 9, scope: !17973)
!17987 = !DILocalVariable(name: "p", scope: !17973, file: !17974, line: 80, type: !91)
!17988 = !DILocation(line: 80, column: 10, scope: !17973)
!17989 = !DILocalVariable(name: "tmp", scope: !17973, file: !17974, line: 81, type: !54)
!17990 = !DILocation(line: 81, column: 14, scope: !17973)
!17991 = !DILocalVariable(name: "err", scope: !17973, file: !17974, line: 82, type: !1974)
!17992 = !DILocation(line: 82, column: 16, scope: !17973)
!17993 = !DILocation(line: 84, column: 3, scope: !17973)
!17994 = !DILocation(line: 86, column: 8, scope: !17973)
!17995 = !DILocation(line: 86, column: 14, scope: !17973)
!17996 = !DILocation(line: 86, column: 5, scope: !17973)
!17997 = !DILocation(line: 88, column: 3, scope: !17973)
!17998 = !DILocation(line: 88, column: 9, scope: !17973)
!17999 = !DILocalVariable(name: "q", scope: !18000, file: !17974, line: 92, type: !87)
!18000 = distinct !DILexicalBlock(scope: !18001, file: !17974, line: 91, column: 5)
!18001 = distinct !DILexicalBlock(scope: !17973, file: !17974, line: 90, column: 7)
!18002 = !DILocation(line: 92, column: 19, scope: !18000)
!18003 = !DILocation(line: 92, column: 23, scope: !18000)
!18004 = !DILocalVariable(name: "ch", scope: !18000, file: !17974, line: 93, type: !317)
!18005 = !DILocation(line: 93, column: 21, scope: !18000)
!18006 = !DILocation(line: 93, column: 27, scope: !18000)
!18007 = !DILocation(line: 93, column: 26, scope: !18000)
!18008 = !DILocation(line: 94, column: 7, scope: !18000)
!18009 = !DILocation(line: 94, column: 14, scope: !18000)
!18010 = !DILocation(line: 95, column: 15, scope: !18000)
!18011 = !DILocation(line: 95, column: 14, scope: !18000)
!18012 = !DILocation(line: 95, column: 12, scope: !18000)
!18013 = distinct !{!18013, !18008, !18014}
!18014 = !DILocation(line: 95, column: 17, scope: !18000)
!18015 = !DILocation(line: 96, column: 11, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18000, file: !17974, line: 96, column: 11)
!18017 = !DILocation(line: 96, column: 14, scope: !18016)
!18018 = !DILocation(line: 96, column: 11, scope: !18000)
!18019 = !DILocation(line: 97, column: 9, scope: !18016)
!18020 = !DILocation(line: 100, column: 19, scope: !17973)
!18021 = !DILocation(line: 100, column: 22, scope: !17973)
!18022 = !DILocation(line: 100, column: 25, scope: !17973)
!18023 = !DILocation(line: 100, column: 9, scope: !17973)
!18024 = !DILocation(line: 100, column: 7, scope: !17973)
!18025 = !DILocation(line: 102, column: 8, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !17973, file: !17974, line: 102, column: 7)
!18027 = !DILocation(line: 102, column: 7, scope: !18026)
!18028 = !DILocation(line: 102, column: 13, scope: !18026)
!18029 = !DILocation(line: 102, column: 10, scope: !18026)
!18030 = !DILocation(line: 102, column: 7, scope: !17973)
!18031 = !DILocation(line: 106, column: 11, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !18033, file: !17974, line: 106, column: 11)
!18033 = distinct !DILexicalBlock(scope: !18026, file: !17974, line: 103, column: 5)
!18034 = !DILocation(line: 106, column: 26, scope: !18032)
!18035 = !DILocation(line: 106, column: 31, scope: !18032)
!18036 = !DILocation(line: 106, column: 30, scope: !18032)
!18037 = !DILocation(line: 106, column: 29, scope: !18032)
!18038 = !DILocation(line: 106, column: 33, scope: !18032)
!18039 = !DILocation(line: 106, column: 44, scope: !18032)
!18040 = !DILocation(line: 106, column: 62, scope: !18032)
!18041 = !DILocation(line: 106, column: 61, scope: !18032)
!18042 = !DILocation(line: 106, column: 60, scope: !18032)
!18043 = !DILocation(line: 106, column: 36, scope: !18032)
!18044 = !DILocation(line: 106, column: 11, scope: !18033)
!18045 = !DILocation(line: 107, column: 13, scope: !18032)
!18046 = !DILocation(line: 107, column: 9, scope: !18032)
!18047 = !DILocation(line: 109, column: 9, scope: !18032)
!18048 = !DILocation(line: 110, column: 5, scope: !18033)
!18049 = !DILocation(line: 111, column: 12, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18026, file: !17974, line: 111, column: 12)
!18051 = !DILocation(line: 111, column: 18, scope: !18050)
!18052 = !DILocation(line: 111, column: 12, scope: !18026)
!18053 = !DILocation(line: 113, column: 11, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18055, file: !17974, line: 113, column: 11)
!18055 = distinct !DILexicalBlock(scope: !18050, file: !17974, line: 112, column: 5)
!18056 = !DILocation(line: 113, column: 17, scope: !18054)
!18057 = !DILocation(line: 113, column: 11, scope: !18055)
!18058 = !DILocation(line: 114, column: 9, scope: !18054)
!18059 = !DILocation(line: 115, column: 11, scope: !18055)
!18060 = !DILocation(line: 116, column: 5, scope: !18055)
!18061 = !DILocation(line: 121, column: 8, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !17973, file: !17974, line: 121, column: 7)
!18063 = !DILocation(line: 121, column: 7, scope: !17973)
!18064 = !DILocation(line: 123, column: 14, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18062, file: !17974, line: 122, column: 5)
!18066 = !DILocation(line: 123, column: 8, scope: !18065)
!18067 = !DILocation(line: 123, column: 12, scope: !18065)
!18068 = !DILocation(line: 124, column: 14, scope: !18065)
!18069 = !DILocation(line: 124, column: 7, scope: !18065)
!18070 = !DILocation(line: 127, column: 9, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !17973, file: !17974, line: 127, column: 7)
!18072 = !DILocation(line: 127, column: 8, scope: !18071)
!18073 = !DILocation(line: 127, column: 7, scope: !18071)
!18074 = !DILocation(line: 127, column: 11, scope: !18071)
!18075 = !DILocation(line: 127, column: 7, scope: !17973)
!18076 = !DILocalVariable(name: "base", scope: !18077, file: !17974, line: 129, type: !5)
!18077 = distinct !DILexicalBlock(scope: !18071, file: !17974, line: 128, column: 5)
!18078 = !DILocation(line: 129, column: 11, scope: !18077)
!18079 = !DILocalVariable(name: "suffixes", scope: !18077, file: !17974, line: 130, type: !5)
!18080 = !DILocation(line: 130, column: 11, scope: !18077)
!18081 = !DILocalVariable(name: "overflow", scope: !18077, file: !17974, line: 131, type: !1974)
!18082 = !DILocation(line: 131, column: 20, scope: !18077)
!18083 = !DILocation(line: 133, column: 20, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18077, file: !17974, line: 133, column: 11)
!18085 = !DILocation(line: 133, column: 38, scope: !18084)
!18086 = !DILocation(line: 133, column: 37, scope: !18084)
!18087 = !DILocation(line: 133, column: 36, scope: !18084)
!18088 = !DILocation(line: 133, column: 12, scope: !18084)
!18089 = !DILocation(line: 133, column: 11, scope: !18077)
!18090 = !DILocation(line: 135, column: 18, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18084, file: !17974, line: 134, column: 9)
!18092 = !DILocation(line: 135, column: 12, scope: !18091)
!18093 = !DILocation(line: 135, column: 16, scope: !18091)
!18094 = !DILocation(line: 136, column: 18, scope: !18091)
!18095 = !DILocation(line: 136, column: 22, scope: !18091)
!18096 = !DILocation(line: 136, column: 11, scope: !18091)
!18097 = !DILocation(line: 139, column: 17, scope: !18077)
!18098 = !DILocation(line: 139, column: 16, scope: !18077)
!18099 = !DILocation(line: 139, column: 15, scope: !18077)
!18100 = !DILocation(line: 139, column: 7, scope: !18077)
!18101 = !DILocation(line: 151, column: 23, scope: !18102)
!18102 = distinct !DILexicalBlock(scope: !18103, file: !17974, line: 151, column: 15)
!18103 = distinct !DILexicalBlock(scope: !18077, file: !17974, line: 140, column: 9)
!18104 = !DILocation(line: 151, column: 15, scope: !18102)
!18105 = !DILocation(line: 151, column: 15, scope: !18103)
!18106 = !DILocation(line: 152, column: 21, scope: !18102)
!18107 = !DILocation(line: 152, column: 13, scope: !18102)
!18108 = !DILocation(line: 155, column: 21, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18110, file: !17974, line: 155, column: 21)
!18110 = distinct !DILexicalBlock(scope: !18102, file: !17974, line: 153, column: 15)
!18111 = !DILocation(line: 155, column: 29, scope: !18109)
!18112 = !DILocation(line: 155, column: 21, scope: !18110)
!18113 = !DILocation(line: 156, column: 28, scope: !18109)
!18114 = !DILocation(line: 156, column: 19, scope: !18109)
!18115 = !DILocation(line: 157, column: 17, scope: !18110)
!18116 = !DILocation(line: 161, column: 22, scope: !18110)
!18117 = !DILocation(line: 162, column: 25, scope: !18110)
!18118 = !DILocation(line: 163, column: 17, scope: !18110)
!18119 = !DILocation(line: 164, column: 15, scope: !18110)
!18120 = !DILocation(line: 165, column: 9, scope: !18103)
!18121 = !DILocation(line: 167, column: 17, scope: !18077)
!18122 = !DILocation(line: 167, column: 16, scope: !18077)
!18123 = !DILocation(line: 167, column: 15, scope: !18077)
!18124 = !DILocation(line: 167, column: 7, scope: !18077)
!18125 = !DILocation(line: 170, column: 22, scope: !18126)
!18126 = distinct !DILexicalBlock(scope: !18077, file: !17974, line: 168, column: 9)
!18127 = !DILocation(line: 170, column: 20, scope: !18126)
!18128 = !DILocation(line: 171, column: 11, scope: !18126)
!18129 = !DILocation(line: 177, column: 22, scope: !18126)
!18130 = !DILocation(line: 177, column: 20, scope: !18126)
!18131 = !DILocation(line: 178, column: 11, scope: !18126)
!18132 = !DILocation(line: 181, column: 20, scope: !18126)
!18133 = !DILocation(line: 182, column: 11, scope: !18126)
!18134 = !DILocation(line: 185, column: 48, scope: !18126)
!18135 = !DILocation(line: 185, column: 22, scope: !18126)
!18136 = !DILocation(line: 185, column: 20, scope: !18126)
!18137 = !DILocation(line: 186, column: 11, scope: !18126)
!18138 = !DILocation(line: 190, column: 48, scope: !18126)
!18139 = !DILocation(line: 190, column: 22, scope: !18126)
!18140 = !DILocation(line: 190, column: 20, scope: !18126)
!18141 = !DILocation(line: 191, column: 11, scope: !18126)
!18142 = !DILocation(line: 195, column: 48, scope: !18126)
!18143 = !DILocation(line: 195, column: 22, scope: !18126)
!18144 = !DILocation(line: 195, column: 20, scope: !18126)
!18145 = !DILocation(line: 196, column: 11, scope: !18126)
!18146 = !DILocation(line: 200, column: 48, scope: !18126)
!18147 = !DILocation(line: 200, column: 22, scope: !18126)
!18148 = !DILocation(line: 200, column: 20, scope: !18126)
!18149 = !DILocation(line: 201, column: 11, scope: !18126)
!18150 = !DILocation(line: 204, column: 48, scope: !18126)
!18151 = !DILocation(line: 204, column: 22, scope: !18126)
!18152 = !DILocation(line: 204, column: 20, scope: !18126)
!18153 = !DILocation(line: 205, column: 11, scope: !18126)
!18154 = !DILocation(line: 209, column: 48, scope: !18126)
!18155 = !DILocation(line: 209, column: 22, scope: !18126)
!18156 = !DILocation(line: 209, column: 20, scope: !18126)
!18157 = !DILocation(line: 210, column: 11, scope: !18126)
!18158 = !DILocation(line: 213, column: 22, scope: !18126)
!18159 = !DILocation(line: 213, column: 20, scope: !18126)
!18160 = !DILocation(line: 214, column: 11, scope: !18126)
!18161 = !DILocation(line: 217, column: 48, scope: !18126)
!18162 = !DILocation(line: 217, column: 22, scope: !18126)
!18163 = !DILocation(line: 217, column: 20, scope: !18126)
!18164 = !DILocation(line: 218, column: 11, scope: !18126)
!18165 = !DILocation(line: 221, column: 48, scope: !18126)
!18166 = !DILocation(line: 221, column: 22, scope: !18126)
!18167 = !DILocation(line: 221, column: 20, scope: !18126)
!18168 = !DILocation(line: 222, column: 11, scope: !18126)
!18169 = !DILocation(line: 225, column: 18, scope: !18126)
!18170 = !DILocation(line: 225, column: 12, scope: !18126)
!18171 = !DILocation(line: 225, column: 16, scope: !18126)
!18172 = !DILocation(line: 226, column: 18, scope: !18126)
!18173 = !DILocation(line: 226, column: 22, scope: !18126)
!18174 = !DILocation(line: 226, column: 11, scope: !18126)
!18175 = !DILocation(line: 229, column: 14, scope: !18077)
!18176 = !DILocation(line: 229, column: 11, scope: !18077)
!18177 = !DILocation(line: 230, column: 13, scope: !18077)
!18178 = !DILocation(line: 230, column: 8, scope: !18077)
!18179 = !DILocation(line: 230, column: 10, scope: !18077)
!18180 = !DILocation(line: 231, column: 13, scope: !18181)
!18181 = distinct !DILexicalBlock(scope: !18077, file: !17974, line: 231, column: 11)
!18182 = !DILocation(line: 231, column: 12, scope: !18181)
!18183 = !DILocation(line: 231, column: 11, scope: !18181)
!18184 = !DILocation(line: 231, column: 11, scope: !18077)
!18185 = !DILocation(line: 232, column: 13, scope: !18181)
!18186 = !DILocation(line: 232, column: 9, scope: !18181)
!18187 = !DILocation(line: 233, column: 5, scope: !18077)
!18188 = !DILocation(line: 235, column: 10, scope: !17973)
!18189 = !DILocation(line: 235, column: 4, scope: !17973)
!18190 = !DILocation(line: 235, column: 8, scope: !17973)
!18191 = !DILocation(line: 236, column: 10, scope: !17973)
!18192 = !DILocation(line: 236, column: 3, scope: !17973)
!18193 = !DILocation(line: 237, column: 1, scope: !17973)
!18194 = distinct !DISubprogram(name: "bkm_scale", scope: !17974, file: !17974, line: 48, type: !1976, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1968, retainedNodes: !309)
!18195 = !DILocalVariable(name: "x", arg: 1, scope: !18194, file: !17974, line: 48, type: !1975)
!18196 = !DILocation(line: 48, column: 24, scope: !18194)
!18197 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !18194, file: !17974, line: 48, type: !5)
!18198 = !DILocation(line: 48, column: 31, scope: !18194)
!18199 = !DILocation(line: 55, column: 26, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18194, file: !17974, line: 55, column: 7)
!18201 = !DILocation(line: 55, column: 24, scope: !18200)
!18202 = !DILocation(line: 55, column: 42, scope: !18200)
!18203 = !DILocation(line: 55, column: 41, scope: !18200)
!18204 = !DILocation(line: 55, column: 39, scope: !18200)
!18205 = !DILocation(line: 55, column: 7, scope: !18194)
!18206 = !DILocation(line: 57, column: 8, scope: !18207)
!18207 = distinct !DILexicalBlock(scope: !18200, file: !17974, line: 56, column: 5)
!18208 = !DILocation(line: 57, column: 10, scope: !18207)
!18209 = !DILocation(line: 58, column: 7, scope: !18207)
!18210 = !DILocation(line: 60, column: 9, scope: !18194)
!18211 = !DILocation(line: 60, column: 4, scope: !18194)
!18212 = !DILocation(line: 60, column: 6, scope: !18194)
!18213 = !DILocation(line: 61, column: 3, scope: !18194)
!18214 = !DILocation(line: 62, column: 1, scope: !18194)
!18215 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !17974, file: !17974, line: 65, type: !1978, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1968, retainedNodes: !309)
!18216 = !DILocalVariable(name: "x", arg: 1, scope: !18215, file: !17974, line: 65, type: !1975)
!18217 = !DILocation(line: 65, column: 33, scope: !18215)
!18218 = !DILocalVariable(name: "base", arg: 2, scope: !18215, file: !17974, line: 65, type: !5)
!18219 = !DILocation(line: 65, column: 40, scope: !18215)
!18220 = !DILocalVariable(name: "power", arg: 3, scope: !18215, file: !17974, line: 65, type: !5)
!18221 = !DILocation(line: 65, column: 50, scope: !18215)
!18222 = !DILocalVariable(name: "err", scope: !18215, file: !17974, line: 67, type: !1974)
!18223 = !DILocation(line: 67, column: 16, scope: !18215)
!18224 = !DILocation(line: 68, column: 3, scope: !18215)
!18225 = !DILocation(line: 68, column: 15, scope: !18215)
!18226 = !DILocation(line: 69, column: 23, scope: !18215)
!18227 = !DILocation(line: 69, column: 26, scope: !18215)
!18228 = !DILocation(line: 69, column: 12, scope: !18215)
!18229 = !DILocation(line: 69, column: 9, scope: !18215)
!18230 = distinct !{!18230, !18224, !18231}
!18231 = !DILocation(line: 69, column: 30, scope: !18215)
!18232 = !DILocation(line: 70, column: 10, scope: !18215)
!18233 = !DILocation(line: 70, column: 3, scope: !18215)
!18234 = distinct !DISubprogram(name: "xstrtol_fatal", scope: !18235, file: !18235, line: 92, type: !1983, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1980, retainedNodes: !309)
!18235 = !DIFile(filename: "lib/xstrtol-error.c", directory: "/home/mohamad/clone/coreutils")
!18236 = !DILocalVariable(name: "err", arg: 1, scope: !18234, file: !18235, line: 92, type: !71)
!18237 = !DILocation(line: 92, column: 34, scope: !18234)
!18238 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !18234, file: !18235, line: 93, type: !5)
!18239 = !DILocation(line: 93, column: 20, scope: !18234)
!18240 = !DILocalVariable(name: "c", arg: 3, scope: !18234, file: !18235, line: 93, type: !8)
!18241 = !DILocation(line: 93, column: 34, scope: !18234)
!18242 = !DILocalVariable(name: "long_options", arg: 4, scope: !18234, file: !18235, line: 93, type: !1985)
!18243 = !DILocation(line: 93, column: 58, scope: !18234)
!18244 = !DILocalVariable(name: "arg", arg: 5, scope: !18234, file: !18235, line: 94, type: !87)
!18245 = !DILocation(line: 94, column: 28, scope: !18234)
!18246 = !DILocation(line: 96, column: 18, scope: !18234)
!18247 = !DILocation(line: 96, column: 23, scope: !18234)
!18248 = !DILocation(line: 96, column: 32, scope: !18234)
!18249 = !DILocation(line: 96, column: 35, scope: !18234)
!18250 = !DILocation(line: 96, column: 49, scope: !18234)
!18251 = !DILocation(line: 96, column: 54, scope: !18234)
!18252 = !DILocation(line: 96, column: 3, scope: !18234)
!18253 = !DILocation(line: 97, column: 3, scope: !18234)
!18254 = distinct !DISubprogram(name: "xstrtol_error", scope: !18235, file: !18235, line: 47, type: !1993, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1980, retainedNodes: !309)
!18255 = !DILocalVariable(name: "err", arg: 1, scope: !18254, file: !18235, line: 47, type: !71)
!18256 = !DILocation(line: 47, column: 34, scope: !18254)
!18257 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !18254, file: !18235, line: 48, type: !5)
!18258 = !DILocation(line: 48, column: 20, scope: !18254)
!18259 = !DILocalVariable(name: "c", arg: 3, scope: !18254, file: !18235, line: 48, type: !8)
!18260 = !DILocation(line: 48, column: 34, scope: !18254)
!18261 = !DILocalVariable(name: "long_options", arg: 4, scope: !18254, file: !18235, line: 48, type: !1985)
!18262 = !DILocation(line: 48, column: 58, scope: !18254)
!18263 = !DILocalVariable(name: "arg", arg: 5, scope: !18254, file: !18235, line: 49, type: !87)
!18264 = !DILocation(line: 49, column: 28, scope: !18254)
!18265 = !DILocalVariable(name: "exit_status", arg: 6, scope: !18254, file: !18235, line: 50, type: !5)
!18266 = !DILocation(line: 50, column: 20, scope: !18254)
!18267 = !DILocalVariable(name: "hyphens", scope: !18254, file: !18235, line: 52, type: !87)
!18268 = !DILocation(line: 52, column: 15, scope: !18254)
!18269 = !DILocalVariable(name: "msgid", scope: !18254, file: !18235, line: 53, type: !87)
!18270 = !DILocation(line: 53, column: 15, scope: !18254)
!18271 = !DILocalVariable(name: "option", scope: !18254, file: !18235, line: 54, type: !87)
!18272 = !DILocation(line: 54, column: 15, scope: !18254)
!18273 = !DILocalVariable(name: "option_buffer", scope: !18254, file: !18235, line: 55, type: !268)
!18274 = !DILocation(line: 55, column: 8, scope: !18254)
!18275 = !DILocation(line: 57, column: 11, scope: !18254)
!18276 = !DILocation(line: 57, column: 3, scope: !18254)
!18277 = !DILocation(line: 60, column: 7, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18254, file: !18235, line: 58, column: 5)
!18279 = !DILocation(line: 63, column: 13, scope: !18278)
!18280 = !DILocation(line: 64, column: 7, scope: !18278)
!18281 = !DILocation(line: 68, column: 13, scope: !18278)
!18282 = !DILocation(line: 69, column: 7, scope: !18278)
!18283 = !DILocation(line: 72, column: 13, scope: !18278)
!18284 = !DILocation(line: 73, column: 7, scope: !18278)
!18285 = !DILocation(line: 76, column: 7, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18254, file: !18235, line: 76, column: 7)
!18287 = !DILocation(line: 76, column: 15, scope: !18286)
!18288 = !DILocation(line: 76, column: 7, scope: !18254)
!18289 = !DILocation(line: 78, column: 18, scope: !18290)
!18290 = distinct !DILexicalBlock(scope: !18286, file: !18235, line: 77, column: 5)
!18291 = !DILocation(line: 78, column: 15, scope: !18290)
!18292 = !DILocation(line: 79, column: 26, scope: !18290)
!18293 = !DILocation(line: 79, column: 7, scope: !18290)
!18294 = !DILocation(line: 79, column: 24, scope: !18290)
!18295 = !DILocation(line: 80, column: 7, scope: !18290)
!18296 = !DILocation(line: 80, column: 24, scope: !18290)
!18297 = !DILocation(line: 81, column: 16, scope: !18290)
!18298 = !DILocation(line: 81, column: 14, scope: !18290)
!18299 = !DILocation(line: 82, column: 5, scope: !18290)
!18300 = !DILocation(line: 84, column: 14, scope: !18286)
!18301 = !DILocation(line: 84, column: 27, scope: !18286)
!18302 = !DILocation(line: 84, column: 36, scope: !18286)
!18303 = !DILocation(line: 84, column: 12, scope: !18286)
!18304 = !DILocation(line: 86, column: 10, scope: !18254)
!18305 = !DILocation(line: 86, column: 35, scope: !18254)
!18306 = !DILocation(line: 86, column: 26, scope: !18254)
!18307 = !DILocation(line: 86, column: 43, scope: !18254)
!18308 = !DILocation(line: 86, column: 52, scope: !18254)
!18309 = !DILocation(line: 86, column: 60, scope: !18254)
!18310 = !DILocation(line: 86, column: 3, scope: !18254)
!18311 = !DILocation(line: 87, column: 1, scope: !18254)
!18312 = distinct !DISubprogram(name: "xstrtoumax", scope: !17974, file: !17974, line: 76, type: !1998, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1995, retainedNodes: !309)
!18313 = !DILocalVariable(name: "s", arg: 1, scope: !18312, file: !17974, line: 76, type: !87)
!18314 = !DILocation(line: 76, column: 24, scope: !18312)
!18315 = !DILocalVariable(name: "ptr", arg: 2, scope: !18312, file: !17974, line: 76, type: !91)
!18316 = !DILocation(line: 76, column: 34, scope: !18312)
!18317 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !18312, file: !17974, line: 76, type: !5)
!18318 = !DILocation(line: 76, column: 43, scope: !18312)
!18319 = !DILocalVariable(name: "val", arg: 4, scope: !18312, file: !17974, line: 77, type: !2000)
!18320 = !DILocation(line: 77, column: 24, scope: !18312)
!18321 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !18312, file: !17974, line: 77, type: !87)
!18322 = !DILocation(line: 77, column: 41, scope: !18312)
!18323 = !DILocalVariable(name: "t_ptr", scope: !18312, file: !17974, line: 79, type: !7)
!18324 = !DILocation(line: 79, column: 9, scope: !18312)
!18325 = !DILocalVariable(name: "p", scope: !18312, file: !17974, line: 80, type: !91)
!18326 = !DILocation(line: 80, column: 10, scope: !18312)
!18327 = !DILocalVariable(name: "tmp", scope: !18312, file: !17974, line: 81, type: !355)
!18328 = !DILocation(line: 81, column: 14, scope: !18312)
!18329 = !DILocalVariable(name: "err", scope: !18312, file: !17974, line: 82, type: !1974)
!18330 = !DILocation(line: 82, column: 16, scope: !18312)
!18331 = !DILocation(line: 84, column: 3, scope: !18312)
!18332 = !DILocation(line: 86, column: 8, scope: !18312)
!18333 = !DILocation(line: 86, column: 14, scope: !18312)
!18334 = !DILocation(line: 86, column: 5, scope: !18312)
!18335 = !DILocation(line: 88, column: 3, scope: !18312)
!18336 = !DILocation(line: 88, column: 9, scope: !18312)
!18337 = !DILocalVariable(name: "q", scope: !18338, file: !17974, line: 92, type: !87)
!18338 = distinct !DILexicalBlock(scope: !18339, file: !17974, line: 91, column: 5)
!18339 = distinct !DILexicalBlock(scope: !18312, file: !17974, line: 90, column: 7)
!18340 = !DILocation(line: 92, column: 19, scope: !18338)
!18341 = !DILocation(line: 92, column: 23, scope: !18338)
!18342 = !DILocalVariable(name: "ch", scope: !18338, file: !17974, line: 93, type: !317)
!18343 = !DILocation(line: 93, column: 21, scope: !18338)
!18344 = !DILocation(line: 93, column: 27, scope: !18338)
!18345 = !DILocation(line: 93, column: 26, scope: !18338)
!18346 = !DILocation(line: 94, column: 7, scope: !18338)
!18347 = !DILocation(line: 94, column: 14, scope: !18338)
!18348 = !DILocation(line: 95, column: 15, scope: !18338)
!18349 = !DILocation(line: 95, column: 14, scope: !18338)
!18350 = !DILocation(line: 95, column: 12, scope: !18338)
!18351 = distinct !{!18351, !18346, !18352}
!18352 = !DILocation(line: 95, column: 17, scope: !18338)
!18353 = !DILocation(line: 96, column: 11, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18338, file: !17974, line: 96, column: 11)
!18355 = !DILocation(line: 96, column: 14, scope: !18354)
!18356 = !DILocation(line: 96, column: 11, scope: !18338)
!18357 = !DILocation(line: 97, column: 9, scope: !18354)
!18358 = !DILocation(line: 100, column: 19, scope: !18312)
!18359 = !DILocation(line: 100, column: 22, scope: !18312)
!18360 = !DILocation(line: 100, column: 25, scope: !18312)
!18361 = !DILocation(line: 100, column: 9, scope: !18312)
!18362 = !DILocation(line: 100, column: 7, scope: !18312)
!18363 = !DILocation(line: 102, column: 8, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18312, file: !17974, line: 102, column: 7)
!18365 = !DILocation(line: 102, column: 7, scope: !18364)
!18366 = !DILocation(line: 102, column: 13, scope: !18364)
!18367 = !DILocation(line: 102, column: 10, scope: !18364)
!18368 = !DILocation(line: 102, column: 7, scope: !18312)
!18369 = !DILocation(line: 106, column: 11, scope: !18370)
!18370 = distinct !DILexicalBlock(scope: !18371, file: !17974, line: 106, column: 11)
!18371 = distinct !DILexicalBlock(scope: !18364, file: !17974, line: 103, column: 5)
!18372 = !DILocation(line: 106, column: 26, scope: !18370)
!18373 = !DILocation(line: 106, column: 31, scope: !18370)
!18374 = !DILocation(line: 106, column: 30, scope: !18370)
!18375 = !DILocation(line: 106, column: 29, scope: !18370)
!18376 = !DILocation(line: 106, column: 33, scope: !18370)
!18377 = !DILocation(line: 106, column: 44, scope: !18370)
!18378 = !DILocation(line: 106, column: 62, scope: !18370)
!18379 = !DILocation(line: 106, column: 61, scope: !18370)
!18380 = !DILocation(line: 106, column: 60, scope: !18370)
!18381 = !DILocation(line: 106, column: 36, scope: !18370)
!18382 = !DILocation(line: 106, column: 11, scope: !18371)
!18383 = !DILocation(line: 107, column: 13, scope: !18370)
!18384 = !DILocation(line: 107, column: 9, scope: !18370)
!18385 = !DILocation(line: 109, column: 9, scope: !18370)
!18386 = !DILocation(line: 110, column: 5, scope: !18371)
!18387 = !DILocation(line: 111, column: 12, scope: !18388)
!18388 = distinct !DILexicalBlock(scope: !18364, file: !17974, line: 111, column: 12)
!18389 = !DILocation(line: 111, column: 18, scope: !18388)
!18390 = !DILocation(line: 111, column: 12, scope: !18364)
!18391 = !DILocation(line: 113, column: 11, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18393, file: !17974, line: 113, column: 11)
!18393 = distinct !DILexicalBlock(scope: !18388, file: !17974, line: 112, column: 5)
!18394 = !DILocation(line: 113, column: 17, scope: !18392)
!18395 = !DILocation(line: 113, column: 11, scope: !18393)
!18396 = !DILocation(line: 114, column: 9, scope: !18392)
!18397 = !DILocation(line: 115, column: 11, scope: !18393)
!18398 = !DILocation(line: 116, column: 5, scope: !18393)
!18399 = !DILocation(line: 121, column: 8, scope: !18400)
!18400 = distinct !DILexicalBlock(scope: !18312, file: !17974, line: 121, column: 7)
!18401 = !DILocation(line: 121, column: 7, scope: !18312)
!18402 = !DILocation(line: 123, column: 14, scope: !18403)
!18403 = distinct !DILexicalBlock(scope: !18400, file: !17974, line: 122, column: 5)
!18404 = !DILocation(line: 123, column: 8, scope: !18403)
!18405 = !DILocation(line: 123, column: 12, scope: !18403)
!18406 = !DILocation(line: 124, column: 14, scope: !18403)
!18407 = !DILocation(line: 124, column: 7, scope: !18403)
!18408 = !DILocation(line: 127, column: 9, scope: !18409)
!18409 = distinct !DILexicalBlock(scope: !18312, file: !17974, line: 127, column: 7)
!18410 = !DILocation(line: 127, column: 8, scope: !18409)
!18411 = !DILocation(line: 127, column: 7, scope: !18409)
!18412 = !DILocation(line: 127, column: 11, scope: !18409)
!18413 = !DILocation(line: 127, column: 7, scope: !18312)
!18414 = !DILocalVariable(name: "base", scope: !18415, file: !17974, line: 129, type: !5)
!18415 = distinct !DILexicalBlock(scope: !18409, file: !17974, line: 128, column: 5)
!18416 = !DILocation(line: 129, column: 11, scope: !18415)
!18417 = !DILocalVariable(name: "suffixes", scope: !18415, file: !17974, line: 130, type: !5)
!18418 = !DILocation(line: 130, column: 11, scope: !18415)
!18419 = !DILocalVariable(name: "overflow", scope: !18415, file: !17974, line: 131, type: !1974)
!18420 = !DILocation(line: 131, column: 20, scope: !18415)
!18421 = !DILocation(line: 133, column: 20, scope: !18422)
!18422 = distinct !DILexicalBlock(scope: !18415, file: !17974, line: 133, column: 11)
!18423 = !DILocation(line: 133, column: 38, scope: !18422)
!18424 = !DILocation(line: 133, column: 37, scope: !18422)
!18425 = !DILocation(line: 133, column: 36, scope: !18422)
!18426 = !DILocation(line: 133, column: 12, scope: !18422)
!18427 = !DILocation(line: 133, column: 11, scope: !18415)
!18428 = !DILocation(line: 135, column: 18, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18422, file: !17974, line: 134, column: 9)
!18430 = !DILocation(line: 135, column: 12, scope: !18429)
!18431 = !DILocation(line: 135, column: 16, scope: !18429)
!18432 = !DILocation(line: 136, column: 18, scope: !18429)
!18433 = !DILocation(line: 136, column: 22, scope: !18429)
!18434 = !DILocation(line: 136, column: 11, scope: !18429)
!18435 = !DILocation(line: 139, column: 17, scope: !18415)
!18436 = !DILocation(line: 139, column: 16, scope: !18415)
!18437 = !DILocation(line: 139, column: 15, scope: !18415)
!18438 = !DILocation(line: 139, column: 7, scope: !18415)
!18439 = !DILocation(line: 151, column: 23, scope: !18440)
!18440 = distinct !DILexicalBlock(scope: !18441, file: !17974, line: 151, column: 15)
!18441 = distinct !DILexicalBlock(scope: !18415, file: !17974, line: 140, column: 9)
!18442 = !DILocation(line: 151, column: 15, scope: !18440)
!18443 = !DILocation(line: 151, column: 15, scope: !18441)
!18444 = !DILocation(line: 152, column: 21, scope: !18440)
!18445 = !DILocation(line: 152, column: 13, scope: !18440)
!18446 = !DILocation(line: 155, column: 21, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18448, file: !17974, line: 155, column: 21)
!18448 = distinct !DILexicalBlock(scope: !18440, file: !17974, line: 153, column: 15)
!18449 = !DILocation(line: 155, column: 29, scope: !18447)
!18450 = !DILocation(line: 155, column: 21, scope: !18448)
!18451 = !DILocation(line: 156, column: 28, scope: !18447)
!18452 = !DILocation(line: 156, column: 19, scope: !18447)
!18453 = !DILocation(line: 157, column: 17, scope: !18448)
!18454 = !DILocation(line: 161, column: 22, scope: !18448)
!18455 = !DILocation(line: 162, column: 25, scope: !18448)
!18456 = !DILocation(line: 163, column: 17, scope: !18448)
!18457 = !DILocation(line: 164, column: 15, scope: !18448)
!18458 = !DILocation(line: 165, column: 9, scope: !18441)
!18459 = !DILocation(line: 167, column: 17, scope: !18415)
!18460 = !DILocation(line: 167, column: 16, scope: !18415)
!18461 = !DILocation(line: 167, column: 15, scope: !18415)
!18462 = !DILocation(line: 167, column: 7, scope: !18415)
!18463 = !DILocation(line: 170, column: 22, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18415, file: !17974, line: 168, column: 9)
!18465 = !DILocation(line: 170, column: 20, scope: !18464)
!18466 = !DILocation(line: 171, column: 11, scope: !18464)
!18467 = !DILocation(line: 177, column: 22, scope: !18464)
!18468 = !DILocation(line: 177, column: 20, scope: !18464)
!18469 = !DILocation(line: 178, column: 11, scope: !18464)
!18470 = !DILocation(line: 181, column: 20, scope: !18464)
!18471 = !DILocation(line: 182, column: 11, scope: !18464)
!18472 = !DILocation(line: 185, column: 48, scope: !18464)
!18473 = !DILocation(line: 185, column: 22, scope: !18464)
!18474 = !DILocation(line: 185, column: 20, scope: !18464)
!18475 = !DILocation(line: 186, column: 11, scope: !18464)
!18476 = !DILocation(line: 190, column: 48, scope: !18464)
!18477 = !DILocation(line: 190, column: 22, scope: !18464)
!18478 = !DILocation(line: 190, column: 20, scope: !18464)
!18479 = !DILocation(line: 191, column: 11, scope: !18464)
!18480 = !DILocation(line: 195, column: 48, scope: !18464)
!18481 = !DILocation(line: 195, column: 22, scope: !18464)
!18482 = !DILocation(line: 195, column: 20, scope: !18464)
!18483 = !DILocation(line: 196, column: 11, scope: !18464)
!18484 = !DILocation(line: 200, column: 48, scope: !18464)
!18485 = !DILocation(line: 200, column: 22, scope: !18464)
!18486 = !DILocation(line: 200, column: 20, scope: !18464)
!18487 = !DILocation(line: 201, column: 11, scope: !18464)
!18488 = !DILocation(line: 204, column: 48, scope: !18464)
!18489 = !DILocation(line: 204, column: 22, scope: !18464)
!18490 = !DILocation(line: 204, column: 20, scope: !18464)
!18491 = !DILocation(line: 205, column: 11, scope: !18464)
!18492 = !DILocation(line: 209, column: 48, scope: !18464)
!18493 = !DILocation(line: 209, column: 22, scope: !18464)
!18494 = !DILocation(line: 209, column: 20, scope: !18464)
!18495 = !DILocation(line: 210, column: 11, scope: !18464)
!18496 = !DILocation(line: 213, column: 22, scope: !18464)
!18497 = !DILocation(line: 213, column: 20, scope: !18464)
!18498 = !DILocation(line: 214, column: 11, scope: !18464)
!18499 = !DILocation(line: 217, column: 48, scope: !18464)
!18500 = !DILocation(line: 217, column: 22, scope: !18464)
!18501 = !DILocation(line: 217, column: 20, scope: !18464)
!18502 = !DILocation(line: 218, column: 11, scope: !18464)
!18503 = !DILocation(line: 221, column: 48, scope: !18464)
!18504 = !DILocation(line: 221, column: 22, scope: !18464)
!18505 = !DILocation(line: 221, column: 20, scope: !18464)
!18506 = !DILocation(line: 222, column: 11, scope: !18464)
!18507 = !DILocation(line: 225, column: 18, scope: !18464)
!18508 = !DILocation(line: 225, column: 12, scope: !18464)
!18509 = !DILocation(line: 225, column: 16, scope: !18464)
!18510 = !DILocation(line: 226, column: 18, scope: !18464)
!18511 = !DILocation(line: 226, column: 22, scope: !18464)
!18512 = !DILocation(line: 226, column: 11, scope: !18464)
!18513 = !DILocation(line: 229, column: 14, scope: !18415)
!18514 = !DILocation(line: 229, column: 11, scope: !18415)
!18515 = !DILocation(line: 230, column: 13, scope: !18415)
!18516 = !DILocation(line: 230, column: 8, scope: !18415)
!18517 = !DILocation(line: 230, column: 10, scope: !18415)
!18518 = !DILocation(line: 231, column: 13, scope: !18519)
!18519 = distinct !DILexicalBlock(scope: !18415, file: !17974, line: 231, column: 11)
!18520 = !DILocation(line: 231, column: 12, scope: !18519)
!18521 = !DILocation(line: 231, column: 11, scope: !18519)
!18522 = !DILocation(line: 231, column: 11, scope: !18415)
!18523 = !DILocation(line: 232, column: 13, scope: !18519)
!18524 = !DILocation(line: 232, column: 9, scope: !18519)
!18525 = !DILocation(line: 233, column: 5, scope: !18415)
!18526 = !DILocation(line: 235, column: 10, scope: !18312)
!18527 = !DILocation(line: 235, column: 4, scope: !18312)
!18528 = !DILocation(line: 235, column: 8, scope: !18312)
!18529 = !DILocation(line: 236, column: 10, scope: !18312)
!18530 = !DILocation(line: 236, column: 3, scope: !18312)
!18531 = !DILocation(line: 237, column: 1, scope: !18312)
!18532 = distinct !DISubprogram(name: "bkm_scale", scope: !17974, file: !17974, line: 48, type: !2001, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1995, retainedNodes: !309)
!18533 = !DILocalVariable(name: "x", arg: 1, scope: !18532, file: !17974, line: 48, type: !2000)
!18534 = !DILocation(line: 48, column: 24, scope: !18532)
!18535 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !18532, file: !17974, line: 48, type: !5)
!18536 = !DILocation(line: 48, column: 31, scope: !18532)
!18537 = !DILocation(line: 55, column: 26, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18532, file: !17974, line: 55, column: 7)
!18539 = !DILocation(line: 55, column: 24, scope: !18538)
!18540 = !DILocation(line: 55, column: 42, scope: !18538)
!18541 = !DILocation(line: 55, column: 41, scope: !18538)
!18542 = !DILocation(line: 55, column: 39, scope: !18538)
!18543 = !DILocation(line: 55, column: 7, scope: !18532)
!18544 = !DILocation(line: 57, column: 8, scope: !18545)
!18545 = distinct !DILexicalBlock(scope: !18538, file: !17974, line: 56, column: 5)
!18546 = !DILocation(line: 57, column: 10, scope: !18545)
!18547 = !DILocation(line: 58, column: 7, scope: !18545)
!18548 = !DILocation(line: 60, column: 9, scope: !18532)
!18549 = !DILocation(line: 60, column: 4, scope: !18532)
!18550 = !DILocation(line: 60, column: 6, scope: !18532)
!18551 = !DILocation(line: 61, column: 3, scope: !18532)
!18552 = !DILocation(line: 62, column: 1, scope: !18532)
!18553 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !17974, file: !17974, line: 65, type: !2003, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1995, retainedNodes: !309)
!18554 = !DILocalVariable(name: "x", arg: 1, scope: !18553, file: !17974, line: 65, type: !2000)
!18555 = !DILocation(line: 65, column: 33, scope: !18553)
!18556 = !DILocalVariable(name: "base", arg: 2, scope: !18553, file: !17974, line: 65, type: !5)
!18557 = !DILocation(line: 65, column: 40, scope: !18553)
!18558 = !DILocalVariable(name: "power", arg: 3, scope: !18553, file: !17974, line: 65, type: !5)
!18559 = !DILocation(line: 65, column: 50, scope: !18553)
!18560 = !DILocalVariable(name: "err", scope: !18553, file: !17974, line: 67, type: !1974)
!18561 = !DILocation(line: 67, column: 16, scope: !18553)
!18562 = !DILocation(line: 68, column: 3, scope: !18553)
!18563 = !DILocation(line: 68, column: 15, scope: !18553)
!18564 = !DILocation(line: 69, column: 23, scope: !18553)
!18565 = !DILocation(line: 69, column: 26, scope: !18553)
!18566 = !DILocation(line: 69, column: 12, scope: !18553)
!18567 = !DILocation(line: 69, column: 9, scope: !18553)
!18568 = distinct !{!18568, !18562, !18569}
!18569 = !DILocation(line: 69, column: 30, scope: !18553)
!18570 = !DILocation(line: 70, column: 10, scope: !18553)
!18571 = !DILocation(line: 70, column: 3, scope: !18553)
!18572 = distinct !DISubprogram(name: "explicit_bzero", scope: !18573, file: !18573, line: 39, type: !2008, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2005, retainedNodes: !309)
!18573 = !DIFile(filename: "lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!18574 = !DILocalVariable(name: "s", arg: 1, scope: !18572, file: !18573, line: 39, type: !47)
!18575 = !DILocation(line: 39, column: 23, scope: !18572)
!18576 = !DILocalVariable(name: "len", arg: 2, scope: !18572, file: !18573, line: 39, type: !52)
!18577 = !DILocation(line: 39, column: 33, scope: !18572)
!18578 = !DILocation(line: 44, column: 11, scope: !18572)
!18579 = !DILocation(line: 44, column: 20, scope: !18572)
!18580 = !DILocation(line: 44, column: 3, scope: !18572)
!18581 = !DILocation(line: 50, column: 1, scope: !18572)
!18582 = distinct !DISubprogram(name: "rpl_fclose", scope: !18583, file: !18583, line: 58, type: !2013, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2010, retainedNodes: !309)
!18583 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!18584 = !DILocalVariable(name: "fp", arg: 1, scope: !18582, file: !18583, line: 58, type: !2015)
!18585 = !DILocation(line: 58, column: 19, scope: !18582)
!18586 = !DILocalVariable(name: "saved_errno", scope: !18582, file: !18583, line: 60, type: !5)
!18587 = !DILocation(line: 60, column: 7, scope: !18582)
!18588 = !DILocalVariable(name: "fd", scope: !18582, file: !18583, line: 61, type: !5)
!18589 = !DILocation(line: 61, column: 7, scope: !18582)
!18590 = !DILocalVariable(name: "result", scope: !18582, file: !18583, line: 62, type: !5)
!18591 = !DILocation(line: 62, column: 7, scope: !18582)
!18592 = !DILocation(line: 65, column: 16, scope: !18582)
!18593 = !DILocation(line: 65, column: 8, scope: !18582)
!18594 = !DILocation(line: 65, column: 6, scope: !18582)
!18595 = !DILocation(line: 66, column: 7, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18582, file: !18583, line: 66, column: 7)
!18597 = !DILocation(line: 66, column: 10, scope: !18596)
!18598 = !DILocation(line: 66, column: 7, scope: !18582)
!18599 = !DILocation(line: 67, column: 28, scope: !18596)
!18600 = !DILocation(line: 67, column: 12, scope: !18596)
!18601 = !DILocation(line: 67, column: 5, scope: !18596)
!18602 = !DILocation(line: 72, column: 9, scope: !18603)
!18603 = distinct !DILexicalBlock(scope: !18582, file: !18583, line: 72, column: 7)
!18604 = !DILocation(line: 72, column: 23, scope: !18603)
!18605 = !DILocation(line: 72, column: 41, scope: !18603)
!18606 = !DILocation(line: 72, column: 33, scope: !18603)
!18607 = !DILocation(line: 72, column: 26, scope: !18603)
!18608 = !DILocation(line: 72, column: 59, scope: !18603)
!18609 = !DILocation(line: 73, column: 7, scope: !18603)
!18610 = !DILocation(line: 73, column: 18, scope: !18603)
!18611 = !DILocation(line: 73, column: 10, scope: !18603)
!18612 = !DILocation(line: 72, column: 7, scope: !18582)
!18613 = !DILocation(line: 74, column: 19, scope: !18603)
!18614 = !DILocation(line: 74, column: 17, scope: !18603)
!18615 = !DILocation(line: 74, column: 5, scope: !18603)
!18616 = !DILocation(line: 100, column: 28, scope: !18582)
!18617 = !DILocation(line: 100, column: 12, scope: !18582)
!18618 = !DILocation(line: 100, column: 10, scope: !18582)
!18619 = !DILocation(line: 105, column: 7, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18582, file: !18583, line: 105, column: 7)
!18621 = !DILocation(line: 105, column: 19, scope: !18620)
!18622 = !DILocation(line: 105, column: 7, scope: !18582)
!18623 = !DILocation(line: 107, column: 15, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18620, file: !18583, line: 106, column: 5)
!18625 = !DILocation(line: 107, column: 7, scope: !18624)
!18626 = !DILocation(line: 107, column: 13, scope: !18624)
!18627 = !DILocation(line: 108, column: 14, scope: !18624)
!18628 = !DILocation(line: 109, column: 5, scope: !18624)
!18629 = !DILocation(line: 111, column: 10, scope: !18582)
!18630 = !DILocation(line: 111, column: 3, scope: !18582)
!18631 = !DILocation(line: 112, column: 1, scope: !18582)
!18632 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1347, file: !1347, line: 202, type: !18633, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1350, retainedNodes: !309)
!18633 = !DISubroutineType(types: !18634)
!18634 = !{!5, !5, !5, null}
!18635 = !DILocalVariable(name: "fd", arg: 1, scope: !18632, file: !1347, line: 202, type: !5)
!18636 = !DILocation(line: 202, column: 12, scope: !18632)
!18637 = !DILocalVariable(name: "action", arg: 2, scope: !18632, file: !1347, line: 202, type: !5)
!18638 = !DILocation(line: 202, column: 20, scope: !18632)
!18639 = !DILocalVariable(name: "arg", scope: !18632, file: !1347, line: 208, type: !1353)
!18640 = !DILocation(line: 208, column: 11, scope: !18632)
!18641 = !DILocalVariable(name: "result", scope: !18632, file: !1347, line: 209, type: !5)
!18642 = !DILocation(line: 209, column: 7, scope: !18632)
!18643 = !DILocation(line: 210, column: 3, scope: !18632)
!18644 = !DILocation(line: 211, column: 11, scope: !18632)
!18645 = !DILocation(line: 211, column: 3, scope: !18632)
!18646 = !DILocalVariable(name: "target", scope: !18647, file: !1347, line: 215, type: !5)
!18647 = distinct !DILexicalBlock(scope: !18648, file: !1347, line: 214, column: 7)
!18648 = distinct !DILexicalBlock(scope: !18632, file: !1347, line: 212, column: 5)
!18649 = !DILocation(line: 215, column: 13, scope: !18647)
!18650 = !DILocation(line: 215, column: 22, scope: !18647)
!18651 = !DILocation(line: 216, column: 35, scope: !18647)
!18652 = !DILocation(line: 216, column: 39, scope: !18647)
!18653 = !DILocation(line: 216, column: 18, scope: !18647)
!18654 = !DILocation(line: 216, column: 16, scope: !18647)
!18655 = !DILocation(line: 217, column: 9, scope: !18647)
!18656 = !DILocalVariable(name: "target", scope: !18657, file: !1347, line: 222, type: !5)
!18657 = distinct !DILexicalBlock(scope: !18648, file: !1347, line: 221, column: 7)
!18658 = !DILocation(line: 222, column: 13, scope: !18657)
!18659 = !DILocation(line: 222, column: 22, scope: !18657)
!18660 = !DILocation(line: 223, column: 43, scope: !18657)
!18661 = !DILocation(line: 223, column: 47, scope: !18657)
!18662 = !DILocation(line: 223, column: 18, scope: !18657)
!18663 = !DILocation(line: 223, column: 16, scope: !18657)
!18664 = !DILocation(line: 224, column: 9, scope: !18657)
!18665 = !DILocation(line: 259, column: 17, scope: !18666)
!18666 = distinct !DILexicalBlock(scope: !18648, file: !1347, line: 257, column: 7)
!18667 = !DILocation(line: 259, column: 9, scope: !18666)
!18668 = !DILocation(line: 328, column: 29, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18666, file: !1347, line: 260, column: 11)
!18670 = !DILocation(line: 328, column: 33, scope: !18669)
!18671 = !DILocation(line: 328, column: 22, scope: !18669)
!18672 = !DILocation(line: 328, column: 20, scope: !18669)
!18673 = !DILocation(line: 329, column: 13, scope: !18669)
!18674 = !DILocalVariable(name: "x", scope: !18675, file: !1347, line: 423, type: !5)
!18675 = distinct !DILexicalBlock(scope: !18669, file: !1347, line: 422, column: 13)
!18676 = !DILocation(line: 423, column: 19, scope: !18675)
!18677 = !DILocation(line: 423, column: 23, scope: !18675)
!18678 = !DILocation(line: 424, column: 31, scope: !18675)
!18679 = !DILocation(line: 424, column: 35, scope: !18675)
!18680 = !DILocation(line: 424, column: 43, scope: !18675)
!18681 = !DILocation(line: 424, column: 24, scope: !18675)
!18682 = !DILocation(line: 424, column: 22, scope: !18675)
!18683 = !DILocation(line: 426, column: 13, scope: !18669)
!18684 = !DILocalVariable(name: "p", scope: !18685, file: !1347, line: 431, type: !47)
!18685 = distinct !DILexicalBlock(scope: !18669, file: !1347, line: 430, column: 13)
!18686 = !DILocation(line: 431, column: 21, scope: !18685)
!18687 = !DILocation(line: 431, column: 25, scope: !18685)
!18688 = !DILocation(line: 432, column: 31, scope: !18685)
!18689 = !DILocation(line: 432, column: 35, scope: !18685)
!18690 = !DILocation(line: 432, column: 43, scope: !18685)
!18691 = !DILocation(line: 432, column: 24, scope: !18685)
!18692 = !DILocation(line: 432, column: 22, scope: !18685)
!18693 = !DILocation(line: 434, column: 13, scope: !18669)
!18694 = !DILocation(line: 439, column: 9, scope: !18666)
!18695 = !DILocation(line: 442, column: 3, scope: !18632)
!18696 = !DILocation(line: 443, column: 10, scope: !18632)
!18697 = !DILocation(line: 443, column: 3, scope: !18632)
!18698 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1347, file: !1347, line: 447, type: !1348, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1350, retainedNodes: !309)
!18699 = !DILocalVariable(name: "fd", arg: 1, scope: !18698, file: !1347, line: 447, type: !5)
!18700 = !DILocation(line: 447, column: 22, scope: !18698)
!18701 = !DILocalVariable(name: "target", arg: 2, scope: !18698, file: !1347, line: 447, type: !5)
!18702 = !DILocation(line: 447, column: 30, scope: !18698)
!18703 = !DILocalVariable(name: "result", scope: !18698, file: !1347, line: 449, type: !5)
!18704 = !DILocation(line: 449, column: 7, scope: !18698)
!18705 = !DILocation(line: 482, column: 19, scope: !18698)
!18706 = !DILocation(line: 482, column: 32, scope: !18698)
!18707 = !DILocation(line: 482, column: 12, scope: !18698)
!18708 = !DILocation(line: 482, column: 10, scope: !18698)
!18709 = !DILocation(line: 484, column: 10, scope: !18698)
!18710 = !DILocation(line: 484, column: 3, scope: !18698)
!18711 = !DILocalVariable(name: "fd", arg: 1, scope: !1346, file: !1347, line: 488, type: !5)
!18712 = !DILocation(line: 488, column: 30, scope: !1346)
!18713 = !DILocalVariable(name: "target", arg: 2, scope: !1346, file: !1347, line: 488, type: !5)
!18714 = !DILocation(line: 488, column: 38, scope: !1346)
!18715 = !DILocalVariable(name: "result", scope: !1346, file: !1347, line: 490, type: !5)
!18716 = !DILocation(line: 490, column: 7, scope: !1346)
!18717 = !DILocation(line: 508, column: 12, scope: !18718)
!18718 = distinct !DILexicalBlock(scope: !1346, file: !1347, line: 508, column: 7)
!18719 = !DILocation(line: 508, column: 9, scope: !18718)
!18720 = !DILocation(line: 508, column: 7, scope: !1346)
!18721 = !DILocation(line: 510, column: 23, scope: !18722)
!18722 = distinct !DILexicalBlock(scope: !18718, file: !1347, line: 509, column: 5)
!18723 = !DILocation(line: 510, column: 44, scope: !18722)
!18724 = !DILocation(line: 510, column: 16, scope: !18722)
!18725 = !DILocation(line: 510, column: 14, scope: !18722)
!18726 = !DILocation(line: 511, column: 16, scope: !18727)
!18727 = distinct !DILexicalBlock(scope: !18722, file: !1347, line: 511, column: 11)
!18728 = !DILocation(line: 511, column: 13, scope: !18727)
!18729 = !DILocation(line: 511, column: 23, scope: !18727)
!18730 = !DILocation(line: 511, column: 26, scope: !18727)
!18731 = !DILocation(line: 511, column: 32, scope: !18727)
!18732 = !DILocation(line: 511, column: 11, scope: !18722)
!18733 = !DILocation(line: 513, column: 30, scope: !18734)
!18734 = distinct !DILexicalBlock(scope: !18727, file: !1347, line: 512, column: 9)
!18735 = !DILocation(line: 518, column: 9, scope: !18734)
!18736 = !DILocation(line: 521, column: 37, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18727, file: !1347, line: 520, column: 9)
!18738 = !DILocation(line: 521, column: 41, scope: !18737)
!18739 = !DILocation(line: 521, column: 20, scope: !18737)
!18740 = !DILocation(line: 521, column: 18, scope: !18737)
!18741 = !DILocation(line: 522, column: 15, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18737, file: !1347, line: 522, column: 15)
!18743 = !DILocation(line: 522, column: 22, scope: !18742)
!18744 = !DILocation(line: 522, column: 15, scope: !18737)
!18745 = !DILocation(line: 523, column: 32, scope: !18742)
!18746 = !DILocation(line: 523, column: 13, scope: !18742)
!18747 = !DILocation(line: 525, column: 5, scope: !18722)
!18748 = !DILocation(line: 528, column: 31, scope: !18718)
!18749 = !DILocation(line: 528, column: 35, scope: !18718)
!18750 = !DILocation(line: 528, column: 14, scope: !18718)
!18751 = !DILocation(line: 528, column: 12, scope: !18718)
!18752 = !DILocation(line: 529, column: 12, scope: !18753)
!18753 = distinct !DILexicalBlock(scope: !1346, file: !1347, line: 529, column: 7)
!18754 = !DILocation(line: 529, column: 9, scope: !18753)
!18755 = !DILocation(line: 529, column: 19, scope: !18753)
!18756 = !DILocation(line: 529, column: 22, scope: !18753)
!18757 = !DILocation(line: 529, column: 41, scope: !18753)
!18758 = !DILocation(line: 529, column: 7, scope: !1346)
!18759 = !DILocalVariable(name: "flags", scope: !18760, file: !1347, line: 531, type: !5)
!18760 = distinct !DILexicalBlock(scope: !18753, file: !1347, line: 530, column: 5)
!18761 = !DILocation(line: 531, column: 11, scope: !18760)
!18762 = !DILocation(line: 531, column: 26, scope: !18760)
!18763 = !DILocation(line: 531, column: 19, scope: !18760)
!18764 = !DILocation(line: 532, column: 11, scope: !18765)
!18765 = distinct !DILexicalBlock(scope: !18760, file: !1347, line: 532, column: 11)
!18766 = !DILocation(line: 532, column: 17, scope: !18765)
!18767 = !DILocation(line: 532, column: 21, scope: !18765)
!18768 = !DILocation(line: 532, column: 31, scope: !18765)
!18769 = !DILocation(line: 532, column: 48, scope: !18765)
!18770 = !DILocation(line: 532, column: 54, scope: !18765)
!18771 = !DILocation(line: 532, column: 24, scope: !18765)
!18772 = !DILocation(line: 532, column: 68, scope: !18765)
!18773 = !DILocation(line: 532, column: 11, scope: !18760)
!18774 = !DILocalVariable(name: "saved_errno", scope: !18775, file: !1347, line: 534, type: !5)
!18775 = distinct !DILexicalBlock(scope: !18765, file: !1347, line: 533, column: 9)
!18776 = !DILocation(line: 534, column: 15, scope: !18775)
!18777 = !DILocation(line: 534, column: 29, scope: !18775)
!18778 = !DILocation(line: 535, column: 18, scope: !18775)
!18779 = !DILocation(line: 535, column: 11, scope: !18775)
!18780 = !DILocation(line: 536, column: 19, scope: !18775)
!18781 = !DILocation(line: 536, column: 11, scope: !18775)
!18782 = !DILocation(line: 536, column: 17, scope: !18775)
!18783 = !DILocation(line: 537, column: 18, scope: !18775)
!18784 = !DILocation(line: 538, column: 9, scope: !18775)
!18785 = !DILocation(line: 539, column: 5, scope: !18760)
!18786 = !DILocation(line: 541, column: 10, scope: !1346)
!18787 = !DILocation(line: 541, column: 3, scope: !1346)
!18788 = distinct !DISubprogram(name: "rpl_fflush", scope: !18789, file: !18789, line: 129, type: !2058, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2055, retainedNodes: !309)
!18789 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!18790 = !DILocalVariable(name: "stream", arg: 1, scope: !18788, file: !18789, line: 129, type: !2060)
!18791 = !DILocation(line: 129, column: 19, scope: !18788)
!18792 = !DILocation(line: 150, column: 7, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18788, file: !18789, line: 150, column: 7)
!18794 = !DILocation(line: 150, column: 14, scope: !18793)
!18795 = !DILocation(line: 150, column: 22, scope: !18793)
!18796 = !DILocation(line: 150, column: 27, scope: !18793)
!18797 = !DILocation(line: 150, column: 7, scope: !18788)
!18798 = !DILocation(line: 151, column: 20, scope: !18793)
!18799 = !DILocation(line: 151, column: 12, scope: !18793)
!18800 = !DILocation(line: 151, column: 5, scope: !18793)
!18801 = !DILocation(line: 156, column: 44, scope: !18788)
!18802 = !DILocation(line: 156, column: 3, scope: !18788)
!18803 = !DILocation(line: 158, column: 18, scope: !18788)
!18804 = !DILocation(line: 158, column: 10, scope: !18788)
!18805 = !DILocation(line: 158, column: 3, scope: !18788)
!18806 = !DILocation(line: 232, column: 1, scope: !18788)
!18807 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !18789, file: !18789, line: 41, type: !2100, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2055, retainedNodes: !309)
!18808 = !DILocalVariable(name: "fp", arg: 1, scope: !18807, file: !18789, line: 41, type: !2060)
!18809 = !DILocation(line: 41, column: 48, scope: !18807)
!18810 = !DILocation(line: 43, column: 7, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18807, file: !18789, line: 43, column: 7)
!18812 = !DILocation(line: 43, column: 11, scope: !18811)
!18813 = !{!18814, !2343, i64 0}
!18814 = !{!"_IO_FILE", !2343, i64 0, !2356, i64 8, !2356, i64 16, !2356, i64 24, !2356, i64 32, !2356, i64 40, !2356, i64 48, !2356, i64 56, !2356, i64 64, !2356, i64 72, !2356, i64 80, !2356, i64 88, !2356, i64 96, !2356, i64 104, !2343, i64 112, !2343, i64 116, !2517, i64 120, !3490, i64 128, !2344, i64 130, !2344, i64 131, !2356, i64 136, !2517, i64 144, !2356, i64 152, !2356, i64 160, !2356, i64 168, !2356, i64 176, !2517, i64 184, !2343, i64 192, !2344, i64 196}
!18815 = !DILocation(line: 43, column: 18, scope: !18811)
!18816 = !DILocation(line: 43, column: 7, scope: !18807)
!18817 = !DILocation(line: 45, column: 13, scope: !18811)
!18818 = !DILocation(line: 45, column: 5, scope: !18811)
!18819 = !DILocation(line: 46, column: 1, scope: !18807)
!18820 = distinct !DISubprogram(name: "rpl_fseeko", scope: !18821, file: !18821, line: 28, type: !2105, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2102, retainedNodes: !309)
!18821 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!18822 = !DILocalVariable(name: "fp", arg: 1, scope: !18820, file: !18821, line: 28, type: !2107)
!18823 = !DILocation(line: 28, column: 15, scope: !18820)
!18824 = !DILocalVariable(name: "offset", arg: 2, scope: !18820, file: !18821, line: 28, type: !1484)
!18825 = !DILocation(line: 28, column: 25, scope: !18820)
!18826 = !DILocalVariable(name: "whence", arg: 3, scope: !18820, file: !18821, line: 28, type: !5)
!18827 = !DILocation(line: 28, column: 37, scope: !18820)
!18828 = !DILocation(line: 52, column: 7, scope: !18829)
!18829 = distinct !DILexicalBlock(scope: !18820, file: !18821, line: 52, column: 7)
!18830 = !DILocation(line: 52, column: 11, scope: !18829)
!18831 = !{!18814, !2356, i64 16}
!18832 = !DILocation(line: 52, column: 27, scope: !18829)
!18833 = !DILocation(line: 52, column: 31, scope: !18829)
!18834 = !{!18814, !2356, i64 8}
!18835 = !DILocation(line: 52, column: 24, scope: !18829)
!18836 = !DILocation(line: 53, column: 7, scope: !18829)
!18837 = !DILocation(line: 53, column: 10, scope: !18829)
!18838 = !DILocation(line: 53, column: 14, scope: !18829)
!18839 = !{!18814, !2356, i64 40}
!18840 = !DILocation(line: 53, column: 31, scope: !18829)
!18841 = !DILocation(line: 53, column: 35, scope: !18829)
!18842 = !{!18814, !2356, i64 32}
!18843 = !DILocation(line: 53, column: 28, scope: !18829)
!18844 = !DILocation(line: 54, column: 7, scope: !18829)
!18845 = !DILocation(line: 54, column: 10, scope: !18829)
!18846 = !DILocation(line: 54, column: 14, scope: !18829)
!18847 = !{!18814, !2356, i64 72}
!18848 = !DILocation(line: 54, column: 28, scope: !18829)
!18849 = !DILocation(line: 52, column: 7, scope: !18820)
!18850 = !DILocalVariable(name: "pos", scope: !18851, file: !18821, line: 117, type: !1484)
!18851 = distinct !DILexicalBlock(scope: !18829, file: !18821, line: 113, column: 5)
!18852 = !DILocation(line: 117, column: 13, scope: !18851)
!18853 = !DILocation(line: 117, column: 34, scope: !18851)
!18854 = !DILocation(line: 117, column: 26, scope: !18851)
!18855 = !DILocation(line: 117, column: 39, scope: !18851)
!18856 = !DILocation(line: 117, column: 47, scope: !18851)
!18857 = !DILocation(line: 117, column: 19, scope: !18851)
!18858 = !DILocation(line: 118, column: 11, scope: !18859)
!18859 = distinct !DILexicalBlock(scope: !18851, file: !18821, line: 118, column: 11)
!18860 = !DILocation(line: 118, column: 15, scope: !18859)
!18861 = !DILocation(line: 118, column: 11, scope: !18851)
!18862 = !DILocation(line: 124, column: 11, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18859, file: !18821, line: 119, column: 9)
!18864 = !DILocation(line: 129, column: 7, scope: !18851)
!18865 = !DILocation(line: 129, column: 11, scope: !18851)
!18866 = !DILocation(line: 129, column: 18, scope: !18851)
!18867 = !DILocation(line: 130, column: 21, scope: !18851)
!18868 = !DILocation(line: 130, column: 7, scope: !18851)
!18869 = !DILocation(line: 130, column: 11, scope: !18851)
!18870 = !DILocation(line: 130, column: 19, scope: !18851)
!18871 = !{!18814, !2517, i64 144}
!18872 = !DILocation(line: 161, column: 7, scope: !18851)
!18873 = !DILocation(line: 163, column: 18, scope: !18820)
!18874 = !DILocation(line: 163, column: 22, scope: !18820)
!18875 = !DILocation(line: 163, column: 30, scope: !18820)
!18876 = !DILocation(line: 163, column: 10, scope: !18820)
!18877 = !DILocation(line: 163, column: 3, scope: !18820)
!18878 = !DILocation(line: 164, column: 1, scope: !18820)
!18879 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !18880, file: !18880, line: 461, type: !2150, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2147, retainedNodes: !309)
!18880 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!18881 = !DILocalVariable(name: "pwc", arg: 1, scope: !18879, file: !18880, line: 461, type: !2152)
!18882 = !DILocation(line: 461, column: 23, scope: !18879)
!18883 = !DILocalVariable(name: "s", arg: 2, scope: !18879, file: !18880, line: 461, type: !87)
!18884 = !DILocation(line: 461, column: 40, scope: !18879)
!18885 = !DILocalVariable(name: "n", arg: 3, scope: !18879, file: !18880, line: 461, type: !52)
!18886 = !DILocation(line: 461, column: 50, scope: !18879)
!18887 = !DILocalVariable(name: "ps", arg: 4, scope: !18879, file: !18880, line: 461, type: !2153)
!18888 = !DILocation(line: 461, column: 64, scope: !18879)
!18889 = !DILocalVariable(name: "ret", scope: !18879, file: !18880, line: 463, type: !52)
!18890 = !DILocation(line: 463, column: 10, scope: !18879)
!18891 = !DILocalVariable(name: "wc", scope: !18879, file: !18880, line: 464, type: !1314)
!18892 = !DILocation(line: 464, column: 11, scope: !18879)
!18893 = !DILocation(line: 480, column: 9, scope: !18894)
!18894 = distinct !DILexicalBlock(scope: !18879, file: !18880, line: 480, column: 7)
!18895 = !DILocation(line: 480, column: 7, scope: !18879)
!18896 = !DILocation(line: 481, column: 9, scope: !18894)
!18897 = !DILocation(line: 481, column: 5, scope: !18894)
!18898 = !DILocation(line: 515, column: 18, scope: !18879)
!18899 = !DILocation(line: 515, column: 23, scope: !18879)
!18900 = !DILocation(line: 515, column: 26, scope: !18879)
!18901 = !DILocation(line: 515, column: 29, scope: !18879)
!18902 = !DILocation(line: 515, column: 9, scope: !18879)
!18903 = !DILocation(line: 515, column: 7, scope: !18879)
!18904 = !DILocation(line: 523, column: 22, scope: !18905)
!18905 = distinct !DILexicalBlock(scope: !18879, file: !18880, line: 523, column: 7)
!18906 = !DILocation(line: 523, column: 19, scope: !18905)
!18907 = !DILocation(line: 523, column: 26, scope: !18905)
!18908 = !DILocation(line: 523, column: 29, scope: !18905)
!18909 = !DILocation(line: 523, column: 31, scope: !18905)
!18910 = !DILocation(line: 523, column: 36, scope: !18905)
!18911 = !DILocation(line: 523, column: 41, scope: !18905)
!18912 = !DILocation(line: 523, column: 7, scope: !18879)
!18913 = !DILocalVariable(name: "uc", scope: !18914, file: !18880, line: 525, type: !317)
!18914 = distinct !DILexicalBlock(scope: !18905, file: !18880, line: 524, column: 5)
!18915 = !DILocation(line: 525, column: 21, scope: !18914)
!18916 = !DILocation(line: 525, column: 27, scope: !18914)
!18917 = !DILocation(line: 525, column: 26, scope: !18914)
!18918 = !DILocation(line: 526, column: 14, scope: !18914)
!18919 = !DILocation(line: 526, column: 8, scope: !18914)
!18920 = !DILocation(line: 526, column: 12, scope: !18914)
!18921 = !DILocation(line: 527, column: 7, scope: !18914)
!18922 = !DILocation(line: 531, column: 10, scope: !18879)
!18923 = !DILocation(line: 531, column: 3, scope: !18879)
!18924 = !DILocation(line: 532, column: 1, scope: !18879)
!18925 = distinct !DISubprogram(name: "rpl_nanosleep", scope: !18926, file: !18926, line: 46, type: !2167, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2164, retainedNodes: !309)
!18926 = !DIFile(filename: "lib/nanosleep.c", directory: "/home/mohamad/clone/coreutils")
!18927 = !DILocalVariable(name: "requested_delay", arg: 1, scope: !18925, file: !18926, line: 46, type: !2169)
!18928 = !DILocation(line: 46, column: 35, scope: !18925)
!18929 = !DILocalVariable(name: "remaining_delay", arg: 2, scope: !18925, file: !18926, line: 47, type: !2175)
!18930 = !DILocation(line: 47, column: 29, scope: !18925)
!18931 = !DILocation(line: 56, column: 7, scope: !18932)
!18932 = distinct !DILexicalBlock(scope: !18925, file: !18926, line: 56, column: 7)
!18933 = !DILocation(line: 56, column: 24, scope: !18932)
!18934 = !{!5318, !2517, i64 8}
!18935 = !DILocation(line: 56, column: 32, scope: !18932)
!18936 = !DILocation(line: 56, column: 36, scope: !18932)
!18937 = !DILocation(line: 56, column: 50, scope: !18932)
!18938 = !DILocation(line: 56, column: 67, scope: !18932)
!18939 = !DILocation(line: 56, column: 47, scope: !18932)
!18940 = !DILocation(line: 56, column: 7, scope: !18925)
!18941 = !DILocation(line: 58, column: 7, scope: !18942)
!18942 = distinct !DILexicalBlock(scope: !18932, file: !18926, line: 57, column: 5)
!18943 = !DILocation(line: 58, column: 13, scope: !18942)
!18944 = !DILocation(line: 59, column: 7, scope: !18942)
!18945 = !DILocalVariable(name: "limit", scope: !18946, file: !18926, line: 65, type: !2176)
!18946 = distinct !DILexicalBlock(scope: !18925, file: !18926, line: 62, column: 3)
!18947 = !DILocation(line: 65, column: 18, scope: !18946)
!18948 = !DILocalVariable(name: "seconds", scope: !18946, file: !18926, line: 66, type: !2177)
!18949 = !DILocation(line: 66, column: 12, scope: !18946)
!18950 = !DILocation(line: 66, column: 22, scope: !18946)
!18951 = !DILocation(line: 66, column: 39, scope: !18946)
!18952 = !{!5318, !2517, i64 0}
!18953 = !DILocalVariable(name: "intermediate", scope: !18946, file: !18926, line: 67, type: !2171)
!18954 = !DILocation(line: 67, column: 21, scope: !18946)
!18955 = !DILocation(line: 68, column: 28, scope: !18946)
!18956 = !DILocation(line: 68, column: 45, scope: !18946)
!18957 = !DILocation(line: 68, column: 18, scope: !18946)
!18958 = !DILocation(line: 68, column: 26, scope: !18946)
!18959 = !DILocation(line: 70, column: 5, scope: !18946)
!18960 = !DILocation(line: 70, column: 20, scope: !18946)
!18961 = !DILocation(line: 70, column: 18, scope: !18946)
!18962 = !DILocalVariable(name: "result", scope: !18963, file: !18926, line: 72, type: !5)
!18963 = distinct !DILexicalBlock(scope: !18946, file: !18926, line: 71, column: 7)
!18964 = !DILocation(line: 72, column: 13, scope: !18963)
!18965 = !DILocation(line: 73, column: 22, scope: !18963)
!18966 = !DILocation(line: 73, column: 29, scope: !18963)
!18967 = !DILocation(line: 74, column: 44, scope: !18963)
!18968 = !DILocation(line: 74, column: 18, scope: !18963)
!18969 = !DILocation(line: 74, column: 16, scope: !18963)
!18970 = !DILocation(line: 75, column: 17, scope: !18963)
!18971 = !DILocation(line: 76, column: 13, scope: !18972)
!18972 = distinct !DILexicalBlock(scope: !18963, file: !18926, line: 76, column: 13)
!18973 = !DILocation(line: 76, column: 13, scope: !18963)
!18974 = !DILocation(line: 78, column: 17, scope: !18975)
!18975 = distinct !DILexicalBlock(scope: !18976, file: !18926, line: 78, column: 17)
!18976 = distinct !DILexicalBlock(scope: !18972, file: !18926, line: 77, column: 11)
!18977 = !DILocation(line: 78, column: 17, scope: !18976)
!18978 = !DILocation(line: 79, column: 42, scope: !18975)
!18979 = !DILocation(line: 79, column: 15, scope: !18975)
!18980 = !DILocation(line: 79, column: 32, scope: !18975)
!18981 = !DILocation(line: 79, column: 39, scope: !18975)
!18982 = !DILocation(line: 80, column: 20, scope: !18976)
!18983 = !DILocation(line: 80, column: 13, scope: !18976)
!18984 = !DILocation(line: 82, column: 22, scope: !18963)
!18985 = !DILocation(line: 82, column: 30, scope: !18963)
!18986 = distinct !{!18986, !18959, !18987}
!18987 = !DILocation(line: 83, column: 7, scope: !18946)
!18988 = !DILocation(line: 84, column: 27, scope: !18946)
!18989 = !DILocation(line: 84, column: 18, scope: !18946)
!18990 = !DILocation(line: 84, column: 25, scope: !18946)
!18991 = !DILocation(line: 85, column: 38, scope: !18946)
!18992 = !DILocation(line: 85, column: 12, scope: !18946)
!18993 = !DILocation(line: 85, column: 5, scope: !18946)
!18994 = !DILocation(line: 87, column: 1, scope: !18925)
!18995 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !18996, file: !18996, line: 99, type: !2181, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !309)
!18996 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!18997 = !DILocalVariable(name: "item", arg: 1, scope: !18995, file: !18996, line: 99, type: !2183)
!18998 = !DILocation(line: 99, column: 26, scope: !18995)
!18999 = !DILocation(line: 101, column: 11, scope: !18995)
!19000 = !DILocation(line: 101, column: 3, scope: !18995)
!19001 = !DILocation(line: 126, column: 14, scope: !19002)
!19002 = distinct !DILexicalBlock(scope: !18995, file: !18996, line: 102, column: 5)
!19003 = !DILocation(line: 126, column: 19, scope: !19002)
!19004 = !DILocation(line: 126, column: 30, scope: !19002)
!19005 = !DILocation(line: 126, column: 12, scope: !19002)
!19006 = !DILocation(line: 127, column: 7, scope: !19002)
!19007 = !DILocation(line: 162, column: 7, scope: !19002)
!19008 = !DILocation(line: 164, column: 23, scope: !18995)
!19009 = !DILocation(line: 164, column: 10, scope: !18995)
!19010 = !DILocation(line: 164, column: 3, scope: !18995)
!19011 = distinct !DISubprogram(name: "print_and_abort", scope: !1468, file: !1468, line: 330, type: !167, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19012 = !DILocation(line: 340, column: 12, scope: !19011)
!19013 = !DILocation(line: 340, column: 28, scope: !19011)
!19014 = !DILocation(line: 340, column: 3, scope: !19011)
!19015 = !DILocation(line: 342, column: 9, scope: !19011)
!19016 = !DILocation(line: 342, column: 3, scope: !19011)
!19017 = distinct !DISubprogram(name: "_obstack_begin", scope: !1468, file: !1468, line: 150, type: !1369, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19018 = !DILocalVariable(name: "h", arg: 1, scope: !19017, file: !1468, line: 150, type: !1371)
!19019 = !DILocation(line: 150, column: 33, scope: !19017)
!19020 = !DILocalVariable(name: "size", arg: 2, scope: !19017, file: !1468, line: 151, type: !52)
!19021 = !DILocation(line: 151, column: 33, scope: !19017)
!19022 = !DILocalVariable(name: "alignment", arg: 3, scope: !19017, file: !1468, line: 151, type: !52)
!19023 = !DILocation(line: 151, column: 55, scope: !19017)
!19024 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !19017, file: !1468, line: 152, type: !1396)
!19025 = !DILocation(line: 152, column: 25, scope: !19017)
!19026 = !DILocalVariable(name: "freefun", arg: 5, scope: !19017, file: !1468, line: 153, type: !1048)
!19027 = !DILocation(line: 153, column: 24, scope: !19017)
!19028 = !DILocation(line: 155, column: 23, scope: !19017)
!19029 = !DILocation(line: 155, column: 3, scope: !19017)
!19030 = !DILocation(line: 155, column: 6, scope: !19017)
!19031 = !DILocation(line: 155, column: 15, scope: !19017)
!19032 = !DILocation(line: 155, column: 21, scope: !19017)
!19033 = !DILocation(line: 156, column: 22, scope: !19017)
!19034 = !DILocation(line: 156, column: 3, scope: !19017)
!19035 = !DILocation(line: 156, column: 6, scope: !19017)
!19036 = !DILocation(line: 156, column: 14, scope: !19017)
!19037 = !DILocation(line: 156, column: 20, scope: !19017)
!19038 = !DILocation(line: 157, column: 3, scope: !19017)
!19039 = !DILocation(line: 157, column: 6, scope: !19017)
!19040 = !DILocation(line: 157, column: 20, scope: !19017)
!19041 = !DILocation(line: 158, column: 33, scope: !19017)
!19042 = !DILocation(line: 158, column: 36, scope: !19017)
!19043 = !DILocation(line: 158, column: 42, scope: !19017)
!19044 = !DILocation(line: 158, column: 10, scope: !19017)
!19045 = !DILocation(line: 158, column: 3, scope: !19017)
!19046 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !1468, file: !1468, line: 109, type: !1425, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19047 = !DILocalVariable(name: "h", arg: 1, scope: !19046, file: !1468, line: 109, type: !1371)
!19048 = !DILocation(line: 109, column: 40, scope: !19046)
!19049 = !DILocalVariable(name: "size", arg: 2, scope: !19046, file: !1468, line: 110, type: !52)
!19050 = !DILocation(line: 110, column: 40, scope: !19046)
!19051 = !DILocalVariable(name: "alignment", arg: 3, scope: !19046, file: !1468, line: 110, type: !52)
!19052 = !DILocation(line: 110, column: 62, scope: !19046)
!19053 = !DILocalVariable(name: "chunk", scope: !19046, file: !1468, line: 112, type: !1377)
!19054 = !DILocation(line: 112, column: 26, scope: !19046)
!19055 = !DILocation(line: 114, column: 7, scope: !19056)
!19056 = distinct !DILexicalBlock(scope: !19046, file: !1468, line: 114, column: 7)
!19057 = !DILocation(line: 114, column: 17, scope: !19056)
!19058 = !DILocation(line: 114, column: 7, scope: !19046)
!19059 = !DILocation(line: 115, column: 15, scope: !19056)
!19060 = !DILocation(line: 115, column: 5, scope: !19056)
!19061 = !DILocation(line: 116, column: 7, scope: !19062)
!19062 = distinct !DILexicalBlock(scope: !19046, file: !1468, line: 116, column: 7)
!19063 = !DILocation(line: 116, column: 12, scope: !19062)
!19064 = !DILocation(line: 116, column: 7, scope: !19046)
!19065 = !DILocalVariable(name: "extra", scope: !19066, file: !1468, line: 127, type: !5)
!19066 = distinct !DILexicalBlock(scope: !19062, file: !1468, line: 118, column: 5)
!19067 = !DILocation(line: 127, column: 11, scope: !19066)
!19068 = !DILocation(line: 130, column: 21, scope: !19066)
!19069 = !DILocation(line: 130, column: 19, scope: !19066)
!19070 = !DILocation(line: 130, column: 14, scope: !19066)
!19071 = !DILocation(line: 130, column: 12, scope: !19066)
!19072 = !DILocation(line: 131, column: 5, scope: !19066)
!19073 = !DILocation(line: 133, column: 19, scope: !19046)
!19074 = !DILocation(line: 133, column: 3, scope: !19046)
!19075 = !DILocation(line: 133, column: 6, scope: !19046)
!19076 = !DILocation(line: 133, column: 17, scope: !19046)
!19077 = !{!3147, !2517, i64 0}
!19078 = !DILocation(line: 134, column: 23, scope: !19046)
!19079 = !DILocation(line: 134, column: 33, scope: !19046)
!19080 = !DILocation(line: 134, column: 3, scope: !19046)
!19081 = !DILocation(line: 134, column: 6, scope: !19046)
!19082 = !DILocation(line: 134, column: 21, scope: !19046)
!19083 = !DILocation(line: 136, column: 37, scope: !19046)
!19084 = !DILocation(line: 136, column: 40, scope: !19046)
!19085 = !DILocation(line: 136, column: 43, scope: !19046)
!19086 = !DILocation(line: 136, column: 22, scope: !19046)
!19087 = !DILocation(line: 136, column: 11, scope: !19046)
!19088 = !DILocation(line: 136, column: 14, scope: !19046)
!19089 = !DILocation(line: 136, column: 20, scope: !19046)
!19090 = !DILocation(line: 136, column: 9, scope: !19046)
!19091 = !DILocation(line: 137, column: 8, scope: !19092)
!19092 = distinct !DILexicalBlock(scope: !19046, file: !1468, line: 137, column: 7)
!19093 = !DILocation(line: 137, column: 7, scope: !19046)
!19094 = !DILocation(line: 138, column: 7, scope: !19092)
!19095 = !DILocation(line: 138, column: 5, scope: !19092)
!19096 = !DILocation(line: 139, column: 35, scope: !19046)
!19097 = !DILocation(line: 139, column: 18, scope: !19046)
!19098 = !DILocation(line: 139, column: 21, scope: !19046)
!19099 = !DILocation(line: 139, column: 33, scope: !19046)
!19100 = !DILocation(line: 139, column: 3, scope: !19046)
!19101 = !DILocation(line: 139, column: 6, scope: !19046)
!19102 = !DILocation(line: 139, column: 16, scope: !19046)
!19103 = !DILocation(line: 141, column: 44, scope: !19046)
!19104 = !DILocation(line: 141, column: 35, scope: !19046)
!19105 = !DILocation(line: 141, column: 52, scope: !19046)
!19106 = !DILocation(line: 141, column: 55, scope: !19046)
!19107 = !DILocation(line: 141, column: 50, scope: !19046)
!19108 = !DILocation(line: 141, column: 20, scope: !19046)
!19109 = !DILocation(line: 141, column: 27, scope: !19046)
!19110 = !DILocation(line: 141, column: 33, scope: !19046)
!19111 = !DILocation(line: 141, column: 3, scope: !19046)
!19112 = !DILocation(line: 141, column: 6, scope: !19046)
!19113 = !DILocation(line: 141, column: 18, scope: !19046)
!19114 = !DILocation(line: 142, column: 3, scope: !19046)
!19115 = !DILocation(line: 142, column: 10, scope: !19046)
!19116 = !DILocation(line: 142, column: 15, scope: !19046)
!19117 = !DILocation(line: 144, column: 3, scope: !19046)
!19118 = !DILocation(line: 144, column: 6, scope: !19046)
!19119 = !DILocation(line: 144, column: 25, scope: !19046)
!19120 = !DILocation(line: 145, column: 3, scope: !19046)
!19121 = !DILocation(line: 145, column: 6, scope: !19046)
!19122 = !DILocation(line: 145, column: 19, scope: !19046)
!19123 = !DILocation(line: 146, column: 3, scope: !19046)
!19124 = distinct !DISubprogram(name: "call_chunkfun", scope: !1468, file: !1468, line: 84, type: !1427, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19125 = !DILocalVariable(name: "h", arg: 1, scope: !19124, file: !1468, line: 84, type: !1371)
!19126 = !DILocation(line: 84, column: 32, scope: !19124)
!19127 = !DILocalVariable(name: "size", arg: 2, scope: !19124, file: !1468, line: 84, type: !52)
!19128 = !DILocation(line: 84, column: 42, scope: !19124)
!19129 = !DILocation(line: 86, column: 7, scope: !19130)
!19130 = distinct !DILexicalBlock(scope: !19124, file: !1468, line: 86, column: 7)
!19131 = !DILocation(line: 86, column: 10, scope: !19130)
!19132 = !DILocation(line: 86, column: 7, scope: !19124)
!19133 = !DILocation(line: 87, column: 12, scope: !19130)
!19134 = !DILocation(line: 87, column: 15, scope: !19130)
!19135 = !DILocation(line: 87, column: 24, scope: !19130)
!19136 = !DILocation(line: 87, column: 31, scope: !19130)
!19137 = !DILocation(line: 87, column: 34, scope: !19130)
!19138 = !{!3147, !2356, i64 72}
!19139 = !DILocation(line: 87, column: 45, scope: !19130)
!19140 = !DILocation(line: 87, column: 5, scope: !19130)
!19141 = !DILocation(line: 89, column: 12, scope: !19130)
!19142 = !DILocation(line: 89, column: 15, scope: !19130)
!19143 = !DILocation(line: 89, column: 24, scope: !19130)
!19144 = !DILocation(line: 89, column: 31, scope: !19130)
!19145 = !DILocation(line: 89, column: 5, scope: !19130)
!19146 = !DILocation(line: 90, column: 1, scope: !19124)
!19147 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !1468, file: !1468, line: 162, type: !1415, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19148 = !DILocalVariable(name: "h", arg: 1, scope: !19147, file: !1468, line: 162, type: !1371)
!19149 = !DILocation(line: 162, column: 35, scope: !19147)
!19150 = !DILocalVariable(name: "size", arg: 2, scope: !19147, file: !1468, line: 163, type: !52)
!19151 = !DILocation(line: 163, column: 35, scope: !19147)
!19152 = !DILocalVariable(name: "alignment", arg: 3, scope: !19147, file: !1468, line: 163, type: !52)
!19153 = !DILocation(line: 163, column: 57, scope: !19147)
!19154 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !19147, file: !1468, line: 164, type: !1400)
!19155 = !DILocation(line: 164, column: 27, scope: !19147)
!19156 = !DILocalVariable(name: "freefun", arg: 5, scope: !19147, file: !1468, line: 165, type: !1408)
!19157 = !DILocation(line: 165, column: 26, scope: !19147)
!19158 = !DILocalVariable(name: "arg", arg: 6, scope: !19147, file: !1468, line: 166, type: !47)
!19159 = !DILocation(line: 166, column: 25, scope: !19147)
!19160 = !DILocation(line: 168, column: 23, scope: !19147)
!19161 = !DILocation(line: 168, column: 3, scope: !19147)
!19162 = !DILocation(line: 168, column: 6, scope: !19147)
!19163 = !DILocation(line: 168, column: 15, scope: !19147)
!19164 = !DILocation(line: 168, column: 21, scope: !19147)
!19165 = !DILocation(line: 169, column: 22, scope: !19147)
!19166 = !DILocation(line: 169, column: 3, scope: !19147)
!19167 = !DILocation(line: 169, column: 6, scope: !19147)
!19168 = !DILocation(line: 169, column: 14, scope: !19147)
!19169 = !DILocation(line: 169, column: 20, scope: !19147)
!19170 = !DILocation(line: 170, column: 18, scope: !19147)
!19171 = !DILocation(line: 170, column: 3, scope: !19147)
!19172 = !DILocation(line: 170, column: 6, scope: !19147)
!19173 = !DILocation(line: 170, column: 16, scope: !19147)
!19174 = !DILocation(line: 171, column: 3, scope: !19147)
!19175 = !DILocation(line: 171, column: 6, scope: !19147)
!19176 = !DILocation(line: 171, column: 20, scope: !19147)
!19177 = !DILocation(line: 172, column: 33, scope: !19147)
!19178 = !DILocation(line: 172, column: 36, scope: !19147)
!19179 = !DILocation(line: 172, column: 42, scope: !19147)
!19180 = !DILocation(line: 172, column: 10, scope: !19147)
!19181 = !DILocation(line: 172, column: 3, scope: !19147)
!19182 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !1468, file: !1468, line: 182, type: !1417, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19183 = !DILocalVariable(name: "h", arg: 1, scope: !19182, file: !1468, line: 182, type: !1371)
!19184 = !DILocation(line: 182, column: 36, scope: !19182)
!19185 = !DILocalVariable(name: "length", arg: 2, scope: !19182, file: !1468, line: 182, type: !52)
!19186 = !DILocation(line: 182, column: 55, scope: !19182)
!19187 = !DILocalVariable(name: "old_chunk", scope: !19182, file: !1468, line: 184, type: !1377)
!19188 = !DILocation(line: 184, column: 26, scope: !19182)
!19189 = !DILocation(line: 184, column: 38, scope: !19182)
!19190 = !DILocation(line: 184, column: 41, scope: !19182)
!19191 = !DILocalVariable(name: "new_chunk", scope: !19182, file: !1468, line: 185, type: !1377)
!19192 = !DILocation(line: 185, column: 26, scope: !19182)
!19193 = !DILocalVariable(name: "obj_size", scope: !19182, file: !1468, line: 186, type: !52)
!19194 = !DILocation(line: 186, column: 10, scope: !19182)
!19195 = !DILocation(line: 186, column: 21, scope: !19182)
!19196 = !DILocation(line: 186, column: 24, scope: !19182)
!19197 = !DILocation(line: 186, column: 36, scope: !19182)
!19198 = !DILocation(line: 186, column: 39, scope: !19182)
!19199 = !DILocation(line: 186, column: 34, scope: !19182)
!19200 = !DILocalVariable(name: "object_base", scope: !19182, file: !1468, line: 187, type: !7)
!19201 = !DILocation(line: 187, column: 9, scope: !19182)
!19202 = !DILocalVariable(name: "sum1", scope: !19182, file: !1468, line: 190, type: !52)
!19203 = !DILocation(line: 190, column: 10, scope: !19182)
!19204 = !DILocation(line: 190, column: 17, scope: !19182)
!19205 = !DILocation(line: 190, column: 28, scope: !19182)
!19206 = !DILocation(line: 190, column: 26, scope: !19182)
!19207 = !DILocalVariable(name: "sum2", scope: !19182, file: !1468, line: 191, type: !52)
!19208 = !DILocation(line: 191, column: 10, scope: !19182)
!19209 = !DILocation(line: 191, column: 17, scope: !19182)
!19210 = !DILocation(line: 191, column: 24, scope: !19182)
!19211 = !DILocation(line: 191, column: 27, scope: !19182)
!19212 = !DILocation(line: 191, column: 22, scope: !19182)
!19213 = !DILocalVariable(name: "new_size", scope: !19182, file: !1468, line: 192, type: !52)
!19214 = !DILocation(line: 192, column: 10, scope: !19182)
!19215 = !DILocation(line: 192, column: 21, scope: !19182)
!19216 = !DILocation(line: 192, column: 29, scope: !19182)
!19217 = !DILocation(line: 192, column: 38, scope: !19182)
!19218 = !DILocation(line: 192, column: 26, scope: !19182)
!19219 = !DILocation(line: 192, column: 44, scope: !19182)
!19220 = !DILocation(line: 193, column: 7, scope: !19221)
!19221 = distinct !DILexicalBlock(scope: !19182, file: !1468, line: 193, column: 7)
!19222 = !DILocation(line: 193, column: 18, scope: !19221)
!19223 = !DILocation(line: 193, column: 16, scope: !19221)
!19224 = !DILocation(line: 193, column: 7, scope: !19182)
!19225 = !DILocation(line: 194, column: 16, scope: !19221)
!19226 = !DILocation(line: 194, column: 14, scope: !19221)
!19227 = !DILocation(line: 194, column: 5, scope: !19221)
!19228 = !DILocation(line: 195, column: 7, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19182, file: !1468, line: 195, column: 7)
!19230 = !DILocation(line: 195, column: 18, scope: !19229)
!19231 = !DILocation(line: 195, column: 21, scope: !19229)
!19232 = !DILocation(line: 195, column: 16, scope: !19229)
!19233 = !DILocation(line: 195, column: 7, scope: !19182)
!19234 = !DILocation(line: 196, column: 16, scope: !19229)
!19235 = !DILocation(line: 196, column: 19, scope: !19229)
!19236 = !DILocation(line: 196, column: 14, scope: !19229)
!19237 = !DILocation(line: 196, column: 5, scope: !19229)
!19238 = !DILocation(line: 199, column: 7, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19182, file: !1468, line: 199, column: 7)
!19240 = !DILocation(line: 199, column: 19, scope: !19239)
!19241 = !DILocation(line: 199, column: 16, scope: !19239)
!19242 = !DILocation(line: 199, column: 24, scope: !19239)
!19243 = !DILocation(line: 199, column: 27, scope: !19239)
!19244 = !DILocation(line: 199, column: 35, scope: !19239)
!19245 = !DILocation(line: 199, column: 32, scope: !19239)
!19246 = !DILocation(line: 199, column: 7, scope: !19182)
!19247 = !DILocation(line: 200, column: 32, scope: !19239)
!19248 = !DILocation(line: 200, column: 35, scope: !19239)
!19249 = !DILocation(line: 200, column: 17, scope: !19239)
!19250 = !DILocation(line: 200, column: 15, scope: !19239)
!19251 = !DILocation(line: 200, column: 5, scope: !19239)
!19252 = !DILocation(line: 201, column: 8, scope: !19253)
!19253 = distinct !DILexicalBlock(scope: !19182, file: !1468, line: 201, column: 7)
!19254 = !DILocation(line: 201, column: 7, scope: !19182)
!19255 = !DILocation(line: 202, column: 7, scope: !19253)
!19256 = !DILocation(line: 202, column: 5, scope: !19253)
!19257 = !DILocation(line: 203, column: 14, scope: !19182)
!19258 = !DILocation(line: 203, column: 3, scope: !19182)
!19259 = !DILocation(line: 203, column: 6, scope: !19182)
!19260 = !DILocation(line: 203, column: 12, scope: !19182)
!19261 = !DILocation(line: 204, column: 21, scope: !19182)
!19262 = !DILocation(line: 204, column: 3, scope: !19182)
!19263 = !DILocation(line: 204, column: 14, scope: !19182)
!19264 = !DILocation(line: 204, column: 19, scope: !19182)
!19265 = !DILocation(line: 205, column: 48, scope: !19182)
!19266 = !DILocation(line: 205, column: 39, scope: !19182)
!19267 = !DILocation(line: 205, column: 60, scope: !19182)
!19268 = !DILocation(line: 205, column: 58, scope: !19182)
!19269 = !DILocation(line: 205, column: 22, scope: !19182)
!19270 = !DILocation(line: 205, column: 25, scope: !19182)
!19271 = !DILocation(line: 205, column: 37, scope: !19182)
!19272 = !DILocation(line: 205, column: 3, scope: !19182)
!19273 = !DILocation(line: 205, column: 14, scope: !19182)
!19274 = !DILocation(line: 205, column: 20, scope: !19182)
!19275 = !DILocation(line: 209, column: 5, scope: !19182)
!19276 = !DILocation(line: 208, column: 15, scope: !19182)
!19277 = !DILocation(line: 212, column: 11, scope: !19182)
!19278 = !DILocation(line: 212, column: 24, scope: !19182)
!19279 = !DILocation(line: 212, column: 27, scope: !19182)
!19280 = !DILocation(line: 212, column: 40, scope: !19182)
!19281 = !DILocation(line: 212, column: 3, scope: !19182)
!19282 = !DILocation(line: 217, column: 8, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19182, file: !1468, line: 217, column: 7)
!19284 = !DILocation(line: 217, column: 11, scope: !19283)
!19285 = !DILocation(line: 218, column: 7, scope: !19283)
!19286 = !DILocation(line: 218, column: 11, scope: !19283)
!19287 = !DILocation(line: 218, column: 14, scope: !19283)
!19288 = !DILocation(line: 219, column: 14, scope: !19283)
!19289 = !DILocation(line: 219, column: 11, scope: !19283)
!19290 = !DILocation(line: 217, column: 7, scope: !19182)
!19291 = !DILocation(line: 222, column: 25, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19283, file: !1468, line: 221, column: 5)
!19293 = !DILocation(line: 222, column: 36, scope: !19292)
!19294 = !DILocation(line: 222, column: 7, scope: !19292)
!19295 = !DILocation(line: 222, column: 18, scope: !19292)
!19296 = !DILocation(line: 222, column: 23, scope: !19292)
!19297 = !DILocation(line: 223, column: 21, scope: !19292)
!19298 = !DILocation(line: 223, column: 24, scope: !19292)
!19299 = !DILocation(line: 223, column: 7, scope: !19292)
!19300 = !DILocation(line: 224, column: 5, scope: !19292)
!19301 = !DILocation(line: 226, column: 20, scope: !19182)
!19302 = !DILocation(line: 226, column: 3, scope: !19182)
!19303 = !DILocation(line: 226, column: 6, scope: !19182)
!19304 = !DILocation(line: 226, column: 18, scope: !19182)
!19305 = !DILocation(line: 227, column: 18, scope: !19182)
!19306 = !DILocation(line: 227, column: 21, scope: !19182)
!19307 = !DILocation(line: 227, column: 35, scope: !19182)
!19308 = !DILocation(line: 227, column: 33, scope: !19182)
!19309 = !DILocation(line: 227, column: 3, scope: !19182)
!19310 = !DILocation(line: 227, column: 6, scope: !19182)
!19311 = !DILocation(line: 227, column: 16, scope: !19182)
!19312 = !DILocation(line: 229, column: 3, scope: !19182)
!19313 = !DILocation(line: 229, column: 6, scope: !19182)
!19314 = !DILocation(line: 229, column: 25, scope: !19182)
!19315 = !DILocation(line: 230, column: 1, scope: !19182)
!19316 = distinct !DISubprogram(name: "call_freefun", scope: !1468, file: !1468, line: 93, type: !1421, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19317 = !DILocalVariable(name: "h", arg: 1, scope: !19316, file: !1468, line: 93, type: !1371)
!19318 = !DILocation(line: 93, column: 31, scope: !19316)
!19319 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !19316, file: !1468, line: 93, type: !47)
!19320 = !DILocation(line: 93, column: 40, scope: !19316)
!19321 = !DILocation(line: 95, column: 7, scope: !19322)
!19322 = distinct !DILexicalBlock(scope: !19316, file: !1468, line: 95, column: 7)
!19323 = !DILocation(line: 95, column: 10, scope: !19322)
!19324 = !DILocation(line: 95, column: 7, scope: !19316)
!19325 = !DILocation(line: 96, column: 5, scope: !19322)
!19326 = !DILocation(line: 96, column: 8, scope: !19322)
!19327 = !DILocation(line: 96, column: 16, scope: !19322)
!19328 = !DILocation(line: 96, column: 23, scope: !19322)
!19329 = !DILocation(line: 96, column: 26, scope: !19322)
!19330 = !DILocation(line: 96, column: 37, scope: !19322)
!19331 = !DILocation(line: 98, column: 5, scope: !19322)
!19332 = !DILocation(line: 98, column: 8, scope: !19322)
!19333 = !DILocation(line: 98, column: 16, scope: !19322)
!19334 = !DILocation(line: 98, column: 23, scope: !19322)
!19335 = !DILocation(line: 99, column: 1, scope: !19316)
!19336 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !1468, file: !1468, line: 241, type: !1419, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19337 = !DILocalVariable(name: "h", arg: 1, scope: !19336, file: !1468, line: 241, type: !1371)
!19338 = !DILocation(line: 241, column: 39, scope: !19336)
!19339 = !DILocalVariable(name: "obj", arg: 2, scope: !19336, file: !1468, line: 241, type: !47)
!19340 = !DILocation(line: 241, column: 48, scope: !19336)
!19341 = !DILocalVariable(name: "lp", scope: !19336, file: !1468, line: 243, type: !1377)
!19342 = !DILocation(line: 243, column: 26, scope: !19336)
!19343 = !DILocalVariable(name: "plp", scope: !19336, file: !1468, line: 244, type: !1377)
!19344 = !DILocation(line: 244, column: 26, scope: !19336)
!19345 = !DILocation(line: 246, column: 9, scope: !19336)
!19346 = !DILocation(line: 246, column: 13, scope: !19336)
!19347 = !DILocation(line: 246, column: 6, scope: !19336)
!19348 = !DILocation(line: 250, column: 3, scope: !19336)
!19349 = !DILocation(line: 250, column: 10, scope: !19336)
!19350 = !DILocation(line: 250, column: 13, scope: !19336)
!19351 = !DILocation(line: 250, column: 18, scope: !19336)
!19352 = !DILocation(line: 250, column: 31, scope: !19336)
!19353 = !DILocation(line: 250, column: 22, scope: !19336)
!19354 = !DILocation(line: 250, column: 37, scope: !19336)
!19355 = !DILocation(line: 250, column: 34, scope: !19336)
!19356 = !DILocation(line: 250, column: 41, scope: !19336)
!19357 = !DILocation(line: 250, column: 54, scope: !19336)
!19358 = !DILocation(line: 250, column: 59, scope: !19336)
!19359 = !DILocation(line: 250, column: 67, scope: !19336)
!19360 = !DILocation(line: 250, column: 65, scope: !19336)
!19361 = !DILocation(line: 0, scope: !19336)
!19362 = !DILocation(line: 252, column: 13, scope: !19363)
!19363 = distinct !DILexicalBlock(scope: !19336, file: !1468, line: 251, column: 5)
!19364 = !DILocation(line: 252, column: 17, scope: !19363)
!19365 = !DILocation(line: 252, column: 11, scope: !19363)
!19366 = !DILocation(line: 253, column: 12, scope: !19363)
!19367 = !DILocation(line: 253, column: 10, scope: !19363)
!19368 = distinct !{!19368, !19348, !19369}
!19369 = !DILocation(line: 254, column: 5, scope: !19336)
!19370 = !DILocation(line: 255, column: 10, scope: !19336)
!19371 = !DILocation(line: 255, column: 13, scope: !19336)
!19372 = !DILocation(line: 255, column: 3, scope: !19336)
!19373 = distinct !DISubprogram(name: "_obstack_free", scope: !1468, file: !1468, line: 262, type: !1421, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19374 = !DILocalVariable(name: "h", arg: 1, scope: !19373, file: !1468, line: 262, type: !1371)
!19375 = !DILocation(line: 262, column: 32, scope: !19373)
!19376 = !DILocalVariable(name: "obj", arg: 2, scope: !19373, file: !1468, line: 262, type: !47)
!19377 = !DILocation(line: 262, column: 41, scope: !19373)
!19378 = !DILocalVariable(name: "lp", scope: !19373, file: !1468, line: 264, type: !1377)
!19379 = !DILocation(line: 264, column: 26, scope: !19373)
!19380 = !DILocalVariable(name: "plp", scope: !19373, file: !1468, line: 265, type: !1377)
!19381 = !DILocation(line: 265, column: 26, scope: !19373)
!19382 = !DILocation(line: 267, column: 8, scope: !19373)
!19383 = !DILocation(line: 267, column: 11, scope: !19373)
!19384 = !DILocation(line: 267, column: 6, scope: !19373)
!19385 = !DILocation(line: 271, column: 3, scope: !19373)
!19386 = !DILocation(line: 271, column: 10, scope: !19373)
!19387 = !DILocation(line: 271, column: 13, scope: !19373)
!19388 = !DILocation(line: 271, column: 18, scope: !19373)
!19389 = !DILocation(line: 271, column: 31, scope: !19373)
!19390 = !DILocation(line: 271, column: 22, scope: !19373)
!19391 = !DILocation(line: 271, column: 37, scope: !19373)
!19392 = !DILocation(line: 271, column: 34, scope: !19373)
!19393 = !DILocation(line: 271, column: 41, scope: !19373)
!19394 = !DILocation(line: 271, column: 54, scope: !19373)
!19395 = !DILocation(line: 271, column: 59, scope: !19373)
!19396 = !DILocation(line: 271, column: 67, scope: !19373)
!19397 = !DILocation(line: 271, column: 65, scope: !19373)
!19398 = !DILocation(line: 0, scope: !19373)
!19399 = !DILocation(line: 273, column: 13, scope: !19400)
!19400 = distinct !DILexicalBlock(scope: !19373, file: !1468, line: 272, column: 5)
!19401 = !DILocation(line: 273, column: 17, scope: !19400)
!19402 = !DILocation(line: 273, column: 11, scope: !19400)
!19403 = !DILocation(line: 274, column: 21, scope: !19400)
!19404 = !DILocation(line: 274, column: 24, scope: !19400)
!19405 = !DILocation(line: 274, column: 7, scope: !19400)
!19406 = !DILocation(line: 275, column: 12, scope: !19400)
!19407 = !DILocation(line: 275, column: 10, scope: !19400)
!19408 = !DILocation(line: 278, column: 7, scope: !19400)
!19409 = !DILocation(line: 278, column: 10, scope: !19400)
!19410 = !DILocation(line: 278, column: 29, scope: !19400)
!19411 = distinct !{!19411, !19385, !19412}
!19412 = !DILocation(line: 279, column: 5, scope: !19373)
!19413 = !DILocation(line: 280, column: 7, scope: !19414)
!19414 = distinct !DILexicalBlock(scope: !19373, file: !1468, line: 280, column: 7)
!19415 = !DILocation(line: 280, column: 7, scope: !19373)
!19416 = !DILocation(line: 282, column: 49, scope: !19417)
!19417 = distinct !DILexicalBlock(scope: !19414, file: !1468, line: 281, column: 5)
!19418 = !DILocation(line: 282, column: 24, scope: !19417)
!19419 = !DILocation(line: 282, column: 27, scope: !19417)
!19420 = !DILocation(line: 282, column: 37, scope: !19417)
!19421 = !DILocation(line: 282, column: 7, scope: !19417)
!19422 = !DILocation(line: 282, column: 10, scope: !19417)
!19423 = !DILocation(line: 282, column: 22, scope: !19417)
!19424 = !DILocation(line: 283, column: 24, scope: !19417)
!19425 = !DILocation(line: 283, column: 28, scope: !19417)
!19426 = !DILocation(line: 283, column: 7, scope: !19417)
!19427 = !DILocation(line: 283, column: 10, scope: !19417)
!19428 = !DILocation(line: 283, column: 22, scope: !19417)
!19429 = !DILocation(line: 284, column: 18, scope: !19417)
!19430 = !DILocation(line: 284, column: 7, scope: !19417)
!19431 = !DILocation(line: 284, column: 10, scope: !19417)
!19432 = !DILocation(line: 284, column: 16, scope: !19417)
!19433 = !DILocation(line: 285, column: 5, scope: !19417)
!19434 = !DILocation(line: 286, column: 12, scope: !19435)
!19435 = distinct !DILexicalBlock(scope: !19414, file: !1468, line: 286, column: 12)
!19436 = !DILocation(line: 286, column: 16, scope: !19435)
!19437 = !DILocation(line: 286, column: 12, scope: !19414)
!19438 = !DILocation(line: 288, column: 5, scope: !19435)
!19439 = !DILocation(line: 289, column: 1, scope: !19373)
!19440 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !1468, file: !1468, line: 292, type: !1423, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !309)
!19441 = !DILocalVariable(name: "h", arg: 1, scope: !19440, file: !1468, line: 292, type: !1371)
!19442 = !DILocation(line: 292, column: 39, scope: !19440)
!19443 = !DILocalVariable(name: "lp", scope: !19440, file: !1468, line: 294, type: !1377)
!19444 = !DILocation(line: 294, column: 26, scope: !19440)
!19445 = !DILocalVariable(name: "nbytes", scope: !19440, file: !1468, line: 295, type: !52)
!19446 = !DILocation(line: 295, column: 19, scope: !19440)
!19447 = !DILocation(line: 297, column: 13, scope: !19448)
!19448 = distinct !DILexicalBlock(scope: !19440, file: !1468, line: 297, column: 3)
!19449 = !DILocation(line: 297, column: 16, scope: !19448)
!19450 = !DILocation(line: 297, column: 11, scope: !19448)
!19451 = !DILocation(line: 297, column: 8, scope: !19448)
!19452 = !DILocation(line: 297, column: 23, scope: !19453)
!19453 = distinct !DILexicalBlock(scope: !19448, file: !1468, line: 297, column: 3)
!19454 = !DILocation(line: 297, column: 26, scope: !19453)
!19455 = !DILocation(line: 297, column: 3, scope: !19448)
!19456 = !DILocation(line: 299, column: 17, scope: !19457)
!19457 = distinct !DILexicalBlock(scope: !19453, file: !1468, line: 298, column: 5)
!19458 = !DILocation(line: 299, column: 21, scope: !19457)
!19459 = !DILocation(line: 299, column: 38, scope: !19457)
!19460 = !DILocation(line: 299, column: 29, scope: !19457)
!19461 = !DILocation(line: 299, column: 27, scope: !19457)
!19462 = !DILocation(line: 299, column: 14, scope: !19457)
!19463 = !DILocation(line: 300, column: 5, scope: !19457)
!19464 = !DILocation(line: 297, column: 37, scope: !19453)
!19465 = !DILocation(line: 297, column: 41, scope: !19453)
!19466 = !DILocation(line: 297, column: 35, scope: !19453)
!19467 = !DILocation(line: 297, column: 3, scope: !19453)
!19468 = distinct !{!19468, !19455, !19469}
!19469 = !DILocation(line: 300, column: 5, scope: !19448)
!19470 = !DILocation(line: 301, column: 10, scope: !19440)
!19471 = !DILocation(line: 301, column: 3, scope: !19440)
!19472 = distinct !DISubprogram(name: "rotl64", scope: !19473, file: !19473, line: 39, type: !2188, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19473 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!19474 = !DILocalVariable(name: "x", arg: 1, scope: !19472, file: !19473, line: 39, type: !2190)
!19475 = !DILocation(line: 39, column: 18, scope: !19472)
!19476 = !DILocalVariable(name: "n", arg: 2, scope: !19472, file: !19473, line: 39, type: !5)
!19477 = !DILocation(line: 39, column: 25, scope: !19472)
!19478 = !DILocation(line: 41, column: 12, scope: !19472)
!19479 = !DILocation(line: 41, column: 17, scope: !19472)
!19480 = !DILocation(line: 41, column: 14, scope: !19472)
!19481 = !DILocation(line: 41, column: 23, scope: !19472)
!19482 = !DILocation(line: 41, column: 34, scope: !19472)
!19483 = !DILocation(line: 41, column: 32, scope: !19472)
!19484 = !DILocation(line: 41, column: 25, scope: !19472)
!19485 = !DILocation(line: 41, column: 20, scope: !19472)
!19486 = !DILocation(line: 41, column: 3, scope: !19472)
!19487 = distinct !DISubprogram(name: "rotr64", scope: !19473, file: !19473, line: 48, type: !2188, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19488 = !DILocalVariable(name: "x", arg: 1, scope: !19487, file: !19473, line: 48, type: !2190)
!19489 = !DILocation(line: 48, column: 18, scope: !19487)
!19490 = !DILocalVariable(name: "n", arg: 2, scope: !19487, file: !19473, line: 48, type: !5)
!19491 = !DILocation(line: 48, column: 25, scope: !19487)
!19492 = !DILocation(line: 50, column: 12, scope: !19487)
!19493 = !DILocation(line: 50, column: 17, scope: !19487)
!19494 = !DILocation(line: 50, column: 14, scope: !19487)
!19495 = !DILocation(line: 50, column: 23, scope: !19487)
!19496 = !DILocation(line: 50, column: 34, scope: !19487)
!19497 = !DILocation(line: 50, column: 32, scope: !19487)
!19498 = !DILocation(line: 50, column: 25, scope: !19487)
!19499 = !DILocation(line: 50, column: 20, scope: !19487)
!19500 = !DILocation(line: 50, column: 3, scope: !19487)
!19501 = distinct !DISubprogram(name: "rotl32", scope: !19473, file: !19473, line: 58, type: !2191, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19502 = !DILocalVariable(name: "x", arg: 1, scope: !19501, file: !19473, line: 58, type: !488)
!19503 = !DILocation(line: 58, column: 18, scope: !19501)
!19504 = !DILocalVariable(name: "n", arg: 2, scope: !19501, file: !19473, line: 58, type: !5)
!19505 = !DILocation(line: 58, column: 25, scope: !19501)
!19506 = !DILocation(line: 60, column: 12, scope: !19501)
!19507 = !DILocation(line: 60, column: 17, scope: !19501)
!19508 = !DILocation(line: 60, column: 14, scope: !19501)
!19509 = !DILocation(line: 60, column: 23, scope: !19501)
!19510 = !DILocation(line: 60, column: 34, scope: !19501)
!19511 = !DILocation(line: 60, column: 32, scope: !19501)
!19512 = !DILocation(line: 60, column: 25, scope: !19501)
!19513 = !DILocation(line: 60, column: 20, scope: !19501)
!19514 = !DILocation(line: 60, column: 3, scope: !19501)
!19515 = distinct !DISubprogram(name: "rotr32", scope: !19473, file: !19473, line: 67, type: !2191, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19516 = !DILocalVariable(name: "x", arg: 1, scope: !19515, file: !19473, line: 67, type: !488)
!19517 = !DILocation(line: 67, column: 18, scope: !19515)
!19518 = !DILocalVariable(name: "n", arg: 2, scope: !19515, file: !19473, line: 67, type: !5)
!19519 = !DILocation(line: 67, column: 25, scope: !19515)
!19520 = !DILocation(line: 69, column: 12, scope: !19515)
!19521 = !DILocation(line: 69, column: 17, scope: !19515)
!19522 = !DILocation(line: 69, column: 14, scope: !19515)
!19523 = !DILocation(line: 69, column: 23, scope: !19515)
!19524 = !DILocation(line: 69, column: 34, scope: !19515)
!19525 = !DILocation(line: 69, column: 32, scope: !19515)
!19526 = !DILocation(line: 69, column: 25, scope: !19515)
!19527 = !DILocation(line: 69, column: 20, scope: !19515)
!19528 = !DILocation(line: 69, column: 3, scope: !19515)
!19529 = distinct !DISubprogram(name: "rotl_sz", scope: !19473, file: !19473, line: 76, type: !2193, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19530 = !DILocalVariable(name: "x", arg: 1, scope: !19529, file: !19473, line: 76, type: !52)
!19531 = !DILocation(line: 76, column: 17, scope: !19529)
!19532 = !DILocalVariable(name: "n", arg: 2, scope: !19529, file: !19473, line: 76, type: !5)
!19533 = !DILocation(line: 76, column: 24, scope: !19529)
!19534 = !DILocation(line: 78, column: 12, scope: !19529)
!19535 = !DILocation(line: 78, column: 17, scope: !19529)
!19536 = !DILocation(line: 78, column: 14, scope: !19529)
!19537 = !DILocation(line: 78, column: 23, scope: !19529)
!19538 = !DILocation(line: 78, column: 53, scope: !19529)
!19539 = !DILocation(line: 78, column: 51, scope: !19529)
!19540 = !DILocation(line: 78, column: 25, scope: !19529)
!19541 = !DILocation(line: 78, column: 20, scope: !19529)
!19542 = !DILocation(line: 78, column: 3, scope: !19529)
!19543 = distinct !DISubprogram(name: "rotr_sz", scope: !19473, file: !19473, line: 85, type: !2193, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19544 = !DILocalVariable(name: "x", arg: 1, scope: !19543, file: !19473, line: 85, type: !52)
!19545 = !DILocation(line: 85, column: 17, scope: !19543)
!19546 = !DILocalVariable(name: "n", arg: 2, scope: !19543, file: !19473, line: 85, type: !5)
!19547 = !DILocation(line: 85, column: 24, scope: !19543)
!19548 = !DILocation(line: 87, column: 12, scope: !19543)
!19549 = !DILocation(line: 87, column: 17, scope: !19543)
!19550 = !DILocation(line: 87, column: 14, scope: !19543)
!19551 = !DILocation(line: 87, column: 23, scope: !19543)
!19552 = !DILocation(line: 87, column: 53, scope: !19543)
!19553 = !DILocation(line: 87, column: 51, scope: !19543)
!19554 = !DILocation(line: 87, column: 25, scope: !19543)
!19555 = !DILocation(line: 87, column: 20, scope: !19543)
!19556 = !DILocation(line: 87, column: 3, scope: !19543)
!19557 = distinct !DISubprogram(name: "rotl16", scope: !19473, file: !19473, line: 96, type: !2195, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19558 = !DILocalVariable(name: "x", arg: 1, scope: !19557, file: !19473, line: 96, type: !2197)
!19559 = !DILocation(line: 96, column: 18, scope: !19557)
!19560 = !DILocalVariable(name: "n", arg: 2, scope: !19557, file: !19473, line: 96, type: !5)
!19561 = !DILocation(line: 96, column: 25, scope: !19557)
!19562 = !DILocation(line: 98, column: 27, scope: !19557)
!19563 = !DILocation(line: 98, column: 12, scope: !19557)
!19564 = !DILocation(line: 98, column: 32, scope: !19557)
!19565 = !DILocation(line: 98, column: 29, scope: !19557)
!19566 = !DILocation(line: 98, column: 53, scope: !19557)
!19567 = !DILocation(line: 98, column: 38, scope: !19557)
!19568 = !DILocation(line: 98, column: 64, scope: !19557)
!19569 = !DILocation(line: 98, column: 62, scope: !19557)
!19570 = !DILocation(line: 98, column: 55, scope: !19557)
!19571 = !DILocation(line: 98, column: 35, scope: !19557)
!19572 = !DILocation(line: 99, column: 10, scope: !19557)
!19573 = !DILocation(line: 98, column: 10, scope: !19557)
!19574 = !DILocation(line: 98, column: 3, scope: !19557)
!19575 = distinct !DISubprogram(name: "rotr16", scope: !19473, file: !19473, line: 108, type: !2195, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19576 = !DILocalVariable(name: "x", arg: 1, scope: !19575, file: !19473, line: 108, type: !2197)
!19577 = !DILocation(line: 108, column: 18, scope: !19575)
!19578 = !DILocalVariable(name: "n", arg: 2, scope: !19575, file: !19473, line: 108, type: !5)
!19579 = !DILocation(line: 108, column: 25, scope: !19575)
!19580 = !DILocation(line: 110, column: 27, scope: !19575)
!19581 = !DILocation(line: 110, column: 12, scope: !19575)
!19582 = !DILocation(line: 110, column: 32, scope: !19575)
!19583 = !DILocation(line: 110, column: 29, scope: !19575)
!19584 = !DILocation(line: 110, column: 53, scope: !19575)
!19585 = !DILocation(line: 110, column: 38, scope: !19575)
!19586 = !DILocation(line: 110, column: 64, scope: !19575)
!19587 = !DILocation(line: 110, column: 62, scope: !19575)
!19588 = !DILocation(line: 110, column: 55, scope: !19575)
!19589 = !DILocation(line: 110, column: 35, scope: !19575)
!19590 = !DILocation(line: 111, column: 10, scope: !19575)
!19591 = !DILocation(line: 110, column: 10, scope: !19575)
!19592 = !DILocation(line: 110, column: 3, scope: !19575)
!19593 = distinct !DISubprogram(name: "rotl8", scope: !19473, file: !19473, line: 120, type: !2198, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19594 = !DILocalVariable(name: "x", arg: 1, scope: !19593, file: !19473, line: 120, type: !2200)
!19595 = !DILocation(line: 120, column: 16, scope: !19593)
!19596 = !DILocalVariable(name: "n", arg: 2, scope: !19593, file: !19473, line: 120, type: !5)
!19597 = !DILocation(line: 120, column: 23, scope: !19593)
!19598 = !DILocation(line: 122, column: 27, scope: !19593)
!19599 = !DILocation(line: 122, column: 12, scope: !19593)
!19600 = !DILocation(line: 122, column: 32, scope: !19593)
!19601 = !DILocation(line: 122, column: 29, scope: !19593)
!19602 = !DILocation(line: 122, column: 53, scope: !19593)
!19603 = !DILocation(line: 122, column: 38, scope: !19593)
!19604 = !DILocation(line: 122, column: 63, scope: !19593)
!19605 = !DILocation(line: 122, column: 61, scope: !19593)
!19606 = !DILocation(line: 122, column: 55, scope: !19593)
!19607 = !DILocation(line: 122, column: 35, scope: !19593)
!19608 = !DILocation(line: 122, column: 68, scope: !19593)
!19609 = !DILocation(line: 122, column: 10, scope: !19593)
!19610 = !DILocation(line: 122, column: 3, scope: !19593)
!19611 = distinct !DISubprogram(name: "rotr8", scope: !19473, file: !19473, line: 131, type: !2198, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2185, retainedNodes: !309)
!19612 = !DILocalVariable(name: "x", arg: 1, scope: !19611, file: !19473, line: 131, type: !2200)
!19613 = !DILocation(line: 131, column: 16, scope: !19611)
!19614 = !DILocalVariable(name: "n", arg: 2, scope: !19611, file: !19473, line: 131, type: !5)
!19615 = !DILocation(line: 131, column: 23, scope: !19611)
!19616 = !DILocation(line: 133, column: 27, scope: !19611)
!19617 = !DILocation(line: 133, column: 12, scope: !19611)
!19618 = !DILocation(line: 133, column: 32, scope: !19611)
!19619 = !DILocation(line: 133, column: 29, scope: !19611)
!19620 = !DILocation(line: 133, column: 53, scope: !19611)
!19621 = !DILocation(line: 133, column: 38, scope: !19611)
!19622 = !DILocation(line: 133, column: 63, scope: !19611)
!19623 = !DILocation(line: 133, column: 61, scope: !19611)
!19624 = !DILocation(line: 133, column: 55, scope: !19611)
!19625 = !DILocation(line: 133, column: 35, scope: !19611)
!19626 = !DILocation(line: 133, column: 68, scope: !19611)
!19627 = !DILocation(line: 133, column: 10, scope: !19611)
!19628 = !DILocation(line: 133, column: 3, scope: !19611)
!19629 = distinct !DISubprogram(name: "c_isalnum", scope: !19630, file: !19630, line: 169, type: !1540, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19630 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!19631 = !DILocalVariable(name: "c", arg: 1, scope: !19629, file: !19630, line: 169, type: !5)
!19632 = !DILocation(line: 169, column: 16, scope: !19629)
!19633 = !DILocation(line: 171, column: 11, scope: !19629)
!19634 = !DILocation(line: 171, column: 3, scope: !19629)
!19635 = !DILocation(line: 176, column: 7, scope: !19636)
!19636 = distinct !DILexicalBlock(scope: !19629, file: !19630, line: 172, column: 5)
!19637 = !DILocation(line: 178, column: 7, scope: !19636)
!19638 = !DILocation(line: 180, column: 1, scope: !19629)
!19639 = distinct !DISubprogram(name: "c_isalpha", scope: !19630, file: !19630, line: 183, type: !1540, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19640 = !DILocalVariable(name: "c", arg: 1, scope: !19639, file: !19630, line: 183, type: !5)
!19641 = !DILocation(line: 183, column: 16, scope: !19639)
!19642 = !DILocation(line: 185, column: 11, scope: !19639)
!19643 = !DILocation(line: 185, column: 3, scope: !19639)
!19644 = !DILocation(line: 189, column: 7, scope: !19645)
!19645 = distinct !DILexicalBlock(scope: !19639, file: !19630, line: 186, column: 5)
!19646 = !DILocation(line: 191, column: 7, scope: !19645)
!19647 = !DILocation(line: 193, column: 1, scope: !19639)
!19648 = distinct !DISubprogram(name: "c_isascii", scope: !19630, file: !19630, line: 198, type: !1540, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19649 = !DILocalVariable(name: "c", arg: 1, scope: !19648, file: !19630, line: 198, type: !5)
!19650 = !DILocation(line: 198, column: 16, scope: !19648)
!19651 = !DILocation(line: 200, column: 11, scope: !19648)
!19652 = !DILocation(line: 200, column: 3, scope: !19648)
!19653 = !DILocation(line: 208, column: 7, scope: !19654)
!19654 = distinct !DILexicalBlock(scope: !19648, file: !19630, line: 201, column: 5)
!19655 = !DILocation(line: 210, column: 7, scope: !19654)
!19656 = !DILocation(line: 212, column: 1, scope: !19648)
!19657 = distinct !DISubprogram(name: "c_isblank", scope: !19630, file: !19630, line: 215, type: !1540, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19658 = !DILocalVariable(name: "c", arg: 1, scope: !19657, file: !19630, line: 215, type: !5)
!19659 = !DILocation(line: 215, column: 16, scope: !19657)
!19660 = !DILocation(line: 217, column: 10, scope: !19657)
!19661 = !DILocation(line: 217, column: 12, scope: !19657)
!19662 = !DILocation(line: 217, column: 19, scope: !19657)
!19663 = !DILocation(line: 217, column: 22, scope: !19657)
!19664 = !DILocation(line: 217, column: 24, scope: !19657)
!19665 = !DILocation(line: 217, column: 3, scope: !19657)
!19666 = distinct !DISubprogram(name: "c_iscntrl", scope: !19630, file: !19630, line: 221, type: !1540, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19667 = !DILocalVariable(name: "c", arg: 1, scope: !19666, file: !19630, line: 221, type: !5)
!19668 = !DILocation(line: 221, column: 16, scope: !19666)
!19669 = !DILocation(line: 223, column: 11, scope: !19666)
!19670 = !DILocation(line: 223, column: 3, scope: !19666)
!19671 = !DILocation(line: 226, column: 7, scope: !19672)
!19672 = distinct !DILexicalBlock(scope: !19666, file: !19630, line: 224, column: 5)
!19673 = !DILocation(line: 228, column: 7, scope: !19672)
!19674 = !DILocation(line: 230, column: 1, scope: !19666)
!19675 = distinct !DISubprogram(name: "c_isdigit", scope: !19630, file: !19630, line: 233, type: !1540, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19676 = !DILocalVariable(name: "c", arg: 1, scope: !19675, file: !19630, line: 233, type: !5)
!19677 = !DILocation(line: 233, column: 16, scope: !19675)
!19678 = !DILocation(line: 235, column: 11, scope: !19675)
!19679 = !DILocation(line: 235, column: 3, scope: !19675)
!19680 = !DILocation(line: 238, column: 7, scope: !19681)
!19681 = distinct !DILexicalBlock(scope: !19675, file: !19630, line: 236, column: 5)
!19682 = !DILocation(line: 240, column: 7, scope: !19681)
!19683 = !DILocation(line: 242, column: 1, scope: !19675)
!19684 = distinct !DISubprogram(name: "c_isgraph", scope: !19630, file: !19630, line: 245, type: !1540, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19685 = !DILocalVariable(name: "c", arg: 1, scope: !19684, file: !19630, line: 245, type: !5)
!19686 = !DILocation(line: 245, column: 16, scope: !19684)
!19687 = !DILocation(line: 247, column: 11, scope: !19684)
!19688 = !DILocation(line: 247, column: 3, scope: !19684)
!19689 = !DILocation(line: 253, column: 7, scope: !19690)
!19690 = distinct !DILexicalBlock(scope: !19684, file: !19630, line: 248, column: 5)
!19691 = !DILocation(line: 255, column: 7, scope: !19690)
!19692 = !DILocation(line: 257, column: 1, scope: !19684)
!19693 = distinct !DISubprogram(name: "c_islower", scope: !19630, file: !19630, line: 260, type: !1540, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19694 = !DILocalVariable(name: "c", arg: 1, scope: !19693, file: !19630, line: 260, type: !5)
!19695 = !DILocation(line: 260, column: 16, scope: !19693)
!19696 = !DILocation(line: 262, column: 11, scope: !19693)
!19697 = !DILocation(line: 262, column: 3, scope: !19693)
!19698 = !DILocation(line: 265, column: 7, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19693, file: !19630, line: 263, column: 5)
!19700 = !DILocation(line: 267, column: 7, scope: !19699)
!19701 = !DILocation(line: 269, column: 1, scope: !19693)
!19702 = distinct !DISubprogram(name: "c_isprint", scope: !19630, file: !19630, line: 272, type: !1540, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19703 = !DILocalVariable(name: "c", arg: 1, scope: !19702, file: !19630, line: 272, type: !5)
!19704 = !DILocation(line: 272, column: 16, scope: !19702)
!19705 = !DILocation(line: 274, column: 11, scope: !19702)
!19706 = !DILocation(line: 274, column: 3, scope: !19702)
!19707 = !DILocation(line: 281, column: 7, scope: !19708)
!19708 = distinct !DILexicalBlock(scope: !19702, file: !19630, line: 275, column: 5)
!19709 = !DILocation(line: 283, column: 7, scope: !19708)
!19710 = !DILocation(line: 285, column: 1, scope: !19702)
!19711 = distinct !DISubprogram(name: "c_ispunct", scope: !19630, file: !19630, line: 288, type: !1540, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19712 = !DILocalVariable(name: "c", arg: 1, scope: !19711, file: !19630, line: 288, type: !5)
!19713 = !DILocation(line: 288, column: 16, scope: !19711)
!19714 = !DILocation(line: 290, column: 11, scope: !19711)
!19715 = !DILocation(line: 290, column: 3, scope: !19711)
!19716 = !DILocation(line: 293, column: 7, scope: !19717)
!19717 = distinct !DILexicalBlock(scope: !19711, file: !19630, line: 291, column: 5)
!19718 = !DILocation(line: 295, column: 7, scope: !19717)
!19719 = !DILocation(line: 297, column: 1, scope: !19711)
!19720 = distinct !DISubprogram(name: "c_isspace", scope: !19630, file: !19630, line: 300, type: !1540, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19721 = !DILocalVariable(name: "c", arg: 1, scope: !19720, file: !19630, line: 300, type: !5)
!19722 = !DILocation(line: 300, column: 16, scope: !19720)
!19723 = !DILocation(line: 302, column: 11, scope: !19720)
!19724 = !DILocation(line: 302, column: 3, scope: !19720)
!19725 = !DILocation(line: 305, column: 7, scope: !19726)
!19726 = distinct !DILexicalBlock(scope: !19720, file: !19630, line: 303, column: 5)
!19727 = !DILocation(line: 307, column: 7, scope: !19726)
!19728 = !DILocation(line: 309, column: 1, scope: !19720)
!19729 = distinct !DISubprogram(name: "c_isupper", scope: !19630, file: !19630, line: 312, type: !1540, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19730 = !DILocalVariable(name: "c", arg: 1, scope: !19729, file: !19630, line: 312, type: !5)
!19731 = !DILocation(line: 312, column: 16, scope: !19729)
!19732 = !DILocation(line: 314, column: 11, scope: !19729)
!19733 = !DILocation(line: 314, column: 3, scope: !19729)
!19734 = !DILocation(line: 317, column: 7, scope: !19735)
!19735 = distinct !DILexicalBlock(scope: !19729, file: !19630, line: 315, column: 5)
!19736 = !DILocation(line: 319, column: 7, scope: !19735)
!19737 = !DILocation(line: 321, column: 1, scope: !19729)
!19738 = distinct !DISubprogram(name: "c_isxdigit", scope: !19630, file: !19630, line: 324, type: !1540, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19739 = !DILocalVariable(name: "c", arg: 1, scope: !19738, file: !19630, line: 324, type: !5)
!19740 = !DILocation(line: 324, column: 17, scope: !19738)
!19741 = !DILocation(line: 326, column: 11, scope: !19738)
!19742 = !DILocation(line: 326, column: 3, scope: !19738)
!19743 = !DILocation(line: 330, column: 7, scope: !19744)
!19744 = distinct !DILexicalBlock(scope: !19738, file: !19630, line: 327, column: 5)
!19745 = !DILocation(line: 332, column: 7, scope: !19744)
!19746 = !DILocation(line: 334, column: 1, scope: !19738)
!19747 = distinct !DISubprogram(name: "c_tolower", scope: !19630, file: !19630, line: 337, type: !1872, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19748 = !DILocalVariable(name: "c", arg: 1, scope: !19747, file: !19630, line: 337, type: !5)
!19749 = !DILocation(line: 337, column: 16, scope: !19747)
!19750 = !DILocation(line: 339, column: 11, scope: !19747)
!19751 = !DILocation(line: 339, column: 3, scope: !19747)
!19752 = !DILocation(line: 342, column: 14, scope: !19753)
!19753 = distinct !DILexicalBlock(scope: !19747, file: !19630, line: 340, column: 5)
!19754 = !DILocation(line: 342, column: 16, scope: !19753)
!19755 = !DILocation(line: 342, column: 22, scope: !19753)
!19756 = !DILocation(line: 342, column: 7, scope: !19753)
!19757 = !DILocation(line: 344, column: 14, scope: !19753)
!19758 = !DILocation(line: 344, column: 7, scope: !19753)
!19759 = !DILocation(line: 346, column: 1, scope: !19747)
!19760 = distinct !DISubprogram(name: "c_toupper", scope: !19630, file: !19630, line: 349, type: !1872, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2201, retainedNodes: !309)
!19761 = !DILocalVariable(name: "c", arg: 1, scope: !19760, file: !19630, line: 349, type: !5)
!19762 = !DILocation(line: 349, column: 16, scope: !19760)
!19763 = !DILocation(line: 351, column: 11, scope: !19760)
!19764 = !DILocation(line: 351, column: 3, scope: !19760)
!19765 = !DILocation(line: 354, column: 14, scope: !19766)
!19766 = distinct !DILexicalBlock(scope: !19760, file: !19630, line: 352, column: 5)
!19767 = !DILocation(line: 354, column: 16, scope: !19766)
!19768 = !DILocation(line: 354, column: 22, scope: !19766)
!19769 = !DILocation(line: 354, column: 7, scope: !19766)
!19770 = !DILocation(line: 356, column: 14, scope: !19766)
!19771 = !DILocation(line: 356, column: 7, scope: !19766)
!19772 = !DILocation(line: 358, column: 1, scope: !19760)
!19773 = distinct !DISubprogram(name: "c_strcasecmp", scope: !19774, file: !19774, line: 27, type: !474, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2204, retainedNodes: !309)
!19774 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!19775 = !DILocalVariable(name: "s1", arg: 1, scope: !19773, file: !19774, line: 27, type: !87)
!19776 = !DILocation(line: 27, column: 27, scope: !19773)
!19777 = !DILocalVariable(name: "s2", arg: 2, scope: !19773, file: !19774, line: 27, type: !87)
!19778 = !DILocation(line: 27, column: 43, scope: !19773)
!19779 = !DILocalVariable(name: "p1", scope: !19773, file: !19774, line: 29, type: !2207)
!19780 = !DILocation(line: 29, column: 33, scope: !19773)
!19781 = !DILocation(line: 29, column: 62, scope: !19773)
!19782 = !DILocalVariable(name: "p2", scope: !19773, file: !19774, line: 30, type: !2207)
!19783 = !DILocation(line: 30, column: 33, scope: !19773)
!19784 = !DILocation(line: 30, column: 62, scope: !19773)
!19785 = !DILocalVariable(name: "c1", scope: !19773, file: !19774, line: 31, type: !317)
!19786 = !DILocation(line: 31, column: 17, scope: !19773)
!19787 = !DILocalVariable(name: "c2", scope: !19773, file: !19774, line: 31, type: !317)
!19788 = !DILocation(line: 31, column: 21, scope: !19773)
!19789 = !DILocation(line: 33, column: 7, scope: !19790)
!19790 = distinct !DILexicalBlock(scope: !19773, file: !19774, line: 33, column: 7)
!19791 = !DILocation(line: 33, column: 13, scope: !19790)
!19792 = !DILocation(line: 33, column: 10, scope: !19790)
!19793 = !DILocation(line: 33, column: 7, scope: !19773)
!19794 = !DILocation(line: 34, column: 5, scope: !19790)
!19795 = !DILocation(line: 36, column: 3, scope: !19773)
!19796 = !DILocation(line: 38, column: 24, scope: !19797)
!19797 = distinct !DILexicalBlock(scope: !19773, file: !19774, line: 37, column: 5)
!19798 = !DILocation(line: 38, column: 23, scope: !19797)
!19799 = !DILocation(line: 38, column: 12, scope: !19797)
!19800 = !DILocation(line: 38, column: 10, scope: !19797)
!19801 = !DILocation(line: 39, column: 24, scope: !19797)
!19802 = !DILocation(line: 39, column: 23, scope: !19797)
!19803 = !DILocation(line: 39, column: 12, scope: !19797)
!19804 = !DILocation(line: 39, column: 10, scope: !19797)
!19805 = !DILocation(line: 41, column: 11, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19797, file: !19774, line: 41, column: 11)
!19807 = !DILocation(line: 41, column: 14, scope: !19806)
!19808 = !DILocation(line: 41, column: 11, scope: !19797)
!19809 = !DILocation(line: 42, column: 9, scope: !19806)
!19810 = !DILocation(line: 44, column: 7, scope: !19797)
!19811 = !DILocation(line: 45, column: 7, scope: !19797)
!19812 = !DILocation(line: 46, column: 5, scope: !19797)
!19813 = !DILocation(line: 47, column: 10, scope: !19773)
!19814 = !DILocation(line: 47, column: 16, scope: !19773)
!19815 = !DILocation(line: 47, column: 13, scope: !19773)
!19816 = distinct !{!19816, !19795, !19817}
!19817 = !DILocation(line: 47, column: 18, scope: !19773)
!19818 = !DILocation(line: 50, column: 12, scope: !19819)
!19819 = distinct !DILexicalBlock(scope: !19773, file: !19774, line: 49, column: 7)
!19820 = !DILocation(line: 50, column: 17, scope: !19819)
!19821 = !DILocation(line: 50, column: 15, scope: !19819)
!19822 = !DILocation(line: 50, column: 5, scope: !19819)
!19823 = !DILocation(line: 56, column: 1, scope: !19773)
!19824 = distinct !DISubprogram(name: "close_stream", scope: !19825, file: !19825, line: 56, type: !2211, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2208, retainedNodes: !309)
!19825 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!19826 = !DILocalVariable(name: "stream", arg: 1, scope: !19824, file: !19825, line: 56, type: !2213)
!19827 = !DILocation(line: 56, column: 21, scope: !19824)
!19828 = !DILocalVariable(name: "some_pending", scope: !19824, file: !19825, line: 58, type: !101)
!19829 = !DILocation(line: 58, column: 14, scope: !19824)
!19830 = !DILocation(line: 58, column: 42, scope: !19824)
!19831 = !DILocation(line: 58, column: 30, scope: !19824)
!19832 = !DILocation(line: 58, column: 50, scope: !19824)
!19833 = !DILocalVariable(name: "prev_fail", scope: !19824, file: !19825, line: 59, type: !101)
!19834 = !DILocation(line: 59, column: 14, scope: !19824)
!19835 = !DILocation(line: 59, column: 27, scope: !19824)
!19836 = !DILocation(line: 59, column: 43, scope: !19824)
!19837 = !DILocalVariable(name: "fclose_fail", scope: !19824, file: !19825, line: 60, type: !101)
!19838 = !DILocation(line: 60, column: 14, scope: !19824)
!19839 = !DILocation(line: 60, column: 37, scope: !19824)
!19840 = !DILocation(line: 60, column: 29, scope: !19824)
!19841 = !DILocation(line: 60, column: 45, scope: !19824)
!19842 = !DILocation(line: 70, column: 7, scope: !19843)
!19843 = distinct !DILexicalBlock(scope: !19824, file: !19825, line: 70, column: 7)
!19844 = !DILocation(line: 70, column: 17, scope: !19843)
!19845 = !DILocation(line: 70, column: 21, scope: !19843)
!19846 = !DILocation(line: 70, column: 33, scope: !19843)
!19847 = !DILocation(line: 70, column: 37, scope: !19843)
!19848 = !DILocation(line: 70, column: 50, scope: !19843)
!19849 = !DILocation(line: 70, column: 53, scope: !19843)
!19850 = !DILocation(line: 70, column: 59, scope: !19843)
!19851 = !DILocation(line: 70, column: 7, scope: !19824)
!19852 = !DILocation(line: 72, column: 13, scope: !19853)
!19853 = distinct !DILexicalBlock(scope: !19854, file: !19825, line: 72, column: 11)
!19854 = distinct !DILexicalBlock(scope: !19843, file: !19825, line: 71, column: 5)
!19855 = !DILocation(line: 72, column: 11, scope: !19854)
!19856 = !DILocation(line: 73, column: 9, scope: !19853)
!19857 = !DILocation(line: 73, column: 15, scope: !19853)
!19858 = !DILocation(line: 74, column: 7, scope: !19854)
!19859 = !DILocation(line: 77, column: 3, scope: !19824)
!19860 = !DILocation(line: 78, column: 1, scope: !19824)
!19861 = distinct !DISubprogram(name: "dtotimespec", scope: !19862, file: !19862, line: 30, type: !2256, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2253, retainedNodes: !309)
!19862 = !DIFile(filename: "lib/dtotimespec.c", directory: "/home/mohamad/clone/coreutils")
!19863 = !DILocalVariable(name: "sec", arg: 1, scope: !19861, file: !19862, line: 30, type: !370)
!19864 = !DILocation(line: 30, column: 21, scope: !19861)
!19865 = !DILocation(line: 32, column: 34, scope: !19866)
!19866 = distinct !DILexicalBlock(scope: !19861, file: !19862, line: 32, column: 7)
!19867 = !DILocation(line: 32, column: 32, scope: !19866)
!19868 = !DILocation(line: 32, column: 7, scope: !19861)
!19869 = !DILocation(line: 33, column: 12, scope: !19866)
!19870 = !DILocation(line: 33, column: 5, scope: !19866)
!19871 = !DILocation(line: 34, column: 15, scope: !19872)
!19872 = distinct !DILexicalBlock(scope: !19866, file: !19862, line: 34, column: 12)
!19873 = !DILocation(line: 34, column: 19, scope: !19872)
!19874 = !DILocation(line: 34, column: 12, scope: !19866)
!19875 = !DILocation(line: 35, column: 12, scope: !19872)
!19876 = !DILocation(line: 35, column: 5, scope: !19872)
!19877 = !DILocalVariable(name: "s", scope: !19878, file: !19862, line: 38, type: !2177)
!19878 = distinct !DILexicalBlock(scope: !19872, file: !19862, line: 37, column: 5)
!19879 = !DILocation(line: 38, column: 14, scope: !19878)
!19880 = !DILocation(line: 38, column: 18, scope: !19878)
!19881 = !DILocalVariable(name: "frac", scope: !19878, file: !19862, line: 39, type: !370)
!19882 = !DILocation(line: 39, column: 14, scope: !19878)
!19883 = !DILocation(line: 39, column: 36, scope: !19878)
!19884 = !DILocation(line: 39, column: 42, scope: !19878)
!19885 = !DILocation(line: 39, column: 40, scope: !19878)
!19886 = !DILocation(line: 39, column: 33, scope: !19878)
!19887 = !DILocalVariable(name: "ns", scope: !19878, file: !19862, line: 40, type: !32)
!19888 = !DILocation(line: 40, column: 12, scope: !19878)
!19889 = !DILocation(line: 40, column: 17, scope: !19878)
!19890 = !DILocation(line: 41, column: 13, scope: !19878)
!19891 = !DILocation(line: 41, column: 18, scope: !19878)
!19892 = !DILocation(line: 41, column: 16, scope: !19878)
!19893 = !DILocation(line: 41, column: 10, scope: !19878)
!19894 = !DILocation(line: 42, column: 12, scope: !19878)
!19895 = !DILocation(line: 42, column: 15, scope: !19878)
!19896 = !DILocation(line: 42, column: 9, scope: !19878)
!19897 = !DILocation(line: 43, column: 10, scope: !19878)
!19898 = !DILocation(line: 45, column: 11, scope: !19899)
!19899 = distinct !DILexicalBlock(scope: !19878, file: !19862, line: 45, column: 11)
!19900 = !DILocation(line: 45, column: 14, scope: !19899)
!19901 = !DILocation(line: 45, column: 11, scope: !19878)
!19902 = !DILocation(line: 47, column: 12, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19899, file: !19862, line: 46, column: 9)
!19904 = !DILocation(line: 48, column: 14, scope: !19903)
!19905 = !DILocation(line: 49, column: 9, scope: !19903)
!19906 = !DILocation(line: 51, column: 29, scope: !19878)
!19907 = !DILocation(line: 51, column: 32, scope: !19878)
!19908 = !DILocation(line: 51, column: 14, scope: !19878)
!19909 = !DILocation(line: 51, column: 7, scope: !19878)
!19910 = !DILocation(line: 53, column: 1, scope: !19861)
!19911 = distinct !DISubprogram(name: "fd_safer_flag", scope: !19912, file: !19912, line: 40, type: !1348, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2262, retainedNodes: !309)
!19912 = !DIFile(filename: "lib/fd-safer-flag.c", directory: "/home/mohamad/clone/coreutils")
!19913 = !DILocalVariable(name: "fd", arg: 1, scope: !19911, file: !19912, line: 40, type: !5)
!19914 = !DILocation(line: 40, column: 20, scope: !19911)
!19915 = !DILocalVariable(name: "flag", arg: 2, scope: !19911, file: !19912, line: 40, type: !5)
!19916 = !DILocation(line: 40, column: 28, scope: !19911)
!19917 = !DILocation(line: 42, column: 23, scope: !19918)
!19918 = distinct !DILexicalBlock(scope: !19911, file: !19912, line: 42, column: 7)
!19919 = !DILocation(line: 42, column: 20, scope: !19918)
!19920 = !DILocation(line: 42, column: 26, scope: !19918)
!19921 = !DILocation(line: 42, column: 29, scope: !19918)
!19922 = !DILocation(line: 42, column: 32, scope: !19918)
!19923 = !DILocation(line: 42, column: 7, scope: !19911)
!19924 = !DILocalVariable(name: "f", scope: !19925, file: !19912, line: 44, type: !5)
!19925 = distinct !DILexicalBlock(scope: !19918, file: !19912, line: 43, column: 5)
!19926 = !DILocation(line: 44, column: 11, scope: !19925)
!19927 = !DILocation(line: 44, column: 31, scope: !19925)
!19928 = !DILocation(line: 44, column: 35, scope: !19925)
!19929 = !DILocation(line: 44, column: 15, scope: !19925)
!19930 = !DILocalVariable(name: "e", scope: !19925, file: !19912, line: 45, type: !5)
!19931 = !DILocation(line: 45, column: 11, scope: !19925)
!19932 = !DILocation(line: 45, column: 15, scope: !19925)
!19933 = !DILocation(line: 46, column: 14, scope: !19925)
!19934 = !DILocation(line: 46, column: 7, scope: !19925)
!19935 = !DILocation(line: 47, column: 15, scope: !19925)
!19936 = !DILocation(line: 47, column: 7, scope: !19925)
!19937 = !DILocation(line: 47, column: 13, scope: !19925)
!19938 = !DILocation(line: 48, column: 12, scope: !19925)
!19939 = !DILocation(line: 48, column: 10, scope: !19925)
!19940 = !DILocation(line: 49, column: 5, scope: !19925)
!19941 = !DILocation(line: 51, column: 10, scope: !19911)
!19942 = !DILocation(line: 51, column: 3, scope: !19911)
!19943 = distinct !DISubprogram(name: "dup_safer_flag", scope: !19944, file: !19944, line: 34, type: !1348, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2265, retainedNodes: !309)
!19944 = !DIFile(filename: "lib/dup-safer-flag.c", directory: "/home/mohamad/clone/coreutils")
!19945 = !DILocalVariable(name: "fd", arg: 1, scope: !19943, file: !19944, line: 34, type: !5)
!19946 = !DILocation(line: 34, column: 21, scope: !19943)
!19947 = !DILocalVariable(name: "flag", arg: 2, scope: !19943, file: !19944, line: 34, type: !5)
!19948 = !DILocation(line: 34, column: 29, scope: !19943)
!19949 = !DILocation(line: 36, column: 17, scope: !19943)
!19950 = !DILocation(line: 36, column: 22, scope: !19943)
!19951 = !DILocation(line: 36, column: 27, scope: !19943)
!19952 = !DILocation(line: 36, column: 21, scope: !19943)
!19953 = !DILocation(line: 36, column: 10, scope: !19943)
!19954 = !DILocation(line: 36, column: 3, scope: !19943)
!19955 = distinct !DISubprogram(name: "fopen_safer", scope: !19956, file: !19956, line: 31, type: !2270, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2267, retainedNodes: !309)
!19956 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!19957 = !DILocalVariable(name: "file", arg: 1, scope: !19955, file: !19956, line: 31, type: !87)
!19958 = !DILocation(line: 31, column: 26, scope: !19955)
!19959 = !DILocalVariable(name: "mode", arg: 2, scope: !19955, file: !19956, line: 31, type: !87)
!19960 = !DILocation(line: 31, column: 44, scope: !19955)
!19961 = !DILocalVariable(name: "fp", scope: !19955, file: !19956, line: 33, type: !2272)
!19962 = !DILocation(line: 33, column: 9, scope: !19955)
!19963 = !DILocation(line: 33, column: 21, scope: !19955)
!19964 = !DILocation(line: 33, column: 27, scope: !19955)
!19965 = !DILocation(line: 33, column: 14, scope: !19955)
!19966 = !DILocation(line: 35, column: 7, scope: !19967)
!19967 = distinct !DILexicalBlock(scope: !19955, file: !19956, line: 35, column: 7)
!19968 = !DILocation(line: 35, column: 7, scope: !19955)
!19969 = !DILocalVariable(name: "fd", scope: !19970, file: !19956, line: 37, type: !5)
!19970 = distinct !DILexicalBlock(scope: !19967, file: !19956, line: 36, column: 5)
!19971 = !DILocation(line: 37, column: 11, scope: !19970)
!19972 = !DILocation(line: 37, column: 24, scope: !19970)
!19973 = !DILocation(line: 37, column: 16, scope: !19970)
!19974 = !DILocation(line: 39, column: 16, scope: !19975)
!19975 = distinct !DILexicalBlock(scope: !19970, file: !19956, line: 39, column: 11)
!19976 = !DILocation(line: 39, column: 13, scope: !19975)
!19977 = !DILocation(line: 39, column: 19, scope: !19975)
!19978 = !DILocation(line: 39, column: 22, scope: !19975)
!19979 = !DILocation(line: 39, column: 25, scope: !19975)
!19980 = !DILocation(line: 39, column: 11, scope: !19970)
!19981 = !DILocalVariable(name: "f", scope: !19982, file: !19956, line: 41, type: !5)
!19982 = distinct !DILexicalBlock(scope: !19975, file: !19956, line: 40, column: 9)
!19983 = !DILocation(line: 41, column: 15, scope: !19982)
!19984 = !DILocation(line: 41, column: 30, scope: !19982)
!19985 = !DILocation(line: 41, column: 19, scope: !19982)
!19986 = !DILocation(line: 43, column: 15, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19982, file: !19956, line: 43, column: 15)
!19988 = !DILocation(line: 43, column: 17, scope: !19987)
!19989 = !DILocation(line: 43, column: 15, scope: !19982)
!19990 = !DILocalVariable(name: "e", scope: !19991, file: !19956, line: 45, type: !5)
!19991 = distinct !DILexicalBlock(scope: !19987, file: !19956, line: 44, column: 13)
!19992 = !DILocation(line: 45, column: 19, scope: !19991)
!19993 = !DILocation(line: 45, column: 23, scope: !19991)
!19994 = !DILocation(line: 46, column: 23, scope: !19991)
!19995 = !DILocation(line: 46, column: 15, scope: !19991)
!19996 = !DILocation(line: 47, column: 23, scope: !19991)
!19997 = !DILocation(line: 47, column: 15, scope: !19991)
!19998 = !DILocation(line: 47, column: 21, scope: !19991)
!19999 = !DILocation(line: 48, column: 15, scope: !19991)
!20000 = !DILocation(line: 51, column: 23, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19982, file: !19956, line: 51, column: 15)
!20002 = !DILocation(line: 51, column: 15, scope: !20001)
!20003 = !DILocation(line: 51, column: 27, scope: !20001)
!20004 = !DILocation(line: 52, column: 15, scope: !20001)
!20005 = !DILocation(line: 52, column: 34, scope: !20001)
!20006 = !DILocation(line: 52, column: 37, scope: !20001)
!20007 = !DILocation(line: 52, column: 26, scope: !20001)
!20008 = !DILocation(line: 52, column: 24, scope: !20001)
!20009 = !DILocation(line: 51, column: 15, scope: !19982)
!20010 = !DILocalVariable(name: "e", scope: !20011, file: !19956, line: 54, type: !5)
!20011 = distinct !DILexicalBlock(scope: !20001, file: !19956, line: 53, column: 13)
!20012 = !DILocation(line: 54, column: 19, scope: !20011)
!20013 = !DILocation(line: 54, column: 23, scope: !20011)
!20014 = !DILocation(line: 55, column: 22, scope: !20011)
!20015 = !DILocation(line: 55, column: 15, scope: !20011)
!20016 = !DILocation(line: 56, column: 23, scope: !20011)
!20017 = !DILocation(line: 56, column: 15, scope: !20011)
!20018 = !DILocation(line: 56, column: 21, scope: !20011)
!20019 = !DILocation(line: 57, column: 15, scope: !20011)
!20020 = !DILocation(line: 59, column: 9, scope: !19982)
!20021 = !DILocation(line: 60, column: 5, scope: !19970)
!20022 = !DILocation(line: 62, column: 10, scope: !19955)
!20023 = !DILocation(line: 62, column: 3, scope: !19955)
!20024 = !DILocation(line: 63, column: 1, scope: !19955)
!20025 = distinct !DISubprogram(name: "locale_charset", scope: !20026, file: !20026, line: 826, type: !2315, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2312, retainedNodes: !309)
!20026 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!20027 = !DILocalVariable(name: "codeset", scope: !20025, file: !20026, line: 828, type: !87)
!20028 = !DILocation(line: 828, column: 15, scope: !20025)
!20029 = !DILocation(line: 835, column: 13, scope: !20025)
!20030 = !DILocation(line: 835, column: 11, scope: !20025)
!20031 = !DILocation(line: 893, column: 7, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20025, file: !20026, line: 893, column: 7)
!20033 = !DILocation(line: 893, column: 15, scope: !20032)
!20034 = !DILocation(line: 893, column: 7, scope: !20025)
!20035 = !DILocation(line: 895, column: 13, scope: !20032)
!20036 = !DILocation(line: 895, column: 5, scope: !20032)
!20037 = !DILocation(line: 1051, column: 13, scope: !20038)
!20038 = distinct !DILexicalBlock(scope: !20039, file: !20026, line: 1051, column: 13)
!20039 = distinct !DILexicalBlock(scope: !20040, file: !20026, line: 1041, column: 7)
!20040 = distinct !DILexicalBlock(scope: !20025, file: !20026, line: 1000, column: 3)
!20041 = !DILocation(line: 1051, column: 24, scope: !20038)
!20042 = !DILocation(line: 1051, column: 13, scope: !20039)
!20043 = !DILocation(line: 1052, column: 19, scope: !20038)
!20044 = !DILocation(line: 1052, column: 11, scope: !20038)
!20045 = !DILocation(line: 1139, column: 10, scope: !20025)
!20046 = !DILocation(line: 1139, column: 3, scope: !20025)
!20047 = distinct !DISubprogram(name: "memcoll", scope: !20048, file: !20048, line: 66, type: !1959, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2316, retainedNodes: !309)
!20048 = !DIFile(filename: "lib/memcoll.c", directory: "/home/mohamad/clone/coreutils")
!20049 = !DILocalVariable(name: "s1", arg: 1, scope: !20047, file: !20048, line: 66, type: !7)
!20050 = !DILocation(line: 66, column: 16, scope: !20047)
!20051 = !DILocalVariable(name: "s1len", arg: 2, scope: !20047, file: !20048, line: 66, type: !52)
!20052 = !DILocation(line: 66, column: 27, scope: !20047)
!20053 = !DILocalVariable(name: "s2", arg: 3, scope: !20047, file: !20048, line: 66, type: !7)
!20054 = !DILocation(line: 66, column: 40, scope: !20047)
!20055 = !DILocalVariable(name: "s2len", arg: 4, scope: !20047, file: !20048, line: 66, type: !52)
!20056 = !DILocation(line: 66, column: 51, scope: !20047)
!20057 = !DILocalVariable(name: "diff", scope: !20047, file: !20048, line: 68, type: !5)
!20058 = !DILocation(line: 68, column: 7, scope: !20047)
!20059 = !DILocation(line: 74, column: 7, scope: !20060)
!20060 = distinct !DILexicalBlock(scope: !20047, file: !20048, line: 74, column: 7)
!20061 = !DILocation(line: 74, column: 16, scope: !20060)
!20062 = !DILocation(line: 74, column: 13, scope: !20060)
!20063 = !DILocation(line: 74, column: 22, scope: !20060)
!20064 = !DILocation(line: 74, column: 33, scope: !20060)
!20065 = !DILocation(line: 74, column: 37, scope: !20060)
!20066 = !DILocation(line: 74, column: 41, scope: !20060)
!20067 = !DILocation(line: 74, column: 25, scope: !20060)
!20068 = !DILocation(line: 74, column: 48, scope: !20060)
!20069 = !DILocation(line: 74, column: 7, scope: !20047)
!20070 = !DILocation(line: 76, column: 7, scope: !20071)
!20071 = distinct !DILexicalBlock(scope: !20060, file: !20048, line: 75, column: 5)
!20072 = !DILocation(line: 76, column: 13, scope: !20071)
!20073 = !DILocation(line: 77, column: 12, scope: !20071)
!20074 = !DILocation(line: 78, column: 5, scope: !20071)
!20075 = !DILocalVariable(name: "n1", scope: !20076, file: !20048, line: 81, type: !8)
!20076 = distinct !DILexicalBlock(scope: !20060, file: !20048, line: 80, column: 5)
!20077 = !DILocation(line: 81, column: 12, scope: !20076)
!20078 = !DILocation(line: 81, column: 17, scope: !20076)
!20079 = !DILocation(line: 81, column: 20, scope: !20076)
!20080 = !DILocalVariable(name: "n2", scope: !20076, file: !20048, line: 82, type: !8)
!20081 = !DILocation(line: 82, column: 12, scope: !20076)
!20082 = !DILocation(line: 82, column: 17, scope: !20076)
!20083 = !DILocation(line: 82, column: 20, scope: !20076)
!20084 = !DILocation(line: 84, column: 7, scope: !20076)
!20085 = !DILocation(line: 84, column: 10, scope: !20076)
!20086 = !DILocation(line: 84, column: 17, scope: !20076)
!20087 = !DILocation(line: 85, column: 7, scope: !20076)
!20088 = !DILocation(line: 85, column: 10, scope: !20076)
!20089 = !DILocation(line: 85, column: 17, scope: !20076)
!20090 = !DILocation(line: 87, column: 28, scope: !20076)
!20091 = !DILocation(line: 87, column: 32, scope: !20076)
!20092 = !DILocation(line: 87, column: 38, scope: !20076)
!20093 = !DILocation(line: 87, column: 43, scope: !20076)
!20094 = !DILocation(line: 87, column: 47, scope: !20076)
!20095 = !DILocation(line: 87, column: 53, scope: !20076)
!20096 = !DILocation(line: 87, column: 14, scope: !20076)
!20097 = !DILocation(line: 87, column: 12, scope: !20076)
!20098 = !DILocation(line: 89, column: 19, scope: !20076)
!20099 = !DILocation(line: 89, column: 7, scope: !20076)
!20100 = !DILocation(line: 89, column: 10, scope: !20076)
!20101 = !DILocation(line: 89, column: 17, scope: !20076)
!20102 = !DILocation(line: 90, column: 19, scope: !20076)
!20103 = !DILocation(line: 90, column: 7, scope: !20076)
!20104 = !DILocation(line: 90, column: 10, scope: !20076)
!20105 = !DILocation(line: 90, column: 17, scope: !20076)
!20106 = !DILocation(line: 93, column: 10, scope: !20047)
!20107 = !DILocation(line: 93, column: 3, scope: !20047)
!20108 = distinct !DISubprogram(name: "strcoll_loop", scope: !20048, file: !20048, line: 35, type: !1533, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2316, retainedNodes: !309)
!20109 = !DILocalVariable(name: "s1", arg: 1, scope: !20108, file: !20048, line: 35, type: !87)
!20110 = !DILocation(line: 35, column: 27, scope: !20108)
!20111 = !DILocalVariable(name: "s1size", arg: 2, scope: !20108, file: !20048, line: 35, type: !52)
!20112 = !DILocation(line: 35, column: 38, scope: !20108)
!20113 = !DILocalVariable(name: "s2", arg: 3, scope: !20108, file: !20048, line: 35, type: !87)
!20114 = !DILocation(line: 35, column: 58, scope: !20108)
!20115 = !DILocalVariable(name: "s2size", arg: 4, scope: !20108, file: !20048, line: 35, type: !52)
!20116 = !DILocation(line: 35, column: 69, scope: !20108)
!20117 = !DILocalVariable(name: "diff", scope: !20108, file: !20048, line: 37, type: !5)
!20118 = !DILocation(line: 37, column: 7, scope: !20108)
!20119 = !DILocation(line: 39, column: 3, scope: !20108)
!20120 = !DILocation(line: 39, column: 13, scope: !20108)
!20121 = !DILocation(line: 39, column: 19, scope: !20108)
!20122 = !DILocation(line: 39, column: 41, scope: !20108)
!20123 = !DILocation(line: 39, column: 45, scope: !20108)
!20124 = !DILocation(line: 39, column: 32, scope: !20108)
!20125 = !DILocation(line: 39, column: 30, scope: !20108)
!20126 = !DILocation(line: 39, column: 50, scope: !20108)
!20127 = !DILocation(line: 39, column: 53, scope: !20108)
!20128 = !DILocation(line: 39, column: 10, scope: !20108)
!20129 = !DILocalVariable(name: "size1", scope: !20130, file: !20048, line: 44, type: !52)
!20130 = distinct !DILexicalBlock(scope: !20108, file: !20048, line: 40, column: 5)
!20131 = !DILocation(line: 44, column: 14, scope: !20130)
!20132 = !DILocation(line: 44, column: 30, scope: !20130)
!20133 = !DILocation(line: 44, column: 22, scope: !20130)
!20134 = !DILocation(line: 44, column: 34, scope: !20130)
!20135 = !DILocalVariable(name: "size2", scope: !20130, file: !20048, line: 45, type: !52)
!20136 = !DILocation(line: 45, column: 14, scope: !20130)
!20137 = !DILocation(line: 45, column: 30, scope: !20130)
!20138 = !DILocation(line: 45, column: 22, scope: !20130)
!20139 = !DILocation(line: 45, column: 34, scope: !20130)
!20140 = !DILocation(line: 46, column: 13, scope: !20130)
!20141 = !DILocation(line: 46, column: 10, scope: !20130)
!20142 = !DILocation(line: 47, column: 13, scope: !20130)
!20143 = !DILocation(line: 47, column: 10, scope: !20130)
!20144 = !DILocation(line: 48, column: 17, scope: !20130)
!20145 = !DILocation(line: 48, column: 14, scope: !20130)
!20146 = !DILocation(line: 49, column: 17, scope: !20130)
!20147 = !DILocation(line: 49, column: 14, scope: !20130)
!20148 = !DILocation(line: 51, column: 11, scope: !20149)
!20149 = distinct !DILexicalBlock(scope: !20130, file: !20048, line: 51, column: 11)
!20150 = !DILocation(line: 51, column: 18, scope: !20149)
!20151 = !DILocation(line: 51, column: 11, scope: !20130)
!20152 = !DILocation(line: 52, column: 19, scope: !20149)
!20153 = !DILocation(line: 52, column: 26, scope: !20149)
!20154 = !DILocation(line: 52, column: 16, scope: !20149)
!20155 = !DILocation(line: 52, column: 9, scope: !20149)
!20156 = !DILocation(line: 53, column: 11, scope: !20157)
!20157 = distinct !DILexicalBlock(scope: !20130, file: !20048, line: 53, column: 11)
!20158 = !DILocation(line: 53, column: 18, scope: !20157)
!20159 = !DILocation(line: 53, column: 11, scope: !20130)
!20160 = !DILocation(line: 54, column: 9, scope: !20157)
!20161 = distinct !{!20161, !20119, !20162}
!20162 = !DILocation(line: 55, column: 5, scope: !20108)
!20163 = !DILocation(line: 57, column: 10, scope: !20108)
!20164 = !DILocation(line: 57, column: 3, scope: !20108)
!20165 = !DILocation(line: 58, column: 1, scope: !20108)
!20166 = distinct !DISubprogram(name: "memcoll0", scope: !20048, file: !20048, line: 102, type: !1533, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2316, retainedNodes: !309)
!20167 = !DILocalVariable(name: "s1", arg: 1, scope: !20166, file: !20048, line: 102, type: !87)
!20168 = !DILocation(line: 102, column: 23, scope: !20166)
!20169 = !DILocalVariable(name: "s1size", arg: 2, scope: !20166, file: !20048, line: 102, type: !52)
!20170 = !DILocation(line: 102, column: 34, scope: !20166)
!20171 = !DILocalVariable(name: "s2", arg: 3, scope: !20166, file: !20048, line: 102, type: !87)
!20172 = !DILocation(line: 102, column: 54, scope: !20166)
!20173 = !DILocalVariable(name: "s2size", arg: 4, scope: !20166, file: !20048, line: 102, type: !52)
!20174 = !DILocation(line: 102, column: 65, scope: !20166)
!20175 = !DILocation(line: 104, column: 7, scope: !20176)
!20176 = distinct !DILexicalBlock(scope: !20166, file: !20048, line: 104, column: 7)
!20177 = !DILocation(line: 104, column: 17, scope: !20176)
!20178 = !DILocation(line: 104, column: 14, scope: !20176)
!20179 = !DILocation(line: 104, column: 24, scope: !20176)
!20180 = !DILocation(line: 104, column: 35, scope: !20176)
!20181 = !DILocation(line: 104, column: 39, scope: !20176)
!20182 = !DILocation(line: 104, column: 43, scope: !20176)
!20183 = !DILocation(line: 104, column: 27, scope: !20176)
!20184 = !DILocation(line: 104, column: 51, scope: !20176)
!20185 = !DILocation(line: 104, column: 7, scope: !20166)
!20186 = !DILocation(line: 106, column: 7, scope: !20187)
!20187 = distinct !DILexicalBlock(scope: !20176, file: !20048, line: 105, column: 5)
!20188 = !DILocation(line: 106, column: 13, scope: !20187)
!20189 = !DILocation(line: 107, column: 7, scope: !20187)
!20190 = !DILocation(line: 110, column: 26, scope: !20176)
!20191 = !DILocation(line: 110, column: 30, scope: !20176)
!20192 = !DILocation(line: 110, column: 38, scope: !20176)
!20193 = !DILocation(line: 110, column: 42, scope: !20176)
!20194 = !DILocation(line: 110, column: 12, scope: !20176)
!20195 = !DILocation(line: 110, column: 5, scope: !20176)
!20196 = !DILocation(line: 111, column: 1, scope: !20166)
!20197 = distinct !DISubprogram(name: "make_timespec", scope: !20198, file: !20198, line: 54, type: !2322, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2319, retainedNodes: !309)
!20198 = !DIFile(filename: "./lib/timespec.h", directory: "/home/mohamad/clone/coreutils")
!20199 = !DILocalVariable(name: "s", arg: 1, scope: !20197, file: !20198, line: 54, type: !2177)
!20200 = !DILocation(line: 54, column: 23, scope: !20197)
!20201 = !DILocalVariable(name: "ns", arg: 2, scope: !20197, file: !20198, line: 54, type: !32)
!20202 = !DILocation(line: 54, column: 35, scope: !20197)
!20203 = !DILocalVariable(name: "r", scope: !20197, file: !20198, line: 56, type: !2324)
!20204 = !DILocation(line: 56, column: 19, scope: !20197)
!20205 = !DILocation(line: 57, column: 14, scope: !20197)
!20206 = !DILocation(line: 57, column: 5, scope: !20197)
!20207 = !DILocation(line: 57, column: 12, scope: !20197)
!20208 = !DILocation(line: 58, column: 15, scope: !20197)
!20209 = !DILocation(line: 58, column: 5, scope: !20197)
!20210 = !DILocation(line: 58, column: 13, scope: !20197)
!20211 = !DILocation(line: 59, column: 3, scope: !20197)
!20212 = distinct !DISubprogram(name: "timespec_cmp", scope: !20198, file: !20198, line: 89, type: !2328, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2319, retainedNodes: !309)
!20213 = !DILocalVariable(name: "a", arg: 1, scope: !20212, file: !20198, line: 89, type: !2324)
!20214 = !DILocation(line: 89, column: 31, scope: !20212)
!20215 = !DILocalVariable(name: "b", arg: 2, scope: !20212, file: !20198, line: 89, type: !2324)
!20216 = !DILocation(line: 89, column: 50, scope: !20212)
!20217 = !DILocation(line: 91, column: 9, scope: !20218)
!20218 = distinct !DILexicalBlock(scope: !20212, file: !20198, line: 91, column: 7)
!20219 = !DILocation(line: 91, column: 20, scope: !20218)
!20220 = !DILocation(line: 91, column: 16, scope: !20218)
!20221 = !DILocation(line: 91, column: 7, scope: !20212)
!20222 = !DILocation(line: 92, column: 5, scope: !20218)
!20223 = !DILocation(line: 93, column: 9, scope: !20224)
!20224 = distinct !DILexicalBlock(scope: !20212, file: !20198, line: 93, column: 7)
!20225 = !DILocation(line: 93, column: 20, scope: !20224)
!20226 = !DILocation(line: 93, column: 16, scope: !20224)
!20227 = !DILocation(line: 93, column: 7, scope: !20212)
!20228 = !DILocation(line: 94, column: 5, scope: !20224)
!20229 = !DILocation(line: 98, column: 3, scope: !20212)
!20230 = !DILocation(line: 99, column: 3, scope: !20212)
!20231 = !DILocation(line: 101, column: 12, scope: !20212)
!20232 = !DILocation(line: 101, column: 24, scope: !20212)
!20233 = !DILocation(line: 101, column: 20, scope: !20212)
!20234 = !DILocation(line: 101, column: 10, scope: !20212)
!20235 = !DILocation(line: 101, column: 3, scope: !20212)
!20236 = !DILocation(line: 102, column: 1, scope: !20212)
!20237 = distinct !DISubprogram(name: "timespec_sign", scope: !20198, file: !20198, line: 107, type: !2330, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2319, retainedNodes: !309)
!20238 = !DILocalVariable(name: "a", arg: 1, scope: !20237, file: !20198, line: 107, type: !2324)
!20239 = !DILocation(line: 107, column: 32, scope: !20237)
!20240 = !DILocation(line: 109, column: 12, scope: !20237)
!20241 = !DILocation(line: 109, column: 19, scope: !20237)
!20242 = !DILocation(line: 109, column: 10, scope: !20237)
!20243 = !DILocation(line: 109, column: 32, scope: !20237)
!20244 = !DILocation(line: 109, column: 30, scope: !20237)
!20245 = !DILocation(line: 109, column: 39, scope: !20237)
!20246 = !DILocation(line: 109, column: 44, scope: !20237)
!20247 = !DILocation(line: 109, column: 3, scope: !20237)
!20248 = distinct !DISubprogram(name: "timespectod", scope: !20198, file: !20198, line: 121, type: !2332, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2319, retainedNodes: !309)
!20249 = !DILocalVariable(name: "a", arg: 1, scope: !20248, file: !20198, line: 121, type: !2324)
!20250 = !DILocation(line: 121, column: 30, scope: !20248)
!20251 = !DILocation(line: 123, column: 12, scope: !20248)
!20252 = !DILocation(line: 123, column: 10, scope: !20248)
!20253 = !DILocation(line: 123, column: 23, scope: !20248)
!20254 = !DILocation(line: 123, column: 21, scope: !20248)
!20255 = !DILocation(line: 123, column: 31, scope: !20248)
!20256 = !DILocation(line: 123, column: 19, scope: !20248)
!20257 = !DILocation(line: 123, column: 3, scope: !20248)
!20258 = distinct !DISubprogram(name: "dup_safer", scope: !20259, file: !20259, line: 31, type: !1872, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2334, retainedNodes: !309)
!20259 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!20260 = !DILocalVariable(name: "fd", arg: 1, scope: !20258, file: !20259, line: 31, type: !5)
!20261 = !DILocation(line: 31, column: 16, scope: !20258)
!20262 = !DILocation(line: 33, column: 17, scope: !20258)
!20263 = !DILocation(line: 33, column: 10, scope: !20258)
!20264 = !DILocation(line: 33, column: 3, scope: !20258)
