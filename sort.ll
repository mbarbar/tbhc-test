; ModuleID = 'sort.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.keyfield = type { i64, i64, i64, i64, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.keyfield* }
%struct.line = type { i8*, i64, i8*, i8* }
%struct.tempnode = type { %struct.tempnode*, i32, i8, [0 x i8] }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.month = type { i8*, i32 }
%struct.md5_ctx = type { i32, i32, i32, i32, [2 x i32], i32, [32 x i32] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.Tokens = type { i64, i8**, i64*, %struct.obstack, %struct.obstack, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sigaction = type { %union.anon.2, %struct.__sigset_t, i32, void ()* }
%union.anon.2 = type { void (i32)* }
%struct.sortfile = type { i8*, %struct.tempnode* }
%struct.cs_status = type { i8, %struct.__sigset_t }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.36 }
%union.anon.36 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0.35 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0.35 = type { [256 x i64] }
%struct.buffer = type { i8*, i64, i64, i64, i64, i64, i8 }
%struct.merge_node_queue = type { %struct.heap*, %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.heap = type { i8**, i64, i64, i32 (i8*, i8*)* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%struct.merge_node = type { %struct.line*, %struct.line*, %struct.line*, %struct.line*, %struct.line**, i64, i64, %struct.merge_node*, %struct.merge_node*, %struct.merge_node*, i32, i8, %union.pthread_mutex_t }
%union.pthread_mutexattr_t = type { i32 }
%struct.thread_args = type { %struct.line*, i64, i64, %struct.merge_node*, %struct.merge_node_queue*, %struct._IO_FILE*, i8* }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.__mbstate_t = type { i32, %union.pthread_mutexattr_t }
%struct.sysinfo = type { i64, [3 x i64], i64, i64, i64, i64, i64, i64, i16, i16, i64, i64, i32, [0 x i8] }
%struct.timezone = type { i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"Usage: %s [OPTION]... [FILE]...\0A  or:  %s [OPTION]... --files0-from=F\0A\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"Write sorted concatenation of all FILE(s) to standard output.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [20 x i8] c"Ordering options:\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [204 x i8] c"  -b, --ignore-leading-blanks  ignore leading blanks\0A  -d, --dictionary-order      consider only blanks and alphanumeric characters\0A  -f, --ignore-case           fold lower case to upper case characters\0A\00", align 1
@.str.5 = private unnamed_addr constant [211 x i8] c"  -g, --general-numeric-sort  compare according to general numerical value\0A  -i, --ignore-nonprinting    consider only printable characters\0A  -M, --month-sort            compare (unknown) < 'JAN' < ... < 'DEC'\0A\00", align 1
@.str.6 = private unnamed_addr constant [76 x i8] c"  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\0A\00", align 1
@.str.7 = private unnamed_addr constant [274 x i8] c"  -n, --numeric-sort          compare according to string numerical value\0A  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\0A      --random-source=FILE    get random bytes from FILE\0A  -r, --reverse               reverse the result of comparisons\0A\00", align 1
@.str.8 = private unnamed_addr constant [278 x i8] c"      --sort=WORD             sort according to WORD:\0A                                general-numeric -g, human-numeric -h, month -M,\0A                                numeric -n, random -R, version -V\0A  -V, --version-sort          natural sort of (version) numbers within text\0A\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"Other options:\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [118 x i8] c"      --batch-size=NMERGE   merge at most NMERGE inputs at once;\0A                            for more use temp files\0A\00", align 1
@.str.11 = private unnamed_addr constant [277 x i8] c"  -c, --check, --check=diagnose-first  check for sorted input; do not sort\0A  -C, --check=quiet, --check=silent  like -c, but do not report first bad line\0A      --compress-program=PROG  compress temporaries with PROG;\0A                              decompress them with PROG -d\0A\00", align 1
@.str.12 = private unnamed_addr constant [348 x i8] c"      --debug               annotate the part of the line used to sort,\0A                              and warn about questionable usage to stderr\0A      --files0-from=F       read input from the files specified by\0A                            NUL-terminated names in file F;\0A                            If F is - then read names from standard input\0A\00", align 1
@.str.13 = private unnamed_addr constant [144 x i8] c"  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and type\0A  -m, --merge               merge already sorted files; do not sort\0A\00", align 1
@.str.14 = private unnamed_addr constant [216 x i8] c"  -o, --output=FILE         write result to FILE instead of standard output\0A  -s, --stable              stabilize sort by disabling last-resort comparison\0A  -S, --buffer-size=SIZE    use SIZE for main memory buffer\0A\00", align 1
@.str.15 = private unnamed_addr constant [453 x i8] c"  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition\0A  -T, --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or %s;\0A                              multiple options specify multiple directories\0A      --parallel=N          change the number of sorts run concurrently to N\0A  -u, --unique              with -c, check for strict ordering;\0A                              without -c, output only the first of an equal run\0A\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@.str.17 = private unnamed_addr constant [64 x i8] c"  -z, --zero-terminated     line delimiter is NUL, not newline\0A\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.19 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.20 = private unnamed_addr constant [604 x i8] c"\0AKEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a\0Afield number and C a character position in the field; both are origin 1, and\0Athe stop position defaults to the line's end.  If neither -t nor -b is in\0Aeffect, characters in a field are counted from the beginning of the preceding\0Awhitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],\0Awhich override global ordering options for that key.  If no key is given, use\0Athe entire line as the key.  Use --debug to diagnose incorrect key usage.\0A\0ASIZE may be followed by the following multiplicative suffixes:\0A\00", align 1
@.str.21 = private unnamed_addr constant [229 x i8] c"% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\0A\0A*** WARNING ***\0AThe locale specified by the environment affects sort order.\0ASet LC_ALL=C to get the traditional sort order that uses\0Anative byte values.\0A\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.77 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.79 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.81 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.82 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.68 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.67 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.66 = private unnamed_addr constant [56 x i8] c"\0AWith no FILE, or when FILE is -, read standard input.\0A\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@hard_LC_COLLATE = internal global i8 0, align 1, !dbg !63, !ctir !103
@hard_LC_TIME = internal global i8 0, align 1, !dbg !730, !ctir !103
@decimal_point = internal global i32 0, align 4, !dbg !726, !ctir !7
@thousands_sep = internal global i32 0, align 4, !dbg !728, !ctir !7
@have_read_stdin = internal global i8 0, align 1, !dbg !742, !ctir !103
@caught_signals = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !750, !ctir !145
@main.sig = internal constant [11 x i32] [i32 14, i32 1, i32 2, i32 13, i32 3, i32 15, i32 29, i32 27, i32 26, i32 24, i32 25], align 16, !dbg !719
@optind = external dso_local global i32, align 4, !ctir !7
@short_options = internal constant [31 x i8] c"-bcCdfghik:mMno:rRsS:t:T:uVy:z\00", align 16, !dbg !764, !ctir !253
@long_options = internal constant [31 x %struct.option] [%struct.option { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.95, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i32 2, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i32 1, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.103, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0), i32 1, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i32 0, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i32 0, i32* null, i32 77 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.111, i32 0, i32 0), i32 1, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 1, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 1, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.120, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.121, i32 0, i32 0), i32 1, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !766, !ctir !256
@optarg = external dso_local global i8*, align 8, !ctir !9
@.str.27 = private unnamed_addr constant [25 x i8] c"invalid number after '-'\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"src/sort.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"invalid number after '.'\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"stray character in field spec\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"--sort\00", align 1
@sort_args = internal constant [7 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8* null], align 16, !dbg !770, !ctir !269
@sort_types = internal constant [6 x i8] c"ghMnRV", align 1, !dbg !768, !ctir !266
@.str.33 = private unnamed_addr constant [8 x i8] c"--check\00", align 1
@check_args = internal constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.133, i32 0, i32 0), i8* null], align 16, !dbg !774, !ctir !281
@check_types = internal constant [3 x i8] c"CCc", align 1, !dbg !772, !ctir !278
@.str.34 = private unnamed_addr constant [3 x i8] c"cC\00", align 1
@compress_program = internal global i8* null, align 8, !dbg !746, !ctir !88
@.str.35 = private unnamed_addr constant [37 x i8] c"multiple compress programs specified\00", align 1
@debug = internal global i8 0, align 1, !dbg !748, !ctir !103
@.str.36 = private unnamed_addr constant [30 x i8] c"invalid number at field start\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"field number is zero\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"character offset is zero\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"invalid number after ','\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"multiple output files specified\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"multiple random sources specified\00", align 1
@stable = internal global i8 0, align 1, !dbg !738, !ctir !103
@.str.42 = private unnamed_addr constant [10 x i8] c"empty tab\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"\5C0\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"multi-character tab %s\00", align 1
@tab = internal global i32 128, align 4, !dbg !776, !ctir !7
@.str.45 = private unnamed_addr constant [18 x i8] c"incompatible tabs\00", align 1
@unique = internal global i8 0, align 1, !dbg !740, !ctir !103
@eolchar = internal global i8 10, align 1, !dbg !782, !ctir !10
@.str.47 = private unnamed_addr constant [13 x i8] c"Mike Haertel\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"Paul Eggert\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.51 = private unnamed_addr constant [52 x i8] c"file operands cannot be combined with --files0-from\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"cannot read file names from %s\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.55 = private unnamed_addr constant [63 x i8] c"when reading file names from stdin, no file name of %s allowed\00", align 1
@.str.56 = private unnamed_addr constant [38 x i8] c"%s:%lu: invalid zero-length file name\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"no input from %s\00", align 1
@keylist = internal global %struct.keyfield* null, align 8, !dbg !744, !ctir !93
@main.opts = internal global [10 x i8] c"X --debug\00", align 1, !dbg !722
@.str.59 = private unnamed_addr constant [21 x i8] c"failed to set locale\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.60 = private unnamed_addr constant [47 x i8] c"text ordering performed using %s sorting rules\00", align 1
@.str.61 = private unnamed_addr constant [53 x i8] c"text ordering performed using simple byte comparison\00", align 1
@reverse = internal global i8 0, align 1, !dbg !736, !ctir !103
@temp_dir_count = internal global i64 0, align 8, !dbg !734, !ctir !55
@.str.62 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@sort_size = internal global i64 0, align 8, !dbg !732, !ctir !55
@nmerge = internal global i32 16, align 4, !dbg !791, !ctir !69
@.str.63 = private unnamed_addr constant [38 x i8] c"extra operand %s not allowed with -%c\00", align 1
@main.opts.64 = internal global [3 x i8] c"\00o\00", align 1, !dbg !724
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.65 = private unnamed_addr constant [13 x i8] c"close failed\00", align 1
@.str.181 = private unnamed_addr constant [16 x i8] c"standard output\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@saved_line = internal global %struct.line zeroinitializer, align 8, !dbg !812, !ctir !449
@.str.167 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@temphead = internal global %struct.tempnode* null, align 8, !dbg !762, !ctir !297
@nprocs = internal global i32 0, align 4, !dbg !799, !ctir !299
@.str.171 = private unnamed_addr constant [20 x i8] c"waiting for %s [-d]\00", align 1
@.str.172 = private unnamed_addr constant [30 x i8] c"%s [-d] terminated abnormally\00", align 1
@proctab = internal global %struct.hash_table* null, align 8, !dbg !797, !ctir !549
@.str.164 = private unnamed_addr constant [13 x i8] c"write failed\00", align 1
@blanks = internal global [256 x i8] zeroinitializer, align 16, !dbg !752, !ctir !322
@unit_order = internal constant <{ [108 x i8], [148 x i8] }> <{ [108 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\03\00\00\00\01\00\02\00\00\05\00\00\00\04\00\00\00\00\08\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", [148 x i8] zeroinitializer }>, align 16, !dbg !795, !ctir !486
@.str.165 = private unnamed_addr constant [20 x i8] c"^ no match for key\0A\00", align 1
@monthtab = internal global [12 x %struct.month] [%struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i32 0, i32 0), i32 4 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i32 8 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0), i32 12 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i32 0, i32 0), i32 2 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i32 1 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 7 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i32 0, i32 0), i32 6 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i32 0, i32 0), i32 3 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i32 0, i32 0), i32 5 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i32 0, i32 0), i32 11 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i32 0, i32 0), i32 10 }, %struct.month { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i32 9 }], align 16, !dbg !760, !ctir !328
@fold_toupper = internal global [256 x i8] zeroinitializer, align 16, !dbg !758, !ctir !327
@.str.83 = private unnamed_addr constant [4 x i8] c"APR\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"AUG\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"DEC\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"FEB\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"JAN\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"JUL\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"JUN\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"MAR\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"MAY\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"NOV\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c"OCT\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"SEP\00", align 1
@random_md5_state = internal global %struct.md5_ctx zeroinitializer, align 4, !dbg !789, !ctir !499
@.str.161 = private unnamed_addr constant [29 x i8] c"string transformation failed\00", align 1
@.str.162 = private unnamed_addr constant [42 x i8] c"set LC_ALL='C' to work around the problem\00", align 1
@.str.163 = private unnamed_addr constant [32 x i8] c"the untransformed string was %s\00", align 1
@.str.176 = private unnamed_addr constant [34 x i8] c"couldn't execute compress program\00", align 1
@.str.177 = private unnamed_addr constant [31 x i8] c"couldn't create temporary file\00", align 1
@.str.173 = private unnamed_addr constant [9 x i8] c": errno \00", align 1
@.str.174 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@temp_dirs = internal global i8** null, align 8, !dbg !780, !ctir !378
@create_temp_file.temp_dir_index = internal global i64 0, align 8, !dbg !807
@create_temp_file.slashbase = internal constant [12 x i8] c"/sortXXXXXX\00", align 1, !dbg !803
@temptail = internal global %struct.tempnode** @temphead, align 8, !dbg !801, !ctir !569
@.str.178 = private unnamed_addr constant [35 x i8] c"cannot create temporary file in %s\00", align 1
@merge_buffer_size = internal global i64 262144, align 8, !dbg !793, !ctir !55
@.str.159 = private unnamed_addr constant [12 x i8] c"read failed\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c"stat failed\00", align 1
@sort_buffer_size.size_bound = internal global i64 0, align 8, !dbg !809
@.str.142 = private unnamed_addr constant [12 x i8] c"open failed\00", align 1
@.str.175 = private unnamed_addr constant [27 x i8] c"warning: cannot remove: %s\00", align 1
@.str.143 = private unnamed_addr constant [21 x i8] c"%s: error truncating\00", align 1
@.str.144 = private unnamed_addr constant [41 x i8] c"!\22unexpected mode passed to stream_open\22\00", align 1
@__PRETTY_FUNCTION__.stream_open = private unnamed_addr constant [46 x i8] c"FILE *stream_open(const char *, const char *)\00", align 1
@get_outstatus.outstat_errno = internal global i32 0, align 4, !dbg !784
@get_outstatus.outstat = internal global %struct.stat zeroinitializer, align 8, !dbg !787
@.str.168 = private unnamed_addr constant [34 x i8] c"couldn't create process for %s -d\00", align 1
@.str.169 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.170 = private unnamed_addr constant [44 x i8] c"couldn't execute compress program (with -d)\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"cannot read\00", align 1
@.str.157 = private unnamed_addr constant [22 x i8] c"%s: %s:%s: disorder: \00", align 1
@.str.158 = private unnamed_addr constant [15 x i8] c"standard error\00", align 1
@.str.146 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"-k \00", align 1
@.str.148 = private unnamed_addr constant [3 x i8] c" -\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.150 = private unnamed_addr constant [45 x i8] c"obsolescent key %s used; consider %s instead\00", align 1
@.str.151 = private unnamed_addr constant [43 x i8] c"key %lu has zero width and will be ignored\00", align 1
@.str.152 = private unnamed_addr constant [72 x i8] c"leading blanks are significant in key %lu; consider also specifying 'b'\00", align 1
@.str.153 = private unnamed_addr constant [45 x i8] c"key %lu is numeric and spans multiple fields\00", align 1
@.str.154 = private unnamed_addr constant [24 x i8] c"option '-%s' is ignored\00", align 1
@.str.155 = private unnamed_addr constant [26 x i8] c"options '-%s' are ignored\00", align 1
@.str.156 = private unnamed_addr constant [51 x i8] c"option '-r' only applies to last-resort comparison\00", align 1
@nondictionary = internal global [256 x i8] zeroinitializer, align 16, !dbg !756, !ctir !322
@nonprinting = internal global [256 x i8] zeroinitializer, align 16, !dbg !754, !ctir !322
@.str.145 = private unnamed_addr constant [14 x i8] c"fflush failed\00", align 1
@.str.141 = private unnamed_addr constant [35 x i8] c"number in parallel must be nonzero\00", align 1
@temp_dir_alloc = internal global i64 0, align 8, !dbg !778, !ctir !55
@.str.140 = private unnamed_addr constant [13 x i8] c"EgGkKmMPtTYZ\00", align 1
@.str.135 = private unnamed_addr constant [25 x i8] c"invalid --%s argument %s\00", align 1
@.str.136 = private unnamed_addr constant [28 x i8] c"minimum --%s argument is %s\00", align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.138 = private unnamed_addr constant [27 x i8] c"--%s argument %s too large\00", align 1
@.str.139 = private unnamed_addr constant [48 x i8] c"maximum --%s argument with current rlimit is %s\00", align 1
@.str.134 = private unnamed_addr constant [31 x i8] c"options '-%s' are incompatible\00", align 1
@.str.131 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.133 = private unnamed_addr constant [15 x i8] c"diagnose-first\00", align 1
@.str.126 = private unnamed_addr constant [16 x i8] c"general-numeric\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"human-numeric\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"numeric\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.125 = private unnamed_addr constant [35 x i8] c"%s: invalid field specification %s\00", align 1
@.str.124 = private unnamed_addr constant [33 x i8] c"%s: invalid count at start of %s\00", align 1
@.str.95 = private unnamed_addr constant [22 x i8] c"ignore-leading-blanks\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"compress-program\00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"dictionary-order\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"ignore-case\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"files0-from\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"general-numeric-sort\00", align 1
@.str.103 = private unnamed_addr constant [19 x i8] c"ignore-nonprinting\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"merge\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"month-sort\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c"numeric-sort\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"human-numeric-sort\00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"version-sort\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"random-sort\00", align 1
@.str.111 = private unnamed_addr constant [14 x i8] c"random-source\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"stable\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"batch-size\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"buffer-size\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"field-separator\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"temporary-directory\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.120 = private unnamed_addr constant [16 x i8] c"zero-terminated\00", align 1
@.str.121 = private unnamed_addr constant [9 x i8] c"parallel\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), align 8, !dbg !814, !ctir !88
@.str.64 = private unnamed_addr constant [5 x i8] c"8.31\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !820, !ctir !273
@.str.160 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.161 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.162 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.163 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.164 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@file_name = internal global i8* null, align 8, !dbg !873, !ctir !88
@ignore_EPIPE = internal global i8 0, align 1, !dbg !915, !ctir !103
@.str.182 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.183 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.184 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@fillbuf.189 = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 16, !dbg !918, !ctir !942
@.str.190 = private unnamed_addr constant [4 x i8] c"md5\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !999, !ctir !318
@.str.199 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.200 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.203 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.204 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.205 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.206 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.207 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.208 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !1006, !ctir !1033
@.str.231 = private unnamed_addr constant [16 x i8] c"OMP_NUM_THREADS\00", align 1
@.str.1.232 = private unnamed_addr constant [17 x i8] c"OMP_THREAD_LIMIT\00", align 1
@rpl_pipe2.have_pipe2_really = internal global i32 0, align 4, !dbg !1143
@.str.241 = private unnamed_addr constant [16 x i8] c"_POSIX2_VERSION\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !1153, !ctir !88
@.str.246 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.248 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.250, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.251, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.252, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.253, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.254, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.255, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.256, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.257, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.258, i32 0, i32 0), i8* null], align 16, !dbg !1194, !ctir !1214
@.str.249 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.250 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.251 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.252 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.253 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.254 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.255 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.256 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.257 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.258 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1316, !ctir !1215
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1318, !ctir !1220
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1320, !ctir !1220
@.str.10.259 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.260 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.261 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.262 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.263 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.264 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.265 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.266 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.267 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1324, !ctir !1250
@nslots = internal global i32 1, align 4, !dbg !1326, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1322, !ctir !327
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1328, !ctir !1251
@.str.282 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.283 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.284 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.285 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@.str.305 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.306 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.307 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.308 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.309 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.310 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.311 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.312 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.313 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.314 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.315 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.316 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.317 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.318 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.321 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.322 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.323 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.324 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.325 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.19.326 = private unnamed_addr constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1330, !ctir !1335
@.str.1.345 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.346 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.347 = private unnamed_addr constant [25 x i8] c"string comparison failed\00", align 1
@.str.1.348 = private unnamed_addr constant [43 x i8] c"Set LC_ALL='C' to work around the problem.\00", align 1
@.str.2.349 = private unnamed_addr constant [37 x i8] c"The strings compared were %s and %s.\00", align 1
@.str.356 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.357 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.360 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1.361 = private unnamed_addr constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str.2.362 = private unnamed_addr constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 1
@.str.3.363 = private unnamed_addr constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str.366 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.367 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoumax = private unnamed_addr constant [79 x i8] c"strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1338
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !1358, !ctir !167
@.str.1.382 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.383 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.414 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.415 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2272 !ctir !86 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2277, metadata !DIExpression()), !dbg !2278
  %0 = load i32, i32* %status.addr, align 4, !dbg !2279, !tbaa !2273
  %cmp = icmp ne i32 %0, 0, !dbg !2281
  br i1 %cmp, label %if.then, label %if.else, !dbg !2282

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2283

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2284, !tbaa !2286
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #12, !dbg !2284
  %2 = load i8*, i8** @program_name, align 8, !dbg !2284, !tbaa !2286
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2284
  br label %do.end, !dbg !2284

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2284

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !2288
  %3 = load i8*, i8** @program_name, align 8, !dbg !2290, !tbaa !2286
  %4 = load i8*, i8** @program_name, align 8, !dbg !2291, !tbaa !2286
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4), !dbg !2292
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !2293
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2293, !tbaa !2286
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %5), !dbg !2293
  call void @emit_stdin_note(), !dbg !2294
  call void @emit_mandatory_arg_note(), !dbg !2295
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !2296
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2296, !tbaa !2286
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %6), !dbg !2296
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !2297
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2297, !tbaa !2286
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %7), !dbg !2297
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([211 x i8], [211 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !2298
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2298, !tbaa !2286
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %8), !dbg !2298
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !2299
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2299, !tbaa !2286
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %9), !dbg !2299
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([274 x i8], [274 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !2300
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2300, !tbaa !2286
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %10), !dbg !2300
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([278 x i8], [278 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !2301
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2301, !tbaa !2286
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %11), !dbg !2301
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !2302
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2302, !tbaa !2286
  %call19 = call i32 @fputs_unlocked(i8* %call18, %struct._IO_FILE* %12), !dbg !2302
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !2303
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2303, !tbaa !2286
  %call21 = call i32 @fputs_unlocked(i8* %call20, %struct._IO_FILE* %13), !dbg !2303
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([277 x i8], [277 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !2304
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2304, !tbaa !2286
  %call23 = call i32 @fputs_unlocked(i8* %call22, %struct._IO_FILE* %14), !dbg !2304
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([348 x i8], [348 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !2305
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2305, !tbaa !2286
  %call25 = call i32 @fputs_unlocked(i8* %call24, %struct._IO_FILE* %15), !dbg !2305
  %call26 = call i8* @gettext(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !2306
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2306, !tbaa !2286
  %call27 = call i32 @fputs_unlocked(i8* %call26, %struct._IO_FILE* %16), !dbg !2306
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([216 x i8], [216 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !2307
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2307, !tbaa !2286
  %call29 = call i32 @fputs_unlocked(i8* %call28, %struct._IO_FILE* %17), !dbg !2307
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([453 x i8], [453 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !2308
  %call31 = call i32 (i8*, ...) @printf(i8* %call30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)), !dbg !2309
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !2310
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2310, !tbaa !2286
  %call33 = call i32 @fputs_unlocked(i8* %call32, %struct._IO_FILE* %18), !dbg !2310
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !2311
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2311, !tbaa !2286
  %call35 = call i32 @fputs_unlocked(i8* %call34, %struct._IO_FILE* %19), !dbg !2311
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !2312
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2312, !tbaa !2286
  %call37 = call i32 @fputs_unlocked(i8* %call36, %struct._IO_FILE* %20), !dbg !2312
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([604 x i8], [604 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !2313
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2313, !tbaa !2286
  %call39 = call i32 @fputs_unlocked(i8* %call38, %struct._IO_FILE* %21), !dbg !2313
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([229 x i8], [229 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !2314
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2314, !tbaa !2286
  %call41 = call i32 @fputs_unlocked(i8* %call40, %struct._IO_FILE* %22), !dbg !2314
  call void @emit_ancillary_info(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)), !dbg !2315
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %23 = load i32, i32* %status.addr, align 4, !dbg !2316, !tbaa !2273
  call void @exit(i32 %23) #13, !dbg !2317
  unreachable, !dbg !2317
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_stdin_note() #4 !dbg !2318 !ctir !168 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !2319
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2319, !tbaa !2286
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2319
  ret void, !dbg !2320
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2321 !ctir !168 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !2322
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2322, !tbaa !2286
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2322
  ret void, !dbg !2323
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !312 !ctir !306 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !308
  %node = alloca i8*, align 8, !ctir !88
  %map_prog = alloca %struct.infomap*, align 8, !ctir !317
  %lc_messages = alloca i8*, align 8, !ctir !88
  store i8* %program, i8** %program.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2324, metadata !DIExpression()), !dbg !2325
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2326, metadata !DIExpression()), !dbg !2327
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2327
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2328, metadata !DIExpression()), !dbg !2329
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2330, !tbaa !2286
  store i8* %1, i8** %node, align 8, !dbg !2329, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2331, metadata !DIExpression()), !dbg !2332
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2333
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2332, !tbaa !2286
  br label %while.cond, !dbg !2334

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2335, !tbaa !2286
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2336, !ctir !309
  %3 = load i8*, i8** %program1, align 8, !dbg !2336, !tbaa !2337, !ctir !88
  %tobool = icmp ne i8* %3, null, !dbg !2335
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2339

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2340, !tbaa !2286
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2340, !tbaa !2286
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2340, !ctir !309
  %6 = load i8*, i8** %program2, align 8, !dbg !2340, !tbaa !2337, !ctir !88
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2340
  %cmp = icmp eq i32 %call, 0, !dbg !2340
  %lnot = xor i1 %cmp, true, !dbg !2341
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2342
  br i1 %7, label %while.body, label %while.end, !dbg !2334

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2343, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2343
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2343, !tbaa !2286
  br label %while.cond, !dbg !2334, !llvm.loop !2344

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2345, !tbaa !2286
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2347, !ctir !309
  %10 = load i8*, i8** %node3, align 8, !dbg !2347, !tbaa !2348, !ctir !88
  %tobool4 = icmp ne i8* %10, null, !dbg !2345
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2349

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2350, !tbaa !2286
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2351, !ctir !309
  %12 = load i8*, i8** %node5, align 8, !dbg !2351, !tbaa !2348, !ctir !88
  store i8* %12, i8** %node, align 8, !dbg !2352, !tbaa !2286
  br label %if.end, !dbg !2353

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !2354
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i64 0, i64 0)), !dbg !2355
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2356, metadata !DIExpression()), !dbg !2357
  %call8 = call i8* @setlocale(i32 5, i8* null) #12, !dbg !2358
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2357, !tbaa !2286
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2359, !tbaa !2286
  %tobool9 = icmp ne i8* %13, null, !dbg !2359
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2361

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2362, !tbaa !2286
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i64 0, i64 0), i64 3) #14, !dbg !2362
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2362
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2363

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.79, i64 0, i64 0)) #12, !dbg !2364
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2364, !tbaa !2286
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2364
  br label %if.end15, !dbg !2366

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i64 0, i64 0)) #12, !dbg !2367
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2368, !tbaa !2286
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i64 0, i64 0), i8* %16), !dbg !2369
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !2370
  %17 = load i8*, i8** %node, align 8, !dbg !2371, !tbaa !2286
  %18 = load i8*, i8** %node, align 8, !dbg !2372, !tbaa !2286
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2373, !tbaa !2286
  %cmp19 = icmp eq i8* %18, %19, !dbg !2374
  %20 = zext i1 %cmp19 to i64, !dbg !2372
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), !dbg !2372
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2375
  ret void, !dbg !2376
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !721 !ctir !90 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %key = alloca %struct.keyfield*, align 8, !ctir !93
  %key_buf = alloca %struct.keyfield, align 8, !ctir !94
  %gkey = alloca %struct.keyfield, align 8, !ctir !94
  %gkey_only = alloca i8, align 1, !ctir !103
  %s = alloca i8*, align 8, !ctir !88
  %c = alloca i32, align 4, !ctir !7
  %checkonly = alloca i8, align 1, !ctir !10
  %mergeonly = alloca i8, align 1, !ctir !103
  %random_source = alloca i8*, align 8, !ctir !9
  %need_random = alloca i8, align 1, !ctir !103
  %nthreads = alloca i64, align 8, !ctir !55
  %nfiles = alloca i64, align 8, !ctir !55
  %posixly_correct = alloca i8, align 1, !ctir !103
  %posix_ver = alloca i32, align 4, !ctir !7
  %traditional_usage = alloca i8, align 1, !ctir !103
  %files = alloca i8**, align 8, !ctir !92
  %files_from = alloca i8*, align 8, !ctir !9
  %tok = alloca %struct.Tokens, align 8, !ctir !2377
  %outfile = alloca i8*, align 8, !ctir !88
  %locale_ok = alloca i8, align 1, !ctir !103
  %locale = alloca %struct.lconv*, align 8, !ctir !116
  %i = alloca i64, align 8, !ctir !55
  %act = alloca %struct.sigaction, align 8, !ctir !161
  %oi = alloca i32, align 4, !ctir !7
  %minus_pos_usage = alloca i8, align 1, !ctir !103
  %optarg1 = alloca i8*, align 8, !ctir !88
  %str = alloca [2 x i8], align 1, !ctir !275
  %newtab = alloca i8, align 1, !ctir !10
  %p = alloca i8*, align 8, !ctir !88
  %stream = alloca %struct._IO_FILE*, align 8, !ctir !0
  %i412 = alloca i64, align 8, !ctir !55
  %file_number = alloca i64, align 8, !ctir !57
  %tmp_dir = alloca i8*, align 8, !ctir !88
  %sortfiles = alloca %struct.sortfile*, align 8, !ctir !288
  %i600 = alloca i64, align 8, !ctir !55
  %np = alloca i64, align 8, !ctir !57
  %nthreads_max = alloca i64, align 8, !ctir !55
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2418, metadata !DIExpression()), !dbg !2419
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2420, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !2422, metadata !DIExpression()), !dbg !2423
  call void @llvm.dbg.declare(metadata %struct.keyfield* %key_buf, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata %struct.keyfield* %gkey, metadata !2426, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.declare(metadata i8* %gkey_only, metadata !2428, metadata !DIExpression()), !dbg !2429
  store i8 0, i8* %gkey_only, align 1, !dbg !2429, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8** %s, metadata !2432, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2434, metadata !DIExpression()), !dbg !2435
  store i32 0, i32* %c, align 4, !dbg !2435, !tbaa !2273
  call void @llvm.dbg.declare(metadata i8* %checkonly, metadata !2436, metadata !DIExpression()), !dbg !2437
  store i8 0, i8* %checkonly, align 1, !dbg !2437, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %mergeonly, metadata !2439, metadata !DIExpression()), !dbg !2440
  store i8 0, i8* %mergeonly, align 1, !dbg !2440, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8** %random_source, metadata !2441, metadata !DIExpression()), !dbg !2442
  store i8* null, i8** %random_source, align 8, !dbg !2442, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %need_random, metadata !2443, metadata !DIExpression()), !dbg !2444
  store i8 0, i8* %need_random, align 1, !dbg !2444, !tbaa !2430
  call void @llvm.dbg.declare(metadata i64* %nthreads, metadata !2445, metadata !DIExpression()), !dbg !2446
  store i64 0, i64* %nthreads, align 8, !dbg !2446, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles, metadata !2449, metadata !DIExpression()), !dbg !2450
  store i64 0, i64* %nfiles, align 8, !dbg !2450, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8* %posixly_correct, metadata !2451, metadata !DIExpression()), !dbg !2452
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !2453
  %cmp = icmp ne i8* %call, null, !dbg !2454
  %frombool = zext i1 %cmp to i8, !dbg !2452
  store i8 %frombool, i8* %posixly_correct, align 1, !dbg !2452, !tbaa !2430
  call void @llvm.dbg.declare(metadata i32* %posix_ver, metadata !2455, metadata !DIExpression()), !dbg !2456
  %call1 = call i32 @posix2_version(), !dbg !2457
  store i32 %call1, i32* %posix_ver, align 4, !dbg !2456, !tbaa !2273
  call void @llvm.dbg.declare(metadata i8* %traditional_usage, metadata !2458, metadata !DIExpression()), !dbg !2459
  %0 = load i32, i32* %posix_ver, align 4, !dbg !2460, !tbaa !2273
  %cmp2 = icmp sle i32 200112, %0, !dbg !2461
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !2462

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %posix_ver, align 4, !dbg !2463, !tbaa !2273
  %cmp3 = icmp slt i32 %1, 200809, !dbg !2464
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !2465
  %lnot = xor i1 %2, true, !dbg !2466
  %frombool4 = zext i1 %lnot to i8, !dbg !2459
  store i8 %frombool4, i8* %traditional_usage, align 1, !dbg !2459, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8*** %files, metadata !2467, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.declare(metadata i8** %files_from, metadata !2469, metadata !DIExpression()), !dbg !2470
  store i8* null, i8** %files_from, align 8, !dbg !2470, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.Tokens* %tok, metadata !2471, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.declare(metadata i8** %outfile, metadata !2473, metadata !DIExpression()), !dbg !2474
  store i8* null, i8** %outfile, align 8, !dbg !2474, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %locale_ok, metadata !2475, metadata !DIExpression()), !dbg !2476
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2477, !tbaa !2286
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !2477, !ctir !92
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !2477, !tbaa !2286
  call void @set_program_name(i8* %4), !dbg !2478
  %call5 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !2479
  %tobool = icmp ne i8* %call5, null, !dbg !2480
  %lnot6 = xor i1 %tobool, true, !dbg !2480
  %lnot7 = xor i1 %lnot6, true, !dbg !2481
  %frombool8 = zext i1 %lnot7 to i8, !dbg !2482
  store i8 %frombool8, i8* %locale_ok, align 1, !dbg !2482, !tbaa !2430
  %call9 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !2483
  %call10 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !2484
  call void @initialize_exit_failure(i32 2), !dbg !2485
  %call11 = call zeroext i1 @hard_locale(i32 3), !dbg !2486
  %frombool12 = zext i1 %call11 to i8, !dbg !2487
  store i8 %frombool12, i8* @hard_LC_COLLATE, align 1, !dbg !2487, !tbaa !2430
  %call13 = call zeroext i1 @hard_locale(i32 2), !dbg !2488
  %frombool14 = zext i1 %call13 to i8, !dbg !2489
  store i8 %frombool14, i8* @hard_LC_TIME, align 1, !dbg !2489, !tbaa !2430
  call void @llvm.dbg.declare(metadata %struct.lconv** %locale, metadata !2490, metadata !DIExpression()), !dbg !2492
  %call15 = call %struct.lconv* @localeconv() #12, !dbg !2493
  store %struct.lconv* %call15, %struct.lconv** %locale, align 8, !dbg !2492, !tbaa !2286
  %5 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2494, !tbaa !2286
  %decimal_point = getelementptr inbounds %struct.lconv, %struct.lconv* %5, i32 0, i32 0, !dbg !2495, !ctir !117
  %6 = load i8*, i8** %decimal_point, align 8, !dbg !2495, !tbaa !2496, !ctir !9
  %arrayidx16 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !2494, !ctir !9
  %7 = load i8, i8* %arrayidx16, align 1, !dbg !2494, !tbaa !2438
  %call17 = call zeroext i8 @to_uchar(i8 signext %7), !dbg !2498
  %conv = zext i8 %call17 to i32, !dbg !2498
  store i32 %conv, i32* @decimal_point, align 4, !dbg !2499, !tbaa !2273
  %8 = load i32, i32* @decimal_point, align 4, !dbg !2500, !tbaa !2273
  %tobool18 = icmp ne i32 %8, 0, !dbg !2500
  br i1 %tobool18, label %lor.lhs.false, label %if.then, !dbg !2502

lor.lhs.false:                                    ; preds = %land.end
  %9 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2503, !tbaa !2286
  %decimal_point19 = getelementptr inbounds %struct.lconv, %struct.lconv* %9, i32 0, i32 0, !dbg !2504, !ctir !117
  %10 = load i8*, i8** %decimal_point19, align 8, !dbg !2504, !tbaa !2496, !ctir !9
  %arrayidx20 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !2503, !ctir !9
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !2503, !tbaa !2438
  %conv21 = sext i8 %11 to i32, !dbg !2503
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !2503
  br i1 %tobool22, label %if.then, label %if.end, !dbg !2505

if.then:                                          ; preds = %lor.lhs.false, %land.end
  store i32 46, i32* @decimal_point, align 4, !dbg !2506, !tbaa !2273
  br label %if.end, !dbg !2507

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %12 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2508, !tbaa !2286
  %thousands_sep = getelementptr inbounds %struct.lconv, %struct.lconv* %12, i32 0, i32 1, !dbg !2509, !ctir !117
  %13 = load i8*, i8** %thousands_sep, align 8, !dbg !2509, !tbaa !2510, !ctir !9
  %14 = load i8, i8* %13, align 1, !dbg !2511, !tbaa !2438, !ctir !10
  %call23 = call zeroext i8 @to_uchar(i8 signext %14), !dbg !2512
  %conv24 = zext i8 %call23 to i32, !dbg !2512
  store i32 %conv24, i32* @thousands_sep, align 4, !dbg !2513, !tbaa !2273
  %15 = load i32, i32* @thousands_sep, align 4, !dbg !2514, !tbaa !2273
  %tobool25 = icmp ne i32 %15, 0, !dbg !2514
  br i1 %tobool25, label %lor.lhs.false26, label %if.then31, !dbg !2516

lor.lhs.false26:                                  ; preds = %if.end
  %16 = load %struct.lconv*, %struct.lconv** %locale, align 8, !dbg !2517, !tbaa !2286
  %thousands_sep27 = getelementptr inbounds %struct.lconv, %struct.lconv* %16, i32 0, i32 1, !dbg !2518, !ctir !117
  %17 = load i8*, i8** %thousands_sep27, align 8, !dbg !2518, !tbaa !2510, !ctir !9
  %arrayidx28 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !2517, !ctir !9
  %18 = load i8, i8* %arrayidx28, align 1, !dbg !2517, !tbaa !2438
  %conv29 = sext i8 %18 to i32, !dbg !2517
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !2517
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !2519

if.then31:                                        ; preds = %lor.lhs.false26, %if.end
  store i32 -1, i32* @thousands_sep, align 4, !dbg !2520, !tbaa !2273
  br label %if.end32, !dbg !2521

if.end32:                                         ; preds = %if.then31, %lor.lhs.false26
  store i8 0, i8* @have_read_stdin, align 1, !dbg !2522, !tbaa !2430
  call void @inittables(), !dbg !2523
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2524, metadata !DIExpression()), !dbg !2526
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !2527, metadata !DIExpression()), !dbg !2528
  %call33 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #12, !dbg !2529
  store i64 0, i64* %i, align 8, !dbg !2530, !tbaa !2447
  br label %for.cond, !dbg !2532

for.cond:                                         ; preds = %for.inc, %if.end32
  %19 = load i64, i64* %i, align 8, !dbg !2533, !tbaa !2447
  %cmp34 = icmp ult i64 %19, 11, !dbg !2535
  br i1 %cmp34, label %for.body, label %for.end, !dbg !2536

for.body:                                         ; preds = %for.cond
  %20 = load i64, i64* %i, align 8, !dbg !2537, !tbaa !2447
  %arrayidx36 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %20, !dbg !2539, !ctir !155
  %21 = load i32, i32* %arrayidx36, align 4, !dbg !2539, !tbaa !2273
  %call37 = call i32 @sigaction(i32 %21, %struct.sigaction* null, %struct.sigaction* %act) #12, !dbg !2540
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !2541, !ctir !161
  %sa_handler = bitcast %union.anon.2* %__sigaction_handler to void (i32)**, !dbg !2541
  %22 = load void (i32)*, void (i32)** %sa_handler, align 8, !dbg !2541, !tbaa !2438, !ctir !159
  %cmp38 = icmp ne void (i32)* %22, inttoptr (i64 1 to void (i32)*), !dbg !2543
  br i1 %cmp38, label %if.then40, label %if.end43, !dbg !2544

if.then40:                                        ; preds = %for.body
  %23 = load i64, i64* %i, align 8, !dbg !2545, !tbaa !2447
  %arrayidx41 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %23, !dbg !2546, !ctir !155
  %24 = load i32, i32* %arrayidx41, align 4, !dbg !2546, !tbaa !2273
  %call42 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %24) #12, !dbg !2547
  br label %if.end43, !dbg !2547

if.end43:                                         ; preds = %if.then40, %for.body
  br label %for.inc, !dbg !2548

for.inc:                                          ; preds = %if.end43
  %25 = load i64, i64* %i, align 8, !dbg !2549, !tbaa !2447
  %inc = add i64 %25, 1, !dbg !2549
  store i64 %inc, i64* %i, align 8, !dbg !2549, !tbaa !2447
  br label %for.cond, !dbg !2550, !llvm.loop !2551

for.end:                                          ; preds = %for.cond
  %__sigaction_handler44 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !2553, !ctir !161
  %sa_handler45 = bitcast %union.anon.2* %__sigaction_handler44 to void (i32)**, !dbg !2553
  store void (i32)* @sighandler, void (i32)** %sa_handler45, align 8, !dbg !2554, !tbaa !2438, !ctir !159
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 1, !dbg !2555, !ctir !161
  %26 = bitcast %struct.__sigset_t* %sa_mask to i8*, !dbg !2556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i1 false), !dbg !2556, !tbaa.struct !2557
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 2, !dbg !2558, !ctir !161
  store i32 0, i32* %sa_flags, align 8, !dbg !2559, !tbaa !2560, !ctir !7
  store i64 0, i64* %i, align 8, !dbg !2563, !tbaa !2447
  br label %for.cond46, !dbg !2565

for.cond46:                                       ; preds = %for.inc57, %for.end
  %27 = load i64, i64* %i, align 8, !dbg !2566, !tbaa !2447
  %cmp47 = icmp ult i64 %27, 11, !dbg !2568
  br i1 %cmp47, label %for.body49, label %for.end59, !dbg !2569

for.body49:                                       ; preds = %for.cond46
  %28 = load i64, i64* %i, align 8, !dbg !2570, !tbaa !2447
  %arrayidx50 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %28, !dbg !2572, !ctir !155
  %29 = load i32, i32* %arrayidx50, align 4, !dbg !2572, !tbaa !2273
  %call51 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %29) #12, !dbg !2573
  %tobool52 = icmp ne i32 %call51, 0, !dbg !2573
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !2574

if.then53:                                        ; preds = %for.body49
  %30 = load i64, i64* %i, align 8, !dbg !2575, !tbaa !2447
  %arrayidx54 = getelementptr inbounds [11 x i32], [11 x i32]* @main.sig, i64 0, i64 %30, !dbg !2576, !ctir !155
  %31 = load i32, i32* %arrayidx54, align 4, !dbg !2576, !tbaa !2273
  %call55 = call i32 @sigaction(i32 %31, %struct.sigaction* %act, %struct.sigaction* null) #12, !dbg !2577
  br label %if.end56, !dbg !2577

if.end56:                                         ; preds = %if.then53, %for.body49
  br label %for.inc57, !dbg !2578

for.inc57:                                        ; preds = %if.end56
  %32 = load i64, i64* %i, align 8, !dbg !2579, !tbaa !2447
  %inc58 = add i64 %32, 1, !dbg !2579
  store i64 %inc58, i64* %i, align 8, !dbg !2579, !tbaa !2447
  br label %for.cond46, !dbg !2580, !llvm.loop !2581

for.end59:                                        ; preds = %for.cond46
  %call60 = call void (i32)* @signal(i32 17, void (i32)* null) #12, !dbg !2583
  %call61 = call i32 @atexit(void ()* @exit_cleanup) #12, !dbg !2584
  %call62 = call %struct.keyfield* @key_init(%struct.keyfield* %gkey), !dbg !2585
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 0, !dbg !2586, !ctir !94
  store i64 -1, i64* %sword, align 8, !dbg !2587, !tbaa !2588, !ctir !55
  %33 = load i32, i32* %argc.addr, align 4, !dbg !2590, !tbaa !2273
  %conv63 = sext i32 %33 to i64, !dbg !2590
  %call64 = call noalias i8* @xnmalloc(i64 %conv63, i64 8), !dbg !2591
  %34 = bitcast i8* %call64 to i8**, !dbg !2591
  store i8** %34, i8*** %files, align 8, !dbg !2592, !tbaa !2286
  br label %while.body, !dbg !2593

while.body:                                       ; preds = %for.end59, %if.end391
  call void @llvm.dbg.declare(metadata i32* %oi, metadata !2594, metadata !DIExpression()), !dbg !2596
  store i32 -1, i32* %oi, align 4, !dbg !2596, !tbaa !2273
  %35 = load i32, i32* %c, align 4, !dbg !2597, !tbaa !2273
  %cmp65 = icmp eq i32 %35, -1, !dbg !2599
  br i1 %cmp65, label %if.then106, label %lor.lhs.false67, !dbg !2600

lor.lhs.false67:                                  ; preds = %while.body
  %36 = load i8, i8* %posixly_correct, align 1, !dbg !2601, !tbaa !2430
  %tobool68 = trunc i8 %36 to i1, !dbg !2601
  br i1 %tobool68, label %land.lhs.true, label %lor.lhs.false102, !dbg !2602

land.lhs.true:                                    ; preds = %lor.lhs.false67
  %37 = load i64, i64* %nfiles, align 8, !dbg !2603, !tbaa !2447
  %cmp70 = icmp ne i64 %37, 0, !dbg !2604
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false102, !dbg !2605

land.lhs.true72:                                  ; preds = %land.lhs.true
  %38 = load i8, i8* %traditional_usage, align 1, !dbg !2606, !tbaa !2430
  %tobool73 = trunc i8 %38 to i1, !dbg !2606
  br i1 %tobool73, label %land.lhs.true75, label %if.then106, !dbg !2607

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %39 = load i8, i8* %checkonly, align 1, !dbg !2608, !tbaa !2438
  %tobool76 = icmp ne i8 %39, 0, !dbg !2608
  br i1 %tobool76, label %if.then106, label %land.lhs.true77, !dbg !2609

land.lhs.true77:                                  ; preds = %land.lhs.true75
  %40 = load i32, i32* @optind, align 4, !dbg !2610, !tbaa !2273
  %41 = load i32, i32* %argc.addr, align 4, !dbg !2611, !tbaa !2273
  %cmp78 = icmp ne i32 %40, %41, !dbg !2612
  br i1 %cmp78, label %land.lhs.true80, label %if.then106, !dbg !2613

land.lhs.true80:                                  ; preds = %land.lhs.true77
  %42 = load i8**, i8*** %argv.addr, align 8, !dbg !2614, !tbaa !2286
  %43 = load i32, i32* @optind, align 4, !dbg !2615, !tbaa !2273
  %idxprom = sext i32 %43 to i64, !dbg !2614
  %arrayidx81 = getelementptr inbounds i8*, i8** %42, i64 %idxprom, !dbg !2614, !ctir !92
  %44 = load i8*, i8** %arrayidx81, align 8, !dbg !2614, !tbaa !2286
  %arrayidx82 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !2614, !ctir !9
  %45 = load i8, i8* %arrayidx82, align 1, !dbg !2614, !tbaa !2438
  %conv83 = sext i8 %45 to i32, !dbg !2614
  %cmp84 = icmp eq i32 %conv83, 45, !dbg !2616
  br i1 %cmp84, label %land.lhs.true86, label %if.then106, !dbg !2617

land.lhs.true86:                                  ; preds = %land.lhs.true80
  %46 = load i8**, i8*** %argv.addr, align 8, !dbg !2618, !tbaa !2286
  %47 = load i32, i32* @optind, align 4, !dbg !2619, !tbaa !2273
  %idxprom87 = sext i32 %47 to i64, !dbg !2618
  %arrayidx88 = getelementptr inbounds i8*, i8** %46, i64 %idxprom87, !dbg !2618, !ctir !92
  %48 = load i8*, i8** %arrayidx88, align 8, !dbg !2618, !tbaa !2286
  %arrayidx89 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !2618, !ctir !9
  %49 = load i8, i8* %arrayidx89, align 1, !dbg !2618, !tbaa !2438
  %conv90 = sext i8 %49 to i32, !dbg !2618
  %cmp91 = icmp eq i32 %conv90, 111, !dbg !2620
  br i1 %cmp91, label %land.lhs.true93, label %if.then106, !dbg !2621

land.lhs.true93:                                  ; preds = %land.lhs.true86
  %50 = load i8**, i8*** %argv.addr, align 8, !dbg !2622, !tbaa !2286
  %51 = load i32, i32* @optind, align 4, !dbg !2623, !tbaa !2273
  %idxprom94 = sext i32 %51 to i64, !dbg !2622
  %arrayidx95 = getelementptr inbounds i8*, i8** %50, i64 %idxprom94, !dbg !2622, !ctir !92
  %52 = load i8*, i8** %arrayidx95, align 8, !dbg !2622, !tbaa !2286
  %arrayidx96 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !2622, !ctir !9
  %53 = load i8, i8* %arrayidx96, align 1, !dbg !2622, !tbaa !2438
  %conv97 = sext i8 %53 to i32, !dbg !2622
  %tobool98 = icmp ne i32 %conv97, 0, !dbg !2622
  br i1 %tobool98, label %lor.lhs.false102, label %lor.lhs.false99, !dbg !2624

lor.lhs.false99:                                  ; preds = %land.lhs.true93
  %54 = load i32, i32* @optind, align 4, !dbg !2625, !tbaa !2273
  %add = add nsw i32 %54, 1, !dbg !2626
  %55 = load i32, i32* %argc.addr, align 4, !dbg !2627, !tbaa !2273
  %cmp100 = icmp ne i32 %add, %55, !dbg !2628
  br i1 %cmp100, label %lor.lhs.false102, label %if.then106, !dbg !2629

lor.lhs.false102:                                 ; preds = %lor.lhs.false99, %land.lhs.true93, %land.lhs.true, %lor.lhs.false67
  %56 = load i32, i32* %argc.addr, align 4, !dbg !2630, !tbaa !2273
  %57 = load i8**, i8*** %argv.addr, align 8, !dbg !2631, !tbaa !2286
  %call103 = call i32 @getopt_long(i32 %56, i8** %57, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @short_options, i64 0, i64 0), %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) #12, !dbg !2632
  store i32 %call103, i32* %c, align 4, !dbg !2633, !tbaa !2273
  %cmp104 = icmp eq i32 %call103, -1, !dbg !2634
  br i1 %cmp104, label %if.then106, label %if.else, !dbg !2635

if.then106:                                       ; preds = %lor.lhs.false102, %lor.lhs.false99, %land.lhs.true86, %land.lhs.true80, %land.lhs.true77, %land.lhs.true75, %land.lhs.true72, %while.body
  %58 = load i32, i32* %argc.addr, align 4, !dbg !2636, !tbaa !2273
  %59 = load i32, i32* @optind, align 4, !dbg !2639, !tbaa !2273
  %cmp107 = icmp sle i32 %58, %59, !dbg !2640
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !2641

if.then109:                                       ; preds = %if.then106
  br label %while.end, !dbg !2642

if.end110:                                        ; preds = %if.then106
  %60 = load i8**, i8*** %argv.addr, align 8, !dbg !2643, !tbaa !2286
  %61 = load i32, i32* @optind, align 4, !dbg !2644, !tbaa !2273
  %inc111 = add nsw i32 %61, 1, !dbg !2644
  store i32 %inc111, i32* @optind, align 4, !dbg !2644, !tbaa !2273
  %idxprom112 = sext i32 %61 to i64, !dbg !2643
  %arrayidx113 = getelementptr inbounds i8*, i8** %60, i64 %idxprom112, !dbg !2643, !ctir !92
  %62 = load i8*, i8** %arrayidx113, align 8, !dbg !2643, !tbaa !2286
  %63 = load i8**, i8*** %files, align 8, !dbg !2645, !tbaa !2286
  %64 = load i64, i64* %nfiles, align 8, !dbg !2646, !tbaa !2447
  %inc114 = add i64 %64, 1, !dbg !2646
  store i64 %inc114, i64* %nfiles, align 8, !dbg !2646, !tbaa !2447
  %arrayidx115 = getelementptr inbounds i8*, i8** %63, i64 %64, !dbg !2645, !ctir !92
  store i8* %62, i8** %arrayidx115, align 8, !dbg !2647, !tbaa !2286
  br label %if.end391, !dbg !2648

if.else:                                          ; preds = %lor.lhs.false102
  %65 = load i32, i32* %c, align 4, !dbg !2649, !tbaa !2273
  switch i32 %65, label %sw.default [
    i32 1, label %sw.bb
    i32 134, label %sw.bb217
    i32 98, label %sw.bb221
    i32 100, label %sw.bb221
    i32 102, label %sw.bb221
    i32 103, label %sw.bb221
    i32 104, label %sw.bb221
    i32 105, label %sw.bb221
    i32 77, label %sw.bb221
    i32 110, label %sw.bb221
    i32 114, label %sw.bb221
    i32 82, label %sw.bb221
    i32 86, label %sw.bb221
    i32 128, label %sw.bb226
    i32 99, label %sw.bb231
    i32 67, label %sw.bb231
    i32 129, label %sw.bb241
    i32 130, label %sw.bb250
    i32 131, label %sw.bb251
    i32 107, label %sw.bb252
    i32 109, label %sw.bb311
    i32 132, label %sw.bb312
    i32 111, label %sw.bb314
    i32 133, label %sw.bb323
    i32 115, label %sw.bb332
    i32 83, label %sw.bb333
    i32 116, label %sw.bb335
    i32 84, label %sw.bb363
    i32 135, label %sw.bb364
    i32 117, label %sw.bb367
    i32 121, label %sw.bb368
    i32 122, label %sw.bb388
    i32 -130, label %sw.bb389
    i32 -131, label %sw.bb390
  ], !dbg !2650

sw.bb:                                            ; preds = %if.else
  store %struct.keyfield* null, %struct.keyfield** %key, align 8, !dbg !2651, !tbaa !2286
  %66 = load i8*, i8** @optarg, align 8, !dbg !2653, !tbaa !2286
  %arrayidx116 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !2653, !ctir !9
  %67 = load i8, i8* %arrayidx116, align 1, !dbg !2653, !tbaa !2438
  %conv117 = sext i8 %67 to i32, !dbg !2653
  %cmp118 = icmp eq i32 %conv117, 43, !dbg !2655
  br i1 %cmp118, label %if.then120, label %if.end211, !dbg !2656

if.then120:                                       ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i8* %minus_pos_usage, metadata !2657, metadata !DIExpression()), !dbg !2659
  %68 = load i32, i32* @optind, align 4, !dbg !2660, !tbaa !2273
  %69 = load i32, i32* %argc.addr, align 4, !dbg !2661, !tbaa !2273
  %cmp121 = icmp ne i32 %68, %69, !dbg !2662
  br i1 %cmp121, label %land.lhs.true123, label %land.end137, !dbg !2663

land.lhs.true123:                                 ; preds = %if.then120
  %70 = load i8**, i8*** %argv.addr, align 8, !dbg !2664, !tbaa !2286
  %71 = load i32, i32* @optind, align 4, !dbg !2665, !tbaa !2273
  %idxprom124 = sext i32 %71 to i64, !dbg !2664
  %arrayidx125 = getelementptr inbounds i8*, i8** %70, i64 %idxprom124, !dbg !2664, !ctir !92
  %72 = load i8*, i8** %arrayidx125, align 8, !dbg !2664, !tbaa !2286
  %arrayidx126 = getelementptr inbounds i8, i8* %72, i64 0, !dbg !2664, !ctir !9
  %73 = load i8, i8* %arrayidx126, align 1, !dbg !2664, !tbaa !2438
  %conv127 = sext i8 %73 to i32, !dbg !2664
  %cmp128 = icmp eq i32 %conv127, 45, !dbg !2666
  br i1 %cmp128, label %land.rhs130, label %land.end137, !dbg !2667

land.rhs130:                                      ; preds = %land.lhs.true123
  %74 = load i8**, i8*** %argv.addr, align 8, !dbg !2668, !tbaa !2286
  %75 = load i32, i32* @optind, align 4, !dbg !2668, !tbaa !2273
  %idxprom131 = sext i32 %75 to i64, !dbg !2668
  %arrayidx132 = getelementptr inbounds i8*, i8** %74, i64 %idxprom131, !dbg !2668, !ctir !92
  %76 = load i8*, i8** %arrayidx132, align 8, !dbg !2668, !tbaa !2286
  %arrayidx133 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !2668, !ctir !9
  %77 = load i8, i8* %arrayidx133, align 1, !dbg !2668, !tbaa !2438
  %conv134 = sext i8 %77 to i32, !dbg !2668
  %sub = sub i32 %conv134, 48, !dbg !2668
  %cmp135 = icmp ule i32 %sub, 9, !dbg !2668
  br label %land.end137

land.end137:                                      ; preds = %land.rhs130, %land.lhs.true123, %if.then120
  %78 = phi i1 [ false, %land.lhs.true123 ], [ false, %if.then120 ], [ %cmp135, %land.rhs130 ], !dbg !2669
  %frombool138 = zext i1 %78 to i8, !dbg !2659
  store i8 %frombool138, i8* %minus_pos_usage, align 1, !dbg !2659, !tbaa !2430
  %79 = load i8, i8* %minus_pos_usage, align 1, !dbg !2670, !tbaa !2430
  %tobool139 = trunc i8 %79 to i1, !dbg !2670
  br i1 %tobool139, label %land.rhs141, label %land.end144, !dbg !2671

land.rhs141:                                      ; preds = %land.end137
  %80 = load i8, i8* %posixly_correct, align 1, !dbg !2672, !tbaa !2430
  %tobool142 = trunc i8 %80 to i1, !dbg !2672
  %lnot143 = xor i1 %tobool142, true, !dbg !2673
  br label %land.end144

land.end144:                                      ; preds = %land.rhs141, %land.end137
  %81 = phi i1 [ false, %land.end137 ], [ %lnot143, %land.rhs141 ], !dbg !2669
  %land.ext = zext i1 %81 to i32, !dbg !2671
  %82 = load i8, i8* %traditional_usage, align 1, !dbg !2674, !tbaa !2430
  %tobool145 = trunc i8 %82 to i1, !dbg !2674
  %conv146 = zext i1 %tobool145 to i32, !dbg !2674
  %or = or i32 %conv146, %land.ext, !dbg !2674
  %tobool147 = icmp ne i32 %or, 0, !dbg !2674
  %frombool148 = zext i1 %tobool147 to i8, !dbg !2674
  store i8 %frombool148, i8* %traditional_usage, align 1, !dbg !2674, !tbaa !2430
  %83 = load i8, i8* %traditional_usage, align 1, !dbg !2675, !tbaa !2430
  %tobool149 = trunc i8 %83 to i1, !dbg !2675
  br i1 %tobool149, label %if.then150, label %if.end210, !dbg !2677

if.then150:                                       ; preds = %land.end144
  %call151 = call %struct.keyfield* @key_init(%struct.keyfield* %key_buf), !dbg !2678
  store %struct.keyfield* %call151, %struct.keyfield** %key, align 8, !dbg !2680, !tbaa !2286
  %84 = load i8*, i8** @optarg, align 8, !dbg !2681, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %84, i64 1, !dbg !2682
  %85 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2683, !tbaa !2286
  %sword152 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %85, i32 0, i32 0, !dbg !2684, !ctir !94
  %call153 = call i8* @parse_field_count(i8* %add.ptr, i64* %sword152, i8* null), !dbg !2685
  store i8* %call153, i8** %s, align 8, !dbg !2686, !tbaa !2286
  %86 = load i8*, i8** %s, align 8, !dbg !2687, !tbaa !2286
  %tobool154 = icmp ne i8* %86, null, !dbg !2687
  br i1 %tobool154, label %land.lhs.true155, label %if.end162, !dbg !2689

land.lhs.true155:                                 ; preds = %if.then150
  %87 = load i8*, i8** %s, align 8, !dbg !2690, !tbaa !2286
  %88 = load i8, i8* %87, align 1, !dbg !2691, !tbaa !2438, !ctir !89
  %conv156 = sext i8 %88 to i32, !dbg !2691
  %cmp157 = icmp eq i32 %conv156, 46, !dbg !2692
  br i1 %cmp157, label %if.then159, label %if.end162, !dbg !2693

if.then159:                                       ; preds = %land.lhs.true155
  %89 = load i8*, i8** %s, align 8, !dbg !2694, !tbaa !2286
  %add.ptr160 = getelementptr inbounds i8, i8* %89, i64 1, !dbg !2695
  %90 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2696, !tbaa !2286
  %schar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %90, i32 0, i32 1, !dbg !2697, !ctir !94
  %call161 = call i8* @parse_field_count(i8* %add.ptr160, i64* %schar, i8* null), !dbg !2698
  store i8* %call161, i8** %s, align 8, !dbg !2699, !tbaa !2286
  br label %if.end162, !dbg !2700

if.end162:                                        ; preds = %if.then159, %land.lhs.true155, %if.then150
  %91 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2701, !tbaa !2286
  %sword163 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %91, i32 0, i32 0, !dbg !2703, !ctir !94
  %92 = load i64, i64* %sword163, align 8, !dbg !2703, !tbaa !2588, !ctir !55
  %tobool164 = icmp ne i64 %92, 0, !dbg !2701
  br i1 %tobool164, label %if.end170, label %lor.lhs.false165, !dbg !2704

lor.lhs.false165:                                 ; preds = %if.end162
  %93 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2705, !tbaa !2286
  %schar166 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %93, i32 0, i32 1, !dbg !2706, !ctir !94
  %94 = load i64, i64* %schar166, align 8, !dbg !2706, !tbaa !2707, !ctir !55
  %tobool167 = icmp ne i64 %94, 0, !dbg !2705
  br i1 %tobool167, label %if.end170, label %if.then168, !dbg !2708

if.then168:                                       ; preds = %lor.lhs.false165
  %95 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2709, !tbaa !2286
  %sword169 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %95, i32 0, i32 0, !dbg !2710, !ctir !94
  store i64 -1, i64* %sword169, align 8, !dbg !2711, !tbaa !2588, !ctir !55
  br label %if.end170, !dbg !2709

if.end170:                                        ; preds = %if.then168, %lor.lhs.false165, %if.end162
  %96 = load i8*, i8** %s, align 8, !dbg !2712, !tbaa !2286
  %tobool171 = icmp ne i8* %96, null, !dbg !2712
  br i1 %tobool171, label %lor.lhs.false172, label %if.then176, !dbg !2714

lor.lhs.false172:                                 ; preds = %if.end170
  %97 = load i8*, i8** %s, align 8, !dbg !2715, !tbaa !2286
  %98 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2716, !tbaa !2286
  %call173 = call i8* @set_ordering(i8* %97, %struct.keyfield* %98, i32 0), !dbg !2717
  %99 = load i8, i8* %call173, align 1, !dbg !2718, !tbaa !2438, !ctir !10
  %conv174 = sext i8 %99 to i32, !dbg !2718
  %tobool175 = icmp ne i32 %conv174, 0, !dbg !2718
  br i1 %tobool175, label %if.then176, label %if.else177, !dbg !2719

if.then176:                                       ; preds = %lor.lhs.false172, %if.end170
  store %struct.keyfield* null, %struct.keyfield** %key, align 8, !dbg !2720, !tbaa !2286
  br label %if.end209, !dbg !2721

if.else177:                                       ; preds = %lor.lhs.false172
  %100 = load i8, i8* %minus_pos_usage, align 1, !dbg !2722, !tbaa !2430
  %tobool178 = trunc i8 %100 to i1, !dbg !2722
  br i1 %tobool178, label %if.then179, label %if.end208, !dbg !2725

if.then179:                                       ; preds = %if.else177
  call void @llvm.dbg.declare(metadata i8** %optarg1, metadata !2726, metadata !DIExpression()), !dbg !2728
  %101 = load i8**, i8*** %argv.addr, align 8, !dbg !2729, !tbaa !2286
  %102 = load i32, i32* @optind, align 4, !dbg !2730, !tbaa !2273
  %inc180 = add nsw i32 %102, 1, !dbg !2730
  store i32 %inc180, i32* @optind, align 4, !dbg !2730, !tbaa !2273
  %idxprom181 = sext i32 %102 to i64, !dbg !2729
  %arrayidx182 = getelementptr inbounds i8*, i8** %101, i64 %idxprom181, !dbg !2729, !ctir !92
  %103 = load i8*, i8** %arrayidx182, align 8, !dbg !2729, !tbaa !2286
  store i8* %103, i8** %optarg1, align 8, !dbg !2728, !tbaa !2286
  %104 = load i8*, i8** %optarg1, align 8, !dbg !2731, !tbaa !2286
  %add.ptr183 = getelementptr inbounds i8, i8* %104, i64 1, !dbg !2732
  %105 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2733, !tbaa !2286
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %105, i32 0, i32 2, !dbg !2734, !ctir !94
  %call184 = call i8* @parse_field_count(i8* %add.ptr183, i64* %eword, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0)), !dbg !2735
  store i8* %call184, i8** %s, align 8, !dbg !2736, !tbaa !2286
  %106 = load i8*, i8** %s, align 8, !dbg !2737, !tbaa !2286
  %tobool185 = icmp ne i8* %106, null, !dbg !2737
  br i1 %tobool185, label %if.then186, label %if.else187, !dbg !2740

if.then186:                                       ; preds = %if.then179
  br label %if.end188, !dbg !2740

if.else187:                                       ; preds = %if.then179
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 4370, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !2737
  unreachable, !dbg !2737

if.end188:                                        ; preds = %if.then186
  %107 = load i8*, i8** %s, align 8, !dbg !2741, !tbaa !2286
  %108 = load i8, i8* %107, align 1, !dbg !2743, !tbaa !2438, !ctir !89
  %conv189 = sext i8 %108 to i32, !dbg !2743
  %cmp190 = icmp eq i32 %conv189, 46, !dbg !2744
  br i1 %cmp190, label %if.then192, label %if.end195, !dbg !2745

if.then192:                                       ; preds = %if.end188
  %109 = load i8*, i8** %s, align 8, !dbg !2746, !tbaa !2286
  %add.ptr193 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !2747
  %110 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2748, !tbaa !2286
  %echar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %110, i32 0, i32 3, !dbg !2749, !ctir !94
  %call194 = call i8* @parse_field_count(i8* %add.ptr193, i64* %echar, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)), !dbg !2750
  store i8* %call194, i8** %s, align 8, !dbg !2751, !tbaa !2286
  br label %if.end195, !dbg !2752

if.end195:                                        ; preds = %if.then192, %if.end188
  %111 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2753, !tbaa !2286
  %echar196 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %111, i32 0, i32 3, !dbg !2755, !ctir !94
  %112 = load i64, i64* %echar196, align 8, !dbg !2755, !tbaa !2756, !ctir !55
  %tobool197 = icmp ne i64 %112, 0, !dbg !2753
  br i1 %tobool197, label %if.end203, label %land.lhs.true198, !dbg !2757

land.lhs.true198:                                 ; preds = %if.end195
  %113 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2758, !tbaa !2286
  %eword199 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %113, i32 0, i32 2, !dbg !2759, !ctir !94
  %114 = load i64, i64* %eword199, align 8, !dbg !2759, !tbaa !2760, !ctir !55
  %tobool200 = icmp ne i64 %114, 0, !dbg !2758
  br i1 %tobool200, label %if.then201, label %if.end203, !dbg !2761

if.then201:                                       ; preds = %land.lhs.true198
  %115 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2762, !tbaa !2286
  %eword202 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %115, i32 0, i32 2, !dbg !2764, !ctir !94
  %116 = load i64, i64* %eword202, align 8, !dbg !2765, !tbaa !2760, !ctir !55
  %dec = add i64 %116, -1, !dbg !2765
  store i64 %dec, i64* %eword202, align 8, !dbg !2765, !tbaa !2760, !ctir !55
  br label %if.end203, !dbg !2766

if.end203:                                        ; preds = %if.then201, %land.lhs.true198, %if.end195
  %117 = load i8*, i8** %s, align 8, !dbg !2767, !tbaa !2286
  %118 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2769, !tbaa !2286
  %call204 = call i8* @set_ordering(i8* %117, %struct.keyfield* %118, i32 1), !dbg !2770
  %119 = load i8, i8* %call204, align 1, !dbg !2771, !tbaa !2438, !ctir !10
  %tobool205 = icmp ne i8 %119, 0, !dbg !2771
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !2772

if.then206:                                       ; preds = %if.end203
  %120 = load i8*, i8** %optarg1, align 8, !dbg !2773, !tbaa !2286
  call void @badfieldspec(i8* %120, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0)) #15, !dbg !2774
  unreachable, !dbg !2774

if.end207:                                        ; preds = %if.end203
  br label %if.end208, !dbg !2775

if.end208:                                        ; preds = %if.end207, %if.else177
  %121 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2776, !tbaa !2286
  %traditional_used = getelementptr inbounds %struct.keyfield, %struct.keyfield* %121, i32 0, i32 15, !dbg !2777, !ctir !94
  store i8 1, i8* %traditional_used, align 1, !dbg !2778, !tbaa !2779, !ctir !103
  %122 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2780, !tbaa !2286
  call void @insertkey(%struct.keyfield* %122), !dbg !2781
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then176
  br label %if.end210, !dbg !2782

if.end210:                                        ; preds = %if.end209, %land.end144
  br label %if.end211, !dbg !2783

if.end211:                                        ; preds = %if.end210, %sw.bb
  %123 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2784, !tbaa !2286
  %tobool212 = icmp ne %struct.keyfield* %123, null, !dbg !2784
  br i1 %tobool212, label %if.end216, label %if.then213, !dbg !2786

if.then213:                                       ; preds = %if.end211
  %124 = load i8*, i8** @optarg, align 8, !dbg !2787, !tbaa !2286
  %125 = load i8**, i8*** %files, align 8, !dbg !2788, !tbaa !2286
  %126 = load i64, i64* %nfiles, align 8, !dbg !2789, !tbaa !2447
  %inc214 = add i64 %126, 1, !dbg !2789
  store i64 %inc214, i64* %nfiles, align 8, !dbg !2789, !tbaa !2447
  %arrayidx215 = getelementptr inbounds i8*, i8** %125, i64 %126, !dbg !2788, !ctir !92
  store i8* %124, i8** %arrayidx215, align 8, !dbg !2790, !tbaa !2286
  br label %if.end216, !dbg !2788

if.end216:                                        ; preds = %if.then213, %if.end211
  br label %sw.epilog, !dbg !2791

sw.bb217:                                         ; preds = %if.else
  %127 = load i8*, i8** @optarg, align 8, !dbg !2792, !tbaa !2286
  %128 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2792, !tbaa !2286
  %call218 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i8* %127, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @sort_args, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @sort_types, i64 0, i64 0), i64 1, void ()* %128), !dbg !2792
  %arrayidx219 = getelementptr inbounds [6 x i8], [6 x i8]* @sort_types, i64 0, i64 %call218, !dbg !2792, !ctir !266
  %129 = load i8, i8* %arrayidx219, align 1, !dbg !2792, !tbaa !2438
  %conv220 = sext i8 %129 to i32, !dbg !2792
  store i32 %conv220, i32* %c, align 4, !dbg !2793, !tbaa !2273
  br label %sw.bb221, !dbg !2794

sw.bb221:                                         ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %sw.bb217
  call void @llvm.dbg.declare(metadata [2 x i8]* %str, metadata !2795, metadata !DIExpression()), !dbg !2797
  %130 = load i32, i32* %c, align 4, !dbg !2798, !tbaa !2273
  %conv222 = trunc i32 %130 to i8, !dbg !2798
  %arrayidx223 = getelementptr inbounds [2 x i8], [2 x i8]* %str, i64 0, i64 0, !dbg !2799, !ctir !275
  store i8 %conv222, i8* %arrayidx223, align 1, !dbg !2800, !tbaa !2438
  %arrayidx224 = getelementptr inbounds [2 x i8], [2 x i8]* %str, i64 0, i64 1, !dbg !2801, !ctir !275
  store i8 0, i8* %arrayidx224, align 1, !dbg !2802, !tbaa !2438
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %str, i64 0, i64 0, !dbg !2803
  %call225 = call i8* @set_ordering(i8* %arraydecay, %struct.keyfield* %gkey, i32 2), !dbg !2804
  br label %sw.epilog, !dbg !2805

sw.bb226:                                         ; preds = %if.else
  %131 = load i8*, i8** @optarg, align 8, !dbg !2806, !tbaa !2286
  %tobool227 = icmp ne i8* %131, null, !dbg !2806
  br i1 %tobool227, label %cond.true, label %cond.false, !dbg !2806

cond.true:                                        ; preds = %sw.bb226
  %132 = load i8*, i8** @optarg, align 8, !dbg !2807, !tbaa !2286
  %133 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2807, !tbaa !2286
  %call228 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i8* %132, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @check_args, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @check_types, i64 0, i64 0), i64 1, void ()* %133), !dbg !2807
  %arrayidx229 = getelementptr inbounds [3 x i8], [3 x i8]* @check_types, i64 0, i64 %call228, !dbg !2807, !ctir !278
  %134 = load i8, i8* %arrayidx229, align 1, !dbg !2807, !tbaa !2438
  %conv230 = sext i8 %134 to i32, !dbg !2807
  br label %cond.end, !dbg !2806

cond.false:                                       ; preds = %sw.bb226
  br label %cond.end, !dbg !2806

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv230, %cond.true ], [ 99, %cond.false ], !dbg !2806
  store i32 %cond, i32* %c, align 4, !dbg !2808, !tbaa !2273
  br label %sw.bb231, !dbg !2809

sw.bb231:                                         ; preds = %if.else, %if.else, %cond.end
  %135 = load i8, i8* %checkonly, align 1, !dbg !2810, !tbaa !2438
  %conv232 = sext i8 %135 to i32, !dbg !2810
  %tobool233 = icmp ne i32 %conv232, 0, !dbg !2810
  br i1 %tobool233, label %land.lhs.true234, label %if.end239, !dbg !2812

land.lhs.true234:                                 ; preds = %sw.bb231
  %136 = load i8, i8* %checkonly, align 1, !dbg !2813, !tbaa !2438
  %conv235 = sext i8 %136 to i32, !dbg !2813
  %137 = load i32, i32* %c, align 4, !dbg !2814, !tbaa !2273
  %cmp236 = icmp ne i32 %conv235, %137, !dbg !2815
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !2816

if.then238:                                       ; preds = %land.lhs.true234
  call void @incompatible_options(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #15, !dbg !2817
  unreachable, !dbg !2817

if.end239:                                        ; preds = %land.lhs.true234, %sw.bb231
  %138 = load i32, i32* %c, align 4, !dbg !2818, !tbaa !2273
  %conv240 = trunc i32 %138 to i8, !dbg !2818
  store i8 %conv240, i8* %checkonly, align 1, !dbg !2819, !tbaa !2438
  br label %sw.epilog, !dbg !2820

sw.bb241:                                         ; preds = %if.else
  %139 = load i8*, i8** @compress_program, align 8, !dbg !2821, !tbaa !2286
  %tobool242 = icmp ne i8* %139, null, !dbg !2821
  br i1 %tobool242, label %land.lhs.true243, label %if.end249, !dbg !2823

land.lhs.true243:                                 ; preds = %sw.bb241
  %140 = load i8*, i8** @compress_program, align 8, !dbg !2824, !tbaa !2286
  %141 = load i8*, i8** @optarg, align 8, !dbg !2824, !tbaa !2286
  %call244 = call i32 @strcmp(i8* %140, i8* %141) #14, !dbg !2824
  %cmp245 = icmp eq i32 %call244, 0, !dbg !2824
  br i1 %cmp245, label %if.end249, label %if.then247, !dbg !2825

if.then247:                                       ; preds = %land.lhs.true243
  %call248 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !2826
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call248), !dbg !2826
  unreachable, !dbg !2826

if.end249:                                        ; preds = %land.lhs.true243, %sw.bb241
  %142 = load i8*, i8** @optarg, align 8, !dbg !2827, !tbaa !2286
  store i8* %142, i8** @compress_program, align 8, !dbg !2828, !tbaa !2286
  br label %sw.epilog, !dbg !2829

sw.bb250:                                         ; preds = %if.else
  store i8 1, i8* @debug, align 1, !dbg !2830, !tbaa !2430
  br label %sw.epilog, !dbg !2831

sw.bb251:                                         ; preds = %if.else
  %143 = load i8*, i8** @optarg, align 8, !dbg !2832, !tbaa !2286
  store i8* %143, i8** %files_from, align 8, !dbg !2833, !tbaa !2286
  br label %sw.epilog, !dbg !2834

sw.bb252:                                         ; preds = %if.else
  %call253 = call %struct.keyfield* @key_init(%struct.keyfield* %key_buf), !dbg !2835
  store %struct.keyfield* %call253, %struct.keyfield** %key, align 8, !dbg !2836, !tbaa !2286
  %144 = load i8*, i8** @optarg, align 8, !dbg !2837, !tbaa !2286
  %145 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2838, !tbaa !2286
  %sword254 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %145, i32 0, i32 0, !dbg !2839, !ctir !94
  %call255 = call i8* @parse_field_count(i8* %144, i64* %sword254, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i64 0, i64 0)), !dbg !2840
  store i8* %call255, i8** %s, align 8, !dbg !2841, !tbaa !2286
  %146 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2842, !tbaa !2286
  %sword256 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %146, i32 0, i32 0, !dbg !2844, !ctir !94
  %147 = load i64, i64* %sword256, align 8, !dbg !2845, !tbaa !2588, !ctir !55
  %dec257 = add i64 %147, -1, !dbg !2845
  store i64 %dec257, i64* %sword256, align 8, !dbg !2845, !tbaa !2588, !ctir !55
  %tobool258 = icmp ne i64 %147, 0, !dbg !2845
  br i1 %tobool258, label %if.end260, label %if.then259, !dbg !2846

if.then259:                                       ; preds = %sw.bb252
  %148 = load i8*, i8** @optarg, align 8, !dbg !2847, !tbaa !2286
  call void @badfieldspec(i8* %148, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #15, !dbg !2849
  unreachable, !dbg !2849

if.end260:                                        ; preds = %sw.bb252
  %149 = load i8*, i8** %s, align 8, !dbg !2850, !tbaa !2286
  %150 = load i8, i8* %149, align 1, !dbg !2852, !tbaa !2438, !ctir !89
  %conv261 = sext i8 %150 to i32, !dbg !2852
  %cmp262 = icmp eq i32 %conv261, 46, !dbg !2853
  br i1 %cmp262, label %if.then264, label %if.end273, !dbg !2854

if.then264:                                       ; preds = %if.end260
  %151 = load i8*, i8** %s, align 8, !dbg !2855, !tbaa !2286
  %add.ptr265 = getelementptr inbounds i8, i8* %151, i64 1, !dbg !2857
  %152 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2858, !tbaa !2286
  %schar266 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %152, i32 0, i32 1, !dbg !2859, !ctir !94
  %call267 = call i8* @parse_field_count(i8* %add.ptr265, i64* %schar266, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)), !dbg !2860
  store i8* %call267, i8** %s, align 8, !dbg !2861, !tbaa !2286
  %153 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2862, !tbaa !2286
  %schar268 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %153, i32 0, i32 1, !dbg !2864, !ctir !94
  %154 = load i64, i64* %schar268, align 8, !dbg !2865, !tbaa !2707, !ctir !55
  %dec269 = add i64 %154, -1, !dbg !2865
  store i64 %dec269, i64* %schar268, align 8, !dbg !2865, !tbaa !2707, !ctir !55
  %tobool270 = icmp ne i64 %154, 0, !dbg !2865
  br i1 %tobool270, label %if.end272, label %if.then271, !dbg !2866

if.then271:                                       ; preds = %if.then264
  %155 = load i8*, i8** @optarg, align 8, !dbg !2867, !tbaa !2286
  call void @badfieldspec(i8* %155, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i64 0, i64 0)) #15, !dbg !2869
  unreachable, !dbg !2869

if.end272:                                        ; preds = %if.then264
  br label %if.end273, !dbg !2870

if.end273:                                        ; preds = %if.end272, %if.end260
  %156 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2871, !tbaa !2286
  %sword274 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %156, i32 0, i32 0, !dbg !2873, !ctir !94
  %157 = load i64, i64* %sword274, align 8, !dbg !2873, !tbaa !2588, !ctir !55
  %tobool275 = icmp ne i64 %157, 0, !dbg !2871
  br i1 %tobool275, label %if.end281, label %lor.lhs.false276, !dbg !2874

lor.lhs.false276:                                 ; preds = %if.end273
  %158 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2875, !tbaa !2286
  %schar277 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %158, i32 0, i32 1, !dbg !2876, !ctir !94
  %159 = load i64, i64* %schar277, align 8, !dbg !2876, !tbaa !2707, !ctir !55
  %tobool278 = icmp ne i64 %159, 0, !dbg !2875
  br i1 %tobool278, label %if.end281, label %if.then279, !dbg !2877

if.then279:                                       ; preds = %lor.lhs.false276
  %160 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2878, !tbaa !2286
  %sword280 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %160, i32 0, i32 0, !dbg !2879, !ctir !94
  store i64 -1, i64* %sword280, align 8, !dbg !2880, !tbaa !2588, !ctir !55
  br label %if.end281, !dbg !2878

if.end281:                                        ; preds = %if.then279, %lor.lhs.false276, %if.end273
  %161 = load i8*, i8** %s, align 8, !dbg !2881, !tbaa !2286
  %162 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2882, !tbaa !2286
  %call282 = call i8* @set_ordering(i8* %161, %struct.keyfield* %162, i32 0), !dbg !2883
  store i8* %call282, i8** %s, align 8, !dbg !2884, !tbaa !2286
  %163 = load i8*, i8** %s, align 8, !dbg !2885, !tbaa !2286
  %164 = load i8, i8* %163, align 1, !dbg !2887, !tbaa !2438, !ctir !89
  %conv283 = sext i8 %164 to i32, !dbg !2887
  %cmp284 = icmp ne i32 %conv283, 44, !dbg !2888
  br i1 %cmp284, label %if.then286, label %if.else289, !dbg !2889

if.then286:                                       ; preds = %if.end281
  %165 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2890, !tbaa !2286
  %eword287 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %165, i32 0, i32 2, !dbg !2892, !ctir !94
  store i64 -1, i64* %eword287, align 8, !dbg !2893, !tbaa !2760, !ctir !55
  %166 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2894, !tbaa !2286
  %echar288 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %166, i32 0, i32 3, !dbg !2895, !ctir !94
  store i64 0, i64* %echar288, align 8, !dbg !2896, !tbaa !2756, !ctir !55
  br label %if.end307, !dbg !2897

if.else289:                                       ; preds = %if.end281
  %167 = load i8*, i8** %s, align 8, !dbg !2898, !tbaa !2286
  %add.ptr290 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !2900
  %168 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2901, !tbaa !2286
  %eword291 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %168, i32 0, i32 2, !dbg !2902, !ctir !94
  %call292 = call i8* @parse_field_count(i8* %add.ptr290, i64* %eword291, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i64 0, i64 0)), !dbg !2903
  store i8* %call292, i8** %s, align 8, !dbg !2904, !tbaa !2286
  %169 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2905, !tbaa !2286
  %eword293 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %169, i32 0, i32 2, !dbg !2907, !ctir !94
  %170 = load i64, i64* %eword293, align 8, !dbg !2908, !tbaa !2760, !ctir !55
  %dec294 = add i64 %170, -1, !dbg !2908
  store i64 %dec294, i64* %eword293, align 8, !dbg !2908, !tbaa !2760, !ctir !55
  %tobool295 = icmp ne i64 %170, 0, !dbg !2908
  br i1 %tobool295, label %if.end297, label %if.then296, !dbg !2909

if.then296:                                       ; preds = %if.else289
  %171 = load i8*, i8** @optarg, align 8, !dbg !2910, !tbaa !2286
  call void @badfieldspec(i8* %171, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0)) #15, !dbg !2912
  unreachable, !dbg !2912

if.end297:                                        ; preds = %if.else289
  %172 = load i8*, i8** %s, align 8, !dbg !2913, !tbaa !2286
  %173 = load i8, i8* %172, align 1, !dbg !2915, !tbaa !2438, !ctir !89
  %conv298 = sext i8 %173 to i32, !dbg !2915
  %cmp299 = icmp eq i32 %conv298, 46, !dbg !2916
  br i1 %cmp299, label %if.then301, label %if.end305, !dbg !2917

if.then301:                                       ; preds = %if.end297
  %174 = load i8*, i8** %s, align 8, !dbg !2918, !tbaa !2286
  %add.ptr302 = getelementptr inbounds i8, i8* %174, i64 1, !dbg !2920
  %175 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2921, !tbaa !2286
  %echar303 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %175, i32 0, i32 3, !dbg !2922, !ctir !94
  %call304 = call i8* @parse_field_count(i8* %add.ptr302, i64* %echar303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)), !dbg !2923
  store i8* %call304, i8** %s, align 8, !dbg !2924, !tbaa !2286
  br label %if.end305, !dbg !2925

if.end305:                                        ; preds = %if.then301, %if.end297
  %176 = load i8*, i8** %s, align 8, !dbg !2926, !tbaa !2286
  %177 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2927, !tbaa !2286
  %call306 = call i8* @set_ordering(i8* %176, %struct.keyfield* %177, i32 1), !dbg !2928
  store i8* %call306, i8** %s, align 8, !dbg !2929, !tbaa !2286
  br label %if.end307

if.end307:                                        ; preds = %if.end305, %if.then286
  %178 = load i8*, i8** %s, align 8, !dbg !2930, !tbaa !2286
  %179 = load i8, i8* %178, align 1, !dbg !2932, !tbaa !2438, !ctir !89
  %tobool308 = icmp ne i8 %179, 0, !dbg !2932
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !2933

if.then309:                                       ; preds = %if.end307
  %180 = load i8*, i8** @optarg, align 8, !dbg !2934, !tbaa !2286
  call void @badfieldspec(i8* %180, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0)) #15, !dbg !2935
  unreachable, !dbg !2935

if.end310:                                        ; preds = %if.end307
  %181 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !2936, !tbaa !2286
  call void @insertkey(%struct.keyfield* %181), !dbg !2937
  br label %sw.epilog, !dbg !2938

sw.bb311:                                         ; preds = %if.else
  store i8 1, i8* %mergeonly, align 1, !dbg !2939, !tbaa !2430
  br label %sw.epilog, !dbg !2940

sw.bb312:                                         ; preds = %if.else
  %182 = load i32, i32* %oi, align 4, !dbg !2941, !tbaa !2273
  %183 = load i32, i32* %c, align 4, !dbg !2942, !tbaa !2273
  %conv313 = trunc i32 %183 to i8, !dbg !2942
  %184 = load i8*, i8** @optarg, align 8, !dbg !2943, !tbaa !2286
  call void @specify_nmerge(i32 %182, i8 signext %conv313, i8* %184), !dbg !2944
  br label %sw.epilog, !dbg !2945

sw.bb314:                                         ; preds = %if.else
  %185 = load i8*, i8** %outfile, align 8, !dbg !2946, !tbaa !2286
  %tobool315 = icmp ne i8* %185, null, !dbg !2946
  br i1 %tobool315, label %land.lhs.true316, label %if.end322, !dbg !2948

land.lhs.true316:                                 ; preds = %sw.bb314
  %186 = load i8*, i8** %outfile, align 8, !dbg !2949, !tbaa !2286
  %187 = load i8*, i8** @optarg, align 8, !dbg !2949, !tbaa !2286
  %call317 = call i32 @strcmp(i8* %186, i8* %187) #14, !dbg !2949
  %cmp318 = icmp eq i32 %call317, 0, !dbg !2949
  br i1 %cmp318, label %if.end322, label %if.then320, !dbg !2950

if.then320:                                       ; preds = %land.lhs.true316
  %call321 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !2951
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call321), !dbg !2951
  unreachable, !dbg !2951

if.end322:                                        ; preds = %land.lhs.true316, %sw.bb314
  %188 = load i8*, i8** @optarg, align 8, !dbg !2952, !tbaa !2286
  store i8* %188, i8** %outfile, align 8, !dbg !2953, !tbaa !2286
  br label %sw.epilog, !dbg !2954

sw.bb323:                                         ; preds = %if.else
  %189 = load i8*, i8** %random_source, align 8, !dbg !2955, !tbaa !2286
  %tobool324 = icmp ne i8* %189, null, !dbg !2955
  br i1 %tobool324, label %land.lhs.true325, label %if.end331, !dbg !2957

land.lhs.true325:                                 ; preds = %sw.bb323
  %190 = load i8*, i8** %random_source, align 8, !dbg !2958, !tbaa !2286
  %191 = load i8*, i8** @optarg, align 8, !dbg !2958, !tbaa !2286
  %call326 = call i32 @strcmp(i8* %190, i8* %191) #14, !dbg !2958
  %cmp327 = icmp eq i32 %call326, 0, !dbg !2958
  br i1 %cmp327, label %if.end331, label %if.then329, !dbg !2959

if.then329:                                       ; preds = %land.lhs.true325
  %call330 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0)) #12, !dbg !2960
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call330), !dbg !2960
  unreachable, !dbg !2960

if.end331:                                        ; preds = %land.lhs.true325, %sw.bb323
  %192 = load i8*, i8** @optarg, align 8, !dbg !2961, !tbaa !2286
  store i8* %192, i8** %random_source, align 8, !dbg !2962, !tbaa !2286
  br label %sw.epilog, !dbg !2963

sw.bb332:                                         ; preds = %if.else
  store i8 1, i8* @stable, align 1, !dbg !2964, !tbaa !2430
  br label %sw.epilog, !dbg !2965

sw.bb333:                                         ; preds = %if.else
  %193 = load i32, i32* %oi, align 4, !dbg !2966, !tbaa !2273
  %194 = load i32, i32* %c, align 4, !dbg !2967, !tbaa !2273
  %conv334 = trunc i32 %194 to i8, !dbg !2967
  %195 = load i8*, i8** @optarg, align 8, !dbg !2968, !tbaa !2286
  call void @specify_sort_size(i32 %193, i8 signext %conv334, i8* %195), !dbg !2969
  br label %sw.epilog, !dbg !2970

sw.bb335:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %newtab, metadata !2971, metadata !DIExpression()), !dbg !2973
  %196 = load i8*, i8** @optarg, align 8, !dbg !2974, !tbaa !2286
  %arrayidx336 = getelementptr inbounds i8, i8* %196, i64 0, !dbg !2974, !ctir !9
  %197 = load i8, i8* %arrayidx336, align 1, !dbg !2974, !tbaa !2438
  store i8 %197, i8* %newtab, align 1, !dbg !2973, !tbaa !2438
  %198 = load i8, i8* %newtab, align 1, !dbg !2975, !tbaa !2438
  %tobool337 = icmp ne i8 %198, 0, !dbg !2975
  br i1 %tobool337, label %if.end340, label %if.then338, !dbg !2977

if.then338:                                       ; preds = %sw.bb335
  %call339 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !2978
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call339), !dbg !2978
  unreachable, !dbg !2978

if.end340:                                        ; preds = %sw.bb335
  %199 = load i8*, i8** @optarg, align 8, !dbg !2979, !tbaa !2286
  %arrayidx341 = getelementptr inbounds i8, i8* %199, i64 1, !dbg !2979, !ctir !9
  %200 = load i8, i8* %arrayidx341, align 1, !dbg !2979, !tbaa !2438
  %tobool342 = icmp ne i8 %200, 0, !dbg !2979
  br i1 %tobool342, label %if.then343, label %if.end352, !dbg !2981

if.then343:                                       ; preds = %if.end340
  %201 = load i8*, i8** @optarg, align 8, !dbg !2982, !tbaa !2286
  %call344 = call i32 @strcmp(i8* %201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0)) #14, !dbg !2982
  %cmp345 = icmp eq i32 %call344, 0, !dbg !2982
  br i1 %cmp345, label %if.then347, label %if.else348, !dbg !2985

if.then347:                                       ; preds = %if.then343
  store i8 0, i8* %newtab, align 1, !dbg !2986, !tbaa !2438
  br label %if.end351, !dbg !2987

if.else348:                                       ; preds = %if.then343
  %call349 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !2988
  %202 = load i8*, i8** @optarg, align 8, !dbg !2988, !tbaa !2286
  %call350 = call i8* @quote(i8* %202), !dbg !2988
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call349, i8* %call350), !dbg !2988
  unreachable, !dbg !2988

if.end351:                                        ; preds = %if.then347
  br label %if.end352, !dbg !2990

if.end352:                                        ; preds = %if.end351, %if.end340
  %203 = load i32, i32* @tab, align 4, !dbg !2991, !tbaa !2273
  %cmp353 = icmp ne i32 %203, 128, !dbg !2993
  br i1 %cmp353, label %land.lhs.true355, label %if.end361, !dbg !2994

land.lhs.true355:                                 ; preds = %if.end352
  %204 = load i32, i32* @tab, align 4, !dbg !2995, !tbaa !2273
  %205 = load i8, i8* %newtab, align 1, !dbg !2996, !tbaa !2438
  %conv356 = sext i8 %205 to i32, !dbg !2996
  %cmp357 = icmp ne i32 %204, %conv356, !dbg !2997
  br i1 %cmp357, label %if.then359, label %if.end361, !dbg !2998

if.then359:                                       ; preds = %land.lhs.true355
  %call360 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !2999
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call360), !dbg !2999
  unreachable, !dbg !2999

if.end361:                                        ; preds = %land.lhs.true355, %if.end352
  %206 = load i8, i8* %newtab, align 1, !dbg !3000, !tbaa !2438
  %conv362 = sext i8 %206 to i32, !dbg !3000
  store i32 %conv362, i32* @tab, align 4, !dbg !3001, !tbaa !2273
  br label %sw.epilog, !dbg !3002

sw.bb363:                                         ; preds = %if.else
  %207 = load i8*, i8** @optarg, align 8, !dbg !3003, !tbaa !2286
  call void @add_temp_dir(i8* %207), !dbg !3004
  br label %sw.epilog, !dbg !3005

sw.bb364:                                         ; preds = %if.else
  %208 = load i32, i32* %oi, align 4, !dbg !3006, !tbaa !2273
  %209 = load i32, i32* %c, align 4, !dbg !3007, !tbaa !2273
  %conv365 = trunc i32 %209 to i8, !dbg !3007
  %210 = load i8*, i8** @optarg, align 8, !dbg !3008, !tbaa !2286
  %call366 = call i64 @specify_nthreads(i32 %208, i8 signext %conv365, i8* %210), !dbg !3009
  store i64 %call366, i64* %nthreads, align 8, !dbg !3010, !tbaa !2447
  br label %sw.epilog, !dbg !3011

sw.bb367:                                         ; preds = %if.else
  store i8 1, i8* @unique, align 1, !dbg !3012, !tbaa !2430
  br label %sw.epilog, !dbg !3013

sw.bb368:                                         ; preds = %if.else
  %211 = load i8*, i8** @optarg, align 8, !dbg !3014, !tbaa !2286
  %212 = load i8**, i8*** %argv.addr, align 8, !dbg !3016, !tbaa !2286
  %213 = load i32, i32* @optind, align 4, !dbg !3017, !tbaa !2273
  %sub369 = sub nsw i32 %213, 1, !dbg !3018
  %idxprom370 = sext i32 %sub369 to i64, !dbg !3016
  %arrayidx371 = getelementptr inbounds i8*, i8** %212, i64 %idxprom370, !dbg !3016, !ctir !92
  %214 = load i8*, i8** %arrayidx371, align 8, !dbg !3016, !tbaa !2286
  %cmp372 = icmp eq i8* %211, %214, !dbg !3019
  br i1 %cmp372, label %if.then374, label %if.end387, !dbg !3020

if.then374:                                       ; preds = %sw.bb368
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3021, metadata !DIExpression()), !dbg !3023
  %215 = load i8*, i8** @optarg, align 8, !dbg !3024, !tbaa !2286
  store i8* %215, i8** %p, align 8, !dbg !3026, !tbaa !2286
  br label %for.cond375, !dbg !3027

for.cond375:                                      ; preds = %for.inc381, %if.then374
  %216 = load i8*, i8** %p, align 8, !dbg !3028, !tbaa !2286
  %217 = load i8, i8* %216, align 1, !dbg !3028, !tbaa !2438, !ctir !89
  %conv376 = sext i8 %217 to i32, !dbg !3028
  %sub377 = sub i32 %conv376, 48, !dbg !3028
  %cmp378 = icmp ule i32 %sub377, 9, !dbg !3028
  br i1 %cmp378, label %for.body380, label %for.end382, !dbg !3030

for.body380:                                      ; preds = %for.cond375
  br label %for.inc381, !dbg !3031

for.inc381:                                       ; preds = %for.body380
  %218 = load i8*, i8** %p, align 8, !dbg !3032, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %218, i32 1, !dbg !3032
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3032, !tbaa !2286
  br label %for.cond375, !dbg !3033, !llvm.loop !3034

for.end382:                                       ; preds = %for.cond375
  %219 = load i8*, i8** %p, align 8, !dbg !3036, !tbaa !2286
  %220 = load i8, i8* %219, align 1, !dbg !3037, !tbaa !2438, !ctir !89
  %conv383 = sext i8 %220 to i32, !dbg !3037
  %cmp384 = icmp ne i32 %conv383, 0, !dbg !3038
  %conv385 = zext i1 %cmp384 to i32, !dbg !3038
  %221 = load i32, i32* @optind, align 4, !dbg !3039, !tbaa !2273
  %sub386 = sub nsw i32 %221, %conv385, !dbg !3039
  store i32 %sub386, i32* @optind, align 4, !dbg !3039, !tbaa !2273
  br label %if.end387, !dbg !3040

if.end387:                                        ; preds = %for.end382, %sw.bb368
  br label %sw.epilog, !dbg !3041

sw.bb388:                                         ; preds = %if.else
  store i8 0, i8* @eolchar, align 1, !dbg !3042, !tbaa !2438
  br label %sw.epilog, !dbg !3043

sw.bb389:                                         ; preds = %if.else
  call void @usage(i32 0) #15, !dbg !3044
  unreachable, !dbg !3044

sw.bb390:                                         ; preds = %if.else
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3045, !tbaa !2286
  %223 = load i8*, i8** @Version, align 8, !dbg !3045, !tbaa !2286
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %222, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), i8* %223, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0), i8* null), !dbg !3045
  call void @exit(i32 0) #13, !dbg !3045
  unreachable, !dbg !3045

sw.default:                                       ; preds = %if.else
  call void @usage(i32 2) #15, !dbg !3046
  unreachable, !dbg !3046

sw.epilog:                                        ; preds = %sw.bb388, %if.end387, %sw.bb367, %sw.bb364, %sw.bb363, %if.end361, %sw.bb333, %sw.bb332, %if.end331, %if.end322, %sw.bb312, %sw.bb311, %if.end310, %sw.bb251, %sw.bb250, %if.end249, %if.end239, %sw.bb221, %if.end216
  br label %if.end391

if.end391:                                        ; preds = %sw.epilog, %if.end110
  br label %while.body, !dbg !2593, !llvm.loop !3047

while.end:                                        ; preds = %if.then109
  %224 = load i8*, i8** %files_from, align 8, !dbg !3049, !tbaa !2286
  %tobool392 = icmp ne i8* %224, null, !dbg !3049
  br i1 %tobool392, label %if.then393, label %if.end444, !dbg !3051

if.then393:                                       ; preds = %while.end
  %225 = load i64, i64* %nfiles, align 8, !dbg !3052, !tbaa !2447
  %tobool394 = icmp ne i64 %225, 0, !dbg !3052
  br i1 %tobool394, label %if.then395, label %if.end401, !dbg !3055

if.then395:                                       ; preds = %if.then393
  %call396 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !3056
  %226 = load i8**, i8*** %files, align 8, !dbg !3058, !tbaa !2286
  %arrayidx397 = getelementptr inbounds i8*, i8** %226, i64 0, !dbg !3058, !ctir !92
  %227 = load i8*, i8** %arrayidx397, align 8, !dbg !3058, !tbaa !2286
  %call398 = call i8* @quotearg_style(i32 4, i8* %227), !dbg !3058
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call396, i8* %call398), !dbg !3059
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3060, !tbaa !2286
  %call399 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !3061
  %call400 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %228, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* %call399), !dbg !3062
  call void @usage(i32 2) #15, !dbg !3063
  unreachable, !dbg !3063

if.end401:                                        ; preds = %if.then393
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream, metadata !3064, metadata !DIExpression()), !dbg !3065
  %229 = load i8*, i8** %files_from, align 8, !dbg !3066, !tbaa !2286
  %call402 = call %struct._IO_FILE* @xfopen(i8* %229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !3067
  store %struct._IO_FILE* %call402, %struct._IO_FILE** %stream, align 8, !dbg !3065, !tbaa !2286
  call void @readtokens0_init(%struct.Tokens* %tok), !dbg !3068
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %stream, align 8, !dbg !3069, !tbaa !2286
  %call403 = call zeroext i1 @readtokens0(%struct._IO_FILE* %230, %struct.Tokens* %tok), !dbg !3071
  br i1 %call403, label %if.end407, label %if.then404, !dbg !3072

if.then404:                                       ; preds = %if.end401
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0)) #12, !dbg !3073
  %231 = load i8*, i8** %files_from, align 8, !dbg !3073, !tbaa !2286
  %call406 = call i8* @quotearg_style(i32 4, i8* %231), !dbg !3073
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call405, i8* %call406), !dbg !3073
  unreachable, !dbg !3073

if.end407:                                        ; preds = %if.end401
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %stream, align 8, !dbg !3074, !tbaa !2286
  %233 = load i8*, i8** %files_from, align 8, !dbg !3075, !tbaa !2286
  call void @xfclose(%struct._IO_FILE* %232, i8* %233), !dbg !3076
  %n_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %tok, i32 0, i32 0, !dbg !3077, !ctir !2377
  %234 = load i64, i64* %n_tok, align 8, !dbg !3077, !tbaa !3079, !ctir !55
  %tobool408 = icmp ne i64 %234, 0, !dbg !3082
  br i1 %tobool408, label %if.then409, label %if.else440, !dbg !3083

if.then409:                                       ; preds = %if.end407
  %235 = load i8**, i8*** %files, align 8, !dbg !3084, !tbaa !2286
  %236 = bitcast i8** %235 to i8*, !dbg !3084
  call void @free(i8* %236) #12, !dbg !3086
  %tok410 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %tok, i32 0, i32 1, !dbg !3087, !ctir !2377
  %237 = load i8**, i8*** %tok410, align 8, !dbg !3087, !tbaa !3088, !ctir !92
  store i8** %237, i8*** %files, align 8, !dbg !3089, !tbaa !2286
  %n_tok411 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %tok, i32 0, i32 0, !dbg !3090, !ctir !2377
  %238 = load i64, i64* %n_tok411, align 8, !dbg !3090, !tbaa !3079, !ctir !55
  store i64 %238, i64* %nfiles, align 8, !dbg !3091, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %i412, metadata !3092, metadata !DIExpression()), !dbg !3094
  store i64 0, i64* %i412, align 8, !dbg !3094, !tbaa !2447
  br label %for.cond413, !dbg !3095

for.cond413:                                      ; preds = %for.inc437, %if.then409
  %239 = load i64, i64* %i412, align 8, !dbg !3096, !tbaa !2447
  %240 = load i64, i64* %nfiles, align 8, !dbg !3098, !tbaa !2447
  %cmp414 = icmp ult i64 %239, %240, !dbg !3099
  br i1 %cmp414, label %for.body416, label %for.end439, !dbg !3100

for.body416:                                      ; preds = %for.cond413
  %241 = load i8**, i8*** %files, align 8, !dbg !3101, !tbaa !2286
  %242 = load i64, i64* %i412, align 8, !dbg !3101, !tbaa !2447
  %arrayidx417 = getelementptr inbounds i8*, i8** %241, i64 %242, !dbg !3101, !ctir !92
  %243 = load i8*, i8** %arrayidx417, align 8, !dbg !3101, !tbaa !2286
  %call418 = call i32 @strcmp(i8* %243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !3101
  %cmp419 = icmp eq i32 %call418, 0, !dbg !3101
  br i1 %cmp419, label %if.then421, label %if.else425, !dbg !3104

if.then421:                                       ; preds = %for.body416
  %call422 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.55, i64 0, i64 0)) #12, !dbg !3105
  %244 = load i8**, i8*** %files, align 8, !dbg !3105, !tbaa !2286
  %245 = load i64, i64* %i412, align 8, !dbg !3105, !tbaa !2447
  %arrayidx423 = getelementptr inbounds i8*, i8** %244, i64 %245, !dbg !3105, !ctir !92
  %246 = load i8*, i8** %arrayidx423, align 8, !dbg !3105, !tbaa !2286
  %call424 = call i8* @quotearg_style(i32 4, i8* %246), !dbg !3105
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call422, i8* %call424), !dbg !3105
  unreachable, !dbg !3105

if.else425:                                       ; preds = %for.body416
  %247 = load i8**, i8*** %files, align 8, !dbg !3106, !tbaa !2286
  %248 = load i64, i64* %i412, align 8, !dbg !3108, !tbaa !2447
  %arrayidx426 = getelementptr inbounds i8*, i8** %247, i64 %248, !dbg !3106, !ctir !92
  %249 = load i8*, i8** %arrayidx426, align 8, !dbg !3106, !tbaa !2286
  %arrayidx427 = getelementptr inbounds i8, i8* %249, i64 0, !dbg !3106, !ctir !9
  %250 = load i8, i8* %arrayidx427, align 1, !dbg !3106, !tbaa !2438
  %conv428 = sext i8 %250 to i32, !dbg !3106
  %cmp429 = icmp eq i32 %conv428, 0, !dbg !3109
  br i1 %cmp429, label %if.then431, label %if.end435, !dbg !3110

if.then431:                                       ; preds = %if.else425
  call void @llvm.dbg.declare(metadata i64* %file_number, metadata !3111, metadata !DIExpression()), !dbg !3113
  %251 = load i64, i64* %i412, align 8, !dbg !3114, !tbaa !2447
  %add432 = add i64 %251, 1, !dbg !3115
  store i64 %add432, i64* %file_number, align 8, !dbg !3113, !tbaa !2447
  %call433 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.56, i64 0, i64 0)) #12, !dbg !3116
  %252 = load i8*, i8** %files_from, align 8, !dbg !3116, !tbaa !2286
  %call434 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %252), !dbg !3116
  %253 = load i64, i64* %file_number, align 8, !dbg !3116, !tbaa !2447
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call433, i8* %call434, i64 %253), !dbg !3116
  unreachable, !dbg !3116

if.end435:                                        ; preds = %if.else425
  br label %if.end436

if.end436:                                        ; preds = %if.end435
  br label %for.inc437, !dbg !3117

for.inc437:                                       ; preds = %if.end436
  %254 = load i64, i64* %i412, align 8, !dbg !3118, !tbaa !2447
  %inc438 = add i64 %254, 1, !dbg !3118
  store i64 %inc438, i64* %i412, align 8, !dbg !3118, !tbaa !2447
  br label %for.cond413, !dbg !3119, !llvm.loop !3120

for.end439:                                       ; preds = %for.cond413
  br label %if.end443, !dbg !3122

if.else440:                                       ; preds = %if.end407
  %call441 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0)) #12, !dbg !3123
  %255 = load i8*, i8** %files_from, align 8, !dbg !3123, !tbaa !2286
  %call442 = call i8* @quotearg_style(i32 4, i8* %255), !dbg !3123
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call441, i8* %call442), !dbg !3123
  unreachable, !dbg !3123

if.end443:                                        ; preds = %for.end439
  br label %if.end444, !dbg !3124

if.end444:                                        ; preds = %if.end443, %while.end
  %256 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !3125, !tbaa !2286
  store %struct.keyfield* %256, %struct.keyfield** %key, align 8, !dbg !3127, !tbaa !2286
  br label %for.cond445, !dbg !3128

for.cond445:                                      ; preds = %for.inc492, %if.end444
  %257 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3129, !tbaa !2286
  %tobool446 = icmp ne %struct.keyfield* %257, null, !dbg !3131
  br i1 %tobool446, label %for.body447, label %for.end493, !dbg !3131

for.body447:                                      ; preds = %for.cond445
  %258 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3132, !tbaa !2286
  %call448 = call zeroext i1 @default_key_compare(%struct.keyfield* %258), !dbg !3135
  br i1 %call448, label %land.lhs.true450, label %if.end483, !dbg !3136

land.lhs.true450:                                 ; preds = %for.body447
  %259 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3137, !tbaa !2286
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %259, i32 0, i32 13, !dbg !3138, !ctir !94
  %260 = load i8, i8* %reverse, align 1, !dbg !3138, !tbaa !3139
  %tobool451 = trunc i8 %260 to i1, !dbg !3138, !ctir !103
  br i1 %tobool451, label %if.end483, label %if.then452, !dbg !3140

if.then452:                                       ; preds = %land.lhs.true450
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 4, !dbg !3141, !ctir !94
  %261 = load i8*, i8** %ignore, align 8, !dbg !3141, !tbaa !3143, !ctir !101
  %262 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3144, !tbaa !2286
  %ignore453 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %262, i32 0, i32 4, !dbg !3145, !ctir !94
  store i8* %261, i8** %ignore453, align 8, !dbg !3146, !tbaa !3143, !ctir !101
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 5, !dbg !3147, !ctir !94
  %263 = load i8*, i8** %translate, align 8, !dbg !3147, !tbaa !3148, !ctir !88
  %264 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3149, !tbaa !2286
  %translate454 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %264, i32 0, i32 5, !dbg !3150, !ctir !94
  store i8* %263, i8** %translate454, align 8, !dbg !3151, !tbaa !3148, !ctir !88
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 6, !dbg !3152, !ctir !94
  %265 = load i8, i8* %skipsblanks, align 8, !dbg !3152, !tbaa !3153
  %tobool455 = trunc i8 %265 to i1, !dbg !3152, !ctir !103
  %266 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3154, !tbaa !2286
  %skipsblanks456 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %266, i32 0, i32 6, !dbg !3155, !ctir !94
  %frombool457 = zext i1 %tobool455 to i8, !dbg !3156
  store i8 %frombool457, i8* %skipsblanks456, align 8, !dbg !3156, !tbaa !3153, !ctir !103
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 7, !dbg !3157, !ctir !94
  %267 = load i8, i8* %skipeblanks, align 1, !dbg !3157, !tbaa !3158
  %tobool458 = trunc i8 %267 to i1, !dbg !3157, !ctir !103
  %268 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3159, !tbaa !2286
  %skipeblanks459 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %268, i32 0, i32 7, !dbg !3160, !ctir !94
  %frombool460 = zext i1 %tobool458 to i8, !dbg !3161
  store i8 %frombool460, i8* %skipeblanks459, align 1, !dbg !3161, !tbaa !3158, !ctir !103
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 12, !dbg !3162, !ctir !94
  %269 = load i8, i8* %month, align 2, !dbg !3162, !tbaa !3163
  %tobool461 = trunc i8 %269 to i1, !dbg !3162, !ctir !103
  %270 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3164, !tbaa !2286
  %month462 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %270, i32 0, i32 12, !dbg !3165, !ctir !94
  %frombool463 = zext i1 %tobool461 to i8, !dbg !3166
  store i8 %frombool463, i8* %month462, align 2, !dbg !3166, !tbaa !3163, !ctir !103
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 8, !dbg !3167, !ctir !94
  %271 = load i8, i8* %numeric, align 2, !dbg !3167, !tbaa !3168
  %tobool464 = trunc i8 %271 to i1, !dbg !3167, !ctir !103
  %272 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3169, !tbaa !2286
  %numeric465 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %272, i32 0, i32 8, !dbg !3170, !ctir !94
  %frombool466 = zext i1 %tobool464 to i8, !dbg !3171
  store i8 %frombool466, i8* %numeric465, align 2, !dbg !3171, !tbaa !3168, !ctir !103
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 10, !dbg !3172, !ctir !94
  %273 = load i8, i8* %general_numeric, align 4, !dbg !3172, !tbaa !3173
  %tobool467 = trunc i8 %273 to i1, !dbg !3172, !ctir !103
  %274 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3174, !tbaa !2286
  %general_numeric468 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %274, i32 0, i32 10, !dbg !3175, !ctir !94
  %frombool469 = zext i1 %tobool467 to i8, !dbg !3176
  store i8 %frombool469, i8* %general_numeric468, align 4, !dbg !3176, !tbaa !3173, !ctir !103
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 11, !dbg !3177, !ctir !94
  %275 = load i8, i8* %human_numeric, align 1, !dbg !3177, !tbaa !3178
  %tobool470 = trunc i8 %275 to i1, !dbg !3177, !ctir !103
  %276 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3179, !tbaa !2286
  %human_numeric471 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %276, i32 0, i32 11, !dbg !3180, !ctir !94
  %frombool472 = zext i1 %tobool470 to i8, !dbg !3181
  store i8 %frombool472, i8* %human_numeric471, align 1, !dbg !3181, !tbaa !3178, !ctir !103
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 14, !dbg !3182, !ctir !94
  %277 = load i8, i8* %version, align 8, !dbg !3182, !tbaa !3183
  %tobool473 = trunc i8 %277 to i1, !dbg !3182, !ctir !103
  %278 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3184, !tbaa !2286
  %version474 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %278, i32 0, i32 14, !dbg !3185, !ctir !94
  %frombool475 = zext i1 %tobool473 to i8, !dbg !3186
  store i8 %frombool475, i8* %version474, align 8, !dbg !3186, !tbaa !3183, !ctir !103
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 9, !dbg !3187, !ctir !94
  %279 = load i8, i8* %random, align 1, !dbg !3187, !tbaa !3188
  %tobool476 = trunc i8 %279 to i1, !dbg !3187, !ctir !103
  %280 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3189, !tbaa !2286
  %random477 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %280, i32 0, i32 9, !dbg !3190, !ctir !94
  %frombool478 = zext i1 %tobool476 to i8, !dbg !3191
  store i8 %frombool478, i8* %random477, align 1, !dbg !3191, !tbaa !3188, !ctir !103
  %reverse479 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 13, !dbg !3192, !ctir !94
  %281 = load i8, i8* %reverse479, align 1, !dbg !3192, !tbaa !3139
  %tobool480 = trunc i8 %281 to i1, !dbg !3192, !ctir !103
  %282 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3193, !tbaa !2286
  %reverse481 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %282, i32 0, i32 13, !dbg !3194, !ctir !94
  %frombool482 = zext i1 %tobool480 to i8, !dbg !3195
  store i8 %frombool482, i8* %reverse481, align 1, !dbg !3195, !tbaa !3139, !ctir !103
  br label %if.end483, !dbg !3196

if.end483:                                        ; preds = %if.then452, %land.lhs.true450, %for.body447
  %283 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3197, !tbaa !2286
  %random484 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %283, i32 0, i32 9, !dbg !3198, !ctir !94
  %284 = load i8, i8* %random484, align 1, !dbg !3198, !tbaa !3188
  %tobool485 = trunc i8 %284 to i1, !dbg !3198, !ctir !103
  %conv486 = zext i1 %tobool485 to i32, !dbg !3197
  %285 = load i8, i8* %need_random, align 1, !dbg !3199, !tbaa !2430
  %tobool487 = trunc i8 %285 to i1, !dbg !3199
  %conv488 = zext i1 %tobool487 to i32, !dbg !3199
  %or489 = or i32 %conv488, %conv486, !dbg !3199
  %tobool490 = icmp ne i32 %or489, 0, !dbg !3199
  %frombool491 = zext i1 %tobool490 to i8, !dbg !3199
  store i8 %frombool491, i8* %need_random, align 1, !dbg !3199, !tbaa !2430
  br label %for.inc492, !dbg !3200

for.inc492:                                       ; preds = %if.end483
  %286 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3201, !tbaa !2286
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %286, i32 0, i32 16, !dbg !3202, !ctir !94
  %287 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !3202, !tbaa !3203, !ctir !93
  store %struct.keyfield* %287, %struct.keyfield** %key, align 8, !dbg !3204, !tbaa !2286
  br label %for.cond445, !dbg !3205, !llvm.loop !3206

for.end493:                                       ; preds = %for.cond445
  %288 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !3208, !tbaa !2286
  %tobool494 = icmp ne %struct.keyfield* %288, null, !dbg !3208
  br i1 %tobool494, label %if.end506, label %land.lhs.true495, !dbg !3210

land.lhs.true495:                                 ; preds = %for.end493
  %call496 = call zeroext i1 @default_key_compare(%struct.keyfield* %gkey), !dbg !3211
  br i1 %call496, label %if.end506, label %if.then497, !dbg !3212

if.then497:                                       ; preds = %land.lhs.true495
  store i8 1, i8* %gkey_only, align 1, !dbg !3213, !tbaa !2430
  call void @insertkey(%struct.keyfield* %gkey), !dbg !3215
  %random498 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 9, !dbg !3216, !ctir !94
  %289 = load i8, i8* %random498, align 1, !dbg !3216, !tbaa !3188
  %tobool499 = trunc i8 %289 to i1, !dbg !3216, !ctir !103
  %conv500 = zext i1 %tobool499 to i32, !dbg !3217
  %290 = load i8, i8* %need_random, align 1, !dbg !3218, !tbaa !2430
  %tobool501 = trunc i8 %290 to i1, !dbg !3218
  %conv502 = zext i1 %tobool501 to i32, !dbg !3218
  %or503 = or i32 %conv502, %conv500, !dbg !3218
  %tobool504 = icmp ne i32 %or503, 0, !dbg !3218
  %frombool505 = zext i1 %tobool504 to i8, !dbg !3218
  store i8 %frombool505, i8* %need_random, align 1, !dbg !3218, !tbaa !2430
  br label %if.end506, !dbg !3219

if.end506:                                        ; preds = %if.then497, %land.lhs.true495, %for.end493
  call void @check_ordering_compatibility(), !dbg !3220
  %291 = load i8, i8* @debug, align 1, !dbg !3221, !tbaa !2430
  %tobool507 = trunc i8 %291 to i1, !dbg !3221
  br i1 %tobool507, label %if.then508, label %if.end544, !dbg !3223

if.then508:                                       ; preds = %if.end506
  %292 = load i8, i8* %checkonly, align 1, !dbg !3224, !tbaa !2438
  %conv509 = sext i8 %292 to i32, !dbg !3224
  %tobool510 = icmp ne i32 %conv509, 0, !dbg !3224
  br i1 %tobool510, label %if.then513, label %lor.lhs.false511, !dbg !3227

lor.lhs.false511:                                 ; preds = %if.then508
  %293 = load i8*, i8** %outfile, align 8, !dbg !3228, !tbaa !2286
  %tobool512 = icmp ne i8* %293, null, !dbg !3228
  br i1 %tobool512, label %if.then513, label %if.end522, !dbg !3229

if.then513:                                       ; preds = %lor.lhs.false511, %if.then508
  %294 = load i8, i8* %checkonly, align 1, !dbg !3230, !tbaa !2438
  %conv514 = sext i8 %294 to i32, !dbg !3230
  %tobool515 = icmp ne i32 %conv514, 0, !dbg !3230
  br i1 %tobool515, label %cond.true516, label %cond.false518, !dbg !3230

cond.true516:                                     ; preds = %if.then513
  %295 = load i8, i8* %checkonly, align 1, !dbg !3232, !tbaa !2438
  %conv517 = sext i8 %295 to i32, !dbg !3232
  br label %cond.end519, !dbg !3230

cond.false518:                                    ; preds = %if.then513
  br label %cond.end519, !dbg !3230

cond.end519:                                      ; preds = %cond.false518, %cond.true516
  %cond520 = phi i32 [ %conv517, %cond.true516 ], [ 111, %cond.false518 ], !dbg !3230
  %conv521 = trunc i32 %cond520 to i8, !dbg !3233
  store i8 %conv521, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @main.opts, i64 0, i64 0), align 1, !dbg !3234, !tbaa !2438
  call void @incompatible_options(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @main.opts, i64 0, i64 0)) #15, !dbg !3235
  unreachable, !dbg !3235

if.end522:                                        ; preds = %lor.lhs.false511
  %296 = load i8, i8* %locale_ok, align 1, !dbg !3236, !tbaa !2430
  %tobool523 = trunc i8 %296 to i1, !dbg !3236
  br i1 %tobool523, label %if.then524, label %if.end530, !dbg !3238

if.then524:                                       ; preds = %if.end522
  %call525 = call i8* @setlocale(i32 3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !3239
  %tobool526 = icmp ne i8* %call525, null, !dbg !3240
  %lnot527 = xor i1 %tobool526, true, !dbg !3240
  %lnot528 = xor i1 %lnot527, true, !dbg !3241
  %frombool529 = zext i1 %lnot528 to i8, !dbg !3242
  store i8 %frombool529, i8* %locale_ok, align 1, !dbg !3242, !tbaa !2430
  br label %if.end530, !dbg !3243

if.end530:                                        ; preds = %if.then524, %if.end522
  %297 = load i8, i8* %locale_ok, align 1, !dbg !3244, !tbaa !2430
  %tobool531 = trunc i8 %297 to i1, !dbg !3244
  br i1 %tobool531, label %if.end534, label %if.then532, !dbg !3246

if.then532:                                       ; preds = %if.end530
  %call533 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0)) #12, !dbg !3247
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0), i8* %call533), !dbg !3248
  br label %if.end534, !dbg !3248

if.end534:                                        ; preds = %if.then532, %if.end530
  %298 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !3249, !tbaa !2430
  %tobool535 = trunc i8 %298 to i1, !dbg !3249
  br i1 %tobool535, label %if.then536, label %if.else540, !dbg !3251

if.then536:                                       ; preds = %if.end534
  %call537 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.60, i64 0, i64 0)) #12, !dbg !3252
  %call538 = call i8* @setlocale(i32 3, i8* null) #12, !dbg !3253
  %call539 = call i8* @quote(i8* %call538), !dbg !3254
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call537, i8* %call539), !dbg !3255
  br label %if.end542, !dbg !3255

if.else540:                                       ; preds = %if.end534
  %call541 = call i8* @gettext(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.61, i64 0, i64 0)) #12, !dbg !3256
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0), i8* %call541), !dbg !3257
  br label %if.end542

if.end542:                                        ; preds = %if.else540, %if.then536
  %299 = load i8, i8* %gkey_only, align 1, !dbg !3258, !tbaa !2430
  %tobool543 = trunc i8 %299 to i1, !dbg !3258
  call void @key_warnings(%struct.keyfield* %gkey, i1 zeroext %tobool543), !dbg !3259
  br label %if.end544, !dbg !3260

if.end544:                                        ; preds = %if.end542, %if.end506
  %reverse545 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %gkey, i32 0, i32 13, !dbg !3261, !ctir !94
  %300 = load i8, i8* %reverse545, align 1, !dbg !3261, !tbaa !3139
  %tobool546 = trunc i8 %300 to i1, !dbg !3261, !ctir !103
  %frombool547 = zext i1 %tobool546 to i8, !dbg !3262
  store i8 %frombool547, i8* @reverse, align 1, !dbg !3262, !tbaa !2430
  %301 = load i8, i8* %need_random, align 1, !dbg !3263, !tbaa !2430
  %tobool548 = trunc i8 %301 to i1, !dbg !3263
  br i1 %tobool548, label %if.then549, label %if.end550, !dbg !3265

if.then549:                                       ; preds = %if.end544
  %302 = load i8*, i8** %random_source, align 8, !dbg !3266, !tbaa !2286
  call void @random_md5_state_init(i8* %302), !dbg !3267
  br label %if.end550, !dbg !3267

if.end550:                                        ; preds = %if.then549, %if.end544
  %303 = load i64, i64* @temp_dir_count, align 8, !dbg !3268, !tbaa !2447
  %cmp551 = icmp eq i64 %303, 0, !dbg !3270
  br i1 %cmp551, label %if.then553, label %if.end560, !dbg !3271

if.then553:                                       ; preds = %if.end550
  call void @llvm.dbg.declare(metadata i8** %tmp_dir, metadata !3272, metadata !DIExpression()), !dbg !3274
  %call554 = call i8* @getenv(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)) #12, !dbg !3275
  store i8* %call554, i8** %tmp_dir, align 8, !dbg !3274, !tbaa !2286
  %304 = load i8*, i8** %tmp_dir, align 8, !dbg !3276, !tbaa !2286
  %tobool555 = icmp ne i8* %304, null, !dbg !3276
  br i1 %tobool555, label %cond.true556, label %cond.false557, !dbg !3276

cond.true556:                                     ; preds = %if.then553
  %305 = load i8*, i8** %tmp_dir, align 8, !dbg !3277, !tbaa !2286
  br label %cond.end558, !dbg !3276

cond.false557:                                    ; preds = %if.then553
  br label %cond.end558, !dbg !3276

cond.end558:                                      ; preds = %cond.false557, %cond.true556
  %cond559 = phi i8* [ %305, %cond.true556 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), %cond.false557 ], !dbg !3276
  call void @add_temp_dir(i8* %cond559), !dbg !3278
  br label %if.end560, !dbg !3279

if.end560:                                        ; preds = %cond.end558, %if.end550
  %306 = load i64, i64* %nfiles, align 8, !dbg !3280, !tbaa !2447
  %cmp561 = icmp eq i64 %306, 0, !dbg !3282
  br i1 %cmp561, label %if.then563, label %if.end565, !dbg !3283

if.then563:                                       ; preds = %if.end560
  store i64 1, i64* %nfiles, align 8, !dbg !3284, !tbaa !2447
  %307 = load i8**, i8*** %files, align 8, !dbg !3286, !tbaa !2286
  %308 = bitcast i8** %307 to i8*, !dbg !3286
  call void @free(i8* %308) #12, !dbg !3287
  %call564 = call noalias i8* @xmalloc(i64 8), !dbg !3288
  %309 = bitcast i8* %call564 to i8**, !dbg !3288
  store i8** %309, i8*** %files, align 8, !dbg !3289, !tbaa !2286
  %310 = load i8**, i8*** %files, align 8, !dbg !3290, !tbaa !2286
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0), i8** %310, align 8, !dbg !3291, !tbaa !2286, !ctir !9
  br label %if.end565, !dbg !3292

if.end565:                                        ; preds = %if.then563, %if.end560
  %311 = load i64, i64* @sort_size, align 8, !dbg !3293, !tbaa !2447
  %cmp566 = icmp ult i64 0, %311, !dbg !3295
  br i1 %cmp566, label %if.then568, label %if.end578, !dbg !3296

if.then568:                                       ; preds = %if.end565
  %312 = load i64, i64* @sort_size, align 8, !dbg !3297, !tbaa !2447
  %313 = load i32, i32* @nmerge, align 4, !dbg !3297, !tbaa !2273
  %conv569 = zext i32 %313 to i64, !dbg !3297
  %mul = mul i64 %conv569, 34, !dbg !3297
  %cmp570 = icmp ugt i64 %312, %mul, !dbg !3297
  br i1 %cmp570, label %cond.true572, label %cond.false573, !dbg !3297

cond.true572:                                     ; preds = %if.then568
  %314 = load i64, i64* @sort_size, align 8, !dbg !3297, !tbaa !2447
  br label %cond.end576, !dbg !3297

cond.false573:                                    ; preds = %if.then568
  %315 = load i32, i32* @nmerge, align 4, !dbg !3297, !tbaa !2273
  %conv574 = zext i32 %315 to i64, !dbg !3297
  %mul575 = mul i64 %conv574, 34, !dbg !3297
  br label %cond.end576, !dbg !3297

cond.end576:                                      ; preds = %cond.false573, %cond.true572
  %cond577 = phi i64 [ %314, %cond.true572 ], [ %mul575, %cond.false573 ], !dbg !3297
  store i64 %cond577, i64* @sort_size, align 8, !dbg !3298, !tbaa !2447
  br label %if.end578, !dbg !3299

if.end578:                                        ; preds = %cond.end576, %if.end565
  %316 = load i8, i8* %checkonly, align 1, !dbg !3300, !tbaa !2438
  %tobool579 = icmp ne i8 %316, 0, !dbg !3300
  br i1 %tobool579, label %if.then580, label %if.end596, !dbg !3302

if.then580:                                       ; preds = %if.end578
  %317 = load i64, i64* %nfiles, align 8, !dbg !3303, !tbaa !2447
  %cmp581 = icmp ugt i64 %317, 1, !dbg !3306
  br i1 %cmp581, label %if.then583, label %if.end588, !dbg !3307

if.then583:                                       ; preds = %if.then580
  %call584 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !3308
  %318 = load i8**, i8*** %files, align 8, !dbg !3308, !tbaa !2286
  %arrayidx585 = getelementptr inbounds i8*, i8** %318, i64 1, !dbg !3308, !ctir !92
  %319 = load i8*, i8** %arrayidx585, align 8, !dbg !3308, !tbaa !2286
  %call586 = call i8* @quotearg_style(i32 4, i8* %319), !dbg !3308
  %320 = load i8, i8* %checkonly, align 1, !dbg !3308, !tbaa !2438
  %conv587 = sext i8 %320 to i32, !dbg !3308
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call584, i8* %call586, i32 %conv587), !dbg !3308
  unreachable, !dbg !3308

if.end588:                                        ; preds = %if.then580
  %321 = load i8*, i8** %outfile, align 8, !dbg !3309, !tbaa !2286
  %tobool589 = icmp ne i8* %321, null, !dbg !3309
  br i1 %tobool589, label %if.then590, label %if.end591, !dbg !3311

if.then590:                                       ; preds = %if.end588
  %322 = load i8, i8* %checkonly, align 1, !dbg !3312, !tbaa !2438
  store i8 %322, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @main.opts.64, i64 0, i64 0), align 1, !dbg !3314, !tbaa !2438
  call void @incompatible_options(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @main.opts.64, i64 0, i64 0)) #15, !dbg !3315
  unreachable, !dbg !3315

if.end591:                                        ; preds = %if.end588
  %323 = load i8**, i8*** %files, align 8, !dbg !3316, !tbaa !2286
  %arrayidx592 = getelementptr inbounds i8*, i8** %323, i64 0, !dbg !3316, !ctir !92
  %324 = load i8*, i8** %arrayidx592, align 8, !dbg !3316, !tbaa !2286
  %325 = load i8, i8* %checkonly, align 1, !dbg !3317, !tbaa !2438
  %call593 = call zeroext i1 @check(i8* %324, i8 signext %325), !dbg !3318
  %326 = zext i1 %call593 to i64, !dbg !3318
  %cond595 = select i1 %call593, i32 0, i32 1, !dbg !3318
  store i32 %cond595, i32* %retval, align 4, !dbg !3319
  br label %return, !dbg !3319

if.end596:                                        ; preds = %if.end578
  %327 = load i8**, i8*** %files, align 8, !dbg !3320, !tbaa !2286
  %328 = load i64, i64* %nfiles, align 8, !dbg !3321, !tbaa !2447
  call void @check_inputs(i8** %327, i64 %328), !dbg !3322
  %329 = load i8*, i8** %outfile, align 8, !dbg !3323, !tbaa !2286
  call void @check_output(i8* %329), !dbg !3324
  %330 = load i8, i8* %mergeonly, align 1, !dbg !3325, !tbaa !2430
  %tobool597 = trunc i8 %330 to i1, !dbg !3325
  br i1 %tobool597, label %if.then598, label %if.else610, !dbg !3327

if.then598:                                       ; preds = %if.end596
  call void @llvm.dbg.declare(metadata %struct.sortfile** %sortfiles, metadata !3328, metadata !DIExpression()), !dbg !3330
  %331 = load i64, i64* %nfiles, align 8, !dbg !3331, !tbaa !2447
  %call599 = call noalias i8* @xcalloc(i64 %331, i64 16), !dbg !3332
  %332 = bitcast i8* %call599 to %struct.sortfile*, !dbg !3332
  store %struct.sortfile* %332, %struct.sortfile** %sortfiles, align 8, !dbg !3330, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %i600, metadata !3333, metadata !DIExpression()), !dbg !3335
  store i64 0, i64* %i600, align 8, !dbg !3335, !tbaa !2447
  br label %for.cond601, !dbg !3336

for.cond601:                                      ; preds = %for.inc607, %if.then598
  %333 = load i64, i64* %i600, align 8, !dbg !3337, !tbaa !2447
  %334 = load i64, i64* %nfiles, align 8, !dbg !3339, !tbaa !2447
  %cmp602 = icmp ult i64 %333, %334, !dbg !3340
  br i1 %cmp602, label %for.body604, label %for.end609, !dbg !3341

for.body604:                                      ; preds = %for.cond601
  %335 = load i8**, i8*** %files, align 8, !dbg !3342, !tbaa !2286
  %336 = load i64, i64* %i600, align 8, !dbg !3343, !tbaa !2447
  %arrayidx605 = getelementptr inbounds i8*, i8** %335, i64 %336, !dbg !3342, !ctir !92
  %337 = load i8*, i8** %arrayidx605, align 8, !dbg !3342, !tbaa !2286
  %338 = load %struct.sortfile*, %struct.sortfile** %sortfiles, align 8, !dbg !3344, !tbaa !2286
  %339 = load i64, i64* %i600, align 8, !dbg !3345, !tbaa !2447
  %arrayidx606 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %338, i64 %339, !dbg !3344, !ctir !288
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx606, i32 0, i32 0, !dbg !3346, !ctir !289
  store i8* %337, i8** %name, align 8, !dbg !3347, !tbaa !3348, !ctir !88
  br label %for.inc607, !dbg !3344

for.inc607:                                       ; preds = %for.body604
  %340 = load i64, i64* %i600, align 8, !dbg !3350, !tbaa !2447
  %inc608 = add i64 %340, 1, !dbg !3350
  store i64 %inc608, i64* %i600, align 8, !dbg !3350, !tbaa !2447
  br label %for.cond601, !dbg !3351, !llvm.loop !3352

for.end609:                                       ; preds = %for.cond601
  %341 = load %struct.sortfile*, %struct.sortfile** %sortfiles, align 8, !dbg !3354, !tbaa !2286
  %342 = load i64, i64* %nfiles, align 8, !dbg !3355, !tbaa !2447
  %343 = load i8*, i8** %outfile, align 8, !dbg !3356, !tbaa !2286
  call void @merge(%struct.sortfile* %341, i64 0, i64 %342, i8* %343), !dbg !3357
  br label %if.end627, !dbg !3358

if.else610:                                       ; preds = %if.end596
  %344 = load i64, i64* %nthreads, align 8, !dbg !3359, !tbaa !2447
  %tobool611 = icmp ne i64 %344, 0, !dbg !3359
  br i1 %tobool611, label %if.end620, label %if.then612, !dbg !3362

if.then612:                                       ; preds = %if.else610
  call void @llvm.dbg.declare(metadata i64* %np, metadata !3363, metadata !DIExpression()), !dbg !3365
  %call613 = call i64 @num_processors(i32 2), !dbg !3366
  store i64 %call613, i64* %np, align 8, !dbg !3365, !tbaa !2447
  %345 = load i64, i64* %np, align 8, !dbg !3367, !tbaa !2447
  %cmp614 = icmp ult i64 %345, 8, !dbg !3367
  br i1 %cmp614, label %cond.true616, label %cond.false617, !dbg !3367

cond.true616:                                     ; preds = %if.then612
  %346 = load i64, i64* %np, align 8, !dbg !3367, !tbaa !2447
  br label %cond.end618, !dbg !3367

cond.false617:                                    ; preds = %if.then612
  br label %cond.end618, !dbg !3367

cond.end618:                                      ; preds = %cond.false617, %cond.true616
  %cond619 = phi i64 [ %346, %cond.true616 ], [ 8, %cond.false617 ], !dbg !3367
  store i64 %cond619, i64* %nthreads, align 8, !dbg !3368, !tbaa !2447
  br label %if.end620, !dbg !3369

if.end620:                                        ; preds = %cond.end618, %if.else610
  call void @llvm.dbg.declare(metadata i64* %nthreads_max, metadata !3370, metadata !DIExpression()), !dbg !3371
  store i64 72057594037927935, i64* %nthreads_max, align 8, !dbg !3371, !tbaa !2447
  %347 = load i64, i64* %nthreads, align 8, !dbg !3372, !tbaa !2447
  %348 = load i64, i64* %nthreads_max, align 8, !dbg !3372, !tbaa !2447
  %cmp621 = icmp ult i64 %347, %348, !dbg !3372
  br i1 %cmp621, label %cond.true623, label %cond.false624, !dbg !3372

cond.true623:                                     ; preds = %if.end620
  %349 = load i64, i64* %nthreads, align 8, !dbg !3372, !tbaa !2447
  br label %cond.end625, !dbg !3372

cond.false624:                                    ; preds = %if.end620
  %350 = load i64, i64* %nthreads_max, align 8, !dbg !3372, !tbaa !2447
  br label %cond.end625, !dbg !3372

cond.end625:                                      ; preds = %cond.false624, %cond.true623
  %cond626 = phi i64 [ %349, %cond.true623 ], [ %350, %cond.false624 ], !dbg !3372
  store i64 %cond626, i64* %nthreads, align 8, !dbg !3373, !tbaa !2447
  %351 = load i8**, i8*** %files, align 8, !dbg !3374, !tbaa !2286
  %352 = load i64, i64* %nfiles, align 8, !dbg !3375, !tbaa !2447
  %353 = load i8*, i8** %outfile, align 8, !dbg !3376, !tbaa !2286
  %354 = load i64, i64* %nthreads, align 8, !dbg !3377, !tbaa !2447
  call void @sort(i8** %351, i64 %352, i8* %353, i64 %354), !dbg !3378
  br label %if.end627

if.end627:                                        ; preds = %cond.end625, %for.end609
  %355 = load i8, i8* @have_read_stdin, align 1, !dbg !3379, !tbaa !2430
  %tobool628 = trunc i8 %355 to i1, !dbg !3379
  br i1 %tobool628, label %land.lhs.true630, label %if.end636, !dbg !3381

land.lhs.true630:                                 ; preds = %if.end627
  %356 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3382, !tbaa !2286
  %call631 = call i32 @rpl_fclose(%struct._IO_FILE* %356), !dbg !3383
  %cmp632 = icmp eq i32 %call631, -1, !dbg !3384
  br i1 %cmp632, label %if.then634, label %if.end636, !dbg !3385

if.then634:                                       ; preds = %land.lhs.true630
  %call635 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !3386
  call void @sort_die(i8* %call635, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #15, !dbg !3387
  unreachable, !dbg !3387

if.end636:                                        ; preds = %land.lhs.true630, %if.end627
  store i32 0, i32* %retval, align 4, !dbg !3388
  br label %return, !dbg !3388

return:                                           ; preds = %if.end636, %if.end591
  %357 = load i32, i32* %retval, align 4, !dbg !3389
  ret i32 %357, !dbg !3389
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_exit_failure(i32 %status) #4 !dbg !3390 !ctir !86 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !3391, metadata !DIExpression()), !dbg !3392
  %0 = load i32, i32* %status.addr, align 4, !dbg !3393, !tbaa !2273
  %cmp = icmp ne i32 %0, 1, !dbg !3395
  br i1 %cmp, label %if.then, label %if.end, !dbg !3396

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !3397, !tbaa !2273
  store volatile i32 %1, i32* @exit_failure, align 4, !dbg !3398, !tbaa !2273
  br label %if.end, !dbg !3399

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3400
}

; Function Attrs: nounwind
declare dso_local %struct.lconv* @localeconv() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %ch) #4 !dbg !3401 !ctir !319 {
entry:
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !3402, metadata !DIExpression()), !dbg !3403
  %0 = load i8, i8* %ch.addr, align 1, !dbg !3404, !tbaa !2438
  ret i8 %0, !dbg !3405
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @inittables() #4 !dbg !3406 !ctir !168 {
entry:
  %i = alloca i64, align 8, !ctir !55
  %s = alloca i8*, align 8, !ctir !88
  %s_len = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %k = alloca i64, align 8, !ctir !55
  %name = alloca i8*, align 8, !ctir !9
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3407, metadata !DIExpression()), !dbg !3408
  store i64 0, i64* %i, align 8, !dbg !3409, !tbaa !2447
  br label %for.cond, !dbg !3411

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !3412, !tbaa !2447
  %cmp = icmp ult i64 %0, 256, !dbg !3414
  br i1 %cmp, label %for.body, label %for.end, !dbg !3415

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %i, align 8, !dbg !3416, !tbaa !2447
  %conv = trunc i64 %1 to i8, !dbg !3416
  %call = call zeroext i1 @field_sep(i8 zeroext %conv), !dbg !3418
  %2 = load i64, i64* %i, align 8, !dbg !3419, !tbaa !2447
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %2, !dbg !3420, !ctir !322
  %frombool = zext i1 %call to i8, !dbg !3421
  store i8 %frombool, i8* %arrayidx, align 1, !dbg !3421, !tbaa !2430
  %call1 = call i16** @__ctype_b_loc() #16, !dbg !3422
  %3 = load i16*, i16** %call1, align 8, !dbg !3422, !tbaa !2286, !ctir !325
  %4 = load i64, i64* %i, align 8, !dbg !3422, !tbaa !2447
  %conv2 = trunc i64 %4 to i32, !dbg !3422
  %idxprom = sext i32 %conv2 to i64, !dbg !3422
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !3422, !ctir !325
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !3422, !tbaa !3423
  %conv4 = zext i16 %5 to i32, !dbg !3422
  %and = and i32 %conv4, 16384, !dbg !3422
  %tobool = icmp ne i32 %and, 0, !dbg !3425
  %lnot = xor i1 %tobool, true, !dbg !3425
  %6 = load i64, i64* %i, align 8, !dbg !3426, !tbaa !2447
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* @nonprinting, i64 0, i64 %6, !dbg !3427, !ctir !322
  %frombool6 = zext i1 %lnot to i8, !dbg !3428
  store i8 %frombool6, i8* %arrayidx5, align 1, !dbg !3428, !tbaa !2430
  %call7 = call i16** @__ctype_b_loc() #16, !dbg !3429
  %7 = load i16*, i16** %call7, align 8, !dbg !3429, !tbaa !2286, !ctir !325
  %8 = load i64, i64* %i, align 8, !dbg !3429, !tbaa !2447
  %conv8 = trunc i64 %8 to i32, !dbg !3429
  %idxprom9 = sext i32 %conv8 to i64, !dbg !3429
  %arrayidx10 = getelementptr inbounds i16, i16* %7, i64 %idxprom9, !dbg !3429, !ctir !325
  %9 = load i16, i16* %arrayidx10, align 2, !dbg !3429, !tbaa !3423
  %conv11 = zext i16 %9 to i32, !dbg !3429
  %and12 = and i32 %conv11, 8, !dbg !3429
  %tobool13 = icmp ne i32 %and12, 0, !dbg !3429
  br i1 %tobool13, label %land.end, label %land.rhs, !dbg !3430

land.rhs:                                         ; preds = %for.body
  %10 = load i64, i64* %i, align 8, !dbg !3431, !tbaa !2447
  %conv14 = trunc i64 %10 to i8, !dbg !3431
  %call15 = call zeroext i1 @field_sep(i8 zeroext %conv14), !dbg !3432
  %lnot16 = xor i1 %call15, true, !dbg !3433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %11 = phi i1 [ false, %for.body ], [ %lnot16, %land.rhs ], !dbg !3434
  %12 = load i64, i64* %i, align 8, !dbg !3435, !tbaa !2447
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* @nondictionary, i64 0, i64 %12, !dbg !3436, !ctir !322
  %frombool18 = zext i1 %11 to i8, !dbg !3437
  store i8 %frombool18, i8* %arrayidx17, align 1, !dbg !3437, !tbaa !2430
  %13 = load i64, i64* %i, align 8, !dbg !3438, !tbaa !2447
  %conv19 = trunc i64 %13 to i32, !dbg !3438
  %call20 = call i32 @toupper(i32 %conv19) #14, !dbg !3439
  %conv21 = trunc i32 %call20 to i8, !dbg !3439
  %14 = load i64, i64* %i, align 8, !dbg !3440, !tbaa !2447
  %arrayidx22 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %14, !dbg !3441, !ctir !327
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !3442, !tbaa !2438
  br label %for.inc, !dbg !3443

for.inc:                                          ; preds = %land.end
  %15 = load i64, i64* %i, align 8, !dbg !3444, !tbaa !2447
  %inc = add i64 %15, 1, !dbg !3444
  store i64 %inc, i64* %i, align 8, !dbg !3444, !tbaa !2447
  br label %for.cond, !dbg !3445, !llvm.loop !3446

for.end:                                          ; preds = %for.cond
  %16 = load i8, i8* @hard_LC_TIME, align 1, !dbg !3448, !tbaa !2430
  %tobool23 = trunc i8 %16 to i1, !dbg !3448
  br i1 %tobool23, label %if.then, label %if.end65, !dbg !3450

if.then:                                          ; preds = %for.end
  store i64 0, i64* %i, align 8, !dbg !3451, !tbaa !2447
  br label %for.cond24, !dbg !3454

for.cond24:                                       ; preds = %for.inc62, %if.then
  %17 = load i64, i64* %i, align 8, !dbg !3455, !tbaa !2447
  %cmp25 = icmp ult i64 %17, 12, !dbg !3457
  br i1 %cmp25, label %for.body27, label %for.end64, !dbg !3458

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i8** %s, metadata !3459, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.declare(metadata i64* %s_len, metadata !3462, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.declare(metadata i64* %j, metadata !3464, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.declare(metadata i64* %k, metadata !3466, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3468, metadata !DIExpression()), !dbg !3469
  %18 = load i64, i64* %i, align 8, !dbg !3470, !tbaa !2447
  %add = add i64 131086, %18, !dbg !3471
  %conv28 = trunc i64 %add to i32, !dbg !3472
  %call29 = call i8* @nl_langinfo(i32 %conv28) #12, !dbg !3473
  store i8* %call29, i8** %s, align 8, !dbg !3474, !tbaa !2286
  %19 = load i8*, i8** %s, align 8, !dbg !3475, !tbaa !2286
  %call30 = call i64 @strlen(i8* %19) #14, !dbg !3476
  store i64 %call30, i64* %s_len, align 8, !dbg !3477, !tbaa !2447
  %20 = load i64, i64* %s_len, align 8, !dbg !3478, !tbaa !2447
  %add31 = add i64 %20, 1, !dbg !3479
  %call32 = call noalias i8* @xmalloc(i64 %add31), !dbg !3480
  store i8* %call32, i8** %name, align 8, !dbg !3481, !tbaa !2286
  %21 = load i64, i64* %i, align 8, !dbg !3482, !tbaa !2447
  %arrayidx33 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %21, !dbg !3483, !ctir !328
  %name34 = getelementptr inbounds %struct.month, %struct.month* %arrayidx33, i32 0, i32 0, !dbg !3484, !ctir !329
  store i8* %call32, i8** %name34, align 16, !dbg !3485, !tbaa !3486, !ctir !88
  %22 = load i64, i64* %i, align 8, !dbg !3488, !tbaa !2447
  %add35 = add i64 %22, 1, !dbg !3489
  %conv36 = trunc i64 %add35 to i32, !dbg !3488
  %23 = load i64, i64* %i, align 8, !dbg !3490, !tbaa !2447
  %arrayidx37 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %23, !dbg !3491, !ctir !328
  %val = getelementptr inbounds %struct.month, %struct.month* %arrayidx37, i32 0, i32 1, !dbg !3492, !ctir !329
  store i32 %conv36, i32* %val, align 8, !dbg !3493, !tbaa !3494, !ctir !7
  store i64 0, i64* %k, align 8, !dbg !3495, !tbaa !2447
  store i64 0, i64* %j, align 8, !dbg !3497, !tbaa !2447
  br label %for.cond38, !dbg !3498

for.cond38:                                       ; preds = %for.inc58, %for.body27
  %24 = load i64, i64* %j, align 8, !dbg !3499, !tbaa !2447
  %25 = load i64, i64* %s_len, align 8, !dbg !3501, !tbaa !2447
  %cmp39 = icmp ult i64 %24, %25, !dbg !3502
  br i1 %cmp39, label %for.body41, label %for.end60, !dbg !3503

for.body41:                                       ; preds = %for.cond38
  %call42 = call i16** @__ctype_b_loc() #16, !dbg !3504
  %26 = load i16*, i16** %call42, align 8, !dbg !3504, !tbaa !2286, !ctir !325
  %27 = load i8*, i8** %s, align 8, !dbg !3504, !tbaa !2286
  %28 = load i64, i64* %j, align 8, !dbg !3504, !tbaa !2447
  %arrayidx43 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !3504, !ctir !88
  %29 = load i8, i8* %arrayidx43, align 1, !dbg !3504, !tbaa !2438
  %call44 = call zeroext i8 @to_uchar(i8 signext %29), !dbg !3504
  %conv45 = zext i8 %call44 to i32, !dbg !3504
  %idxprom46 = sext i32 %conv45 to i64, !dbg !3504
  %arrayidx47 = getelementptr inbounds i16, i16* %26, i64 %idxprom46, !dbg !3504, !ctir !325
  %30 = load i16, i16* %arrayidx47, align 2, !dbg !3504, !tbaa !3423
  %conv48 = zext i16 %30 to i32, !dbg !3504
  %and49 = and i32 %conv48, 1, !dbg !3504
  %tobool50 = icmp ne i32 %and49, 0, !dbg !3504
  br i1 %tobool50, label %if.end, label %if.then51, !dbg !3506

if.then51:                                        ; preds = %for.body41
  %31 = load i8*, i8** %s, align 8, !dbg !3507, !tbaa !2286
  %32 = load i64, i64* %j, align 8, !dbg !3508, !tbaa !2447
  %arrayidx52 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !3507, !ctir !88
  %33 = load i8, i8* %arrayidx52, align 1, !dbg !3507, !tbaa !2438
  %call53 = call zeroext i8 @to_uchar(i8 signext %33), !dbg !3509
  %idxprom54 = zext i8 %call53 to i64, !dbg !3510
  %arrayidx55 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %idxprom54, !dbg !3510, !ctir !327
  %34 = load i8, i8* %arrayidx55, align 1, !dbg !3510, !tbaa !2438
  %35 = load i8*, i8** %name, align 8, !dbg !3511, !tbaa !2286
  %36 = load i64, i64* %k, align 8, !dbg !3512, !tbaa !2447
  %inc56 = add i64 %36, 1, !dbg !3512
  store i64 %inc56, i64* %k, align 8, !dbg !3512, !tbaa !2447
  %arrayidx57 = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !3511, !ctir !9
  store i8 %34, i8* %arrayidx57, align 1, !dbg !3513, !tbaa !2438
  br label %if.end, !dbg !3511

if.end:                                           ; preds = %if.then51, %for.body41
  br label %for.inc58, !dbg !3504

for.inc58:                                        ; preds = %if.end
  %37 = load i64, i64* %j, align 8, !dbg !3514, !tbaa !2447
  %inc59 = add i64 %37, 1, !dbg !3514
  store i64 %inc59, i64* %j, align 8, !dbg !3514, !tbaa !2447
  br label %for.cond38, !dbg !3515, !llvm.loop !3516

for.end60:                                        ; preds = %for.cond38
  %38 = load i8*, i8** %name, align 8, !dbg !3518, !tbaa !2286
  %39 = load i64, i64* %k, align 8, !dbg !3519, !tbaa !2447
  %arrayidx61 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !3518, !ctir !9
  store i8 0, i8* %arrayidx61, align 1, !dbg !3520, !tbaa !2438
  br label %for.inc62, !dbg !3521

for.inc62:                                        ; preds = %for.end60
  %40 = load i64, i64* %i, align 8, !dbg !3522, !tbaa !2447
  %inc63 = add i64 %40, 1, !dbg !3522
  store i64 %inc63, i64* %i, align 8, !dbg !3522, !tbaa !2447
  br label %for.cond24, !dbg !3523, !llvm.loop !3524

for.end64:                                        ; preds = %for.cond24
  call void @qsort(i8* bitcast ([12 x %struct.month]* @monthtab to i8*), i64 12, i64 16, i32 (i8*, i8*)* @struct_month_cmp), !dbg !3526
  br label %if.end65, !dbg !3527

if.end65:                                         ; preds = %for.end64, %for.end
  ret void, !dbg !3528
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighandler(i32 %sig) #4 !dbg !3529 !ctir !86 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !3530, metadata !DIExpression()), !dbg !3531
  call void @cleanup(), !dbg !3532
  %0 = load i32, i32* %sig.addr, align 4, !dbg !3533, !tbaa !2273
  %call = call void (i32)* @signal(i32 %0, void (i32)* null) #12, !dbg !3534
  %1 = load i32, i32* %sig.addr, align 4, !dbg !3535, !tbaa !2273
  %call1 = call i32 @raise(i32 %1) #12, !dbg !3536
  ret void, !dbg !3537
}

; Function Attrs: nounwind
declare dso_local i32 @sigismember(%struct.__sigset_t*, i32) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @exit_cleanup() #4 !dbg !3538 !ctir !168 {
entry:
  %cs = alloca %struct.cs_status, align 8, !ctir !348
  %0 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !3539, !tbaa !2286
  %tobool = icmp ne %struct.tempnode* %0, null, !dbg !3539
  br i1 %tobool, label %if.then, label %if.end, !dbg !3541

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !3542, metadata !DIExpression()), !dbg !3544
  call void @cs_enter(%struct.cs_status* %cs), !dbg !3545
  call void @cleanup(), !dbg !3546
  call void @cs_leave(%struct.cs_status* %cs), !dbg !3547
  br label %if.end, !dbg !3548

if.end:                                           ; preds = %if.then, %entry
  call void @close_stdout(), !dbg !3549
  ret void, !dbg !3550
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.keyfield* @key_init(%struct.keyfield* %key) #4 !dbg !3551 !ctir !356 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3554, !tbaa !2286
  %1 = bitcast %struct.keyfield* %0 to i8*, !dbg !3555
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 72, i1 false), !dbg !3555
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3556, !tbaa !2286
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 2, !dbg !3557, !ctir !94
  store i64 -1, i64* %eword, align 8, !dbg !3558, !tbaa !2760, !ctir !55
  %3 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3559, !tbaa !2286
  ret %struct.keyfield* %3, !dbg !3560
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_field_count(i8* %string, i64* %val, i8* %msgid) #4 !dbg !3561 !ctir !358 {
entry:
  %retval = alloca i8*, align 8
  %string.addr = alloca i8*, align 8
  %val.addr = alloca i64*, align 8
  %msgid.addr = alloca i8*, align 8
  %suffix = alloca i8*, align 8, !ctir !9
  %n = alloca i64, align 8, !ctir !361
  store i8* %string, i8** %string.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3562, metadata !DIExpression()), !dbg !3563
  store i64* %val, i64** %val.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !3564, metadata !DIExpression()), !dbg !3565
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !3566, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3570, metadata !DIExpression()), !dbg !3571
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3572, !tbaa !2286
  %call = call i32 @xstrtoumax(i8* %0, i8** %suffix, i32 10, i64* %n, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)), !dbg !3573
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb1
    i32 4, label %sw.bb2
  ], !dbg !3574

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i64, i64* %n, align 8, !dbg !3575, !tbaa !2447
  %2 = load i64*, i64** %val.addr, align 8, !dbg !3577, !tbaa !2286
  store i64 %1, i64* %2, align 8, !dbg !3578, !tbaa !2447, !ctir !55
  %3 = load i64*, i64** %val.addr, align 8, !dbg !3579, !tbaa !2286
  %4 = load i64, i64* %3, align 8, !dbg !3581, !tbaa !2447, !ctir !55
  %5 = load i64, i64* %n, align 8, !dbg !3582, !tbaa !2447
  %cmp = icmp eq i64 %4, %5, !dbg !3583
  br i1 %cmp, label %if.then, label %if.end, !dbg !3584

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !3585

if.end:                                           ; preds = %sw.bb
  br label %sw.bb1, !dbg !3586

sw.bb1:                                           ; preds = %entry, %entry, %if.end
  %6 = load i64*, i64** %val.addr, align 8, !dbg !3587, !tbaa !2286
  store i64 -1, i64* %6, align 8, !dbg !3588, !tbaa !2447, !ctir !55
  br label %sw.epilog, !dbg !3589

sw.bb2:                                           ; preds = %entry
  %7 = load i8*, i8** %msgid.addr, align 8, !dbg !3590, !tbaa !2286
  %tobool = icmp ne i8* %7, null, !dbg !3590
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !3592

if.then3:                                         ; preds = %sw.bb2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.124, i64 0, i64 0)) #12, !dbg !3593
  %8 = load i8*, i8** %msgid.addr, align 8, !dbg !3593, !tbaa !2286
  %call5 = call i8* @gettext(i8* %8) #12, !dbg !3593
  %9 = load i8*, i8** %string.addr, align 8, !dbg !3593, !tbaa !2286
  %call6 = call i8* @quote(i8* %9), !dbg !3593
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call4, i8* %call5, i8* %call6), !dbg !3593
  unreachable, !dbg !3593

if.end7:                                          ; preds = %sw.bb2
  store i8* null, i8** %retval, align 8, !dbg !3594
  br label %return, !dbg !3594

sw.epilog:                                        ; preds = %entry, %sw.bb1, %if.then
  %10 = load i8*, i8** %suffix, align 8, !dbg !3595, !tbaa !2286
  store i8* %10, i8** %retval, align 8, !dbg !3596
  br label %return, !dbg !3596

return:                                           ; preds = %sw.epilog, %if.end7
  %11 = load i8*, i8** %retval, align 8, !dbg !3597
  ret i8* %11, !dbg !3597
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @set_ordering(i8* %s, %struct.keyfield* %key, i32 %blanktype) #4 !dbg !3598 !ctir !364 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %key.addr = alloca %struct.keyfield*, align 8
  %blanktype.addr = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3599, metadata !DIExpression()), !dbg !3600
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !3601, metadata !DIExpression()), !dbg !3602
  store i32 %blanktype, i32* %blanktype.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %blanktype.addr, metadata !3603, metadata !DIExpression()), !dbg !3604
  br label %while.cond, !dbg !3605

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3606, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !3607, !tbaa !2438, !ctir !89
  %tobool = icmp ne i8 %1, 0, !dbg !3605
  br i1 %tobool, label %while.body, label %while.end, !dbg !3605

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !3608, !tbaa !2286
  %3 = load i8, i8* %2, align 1, !dbg !3610, !tbaa !2438, !ctir !89
  %conv = sext i8 %3 to i32, !dbg !3610
  switch i32 %conv, label %sw.default [
    i32 98, label %sw.bb
    i32 100, label %sw.bb11
    i32 102, label %sw.bb12
    i32 103, label %sw.bb13
    i32 104, label %sw.bb14
    i32 105, label %sw.bb15
    i32 77, label %sw.bb21
    i32 110, label %sw.bb22
    i32 82, label %sw.bb23
    i32 114, label %sw.bb24
    i32 86, label %sw.bb25
  ], !dbg !3611

sw.bb:                                            ; preds = %while.body
  %4 = load i32, i32* %blanktype.addr, align 4, !dbg !3612, !tbaa !2438
  %cmp = icmp eq i32 %4, 0, !dbg !3615
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3616

lor.lhs.false:                                    ; preds = %sw.bb
  %5 = load i32, i32* %blanktype.addr, align 4, !dbg !3617, !tbaa !2438
  %cmp2 = icmp eq i32 %5, 2, !dbg !3618
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3619

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %6 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3620, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 6, !dbg !3621, !ctir !94
  store i8 1, i8* %skipsblanks, align 8, !dbg !3622, !tbaa !3153, !ctir !103
  br label %if.end, !dbg !3620

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %7 = load i32, i32* %blanktype.addr, align 4, !dbg !3623, !tbaa !2438
  %cmp4 = icmp eq i32 %7, 1, !dbg !3625
  br i1 %cmp4, label %if.then9, label %lor.lhs.false6, !dbg !3626

lor.lhs.false6:                                   ; preds = %if.end
  %8 = load i32, i32* %blanktype.addr, align 4, !dbg !3627, !tbaa !2438
  %cmp7 = icmp eq i32 %8, 2, !dbg !3628
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !3629

if.then9:                                         ; preds = %lor.lhs.false6, %if.end
  %9 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3630, !tbaa !2286
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 7, !dbg !3631, !ctir !94
  store i8 1, i8* %skipeblanks, align 1, !dbg !3632, !tbaa !3158, !ctir !103
  br label %if.end10, !dbg !3630

if.end10:                                         ; preds = %if.then9, %lor.lhs.false6
  br label %sw.epilog, !dbg !3633

sw.bb11:                                          ; preds = %while.body
  %10 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3634, !tbaa !2286
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %10, i32 0, i32 4, !dbg !3635, !ctir !94
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nondictionary, i64 0, i64 0), i8** %ignore, align 8, !dbg !3636, !tbaa !3143, !ctir !101
  br label %sw.epilog, !dbg !3637

sw.bb12:                                          ; preds = %while.body
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3638, !tbaa !2286
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 5, !dbg !3639, !ctir !94
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 0), i8** %translate, align 8, !dbg !3640, !tbaa !3148, !ctir !88
  br label %sw.epilog, !dbg !3641

sw.bb13:                                          ; preds = %while.body
  %12 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3642, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %12, i32 0, i32 10, !dbg !3643, !ctir !94
  store i8 1, i8* %general_numeric, align 4, !dbg !3644, !tbaa !3173, !ctir !103
  br label %sw.epilog, !dbg !3645

sw.bb14:                                          ; preds = %while.body
  %13 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3646, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %13, i32 0, i32 11, !dbg !3647, !ctir !94
  store i8 1, i8* %human_numeric, align 1, !dbg !3648, !tbaa !3178, !ctir !103
  br label %sw.epilog, !dbg !3649

sw.bb15:                                          ; preds = %while.body
  %14 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3650, !tbaa !2286
  %ignore16 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %14, i32 0, i32 4, !dbg !3652, !ctir !94
  %15 = load i8*, i8** %ignore16, align 8, !dbg !3652, !tbaa !3143, !ctir !101
  %tobool17 = icmp ne i8* %15, null, !dbg !3650
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !3653

if.then18:                                        ; preds = %sw.bb15
  %16 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3654, !tbaa !2286
  %ignore19 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %16, i32 0, i32 4, !dbg !3655, !ctir !94
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nonprinting, i64 0, i64 0), i8** %ignore19, align 8, !dbg !3656, !tbaa !3143, !ctir !101
  br label %if.end20, !dbg !3654

if.end20:                                         ; preds = %if.then18, %sw.bb15
  br label %sw.epilog, !dbg !3657

sw.bb21:                                          ; preds = %while.body
  %17 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3658, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 12, !dbg !3659, !ctir !94
  store i8 1, i8* %month, align 2, !dbg !3660, !tbaa !3163, !ctir !103
  br label %sw.epilog, !dbg !3661

sw.bb22:                                          ; preds = %while.body
  %18 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3662, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %18, i32 0, i32 8, !dbg !3663, !ctir !94
  store i8 1, i8* %numeric, align 2, !dbg !3664, !tbaa !3168, !ctir !103
  br label %sw.epilog, !dbg !3665

sw.bb23:                                          ; preds = %while.body
  %19 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3666, !tbaa !2286
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %19, i32 0, i32 9, !dbg !3667, !ctir !94
  store i8 1, i8* %random, align 1, !dbg !3668, !tbaa !3188, !ctir !103
  br label %sw.epilog, !dbg !3669

sw.bb24:                                          ; preds = %while.body
  %20 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3670, !tbaa !2286
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %20, i32 0, i32 13, !dbg !3671, !ctir !94
  store i8 1, i8* %reverse, align 1, !dbg !3672, !tbaa !3139, !ctir !103
  br label %sw.epilog, !dbg !3673

sw.bb25:                                          ; preds = %while.body
  %21 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !3674, !tbaa !2286
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %21, i32 0, i32 14, !dbg !3675, !ctir !94
  store i8 1, i8* %version, align 8, !dbg !3676, !tbaa !3183, !ctir !103
  br label %sw.epilog, !dbg !3677

sw.default:                                       ; preds = %while.body
  %22 = load i8*, i8** %s.addr, align 8, !dbg !3678, !tbaa !2286
  store i8* %22, i8** %retval, align 8, !dbg !3679
  br label %return, !dbg !3679

sw.epilog:                                        ; preds = %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %if.end20, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %if.end10
  %23 = load i8*, i8** %s.addr, align 8, !dbg !3680, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !3680
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !3680, !tbaa !2286
  br label %while.cond, !dbg !3605, !llvm.loop !3681

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %s.addr, align 8, !dbg !3683, !tbaa !2286
  store i8* %24, i8** %retval, align 8, !dbg !3684
  br label %return, !dbg !3684

return:                                           ; preds = %while.end, %sw.default
  %25 = load i8*, i8** %retval, align 8, !dbg !3685
  ret i8* %25, !dbg !3685
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @badfieldspec(i8* %spec, i8* %msgid) #0 !dbg !3686 !ctir !366 {
entry:
  %spec.addr = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !3689, metadata !DIExpression()), !dbg !3690
  %call = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.125, i64 0, i64 0)) #12, !dbg !3691
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !3691, !tbaa !2286
  %call1 = call i8* @gettext(i8* %0) #12, !dbg !3691
  %1 = load i8*, i8** %spec.addr, align 8, !dbg !3691, !tbaa !2286
  %call2 = call i8* @quote(i8* %1), !dbg !3691
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call, i8* %call1, i8* %call2), !dbg !3691
  unreachable, !dbg !3691
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @insertkey(%struct.keyfield* %key_arg) #4 !dbg !3692 !ctir !368 {
entry:
  %key_arg.addr = alloca %struct.keyfield*, align 8
  %p = alloca %struct.keyfield**, align 8, !ctir !370
  %key = alloca %struct.keyfield*, align 8, !ctir !93
  store %struct.keyfield* %key_arg, %struct.keyfield** %key_arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key_arg.addr, metadata !3693, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.declare(metadata %struct.keyfield*** %p, metadata !3695, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !3697, metadata !DIExpression()), !dbg !3698
  %0 = load %struct.keyfield*, %struct.keyfield** %key_arg.addr, align 8, !dbg !3699, !tbaa !2286
  %1 = bitcast %struct.keyfield* %0 to i8*, !dbg !3699
  %call = call i8* @xmemdup(i8* %1, i64 72), !dbg !3700
  %2 = bitcast i8* %call to %struct.keyfield*, !dbg !3700
  store %struct.keyfield* %2, %struct.keyfield** %key, align 8, !dbg !3698, !tbaa !2286
  store %struct.keyfield** @keylist, %struct.keyfield*** %p, align 8, !dbg !3701, !tbaa !2286
  br label %for.cond, !dbg !3703

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.keyfield**, %struct.keyfield*** %p, align 8, !dbg !3704, !tbaa !2286
  %4 = load %struct.keyfield*, %struct.keyfield** %3, align 8, !dbg !3706, !tbaa !2286, !ctir !93
  %tobool = icmp ne %struct.keyfield* %4, null, !dbg !3707
  br i1 %tobool, label %for.body, label %for.end, !dbg !3707

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !3708

for.inc:                                          ; preds = %for.body
  %5 = load %struct.keyfield**, %struct.keyfield*** %p, align 8, !dbg !3709, !tbaa !2286
  %6 = load %struct.keyfield*, %struct.keyfield** %5, align 8, !dbg !3710, !tbaa !2286, !ctir !93
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 16, !dbg !3711, !ctir !94
  store %struct.keyfield** %next, %struct.keyfield*** %p, align 8, !dbg !3712, !tbaa !2286
  br label %for.cond, !dbg !3713, !llvm.loop !3714

for.end:                                          ; preds = %for.cond
  %7 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3716, !tbaa !2286
  %8 = load %struct.keyfield**, %struct.keyfield*** %p, align 8, !dbg !3717, !tbaa !2286
  store %struct.keyfield* %7, %struct.keyfield** %8, align 8, !dbg !3718, !tbaa !2286, !ctir !93
  %9 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !3719, !tbaa !2286
  %next1 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 16, !dbg !3720, !ctir !94
  store %struct.keyfield* null, %struct.keyfield** %next1, align 8, !dbg !3721, !tbaa !3203, !ctir !93
  ret void, !dbg !3722
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @incompatible_options(i8* %opts) #0 !dbg !3723 !ctir !306 {
entry:
  %opts.addr = alloca i8*, align 8
  store i8* %opts, i8** %opts.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %opts.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  %call = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.134, i64 0, i64 0)) #12, !dbg !3726
  %0 = load i8*, i8** %opts.addr, align 8, !dbg !3726, !tbaa !2286
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call, i8* %0), !dbg !3726
  unreachable, !dbg !3726
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @specify_nmerge(i32 %oi, i8 signext %c, i8* %s) #4 !dbg !3727 !ctir !371 {
entry:
  %oi.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %s.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !361
  %rlimit = alloca %struct.timespec, align 8, !ctir !3728
  %e = alloca i32, align 4, !ctir !74
  %max_nmerge = alloca i32, align 4, !ctir !69
  %max_nmerge_buf = alloca [11 x i8], align 1, !ctir !376
  store i32 %oi, i32* %oi.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %oi.addr, metadata !3732, metadata !DIExpression()), !dbg !3733
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3734, metadata !DIExpression()), !dbg !3735
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3736, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3738, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.declare(metadata %struct.timespec* %rlimit, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3742, metadata !DIExpression()), !dbg !3743
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3744, !tbaa !2286
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 10, i64* %n, i8* null), !dbg !3745
  store i32 %call, i32* %e, align 4, !dbg !3743, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %max_nmerge, metadata !3746, metadata !DIExpression()), !dbg !3747
  %call1 = call i32 @getrlimit(i32 7, %struct.timespec* %rlimit) #12, !dbg !3748
  %cmp = icmp eq i32 %call1, 0, !dbg !3749
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3748

cond.true:                                        ; preds = %entry
  %rlim_cur = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !3750, !ctir !3728
  %1 = load i64, i64* %rlim_cur, align 8, !dbg !3750, !tbaa !3751, !ctir !373
  br label %cond.end, !dbg !3748

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %1, %cond.true ], [ 20, %cond.false ], !dbg !3748
  %sub = sub i64 %cond, 3, !dbg !3753
  %conv = trunc i64 %sub to i32, !dbg !3754
  store i32 %conv, i32* %max_nmerge, align 4, !dbg !3747, !tbaa !2273
  %2 = load i32, i32* %e, align 4, !dbg !3755, !tbaa !2438
  %cmp2 = icmp eq i32 %2, 0, !dbg !3757
  br i1 %cmp2, label %if.then, label %if.end26, !dbg !3758

if.then:                                          ; preds = %cond.end
  %3 = load i64, i64* %n, align 8, !dbg !3759, !tbaa !2447
  %conv4 = trunc i64 %3 to i32, !dbg !3759
  store i32 %conv4, i32* @nmerge, align 4, !dbg !3761, !tbaa !2273
  %4 = load i32, i32* @nmerge, align 4, !dbg !3762, !tbaa !2273
  %conv5 = zext i32 %4 to i64, !dbg !3762
  %5 = load i64, i64* %n, align 8, !dbg !3764, !tbaa !2447
  %cmp6 = icmp ne i64 %conv5, %5, !dbg !3765
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !3766

if.then8:                                         ; preds = %if.then
  store i32 1, i32* %e, align 4, !dbg !3767, !tbaa !2438
  br label %if.end25, !dbg !3768

if.else:                                          ; preds = %if.then
  %6 = load i32, i32* @nmerge, align 4, !dbg !3769, !tbaa !2273
  %cmp9 = icmp ult i32 %6, 2, !dbg !3772
  br i1 %cmp9, label %if.then11, label %if.else19, !dbg !3773

if.then11:                                        ; preds = %if.else
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.135, i64 0, i64 0)) #12, !dbg !3774
  %7 = load i32, i32* %oi.addr, align 4, !dbg !3776, !tbaa !2273
  %idxprom = sext i32 %7 to i64, !dbg !3777
  %arrayidx = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom, !dbg !3777, !ctir !256
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx, i32 0, i32 0, !dbg !3778, !ctir !257
  %8 = load i8*, i8** %name, align 16, !dbg !3778, !tbaa !3779, !ctir !88
  %9 = load i8*, i8** %s.addr, align 8, !dbg !3781, !tbaa !2286
  %call13 = call i8* @quote(i8* %9), !dbg !3782
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call12, i8* %8, i8* %call13), !dbg !3783
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.136, i64 0, i64 0)) #12, !dbg !3784
  %10 = load i32, i32* %oi.addr, align 4, !dbg !3784, !tbaa !2273
  %idxprom15 = sext i32 %10 to i64, !dbg !3784
  %arrayidx16 = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom15, !dbg !3784, !ctir !256
  %name17 = getelementptr inbounds %struct.option, %struct.option* %arrayidx16, i32 0, i32 0, !dbg !3784, !ctir !257
  %11 = load i8*, i8** %name17, align 16, !dbg !3784, !tbaa !3779, !ctir !88
  %call18 = call i8* @quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.137, i64 0, i64 0)), !dbg !3784
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call14, i8* %11, i8* %call18), !dbg !3784
  unreachable, !dbg !3784

if.else19:                                        ; preds = %if.else
  %12 = load i32, i32* %max_nmerge, align 4, !dbg !3785, !tbaa !2273
  %13 = load i32, i32* @nmerge, align 4, !dbg !3787, !tbaa !2273
  %cmp20 = icmp ult i32 %12, %13, !dbg !3788
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !3789

if.then22:                                        ; preds = %if.else19
  store i32 1, i32* %e, align 4, !dbg !3790, !tbaa !2438
  br label %if.end, !dbg !3792

if.else23:                                        ; preds = %if.else19
  ret void, !dbg !3793

if.end:                                           ; preds = %if.then22
  br label %if.end24

if.end24:                                         ; preds = %if.end
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then8
  br label %if.end26, !dbg !3794

if.end26:                                         ; preds = %if.end25, %cond.end
  %14 = load i32, i32* %e, align 4, !dbg !3795, !tbaa !2438
  %cmp27 = icmp eq i32 %14, 1, !dbg !3797
  br i1 %cmp27, label %if.then29, label %if.else40, !dbg !3798

if.then29:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata [11 x i8]* %max_nmerge_buf, metadata !3799, metadata !DIExpression()), !dbg !3801
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.138, i64 0, i64 0)) #12, !dbg !3802
  %15 = load i32, i32* %oi.addr, align 4, !dbg !3803, !tbaa !2273
  %idxprom31 = sext i32 %15 to i64, !dbg !3804
  %arrayidx32 = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom31, !dbg !3804, !ctir !256
  %name33 = getelementptr inbounds %struct.option, %struct.option* %arrayidx32, i32 0, i32 0, !dbg !3805, !ctir !257
  %16 = load i8*, i8** %name33, align 16, !dbg !3805, !tbaa !3779, !ctir !88
  %17 = load i8*, i8** %s.addr, align 8, !dbg !3806, !tbaa !2286
  %call34 = call i8* @quote(i8* %17), !dbg !3807
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call30, i8* %16, i8* %call34), !dbg !3808
  %call35 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.139, i64 0, i64 0)) #12, !dbg !3809
  %18 = load i32, i32* %oi.addr, align 4, !dbg !3809, !tbaa !2273
  %idxprom36 = sext i32 %18 to i64, !dbg !3809
  %arrayidx37 = getelementptr inbounds [31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 %idxprom36, !dbg !3809, !ctir !256
  %name38 = getelementptr inbounds %struct.option, %struct.option* %arrayidx37, i32 0, i32 0, !dbg !3809, !ctir !257
  %19 = load i8*, i8** %name38, align 16, !dbg !3809, !tbaa !3779, !ctir !88
  %20 = load i32, i32* %max_nmerge, align 4, !dbg !3809, !tbaa !2273
  %arraydecay = getelementptr inbounds [11 x i8], [11 x i8]* %max_nmerge_buf, i64 0, i64 0, !dbg !3809
  %call39 = call i8* @uinttostr(i32 %20, i8* %arraydecay), !dbg !3809
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call35, i8* %19, i8* %call39), !dbg !3809
  unreachable, !dbg !3809

if.else40:                                        ; preds = %if.end26
  %21 = load i32, i32* %e, align 4, !dbg !3810, !tbaa !2438
  %22 = load i32, i32* %oi.addr, align 4, !dbg !3811, !tbaa !2273
  %23 = load i8, i8* %c.addr, align 1, !dbg !3812, !tbaa !2438
  %24 = load i8*, i8** %s.addr, align 8, !dbg !3813, !tbaa !2286
  call void @xstrtol_fatal(i32 %21, i32 %22, i8 signext %23, %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i8* %24) #15, !dbg !3814
  unreachable, !dbg !3814
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @specify_sort_size(i32 %oi, i8 signext %c, i8* %s) #4 !dbg !3815 !ctir !371 {
entry:
  %oi.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %s.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !361
  %suffix = alloca i8*, align 8, !ctir !9
  %e = alloca i32, align 4, !ctir !74
  %mem = alloca double, align 8, !ctir !377
  store i32 %oi, i32* %oi.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %oi.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3818, metadata !DIExpression()), !dbg !3819
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3820, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3822, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !3824, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3826, metadata !DIExpression()), !dbg !3827
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3828, !tbaa !2286
  %call = call i32 @xstrtoumax(i8* %0, i8** %suffix, i32 10, i64* %n, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i64 0, i64 0)), !dbg !3829
  store i32 %call, i32* %e, align 4, !dbg !3827, !tbaa !2438
  %1 = load i32, i32* %e, align 4, !dbg !3830, !tbaa !2438
  %cmp = icmp eq i32 %1, 0, !dbg !3832
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !3833

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %suffix, align 8, !dbg !3834, !tbaa !2286
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 -1, !dbg !3834, !ctir !9
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3834, !tbaa !2438
  %conv = sext i8 %3 to i32, !dbg !3834
  %sub = sub i32 %conv, 48, !dbg !3834
  %cmp1 = icmp ule i32 %sub, 9, !dbg !3834
  br i1 %cmp1, label %if.then, label %if.end6, !dbg !3835

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, i64* %n, align 8, !dbg !3836, !tbaa !2447
  %cmp3 = icmp ule i64 %4, 18014398509481983, !dbg !3839
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3840

if.then5:                                         ; preds = %if.then
  %5 = load i64, i64* %n, align 8, !dbg !3841, !tbaa !2447
  %mul = mul i64 %5, 1024, !dbg !3841
  store i64 %mul, i64* %n, align 8, !dbg !3841, !tbaa !2447
  br label %if.end, !dbg !3842

if.else:                                          ; preds = %if.then
  store i32 1, i32* %e, align 4, !dbg !3843, !tbaa !2438
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end6, !dbg !3844

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %6 = load i32, i32* %e, align 4, !dbg !3845, !tbaa !2438
  %cmp7 = icmp eq i32 %6, 2, !dbg !3847
  br i1 %cmp7, label %land.lhs.true9, label %if.end30, !dbg !3848

land.lhs.true9:                                   ; preds = %if.end6
  %7 = load i8*, i8** %suffix, align 8, !dbg !3849, !tbaa !2286
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 -1, !dbg !3849, !ctir !9
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !3849, !tbaa !2438
  %conv11 = sext i8 %8 to i32, !dbg !3849
  %sub12 = sub i32 %conv11, 48, !dbg !3849
  %cmp13 = icmp ule i32 %sub12, 9, !dbg !3849
  br i1 %cmp13, label %land.lhs.true15, label %if.end30, !dbg !3850

land.lhs.true15:                                  ; preds = %land.lhs.true9
  %9 = load i8*, i8** %suffix, align 8, !dbg !3851, !tbaa !2286
  %arrayidx16 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !3851, !ctir !9
  %10 = load i8, i8* %arrayidx16, align 1, !dbg !3851, !tbaa !2438
  %tobool = icmp ne i8 %10, 0, !dbg !3851
  br i1 %tobool, label %if.end30, label %if.then17, !dbg !3852

if.then17:                                        ; preds = %land.lhs.true15
  %11 = load i8*, i8** %suffix, align 8, !dbg !3853, !tbaa !2286
  %arrayidx18 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !3853, !ctir !9
  %12 = load i8, i8* %arrayidx18, align 1, !dbg !3853, !tbaa !2438
  %conv19 = sext i8 %12 to i32, !dbg !3853
  switch i32 %conv19, label %sw.epilog [
    i32 98, label %sw.bb
    i32 37, label %sw.bb20
  ], !dbg !3854

sw.bb:                                            ; preds = %if.then17
  store i32 0, i32* %e, align 4, !dbg !3855, !tbaa !2438
  br label %sw.epilog, !dbg !3857

sw.bb20:                                          ; preds = %if.then17
  call void @llvm.dbg.declare(metadata double* %mem, metadata !3858, metadata !DIExpression()), !dbg !3860
  %call21 = call double @physmem_total(), !dbg !3861
  %13 = load i64, i64* %n, align 8, !dbg !3862, !tbaa !2447
  %conv22 = uitofp i64 %13 to double, !dbg !3862
  %mul23 = fmul double %call21, %conv22, !dbg !3863
  %div = fdiv double %mul23, 1.000000e+02, !dbg !3864
  store double %div, double* %mem, align 8, !dbg !3860, !tbaa !3865
  %14 = load double, double* %mem, align 8, !dbg !3867, !tbaa !3865
  %cmp24 = fcmp olt double %14, 0x43F0000000000000, !dbg !3869
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !3870

if.then26:                                        ; preds = %sw.bb20
  %15 = load double, double* %mem, align 8, !dbg !3871, !tbaa !3865
  %conv27 = fptoui double %15 to i64, !dbg !3871
  store i64 %conv27, i64* %n, align 8, !dbg !3873, !tbaa !2447
  store i32 0, i32* %e, align 4, !dbg !3874, !tbaa !2438
  br label %if.end29, !dbg !3875

if.else28:                                        ; preds = %sw.bb20
  store i32 1, i32* %e, align 4, !dbg !3876, !tbaa !2438
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then26
  br label %sw.epilog, !dbg !3877

sw.epilog:                                        ; preds = %if.then17, %if.end29, %sw.bb
  br label %if.end30, !dbg !3878

if.end30:                                         ; preds = %sw.epilog, %land.lhs.true15, %land.lhs.true9, %if.end6
  %16 = load i32, i32* %e, align 4, !dbg !3879, !tbaa !2438
  %cmp31 = icmp eq i32 %16, 0, !dbg !3881
  br i1 %cmp31, label %if.then33, label %if.end48, !dbg !3882

if.then33:                                        ; preds = %if.end30
  %17 = load i64, i64* %n, align 8, !dbg !3883, !tbaa !2447
  %18 = load i64, i64* @sort_size, align 8, !dbg !3886, !tbaa !2447
  %cmp34 = icmp ult i64 %17, %18, !dbg !3887
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3888

if.then36:                                        ; preds = %if.then33
  br label %return, !dbg !3889

if.end37:                                         ; preds = %if.then33
  %19 = load i64, i64* %n, align 8, !dbg !3890, !tbaa !2447
  store i64 %19, i64* @sort_size, align 8, !dbg !3891, !tbaa !2447
  %20 = load i64, i64* @sort_size, align 8, !dbg !3892, !tbaa !2447
  %21 = load i64, i64* %n, align 8, !dbg !3894, !tbaa !2447
  %cmp38 = icmp eq i64 %20, %21, !dbg !3895
  br i1 %cmp38, label %if.then40, label %if.end47, !dbg !3896

if.then40:                                        ; preds = %if.end37
  %22 = load i64, i64* @sort_size, align 8, !dbg !3897, !tbaa !2447
  %23 = load i32, i32* @nmerge, align 4, !dbg !3897, !tbaa !2273
  %conv41 = zext i32 %23 to i64, !dbg !3897
  %mul42 = mul i64 %conv41, 34, !dbg !3897
  %cmp43 = icmp ugt i64 %22, %mul42, !dbg !3897
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !3897

cond.true:                                        ; preds = %if.then40
  %24 = load i64, i64* @sort_size, align 8, !dbg !3897, !tbaa !2447
  br label %cond.end, !dbg !3897

cond.false:                                       ; preds = %if.then40
  %25 = load i32, i32* @nmerge, align 4, !dbg !3897, !tbaa !2273
  %conv45 = zext i32 %25 to i64, !dbg !3897
  %mul46 = mul i64 %conv45, 34, !dbg !3897
  br label %cond.end, !dbg !3897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %24, %cond.true ], [ %mul46, %cond.false ], !dbg !3897
  store i64 %cond, i64* @sort_size, align 8, !dbg !3899, !tbaa !2447
  br label %return, !dbg !3900

if.end47:                                         ; preds = %if.end37
  store i32 1, i32* %e, align 4, !dbg !3901, !tbaa !2438
  br label %if.end48, !dbg !3902

if.end48:                                         ; preds = %if.end47, %if.end30
  %26 = load i32, i32* %e, align 4, !dbg !3903, !tbaa !2438
  %27 = load i32, i32* %oi.addr, align 4, !dbg !3904, !tbaa !2273
  %28 = load i8, i8* %c.addr, align 1, !dbg !3905, !tbaa !2438
  %29 = load i8*, i8** %s.addr, align 8, !dbg !3906, !tbaa !2286
  call void @xstrtol_fatal(i32 %26, i32 %27, i8 signext %28, %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i8* %29) #15, !dbg !3907
  unreachable, !dbg !3907

return:                                           ; preds = %cond.end, %if.then36
  ret void, !dbg !3908
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_temp_dir(i8* %dir) #4 !dbg !3909 !ctir !306 {
entry:
  %dir.addr = alloca i8*, align 8
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3910, metadata !DIExpression()), !dbg !3911
  %0 = load i64, i64* @temp_dir_count, align 8, !dbg !3912, !tbaa !2447
  %1 = load i64, i64* @temp_dir_alloc, align 8, !dbg !3914, !tbaa !2447
  %cmp = icmp eq i64 %0, %1, !dbg !3915
  br i1 %cmp, label %if.then, label %if.end, !dbg !3916

if.then:                                          ; preds = %entry
  %2 = load i8**, i8*** @temp_dirs, align 8, !dbg !3917, !tbaa !2286
  %3 = bitcast i8** %2 to i8*, !dbg !3917
  %call = call i8* @x2nrealloc(i8* %3, i64* @temp_dir_alloc, i64 8), !dbg !3917
  %4 = bitcast i8* %call to i8**, !dbg !3917
  store i8** %4, i8*** @temp_dirs, align 8, !dbg !3918, !tbaa !2286
  br label %if.end, !dbg !3919

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !3920, !tbaa !2286
  %6 = load i8**, i8*** @temp_dirs, align 8, !dbg !3921, !tbaa !2286
  %7 = load i64, i64* @temp_dir_count, align 8, !dbg !3922, !tbaa !2447
  %inc = add i64 %7, 1, !dbg !3922
  store i64 %inc, i64* @temp_dir_count, align 8, !dbg !3922, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !3921, !ctir !378
  store i8* %5, i8** %arrayidx, align 8, !dbg !3923, !tbaa !2286
  ret void, !dbg !3924
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @specify_nthreads(i32 %oi, i8 signext %c, i8* %s) #4 !dbg !3925 !ctir !379 {
entry:
  %retval = alloca i64, align 8
  %oi.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %s.addr = alloca i8*, align 8
  %nthreads = alloca i64, align 8, !ctir !57
  %e = alloca i32, align 4, !ctir !74
  store i32 %oi, i32* %oi.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %oi.addr, metadata !3926, metadata !DIExpression()), !dbg !3927
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !3928, metadata !DIExpression()), !dbg !3929
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3930, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.declare(metadata i64* %nthreads, metadata !3932, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3934, metadata !DIExpression()), !dbg !3935
  %0 = load i8*, i8** %s.addr, align 8, !dbg !3936, !tbaa !2286
  %call = call i32 @xstrtoul(i8* %0, i8** null, i32 10, i64* %nthreads, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)), !dbg !3937
  store i32 %call, i32* %e, align 4, !dbg !3935, !tbaa !2438
  %1 = load i32, i32* %e, align 4, !dbg !3938, !tbaa !2438
  %cmp = icmp eq i32 %1, 1, !dbg !3940
  br i1 %cmp, label %if.then, label %if.end, !dbg !3941

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !3942
  br label %return, !dbg !3942

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %e, align 4, !dbg !3943, !tbaa !2438
  %cmp1 = icmp ne i32 %2, 0, !dbg !3945
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3946

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %e, align 4, !dbg !3947, !tbaa !2438
  %4 = load i32, i32* %oi.addr, align 4, !dbg !3948, !tbaa !2273
  %5 = load i8, i8* %c.addr, align 1, !dbg !3949, !tbaa !2438
  %6 = load i8*, i8** %s.addr, align 8, !dbg !3950, !tbaa !2286
  call void @xstrtol_fatal(i32 %3, i32 %4, i8 signext %5, %struct.option* getelementptr inbounds ([31 x %struct.option], [31 x %struct.option]* @long_options, i64 0, i64 0), i8* %6) #15, !dbg !3951
  unreachable, !dbg !3951

if.end3:                                          ; preds = %if.end
  %7 = load i64, i64* %nthreads, align 8, !dbg !3952, !tbaa !2447
  %cmp4 = icmp ult i64 -1, %7, !dbg !3954
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3955

if.then5:                                         ; preds = %if.end3
  store i64 -1, i64* %nthreads, align 8, !dbg !3956, !tbaa !2447
  br label %if.end6, !dbg !3957

if.end6:                                          ; preds = %if.then5, %if.end3
  %8 = load i64, i64* %nthreads, align 8, !dbg !3958, !tbaa !2447
  %cmp7 = icmp eq i64 %8, 0, !dbg !3960
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !3961

if.then8:                                         ; preds = %if.end6
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.141, i64 0, i64 0)) #12, !dbg !3962
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call9), !dbg !3962
  unreachable, !dbg !3962

if.end10:                                         ; preds = %if.end6
  %9 = load i64, i64* %nthreads, align 8, !dbg !3963, !tbaa !2447
  store i64 %9, i64* %retval, align 8, !dbg !3964
  br label %return, !dbg !3964

return:                                           ; preds = %if.end10, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !3965
  ret i64 %10, !dbg !3965
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @xfopen(i8* %file, i8* %how) #4 !dbg !3966 !ctir !381 {
entry:
  %file.addr = alloca i8*, align 8
  %how.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !0
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3967, metadata !DIExpression()), !dbg !3968
  store i8* %how, i8** %how.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %how.addr, metadata !3969, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !3971, metadata !DIExpression()), !dbg !3972
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3973, !tbaa !2286
  %1 = load i8*, i8** %how.addr, align 8, !dbg !3974, !tbaa !2286
  %call = call %struct._IO_FILE* @stream_open(i8* %0, i8* %1), !dbg !3975
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !3972, !tbaa !2286
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3976, !tbaa !2286
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !3976
  br i1 %tobool, label %if.end, label %if.then, !dbg !3978

if.then:                                          ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !3979
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3980, !tbaa !2286
  call void @sort_die(i8* %call1, i8* %3) #15, !dbg !3981
  unreachable, !dbg !3981

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3982, !tbaa !2286
  ret %struct._IO_FILE* %4, !dbg !3983
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xfclose(%struct._IO_FILE* %fp, i8* %file) #4 !dbg !3984 !ctir !419 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3989, !tbaa !2286
  %call = call i32 @fileno(%struct._IO_FILE* %0) #12, !dbg !3990
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !3991

sw.bb:                                            ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3992, !tbaa !2286
  %call1 = call i32 @feof_unlocked(%struct._IO_FILE* %1) #12, !dbg !3992
  %tobool = icmp ne i32 %call1, 0, !dbg !3992
  br i1 %tobool, label %if.then, label %if.end, !dbg !3995

if.then:                                          ; preds = %sw.bb
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3996, !tbaa !2286
  call void @clearerr_unlocked(%struct._IO_FILE* %2) #12, !dbg !3996
  br label %if.end, !dbg !3996

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !3997

sw.bb2:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3998, !tbaa !2286
  %call3 = call i32 @fflush_unlocked(%struct._IO_FILE* %3), !dbg !3998
  %cmp = icmp ne i32 %call3, 0, !dbg !4000
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !4001

if.then4:                                         ; preds = %sw.bb2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i64 0, i64 0)) #12, !dbg !4002
  %4 = load i8*, i8** %file.addr, align 8, !dbg !4003, !tbaa !2286
  call void @sort_die(i8* %call5, i8* %4) #15, !dbg !4004
  unreachable, !dbg !4004

if.end6:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !4005

sw.default:                                       ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4006, !tbaa !2286
  %call7 = call i32 @rpl_fclose(%struct._IO_FILE* %5), !dbg !4008
  %cmp8 = icmp ne i32 %call7, 0, !dbg !4009
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !4010

if.then9:                                         ; preds = %sw.default
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !4011
  %6 = load i8*, i8** %file.addr, align 8, !dbg !4012, !tbaa !2286
  call void @sort_die(i8* %call10, i8* %6) #15, !dbg !4013
  unreachable, !dbg !4013

if.end11:                                         ; preds = %sw.default
  br label %sw.epilog, !dbg !4014

sw.epilog:                                        ; preds = %if.end11, %if.end6, %if.end
  ret void, !dbg !4015
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @default_key_compare(%struct.keyfield* %key) #4 !dbg !4016 !ctir !421 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !4017, metadata !DIExpression()), !dbg !4018
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4019, !tbaa !2286
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %0, i32 0, i32 4, !dbg !4020, !ctir !424
  %1 = load i8*, i8** %ignore, align 8, !dbg !4020, !tbaa !3143, !ctir !101
  %tobool = icmp ne i8* %1, null, !dbg !4019
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !4021

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4022, !tbaa !2286
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 5, !dbg !4023, !ctir !424
  %3 = load i8*, i8** %translate, align 8, !dbg !4023, !tbaa !3148, !ctir !88
  %tobool1 = icmp ne i8* %3, null, !dbg !4022
  br i1 %tobool1, label %lor.end, label %lor.lhs.false2, !dbg !4024

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4025, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 6, !dbg !4026, !ctir !424
  %5 = load i8, i8* %skipsblanks, align 8, !dbg !4026, !tbaa !3153
  %tobool3 = trunc i8 %5 to i1, !dbg !4026, !ctir !103
  br i1 %tobool3, label %lor.end, label %lor.lhs.false4, !dbg !4027

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %6 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4028, !tbaa !2286
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 7, !dbg !4029, !ctir !424
  %7 = load i8, i8* %skipeblanks, align 1, !dbg !4029, !tbaa !3158
  %tobool5 = trunc i8 %7 to i1, !dbg !4029, !ctir !103
  br i1 %tobool5, label %lor.end, label %lor.lhs.false6, !dbg !4030

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %8 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4031, !tbaa !2286
  %call = call zeroext i1 @key_numeric(%struct.keyfield* %8), !dbg !4032
  br i1 %call, label %lor.end, label %lor.lhs.false7, !dbg !4033

lor.lhs.false7:                                   ; preds = %lor.lhs.false6
  %9 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4034, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 12, !dbg !4035, !ctir !424
  %10 = load i8, i8* %month, align 2, !dbg !4035, !tbaa !3163
  %tobool8 = trunc i8 %10 to i1, !dbg !4035, !ctir !103
  br i1 %tobool8, label %lor.end, label %lor.lhs.false9, !dbg !4036

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4037, !tbaa !2286
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 14, !dbg !4038, !ctir !424
  %12 = load i8, i8* %version, align 8, !dbg !4038, !tbaa !3183
  %tobool10 = trunc i8 %12 to i1, !dbg !4038, !ctir !103
  br i1 %tobool10, label %lor.end, label %lor.rhs, !dbg !4039

lor.rhs:                                          ; preds = %lor.lhs.false9
  %13 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !4040, !tbaa !2286
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %13, i32 0, i32 9, !dbg !4041, !ctir !424
  %14 = load i8, i8* %random, align 1, !dbg !4041, !tbaa !3188
  %tobool11 = trunc i8 %14 to i1, !dbg !4041, !ctir !103
  br label %lor.end, !dbg !4039

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %15 = phi i1 [ true, %lor.lhs.false9 ], [ true, %lor.lhs.false7 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool11, %lor.rhs ]
  %lnot = xor i1 %15, true, !dbg !4042
  ret i1 %lnot, !dbg !4043
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_ordering_compatibility() #4 !dbg !4044 !ctir !168 {
entry:
  %key = alloca %struct.keyfield*, align 8, !ctir !93
  %opts = alloca [31 x i8], align 16, !ctir !425
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !4045, metadata !DIExpression()), !dbg !4046
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4047, !tbaa !2286
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !4049, !tbaa !2286
  br label %for.cond, !dbg !4050

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4051, !tbaa !2286
  %tobool = icmp ne %struct.keyfield* %1, null, !dbg !4053
  br i1 %tobool, label %for.body, label %for.end, !dbg !4053

for.body:                                         ; preds = %for.cond
  %2 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4054, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 8, !dbg !4056, !ctir !94
  %3 = load i8, i8* %numeric, align 2, !dbg !4056, !tbaa !3168
  %tobool1 = trunc i8 %3 to i1, !dbg !4056, !ctir !103
  %conv = zext i1 %tobool1 to i32, !dbg !4054
  %4 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4057, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 10, !dbg !4058, !ctir !94
  %5 = load i8, i8* %general_numeric, align 4, !dbg !4058, !tbaa !3173
  %tobool2 = trunc i8 %5 to i1, !dbg !4058, !ctir !103
  %conv3 = zext i1 %tobool2 to i32, !dbg !4057
  %add = add nsw i32 %conv, %conv3, !dbg !4059
  %6 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4060, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %6, i32 0, i32 11, !dbg !4061, !ctir !94
  %7 = load i8, i8* %human_numeric, align 1, !dbg !4061, !tbaa !3178
  %tobool4 = trunc i8 %7 to i1, !dbg !4061, !ctir !103
  %conv5 = zext i1 %tobool4 to i32, !dbg !4060
  %add6 = add nsw i32 %add, %conv5, !dbg !4062
  %8 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4063, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %8, i32 0, i32 12, !dbg !4064, !ctir !94
  %9 = load i8, i8* %month, align 2, !dbg !4064, !tbaa !3163
  %tobool7 = trunc i8 %9 to i1, !dbg !4064, !ctir !103
  %conv8 = zext i1 %tobool7 to i32, !dbg !4063
  %add9 = add nsw i32 %add6, %conv8, !dbg !4065
  %10 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4066, !tbaa !2286
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %10, i32 0, i32 14, !dbg !4067, !ctir !94
  %11 = load i8, i8* %version, align 8, !dbg !4067, !tbaa !3183
  %tobool10 = trunc i8 %11 to i1, !dbg !4067, !ctir !103
  %conv11 = zext i1 %tobool10 to i32, !dbg !4066
  %12 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4068, !tbaa !2286
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %12, i32 0, i32 9, !dbg !4069, !ctir !94
  %13 = load i8, i8* %random, align 1, !dbg !4069, !tbaa !3188
  %tobool12 = trunc i8 %13 to i1, !dbg !4069, !ctir !103
  %conv13 = zext i1 %tobool12 to i32, !dbg !4068
  %or = or i32 %conv11, %conv13, !dbg !4070
  %14 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4071, !tbaa !2286
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %14, i32 0, i32 4, !dbg !4072, !ctir !94
  %15 = load i8*, i8** %ignore, align 8, !dbg !4072, !tbaa !3143, !ctir !101
  %tobool14 = icmp ne i8* %15, null, !dbg !4073
  %lnot = xor i1 %tobool14, true, !dbg !4073
  %lnot15 = xor i1 %lnot, true, !dbg !4074
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !4074
  %or16 = or i32 %or, %lnot.ext, !dbg !4075
  %add17 = add nsw i32 %add9, %or16, !dbg !4076
  %cmp = icmp slt i32 1, %add17, !dbg !4077
  br i1 %cmp, label %if.then, label %if.end, !dbg !4078

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [31 x i8]* %opts, metadata !4079, metadata !DIExpression()), !dbg !4081
  %16 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4082, !tbaa !2286
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %16, i32 0, i32 13, !dbg !4083, !ctir !94
  store i8 0, i8* %reverse, align 1, !dbg !4084, !tbaa !3139, !ctir !103
  %17 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4085, !tbaa !2286
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 7, !dbg !4086, !ctir !94
  store i8 0, i8* %skipeblanks, align 1, !dbg !4087, !tbaa !3158, !ctir !103
  %18 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4088, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %18, i32 0, i32 6, !dbg !4089, !ctir !94
  store i8 0, i8* %skipsblanks, align 8, !dbg !4090, !tbaa !3153, !ctir !103
  %19 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4091, !tbaa !2286
  %arraydecay = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4092
  call void @key_to_opts(%struct.keyfield* %19, i8* %arraydecay), !dbg !4093
  %arraydecay19 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4094
  call void @incompatible_options(i8* %arraydecay19) #15, !dbg !4095
  unreachable, !dbg !4095

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4096

for.inc:                                          ; preds = %if.end
  %20 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4097, !tbaa !2286
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %20, i32 0, i32 16, !dbg !4098, !ctir !94
  %21 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !4098, !tbaa !3203, !ctir !93
  store %struct.keyfield* %21, %struct.keyfield** %key, align 8, !dbg !4099, !tbaa !2286
  br label %for.cond, !dbg !4100, !llvm.loop !4101

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4103
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @key_warnings(%struct.keyfield* %gkey, i1 zeroext %gkey_only) #4 !dbg !4104 !ctir !428 {
entry:
  %gkey.addr = alloca %struct.keyfield*, align 8
  %gkey_only.addr = alloca i8, align 1
  %key = alloca %struct.keyfield*, align 8, !ctir !423
  %ugkey = alloca %struct.keyfield, align 8, !ctir !94
  %keynum = alloca i64, align 8, !ctir !57
  %sword = alloca i64, align 8, !ctir !55
  %eword = alloca i64, align 8, !ctir !55
  %tmp = alloca [21 x i8], align 16, !ctir !430
  %obuf = alloca [46 x i8], align 16, !ctir !433
  %nbuf = alloca [47 x i8], align 16, !ctir !436
  %po = alloca i8*, align 8, !ctir !9
  %pn = alloca i8*, align 8, !ctir !9
  %zero_width = alloca i8, align 1, !ctir !103
  %implicit_skip = alloca i8, align 1, !ctir !103
  %line_offset = alloca i8, align 1, !ctir !103
  %sword90 = alloca i64, align 8, !ctir !55
  %eword93 = alloca i64, align 8, !ctir !55
  %ugkey_reverse = alloca i8, align 1, !ctir !103
  %opts = alloca [31 x i8], align 16, !ctir !425
  store %struct.keyfield* %gkey, %struct.keyfield** %gkey.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %gkey.addr, metadata !4105, metadata !DIExpression()), !dbg !4106
  %frombool = zext i1 %gkey_only to i8
  store i8 %frombool, i8* %gkey_only.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %gkey_only.addr, metadata !4107, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata %struct.keyfield* %ugkey, metadata !4111, metadata !DIExpression()), !dbg !4112
  %0 = load %struct.keyfield*, %struct.keyfield** %gkey.addr, align 8, !dbg !4113, !tbaa !2286
  %1 = bitcast %struct.keyfield* %ugkey to i8*, !dbg !4114
  %2 = bitcast %struct.keyfield* %0 to i8*, !dbg !4114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !4114, !tbaa.struct !4115
  call void @llvm.dbg.declare(metadata i64* %keynum, metadata !4116, metadata !DIExpression()), !dbg !4117
  store i64 1, i64* %keynum, align 8, !dbg !4117, !tbaa !2447
  %3 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4118, !tbaa !2286
  store %struct.keyfield* %3, %struct.keyfield** %key, align 8, !dbg !4120, !tbaa !2286
  br label %for.cond, !dbg !4121

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4122, !tbaa !2286
  %tobool = icmp ne %struct.keyfield* %4, null, !dbg !4124
  br i1 %tobool, label %for.body, label %for.end, !dbg !4124

for.body:                                         ; preds = %for.cond
  %5 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4125, !tbaa !2286
  %traditional_used = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 15, !dbg !4128, !ctir !424
  %6 = load i8, i8* %traditional_used, align 1, !dbg !4128, !tbaa !2779
  %tobool1 = trunc i8 %6 to i1, !dbg !4128, !ctir !103
  br i1 %tobool1, label %if.then, label %if.end35, !dbg !4129

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %sword, metadata !4130, metadata !DIExpression()), !dbg !4132
  %7 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4133, !tbaa !2286
  %sword2 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 0, !dbg !4134, !ctir !424
  %8 = load i64, i64* %sword2, align 8, !dbg !4134, !tbaa !2588, !ctir !55
  store i64 %8, i64* %sword, align 8, !dbg !4132, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %eword, metadata !4135, metadata !DIExpression()), !dbg !4136
  %9 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4137, !tbaa !2286
  %eword3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 2, !dbg !4138, !ctir !424
  %10 = load i64, i64* %eword3, align 8, !dbg !4138, !tbaa !2760, !ctir !55
  store i64 %10, i64* %eword, align 8, !dbg !4136, !tbaa !2447
  call void @llvm.dbg.declare(metadata [21 x i8]* %tmp, metadata !4139, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.declare(metadata [46 x i8]* %obuf, metadata !4141, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.declare(metadata [47 x i8]* %nbuf, metadata !4143, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.declare(metadata i8** %po, metadata !4145, metadata !DIExpression()), !dbg !4146
  %arraydecay = getelementptr inbounds [46 x i8], [46 x i8]* %obuf, i64 0, i64 0, !dbg !4147
  store i8* %arraydecay, i8** %po, align 8, !dbg !4146, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %pn, metadata !4148, metadata !DIExpression()), !dbg !4149
  %arraydecay4 = getelementptr inbounds [47 x i8], [47 x i8]* %nbuf, i64 0, i64 0, !dbg !4150
  store i8* %arraydecay4, i8** %pn, align 8, !dbg !4149, !tbaa !2286
  %11 = load i64, i64* %sword, align 8, !dbg !4151, !tbaa !2447
  %cmp = icmp eq i64 %11, -1, !dbg !4153
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4154

if.then5:                                         ; preds = %if.then
  %12 = load i64, i64* %sword, align 8, !dbg !4155, !tbaa !2447
  %inc = add i64 %12, 1, !dbg !4155
  store i64 %inc, i64* %sword, align 8, !dbg !4155, !tbaa !2447
  br label %if.end, !dbg !4156

if.end:                                           ; preds = %if.then5, %if.then
  %13 = load i8*, i8** %po, align 8, !dbg !4157, !tbaa !2286
  %call = call i8* @stpcpy(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i64 0, i64 0)) #12, !dbg !4158
  %14 = load i64, i64* %sword, align 8, !dbg !4159, !tbaa !2447
  %arraydecay6 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4160
  %call7 = call i8* @umaxtostr(i64 %14, i8* %arraydecay6), !dbg !4161
  %call8 = call i8* @stpcpy(i8* %call, i8* %call7) #12, !dbg !4162
  store i8* %call8, i8** %po, align 8, !dbg !4163, !tbaa !2286
  %15 = load i8*, i8** %pn, align 8, !dbg !4164, !tbaa !2286
  %call9 = call i8* @stpcpy(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i64 0, i64 0)) #12, !dbg !4165
  %16 = load i64, i64* %sword, align 8, !dbg !4166, !tbaa !2447
  %add = add i64 %16, 1, !dbg !4167
  %arraydecay10 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4168
  %call11 = call i8* @umaxtostr(i64 %add, i8* %arraydecay10), !dbg !4169
  %call12 = call i8* @stpcpy(i8* %call9, i8* %call11) #12, !dbg !4170
  store i8* %call12, i8** %pn, align 8, !dbg !4171, !tbaa !2286
  %17 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4172, !tbaa !2286
  %eword13 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 2, !dbg !4174, !ctir !424
  %18 = load i64, i64* %eword13, align 8, !dbg !4174, !tbaa !2760, !ctir !55
  %cmp14 = icmp ne i64 %18, -1, !dbg !4175
  br i1 %cmp14, label %if.then15, label %if.end29, !dbg !4176

if.then15:                                        ; preds = %if.end
  %19 = load i8*, i8** %po, align 8, !dbg !4177, !tbaa !2286
  %call16 = call i8* @stpcpy(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i64 0, i64 0)) #12, !dbg !4179
  %20 = load i64, i64* %eword, align 8, !dbg !4180, !tbaa !2447
  %add17 = add i64 %20, 1, !dbg !4181
  %arraydecay18 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4182
  %call19 = call i8* @umaxtostr(i64 %add17, i8* %arraydecay18), !dbg !4183
  %call20 = call i8* @stpcpy(i8* %call16, i8* %call19) #12, !dbg !4184
  %21 = load i8*, i8** %pn, align 8, !dbg !4185, !tbaa !2286
  %call21 = call i8* @stpcpy(i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i64 0, i64 0)) #12, !dbg !4186
  %22 = load i64, i64* %eword, align 8, !dbg !4187, !tbaa !2447
  %add22 = add i64 %22, 1, !dbg !4188
  %23 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4189, !tbaa !2286
  %echar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %23, i32 0, i32 3, !dbg !4190, !ctir !424
  %24 = load i64, i64* %echar, align 8, !dbg !4190, !tbaa !2756, !ctir !55
  %cmp23 = icmp eq i64 %24, -1, !dbg !4191
  %conv = zext i1 %cmp23 to i32, !dbg !4191
  %conv24 = sext i32 %conv to i64, !dbg !4192
  %add25 = add i64 %add22, %conv24, !dbg !4193
  %arraydecay26 = getelementptr inbounds [21 x i8], [21 x i8]* %tmp, i64 0, i64 0, !dbg !4194
  %call27 = call i8* @umaxtostr(i64 %add25, i8* %arraydecay26), !dbg !4195
  %call28 = call i8* @stpcpy(i8* %call21, i8* %call27) #12, !dbg !4196
  br label %if.end29, !dbg !4197

if.end29:                                         ; preds = %if.then15, %if.end
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.150, i64 0, i64 0)) #12, !dbg !4198
  %arraydecay31 = getelementptr inbounds [46 x i8], [46 x i8]* %obuf, i64 0, i64 0, !dbg !4199
  %call32 = call i8* @quote_n(i32 0, i8* %arraydecay31), !dbg !4200
  %arraydecay33 = getelementptr inbounds [47 x i8], [47 x i8]* %nbuf, i64 0, i64 0, !dbg !4201
  %call34 = call i8* @quote_n(i32 1, i8* %arraydecay33), !dbg !4202
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call30, i8* %call32, i8* %call34), !dbg !4203
  br label %if.end35, !dbg !4204

if.end35:                                         ; preds = %if.end29, %for.body
  call void @llvm.dbg.declare(metadata i8* %zero_width, metadata !4205, metadata !DIExpression()), !dbg !4206
  %25 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4207, !tbaa !2286
  %sword36 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %25, i32 0, i32 0, !dbg !4208, !ctir !424
  %26 = load i64, i64* %sword36, align 8, !dbg !4208, !tbaa !2588, !ctir !55
  %cmp37 = icmp ne i64 %26, -1, !dbg !4209
  br i1 %cmp37, label %land.rhs, label %land.end, !dbg !4210

land.rhs:                                         ; preds = %if.end35
  %27 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4211, !tbaa !2286
  %eword39 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %27, i32 0, i32 2, !dbg !4212, !ctir !424
  %28 = load i64, i64* %eword39, align 8, !dbg !4212, !tbaa !2760, !ctir !55
  %29 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4213, !tbaa !2286
  %sword40 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %29, i32 0, i32 0, !dbg !4214, !ctir !424
  %30 = load i64, i64* %sword40, align 8, !dbg !4214, !tbaa !2588, !ctir !55
  %cmp41 = icmp ult i64 %28, %30, !dbg !4215
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end35
  %31 = phi i1 [ false, %if.end35 ], [ %cmp41, %land.rhs ], !dbg !4216
  %frombool43 = zext i1 %31 to i8, !dbg !4206
  store i8 %frombool43, i8* %zero_width, align 1, !dbg !4206, !tbaa !2430
  %32 = load i8, i8* %zero_width, align 1, !dbg !4217, !tbaa !2430
  %tobool44 = trunc i8 %32 to i1, !dbg !4217
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !4219

if.then45:                                        ; preds = %land.end
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.151, i64 0, i64 0)) #12, !dbg !4220
  %33 = load i64, i64* %keynum, align 8, !dbg !4221, !tbaa !2447
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i64 %33), !dbg !4222
  br label %if.end47, !dbg !4222

if.end47:                                         ; preds = %if.then45, %land.end
  call void @llvm.dbg.declare(metadata i8* %implicit_skip, metadata !4223, metadata !DIExpression()), !dbg !4224
  %34 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4225, !tbaa !2286
  %call48 = call zeroext i1 @key_numeric(%struct.keyfield* %34), !dbg !4226
  br i1 %call48, label %lor.end, label %lor.rhs, !dbg !4227

lor.rhs:                                          ; preds = %if.end47
  %35 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4228, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %35, i32 0, i32 12, !dbg !4229, !ctir !424
  %36 = load i8, i8* %month, align 2, !dbg !4229, !tbaa !3163
  %tobool50 = trunc i8 %36 to i1, !dbg !4229, !ctir !103
  br label %lor.end, !dbg !4227

lor.end:                                          ; preds = %lor.rhs, %if.end47
  %37 = phi i1 [ true, %if.end47 ], [ %tobool50, %lor.rhs ]
  %frombool52 = zext i1 %37 to i8, !dbg !4224
  store i8 %frombool52, i8* %implicit_skip, align 1, !dbg !4224, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %line_offset, metadata !4230, metadata !DIExpression()), !dbg !4231
  %38 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4232, !tbaa !2286
  %eword53 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %38, i32 0, i32 2, !dbg !4233, !ctir !424
  %39 = load i64, i64* %eword53, align 8, !dbg !4233, !tbaa !2760, !ctir !55
  %cmp54 = icmp eq i64 %39, 0, !dbg !4234
  br i1 %cmp54, label %land.rhs56, label %land.end60, !dbg !4235

land.rhs56:                                       ; preds = %lor.end
  %40 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4236, !tbaa !2286
  %echar57 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %40, i32 0, i32 3, !dbg !4237, !ctir !424
  %41 = load i64, i64* %echar57, align 8, !dbg !4237, !tbaa !2756, !ctir !55
  %cmp58 = icmp ne i64 %41, 0, !dbg !4238
  br label %land.end60

land.end60:                                       ; preds = %land.rhs56, %lor.end
  %42 = phi i1 [ false, %lor.end ], [ %cmp58, %land.rhs56 ], !dbg !4216
  %frombool61 = zext i1 %42 to i8, !dbg !4231
  store i8 %frombool61, i8* %line_offset, align 1, !dbg !4231, !tbaa !2430
  %43 = load i8, i8* %zero_width, align 1, !dbg !4239, !tbaa !2430
  %tobool62 = trunc i8 %43 to i1, !dbg !4239
  br i1 %tobool62, label %if.end84, label %land.lhs.true, !dbg !4241

land.lhs.true:                                    ; preds = %land.end60
  %44 = load i8, i8* %gkey_only.addr, align 1, !dbg !4242, !tbaa !2430
  %tobool63 = trunc i8 %44 to i1, !dbg !4242
  br i1 %tobool63, label %if.end84, label %land.lhs.true64, !dbg !4243

land.lhs.true64:                                  ; preds = %land.lhs.true
  %45 = load i32, i32* @tab, align 4, !dbg !4244, !tbaa !2273
  %cmp65 = icmp eq i32 %45, 128, !dbg !4245
  br i1 %cmp65, label %land.lhs.true67, label %if.end84, !dbg !4246

land.lhs.true67:                                  ; preds = %land.lhs.true64
  %46 = load i8, i8* %line_offset, align 1, !dbg !4247, !tbaa !2430
  %tobool68 = trunc i8 %46 to i1, !dbg !4247
  br i1 %tobool68, label %if.end84, label %land.lhs.true69, !dbg !4248

land.lhs.true69:                                  ; preds = %land.lhs.true67
  %47 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4249, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %47, i32 0, i32 6, !dbg !4250, !ctir !424
  %48 = load i8, i8* %skipsblanks, align 8, !dbg !4250, !tbaa !3153
  %tobool70 = trunc i8 %48 to i1, !dbg !4250, !ctir !103
  br i1 %tobool70, label %lor.lhs.false, label %land.lhs.true71, !dbg !4251

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %49 = load i8, i8* %implicit_skip, align 1, !dbg !4252, !tbaa !2430
  %tobool72 = trunc i8 %49 to i1, !dbg !4252
  br i1 %tobool72, label %lor.lhs.false, label %if.then82, !dbg !4253

lor.lhs.false:                                    ; preds = %land.lhs.true71, %land.lhs.true69
  %50 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4254, !tbaa !2286
  %skipsblanks73 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %50, i32 0, i32 6, !dbg !4255, !ctir !424
  %51 = load i8, i8* %skipsblanks73, align 8, !dbg !4255, !tbaa !3153
  %tobool74 = trunc i8 %51 to i1, !dbg !4255, !ctir !103
  br i1 %tobool74, label %lor.lhs.false77, label %land.lhs.true75, !dbg !4256

land.lhs.true75:                                  ; preds = %lor.lhs.false
  %52 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4257, !tbaa !2286
  %schar = getelementptr inbounds %struct.keyfield, %struct.keyfield* %52, i32 0, i32 1, !dbg !4258, !ctir !424
  %53 = load i64, i64* %schar, align 8, !dbg !4258, !tbaa !2707, !ctir !55
  %tobool76 = icmp ne i64 %53, 0, !dbg !4257
  br i1 %tobool76, label %if.then82, label %lor.lhs.false77, !dbg !4259

lor.lhs.false77:                                  ; preds = %land.lhs.true75, %lor.lhs.false
  %54 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4260, !tbaa !2286
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %54, i32 0, i32 7, !dbg !4261, !ctir !424
  %55 = load i8, i8* %skipeblanks, align 1, !dbg !4261, !tbaa !3158
  %tobool78 = trunc i8 %55 to i1, !dbg !4261, !ctir !103
  br i1 %tobool78, label %if.end84, label %land.lhs.true79, !dbg !4262

land.lhs.true79:                                  ; preds = %lor.lhs.false77
  %56 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4263, !tbaa !2286
  %echar80 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %56, i32 0, i32 3, !dbg !4264, !ctir !424
  %57 = load i64, i64* %echar80, align 8, !dbg !4264, !tbaa !2756, !ctir !55
  %tobool81 = icmp ne i64 %57, 0, !dbg !4263
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !4265

if.then82:                                        ; preds = %land.lhs.true79, %land.lhs.true75, %land.lhs.true71
  %call83 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.152, i64 0, i64 0)) #12, !dbg !4266
  %58 = load i64, i64* %keynum, align 8, !dbg !4267, !tbaa !2447
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call83, i64 %58), !dbg !4268
  br label %if.end84, !dbg !4268

if.end84:                                         ; preds = %if.then82, %land.lhs.true79, %lor.lhs.false77, %land.lhs.true67, %land.lhs.true64, %land.lhs.true, %land.end60
  %59 = load i8, i8* %gkey_only.addr, align 1, !dbg !4269, !tbaa !2430
  %tobool85 = trunc i8 %59 to i1, !dbg !4269
  br i1 %tobool85, label %if.end107, label %land.lhs.true86, !dbg !4271

land.lhs.true86:                                  ; preds = %if.end84
  %60 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4272, !tbaa !2286
  %call87 = call zeroext i1 @key_numeric(%struct.keyfield* %60), !dbg !4273
  br i1 %call87, label %if.then89, label %if.end107, !dbg !4274

if.then89:                                        ; preds = %land.lhs.true86
  call void @llvm.dbg.declare(metadata i64* %sword90, metadata !4275, metadata !DIExpression()), !dbg !4277
  %61 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4278, !tbaa !2286
  %sword91 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %61, i32 0, i32 0, !dbg !4279, !ctir !424
  %62 = load i64, i64* %sword91, align 8, !dbg !4279, !tbaa !2588, !ctir !55
  %add92 = add i64 %62, 1, !dbg !4280
  store i64 %add92, i64* %sword90, align 8, !dbg !4277, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %eword93, metadata !4281, metadata !DIExpression()), !dbg !4282
  %63 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4283, !tbaa !2286
  %eword94 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %63, i32 0, i32 2, !dbg !4284, !ctir !424
  %64 = load i64, i64* %eword94, align 8, !dbg !4284, !tbaa !2760, !ctir !55
  %add95 = add i64 %64, 1, !dbg !4285
  store i64 %add95, i64* %eword93, align 8, !dbg !4282, !tbaa !2447
  %65 = load i64, i64* %sword90, align 8, !dbg !4286, !tbaa !2447
  %tobool96 = icmp ne i64 %65, 0, !dbg !4286
  br i1 %tobool96, label %if.end99, label %if.then97, !dbg !4288

if.then97:                                        ; preds = %if.then89
  %66 = load i64, i64* %sword90, align 8, !dbg !4289, !tbaa !2447
  %inc98 = add i64 %66, 1, !dbg !4289
  store i64 %inc98, i64* %sword90, align 8, !dbg !4289, !tbaa !2447
  br label %if.end99, !dbg !4290

if.end99:                                         ; preds = %if.then97, %if.then89
  %67 = load i64, i64* %eword93, align 8, !dbg !4291, !tbaa !2447
  %tobool100 = icmp ne i64 %67, 0, !dbg !4291
  br i1 %tobool100, label %lor.lhs.false101, label %if.then104, !dbg !4293

lor.lhs.false101:                                 ; preds = %if.end99
  %68 = load i64, i64* %sword90, align 8, !dbg !4294, !tbaa !2447
  %69 = load i64, i64* %eword93, align 8, !dbg !4295, !tbaa !2447
  %cmp102 = icmp ult i64 %68, %69, !dbg !4296
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !4297

if.then104:                                       ; preds = %lor.lhs.false101, %if.end99
  %call105 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.153, i64 0, i64 0)) #12, !dbg !4298
  %70 = load i64, i64* %keynum, align 8, !dbg !4299, !tbaa !2447
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call105, i64 %70), !dbg !4300
  br label %if.end106, !dbg !4300

if.end106:                                        ; preds = %if.then104, %lor.lhs.false101
  br label %if.end107, !dbg !4301

if.end107:                                        ; preds = %if.end106, %land.lhs.true86, %if.end84
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 4, !dbg !4302, !ctir !94
  %71 = load i8*, i8** %ignore, align 8, !dbg !4302, !tbaa !3143, !ctir !101
  %tobool108 = icmp ne i8* %71, null, !dbg !4304
  br i1 %tobool108, label %land.lhs.true109, label %if.end116, !dbg !4305

land.lhs.true109:                                 ; preds = %if.end107
  %ignore110 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 4, !dbg !4306, !ctir !94
  %72 = load i8*, i8** %ignore110, align 8, !dbg !4306, !tbaa !3143, !ctir !101
  %73 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4307, !tbaa !2286
  %ignore111 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %73, i32 0, i32 4, !dbg !4308, !ctir !424
  %74 = load i8*, i8** %ignore111, align 8, !dbg !4308, !tbaa !3143, !ctir !101
  %cmp112 = icmp eq i8* %72, %74, !dbg !4309
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !4310

if.then114:                                       ; preds = %land.lhs.true109
  %ignore115 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 4, !dbg !4311, !ctir !94
  store i8* null, i8** %ignore115, align 8, !dbg !4312, !tbaa !3143, !ctir !101
  br label %if.end116, !dbg !4313

if.end116:                                        ; preds = %if.then114, %land.lhs.true109, %if.end107
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 5, !dbg !4314, !ctir !94
  %75 = load i8*, i8** %translate, align 8, !dbg !4314, !tbaa !3148, !ctir !88
  %tobool117 = icmp ne i8* %75, null, !dbg !4316
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !4317

land.lhs.true118:                                 ; preds = %if.end116
  %translate119 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 5, !dbg !4318, !ctir !94
  %76 = load i8*, i8** %translate119, align 8, !dbg !4318, !tbaa !3148, !ctir !88
  %77 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4319, !tbaa !2286
  %translate120 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %77, i32 0, i32 5, !dbg !4320, !ctir !424
  %78 = load i8*, i8** %translate120, align 8, !dbg !4320, !tbaa !3148, !ctir !88
  %cmp121 = icmp eq i8* %76, %78, !dbg !4321
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !4322

if.then123:                                       ; preds = %land.lhs.true118
  %translate124 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 5, !dbg !4323, !ctir !94
  store i8* null, i8** %translate124, align 8, !dbg !4324, !tbaa !3148, !ctir !88
  br label %if.end125, !dbg !4325

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end116
  %79 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4326, !tbaa !2286
  %skipsblanks126 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %79, i32 0, i32 6, !dbg !4327, !ctir !424
  %80 = load i8, i8* %skipsblanks126, align 8, !dbg !4327, !tbaa !3153
  %tobool127 = trunc i8 %80 to i1, !dbg !4327, !ctir !103
  %lnot = xor i1 %tobool127, true, !dbg !4328
  %lnot.ext = zext i1 %lnot to i32, !dbg !4328
  %skipsblanks128 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 6, !dbg !4329, !ctir !94
  %81 = load i8, i8* %skipsblanks128, align 8, !dbg !4330, !tbaa !3153
  %tobool129 = trunc i8 %81 to i1, !dbg !4330, !ctir !103
  %conv130 = zext i1 %tobool129 to i32, !dbg !4330
  %and = and i32 %conv130, %lnot.ext, !dbg !4330
  %tobool131 = icmp ne i32 %and, 0, !dbg !4330
  %frombool132 = zext i1 %tobool131 to i8, !dbg !4330
  store i8 %frombool132, i8* %skipsblanks128, align 8, !dbg !4330, !tbaa !3153, !ctir !103
  %82 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4331, !tbaa !2286
  %skipeblanks133 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %82, i32 0, i32 7, !dbg !4332, !ctir !424
  %83 = load i8, i8* %skipeblanks133, align 1, !dbg !4332, !tbaa !3158
  %tobool134 = trunc i8 %83 to i1, !dbg !4332, !ctir !103
  %lnot135 = xor i1 %tobool134, true, !dbg !4333
  %lnot.ext136 = zext i1 %lnot135 to i32, !dbg !4333
  %skipeblanks137 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 7, !dbg !4334, !ctir !94
  %84 = load i8, i8* %skipeblanks137, align 1, !dbg !4335, !tbaa !3158
  %tobool138 = trunc i8 %84 to i1, !dbg !4335, !ctir !103
  %conv139 = zext i1 %tobool138 to i32, !dbg !4335
  %and140 = and i32 %conv139, %lnot.ext136, !dbg !4335
  %tobool141 = icmp ne i32 %and140, 0, !dbg !4335
  %frombool142 = zext i1 %tobool141 to i8, !dbg !4335
  store i8 %frombool142, i8* %skipeblanks137, align 1, !dbg !4335, !tbaa !3158, !ctir !103
  %85 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4336, !tbaa !2286
  %month143 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %85, i32 0, i32 12, !dbg !4337, !ctir !424
  %86 = load i8, i8* %month143, align 2, !dbg !4337, !tbaa !3163
  %tobool144 = trunc i8 %86 to i1, !dbg !4337, !ctir !103
  %lnot145 = xor i1 %tobool144, true, !dbg !4338
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !4338
  %month147 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 12, !dbg !4339, !ctir !94
  %87 = load i8, i8* %month147, align 2, !dbg !4340, !tbaa !3163
  %tobool148 = trunc i8 %87 to i1, !dbg !4340, !ctir !103
  %conv149 = zext i1 %tobool148 to i32, !dbg !4340
  %and150 = and i32 %conv149, %lnot.ext146, !dbg !4340
  %tobool151 = icmp ne i32 %and150, 0, !dbg !4340
  %frombool152 = zext i1 %tobool151 to i8, !dbg !4340
  store i8 %frombool152, i8* %month147, align 2, !dbg !4340, !tbaa !3163, !ctir !103
  %88 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4341, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %88, i32 0, i32 8, !dbg !4342, !ctir !424
  %89 = load i8, i8* %numeric, align 2, !dbg !4342, !tbaa !3168
  %tobool153 = trunc i8 %89 to i1, !dbg !4342, !ctir !103
  %lnot154 = xor i1 %tobool153, true, !dbg !4343
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !4343
  %numeric156 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 8, !dbg !4344, !ctir !94
  %90 = load i8, i8* %numeric156, align 2, !dbg !4345, !tbaa !3168
  %tobool157 = trunc i8 %90 to i1, !dbg !4345, !ctir !103
  %conv158 = zext i1 %tobool157 to i32, !dbg !4345
  %and159 = and i32 %conv158, %lnot.ext155, !dbg !4345
  %tobool160 = icmp ne i32 %and159, 0, !dbg !4345
  %frombool161 = zext i1 %tobool160 to i8, !dbg !4345
  store i8 %frombool161, i8* %numeric156, align 2, !dbg !4345, !tbaa !3168, !ctir !103
  %91 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4346, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %91, i32 0, i32 10, !dbg !4347, !ctir !424
  %92 = load i8, i8* %general_numeric, align 4, !dbg !4347, !tbaa !3173
  %tobool162 = trunc i8 %92 to i1, !dbg !4347, !ctir !103
  %lnot163 = xor i1 %tobool162, true, !dbg !4348
  %lnot.ext164 = zext i1 %lnot163 to i32, !dbg !4348
  %general_numeric165 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 10, !dbg !4349, !ctir !94
  %93 = load i8, i8* %general_numeric165, align 4, !dbg !4350, !tbaa !3173
  %tobool166 = trunc i8 %93 to i1, !dbg !4350, !ctir !103
  %conv167 = zext i1 %tobool166 to i32, !dbg !4350
  %and168 = and i32 %conv167, %lnot.ext164, !dbg !4350
  %tobool169 = icmp ne i32 %and168, 0, !dbg !4350
  %frombool170 = zext i1 %tobool169 to i8, !dbg !4350
  store i8 %frombool170, i8* %general_numeric165, align 4, !dbg !4350, !tbaa !3173, !ctir !103
  %94 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4351, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %94, i32 0, i32 11, !dbg !4352, !ctir !424
  %95 = load i8, i8* %human_numeric, align 1, !dbg !4352, !tbaa !3178
  %tobool171 = trunc i8 %95 to i1, !dbg !4352, !ctir !103
  %lnot172 = xor i1 %tobool171, true, !dbg !4353
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !4353
  %human_numeric174 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 11, !dbg !4354, !ctir !94
  %96 = load i8, i8* %human_numeric174, align 1, !dbg !4355, !tbaa !3178
  %tobool175 = trunc i8 %96 to i1, !dbg !4355, !ctir !103
  %conv176 = zext i1 %tobool175 to i32, !dbg !4355
  %and177 = and i32 %conv176, %lnot.ext173, !dbg !4355
  %tobool178 = icmp ne i32 %and177, 0, !dbg !4355
  %frombool179 = zext i1 %tobool178 to i8, !dbg !4355
  store i8 %frombool179, i8* %human_numeric174, align 1, !dbg !4355, !tbaa !3178, !ctir !103
  %97 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4356, !tbaa !2286
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %97, i32 0, i32 9, !dbg !4357, !ctir !424
  %98 = load i8, i8* %random, align 1, !dbg !4357, !tbaa !3188
  %tobool180 = trunc i8 %98 to i1, !dbg !4357, !ctir !103
  %lnot181 = xor i1 %tobool180, true, !dbg !4358
  %lnot.ext182 = zext i1 %lnot181 to i32, !dbg !4358
  %random183 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 9, !dbg !4359, !ctir !94
  %99 = load i8, i8* %random183, align 1, !dbg !4360, !tbaa !3188
  %tobool184 = trunc i8 %99 to i1, !dbg !4360, !ctir !103
  %conv185 = zext i1 %tobool184 to i32, !dbg !4360
  %and186 = and i32 %conv185, %lnot.ext182, !dbg !4360
  %tobool187 = icmp ne i32 %and186, 0, !dbg !4360
  %frombool188 = zext i1 %tobool187 to i8, !dbg !4360
  store i8 %frombool188, i8* %random183, align 1, !dbg !4360, !tbaa !3188, !ctir !103
  %100 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4361, !tbaa !2286
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %100, i32 0, i32 14, !dbg !4362, !ctir !424
  %101 = load i8, i8* %version, align 8, !dbg !4362, !tbaa !3183
  %tobool189 = trunc i8 %101 to i1, !dbg !4362, !ctir !103
  %lnot190 = xor i1 %tobool189, true, !dbg !4363
  %lnot.ext191 = zext i1 %lnot190 to i32, !dbg !4363
  %version192 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 14, !dbg !4364, !ctir !94
  %102 = load i8, i8* %version192, align 8, !dbg !4365, !tbaa !3183
  %tobool193 = trunc i8 %102 to i1, !dbg !4365, !ctir !103
  %conv194 = zext i1 %tobool193 to i32, !dbg !4365
  %and195 = and i32 %conv194, %lnot.ext191, !dbg !4365
  %tobool196 = icmp ne i32 %and195, 0, !dbg !4365
  %frombool197 = zext i1 %tobool196 to i8, !dbg !4365
  store i8 %frombool197, i8* %version192, align 8, !dbg !4365, !tbaa !3183, !ctir !103
  %103 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4366, !tbaa !2286
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %103, i32 0, i32 13, !dbg !4367, !ctir !424
  %104 = load i8, i8* %reverse, align 1, !dbg !4367, !tbaa !3139
  %tobool198 = trunc i8 %104 to i1, !dbg !4367, !ctir !103
  %lnot199 = xor i1 %tobool198, true, !dbg !4368
  %lnot.ext200 = zext i1 %lnot199 to i32, !dbg !4368
  %reverse201 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4369, !ctir !94
  %105 = load i8, i8* %reverse201, align 1, !dbg !4370, !tbaa !3139
  %tobool202 = trunc i8 %105 to i1, !dbg !4370, !ctir !103
  %conv203 = zext i1 %tobool202 to i32, !dbg !4370
  %and204 = and i32 %conv203, %lnot.ext200, !dbg !4370
  %tobool205 = icmp ne i32 %and204, 0, !dbg !4370
  %frombool206 = zext i1 %tobool205 to i8, !dbg !4370
  store i8 %frombool206, i8* %reverse201, align 1, !dbg !4370, !tbaa !3139, !ctir !103
  br label %for.inc, !dbg !4371

for.inc:                                          ; preds = %if.end125
  %106 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4372, !tbaa !2286
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %106, i32 0, i32 16, !dbg !4373, !ctir !424
  %107 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !4373, !tbaa !3203, !ctir !93
  store %struct.keyfield* %107, %struct.keyfield** %key, align 8, !dbg !4374, !tbaa !2286
  %108 = load i64, i64* %keynum, align 8, !dbg !4375, !tbaa !2447
  %inc207 = add i64 %108, 1, !dbg !4375
  store i64 %inc207, i64* %keynum, align 8, !dbg !4375, !tbaa !2447
  br label %for.cond, !dbg !4376, !llvm.loop !4377

for.end:                                          ; preds = %for.cond
  %call208 = call zeroext i1 @default_key_compare(%struct.keyfield* %ugkey), !dbg !4379
  br i1 %call208, label %lor.lhs.false209, label %if.then221, !dbg !4381

lor.lhs.false209:                                 ; preds = %for.end
  %reverse210 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4382, !ctir !94
  %109 = load i8, i8* %reverse210, align 1, !dbg !4382, !tbaa !3139
  %tobool211 = trunc i8 %109 to i1, !dbg !4382, !ctir !103
  br i1 %tobool211, label %land.lhs.true213, label %if.end242, !dbg !4383

land.lhs.true213:                                 ; preds = %lor.lhs.false209
  %110 = load i8, i8* @stable, align 1, !dbg !4384, !tbaa !2430
  %tobool214 = trunc i8 %110 to i1, !dbg !4384
  br i1 %tobool214, label %land.lhs.true219, label %lor.lhs.false216, !dbg !4385

lor.lhs.false216:                                 ; preds = %land.lhs.true213
  %111 = load i8, i8* @unique, align 1, !dbg !4386, !tbaa !2430
  %tobool217 = trunc i8 %111 to i1, !dbg !4386
  br i1 %tobool217, label %land.lhs.true219, label %if.end242, !dbg !4387

land.lhs.true219:                                 ; preds = %lor.lhs.false216, %land.lhs.true213
  %112 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4388, !tbaa !2286
  %tobool220 = icmp ne %struct.keyfield* %112, null, !dbg !4388
  br i1 %tobool220, label %if.then221, label %if.end242, !dbg !4389

if.then221:                                       ; preds = %land.lhs.true219, %for.end
  call void @llvm.dbg.declare(metadata i8* %ugkey_reverse, metadata !4390, metadata !DIExpression()), !dbg !4392
  %reverse222 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4393, !ctir !94
  %113 = load i8, i8* %reverse222, align 1, !dbg !4393, !tbaa !3139
  %tobool223 = trunc i8 %113 to i1, !dbg !4393, !ctir !103
  %frombool224 = zext i1 %tobool223 to i8, !dbg !4392
  store i8 %frombool224, i8* %ugkey_reverse, align 1, !dbg !4392, !tbaa !2430
  %114 = load i8, i8* @stable, align 1, !dbg !4394, !tbaa !2430
  %tobool225 = trunc i8 %114 to i1, !dbg !4394
  br i1 %tobool225, label %if.end232, label %lor.lhs.false227, !dbg !4396

lor.lhs.false227:                                 ; preds = %if.then221
  %115 = load i8, i8* @unique, align 1, !dbg !4397, !tbaa !2430
  %tobool228 = trunc i8 %115 to i1, !dbg !4397
  br i1 %tobool228, label %if.end232, label %if.then230, !dbg !4398

if.then230:                                       ; preds = %lor.lhs.false227
  %reverse231 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4399, !ctir !94
  store i8 0, i8* %reverse231, align 1, !dbg !4400, !tbaa !3139, !ctir !103
  br label %if.end232, !dbg !4401

if.end232:                                        ; preds = %if.then230, %lor.lhs.false227, %if.then221
  call void @llvm.dbg.declare(metadata [31 x i8]* %opts, metadata !4402, metadata !DIExpression()), !dbg !4403
  %arraydecay233 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4404
  call void @key_to_opts(%struct.keyfield* %ugkey, i8* %arraydecay233), !dbg !4405
  %arraydecay234 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4406
  %call235 = call i64 @strlen(i8* %arraydecay234) #14, !dbg !4407
  %call236 = call i64 @select_plural(i64 %call235), !dbg !4408
  %call237 = call i8* @ngettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.155, i64 0, i64 0), i64 %call236) #12, !dbg !4409
  %arraydecay238 = getelementptr inbounds [31 x i8], [31 x i8]* %opts, i64 0, i64 0, !dbg !4410
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call237, i8* %arraydecay238), !dbg !4411
  %116 = load i8, i8* %ugkey_reverse, align 1, !dbg !4412, !tbaa !2430
  %tobool239 = trunc i8 %116 to i1, !dbg !4412
  %reverse240 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4413, !ctir !94
  %frombool241 = zext i1 %tobool239 to i8, !dbg !4414
  store i8 %frombool241, i8* %reverse240, align 1, !dbg !4414, !tbaa !3139, !ctir !103
  br label %if.end242, !dbg !4415

if.end242:                                        ; preds = %if.end232, %land.lhs.true219, %lor.lhs.false216, %lor.lhs.false209
  %reverse243 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %ugkey, i32 0, i32 13, !dbg !4416, !ctir !94
  %117 = load i8, i8* %reverse243, align 1, !dbg !4416, !tbaa !3139
  %tobool244 = trunc i8 %117 to i1, !dbg !4416, !ctir !103
  br i1 %tobool244, label %land.lhs.true246, label %if.end256, !dbg !4418

land.lhs.true246:                                 ; preds = %if.end242
  %118 = load i8, i8* @stable, align 1, !dbg !4419, !tbaa !2430
  %tobool247 = trunc i8 %118 to i1, !dbg !4419
  br i1 %tobool247, label %if.end256, label %lor.lhs.false249, !dbg !4420

lor.lhs.false249:                                 ; preds = %land.lhs.true246
  %119 = load i8, i8* @unique, align 1, !dbg !4421, !tbaa !2430
  %tobool250 = trunc i8 %119 to i1, !dbg !4421
  br i1 %tobool250, label %if.end256, label %land.lhs.true252, !dbg !4422

land.lhs.true252:                                 ; preds = %lor.lhs.false249
  %120 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4423, !tbaa !2286
  %tobool253 = icmp ne %struct.keyfield* %120, null, !dbg !4423
  br i1 %tobool253, label %if.then254, label %if.end256, !dbg !4424

if.then254:                                       ; preds = %land.lhs.true252
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.156, i64 0, i64 0)) #12, !dbg !4425
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255), !dbg !4426
  br label %if.end256, !dbg !4426

if.end256:                                        ; preds = %if.then254, %land.lhs.true252, %lor.lhs.false249, %land.lhs.true246, %if.end242
  ret void, !dbg !4427
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @random_md5_state_init(i8* %random_source) #4 !dbg !4428 !ctir !306 {
entry:
  %random_source.addr = alloca i8*, align 8
  %buf = alloca [16 x i8], align 16, !ctir !441
  %r = alloca %struct.randread_source*, align 8, !ctir !442
  store i8* %random_source, i8** %random_source.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %random_source.addr, metadata !4429, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.declare(metadata [16 x i8]* %buf, metadata !4431, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.declare(metadata %struct.randread_source** %r, metadata !4433, metadata !DIExpression()), !dbg !4434
  %0 = load i8*, i8** %random_source.addr, align 8, !dbg !4435, !tbaa !2286
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 16), !dbg !4436
  store %struct.randread_source* %call, %struct.randread_source** %r, align 8, !dbg !4434, !tbaa !2286
  %1 = load %struct.randread_source*, %struct.randread_source** %r, align 8, !dbg !4437, !tbaa !2286
  %tobool = icmp ne %struct.randread_source* %1, null, !dbg !4437
  br i1 %tobool, label %if.end, label %if.then, !dbg !4439

if.then:                                          ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4440
  %2 = load i8*, i8** %random_source.addr, align 8, !dbg !4441, !tbaa !2286
  call void @sort_die(i8* %call1, i8* %2) #15, !dbg !4442
  unreachable, !dbg !4442

if.end:                                           ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %r, align 8, !dbg !4443, !tbaa !2286
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !4444
  call void @randread(%struct.randread_source* %3, i8* %arraydecay, i64 16), !dbg !4445
  %4 = load %struct.randread_source*, %struct.randread_source** %r, align 8, !dbg !4446, !tbaa !2286
  %call2 = call i32 @randread_free(%struct.randread_source* %4), !dbg !4448
  %cmp = icmp ne i32 %call2, 0, !dbg !4449
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !4450

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !4451
  %5 = load i8*, i8** %random_source.addr, align 8, !dbg !4452, !tbaa !2286
  call void @sort_die(i8* %call4, i8* %5) #15, !dbg !4453
  unreachable, !dbg !4453

if.end5:                                          ; preds = %if.end
  call void @md5_init_ctx(%struct.md5_ctx* @random_md5_state) #12, !dbg !4454
  %arraydecay6 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !4455
  call void @md5_process_bytes(i8* %arraydecay6, i64 16, %struct.md5_ctx* @random_md5_state) #12, !dbg !4456
  ret void, !dbg !4457
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check(i8* %file_name, i8 signext %checkonly) #4 !dbg !4458 !ctir !445 {
entry:
  %file_name.addr = alloca i8*, align 8
  %checkonly.addr = alloca i8, align 1
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %buf = alloca %struct.buffer, align 8, !ctir !458
  %temp = alloca %struct.line, align 8, !ctir !449
  %alloc = alloca i64, align 8, !ctir !55
  %line_number = alloca i64, align 8, !ctir !361
  %key = alloca %struct.keyfield*, align 8, !ctir !423
  %nonunique = alloca i8, align 1, !ctir !103
  %ordered = alloca i8, align 1, !ctir !103
  %line = alloca %struct.line*, align 8, !ctir !447
  %linebase = alloca %struct.line*, align 8, !ctir !447
  %disorder_line = alloca %struct.line*, align 8, !ctir !447
  %disorder_line_number = alloca i64, align 8, !ctir !361
  %hr_buf = alloca [21 x i8], align 16, !ctir !430
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !4459, metadata !DIExpression()), !dbg !4460
  store i8 %checkonly, i8* %checkonly.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %checkonly.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !4463, metadata !DIExpression()), !dbg !4464
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !4465, !tbaa !2286
  %call = call %struct._IO_FILE* @xfopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !4466
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !4464, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.buffer* %buf, metadata !4467, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.declare(metadata %struct.line* %temp, metadata !4469, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.declare(metadata i64* %alloc, metadata !4471, metadata !DIExpression()), !dbg !4472
  store i64 0, i64* %alloc, align 8, !dbg !4472, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %line_number, metadata !4473, metadata !DIExpression()), !dbg !4474
  store i64 0, i64* %line_number, align 8, !dbg !4474, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !4475, metadata !DIExpression()), !dbg !4476
  %1 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !4477, !tbaa !2286
  store %struct.keyfield* %1, %struct.keyfield** %key, align 8, !dbg !4476, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %nonunique, metadata !4478, metadata !DIExpression()), !dbg !4479
  %2 = load i8, i8* @unique, align 1, !dbg !4480, !tbaa !2430
  %tobool = trunc i8 %2 to i1, !dbg !4480
  %lnot = xor i1 %tobool, true, !dbg !4481
  %frombool = zext i1 %lnot to i8, !dbg !4479
  store i8 %frombool, i8* %nonunique, align 1, !dbg !4479, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %ordered, metadata !4482, metadata !DIExpression()), !dbg !4483
  store i8 1, i8* %ordered, align 1, !dbg !4483, !tbaa !2430
  %3 = load i64, i64* @merge_buffer_size, align 8, !dbg !4484, !tbaa !2447
  %4 = load i64, i64* @sort_size, align 8, !dbg !4484, !tbaa !2447
  %cmp = icmp ugt i64 %3, %4, !dbg !4484
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4484

cond.true:                                        ; preds = %entry
  %5 = load i64, i64* @merge_buffer_size, align 8, !dbg !4484, !tbaa !2447
  br label %cond.end, !dbg !4484

cond.false:                                       ; preds = %entry
  %6 = load i64, i64* @sort_size, align 8, !dbg !4484, !tbaa !2447
  br label %cond.end, !dbg !4484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !4484
  call void @initbuf(%struct.buffer* %buf, i64 32, i64 %cond), !dbg !4485
  %text = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4486, !ctir !449
  store i8* null, i8** %text, align 8, !dbg !4487, !tbaa !4488, !ctir !9
  br label %while.cond, !dbg !4490

while.cond:                                       ; preds = %if.end69, %cond.end
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4491, !tbaa !2286
  %8 = load i8*, i8** %file_name.addr, align 8, !dbg !4492, !tbaa !2286
  %call1 = call zeroext i1 @fillbuf(%struct.buffer* %buf, %struct._IO_FILE* %7, i8* %8), !dbg !4493
  br i1 %call1, label %while.body, label %while.end70, !dbg !4490

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !4494, metadata !DIExpression()), !dbg !4496
  %call2 = call %struct.line* @buffer_linelim(%struct.buffer* %buf), !dbg !4497
  store %struct.line* %call2, %struct.line** %line, align 8, !dbg !4496, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %linebase, metadata !4498, metadata !DIExpression()), !dbg !4499
  %9 = load %struct.line*, %struct.line** %line, align 8, !dbg !4500, !tbaa !2286
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !4501, !ctir !458
  %10 = load i64, i64* %nlines, align 8, !dbg !4501, !tbaa !4502, !ctir !55
  %idx.neg = sub i64 0, %10, !dbg !4504
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %9, i64 %idx.neg, !dbg !4504
  store %struct.line* %add.ptr, %struct.line** %linebase, align 8, !dbg !4499, !tbaa !2286
  %11 = load i64, i64* %alloc, align 8, !dbg !4505, !tbaa !2447
  %tobool3 = icmp ne i64 %11, 0, !dbg !4505
  br i1 %tobool3, label %land.lhs.true, label %if.end19, !dbg !4507

land.lhs.true:                                    ; preds = %while.body
  %12 = load i8, i8* %nonunique, align 1, !dbg !4508, !tbaa !2430
  %tobool4 = trunc i8 %12 to i1, !dbg !4508
  %conv = zext i1 %tobool4 to i32, !dbg !4508
  %13 = load %struct.line*, %struct.line** %line, align 8, !dbg !4509, !tbaa !2286
  %add.ptr5 = getelementptr inbounds %struct.line, %struct.line* %13, i64 -1, !dbg !4510
  %call6 = call i32 @compare(%struct.line* %temp, %struct.line* %add.ptr5), !dbg !4511
  %cmp7 = icmp sle i32 %conv, %call6, !dbg !4512
  br i1 %cmp7, label %if.then, label %if.end19, !dbg !4513

if.then:                                          ; preds = %land.lhs.true
  br label %found_disorder, !dbg !4514

found_disorder:                                   ; preds = %if.then30, %if.then
  call void @llvm.dbg.label(metadata !4515), !dbg !4517
  %14 = load i8, i8* %checkonly.addr, align 1, !dbg !4518, !tbaa !2438
  %conv9 = sext i8 %14 to i32, !dbg !4518
  %cmp10 = icmp eq i32 %conv9, 99, !dbg !4521
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !4522

if.then12:                                        ; preds = %found_disorder
  call void @llvm.dbg.declare(metadata %struct.line** %disorder_line, metadata !4523, metadata !DIExpression()), !dbg !4525
  %15 = load %struct.line*, %struct.line** %line, align 8, !dbg !4526, !tbaa !2286
  %add.ptr13 = getelementptr inbounds %struct.line, %struct.line* %15, i64 -1, !dbg !4527
  store %struct.line* %add.ptr13, %struct.line** %disorder_line, align 8, !dbg !4525, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %disorder_line_number, metadata !4528, metadata !DIExpression()), !dbg !4529
  %call14 = call %struct.line* @buffer_linelim(%struct.buffer* %buf), !dbg !4530
  %16 = load %struct.line*, %struct.line** %disorder_line, align 8, !dbg !4531, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint %struct.line* %call14 to i64, !dbg !4532
  %sub.ptr.rhs.cast = ptrtoint %struct.line* %16 to i64, !dbg !4532
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4532
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !4532
  %17 = load i64, i64* %line_number, align 8, !dbg !4533, !tbaa !2447
  %add = add i64 %sub.ptr.div, %17, !dbg !4534
  store i64 %add, i64* %disorder_line_number, align 8, !dbg !4529, !tbaa !2447
  call void @llvm.dbg.declare(metadata [21 x i8]* %hr_buf, metadata !4535, metadata !DIExpression()), !dbg !4536
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4537, !tbaa !2286
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.157, i64 0, i64 0)) #12, !dbg !4538
  %19 = load i8*, i8** @program_name, align 8, !dbg !4539, !tbaa !2286
  %20 = load i8*, i8** %file_name.addr, align 8, !dbg !4540, !tbaa !2286
  %21 = load i64, i64* %disorder_line_number, align 8, !dbg !4541, !tbaa !2447
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %hr_buf, i64 0, i64 0, !dbg !4542
  %call16 = call i8* @umaxtostr(i64 %21, i8* %arraydecay), !dbg !4543
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* %call15, i8* %19, i8* %20, i8* %call16), !dbg !4544
  %22 = load %struct.line*, %struct.line** %disorder_line, align 8, !dbg !4545, !tbaa !2286
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4546, !tbaa !2286
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i64 0, i64 0)) #12, !dbg !4547
  call void @write_line(%struct.line* %22, %struct._IO_FILE* %23, i8* %call18), !dbg !4548
  br label %if.end, !dbg !4549

if.end:                                           ; preds = %if.then12, %found_disorder
  store i8 0, i8* %ordered, align 1, !dbg !4550, !tbaa !2430
  br label %while.end70, !dbg !4551

if.end19:                                         ; preds = %land.lhs.true, %while.body
  br label %while.cond20, !dbg !4552

while.cond20:                                     ; preds = %if.end31, %if.end19
  %24 = load %struct.line*, %struct.line** %linebase, align 8, !dbg !4553, !tbaa !2286
  %25 = load %struct.line*, %struct.line** %line, align 8, !dbg !4554, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.line, %struct.line* %25, i32 -1, !dbg !4554
  store %struct.line* %incdec.ptr, %struct.line** %line, align 8, !dbg !4554, !tbaa !2286
  %cmp21 = icmp ult %struct.line* %24, %incdec.ptr, !dbg !4555
  br i1 %cmp21, label %while.body23, label %while.end, !dbg !4552

while.body23:                                     ; preds = %while.cond20
  %26 = load i8, i8* %nonunique, align 1, !dbg !4556, !tbaa !2430
  %tobool24 = trunc i8 %26 to i1, !dbg !4556
  %conv25 = zext i1 %tobool24 to i32, !dbg !4556
  %27 = load %struct.line*, %struct.line** %line, align 8, !dbg !4558, !tbaa !2286
  %28 = load %struct.line*, %struct.line** %line, align 8, !dbg !4559, !tbaa !2286
  %add.ptr26 = getelementptr inbounds %struct.line, %struct.line* %28, i64 -1, !dbg !4560
  %call27 = call i32 @compare(%struct.line* %27, %struct.line* %add.ptr26), !dbg !4561
  %cmp28 = icmp sle i32 %conv25, %call27, !dbg !4562
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !4563

if.then30:                                        ; preds = %while.body23
  br label %found_disorder, !dbg !4564

if.end31:                                         ; preds = %while.body23
  br label %while.cond20, !dbg !4552, !llvm.loop !4565

while.end:                                        ; preds = %while.cond20
  %nlines32 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !4567, !ctir !458
  %29 = load i64, i64* %nlines32, align 8, !dbg !4567, !tbaa !4502, !ctir !55
  %30 = load i64, i64* %line_number, align 8, !dbg !4568, !tbaa !2447
  %add33 = add i64 %30, %29, !dbg !4568
  store i64 %add33, i64* %line_number, align 8, !dbg !4568, !tbaa !2447
  %31 = load i64, i64* %alloc, align 8, !dbg !4569, !tbaa !2447
  %32 = load %struct.line*, %struct.line** %line, align 8, !dbg !4571, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %32, i32 0, i32 1, !dbg !4572, !ctir !448
  %33 = load i64, i64* %length, align 8, !dbg !4572, !tbaa !4573, !ctir !55
  %cmp34 = icmp ult i64 %31, %33, !dbg !4574
  br i1 %cmp34, label %if.then36, label %if.end47, !dbg !4575

if.then36:                                        ; preds = %while.end
  br label %do.body, !dbg !4576

do.body:                                          ; preds = %do.cond, %if.then36
  %34 = load i64, i64* %alloc, align 8, !dbg !4578, !tbaa !2447
  %mul = mul i64 %34, 2, !dbg !4578
  store i64 %mul, i64* %alloc, align 8, !dbg !4578, !tbaa !2447
  %35 = load i64, i64* %alloc, align 8, !dbg !4580, !tbaa !2447
  %tobool37 = icmp ne i64 %35, 0, !dbg !4580
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !4582

if.then38:                                        ; preds = %do.body
  %36 = load %struct.line*, %struct.line** %line, align 8, !dbg !4583, !tbaa !2286
  %length39 = getelementptr inbounds %struct.line, %struct.line* %36, i32 0, i32 1, !dbg !4585, !ctir !448
  %37 = load i64, i64* %length39, align 8, !dbg !4585, !tbaa !4573, !ctir !55
  store i64 %37, i64* %alloc, align 8, !dbg !4586, !tbaa !2447
  br label %do.end, !dbg !4587

if.end40:                                         ; preds = %do.body
  br label %do.cond, !dbg !4588

do.cond:                                          ; preds = %if.end40
  %38 = load i64, i64* %alloc, align 8, !dbg !4589, !tbaa !2447
  %39 = load %struct.line*, %struct.line** %line, align 8, !dbg !4590, !tbaa !2286
  %length41 = getelementptr inbounds %struct.line, %struct.line* %39, i32 0, i32 1, !dbg !4591, !ctir !448
  %40 = load i64, i64* %length41, align 8, !dbg !4591, !tbaa !4573, !ctir !55
  %cmp42 = icmp ult i64 %38, %40, !dbg !4592
  br i1 %cmp42, label %do.body, label %do.end, !dbg !4588, !llvm.loop !4593

do.end:                                           ; preds = %do.cond, %if.then38
  %text44 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4595, !ctir !449
  %41 = load i8*, i8** %text44, align 8, !dbg !4595, !tbaa !4488, !ctir !9
  call void @free(i8* %41) #12, !dbg !4596
  %42 = load i64, i64* %alloc, align 8, !dbg !4597, !tbaa !2447
  %call45 = call noalias i8* @xmalloc(i64 %42), !dbg !4598
  %text46 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4599, !ctir !449
  store i8* %call45, i8** %text46, align 8, !dbg !4600, !tbaa !4488, !ctir !9
  br label %if.end47, !dbg !4601

if.end47:                                         ; preds = %do.end, %while.end
  %text48 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4602, !ctir !449
  %43 = load i8*, i8** %text48, align 8, !dbg !4602, !tbaa !4488, !ctir !9
  %44 = load %struct.line*, %struct.line** %line, align 8, !dbg !4603, !tbaa !2286
  %text49 = getelementptr inbounds %struct.line, %struct.line* %44, i32 0, i32 0, !dbg !4604, !ctir !448
  %45 = load i8*, i8** %text49, align 8, !dbg !4604, !tbaa !4488, !ctir !9
  %46 = load %struct.line*, %struct.line** %line, align 8, !dbg !4605, !tbaa !2286
  %length50 = getelementptr inbounds %struct.line, %struct.line* %46, i32 0, i32 1, !dbg !4606, !ctir !448
  %47 = load i64, i64* %length50, align 8, !dbg !4606, !tbaa !4573, !ctir !55
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %45, i64 %47, i1 false), !dbg !4607
  %48 = load %struct.line*, %struct.line** %line, align 8, !dbg !4608, !tbaa !2286
  %length51 = getelementptr inbounds %struct.line, %struct.line* %48, i32 0, i32 1, !dbg !4609, !ctir !448
  %49 = load i64, i64* %length51, align 8, !dbg !4609, !tbaa !4573, !ctir !55
  %length52 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 1, !dbg !4610, !ctir !449
  store i64 %49, i64* %length52, align 8, !dbg !4611, !tbaa !4573, !ctir !55
  %50 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !4612, !tbaa !2286
  %tobool53 = icmp ne %struct.keyfield* %50, null, !dbg !4612
  br i1 %tobool53, label %if.then54, label %if.end69, !dbg !4614

if.then54:                                        ; preds = %if.end47
  %text55 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4615, !ctir !449
  %51 = load i8*, i8** %text55, align 8, !dbg !4615, !tbaa !4488, !ctir !9
  %52 = load %struct.line*, %struct.line** %line, align 8, !dbg !4617, !tbaa !2286
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %52, i32 0, i32 2, !dbg !4618, !ctir !448
  %53 = load i8*, i8** %keybeg, align 8, !dbg !4618, !tbaa !4619, !ctir !9
  %54 = load %struct.line*, %struct.line** %line, align 8, !dbg !4620, !tbaa !2286
  %text56 = getelementptr inbounds %struct.line, %struct.line* %54, i32 0, i32 0, !dbg !4621, !ctir !448
  %55 = load i8*, i8** %text56, align 8, !dbg !4621, !tbaa !4488, !ctir !9
  %sub.ptr.lhs.cast57 = ptrtoint i8* %53 to i64, !dbg !4622
  %sub.ptr.rhs.cast58 = ptrtoint i8* %55 to i64, !dbg !4622
  %sub.ptr.sub59 = sub i64 %sub.ptr.lhs.cast57, %sub.ptr.rhs.cast58, !dbg !4622
  %add.ptr60 = getelementptr inbounds i8, i8* %51, i64 %sub.ptr.sub59, !dbg !4623
  %keybeg61 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 2, !dbg !4624, !ctir !449
  store i8* %add.ptr60, i8** %keybeg61, align 8, !dbg !4625, !tbaa !4619, !ctir !9
  %text62 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4626, !ctir !449
  %56 = load i8*, i8** %text62, align 8, !dbg !4626, !tbaa !4488, !ctir !9
  %57 = load %struct.line*, %struct.line** %line, align 8, !dbg !4627, !tbaa !2286
  %keylim = getelementptr inbounds %struct.line, %struct.line* %57, i32 0, i32 3, !dbg !4628, !ctir !448
  %58 = load i8*, i8** %keylim, align 8, !dbg !4628, !tbaa !4629, !ctir !9
  %59 = load %struct.line*, %struct.line** %line, align 8, !dbg !4630, !tbaa !2286
  %text63 = getelementptr inbounds %struct.line, %struct.line* %59, i32 0, i32 0, !dbg !4631, !ctir !448
  %60 = load i8*, i8** %text63, align 8, !dbg !4631, !tbaa !4488, !ctir !9
  %sub.ptr.lhs.cast64 = ptrtoint i8* %58 to i64, !dbg !4632
  %sub.ptr.rhs.cast65 = ptrtoint i8* %60 to i64, !dbg !4632
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65, !dbg !4632
  %add.ptr67 = getelementptr inbounds i8, i8* %56, i64 %sub.ptr.sub66, !dbg !4633
  %keylim68 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 3, !dbg !4634, !ctir !449
  store i8* %add.ptr67, i8** %keylim68, align 8, !dbg !4635, !tbaa !4629, !ctir !9
  br label %if.end69, !dbg !4636

if.end69:                                         ; preds = %if.then54, %if.end47
  br label %while.cond, !dbg !4490, !llvm.loop !4637

while.end70:                                      ; preds = %if.end, %while.cond
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4639, !tbaa !2286
  %62 = load i8*, i8** %file_name.addr, align 8, !dbg !4640, !tbaa !2286
  call void @xfclose(%struct._IO_FILE* %61, i8* %62), !dbg !4641
  %buf71 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 0, !dbg !4642, !ctir !458
  %63 = load i8*, i8** %buf71, align 8, !dbg !4642, !tbaa !4643, !ctir !9
  call void @free(i8* %63) #12, !dbg !4644
  %text72 = getelementptr inbounds %struct.line, %struct.line* %temp, i32 0, i32 0, !dbg !4645, !ctir !449
  %64 = load i8*, i8** %text72, align 8, !dbg !4645, !tbaa !4488, !ctir !9
  call void @free(i8* %64) #12, !dbg !4646
  %65 = load i8, i8* %ordered, align 1, !dbg !4647, !tbaa !2430
  %tobool73 = trunc i8 %65 to i1, !dbg !4647
  ret i1 %tobool73, !dbg !4648
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_inputs(i8** %files, i64 %nfiles) #4 !dbg !4649 !ctir !526 {
entry:
  %files.addr = alloca i8**, align 8
  %nfiles.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8** %files, i8*** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %files.addr, metadata !4650, metadata !DIExpression()), !dbg !4651
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4654, metadata !DIExpression()), !dbg !4656
  store i64 0, i64* %i, align 8, !dbg !4656, !tbaa !2447
  br label %for.cond, !dbg !4657

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !4658, !tbaa !2447
  %1 = load i64, i64* %nfiles.addr, align 8, !dbg !4660, !tbaa !2447
  %cmp = icmp ult i64 %0, %1, !dbg !4661
  br i1 %cmp, label %for.body, label %for.end, !dbg !4662

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %files.addr, align 8, !dbg !4663, !tbaa !2286
  %3 = load i64, i64* %i, align 8, !dbg !4663, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !4663, !ctir !528
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !4663, !tbaa !2286
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !4663
  %cmp1 = icmp eq i32 %call, 0, !dbg !4663
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4666

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !4667

if.end:                                           ; preds = %for.body
  %5 = load i8**, i8*** %files.addr, align 8, !dbg !4668, !tbaa !2286
  %6 = load i64, i64* %i, align 8, !dbg !4670, !tbaa !2447
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 %6, !dbg !4668, !ctir !528
  %7 = load i8*, i8** %arrayidx2, align 8, !dbg !4668, !tbaa !2286
  %call3 = call i32 @euidaccess(i8* %7, i32 4) #12, !dbg !4671
  %cmp4 = icmp ne i32 %call3, 0, !dbg !4672
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !4673

if.then5:                                         ; preds = %if.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i64 0, i64 0)) #12, !dbg !4674
  %8 = load i8**, i8*** %files.addr, align 8, !dbg !4675, !tbaa !2286
  %9 = load i64, i64* %i, align 8, !dbg !4676, !tbaa !2447
  %arrayidx7 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !4675, !ctir !528
  %10 = load i8*, i8** %arrayidx7, align 8, !dbg !4675, !tbaa !2286
  call void @sort_die(i8* %call6, i8* %10) #15, !dbg !4677
  unreachable, !dbg !4677

if.end8:                                          ; preds = %if.end
  br label %for.inc, !dbg !4678

for.inc:                                          ; preds = %if.end8, %if.then
  %11 = load i64, i64* %i, align 8, !dbg !4679, !tbaa !2447
  %inc = add i64 %11, 1, !dbg !4679
  store i64 %inc, i64* %i, align 8, !dbg !4679, !tbaa !2447
  br label %for.cond, !dbg !4680, !llvm.loop !4681

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4683
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_output(i8* %outfile) #4 !dbg !4684 !ctir !306 {
entry:
  %outfile.addr = alloca i8*, align 8
  %oflags = alloca i32, align 4, !ctir !7
  %outfd = alloca i32, align 4, !ctir !7
  store i8* %outfile, i8** %outfile.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %outfile.addr, metadata !4685, metadata !DIExpression()), !dbg !4686
  %0 = load i8*, i8** %outfile.addr, align 8, !dbg !4687, !tbaa !2286
  %tobool = icmp ne i8* %0, null, !dbg !4687
  br i1 %tobool, label %if.then, label %if.end3, !dbg !4689

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %oflags, metadata !4690, metadata !DIExpression()), !dbg !4692
  store i32 524353, i32* %oflags, align 4, !dbg !4692, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %outfd, metadata !4693, metadata !DIExpression()), !dbg !4694
  %1 = load i8*, i8** %outfile.addr, align 8, !dbg !4695, !tbaa !2286
  %2 = load i32, i32* %oflags, align 4, !dbg !4696, !tbaa !2273
  %call = call i32 (i8*, i32, ...) @open(i8* %1, i32 %2, i32 438), !dbg !4697
  store i32 %call, i32* %outfd, align 4, !dbg !4694, !tbaa !2273
  %3 = load i32, i32* %outfd, align 4, !dbg !4698, !tbaa !2273
  %cmp = icmp slt i32 %3, 0, !dbg !4700
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4701

if.then1:                                         ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4702
  %4 = load i8*, i8** %outfile.addr, align 8, !dbg !4703, !tbaa !2286
  call void @sort_die(i8* %call2, i8* %4) #15, !dbg !4704
  unreachable, !dbg !4704

if.end:                                           ; preds = %if.then
  %5 = load i32, i32* %outfd, align 4, !dbg !4705, !tbaa !2273
  call void @move_fd(i32 %5, i32 1), !dbg !4706
  br label %if.end3, !dbg !4707

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !4708
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @merge(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, i8* %output_file) #4 !dbg !4709 !ctir !532 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8
  %ntemps.addr = alloca i64, align 8
  %nfiles.addr = alloca i64, align 8
  %output_file.addr = alloca i8*, align 8
  %in = alloca i64, align 8, !ctir !55
  %out = alloca i64, align 8, !ctir !55
  %remainder = alloca i64, align 8, !ctir !55
  %cheap_slots = alloca i64, align 8, !ctir !55
  %tfp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %temp = alloca %struct.tempnode*, align 8, !ctir !293
  %num_merged = alloca i64, align 8, !ctir !55
  %nshortmerge = alloca i64, align 8, !ctir !55
  %tfp32 = alloca %struct._IO_FILE*, align 8, !ctir !0
  %temp33 = alloca %struct.tempnode*, align 8, !ctir !293
  %num_merged35 = alloca i64, align 8, !ctir !55
  %fps = alloca %struct._IO_FILE**, align 8, !ctir !534
  %nopened = alloca i64, align 8, !ctir !55
  %ofp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %tfp92 = alloca %struct._IO_FILE*, align 8, !ctir !0
  %temp93 = alloca %struct.tempnode*, align 8, !ctir !293
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !4710, metadata !DIExpression()), !dbg !4711
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !4712, metadata !DIExpression()), !dbg !4713
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !4714, metadata !DIExpression()), !dbg !4715
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  br label %while.cond, !dbg !4718

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* @nmerge, align 4, !dbg !4719, !tbaa !2273
  %conv = zext i32 %0 to i64, !dbg !4719
  %1 = load i64, i64* %nfiles.addr, align 8, !dbg !4720, !tbaa !2447
  %cmp = icmp ult i64 %conv, %1, !dbg !4721
  br i1 %cmp, label %while.body, label %while.end, !dbg !4718

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %in, metadata !4722, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata i64* %out, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata i64* %remainder, metadata !4727, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata i64* %cheap_slots, metadata !4729, metadata !DIExpression()), !dbg !4730
  store i64 0, i64* %in, align 8, !dbg !4731, !tbaa !2447
  store i64 0, i64* %out, align 8, !dbg !4733, !tbaa !2447
  br label %for.cond, !dbg !4734

for.cond:                                         ; preds = %for.inc, %while.body
  %2 = load i32, i32* @nmerge, align 4, !dbg !4735, !tbaa !2273
  %conv2 = zext i32 %2 to i64, !dbg !4735
  %3 = load i64, i64* %nfiles.addr, align 8, !dbg !4737, !tbaa !2447
  %4 = load i64, i64* %in, align 8, !dbg !4738, !tbaa !2447
  %sub = sub i64 %3, %4, !dbg !4739
  %cmp3 = icmp ule i64 %conv2, %sub, !dbg !4740
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4741

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp, metadata !4742, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp, metadata !4745, metadata !DIExpression()), !dbg !4746
  %call = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tfp), !dbg !4747
  store %struct.tempnode* %call, %struct.tempnode** %temp, align 8, !dbg !4746, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %num_merged, metadata !4748, metadata !DIExpression()), !dbg !4749
  %5 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4750, !tbaa !2286
  %6 = load i64, i64* %in, align 8, !dbg !4751, !tbaa !2447
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %5, i64 %6, !dbg !4750, !ctir !288
  %7 = load i64, i64* %ntemps.addr, align 8, !dbg !4752, !tbaa !2447
  %8 = load i32, i32* @nmerge, align 4, !dbg !4752, !tbaa !2273
  %conv5 = zext i32 %8 to i64, !dbg !4752
  %cmp6 = icmp ult i64 %7, %conv5, !dbg !4752
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !4752

cond.true:                                        ; preds = %for.body
  %9 = load i64, i64* %ntemps.addr, align 8, !dbg !4752, !tbaa !2447
  br label %cond.end, !dbg !4752

cond.false:                                       ; preds = %for.body
  %10 = load i32, i32* @nmerge, align 4, !dbg !4752, !tbaa !2273
  %conv8 = zext i32 %10 to i64, !dbg !4752
  br label %cond.end, !dbg !4752

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %9, %cond.true ], [ %conv8, %cond.false ], !dbg !4752
  %11 = load i32, i32* @nmerge, align 4, !dbg !4753, !tbaa !2273
  %conv9 = zext i32 %11 to i64, !dbg !4753
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !4754, !tbaa !2286
  %13 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !4755, !tbaa !2286
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %13, i32 0, i32 3, !dbg !4756, !ctir !294
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !4755
  %call10 = call i64 @mergefiles(%struct.sortfile* %arrayidx, i64 %cond, i64 %conv9, %struct._IO_FILE* %12, i8* %arraydecay), !dbg !4757
  store i64 %call10, i64* %num_merged, align 8, !dbg !4749, !tbaa !2447
  %14 = load i64, i64* %ntemps.addr, align 8, !dbg !4758, !tbaa !2447
  %15 = load i64, i64* %num_merged, align 8, !dbg !4758, !tbaa !2447
  %cmp11 = icmp ult i64 %14, %15, !dbg !4758
  br i1 %cmp11, label %cond.true13, label %cond.false14, !dbg !4758

cond.true13:                                      ; preds = %cond.end
  %16 = load i64, i64* %ntemps.addr, align 8, !dbg !4758, !tbaa !2447
  br label %cond.end15, !dbg !4758

cond.false14:                                     ; preds = %cond.end
  %17 = load i64, i64* %num_merged, align 8, !dbg !4758, !tbaa !2447
  br label %cond.end15, !dbg !4758

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %16, %cond.true13 ], [ %17, %cond.false14 ], !dbg !4758
  %18 = load i64, i64* %ntemps.addr, align 8, !dbg !4759, !tbaa !2447
  %sub17 = sub i64 %18, %cond16, !dbg !4759
  store i64 %sub17, i64* %ntemps.addr, align 8, !dbg !4759, !tbaa !2447
  %19 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !4760, !tbaa !2286
  %name18 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %19, i32 0, i32 3, !dbg !4761, !ctir !294
  %arraydecay19 = getelementptr inbounds [0 x i8], [0 x i8]* %name18, i64 0, i64 0, !dbg !4760
  %20 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4762, !tbaa !2286
  %21 = load i64, i64* %out, align 8, !dbg !4763, !tbaa !2447
  %arrayidx20 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %20, i64 %21, !dbg !4762, !ctir !288
  %name21 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx20, i32 0, i32 0, !dbg !4764, !ctir !289
  store i8* %arraydecay19, i8** %name21, align 8, !dbg !4765, !tbaa !3348, !ctir !88
  %22 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !4766, !tbaa !2286
  %23 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4767, !tbaa !2286
  %24 = load i64, i64* %out, align 8, !dbg !4768, !tbaa !2447
  %arrayidx22 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %23, i64 %24, !dbg !4767, !ctir !288
  %temp23 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx22, i32 0, i32 1, !dbg !4769, !ctir !289
  store %struct.tempnode* %22, %struct.tempnode** %temp23, align 8, !dbg !4770, !tbaa !4771, !ctir !293
  %25 = load i64, i64* %num_merged, align 8, !dbg !4772, !tbaa !2447
  %26 = load i64, i64* %in, align 8, !dbg !4773, !tbaa !2447
  %add = add i64 %26, %25, !dbg !4773
  store i64 %add, i64* %in, align 8, !dbg !4773, !tbaa !2447
  br label %for.inc, !dbg !4774

for.inc:                                          ; preds = %cond.end15
  %27 = load i64, i64* %out, align 8, !dbg !4775, !tbaa !2447
  %inc = add i64 %27, 1, !dbg !4775
  store i64 %inc, i64* %out, align 8, !dbg !4775, !tbaa !2447
  br label %for.cond, !dbg !4776, !llvm.loop !4777

for.end:                                          ; preds = %for.cond
  %28 = load i64, i64* %nfiles.addr, align 8, !dbg !4779, !tbaa !2447
  %29 = load i64, i64* %in, align 8, !dbg !4780, !tbaa !2447
  %sub24 = sub i64 %28, %29, !dbg !4781
  store i64 %sub24, i64* %remainder, align 8, !dbg !4782, !tbaa !2447
  %30 = load i32, i32* @nmerge, align 4, !dbg !4783, !tbaa !2273
  %conv25 = zext i32 %30 to i64, !dbg !4783
  %31 = load i64, i64* %out, align 8, !dbg !4784, !tbaa !2447
  %32 = load i32, i32* @nmerge, align 4, !dbg !4785, !tbaa !2273
  %conv26 = zext i32 %32 to i64, !dbg !4785
  %rem = urem i64 %31, %conv26, !dbg !4786
  %sub27 = sub i64 %conv25, %rem, !dbg !4787
  store i64 %sub27, i64* %cheap_slots, align 8, !dbg !4788, !tbaa !2447
  %33 = load i64, i64* %cheap_slots, align 8, !dbg !4789, !tbaa !2447
  %34 = load i64, i64* %remainder, align 8, !dbg !4791, !tbaa !2447
  %cmp28 = icmp ult i64 %33, %34, !dbg !4792
  br i1 %cmp28, label %if.then, label %if.end, !dbg !4793

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %nshortmerge, metadata !4794, metadata !DIExpression()), !dbg !4796
  %35 = load i64, i64* %remainder, align 8, !dbg !4797, !tbaa !2447
  %36 = load i64, i64* %cheap_slots, align 8, !dbg !4798, !tbaa !2447
  %sub30 = sub i64 %35, %36, !dbg !4799
  %add31 = add i64 %sub30, 1, !dbg !4800
  store i64 %add31, i64* %nshortmerge, align 8, !dbg !4796, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp32, metadata !4801, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp33, metadata !4803, metadata !DIExpression()), !dbg !4804
  %call34 = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tfp32), !dbg !4805
  store %struct.tempnode* %call34, %struct.tempnode** %temp33, align 8, !dbg !4804, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %num_merged35, metadata !4806, metadata !DIExpression()), !dbg !4807
  %37 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4808, !tbaa !2286
  %38 = load i64, i64* %in, align 8, !dbg !4809, !tbaa !2447
  %arrayidx36 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %37, i64 %38, !dbg !4808, !ctir !288
  %39 = load i64, i64* %ntemps.addr, align 8, !dbg !4810, !tbaa !2447
  %40 = load i64, i64* %nshortmerge, align 8, !dbg !4810, !tbaa !2447
  %cmp37 = icmp ult i64 %39, %40, !dbg !4810
  br i1 %cmp37, label %cond.true39, label %cond.false40, !dbg !4810

cond.true39:                                      ; preds = %if.then
  %41 = load i64, i64* %ntemps.addr, align 8, !dbg !4810, !tbaa !2447
  br label %cond.end41, !dbg !4810

cond.false40:                                     ; preds = %if.then
  %42 = load i64, i64* %nshortmerge, align 8, !dbg !4810, !tbaa !2447
  br label %cond.end41, !dbg !4810

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond42 = phi i64 [ %41, %cond.true39 ], [ %42, %cond.false40 ], !dbg !4810
  %43 = load i64, i64* %nshortmerge, align 8, !dbg !4811, !tbaa !2447
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp32, align 8, !dbg !4812, !tbaa !2286
  %45 = load %struct.tempnode*, %struct.tempnode** %temp33, align 8, !dbg !4813, !tbaa !2286
  %name43 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %45, i32 0, i32 3, !dbg !4814, !ctir !294
  %arraydecay44 = getelementptr inbounds [0 x i8], [0 x i8]* %name43, i64 0, i64 0, !dbg !4813
  %call45 = call i64 @mergefiles(%struct.sortfile* %arrayidx36, i64 %cond42, i64 %43, %struct._IO_FILE* %44, i8* %arraydecay44), !dbg !4815
  store i64 %call45, i64* %num_merged35, align 8, !dbg !4807, !tbaa !2447
  %46 = load i64, i64* %ntemps.addr, align 8, !dbg !4816, !tbaa !2447
  %47 = load i64, i64* %num_merged35, align 8, !dbg !4816, !tbaa !2447
  %cmp46 = icmp ult i64 %46, %47, !dbg !4816
  br i1 %cmp46, label %cond.true48, label %cond.false49, !dbg !4816

cond.true48:                                      ; preds = %cond.end41
  %48 = load i64, i64* %ntemps.addr, align 8, !dbg !4816, !tbaa !2447
  br label %cond.end50, !dbg !4816

cond.false49:                                     ; preds = %cond.end41
  %49 = load i64, i64* %num_merged35, align 8, !dbg !4816, !tbaa !2447
  br label %cond.end50, !dbg !4816

cond.end50:                                       ; preds = %cond.false49, %cond.true48
  %cond51 = phi i64 [ %48, %cond.true48 ], [ %49, %cond.false49 ], !dbg !4816
  %50 = load i64, i64* %ntemps.addr, align 8, !dbg !4817, !tbaa !2447
  %sub52 = sub i64 %50, %cond51, !dbg !4817
  store i64 %sub52, i64* %ntemps.addr, align 8, !dbg !4817, !tbaa !2447
  %51 = load %struct.tempnode*, %struct.tempnode** %temp33, align 8, !dbg !4818, !tbaa !2286
  %name53 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %51, i32 0, i32 3, !dbg !4819, !ctir !294
  %arraydecay54 = getelementptr inbounds [0 x i8], [0 x i8]* %name53, i64 0, i64 0, !dbg !4818
  %52 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4820, !tbaa !2286
  %53 = load i64, i64* %out, align 8, !dbg !4821, !tbaa !2447
  %arrayidx55 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %52, i64 %53, !dbg !4820, !ctir !288
  %name56 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx55, i32 0, i32 0, !dbg !4822, !ctir !289
  store i8* %arraydecay54, i8** %name56, align 8, !dbg !4823, !tbaa !3348, !ctir !88
  %54 = load %struct.tempnode*, %struct.tempnode** %temp33, align 8, !dbg !4824, !tbaa !2286
  %55 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4825, !tbaa !2286
  %56 = load i64, i64* %out, align 8, !dbg !4826, !tbaa !2447
  %inc57 = add i64 %56, 1, !dbg !4826
  store i64 %inc57, i64* %out, align 8, !dbg !4826, !tbaa !2447
  %arrayidx58 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %55, i64 %56, !dbg !4825, !ctir !288
  %temp59 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx58, i32 0, i32 1, !dbg !4827, !ctir !289
  store %struct.tempnode* %54, %struct.tempnode** %temp59, align 8, !dbg !4828, !tbaa !4771, !ctir !293
  %57 = load i64, i64* %num_merged35, align 8, !dbg !4829, !tbaa !2447
  %58 = load i64, i64* %in, align 8, !dbg !4830, !tbaa !2447
  %add60 = add i64 %58, %57, !dbg !4830
  store i64 %add60, i64* %in, align 8, !dbg !4830, !tbaa !2447
  br label %if.end, !dbg !4831

if.end:                                           ; preds = %cond.end50, %for.end
  %59 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4832, !tbaa !2286
  %60 = load i64, i64* %out, align 8, !dbg !4833, !tbaa !2447
  %arrayidx61 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %59, i64 %60, !dbg !4832, !ctir !288
  %61 = bitcast %struct.sortfile* %arrayidx61 to i8*, !dbg !4834
  %62 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4835, !tbaa !2286
  %63 = load i64, i64* %in, align 8, !dbg !4836, !tbaa !2447
  %arrayidx62 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %62, i64 %63, !dbg !4835, !ctir !288
  %64 = bitcast %struct.sortfile* %arrayidx62 to i8*, !dbg !4834
  %65 = load i64, i64* %nfiles.addr, align 8, !dbg !4837, !tbaa !2447
  %66 = load i64, i64* %in, align 8, !dbg !4838, !tbaa !2447
  %sub63 = sub i64 %65, %66, !dbg !4839
  %mul = mul i64 %sub63, 16, !dbg !4840
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %64, i64 %mul, i1 false), !dbg !4834
  %67 = load i64, i64* %out, align 8, !dbg !4841, !tbaa !2447
  %68 = load i64, i64* %ntemps.addr, align 8, !dbg !4842, !tbaa !2447
  %add64 = add i64 %68, %67, !dbg !4842
  store i64 %add64, i64* %ntemps.addr, align 8, !dbg !4842, !tbaa !2447
  %69 = load i64, i64* %in, align 8, !dbg !4843, !tbaa !2447
  %70 = load i64, i64* %out, align 8, !dbg !4844, !tbaa !2447
  %sub65 = sub i64 %69, %70, !dbg !4845
  %71 = load i64, i64* %nfiles.addr, align 8, !dbg !4846, !tbaa !2447
  %sub66 = sub i64 %71, %sub65, !dbg !4846
  store i64 %sub66, i64* %nfiles.addr, align 8, !dbg !4846, !tbaa !2447
  br label %while.cond, !dbg !4718, !llvm.loop !4847

while.end:                                        ; preds = %while.cond
  %72 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4849, !tbaa !2286
  %73 = load i64, i64* %ntemps.addr, align 8, !dbg !4850, !tbaa !2447
  %74 = load i64, i64* %nfiles.addr, align 8, !dbg !4851, !tbaa !2447
  %75 = load i8*, i8** %output_file.addr, align 8, !dbg !4852, !tbaa !2286
  call void @avoid_trashing_input(%struct.sortfile* %72, i64 %73, i64 %74, i8* %75), !dbg !4853
  br label %while.body68, !dbg !4854

while.body68:                                     ; preds = %while.end, %cond.end115
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps, metadata !4855, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.declare(metadata i64* %nopened, metadata !4858, metadata !DIExpression()), !dbg !4859
  %76 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4860, !tbaa !2286
  %77 = load i64, i64* %nfiles.addr, align 8, !dbg !4861, !tbaa !2447
  %call69 = call i64 @open_input_files(%struct.sortfile* %76, i64 %77, %struct._IO_FILE*** %fps), !dbg !4862
  store i64 %call69, i64* %nopened, align 8, !dbg !4859, !tbaa !2447
  %78 = load i64, i64* %nopened, align 8, !dbg !4863, !tbaa !2447
  %79 = load i64, i64* %nfiles.addr, align 8, !dbg !4865, !tbaa !2447
  %cmp70 = icmp eq i64 %78, %79, !dbg !4866
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !4867

if.then72:                                        ; preds = %while.body68
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %ofp, metadata !4868, metadata !DIExpression()), !dbg !4870
  %80 = load i8*, i8** %output_file.addr, align 8, !dbg !4871, !tbaa !2286
  %call73 = call %struct._IO_FILE* @stream_open(i8* %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i64 0, i64 0)), !dbg !4872
  store %struct._IO_FILE* %call73, %struct._IO_FILE** %ofp, align 8, !dbg !4870, !tbaa !2286
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp, align 8, !dbg !4873, !tbaa !2286
  %tobool = icmp ne %struct._IO_FILE* %81, null, !dbg !4873
  br i1 %tobool, label %if.then74, label %if.end75, !dbg !4875

if.then74:                                        ; preds = %if.then72
  %82 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4876, !tbaa !2286
  %83 = load i64, i64* %ntemps.addr, align 8, !dbg !4878, !tbaa !2447
  %84 = load i64, i64* %nfiles.addr, align 8, !dbg !4879, !tbaa !2447
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp, align 8, !dbg !4880, !tbaa !2286
  %86 = load i8*, i8** %output_file.addr, align 8, !dbg !4881, !tbaa !2286
  %87 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !4882, !tbaa !2286
  call void @mergefps(%struct.sortfile* %82, i64 %83, i64 %84, %struct._IO_FILE* %85, i8* %86, %struct._IO_FILE** %87), !dbg !4883
  br label %while.end131, !dbg !4884

if.end75:                                         ; preds = %if.then72
  %call76 = call i32* @__errno_location() #16, !dbg !4885
  %88 = load i32, i32* %call76, align 4, !dbg !4885, !tbaa !2273, !ctir !7
  %cmp77 = icmp ne i32 %88, 24, !dbg !4887
  br i1 %cmp77, label %if.then81, label %lor.lhs.false, !dbg !4888

lor.lhs.false:                                    ; preds = %if.end75
  %89 = load i64, i64* %nopened, align 8, !dbg !4889, !tbaa !2447
  %cmp79 = icmp ule i64 %89, 2, !dbg !4890
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !4891

if.then81:                                        ; preds = %lor.lhs.false, %if.end75
  %call82 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4892
  %90 = load i8*, i8** %output_file.addr, align 8, !dbg !4893, !tbaa !2286
  call void @sort_die(i8* %call82, i8* %90) #15, !dbg !4894
  unreachable, !dbg !4894

if.end83:                                         ; preds = %lor.lhs.false
  br label %if.end91, !dbg !4895

if.else:                                          ; preds = %while.body68
  %91 = load i64, i64* %nopened, align 8, !dbg !4896, !tbaa !2447
  %cmp84 = icmp ule i64 %91, 2, !dbg !4898
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !4899

if.then86:                                        ; preds = %if.else
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !4900
  %92 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4901, !tbaa !2286
  %93 = load i64, i64* %nopened, align 8, !dbg !4902, !tbaa !2447
  %arrayidx88 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %92, i64 %93, !dbg !4901, !ctir !288
  %name89 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx88, i32 0, i32 0, !dbg !4903, !ctir !289
  %94 = load i8*, i8** %name89, align 8, !dbg !4903, !tbaa !3348, !ctir !88
  call void @sort_die(i8* %call87, i8* %94) #15, !dbg !4904
  unreachable, !dbg !4904

if.end90:                                         ; preds = %if.else
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end83
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp92, metadata !4905, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp93, metadata !4907, metadata !DIExpression()), !dbg !4908
  br label %do.body, !dbg !4909

do.body:                                          ; preds = %do.cond, %if.end91
  %95 = load i64, i64* %nopened, align 8, !dbg !4910, !tbaa !2447
  %dec = add i64 %95, -1, !dbg !4910
  store i64 %dec, i64* %nopened, align 8, !dbg !4910, !tbaa !2447
  %96 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !4912, !tbaa !2286
  %97 = load i64, i64* %nopened, align 8, !dbg !4913, !tbaa !2447
  %arrayidx94 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %96, i64 %97, !dbg !4912, !ctir !534
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx94, align 8, !dbg !4912, !tbaa !2286
  %99 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4914, !tbaa !2286
  %100 = load i64, i64* %nopened, align 8, !dbg !4915, !tbaa !2447
  %arrayidx95 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %99, i64 %100, !dbg !4914, !ctir !288
  %name96 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx95, i32 0, i32 0, !dbg !4916, !ctir !289
  %101 = load i8*, i8** %name96, align 8, !dbg !4916, !tbaa !3348, !ctir !88
  call void @xfclose(%struct._IO_FILE* %98, i8* %101), !dbg !4917
  %102 = load i64, i64* %nopened, align 8, !dbg !4918, !tbaa !2447
  %cmp97 = icmp ule i64 %102, 2, !dbg !4919
  %lnot = xor i1 %cmp97, true, !dbg !4920
  %call99 = call %struct.tempnode* @maybe_create_temp(%struct._IO_FILE** %tfp92, i1 zeroext %lnot), !dbg !4921
  store %struct.tempnode* %call99, %struct.tempnode** %temp93, align 8, !dbg !4922, !tbaa !2286
  br label %do.cond, !dbg !4923

do.cond:                                          ; preds = %do.body
  %103 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !4924, !tbaa !2286
  %tobool100 = icmp ne %struct.tempnode* %103, null, !dbg !4925
  %lnot101 = xor i1 %tobool100, true, !dbg !4925
  br i1 %lnot101, label %do.body, label %do.end, !dbg !4923, !llvm.loop !4926

do.end:                                           ; preds = %do.cond
  %104 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4928, !tbaa !2286
  %arrayidx102 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %104, i64 0, !dbg !4928, !ctir !288
  %105 = load i64, i64* %ntemps.addr, align 8, !dbg !4929, !tbaa !2447
  %106 = load i64, i64* %nopened, align 8, !dbg !4929, !tbaa !2447
  %cmp103 = icmp ult i64 %105, %106, !dbg !4929
  br i1 %cmp103, label %cond.true105, label %cond.false106, !dbg !4929

cond.true105:                                     ; preds = %do.end
  %107 = load i64, i64* %ntemps.addr, align 8, !dbg !4929, !tbaa !2447
  br label %cond.end107, !dbg !4929

cond.false106:                                    ; preds = %do.end
  %108 = load i64, i64* %nopened, align 8, !dbg !4929, !tbaa !2447
  br label %cond.end107, !dbg !4929

cond.end107:                                      ; preds = %cond.false106, %cond.true105
  %cond108 = phi i64 [ %107, %cond.true105 ], [ %108, %cond.false106 ], !dbg !4929
  %109 = load i64, i64* %nopened, align 8, !dbg !4930, !tbaa !2447
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp92, align 8, !dbg !4931, !tbaa !2286
  %111 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !4932, !tbaa !2286
  %name109 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %111, i32 0, i32 3, !dbg !4933, !ctir !294
  %arraydecay110 = getelementptr inbounds [0 x i8], [0 x i8]* %name109, i64 0, i64 0, !dbg !4932
  %112 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !4934, !tbaa !2286
  call void @mergefps(%struct.sortfile* %arrayidx102, i64 %cond108, i64 %109, %struct._IO_FILE* %110, i8* %arraydecay110, %struct._IO_FILE** %112), !dbg !4935
  %113 = load i64, i64* %ntemps.addr, align 8, !dbg !4936, !tbaa !2447
  %114 = load i64, i64* %nopened, align 8, !dbg !4936, !tbaa !2447
  %cmp111 = icmp ult i64 %113, %114, !dbg !4936
  br i1 %cmp111, label %cond.true113, label %cond.false114, !dbg !4936

cond.true113:                                     ; preds = %cond.end107
  %115 = load i64, i64* %ntemps.addr, align 8, !dbg !4936, !tbaa !2447
  br label %cond.end115, !dbg !4936

cond.false114:                                    ; preds = %cond.end107
  %116 = load i64, i64* %nopened, align 8, !dbg !4936, !tbaa !2447
  br label %cond.end115, !dbg !4936

cond.end115:                                      ; preds = %cond.false114, %cond.true113
  %cond116 = phi i64 [ %115, %cond.true113 ], [ %116, %cond.false114 ], !dbg !4936
  %117 = load i64, i64* %ntemps.addr, align 8, !dbg !4937, !tbaa !2447
  %sub117 = sub i64 %117, %cond116, !dbg !4937
  store i64 %sub117, i64* %ntemps.addr, align 8, !dbg !4937, !tbaa !2447
  %118 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !4938, !tbaa !2286
  %name118 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %118, i32 0, i32 3, !dbg !4939, !ctir !294
  %arraydecay119 = getelementptr inbounds [0 x i8], [0 x i8]* %name118, i64 0, i64 0, !dbg !4938
  %119 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4940, !tbaa !2286
  %arrayidx120 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %119, i64 0, !dbg !4940, !ctir !288
  %name121 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx120, i32 0, i32 0, !dbg !4941, !ctir !289
  store i8* %arraydecay119, i8** %name121, align 8, !dbg !4942, !tbaa !3348, !ctir !88
  %120 = load %struct.tempnode*, %struct.tempnode** %temp93, align 8, !dbg !4943, !tbaa !2286
  %121 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4944, !tbaa !2286
  %arrayidx122 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %121, i64 0, !dbg !4944, !ctir !288
  %temp123 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx122, i32 0, i32 1, !dbg !4945, !ctir !289
  store %struct.tempnode* %120, %struct.tempnode** %temp123, align 8, !dbg !4946, !tbaa !4771, !ctir !293
  %122 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4947, !tbaa !2286
  %arrayidx124 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %122, i64 1, !dbg !4947, !ctir !288
  %123 = bitcast %struct.sortfile* %arrayidx124 to i8*, !dbg !4948
  %124 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !4949, !tbaa !2286
  %125 = load i64, i64* %nopened, align 8, !dbg !4950, !tbaa !2447
  %arrayidx125 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %124, i64 %125, !dbg !4949, !ctir !288
  %126 = bitcast %struct.sortfile* %arrayidx125 to i8*, !dbg !4948
  %127 = load i64, i64* %nfiles.addr, align 8, !dbg !4951, !tbaa !2447
  %128 = load i64, i64* %nopened, align 8, !dbg !4952, !tbaa !2447
  %sub126 = sub i64 %127, %128, !dbg !4953
  %mul127 = mul i64 %sub126, 16, !dbg !4954
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %126, i64 %mul127, i1 false), !dbg !4948
  %129 = load i64, i64* %ntemps.addr, align 8, !dbg !4955, !tbaa !2447
  %inc128 = add i64 %129, 1, !dbg !4955
  store i64 %inc128, i64* %ntemps.addr, align 8, !dbg !4955, !tbaa !2447
  %130 = load i64, i64* %nopened, align 8, !dbg !4956, !tbaa !2447
  %sub129 = sub i64 %130, 1, !dbg !4957
  %131 = load i64, i64* %nfiles.addr, align 8, !dbg !4958, !tbaa !2447
  %sub130 = sub i64 %131, %sub129, !dbg !4958
  store i64 %sub130, i64* %nfiles.addr, align 8, !dbg !4958, !tbaa !2447
  br label %while.body68, !dbg !4854, !llvm.loop !4959

while.end131:                                     ; preds = %if.then74
  ret void, !dbg !4961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sort(i8** %files, i64 %nfiles, i8* %output_file, i64 %nthreads) #4 !dbg !4962 !ctir !574 {
entry:
  %files.addr = alloca i8**, align 8
  %nfiles.addr = alloca i64, align 8
  %output_file.addr = alloca i8*, align 8
  %nthreads.addr = alloca i64, align 8
  %buf = alloca %struct.buffer, align 8, !ctir !458
  %ntemps = alloca i64, align 8, !ctir !55
  %output_file_created = alloca i8, align 1, !ctir !103
  %temp_output = alloca i8*, align 8, !ctir !88
  %file = alloca i8*, align 8, !ctir !88
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %tfp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %bytes_per_line = alloca i64, align 8, !ctir !55
  %tmp = alloca i64, align 8, !ctir !55
  %mult = alloca i64, align 8, !ctir !55
  %line = alloca %struct.line*, align 8, !ctir !469
  %queue = alloca %struct.merge_node_queue, align 8, !ctir !631
  %merge_tree = alloca %struct.merge_node*, align 8, !ctir !576
  %node = alloca %struct.tempnode*, align 8, !ctir !293
  %tempfiles = alloca %struct.sortfile*, align 8, !ctir !288
  %i = alloca i64, align 8, !ctir !55
  store i8** %files, i8*** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %files.addr, metadata !4963, metadata !DIExpression()), !dbg !4964
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.declare(metadata %struct.buffer* %buf, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata i64* %ntemps, metadata !4973, metadata !DIExpression()), !dbg !4974
  store i64 0, i64* %ntemps, align 8, !dbg !4974, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8* %output_file_created, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i8 0, i8* %output_file_created, align 1, !dbg !4976, !tbaa !2430
  %alloc = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 3, !dbg !4977, !ctir !458
  store i64 0, i64* %alloc, align 8, !dbg !4978, !tbaa !4979, !ctir !55
  br label %while.cond, !dbg !4980

while.cond:                                       ; preds = %while.end52, %entry
  %0 = load i64, i64* %nfiles.addr, align 8, !dbg !4981, !tbaa !2447
  %tobool = icmp ne i64 %0, 0, !dbg !4980
  br i1 %tobool, label %while.body, label %while.end53, !dbg !4980

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %temp_output, metadata !4982, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata i8** %file, metadata !4985, metadata !DIExpression()), !dbg !4986
  %1 = load i8**, i8*** %files.addr, align 8, !dbg !4987, !tbaa !2286
  %2 = load i8*, i8** %1, align 8, !dbg !4988, !tbaa !2286, !ctir !529
  store i8* %2, i8** %file, align 8, !dbg !4986, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !4989, metadata !DIExpression()), !dbg !4990
  %3 = load i8*, i8** %file, align 8, !dbg !4991, !tbaa !2286
  %call = call %struct._IO_FILE* @xfopen(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !4992
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !4990, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.declare(metadata i64* %bytes_per_line, metadata !4995, metadata !DIExpression()), !dbg !4996
  %4 = load i64, i64* %nthreads.addr, align 8, !dbg !4997, !tbaa !2447
  %cmp = icmp ugt i64 %4, 1, !dbg !4999
  br i1 %cmp, label %if.then, label %if.else, !dbg !5000

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !5001, metadata !DIExpression()), !dbg !5003
  store i64 1, i64* %tmp, align 8, !dbg !5003, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %mult, metadata !5004, metadata !DIExpression()), !dbg !5005
  store i64 1, i64* %mult, align 8, !dbg !5005, !tbaa !2447
  br label %while.cond1, !dbg !5006

while.cond1:                                      ; preds = %while.body3, %if.then
  %5 = load i64, i64* %tmp, align 8, !dbg !5007, !tbaa !2447
  %6 = load i64, i64* %nthreads.addr, align 8, !dbg !5008, !tbaa !2447
  %cmp2 = icmp ult i64 %5, %6, !dbg !5009
  br i1 %cmp2, label %while.body3, label %while.end, !dbg !5006

while.body3:                                      ; preds = %while.cond1
  %7 = load i64, i64* %tmp, align 8, !dbg !5010, !tbaa !2447
  %mul = mul i64 %7, 2, !dbg !5010
  store i64 %mul, i64* %tmp, align 8, !dbg !5010, !tbaa !2447
  %8 = load i64, i64* %mult, align 8, !dbg !5012, !tbaa !2447
  %inc = add i64 %8, 1, !dbg !5012
  store i64 %inc, i64* %mult, align 8, !dbg !5012, !tbaa !2447
  br label %while.cond1, !dbg !5006, !llvm.loop !5013

while.end:                                        ; preds = %while.cond1
  %9 = load i64, i64* %mult, align 8, !dbg !5015, !tbaa !2447
  %mul4 = mul i64 %9, 32, !dbg !5016
  store i64 %mul4, i64* %bytes_per_line, align 8, !dbg !5017, !tbaa !2447
  br label %if.end, !dbg !5018

if.else:                                          ; preds = %while.body
  store i64 48, i64* %bytes_per_line, align 8, !dbg !5019, !tbaa !2447
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  %alloc5 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 3, !dbg !5020, !ctir !458
  %10 = load i64, i64* %alloc5, align 8, !dbg !5020, !tbaa !4979, !ctir !55
  %tobool6 = icmp ne i64 %10, 0, !dbg !5022
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !5023

if.then7:                                         ; preds = %if.end
  %11 = load i64, i64* %bytes_per_line, align 8, !dbg !5024, !tbaa !2447
  %12 = load i8**, i8*** %files.addr, align 8, !dbg !5025, !tbaa !2286
  %13 = load i64, i64* %nfiles.addr, align 8, !dbg !5026, !tbaa !2447
  %14 = load i64, i64* %bytes_per_line, align 8, !dbg !5027, !tbaa !2447
  %call8 = call i64 @sort_buffer_size(%struct._IO_FILE** %fp, i64 1, i8** %12, i64 %13, i64 %14), !dbg !5028
  call void @initbuf(%struct.buffer* %buf, i64 %11, i64 %call8), !dbg !5029
  br label %if.end9, !dbg !5029

if.end9:                                          ; preds = %if.then7, %if.end
  %eof = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 6, !dbg !5030, !ctir !458
  store i8 0, i8* %eof, align 8, !dbg !5031, !tbaa !5032, !ctir !103
  %15 = load i8**, i8*** %files.addr, align 8, !dbg !5033, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8*, i8** %15, i32 1, !dbg !5033
  store i8** %incdec.ptr, i8*** %files.addr, align 8, !dbg !5033, !tbaa !2286
  %16 = load i64, i64* %nfiles.addr, align 8, !dbg !5034, !tbaa !2447
  %dec = add i64 %16, -1, !dbg !5034
  store i64 %dec, i64* %nfiles.addr, align 8, !dbg !5034, !tbaa !2447
  br label %while.cond10, !dbg !5035

while.cond10:                                     ; preds = %if.end51, %if.end9
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !5036, !tbaa !2286
  %18 = load i8*, i8** %file, align 8, !dbg !5037, !tbaa !2286
  %call11 = call zeroext i1 @fillbuf(%struct.buffer* %buf, %struct._IO_FILE* %17, i8* %18), !dbg !5038
  br i1 %call11, label %while.body12, label %while.end52, !dbg !5035

while.body12:                                     ; preds = %while.cond10
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !5039, metadata !DIExpression()), !dbg !5041
  %eof13 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 6, !dbg !5042, !ctir !458
  %19 = load i8, i8* %eof13, align 8, !dbg !5042, !tbaa !5032
  %tobool14 = trunc i8 %19 to i1, !dbg !5042, !ctir !103
  br i1 %tobool14, label %land.lhs.true, label %if.end23, !dbg !5044

land.lhs.true:                                    ; preds = %while.body12
  %20 = load i64, i64* %nfiles.addr, align 8, !dbg !5045, !tbaa !2447
  %tobool15 = icmp ne i64 %20, 0, !dbg !5045
  br i1 %tobool15, label %land.lhs.true16, label %if.end23, !dbg !5046

land.lhs.true16:                                  ; preds = %land.lhs.true
  %21 = load i64, i64* %bytes_per_line, align 8, !dbg !5047, !tbaa !2447
  %add = add i64 %21, 1, !dbg !5048
  %alloc17 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 3, !dbg !5049, !ctir !458
  %22 = load i64, i64* %alloc17, align 8, !dbg !5049, !tbaa !4979, !ctir !55
  %used = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 1, !dbg !5050, !ctir !458
  %23 = load i64, i64* %used, align 8, !dbg !5050, !tbaa !5051, !ctir !55
  %sub = sub i64 %22, %23, !dbg !5052
  %24 = load i64, i64* %bytes_per_line, align 8, !dbg !5053, !tbaa !2447
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5054, !ctir !458
  %25 = load i64, i64* %nlines, align 8, !dbg !5054, !tbaa !4502, !ctir !55
  %mul18 = mul i64 %24, %25, !dbg !5055
  %sub19 = sub i64 %sub, %mul18, !dbg !5056
  %cmp20 = icmp ult i64 %add, %sub19, !dbg !5057
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !5058

if.then21:                                        ; preds = %land.lhs.true16
  %used22 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 1, !dbg !5059, !ctir !458
  %26 = load i64, i64* %used22, align 8, !dbg !5059, !tbaa !5051, !ctir !55
  %left = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 4, !dbg !5061, !ctir !458
  store i64 %26, i64* %left, align 8, !dbg !5062, !tbaa !5063, !ctir !55
  br label %while.end52, !dbg !5064

if.end23:                                         ; preds = %land.lhs.true16, %land.lhs.true, %while.body12
  store i8* null, i8** getelementptr inbounds (%struct.line, %struct.line* @saved_line, i32 0, i32 0), align 8, !dbg !5065, !tbaa !4488, !ctir !9
  %call24 = call %struct.line* @buffer_linelim(%struct.buffer* %buf), !dbg !5066
  store %struct.line* %call24, %struct.line** %line, align 8, !dbg !5067, !tbaa !2286
  %eof25 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 6, !dbg !5068, !ctir !458
  %27 = load i8, i8* %eof25, align 8, !dbg !5068, !tbaa !5032
  %tobool26 = trunc i8 %27 to i1, !dbg !5068, !ctir !103
  br i1 %tobool26, label %land.lhs.true27, label %if.else36, !dbg !5070

land.lhs.true27:                                  ; preds = %if.end23
  %28 = load i64, i64* %nfiles.addr, align 8, !dbg !5071, !tbaa !2447
  %tobool28 = icmp ne i64 %28, 0, !dbg !5071
  br i1 %tobool28, label %if.else36, label %land.lhs.true29, !dbg !5072

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %29 = load i64, i64* %ntemps, align 8, !dbg !5073, !tbaa !2447
  %tobool30 = icmp ne i64 %29, 0, !dbg !5073
  br i1 %tobool30, label %if.else36, label %land.lhs.true31, !dbg !5074

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %left32 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 4, !dbg !5075, !ctir !458
  %30 = load i64, i64* %left32, align 8, !dbg !5075, !tbaa !5063, !ctir !55
  %tobool33 = icmp ne i64 %30, 0, !dbg !5076
  br i1 %tobool33, label %if.else36, label %if.then34, !dbg !5077

if.then34:                                        ; preds = %land.lhs.true31
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !5078, !tbaa !2286
  %32 = load i8*, i8** %file, align 8, !dbg !5080, !tbaa !2286
  call void @xfclose(%struct._IO_FILE* %31, i8* %32), !dbg !5081
  %33 = load i8*, i8** %output_file.addr, align 8, !dbg !5082, !tbaa !2286
  %call35 = call %struct._IO_FILE* @xfopen(i8* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i64 0, i64 0)), !dbg !5083
  store %struct._IO_FILE* %call35, %struct._IO_FILE** %tfp, align 8, !dbg !5084, !tbaa !2286
  %34 = load i8*, i8** %output_file.addr, align 8, !dbg !5085, !tbaa !2286
  store i8* %34, i8** %temp_output, align 8, !dbg !5086, !tbaa !2286
  store i8 1, i8* %output_file_created, align 1, !dbg !5087, !tbaa !2430
  br label %if.end39, !dbg !5088

if.else36:                                        ; preds = %land.lhs.true31, %land.lhs.true29, %land.lhs.true27, %if.end23
  %35 = load i64, i64* %ntemps, align 8, !dbg !5089, !tbaa !2447
  %inc37 = add i64 %35, 1, !dbg !5089
  store i64 %inc37, i64* %ntemps, align 8, !dbg !5089, !tbaa !2447
  %call38 = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tfp), !dbg !5091
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %call38, i32 0, i32 3, !dbg !5092, !ctir !294
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !5091
  store i8* %arraydecay, i8** %temp_output, align 8, !dbg !5093, !tbaa !2286
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.then34
  %nlines40 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5094, !ctir !458
  %36 = load i64, i64* %nlines40, align 8, !dbg !5094, !tbaa !4502, !ctir !55
  %cmp41 = icmp ult i64 1, %36, !dbg !5096
  br i1 %cmp41, label %if.then42, label %if.else46, !dbg !5097

if.then42:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue* %queue, metadata !5098, metadata !DIExpression()), !dbg !5100
  %37 = load i64, i64* %nthreads.addr, align 8, !dbg !5101, !tbaa !2447
  call void @queue_init(%struct.merge_node_queue* %queue, i64 %37), !dbg !5102
  call void @llvm.dbg.declare(metadata %struct.merge_node** %merge_tree, metadata !5103, metadata !DIExpression()), !dbg !5104
  %38 = load i64, i64* %nthreads.addr, align 8, !dbg !5105, !tbaa !2447
  %nlines43 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5106, !ctir !458
  %39 = load i64, i64* %nlines43, align 8, !dbg !5106, !tbaa !4502, !ctir !55
  %40 = load %struct.line*, %struct.line** %line, align 8, !dbg !5107, !tbaa !2286
  %call44 = call %struct.merge_node* @merge_tree_init(i64 %38, i64 %39, %struct.line* %40), !dbg !5108
  store %struct.merge_node* %call44, %struct.merge_node** %merge_tree, align 8, !dbg !5104, !tbaa !2286
  %41 = load %struct.line*, %struct.line** %line, align 8, !dbg !5109, !tbaa !2286
  %42 = load i64, i64* %nthreads.addr, align 8, !dbg !5110, !tbaa !2447
  %nlines45 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 2, !dbg !5111, !ctir !458
  %43 = load i64, i64* %nlines45, align 8, !dbg !5111, !tbaa !4502, !ctir !55
  %44 = load %struct.merge_node*, %struct.merge_node** %merge_tree, align 8, !dbg !5112, !tbaa !2286
  %add.ptr = getelementptr inbounds %struct.merge_node, %struct.merge_node* %44, i64 1, !dbg !5113
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !5114, !tbaa !2286
  %46 = load i8*, i8** %temp_output, align 8, !dbg !5115, !tbaa !2286
  call void @sortlines(%struct.line* %41, i64 %42, i64 %43, %struct.merge_node* %add.ptr, %struct.merge_node_queue* %queue, %struct._IO_FILE* %45, i8* %46), !dbg !5116
  br label %if.end48, !dbg !5117

if.else46:                                        ; preds = %if.end39
  %47 = load %struct.line*, %struct.line** %line, align 8, !dbg !5118, !tbaa !2286
  %add.ptr47 = getelementptr inbounds %struct.line, %struct.line* %47, i64 -1, !dbg !5119
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !5120, !tbaa !2286
  %49 = load i8*, i8** %temp_output, align 8, !dbg !5121, !tbaa !2286
  call void @write_unique(%struct.line* %add.ptr47, %struct._IO_FILE* %48, i8* %49), !dbg !5122
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then42
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !5123, !tbaa !2286
  %51 = load i8*, i8** %temp_output, align 8, !dbg !5124, !tbaa !2286
  call void @xfclose(%struct._IO_FILE* %50, i8* %51), !dbg !5125
  %52 = load i8, i8* %output_file_created, align 1, !dbg !5126, !tbaa !2430
  %tobool49 = trunc i8 %52 to i1, !dbg !5126
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !5128

if.then50:                                        ; preds = %if.end48
  br label %finish, !dbg !5129

if.end51:                                         ; preds = %if.end48
  br label %while.cond10, !dbg !5035, !llvm.loop !5130

while.end52:                                      ; preds = %if.then21, %while.cond10
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !5132, !tbaa !2286
  %54 = load i8*, i8** %file, align 8, !dbg !5133, !tbaa !2286
  call void @xfclose(%struct._IO_FILE* %53, i8* %54), !dbg !5134
  br label %while.cond, !dbg !4980, !llvm.loop !5135

while.end53:                                      ; preds = %while.cond
  br label %finish, !dbg !4980

finish:                                           ; preds = %while.end53, %if.then50
  call void @llvm.dbg.label(metadata !5137), !dbg !5138
  %buf54 = getelementptr inbounds %struct.buffer, %struct.buffer* %buf, i32 0, i32 0, !dbg !5139, !ctir !458
  %55 = load i8*, i8** %buf54, align 8, !dbg !5139, !tbaa !4643, !ctir !9
  call void @free(i8* %55) #12, !dbg !5140
  %56 = load i8, i8* %output_file_created, align 1, !dbg !5141, !tbaa !2430
  %tobool55 = trunc i8 %56 to i1, !dbg !5141
  br i1 %tobool55, label %if.end64, label %if.then56, !dbg !5143

if.then56:                                        ; preds = %finish
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !5144, metadata !DIExpression()), !dbg !5146
  %57 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !5147, !tbaa !2286
  store %struct.tempnode* %57, %struct.tempnode** %node, align 8, !dbg !5146, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.sortfile** %tempfiles, metadata !5148, metadata !DIExpression()), !dbg !5149
  %58 = load i64, i64* %ntemps, align 8, !dbg !5150, !tbaa !2447
  %call57 = call noalias i8* @xnmalloc(i64 %58, i64 16), !dbg !5151
  %59 = bitcast i8* %call57 to %struct.sortfile*, !dbg !5151
  store %struct.sortfile* %59, %struct.sortfile** %tempfiles, align 8, !dbg !5149, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5152, metadata !DIExpression()), !dbg !5154
  store i64 0, i64* %i, align 8, !dbg !5154, !tbaa !2447
  br label %for.cond, !dbg !5155

for.cond:                                         ; preds = %for.inc, %if.then56
  %60 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5156, !tbaa !2286
  %tobool58 = icmp ne %struct.tempnode* %60, null, !dbg !5158
  br i1 %tobool58, label %for.body, label %for.end, !dbg !5158

for.body:                                         ; preds = %for.cond
  %61 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5159, !tbaa !2286
  %name59 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %61, i32 0, i32 3, !dbg !5161, !ctir !294
  %arraydecay60 = getelementptr inbounds [0 x i8], [0 x i8]* %name59, i64 0, i64 0, !dbg !5159
  %62 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5162, !tbaa !2286
  %63 = load i64, i64* %i, align 8, !dbg !5163, !tbaa !2447
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %62, i64 %63, !dbg !5162, !ctir !288
  %name61 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 0, !dbg !5164, !ctir !289
  store i8* %arraydecay60, i8** %name61, align 8, !dbg !5165, !tbaa !3348, !ctir !88
  %64 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5166, !tbaa !2286
  %65 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5167, !tbaa !2286
  %66 = load i64, i64* %i, align 8, !dbg !5168, !tbaa !2447
  %arrayidx62 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %65, i64 %66, !dbg !5167, !ctir !288
  %temp = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx62, i32 0, i32 1, !dbg !5169, !ctir !289
  store %struct.tempnode* %64, %struct.tempnode** %temp, align 8, !dbg !5170, !tbaa !4771, !ctir !293
  %67 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !5171, !tbaa !2286
  %next = getelementptr inbounds %struct.tempnode, %struct.tempnode* %67, i32 0, i32 0, !dbg !5172, !ctir !294
  %68 = load volatile %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !5172, !tbaa !2286, !ctir !297
  store %struct.tempnode* %68, %struct.tempnode** %node, align 8, !dbg !5173, !tbaa !2286
  br label %for.inc, !dbg !5174

for.inc:                                          ; preds = %for.body
  %69 = load i64, i64* %i, align 8, !dbg !5175, !tbaa !2447
  %inc63 = add i64 %69, 1, !dbg !5175
  store i64 %inc63, i64* %i, align 8, !dbg !5175, !tbaa !2447
  br label %for.cond, !dbg !5176, !llvm.loop !5177

for.end:                                          ; preds = %for.cond
  %70 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5179, !tbaa !2286
  %71 = load i64, i64* %ntemps, align 8, !dbg !5180, !tbaa !2447
  %72 = load i64, i64* %ntemps, align 8, !dbg !5181, !tbaa !2447
  %73 = load i8*, i8** %output_file.addr, align 8, !dbg !5182, !tbaa !2286
  call void @merge(%struct.sortfile* %70, i64 %71, i64 %72, i8* %73), !dbg !5183
  %74 = load %struct.sortfile*, %struct.sortfile** %tempfiles, align 8, !dbg !5184, !tbaa !2286
  %75 = bitcast %struct.sortfile* %74 to i8*, !dbg !5184
  call void @free(i8* %75) #12, !dbg !5185
  br label %if.end64, !dbg !5186

if.end64:                                         ; preds = %for.end, %finish
  call void @reap_all(), !dbg !5187
  ret void, !dbg !5188
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @sort_die(i8* %message, i8* %file) #0 !dbg !5189 !ctir !366 {
entry:
  %message.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  store i8* %message, i8** %message.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  %call = call i32* @__errno_location() #16, !dbg !5194
  %0 = load i32, i32* %call, align 4, !dbg !5194, !tbaa !2273, !ctir !7
  %1 = load i8*, i8** %message.addr, align 8, !dbg !5194, !tbaa !2286
  %2 = load i8*, i8** %file.addr, align 8, !dbg !5194, !tbaa !2286
  %tobool = icmp ne i8* %2, null, !dbg !5194
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5194

cond.true:                                        ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !5194, !tbaa !2286
  br label %cond.end, !dbg !5194

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.181, i64 0, i64 0)) #12, !dbg !5194
  br label %cond.end, !dbg !5194

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %call1, %cond.false ], !dbg !5194
  %call2 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %cond), !dbg !5194
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i64 0, i64 0), i8* %1, i8* %call2), !dbg !5194
  unreachable, !dbg !5194
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @sort_buffer_size(%struct._IO_FILE** %fps, i64 %nfps, i8** %files, i64 %nfiles, i64 %line_bytes) #4 !dbg !811 !ctir !620 {
entry:
  %retval = alloca i64, align 8
  %fps.addr = alloca %struct._IO_FILE**, align 8
  %nfps.addr = alloca i64, align 8
  %files.addr = alloca i8**, align 8
  %nfiles.addr = alloca i64, align 8
  %line_bytes.addr = alloca i64, align 8
  %worst_case_per_input_byte = alloca i64, align 8, !ctir !55
  %size = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %st = alloca %struct.stat, align 8, !ctir !384
  %file_size = alloca i64, align 8, !ctir !624
  %worst_case = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE** %fps, %struct._IO_FILE*** %fps.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps.addr, metadata !5195, metadata !DIExpression()), !dbg !5196
  store i64 %nfps, i64* %nfps.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfps.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  store i8** %files, i8*** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %files.addr, metadata !5199, metadata !DIExpression()), !dbg !5200
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !5201, metadata !DIExpression()), !dbg !5202
  store i64 %line_bytes, i64* %line_bytes.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %line_bytes.addr, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.declare(metadata i64* %worst_case_per_input_byte, metadata !5205, metadata !DIExpression()), !dbg !5206
  %0 = load i64, i64* %line_bytes.addr, align 8, !dbg !5207, !tbaa !2447
  %add = add i64 %0, 1, !dbg !5208
  store i64 %add, i64* %worst_case_per_input_byte, align 8, !dbg !5206, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5209, metadata !DIExpression()), !dbg !5210
  %1 = load i64, i64* %worst_case_per_input_byte, align 8, !dbg !5211, !tbaa !2447
  %add1 = add i64 %1, 1, !dbg !5212
  store i64 %add1, i64* %size, align 8, !dbg !5210, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5213, metadata !DIExpression()), !dbg !5215
  store i64 0, i64* %i, align 8, !dbg !5215, !tbaa !2447
  br label %for.cond, !dbg !5216

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !5217, !tbaa !2447
  %3 = load i64, i64* %nfiles.addr, align 8, !dbg !5219, !tbaa !2447
  %cmp = icmp ult i64 %2, %3, !dbg !5220
  br i1 %cmp, label %for.body, label %for.end, !dbg !5221

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !5222, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.declare(metadata i64* %file_size, metadata !5225, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.declare(metadata i64* %worst_case, metadata !5227, metadata !DIExpression()), !dbg !5228
  %4 = load i64, i64* %i, align 8, !dbg !5229, !tbaa !2447
  %5 = load i64, i64* %nfps.addr, align 8, !dbg !5231, !tbaa !2447
  %cmp2 = icmp ult i64 %4, %5, !dbg !5232
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !5229

cond.true:                                        ; preds = %for.body
  %6 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !5233, !tbaa !2286
  %7 = load i64, i64* %i, align 8, !dbg !5234, !tbaa !2447
  %arrayidx = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %6, i64 %7, !dbg !5233, !ctir !622
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx, align 8, !dbg !5233, !tbaa !2286
  %call = call i32 @fileno(%struct._IO_FILE* %8) #12, !dbg !5235
  %call3 = call i32 @fstat(i32 %call, %struct.stat* %st) #12, !dbg !5236
  br label %cond.end12, !dbg !5229

cond.false:                                       ; preds = %for.body
  %9 = load i8**, i8*** %files.addr, align 8, !dbg !5237, !tbaa !2286
  %10 = load i64, i64* %i, align 8, !dbg !5237, !tbaa !2447
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !5237, !ctir !528
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !5237, !tbaa !2286
  %call5 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !5237
  %cmp6 = icmp eq i32 %call5, 0, !dbg !5237
  br i1 %cmp6, label %cond.true7, label %cond.false9, !dbg !5237

cond.true7:                                       ; preds = %cond.false
  %call8 = call i32 @fstat(i32 0, %struct.stat* %st) #12, !dbg !5238
  br label %cond.end, !dbg !5237

cond.false9:                                      ; preds = %cond.false
  %12 = load i8**, i8*** %files.addr, align 8, !dbg !5239, !tbaa !2286
  %13 = load i64, i64* %i, align 8, !dbg !5240, !tbaa !2447
  %arrayidx10 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !5239, !ctir !528
  %14 = load i8*, i8** %arrayidx10, align 8, !dbg !5239, !tbaa !2286
  %call11 = call i32 @stat(i8* %14, %struct.stat* %st) #12, !dbg !5241
  br label %cond.end, !dbg !5237

cond.end:                                         ; preds = %cond.false9, %cond.true7
  %cond = phi i32 [ %call8, %cond.true7 ], [ %call11, %cond.false9 ], !dbg !5237
  br label %cond.end12, !dbg !5229

cond.end12:                                       ; preds = %cond.end, %cond.true
  %cond13 = phi i32 [ %call3, %cond.true ], [ %cond, %cond.end ], !dbg !5229
  %cmp14 = icmp ne i32 %cond13, 0, !dbg !5242
  br i1 %cmp14, label %if.then, label %if.end, !dbg !5243

if.then:                                          ; preds = %cond.end12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i64 0, i64 0)) #12, !dbg !5244
  %15 = load i8**, i8*** %files.addr, align 8, !dbg !5245, !tbaa !2286
  %16 = load i64, i64* %i, align 8, !dbg !5246, !tbaa !2447
  %arrayidx16 = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !5245, !ctir !528
  %17 = load i8*, i8** %arrayidx16, align 8, !dbg !5245, !tbaa !2286
  call void @sort_die(i8* %call15, i8* %17) #15, !dbg !5247
  unreachable, !dbg !5247

if.end:                                           ; preds = %cond.end12
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !5248, !ctir !384
  %18 = load i32, i32* %st_mode, align 8, !dbg !5248, !tbaa !5250, !ctir !394
  %and = and i32 %18, 61440, !dbg !5248
  %cmp17 = icmp eq i32 %and, 32768, !dbg !5248
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !5253

if.then18:                                        ; preds = %if.end
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5254, !ctir !384
  %19 = load i64, i64* %st_size, align 8, !dbg !5254, !tbaa !5255, !ctir !29
  store i64 %19, i64* %file_size, align 8, !dbg !5256, !tbaa !2447
  br label %if.end21, !dbg !5257

if.else:                                          ; preds = %if.end
  %20 = load i64, i64* @sort_size, align 8, !dbg !5258, !tbaa !2447
  %tobool = icmp ne i64 %20, 0, !dbg !5258
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !5261

if.then19:                                        ; preds = %if.else
  %21 = load i64, i64* @sort_size, align 8, !dbg !5262, !tbaa !2447
  store i64 %21, i64* %retval, align 8, !dbg !5263
  br label %return, !dbg !5263

if.end20:                                         ; preds = %if.else
  store i64 131072, i64* %file_size, align 8, !dbg !5264, !tbaa !2447
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then18
  %22 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5265, !tbaa !2447
  %tobool22 = icmp ne i64 %22, 0, !dbg !5265
  br i1 %tobool22, label %if.end28, label %if.then23, !dbg !5267

if.then23:                                        ; preds = %if.end21
  %23 = load i64, i64* @sort_size, align 8, !dbg !5268, !tbaa !2447
  store i64 %23, i64* @sort_buffer_size.size_bound, align 8, !dbg !5270, !tbaa !2447
  %24 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5271, !tbaa !2447
  %tobool24 = icmp ne i64 %24, 0, !dbg !5271
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !5273

if.then25:                                        ; preds = %if.then23
  %call26 = call i64 @default_sort_size(), !dbg !5274
  store i64 %call26, i64* @sort_buffer_size.size_bound, align 8, !dbg !5275, !tbaa !2447
  br label %if.end27, !dbg !5276

if.end27:                                         ; preds = %if.then25, %if.then23
  br label %if.end28, !dbg !5277

if.end28:                                         ; preds = %if.end27, %if.end21
  %25 = load i64, i64* %file_size, align 8, !dbg !5278, !tbaa !2447
  %26 = load i64, i64* %worst_case_per_input_byte, align 8, !dbg !5279, !tbaa !2447
  %mul = mul i64 %25, %26, !dbg !5280
  %add29 = add i64 %mul, 1, !dbg !5281
  store i64 %add29, i64* %worst_case, align 8, !dbg !5282, !tbaa !2447
  %27 = load i64, i64* %file_size, align 8, !dbg !5283, !tbaa !2447
  %28 = load i64, i64* %worst_case, align 8, !dbg !5285, !tbaa !2447
  %29 = load i64, i64* %worst_case_per_input_byte, align 8, !dbg !5286, !tbaa !2447
  %div = udiv i64 %28, %29, !dbg !5287
  %cmp30 = icmp ne i64 %27, %div, !dbg !5288
  br i1 %cmp30, label %if.then32, label %lor.lhs.false, !dbg !5289

lor.lhs.false:                                    ; preds = %if.end28
  %30 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5290, !tbaa !2447
  %31 = load i64, i64* %size, align 8, !dbg !5291, !tbaa !2447
  %sub = sub i64 %30, %31, !dbg !5292
  %32 = load i64, i64* %worst_case, align 8, !dbg !5293, !tbaa !2447
  %cmp31 = icmp ule i64 %sub, %32, !dbg !5294
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !5295

if.then32:                                        ; preds = %lor.lhs.false, %if.end28
  %33 = load i64, i64* @sort_buffer_size.size_bound, align 8, !dbg !5296, !tbaa !2447
  store i64 %33, i64* %retval, align 8, !dbg !5297
  br label %return, !dbg !5297

if.end33:                                         ; preds = %lor.lhs.false
  %34 = load i64, i64* %worst_case, align 8, !dbg !5298, !tbaa !2447
  %35 = load i64, i64* %size, align 8, !dbg !5299, !tbaa !2447
  %add34 = add i64 %35, %34, !dbg !5299
  store i64 %add34, i64* %size, align 8, !dbg !5299, !tbaa !2447
  br label %for.inc, !dbg !5300

for.inc:                                          ; preds = %if.end33
  %36 = load i64, i64* %i, align 8, !dbg !5301, !tbaa !2447
  %inc = add i64 %36, 1, !dbg !5301
  store i64 %inc, i64* %i, align 8, !dbg !5301, !tbaa !2447
  br label %for.cond, !dbg !5302, !llvm.loop !5303

for.end:                                          ; preds = %for.cond
  %37 = load i64, i64* %size, align 8, !dbg !5305, !tbaa !2447
  store i64 %37, i64* %retval, align 8, !dbg !5306
  br label %return, !dbg !5306

return:                                           ; preds = %for.end, %if.then32, %if.then19
  %38 = load i64, i64* %retval, align 8, !dbg !5307
  ret i64 %38, !dbg !5307
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initbuf(%struct.buffer* %buf, i64 %line_bytes, i64 %alloc) #4 !dbg !5308 !ctir !455 {
entry:
  %buf.addr = alloca %struct.buffer*, align 8
  %line_bytes.addr = alloca i64, align 8
  %alloc.addr = alloca i64, align 8
  store %struct.buffer* %buf, %struct.buffer** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.buffer** %buf.addr, metadata !5309, metadata !DIExpression()), !dbg !5310
  store i64 %line_bytes, i64* %line_bytes.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %line_bytes.addr, metadata !5311, metadata !DIExpression()), !dbg !5312
  store i64 %alloc, i64* %alloc.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %alloc.addr, metadata !5313, metadata !DIExpression()), !dbg !5314
  br label %while.body, !dbg !5315

while.body:                                       ; preds = %entry, %if.end5
  %0 = load i64, i64* %alloc.addr, align 8, !dbg !5316, !tbaa !2447
  %rem = urem i64 %0, 32, !dbg !5318
  %sub = sub i64 32, %rem, !dbg !5319
  %1 = load i64, i64* %alloc.addr, align 8, !dbg !5320, !tbaa !2447
  %add = add i64 %1, %sub, !dbg !5320
  store i64 %add, i64* %alloc.addr, align 8, !dbg !5320, !tbaa !2447
  %2 = load i64, i64* %alloc.addr, align 8, !dbg !5321, !tbaa !2447
  %call = call noalias i8* @malloc(i64 %2) #12, !dbg !5322
  %3 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5323, !tbaa !2286
  %buf1 = getelementptr inbounds %struct.buffer, %struct.buffer* %3, i32 0, i32 0, !dbg !5324, !ctir !458
  store i8* %call, i8** %buf1, align 8, !dbg !5325, !tbaa !4643, !ctir !9
  %4 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5326, !tbaa !2286
  %buf2 = getelementptr inbounds %struct.buffer, %struct.buffer* %4, i32 0, i32 0, !dbg !5328, !ctir !458
  %5 = load i8*, i8** %buf2, align 8, !dbg !5328, !tbaa !4643, !ctir !9
  %tobool = icmp ne i8* %5, null, !dbg !5326
  br i1 %tobool, label %if.then, label %if.end, !dbg !5329

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !5330

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %alloc.addr, align 8, !dbg !5331, !tbaa !2447
  %div = udiv i64 %6, 2, !dbg !5331
  store i64 %div, i64* %alloc.addr, align 8, !dbg !5331, !tbaa !2447
  %7 = load i64, i64* %alloc.addr, align 8, !dbg !5332, !tbaa !2447
  %8 = load i64, i64* %line_bytes.addr, align 8, !dbg !5334, !tbaa !2447
  %add3 = add i64 %8, 1, !dbg !5335
  %cmp = icmp ule i64 %7, %add3, !dbg !5336
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5337

if.then4:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !5338
  unreachable, !dbg !5338

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !5315, !llvm.loop !5339

while.end:                                        ; preds = %if.then
  %9 = load i64, i64* %line_bytes.addr, align 8, !dbg !5341, !tbaa !2447
  %10 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5342, !tbaa !2286
  %line_bytes6 = getelementptr inbounds %struct.buffer, %struct.buffer* %10, i32 0, i32 5, !dbg !5343, !ctir !458
  store i64 %9, i64* %line_bytes6, align 8, !dbg !5344, !tbaa !5345, !ctir !55
  %11 = load i64, i64* %alloc.addr, align 8, !dbg !5346, !tbaa !2447
  %12 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5347, !tbaa !2286
  %alloc7 = getelementptr inbounds %struct.buffer, %struct.buffer* %12, i32 0, i32 3, !dbg !5348, !ctir !458
  store i64 %11, i64* %alloc7, align 8, !dbg !5349, !tbaa !4979, !ctir !55
  %13 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5350, !tbaa !2286
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %13, i32 0, i32 2, !dbg !5351, !ctir !458
  store i64 0, i64* %nlines, align 8, !dbg !5352, !tbaa !4502, !ctir !55
  %14 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5353, !tbaa !2286
  %left = getelementptr inbounds %struct.buffer, %struct.buffer* %14, i32 0, i32 4, !dbg !5354, !ctir !458
  store i64 0, i64* %left, align 8, !dbg !5355, !tbaa !5063, !ctir !55
  %15 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5356, !tbaa !2286
  %used = getelementptr inbounds %struct.buffer, %struct.buffer* %15, i32 0, i32 1, !dbg !5357, !ctir !458
  store i64 0, i64* %used, align 8, !dbg !5358, !tbaa !5051, !ctir !55
  %16 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5359, !tbaa !2286
  %eof = getelementptr inbounds %struct.buffer, %struct.buffer* %16, i32 0, i32 6, !dbg !5360, !ctir !458
  store i8 0, i8* %eof, align 8, !dbg !5361, !tbaa !5032, !ctir !103
  ret void, !dbg !5362
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fillbuf(%struct.buffer* %buf, %struct._IO_FILE* %fp, i8* %file) #4 !dbg !5363 !ctir !467 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca %struct.buffer*, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %key = alloca %struct.keyfield*, align 8, !ctir !423
  %eol = alloca i8, align 1, !ctir !10
  %line_bytes = alloca i64, align 8, !ctir !55
  %mergesize = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !9
  %linelim = alloca %struct.line*, align 8, !ctir !469
  %line = alloca %struct.line*, align 8, !ctir !469
  %avail = alloca i64, align 8, !ctir !55
  %line_start = alloca i8*, align 8, !ctir !9
  %readsize = alloca i64, align 8, !ctir !55
  %bytes_read = alloca i64, align 8, !ctir !55
  %ptrlim = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  %line_alloc = alloca i64, align 8, !ctir !55
  store %struct.buffer* %buf, %struct.buffer** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.buffer** %buf.addr, metadata !5364, metadata !DIExpression()), !dbg !5365
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !5366, metadata !DIExpression()), !dbg !5367
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5368, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !5370, metadata !DIExpression()), !dbg !5371
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !5372, !tbaa !2286
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !5371, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %eol, metadata !5373, metadata !DIExpression()), !dbg !5374
  %1 = load i8, i8* @eolchar, align 1, !dbg !5375, !tbaa !2438
  store i8 %1, i8* %eol, align 1, !dbg !5374, !tbaa !2438
  call void @llvm.dbg.declare(metadata i64* %line_bytes, metadata !5376, metadata !DIExpression()), !dbg !5377
  %2 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5378, !tbaa !2286
  %line_bytes1 = getelementptr inbounds %struct.buffer, %struct.buffer* %2, i32 0, i32 5, !dbg !5379, !ctir !458
  %3 = load i64, i64* %line_bytes1, align 8, !dbg !5379, !tbaa !5345, !ctir !55
  store i64 %3, i64* %line_bytes, align 8, !dbg !5377, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %mergesize, metadata !5380, metadata !DIExpression()), !dbg !5381
  %4 = load i64, i64* @merge_buffer_size, align 8, !dbg !5382, !tbaa !2447
  %sub = sub i64 %4, 34, !dbg !5383
  store i64 %sub, i64* %mergesize, align 8, !dbg !5381, !tbaa !2447
  %5 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5384, !tbaa !2286
  %eof = getelementptr inbounds %struct.buffer, %struct.buffer* %5, i32 0, i32 6, !dbg !5386, !ctir !458
  %6 = load i8, i8* %eof, align 8, !dbg !5386, !tbaa !5032
  %tobool = trunc i8 %6 to i1, !dbg !5386, !ctir !103
  br i1 %tobool, label %if.then, label %if.end, !dbg !5387

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5388
  br label %return, !dbg !5388

if.end:                                           ; preds = %entry
  %7 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5389, !tbaa !2286
  %used = getelementptr inbounds %struct.buffer, %struct.buffer* %7, i32 0, i32 1, !dbg !5391, !ctir !458
  %8 = load i64, i64* %used, align 8, !dbg !5391, !tbaa !5051, !ctir !55
  %9 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5392, !tbaa !2286
  %left = getelementptr inbounds %struct.buffer, %struct.buffer* %9, i32 0, i32 4, !dbg !5393, !ctir !458
  %10 = load i64, i64* %left, align 8, !dbg !5393, !tbaa !5063, !ctir !55
  %cmp = icmp ne i64 %8, %10, !dbg !5394
  br i1 %cmp, label %if.then2, label %if.end11, !dbg !5395

if.then2:                                         ; preds = %if.end
  %11 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5396, !tbaa !2286
  %buf3 = getelementptr inbounds %struct.buffer, %struct.buffer* %11, i32 0, i32 0, !dbg !5398, !ctir !458
  %12 = load i8*, i8** %buf3, align 8, !dbg !5398, !tbaa !4643, !ctir !9
  %13 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5399, !tbaa !2286
  %buf4 = getelementptr inbounds %struct.buffer, %struct.buffer* %13, i32 0, i32 0, !dbg !5400, !ctir !458
  %14 = load i8*, i8** %buf4, align 8, !dbg !5400, !tbaa !4643, !ctir !9
  %15 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5401, !tbaa !2286
  %used5 = getelementptr inbounds %struct.buffer, %struct.buffer* %15, i32 0, i32 1, !dbg !5402, !ctir !458
  %16 = load i64, i64* %used5, align 8, !dbg !5402, !tbaa !5051, !ctir !55
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !5403
  %17 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5404, !tbaa !2286
  %left6 = getelementptr inbounds %struct.buffer, %struct.buffer* %17, i32 0, i32 4, !dbg !5405, !ctir !458
  %18 = load i64, i64* %left6, align 8, !dbg !5405, !tbaa !5063, !ctir !55
  %idx.neg = sub i64 0, %18, !dbg !5406
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !5406
  %19 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5407, !tbaa !2286
  %left8 = getelementptr inbounds %struct.buffer, %struct.buffer* %19, i32 0, i32 4, !dbg !5408, !ctir !458
  %20 = load i64, i64* %left8, align 8, !dbg !5408, !tbaa !5063, !ctir !55
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr7, i64 %20, i1 false), !dbg !5409
  %21 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5410, !tbaa !2286
  %left9 = getelementptr inbounds %struct.buffer, %struct.buffer* %21, i32 0, i32 4, !dbg !5411, !ctir !458
  %22 = load i64, i64* %left9, align 8, !dbg !5411, !tbaa !5063, !ctir !55
  %23 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5412, !tbaa !2286
  %used10 = getelementptr inbounds %struct.buffer, %struct.buffer* %23, i32 0, i32 1, !dbg !5413, !ctir !458
  store i64 %22, i64* %used10, align 8, !dbg !5414, !tbaa !5051, !ctir !55
  %24 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5415, !tbaa !2286
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %24, i32 0, i32 2, !dbg !5416, !ctir !458
  store i64 0, i64* %nlines, align 8, !dbg !5417, !tbaa !4502, !ctir !55
  br label %if.end11, !dbg !5418

if.end11:                                         ; preds = %if.then2, %if.end
  br label %while.body, !dbg !5419

while.body:                                       ; preds = %if.end11, %if.end130
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5420, metadata !DIExpression()), !dbg !5422
  %25 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5423, !tbaa !2286
  %buf12 = getelementptr inbounds %struct.buffer, %struct.buffer* %25, i32 0, i32 0, !dbg !5424, !ctir !458
  %26 = load i8*, i8** %buf12, align 8, !dbg !5424, !tbaa !4643, !ctir !9
  %27 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5425, !tbaa !2286
  %used13 = getelementptr inbounds %struct.buffer, %struct.buffer* %27, i32 0, i32 1, !dbg !5426, !ctir !458
  %28 = load i64, i64* %used13, align 8, !dbg !5426, !tbaa !5051, !ctir !55
  %add.ptr14 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !5427
  store i8* %add.ptr14, i8** %ptr, align 8, !dbg !5422, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %linelim, metadata !5428, metadata !DIExpression()), !dbg !5429
  %29 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5430, !tbaa !2286
  %call = call %struct.line* @buffer_linelim(%struct.buffer* %29), !dbg !5431
  store %struct.line* %call, %struct.line** %linelim, align 8, !dbg !5429, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line, metadata !5432, metadata !DIExpression()), !dbg !5433
  %30 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !5434, !tbaa !2286
  %31 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5435, !tbaa !2286
  %nlines15 = getelementptr inbounds %struct.buffer, %struct.buffer* %31, i32 0, i32 2, !dbg !5436, !ctir !458
  %32 = load i64, i64* %nlines15, align 8, !dbg !5436, !tbaa !4502, !ctir !55
  %idx.neg16 = sub i64 0, %32, !dbg !5437
  %add.ptr17 = getelementptr inbounds %struct.line, %struct.line* %30, i64 %idx.neg16, !dbg !5437
  store %struct.line* %add.ptr17, %struct.line** %line, align 8, !dbg !5433, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !5438, metadata !DIExpression()), !dbg !5439
  %33 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !5440, !tbaa !2286
  %34 = bitcast %struct.line* %33 to i8*, !dbg !5441
  %35 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5442, !tbaa !2286
  %nlines18 = getelementptr inbounds %struct.buffer, %struct.buffer* %35, i32 0, i32 2, !dbg !5443, !ctir !458
  %36 = load i64, i64* %nlines18, align 8, !dbg !5443, !tbaa !4502, !ctir !55
  %37 = load i64, i64* %line_bytes, align 8, !dbg !5444, !tbaa !2447
  %mul = mul i64 %36, %37, !dbg !5445
  %idx.neg19 = sub i64 0, %mul, !dbg !5446
  %add.ptr20 = getelementptr inbounds i8, i8* %34, i64 %idx.neg19, !dbg !5446
  %38 = load i8*, i8** %ptr, align 8, !dbg !5447, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr20 to i64, !dbg !5448
  %sub.ptr.rhs.cast = ptrtoint i8* %38 to i64, !dbg !5448
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5448
  store i64 %sub.ptr.sub, i64* %avail, align 8, !dbg !5439, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %line_start, metadata !5449, metadata !DIExpression()), !dbg !5450
  %39 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5451, !tbaa !2286
  %nlines21 = getelementptr inbounds %struct.buffer, %struct.buffer* %39, i32 0, i32 2, !dbg !5452, !ctir !458
  %40 = load i64, i64* %nlines21, align 8, !dbg !5452, !tbaa !4502, !ctir !55
  %tobool22 = icmp ne i64 %40, 0, !dbg !5451
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !5451

cond.true:                                        ; preds = %while.body
  %41 = load %struct.line*, %struct.line** %line, align 8, !dbg !5453, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %41, i32 0, i32 0, !dbg !5454, !ctir !449
  %42 = load i8*, i8** %text, align 8, !dbg !5454, !tbaa !4488, !ctir !9
  %43 = load %struct.line*, %struct.line** %line, align 8, !dbg !5455, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %43, i32 0, i32 1, !dbg !5456, !ctir !449
  %44 = load i64, i64* %length, align 8, !dbg !5456, !tbaa !4573, !ctir !55
  %add.ptr23 = getelementptr inbounds i8, i8* %42, i64 %44, !dbg !5457
  br label %cond.end, !dbg !5451

cond.false:                                       ; preds = %while.body
  %45 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5458, !tbaa !2286
  %buf24 = getelementptr inbounds %struct.buffer, %struct.buffer* %45, i32 0, i32 0, !dbg !5459, !ctir !458
  %46 = load i8*, i8** %buf24, align 8, !dbg !5459, !tbaa !4643, !ctir !9
  br label %cond.end, !dbg !5451

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr23, %cond.true ], [ %46, %cond.false ], !dbg !5451
  store i8* %cond, i8** %line_start, align 8, !dbg !5450, !tbaa !2286
  br label %while.cond25, !dbg !5460

while.cond25:                                     ; preds = %if.end109, %cond.end
  %47 = load i64, i64* %line_bytes, align 8, !dbg !5461, !tbaa !2447
  %add = add i64 %47, 1, !dbg !5462
  %48 = load i64, i64* %avail, align 8, !dbg !5463, !tbaa !2447
  %cmp26 = icmp ult i64 %add, %48, !dbg !5464
  br i1 %cmp26, label %while.body27, label %while.end110, !dbg !5460

while.body27:                                     ; preds = %while.cond25
  call void @llvm.dbg.declare(metadata i64* %readsize, metadata !5465, metadata !DIExpression()), !dbg !5467
  %49 = load i64, i64* %avail, align 8, !dbg !5468, !tbaa !2447
  %sub28 = sub i64 %49, 1, !dbg !5469
  %50 = load i64, i64* %line_bytes, align 8, !dbg !5470, !tbaa !2447
  %add29 = add i64 %50, 1, !dbg !5471
  %div = udiv i64 %sub28, %add29, !dbg !5472
  store i64 %div, i64* %readsize, align 8, !dbg !5467, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !5473, metadata !DIExpression()), !dbg !5474
  %51 = load i8*, i8** %ptr, align 8, !dbg !5475, !tbaa !2286
  %52 = load i64, i64* %readsize, align 8, !dbg !5475, !tbaa !2447
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5475, !tbaa !2286
  %call30 = call i64 @fread_unlocked(i8* %51, i64 1, i64 %52, %struct._IO_FILE* %53), !dbg !5475
  store i64 %call30, i64* %bytes_read, align 8, !dbg !5474, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %ptrlim, metadata !5476, metadata !DIExpression()), !dbg !5477
  %54 = load i8*, i8** %ptr, align 8, !dbg !5478, !tbaa !2286
  %55 = load i64, i64* %bytes_read, align 8, !dbg !5479, !tbaa !2447
  %add.ptr31 = getelementptr inbounds i8, i8* %54, i64 %55, !dbg !5480
  store i8* %add.ptr31, i8** %ptrlim, align 8, !dbg !5477, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5481, metadata !DIExpression()), !dbg !5482
  %56 = load i64, i64* %bytes_read, align 8, !dbg !5483, !tbaa !2447
  %57 = load i64, i64* %avail, align 8, !dbg !5484, !tbaa !2447
  %sub32 = sub i64 %57, %56, !dbg !5484
  store i64 %sub32, i64* %avail, align 8, !dbg !5484, !tbaa !2447
  %58 = load i64, i64* %bytes_read, align 8, !dbg !5485, !tbaa !2447
  %59 = load i64, i64* %readsize, align 8, !dbg !5487, !tbaa !2447
  %cmp33 = icmp ne i64 %58, %59, !dbg !5488
  br i1 %cmp33, label %if.then34, label %if.end55, !dbg !5489

if.then34:                                        ; preds = %while.body27
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5490, !tbaa !2286
  %call35 = call i32 @ferror_unlocked(%struct._IO_FILE* %60) #12, !dbg !5490
  %tobool36 = icmp ne i32 %call35, 0, !dbg !5490
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !5493

if.then37:                                        ; preds = %if.then34
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0)) #12, !dbg !5494
  %61 = load i8*, i8** %file.addr, align 8, !dbg !5495, !tbaa !2286
  call void @sort_die(i8* %call38, i8* %61) #15, !dbg !5496
  unreachable, !dbg !5496

if.end39:                                         ; preds = %if.then34
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !5497, !tbaa !2286
  %call40 = call i32 @feof_unlocked(%struct._IO_FILE* %62) #12, !dbg !5497
  %tobool41 = icmp ne i32 %call40, 0, !dbg !5497
  br i1 %tobool41, label %if.then42, label %if.end54, !dbg !5499

if.then42:                                        ; preds = %if.end39
  %63 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5500, !tbaa !2286
  %eof43 = getelementptr inbounds %struct.buffer, %struct.buffer* %63, i32 0, i32 6, !dbg !5502, !ctir !458
  store i8 1, i8* %eof43, align 8, !dbg !5503, !tbaa !5032, !ctir !103
  %64 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5504, !tbaa !2286
  %buf44 = getelementptr inbounds %struct.buffer, %struct.buffer* %64, i32 0, i32 0, !dbg !5506, !ctir !458
  %65 = load i8*, i8** %buf44, align 8, !dbg !5506, !tbaa !4643, !ctir !9
  %66 = load i8*, i8** %ptrlim, align 8, !dbg !5507, !tbaa !2286
  %cmp45 = icmp eq i8* %65, %66, !dbg !5508
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !5509

if.then46:                                        ; preds = %if.then42
  store i1 false, i1* %retval, align 1, !dbg !5510
  br label %return, !dbg !5510

if.end47:                                         ; preds = %if.then42
  %67 = load i8*, i8** %line_start, align 8, !dbg !5511, !tbaa !2286
  %68 = load i8*, i8** %ptrlim, align 8, !dbg !5513, !tbaa !2286
  %cmp48 = icmp ne i8* %67, %68, !dbg !5514
  br i1 %cmp48, label %land.lhs.true, label %if.end53, !dbg !5515

land.lhs.true:                                    ; preds = %if.end47
  %69 = load i8*, i8** %ptrlim, align 8, !dbg !5516, !tbaa !2286
  %arrayidx = getelementptr inbounds i8, i8* %69, i64 -1, !dbg !5516, !ctir !9
  %70 = load i8, i8* %arrayidx, align 1, !dbg !5516, !tbaa !2438
  %conv = sext i8 %70 to i32, !dbg !5516
  %71 = load i8, i8* %eol, align 1, !dbg !5517, !tbaa !2438
  %conv49 = sext i8 %71 to i32, !dbg !5517
  %cmp50 = icmp ne i32 %conv, %conv49, !dbg !5518
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !5519

if.then52:                                        ; preds = %land.lhs.true
  %72 = load i8, i8* %eol, align 1, !dbg !5520, !tbaa !2438
  %73 = load i8*, i8** %ptrlim, align 8, !dbg !5521, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %73, i32 1, !dbg !5521
  store i8* %incdec.ptr, i8** %ptrlim, align 8, !dbg !5521, !tbaa !2286
  store i8 %72, i8* %73, align 1, !dbg !5522, !tbaa !2438, !ctir !10
  br label %if.end53, !dbg !5523

if.end53:                                         ; preds = %if.then52, %land.lhs.true, %if.end47
  br label %if.end54, !dbg !5524

if.end54:                                         ; preds = %if.end53, %if.end39
  br label %if.end55, !dbg !5525

if.end55:                                         ; preds = %if.end54, %while.body27
  br label %while.cond56, !dbg !5526

while.cond56:                                     ; preds = %if.end104, %if.end55
  %74 = load i8*, i8** %ptr, align 8, !dbg !5527, !tbaa !2286
  %75 = load i8, i8* %eol, align 1, !dbg !5528, !tbaa !2438
  %conv57 = sext i8 %75 to i32, !dbg !5528
  %76 = load i8*, i8** %ptrlim, align 8, !dbg !5529, !tbaa !2286
  %77 = load i8*, i8** %ptr, align 8, !dbg !5530, !tbaa !2286
  %sub.ptr.lhs.cast58 = ptrtoint i8* %76 to i64, !dbg !5531
  %sub.ptr.rhs.cast59 = ptrtoint i8* %77 to i64, !dbg !5531
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59, !dbg !5531
  %call61 = call i8* @memchr(i8* %74, i32 %conv57, i64 %sub.ptr.sub60) #14, !dbg !5532
  store i8* %call61, i8** %p, align 8, !dbg !5533, !tbaa !2286
  %tobool62 = icmp ne i8* %call61, null, !dbg !5526
  br i1 %tobool62, label %while.body63, label %while.end105, !dbg !5526

while.body63:                                     ; preds = %while.cond56
  %78 = load i8*, i8** %p, align 8, !dbg !5534, !tbaa !2286
  store i8 0, i8* %78, align 1, !dbg !5536, !tbaa !2438, !ctir !10
  %79 = load i8*, i8** %p, align 8, !dbg !5537, !tbaa !2286
  %add.ptr64 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !5538
  store i8* %add.ptr64, i8** %ptr, align 8, !dbg !5539, !tbaa !2286
  %80 = load %struct.line*, %struct.line** %line, align 8, !dbg !5540, !tbaa !2286
  %incdec.ptr65 = getelementptr inbounds %struct.line, %struct.line* %80, i32 -1, !dbg !5540
  store %struct.line* %incdec.ptr65, %struct.line** %line, align 8, !dbg !5540, !tbaa !2286
  %81 = load i8*, i8** %line_start, align 8, !dbg !5541, !tbaa !2286
  %82 = load %struct.line*, %struct.line** %line, align 8, !dbg !5542, !tbaa !2286
  %text66 = getelementptr inbounds %struct.line, %struct.line* %82, i32 0, i32 0, !dbg !5543, !ctir !449
  store i8* %81, i8** %text66, align 8, !dbg !5544, !tbaa !4488, !ctir !9
  %83 = load i8*, i8** %ptr, align 8, !dbg !5545, !tbaa !2286
  %84 = load i8*, i8** %line_start, align 8, !dbg !5546, !tbaa !2286
  %sub.ptr.lhs.cast67 = ptrtoint i8* %83 to i64, !dbg !5547
  %sub.ptr.rhs.cast68 = ptrtoint i8* %84 to i64, !dbg !5547
  %sub.ptr.sub69 = sub i64 %sub.ptr.lhs.cast67, %sub.ptr.rhs.cast68, !dbg !5547
  %85 = load %struct.line*, %struct.line** %line, align 8, !dbg !5548, !tbaa !2286
  %length70 = getelementptr inbounds %struct.line, %struct.line* %85, i32 0, i32 1, !dbg !5549, !ctir !449
  store i64 %sub.ptr.sub69, i64* %length70, align 8, !dbg !5550, !tbaa !4573, !ctir !55
  %86 = load i64, i64* %mergesize, align 8, !dbg !5551, !tbaa !2447
  %87 = load %struct.line*, %struct.line** %line, align 8, !dbg !5551, !tbaa !2286
  %length71 = getelementptr inbounds %struct.line, %struct.line* %87, i32 0, i32 1, !dbg !5551, !ctir !449
  %88 = load i64, i64* %length71, align 8, !dbg !5551, !tbaa !4573, !ctir !55
  %cmp72 = icmp ugt i64 %86, %88, !dbg !5551
  br i1 %cmp72, label %cond.true74, label %cond.false75, !dbg !5551

cond.true74:                                      ; preds = %while.body63
  %89 = load i64, i64* %mergesize, align 8, !dbg !5551, !tbaa !2447
  br label %cond.end77, !dbg !5551

cond.false75:                                     ; preds = %while.body63
  %90 = load %struct.line*, %struct.line** %line, align 8, !dbg !5551, !tbaa !2286
  %length76 = getelementptr inbounds %struct.line, %struct.line* %90, i32 0, i32 1, !dbg !5551, !ctir !449
  %91 = load i64, i64* %length76, align 8, !dbg !5551, !tbaa !4573, !ctir !55
  br label %cond.end77, !dbg !5551

cond.end77:                                       ; preds = %cond.false75, %cond.true74
  %cond78 = phi i64 [ %89, %cond.true74 ], [ %91, %cond.false75 ], !dbg !5551
  store i64 %cond78, i64* %mergesize, align 8, !dbg !5552, !tbaa !2447
  %92 = load i64, i64* %line_bytes, align 8, !dbg !5553, !tbaa !2447
  %93 = load i64, i64* %avail, align 8, !dbg !5554, !tbaa !2447
  %sub79 = sub i64 %93, %92, !dbg !5554
  store i64 %sub79, i64* %avail, align 8, !dbg !5554, !tbaa !2447
  %94 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5555, !tbaa !2286
  %tobool80 = icmp ne %struct.keyfield* %94, null, !dbg !5555
  br i1 %tobool80, label %if.then81, label %if.end104, !dbg !5557

if.then81:                                        ; preds = %cond.end77
  %95 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5558, !tbaa !2286
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %95, i32 0, i32 2, !dbg !5560, !ctir !424
  %96 = load i64, i64* %eword, align 8, !dbg !5560, !tbaa !2760, !ctir !55
  %cmp82 = icmp eq i64 %96, -1, !dbg !5561
  br i1 %cmp82, label %cond.true84, label %cond.false85, !dbg !5558

cond.true84:                                      ; preds = %if.then81
  %97 = load i8*, i8** %p, align 8, !dbg !5562, !tbaa !2286
  br label %cond.end87, !dbg !5558

cond.false85:                                     ; preds = %if.then81
  %98 = load %struct.line*, %struct.line** %line, align 8, !dbg !5563, !tbaa !2286
  %99 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5564, !tbaa !2286
  %call86 = call i8* @limfield(%struct.line* %98, %struct.keyfield* %99), !dbg !5565
  br label %cond.end87, !dbg !5558

cond.end87:                                       ; preds = %cond.false85, %cond.true84
  %cond88 = phi i8* [ %97, %cond.true84 ], [ %call86, %cond.false85 ], !dbg !5558
  %100 = load %struct.line*, %struct.line** %line, align 8, !dbg !5566, !tbaa !2286
  %keylim = getelementptr inbounds %struct.line, %struct.line* %100, i32 0, i32 3, !dbg !5567, !ctir !449
  store i8* %cond88, i8** %keylim, align 8, !dbg !5568, !tbaa !4629, !ctir !9
  %101 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5569, !tbaa !2286
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %101, i32 0, i32 0, !dbg !5571, !ctir !424
  %102 = load i64, i64* %sword, align 8, !dbg !5571, !tbaa !2588, !ctir !55
  %cmp89 = icmp ne i64 %102, -1, !dbg !5572
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !5573

if.then91:                                        ; preds = %cond.end87
  %103 = load %struct.line*, %struct.line** %line, align 8, !dbg !5574, !tbaa !2286
  %104 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5575, !tbaa !2286
  %call92 = call i8* @begfield(%struct.line* %103, %struct.keyfield* %104), !dbg !5576
  %105 = load %struct.line*, %struct.line** %line, align 8, !dbg !5577, !tbaa !2286
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %105, i32 0, i32 2, !dbg !5578, !ctir !449
  store i8* %call92, i8** %keybeg, align 8, !dbg !5579, !tbaa !4619, !ctir !9
  br label %if.end103, !dbg !5577

if.else:                                          ; preds = %cond.end87
  %106 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !5580, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %106, i32 0, i32 6, !dbg !5583, !ctir !424
  %107 = load i8, i8* %skipsblanks, align 8, !dbg !5583, !tbaa !3153
  %tobool93 = trunc i8 %107 to i1, !dbg !5583, !ctir !103
  br i1 %tobool93, label %if.then94, label %if.end101, !dbg !5584

if.then94:                                        ; preds = %if.else
  br label %while.cond95, !dbg !5585

while.cond95:                                     ; preds = %while.body99, %if.then94
  %108 = load i8*, i8** %line_start, align 8, !dbg !5586, !tbaa !2286
  %109 = load i8, i8* %108, align 1, !dbg !5587, !tbaa !2438, !ctir !10
  %call96 = call zeroext i8 @to_uchar(i8 signext %109), !dbg !5588
  %idxprom = zext i8 %call96 to i64, !dbg !5589
  %arrayidx97 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !5589, !ctir !322
  %110 = load i8, i8* %arrayidx97, align 1, !dbg !5589, !tbaa !2430
  %tobool98 = trunc i8 %110 to i1, !dbg !5589
  br i1 %tobool98, label %while.body99, label %while.end, !dbg !5585

while.body99:                                     ; preds = %while.cond95
  %111 = load i8*, i8** %line_start, align 8, !dbg !5590, !tbaa !2286
  %incdec.ptr100 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !5590
  store i8* %incdec.ptr100, i8** %line_start, align 8, !dbg !5590, !tbaa !2286
  br label %while.cond95, !dbg !5585, !llvm.loop !5591

while.end:                                        ; preds = %while.cond95
  br label %if.end101, !dbg !5585

if.end101:                                        ; preds = %while.end, %if.else
  %112 = load i8*, i8** %line_start, align 8, !dbg !5592, !tbaa !2286
  %113 = load %struct.line*, %struct.line** %line, align 8, !dbg !5593, !tbaa !2286
  %keybeg102 = getelementptr inbounds %struct.line, %struct.line* %113, i32 0, i32 2, !dbg !5594, !ctir !449
  store i8* %112, i8** %keybeg102, align 8, !dbg !5595, !tbaa !4619, !ctir !9
  br label %if.end103

if.end103:                                        ; preds = %if.end101, %if.then91
  br label %if.end104, !dbg !5596

if.end104:                                        ; preds = %if.end103, %cond.end77
  %114 = load i8*, i8** %ptr, align 8, !dbg !5597, !tbaa !2286
  store i8* %114, i8** %line_start, align 8, !dbg !5598, !tbaa !2286
  br label %while.cond56, !dbg !5526, !llvm.loop !5599

while.end105:                                     ; preds = %while.cond56
  %115 = load i8*, i8** %ptrlim, align 8, !dbg !5601, !tbaa !2286
  store i8* %115, i8** %ptr, align 8, !dbg !5602, !tbaa !2286
  %116 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5603, !tbaa !2286
  %eof106 = getelementptr inbounds %struct.buffer, %struct.buffer* %116, i32 0, i32 6, !dbg !5605, !ctir !458
  %117 = load i8, i8* %eof106, align 8, !dbg !5605, !tbaa !5032
  %tobool107 = trunc i8 %117 to i1, !dbg !5605, !ctir !103
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !5606

if.then108:                                       ; preds = %while.end105
  br label %while.end110, !dbg !5607

if.end109:                                        ; preds = %while.end105
  br label %while.cond25, !dbg !5460, !llvm.loop !5608

while.end110:                                     ; preds = %if.then108, %while.cond25
  %118 = load i8*, i8** %ptr, align 8, !dbg !5610, !tbaa !2286
  %119 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5611, !tbaa !2286
  %buf111 = getelementptr inbounds %struct.buffer, %struct.buffer* %119, i32 0, i32 0, !dbg !5612, !ctir !458
  %120 = load i8*, i8** %buf111, align 8, !dbg !5612, !tbaa !4643, !ctir !9
  %sub.ptr.lhs.cast112 = ptrtoint i8* %118 to i64, !dbg !5613
  %sub.ptr.rhs.cast113 = ptrtoint i8* %120 to i64, !dbg !5613
  %sub.ptr.sub114 = sub i64 %sub.ptr.lhs.cast112, %sub.ptr.rhs.cast113, !dbg !5613
  %121 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5614, !tbaa !2286
  %used115 = getelementptr inbounds %struct.buffer, %struct.buffer* %121, i32 0, i32 1, !dbg !5615, !ctir !458
  store i64 %sub.ptr.sub114, i64* %used115, align 8, !dbg !5616, !tbaa !5051, !ctir !55
  %122 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5617, !tbaa !2286
  %call116 = call %struct.line* @buffer_linelim(%struct.buffer* %122), !dbg !5618
  %123 = load %struct.line*, %struct.line** %line, align 8, !dbg !5619, !tbaa !2286
  %sub.ptr.lhs.cast117 = ptrtoint %struct.line* %call116 to i64, !dbg !5620
  %sub.ptr.rhs.cast118 = ptrtoint %struct.line* %123 to i64, !dbg !5620
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !5620
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub119, 32, !dbg !5620
  %124 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5621, !tbaa !2286
  %nlines120 = getelementptr inbounds %struct.buffer, %struct.buffer* %124, i32 0, i32 2, !dbg !5622, !ctir !458
  store i64 %sub.ptr.div, i64* %nlines120, align 8, !dbg !5623, !tbaa !4502, !ctir !55
  %125 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5624, !tbaa !2286
  %nlines121 = getelementptr inbounds %struct.buffer, %struct.buffer* %125, i32 0, i32 2, !dbg !5626, !ctir !458
  %126 = load i64, i64* %nlines121, align 8, !dbg !5626, !tbaa !4502, !ctir !55
  %cmp122 = icmp ne i64 %126, 0, !dbg !5627
  br i1 %cmp122, label %if.then124, label %if.end130, !dbg !5628

if.then124:                                       ; preds = %while.end110
  %127 = load i8*, i8** %ptr, align 8, !dbg !5629, !tbaa !2286
  %128 = load i8*, i8** %line_start, align 8, !dbg !5631, !tbaa !2286
  %sub.ptr.lhs.cast125 = ptrtoint i8* %127 to i64, !dbg !5632
  %sub.ptr.rhs.cast126 = ptrtoint i8* %128 to i64, !dbg !5632
  %sub.ptr.sub127 = sub i64 %sub.ptr.lhs.cast125, %sub.ptr.rhs.cast126, !dbg !5632
  %129 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5633, !tbaa !2286
  %left128 = getelementptr inbounds %struct.buffer, %struct.buffer* %129, i32 0, i32 4, !dbg !5634, !ctir !458
  store i64 %sub.ptr.sub127, i64* %left128, align 8, !dbg !5635, !tbaa !5063, !ctir !55
  %130 = load i64, i64* %mergesize, align 8, !dbg !5636, !tbaa !2447
  %add129 = add i64 %130, 34, !dbg !5637
  store i64 %add129, i64* @merge_buffer_size, align 8, !dbg !5638, !tbaa !2447
  store i1 true, i1* %retval, align 1, !dbg !5639
  br label %return, !dbg !5639

if.end130:                                        ; preds = %while.end110
  call void @llvm.dbg.declare(metadata i64* %line_alloc, metadata !5640, metadata !DIExpression()), !dbg !5642
  %131 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5643, !tbaa !2286
  %alloc = getelementptr inbounds %struct.buffer, %struct.buffer* %131, i32 0, i32 3, !dbg !5644, !ctir !458
  %132 = load i64, i64* %alloc, align 8, !dbg !5644, !tbaa !4979, !ctir !55
  %div131 = udiv i64 %132, 32, !dbg !5645
  store i64 %div131, i64* %line_alloc, align 8, !dbg !5642, !tbaa !2447
  %133 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5646, !tbaa !2286
  %buf132 = getelementptr inbounds %struct.buffer, %struct.buffer* %133, i32 0, i32 0, !dbg !5647, !ctir !458
  %134 = load i8*, i8** %buf132, align 8, !dbg !5647, !tbaa !4643, !ctir !9
  %call133 = call i8* @x2nrealloc(i8* %134, i64* %line_alloc, i64 32), !dbg !5648
  %135 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5649, !tbaa !2286
  %buf134 = getelementptr inbounds %struct.buffer, %struct.buffer* %135, i32 0, i32 0, !dbg !5650, !ctir !458
  store i8* %call133, i8** %buf134, align 8, !dbg !5651, !tbaa !4643, !ctir !9
  %136 = load i64, i64* %line_alloc, align 8, !dbg !5652, !tbaa !2447
  %mul135 = mul i64 %136, 32, !dbg !5653
  %137 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5654, !tbaa !2286
  %alloc136 = getelementptr inbounds %struct.buffer, %struct.buffer* %137, i32 0, i32 3, !dbg !5655, !ctir !458
  store i64 %mul135, i64* %alloc136, align 8, !dbg !5656, !tbaa !4979, !ctir !55
  br label %while.body, !dbg !5419, !llvm.loop !5657

return:                                           ; preds = %if.then124, %if.then46, %if.then
  %138 = load i1, i1* %retval, align 1, !dbg !5659
  ret i1 %138, !dbg !5659
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.line* @buffer_linelim(%struct.buffer* %buf) #4 !dbg !5660 !ctir !472 {
entry:
  %buf.addr = alloca %struct.buffer*, align 8
  %linelim = alloca i8*, align 8, !ctir !53
  store %struct.buffer* %buf, %struct.buffer** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.buffer** %buf.addr, metadata !5661, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.declare(metadata i8** %linelim, metadata !5663, metadata !DIExpression()), !dbg !5664
  %0 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5665, !tbaa !2286
  %buf1 = getelementptr inbounds %struct.buffer, %struct.buffer* %0, i32 0, i32 0, !dbg !5666, !ctir !475
  %1 = load i8*, i8** %buf1, align 8, !dbg !5666, !tbaa !4643, !ctir !9
  %2 = load %struct.buffer*, %struct.buffer** %buf.addr, align 8, !dbg !5667, !tbaa !2286
  %alloc = getelementptr inbounds %struct.buffer, %struct.buffer* %2, i32 0, i32 3, !dbg !5668, !ctir !475
  %3 = load i64, i64* %alloc, align 8, !dbg !5668, !tbaa !4979, !ctir !55
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %3, !dbg !5669
  store i8* %add.ptr, i8** %linelim, align 8, !dbg !5664, !tbaa !2286
  %4 = load i8*, i8** %linelim, align 8, !dbg !5670, !tbaa !2286
  %5 = bitcast i8* %4 to %struct.line*, !dbg !5670
  ret %struct.line* %5, !dbg !5671
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tempnode* @create_temp(%struct._IO_FILE** %pfp) #4 !dbg !5672 !ctir !535 {
entry:
  %pfp.addr = alloca %struct._IO_FILE**, align 8
  store %struct._IO_FILE** %pfp, %struct._IO_FILE*** %pfp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %pfp.addr, metadata !5673, metadata !DIExpression()), !dbg !5674
  %0 = load %struct._IO_FILE**, %struct._IO_FILE*** %pfp.addr, align 8, !dbg !5675, !tbaa !2286
  %call = call %struct.tempnode* @maybe_create_temp(%struct._IO_FILE** %0, i1 zeroext false), !dbg !5676
  ret %struct.tempnode* %call, !dbg !5677
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_init(%struct.merge_node_queue* %queue, i64 %nthreads) #4 !dbg !5678 !ctir !628 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %nthreads.addr = alloca i64, align 8
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5681, metadata !DIExpression()), !dbg !5682
  %0 = load i64, i64* %nthreads.addr, align 8, !dbg !5683, !tbaa !2447
  %mul = mul i64 2, %0, !dbg !5684
  %call = call %struct.heap* @heap_alloc(i32 (i8*, i8*)* @compare_nodes, i64 %mul), !dbg !5685
  %1 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5686, !tbaa !2286
  %priority_queue = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %1, i32 0, i32 0, !dbg !5687, !ctir !631
  store %struct.heap* %call, %struct.heap** %priority_queue, align 8, !dbg !5688, !tbaa !5689, !ctir !634
  %2 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5691, !tbaa !2286
  %mutex = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %2, i32 0, i32 1, !dbg !5692, !ctir !631
  %call1 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %mutex, %union.pthread_mutexattr_t* null) #12, !dbg !5693
  %3 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5694, !tbaa !2286
  %cond = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %3, i32 0, i32 2, !dbg !5695, !ctir !631
  %call2 = call i32 @pthread_cond_init(%union.pthread_cond_t* %cond, %union.pthread_mutexattr_t* null) #12, !dbg !5696
  ret void, !dbg !5697
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.merge_node* @merge_tree_init(i64 %nthreads, i64 %nlines, %struct.line* %dest) #4 !dbg !5698 !ctir !678 {
entry:
  %nthreads.addr = alloca i64, align 8
  %nlines.addr = alloca i64, align 8
  %dest.addr = alloca %struct.line*, align 8
  %merge_tree = alloca %struct.merge_node*, align 8, !ctir !576
  %root = alloca %struct.merge_node*, align 8, !ctir !576
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  store i64 %nlines, i64* %nlines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nlines.addr, metadata !5701, metadata !DIExpression()), !dbg !5702
  store %struct.line* %dest, %struct.line** %dest.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %dest.addr, metadata !5703, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata %struct.merge_node** %merge_tree, metadata !5705, metadata !DIExpression()), !dbg !5706
  %0 = load i64, i64* %nthreads.addr, align 8, !dbg !5707, !tbaa !2447
  %mul = mul i64 256, %0, !dbg !5708
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !5709
  %1 = bitcast i8* %call to %struct.merge_node*, !dbg !5709
  store %struct.merge_node* %1, %struct.merge_node** %merge_tree, align 8, !dbg !5706, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %root, metadata !5710, metadata !DIExpression()), !dbg !5711
  %2 = load %struct.merge_node*, %struct.merge_node** %merge_tree, align 8, !dbg !5712, !tbaa !2286
  store %struct.merge_node* %2, %struct.merge_node** %root, align 8, !dbg !5711, !tbaa !2286
  %3 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5713, !tbaa !2286
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %3, i32 0, i32 3, !dbg !5714, !ctir !577
  store %struct.line* null, %struct.line** %end_hi, align 8, !dbg !5715, !tbaa !5716, !ctir !469
  %4 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5718, !tbaa !2286
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %4, i32 0, i32 2, !dbg !5719, !ctir !577
  store %struct.line* null, %struct.line** %end_lo, align 8, !dbg !5720, !tbaa !5721, !ctir !469
  %5 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5722, !tbaa !2286
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 1, !dbg !5723, !ctir !577
  store %struct.line* null, %struct.line** %hi, align 8, !dbg !5724, !tbaa !5725, !ctir !469
  %6 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5726, !tbaa !2286
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %6, i32 0, i32 0, !dbg !5727, !ctir !577
  store %struct.line* null, %struct.line** %lo, align 8, !dbg !5728, !tbaa !5729, !ctir !469
  %7 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5730, !tbaa !2286
  %dest1 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %7, i32 0, i32 4, !dbg !5731, !ctir !577
  store %struct.line** null, %struct.line*** %dest1, align 8, !dbg !5732, !tbaa !5733, !ctir !584
  %8 = load i64, i64* %nlines.addr, align 8, !dbg !5734, !tbaa !2447
  %9 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5735, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %9, i32 0, i32 6, !dbg !5736, !ctir !577
  store i64 %8, i64* %nhi, align 8, !dbg !5737, !tbaa !5738, !ctir !55
  %10 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5739, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %10, i32 0, i32 5, !dbg !5740, !ctir !577
  store i64 %8, i64* %nlo, align 8, !dbg !5741, !tbaa !5742, !ctir !55
  %11 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5743, !tbaa !2286
  %parent = getelementptr inbounds %struct.merge_node, %struct.merge_node* %11, i32 0, i32 7, !dbg !5744, !ctir !577
  store %struct.merge_node* null, %struct.merge_node** %parent, align 8, !dbg !5745, !tbaa !5746, !ctir !576
  %12 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5747, !tbaa !2286
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 10, !dbg !5748, !ctir !577
  store i32 0, i32* %level, align 8, !dbg !5749, !tbaa !5750, !ctir !69
  %13 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5751, !tbaa !2286
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %13, i32 0, i32 11, !dbg !5752, !ctir !577
  store i8 0, i8* %queued, align 4, !dbg !5753, !tbaa !5754, !ctir !103
  %14 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5755, !tbaa !2286
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 12, !dbg !5756, !ctir !577
  %call2 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %lock, %union.pthread_mutexattr_t* null) #12, !dbg !5757
  %15 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5758, !tbaa !2286
  %16 = load %struct.merge_node*, %struct.merge_node** %root, align 8, !dbg !5759, !tbaa !2286
  %add.ptr = getelementptr inbounds %struct.merge_node, %struct.merge_node* %16, i64 1, !dbg !5760
  %17 = load %struct.line*, %struct.line** %dest.addr, align 8, !dbg !5761, !tbaa !2286
  %18 = load i64, i64* %nthreads.addr, align 8, !dbg !5762, !tbaa !2447
  %19 = load i64, i64* %nlines.addr, align 8, !dbg !5763, !tbaa !2447
  %call3 = call %struct.merge_node* @init_node(%struct.merge_node* %15, %struct.merge_node* %add.ptr, %struct.line* %17, i64 %18, i64 %19, i1 zeroext false), !dbg !5764
  %20 = load %struct.merge_node*, %struct.merge_node** %merge_tree, align 8, !dbg !5765, !tbaa !2286
  ret %struct.merge_node* %20, !dbg !5766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sortlines(%struct.line* noalias %lines, i64 %nthreads, i64 %total_lines, %struct.merge_node* %node, %struct.merge_node_queue* %queue, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !5767 !ctir !683 {
entry:
  %lines.addr = alloca %struct.line*, align 8
  %nthreads.addr = alloca i64, align 8
  %total_lines.addr = alloca i64, align 8
  %node.addr = alloca %struct.merge_node*, align 8
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %tfp.addr = alloca %struct._IO_FILE*, align 8
  %temp_output.addr = alloca i8*, align 8
  %nlines = alloca i64, align 8, !ctir !55
  %lo_threads = alloca i64, align 8, !ctir !55
  %hi_threads = alloca i64, align 8, !ctir !55
  %thread = alloca i64, align 8, !ctir !686
  %args = alloca %struct.thread_args, align 8, !ctir !691
  %nlo12 = alloca i64, align 8, !ctir !55
  %nhi14 = alloca i64, align 8, !ctir !55
  %temp = alloca %struct.line*, align 8, !ctir !469
  store %struct.line* %lines, %struct.line** %lines.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %lines.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !5772, metadata !DIExpression()), !dbg !5773
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !5774, metadata !DIExpression()), !dbg !5775
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !5776, metadata !DIExpression()), !dbg !5777
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !5778, metadata !DIExpression()), !dbg !5779
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.declare(metadata i64* %nlines, metadata !5782, metadata !DIExpression()), !dbg !5783
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5784, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 5, !dbg !5785, !ctir !577
  %1 = load i64, i64* %nlo, align 8, !dbg !5785, !tbaa !5742, !ctir !55
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5786, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 6, !dbg !5787, !ctir !577
  %3 = load i64, i64* %nhi, align 8, !dbg !5787, !tbaa !5738, !ctir !55
  %add = add i64 %1, %3, !dbg !5788
  store i64 %add, i64* %nlines, align 8, !dbg !5783, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %lo_threads, metadata !5789, metadata !DIExpression()), !dbg !5790
  %4 = load i64, i64* %nthreads.addr, align 8, !dbg !5791, !tbaa !2447
  %div = udiv i64 %4, 2, !dbg !5792
  store i64 %div, i64* %lo_threads, align 8, !dbg !5790, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %hi_threads, metadata !5793, metadata !DIExpression()), !dbg !5794
  %5 = load i64, i64* %nthreads.addr, align 8, !dbg !5795, !tbaa !2447
  %6 = load i64, i64* %lo_threads, align 8, !dbg !5796, !tbaa !2447
  %sub = sub i64 %5, %6, !dbg !5797
  store i64 %sub, i64* %hi_threads, align 8, !dbg !5794, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %thread, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.declare(metadata %struct.thread_args* %args, metadata !5800, metadata !DIExpression()), !dbg !5801
  %lines1 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 0, !dbg !5802
  %7 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5803, !tbaa !2286
  store %struct.line* %7, %struct.line** %lines1, align 8, !dbg !5802, !tbaa !5804
  %nthreads2 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 1, !dbg !5802
  %8 = load i64, i64* %lo_threads, align 8, !dbg !5806, !tbaa !2447
  store i64 %8, i64* %nthreads2, align 8, !dbg !5802, !tbaa !5807
  %total_lines3 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 2, !dbg !5802
  %9 = load i64, i64* %total_lines.addr, align 8, !dbg !5808, !tbaa !2447
  store i64 %9, i64* %total_lines3, align 8, !dbg !5802, !tbaa !5809
  %node4 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 3, !dbg !5802
  %10 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5810, !tbaa !2286
  %lo_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %10, i32 0, i32 8, !dbg !5811, !ctir !577
  %11 = load %struct.merge_node*, %struct.merge_node** %lo_child, align 8, !dbg !5811, !tbaa !5812, !ctir !576
  store %struct.merge_node* %11, %struct.merge_node** %node4, align 8, !dbg !5802, !tbaa !5813
  %queue5 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 4, !dbg !5802
  %12 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5814, !tbaa !2286
  store %struct.merge_node_queue* %12, %struct.merge_node_queue** %queue5, align 8, !dbg !5802, !tbaa !5815
  %tfp6 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 5, !dbg !5802
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5816, !tbaa !2286
  store %struct._IO_FILE* %13, %struct._IO_FILE** %tfp6, align 8, !dbg !5802, !tbaa !5817
  %output_temp = getelementptr inbounds %struct.thread_args, %struct.thread_args* %args, i32 0, i32 6, !dbg !5802
  %14 = load i8*, i8** %temp_output.addr, align 8, !dbg !5818, !tbaa !2286
  store i8* %14, i8** %output_temp, align 8, !dbg !5802, !tbaa !5819
  %15 = load i64, i64* %nthreads.addr, align 8, !dbg !5820, !tbaa !2447
  %cmp = icmp ugt i64 %15, 1, !dbg !5822
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5823

land.lhs.true:                                    ; preds = %entry
  %16 = load i64, i64* %nlines, align 8, !dbg !5824, !tbaa !2447
  %cmp7 = icmp ule i64 131072, %16, !dbg !5825
  br i1 %cmp7, label %land.lhs.true8, label %if.else, !dbg !5826

land.lhs.true8:                                   ; preds = %land.lhs.true
  %17 = bitcast %struct.thread_args* %args to i8*, !dbg !5827
  %call = call i32 @pthread_create(i64* %thread, %union.pthread_attr_t* null, i8* (i8*)* @sortlines_thread, i8* %17) #12, !dbg !5828
  %cmp9 = icmp eq i32 %call, 0, !dbg !5829
  br i1 %cmp9, label %if.then, label %if.else, !dbg !5830

if.then:                                          ; preds = %land.lhs.true8
  %18 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5831, !tbaa !2286
  %19 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5833, !tbaa !2286
  %nlo10 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %19, i32 0, i32 5, !dbg !5834, !ctir !577
  %20 = load i64, i64* %nlo10, align 8, !dbg !5834, !tbaa !5742, !ctir !55
  %idx.neg = sub i64 0, %20, !dbg !5835
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %18, i64 %idx.neg, !dbg !5835
  %21 = load i64, i64* %hi_threads, align 8, !dbg !5836, !tbaa !2447
  %22 = load i64, i64* %total_lines.addr, align 8, !dbg !5837, !tbaa !2447
  %23 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5838, !tbaa !2286
  %hi_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %23, i32 0, i32 9, !dbg !5839, !ctir !577
  %24 = load %struct.merge_node*, %struct.merge_node** %hi_child, align 8, !dbg !5839, !tbaa !5840, !ctir !576
  %25 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5841, !tbaa !2286
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5842, !tbaa !2286
  %27 = load i8*, i8** %temp_output.addr, align 8, !dbg !5843, !tbaa !2286
  call void @sortlines(%struct.line* %add.ptr, i64 %21, i64 %22, %struct.merge_node* %24, %struct.merge_node_queue* %25, %struct._IO_FILE* %26, i8* %27), !dbg !5844
  %28 = load i64, i64* %thread, align 8, !dbg !5845, !tbaa !2447
  %call11 = call i32 @pthread_join(i64 %28, i8** null), !dbg !5846
  br label %if.end36, !dbg !5847

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %nlo12, metadata !5848, metadata !DIExpression()), !dbg !5850
  %29 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5851, !tbaa !2286
  %nlo13 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %29, i32 0, i32 5, !dbg !5852, !ctir !577
  %30 = load i64, i64* %nlo13, align 8, !dbg !5852, !tbaa !5742, !ctir !55
  store i64 %30, i64* %nlo12, align 8, !dbg !5850, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nhi14, metadata !5853, metadata !DIExpression()), !dbg !5854
  %31 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5855, !tbaa !2286
  %nhi15 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %31, i32 0, i32 6, !dbg !5856, !ctir !577
  %32 = load i64, i64* %nhi15, align 8, !dbg !5856, !tbaa !5738, !ctir !55
  store i64 %32, i64* %nhi14, align 8, !dbg !5854, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.line** %temp, metadata !5857, metadata !DIExpression()), !dbg !5858
  %33 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5859, !tbaa !2286
  %34 = load i64, i64* %total_lines.addr, align 8, !dbg !5860, !tbaa !2447
  %idx.neg16 = sub i64 0, %34, !dbg !5861
  %add.ptr17 = getelementptr inbounds %struct.line, %struct.line* %33, i64 %idx.neg16, !dbg !5861
  store %struct.line* %add.ptr17, %struct.line** %temp, align 8, !dbg !5858, !tbaa !2286
  %35 = load i64, i64* %nhi14, align 8, !dbg !5862, !tbaa !2447
  %cmp18 = icmp ult i64 1, %35, !dbg !5864
  br i1 %cmp18, label %if.then19, label %if.end, !dbg !5865

if.then19:                                        ; preds = %if.else
  %36 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5866, !tbaa !2286
  %37 = load i64, i64* %nlo12, align 8, !dbg !5867, !tbaa !2447
  %idx.neg20 = sub i64 0, %37, !dbg !5868
  %add.ptr21 = getelementptr inbounds %struct.line, %struct.line* %36, i64 %idx.neg20, !dbg !5868
  %38 = load i64, i64* %nhi14, align 8, !dbg !5869, !tbaa !2447
  %39 = load %struct.line*, %struct.line** %temp, align 8, !dbg !5870, !tbaa !2286
  %40 = load i64, i64* %nlo12, align 8, !dbg !5871, !tbaa !2447
  %div22 = udiv i64 %40, 2, !dbg !5872
  %idx.neg23 = sub i64 0, %div22, !dbg !5873
  %add.ptr24 = getelementptr inbounds %struct.line, %struct.line* %39, i64 %idx.neg23, !dbg !5873
  call void @sequential_sort(%struct.line* %add.ptr21, i64 %38, %struct.line* %add.ptr24, i1 zeroext false), !dbg !5874
  br label %if.end, !dbg !5874

if.end:                                           ; preds = %if.then19, %if.else
  %41 = load i64, i64* %nlo12, align 8, !dbg !5875, !tbaa !2447
  %cmp25 = icmp ult i64 1, %41, !dbg !5877
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5878

if.then26:                                        ; preds = %if.end
  %42 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5879, !tbaa !2286
  %43 = load i64, i64* %nlo12, align 8, !dbg !5880, !tbaa !2447
  %44 = load %struct.line*, %struct.line** %temp, align 8, !dbg !5881, !tbaa !2286
  call void @sequential_sort(%struct.line* %42, i64 %43, %struct.line* %44, i1 zeroext false), !dbg !5882
  br label %if.end27, !dbg !5882

if.end27:                                         ; preds = %if.then26, %if.end
  %45 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5883, !tbaa !2286
  %46 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5884, !tbaa !2286
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %46, i32 0, i32 0, !dbg !5885, !ctir !577
  store %struct.line* %45, %struct.line** %lo, align 8, !dbg !5886, !tbaa !5729, !ctir !469
  %47 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5887, !tbaa !2286
  %48 = load i64, i64* %nlo12, align 8, !dbg !5888, !tbaa !2447
  %idx.neg28 = sub i64 0, %48, !dbg !5889
  %add.ptr29 = getelementptr inbounds %struct.line, %struct.line* %47, i64 %idx.neg28, !dbg !5889
  %49 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5890, !tbaa !2286
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %49, i32 0, i32 1, !dbg !5891, !ctir !577
  store %struct.line* %add.ptr29, %struct.line** %hi, align 8, !dbg !5892, !tbaa !5725, !ctir !469
  %50 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5893, !tbaa !2286
  %51 = load i64, i64* %nlo12, align 8, !dbg !5894, !tbaa !2447
  %idx.neg30 = sub i64 0, %51, !dbg !5895
  %add.ptr31 = getelementptr inbounds %struct.line, %struct.line* %50, i64 %idx.neg30, !dbg !5895
  %52 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5896, !tbaa !2286
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %52, i32 0, i32 2, !dbg !5897, !ctir !577
  store %struct.line* %add.ptr31, %struct.line** %end_lo, align 8, !dbg !5898, !tbaa !5721, !ctir !469
  %53 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !5899, !tbaa !2286
  %54 = load i64, i64* %nlo12, align 8, !dbg !5900, !tbaa !2447
  %idx.neg32 = sub i64 0, %54, !dbg !5901
  %add.ptr33 = getelementptr inbounds %struct.line, %struct.line* %53, i64 %idx.neg32, !dbg !5901
  %55 = load i64, i64* %nhi14, align 8, !dbg !5902, !tbaa !2447
  %idx.neg34 = sub i64 0, %55, !dbg !5903
  %add.ptr35 = getelementptr inbounds %struct.line, %struct.line* %add.ptr33, i64 %idx.neg34, !dbg !5903
  %56 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5904, !tbaa !2286
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %56, i32 0, i32 3, !dbg !5905, !ctir !577
  store %struct.line* %add.ptr35, %struct.line** %end_hi, align 8, !dbg !5906, !tbaa !5716, !ctir !469
  %57 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5907, !tbaa !2286
  %58 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !5908, !tbaa !2286
  call void @queue_insert(%struct.merge_node_queue* %57, %struct.merge_node* %58), !dbg !5909
  %59 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !5910, !tbaa !2286
  %60 = load i64, i64* %total_lines.addr, align 8, !dbg !5911, !tbaa !2447
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5912, !tbaa !2286
  %62 = load i8*, i8** %temp_output.addr, align 8, !dbg !5913, !tbaa !2286
  call void @merge_loop(%struct.merge_node_queue* %59, i64 %60, %struct._IO_FILE* %61, i8* %62), !dbg !5914
  br label %if.end36

if.end36:                                         ; preds = %if.end27, %if.then
  ret void, !dbg !5915
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_unique(%struct.line* %line, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !5916 !ctir !516 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %tfp.addr = alloca %struct._IO_FILE*, align 8
  %temp_output.addr = alloca i8*, align 8
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !5917, metadata !DIExpression()), !dbg !5918
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !5919, metadata !DIExpression()), !dbg !5920
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  %0 = load i8, i8* @unique, align 1, !dbg !5923, !tbaa !2430
  %tobool = trunc i8 %0 to i1, !dbg !5923
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5925

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.line, %struct.line* @saved_line, i32 0, i32 0), align 8, !dbg !5926, !tbaa !4488, !ctir !9
  %tobool1 = icmp ne i8* %1, null, !dbg !5929
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !5930

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !5931, !tbaa !2286
  %call = call i32 @compare(%struct.line* %2, %struct.line* @saved_line), !dbg !5932
  %tobool2 = icmp ne i32 %call, 0, !dbg !5932
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !5933

if.then3:                                         ; preds = %land.lhs.true
  br label %return, !dbg !5934

if.end:                                           ; preds = %land.lhs.true, %if.then
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !5935, !tbaa !2286
  %4 = bitcast %struct.line* %3 to i8*, !dbg !5936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.line* @saved_line to i8*), i8* align 8 %4, i64 32, i1 false), !dbg !5936, !tbaa.struct !5937
  br label %if.end4, !dbg !5938

if.end4:                                          ; preds = %if.end, %entry
  %5 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !5939, !tbaa !2286
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !5940, !tbaa !2286
  %7 = load i8*, i8** %temp_output.addr, align 8, !dbg !5941, !tbaa !2286
  call void @write_line(%struct.line* %5, %struct._IO_FILE* %6, i8* %7), !dbg !5942
  br label %return, !dbg !5943

return:                                           ; preds = %if.end4, %if.then3
  ret void, !dbg !5943
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reap_all() #4 !dbg !5944 !ctir !168 {
entry:
  br label %while.cond, !dbg !5945

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* @nprocs, align 4, !dbg !5946, !tbaa !2273
  %cmp = icmp slt i32 0, %0, !dbg !5947
  br i1 %cmp, label %while.body, label %while.end, !dbg !5945

while.body:                                       ; preds = %while.cond
  %call = call i32 @reap(i32 -1), !dbg !5948
  br label %while.cond, !dbg !5945, !llvm.loop !5949

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5951
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @reap(i32 %pid) #4 !dbg !5952 !ctir !553 {
entry:
  %pid.addr = alloca i32, align 4
  %status = alloca i32, align 4, !ctir !7
  %cpid = alloca i32, align 4, !ctir !299
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %cpid, metadata !5957, metadata !DIExpression()), !dbg !5958
  %0 = load i32, i32* %pid.addr, align 4, !dbg !5959, !tbaa !2273
  %tobool = icmp ne i32 %0, 0, !dbg !5959
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5959

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %pid.addr, align 4, !dbg !5960, !tbaa !2273
  br label %cond.end, !dbg !5959

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5959

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ -1, %cond.false ], !dbg !5959
  %2 = load i32, i32* %pid.addr, align 4, !dbg !5961, !tbaa !2273
  %tobool1 = icmp ne i32 %2, 0, !dbg !5961
  %3 = zext i1 %tobool1 to i64, !dbg !5961
  %cond2 = select i1 %tobool1, i32 0, i32 1, !dbg !5961
  %call = call i32 @waitpid(i32 %cond, i32* %status, i32 %cond2), !dbg !5962
  store i32 %call, i32* %cpid, align 4, !dbg !5958, !tbaa !2273
  %4 = load i32, i32* %cpid, align 4, !dbg !5963, !tbaa !2273
  %cmp = icmp slt i32 %4, 0, !dbg !5965
  br i1 %cmp, label %if.then, label %if.else, !dbg !5966

if.then:                                          ; preds = %cond.end
  %call3 = call i32* @__errno_location() #16, !dbg !5967
  %5 = load i32, i32* %call3, align 4, !dbg !5967, !tbaa !2273, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.171, i64 0, i64 0)) #12, !dbg !5967
  %6 = load i8*, i8** @compress_program, align 8, !dbg !5967, !tbaa !2286
  %call5 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !5967
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %5, i8* %call4, i8* %call5), !dbg !5967
  unreachable, !dbg !5967

if.else:                                          ; preds = %cond.end
  %7 = load i32, i32* %cpid, align 4, !dbg !5968, !tbaa !2273
  %cmp6 = icmp slt i32 0, %7, !dbg !5970
  br i1 %cmp6, label %land.lhs.true, label %if.end17, !dbg !5971

land.lhs.true:                                    ; preds = %if.else
  %8 = load i32, i32* %pid.addr, align 4, !dbg !5972, !tbaa !2273
  %cmp7 = icmp slt i32 0, %8, !dbg !5973
  br i1 %cmp7, label %if.then9, label %lor.lhs.false, !dbg !5974

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i32, i32* %cpid, align 4, !dbg !5975, !tbaa !2273
  %call8 = call zeroext i1 @delete_proc(i32 %9), !dbg !5976
  br i1 %call8, label %if.then9, label %if.end17, !dbg !5977

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %10 = load i32, i32* %status, align 4, !dbg !5978, !tbaa !2273
  %and = and i32 %10, 127, !dbg !5978
  %cmp10 = icmp eq i32 %and, 0, !dbg !5978
  br i1 %cmp10, label %lor.lhs.false11, label %if.then14, !dbg !5981

lor.lhs.false11:                                  ; preds = %if.then9
  %11 = load i32, i32* %status, align 4, !dbg !5982, !tbaa !2273
  %and12 = and i32 %11, 65280, !dbg !5982
  %shr = ashr i32 %and12, 8, !dbg !5982
  %tobool13 = icmp ne i32 %shr, 0, !dbg !5982
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !5983

if.then14:                                        ; preds = %lor.lhs.false11, %if.then9
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.172, i64 0, i64 0)) #12, !dbg !5984
  %12 = load i8*, i8** @compress_program, align 8, !dbg !5984, !tbaa !2286
  %call16 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !5984
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call15, i8* %call16), !dbg !5984
  unreachable, !dbg !5984

if.end:                                           ; preds = %lor.lhs.false11
  %13 = load i32, i32* @nprocs, align 4, !dbg !5985, !tbaa !2273
  %dec = add nsw i32 %13, -1, !dbg !5985
  store i32 %dec, i32* @nprocs, align 4, !dbg !5985, !tbaa !2273
  br label %if.end17, !dbg !5986

if.end17:                                         ; preds = %if.end, %lor.lhs.false, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  %14 = load i32, i32* %cpid, align 4, !dbg !5987, !tbaa !2273
  ret i32 %14, !dbg !5988
}

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @delete_proc(i32 %pid) #4 !dbg !5989 !ctir !547 {
entry:
  %retval = alloca i1, align 1
  %pid.addr = alloca i32, align 4
  %test = alloca %struct.tempnode, align 8, !ctir !294
  %node = alloca %struct.tempnode*, align 8, !ctir !293
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !5990, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.declare(metadata %struct.tempnode* %test, metadata !5992, metadata !DIExpression()), !dbg !5993
  %0 = load i32, i32* %pid.addr, align 4, !dbg !5994, !tbaa !2273
  %pid1 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %test, i32 0, i32 1, !dbg !5995, !ctir !294
  store i32 %0, i32* %pid1, align 8, !dbg !5996, !tbaa !2273, !ctir !299
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !5997, metadata !DIExpression()), !dbg !5998
  %1 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !5999, !tbaa !2286
  %2 = bitcast %struct.tempnode* %test to i8*, !dbg !6000
  %call = call i8* @hash_delete(%struct.hash_table* %1, i8* %2), !dbg !6001
  %3 = bitcast i8* %call to %struct.tempnode*, !dbg !6001
  store %struct.tempnode* %3, %struct.tempnode** %node, align 8, !dbg !5998, !tbaa !2286
  %4 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !6002, !tbaa !2286
  %tobool = icmp ne %struct.tempnode* %4, null, !dbg !6002
  br i1 %tobool, label %if.end, label %if.then, !dbg !6004

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6005
  br label %return, !dbg !6005

if.end:                                           ; preds = %entry
  %5 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !6006, !tbaa !2286
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %5, i32 0, i32 2, !dbg !6007, !ctir !294
  store i8 2, i8* %state, align 4, !dbg !6008, !tbaa !2438, !ctir !10
  store i1 true, i1* %retval, align 1, !dbg !6009
  br label %return, !dbg !6009

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !6010
  ret i1 %6, !dbg !6010
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare(%struct.line* %a, %struct.line* %b) #4 !dbg !6011 !ctir !476 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.line*, align 8
  %b.addr = alloca %struct.line*, align 8
  %diff = alloca i32, align 4, !ctir !7
  %alen = alloca i64, align 8, !ctir !55
  %blen = alloca i64, align 8, !ctir !55
  store %struct.line* %a, %struct.line** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %a.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  store %struct.line* %b, %struct.line** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %b.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6016, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.declare(metadata i64* %alen, metadata !6018, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !6020, metadata !DIExpression()), !dbg !6021
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !6022, !tbaa !2286
  %tobool = icmp ne %struct.keyfield* %0, null, !dbg !6022
  br i1 %tobool, label %if.then, label %if.end6, !dbg !6024

if.then:                                          ; preds = %entry
  %1 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6025, !tbaa !2286
  %2 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6027, !tbaa !2286
  %call = call i32 @keycompare(%struct.line* %1, %struct.line* %2), !dbg !6028
  store i32 %call, i32* %diff, align 4, !dbg !6029, !tbaa !2273
  %3 = load i32, i32* %diff, align 4, !dbg !6030, !tbaa !2273
  %tobool1 = icmp ne i32 %3, 0, !dbg !6030
  br i1 %tobool1, label %if.then5, label %lor.lhs.false, !dbg !6032

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i8, i8* @unique, align 1, !dbg !6033, !tbaa !2430
  %tobool2 = trunc i8 %4 to i1, !dbg !6033
  br i1 %tobool2, label %if.then5, label %lor.lhs.false3, !dbg !6034

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %5 = load i8, i8* @stable, align 1, !dbg !6035, !tbaa !2430
  %tobool4 = trunc i8 %5 to i1, !dbg !6035
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6036

if.then5:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %6 = load i32, i32* %diff, align 4, !dbg !6037, !tbaa !2273
  store i32 %6, i32* %retval, align 4, !dbg !6038
  br label %return, !dbg !6038

if.end:                                           ; preds = %lor.lhs.false3
  br label %if.end6, !dbg !6039

if.end6:                                          ; preds = %if.end, %entry
  %7 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6040, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %7, i32 0, i32 1, !dbg !6041, !ctir !448
  %8 = load i64, i64* %length, align 8, !dbg !6041, !tbaa !4573, !ctir !55
  %sub = sub i64 %8, 1, !dbg !6042
  store i64 %sub, i64* %alen, align 8, !dbg !6043, !tbaa !2447
  %9 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6044, !tbaa !2286
  %length7 = getelementptr inbounds %struct.line, %struct.line* %9, i32 0, i32 1, !dbg !6045, !ctir !448
  %10 = load i64, i64* %length7, align 8, !dbg !6045, !tbaa !4573, !ctir !55
  %sub8 = sub i64 %10, 1, !dbg !6046
  store i64 %sub8, i64* %blen, align 8, !dbg !6047, !tbaa !2447
  %11 = load i64, i64* %alen, align 8, !dbg !6048, !tbaa !2447
  %cmp = icmp eq i64 %11, 0, !dbg !6050
  br i1 %cmp, label %if.then9, label %if.else, !dbg !6051

if.then9:                                         ; preds = %if.end6
  %12 = load i64, i64* %blen, align 8, !dbg !6052, !tbaa !2447
  %cmp10 = icmp ne i64 %12, 0, !dbg !6052
  %conv = zext i1 %cmp10 to i32, !dbg !6052
  %sub11 = sub nsw i32 0, %conv, !dbg !6053
  store i32 %sub11, i32* %diff, align 4, !dbg !6054, !tbaa !2273
  br label %if.end40, !dbg !6055

if.else:                                          ; preds = %if.end6
  %13 = load i64, i64* %blen, align 8, !dbg !6056, !tbaa !2447
  %cmp12 = icmp eq i64 %13, 0, !dbg !6058
  br i1 %cmp12, label %if.then14, label %if.else15, !dbg !6059

if.then14:                                        ; preds = %if.else
  store i32 1, i32* %diff, align 4, !dbg !6060, !tbaa !2273
  br label %if.end39, !dbg !6061

if.else15:                                        ; preds = %if.else
  %14 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !6062, !tbaa !2430
  %tobool16 = trunc i8 %14 to i1, !dbg !6062
  br i1 %tobool16, label %if.then17, label %if.else21, !dbg !6064

if.then17:                                        ; preds = %if.else15
  %15 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6065, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %15, i32 0, i32 0, !dbg !6067, !ctir !448
  %16 = load i8*, i8** %text, align 8, !dbg !6067, !tbaa !4488, !ctir !9
  %17 = load i64, i64* %alen, align 8, !dbg !6068, !tbaa !2447
  %add = add i64 %17, 1, !dbg !6069
  %18 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6070, !tbaa !2286
  %text18 = getelementptr inbounds %struct.line, %struct.line* %18, i32 0, i32 0, !dbg !6071, !ctir !448
  %19 = load i8*, i8** %text18, align 8, !dbg !6071, !tbaa !4488, !ctir !9
  %20 = load i64, i64* %blen, align 8, !dbg !6072, !tbaa !2447
  %add19 = add i64 %20, 1, !dbg !6073
  %call20 = call i32 @xmemcoll0(i8* %16, i64 %add, i8* %19, i64 %add19), !dbg !6074
  store i32 %call20, i32* %diff, align 4, !dbg !6075, !tbaa !2273
  br label %if.end38, !dbg !6076

if.else21:                                        ; preds = %if.else15
  %21 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6077, !tbaa !2286
  %text22 = getelementptr inbounds %struct.line, %struct.line* %21, i32 0, i32 0, !dbg !6079, !ctir !448
  %22 = load i8*, i8** %text22, align 8, !dbg !6079, !tbaa !4488, !ctir !9
  %23 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6080, !tbaa !2286
  %text23 = getelementptr inbounds %struct.line, %struct.line* %23, i32 0, i32 0, !dbg !6081, !ctir !448
  %24 = load i8*, i8** %text23, align 8, !dbg !6081, !tbaa !4488, !ctir !9
  %25 = load i64, i64* %alen, align 8, !dbg !6082, !tbaa !2447
  %26 = load i64, i64* %blen, align 8, !dbg !6082, !tbaa !2447
  %cmp24 = icmp ult i64 %25, %26, !dbg !6082
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !6082

cond.true:                                        ; preds = %if.else21
  %27 = load i64, i64* %alen, align 8, !dbg !6082, !tbaa !2447
  br label %cond.end, !dbg !6082

cond.false:                                       ; preds = %if.else21
  %28 = load i64, i64* %blen, align 8, !dbg !6082, !tbaa !2447
  br label %cond.end, !dbg !6082

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %27, %cond.true ], [ %28, %cond.false ], !dbg !6082
  %call26 = call i32 @memcmp(i8* %22, i8* %24, i64 %cond) #14, !dbg !6083
  store i32 %call26, i32* %diff, align 4, !dbg !6084, !tbaa !2273
  %tobool27 = icmp ne i32 %call26, 0, !dbg !6084
  br i1 %tobool27, label %if.end37, label %if.then28, !dbg !6085

if.then28:                                        ; preds = %cond.end
  %29 = load i64, i64* %alen, align 8, !dbg !6086, !tbaa !2447
  %30 = load i64, i64* %blen, align 8, !dbg !6087, !tbaa !2447
  %cmp29 = icmp ult i64 %29, %30, !dbg !6088
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !6086

cond.true31:                                      ; preds = %if.then28
  br label %cond.end35, !dbg !6086

cond.false32:                                     ; preds = %if.then28
  %31 = load i64, i64* %alen, align 8, !dbg !6089, !tbaa !2447
  %32 = load i64, i64* %blen, align 8, !dbg !6090, !tbaa !2447
  %cmp33 = icmp ne i64 %31, %32, !dbg !6091
  %conv34 = zext i1 %cmp33 to i32, !dbg !6091
  br label %cond.end35, !dbg !6086

cond.end35:                                       ; preds = %cond.false32, %cond.true31
  %cond36 = phi i32 [ -1, %cond.true31 ], [ %conv34, %cond.false32 ], !dbg !6086
  store i32 %cond36, i32* %diff, align 4, !dbg !6092, !tbaa !2273
  br label %if.end37, !dbg !6093

if.end37:                                         ; preds = %cond.end35, %cond.end
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then17
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then14
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then9
  %33 = load i8, i8* @reverse, align 1, !dbg !6094, !tbaa !2430
  %tobool41 = trunc i8 %33 to i1, !dbg !6094
  br i1 %tobool41, label %cond.true43, label %cond.false45, !dbg !6094

cond.true43:                                      ; preds = %if.end40
  %34 = load i32, i32* %diff, align 4, !dbg !6095, !tbaa !2273
  %sub44 = sub nsw i32 0, %34, !dbg !6096
  br label %cond.end46, !dbg !6094

cond.false45:                                     ; preds = %if.end40
  %35 = load i32, i32* %diff, align 4, !dbg !6097, !tbaa !2273
  br label %cond.end46, !dbg !6094

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi i32 [ %sub44, %cond.true43 ], [ %35, %cond.false45 ], !dbg !6094
  store i32 %cond47, i32* %retval, align 4, !dbg !6098
  br label %return, !dbg !6098

return:                                           ; preds = %cond.end46, %if.then5
  %36 = load i32, i32* %retval, align 4, !dbg !6099
  ret i32 %36, !dbg !6099
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_line(%struct.line* %line, %struct._IO_FILE* %fp, i8* %output_file) #4 !dbg !6100 !ctir !516 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %output_file.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %n_bytes = alloca i64, align 8, !ctir !55
  %ebuf = alloca i8*, align 8, !ctir !9
  %c = alloca i8*, align 8, !ctir !88
  %wc = alloca i8, align 1, !ctir !10
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6107, metadata !DIExpression()), !dbg !6108
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6109, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6110, !ctir !448
  %1 = load i8*, i8** %text, align 8, !dbg !6110, !tbaa !4488, !ctir !9
  store i8* %1, i8** %buf, align 8, !dbg !6108, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %n_bytes, metadata !6111, metadata !DIExpression()), !dbg !6112
  %2 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6113, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %2, i32 0, i32 1, !dbg !6114, !ctir !448
  %3 = load i64, i64* %length, align 8, !dbg !6114, !tbaa !4573, !ctir !55
  store i64 %3, i64* %n_bytes, align 8, !dbg !6112, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %ebuf, metadata !6115, metadata !DIExpression()), !dbg !6116
  %4 = load i8*, i8** %buf, align 8, !dbg !6117, !tbaa !2286
  %5 = load i64, i64* %n_bytes, align 8, !dbg !6118, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !6119
  store i8* %add.ptr, i8** %ebuf, align 8, !dbg !6116, !tbaa !2286
  %6 = load i8*, i8** %output_file.addr, align 8, !dbg !6120, !tbaa !2286
  %tobool = icmp ne i8* %6, null, !dbg !6120
  br i1 %tobool, label %if.else15, label %land.lhs.true, !dbg !6122

land.lhs.true:                                    ; preds = %entry
  %7 = load i8, i8* @debug, align 1, !dbg !6123, !tbaa !2430
  %tobool1 = trunc i8 %7 to i1, !dbg !6123
  br i1 %tobool1, label %if.then, label %if.else15, !dbg !6124

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %c, metadata !6125, metadata !DIExpression()), !dbg !6127
  %8 = load i8*, i8** %buf, align 8, !dbg !6128, !tbaa !2286
  store i8* %8, i8** %c, align 8, !dbg !6127, !tbaa !2286
  br label %while.cond, !dbg !6129

while.cond:                                       ; preds = %if.end14, %if.then
  %9 = load i8*, i8** %c, align 8, !dbg !6130, !tbaa !2286
  %10 = load i8*, i8** %ebuf, align 8, !dbg !6131, !tbaa !2286
  %cmp = icmp ult i8* %9, %10, !dbg !6132
  br i1 %cmp, label %while.body, label %while.end, !dbg !6129

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %wc, metadata !6133, metadata !DIExpression()), !dbg !6135
  %11 = load i8*, i8** %c, align 8, !dbg !6136, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6136
  store i8* %incdec.ptr, i8** %c, align 8, !dbg !6136, !tbaa !2286
  %12 = load i8, i8* %11, align 1, !dbg !6137, !tbaa !2438, !ctir !89
  store i8 %12, i8* %wc, align 1, !dbg !6135, !tbaa !2438
  %13 = load i8, i8* %wc, align 1, !dbg !6138, !tbaa !2438
  %conv = sext i8 %13 to i32, !dbg !6138
  %cmp2 = icmp eq i32 %conv, 9, !dbg !6140
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !6141

if.then4:                                         ; preds = %while.body
  store i8 62, i8* %wc, align 1, !dbg !6142, !tbaa !2438
  br label %if.end8, !dbg !6143

if.else:                                          ; preds = %while.body
  %14 = load i8*, i8** %c, align 8, !dbg !6144, !tbaa !2286
  %15 = load i8*, i8** %ebuf, align 8, !dbg !6146, !tbaa !2286
  %cmp5 = icmp eq i8* %14, %15, !dbg !6147
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !6148

if.then7:                                         ; preds = %if.else
  store i8 10, i8* %wc, align 1, !dbg !6149, !tbaa !2438
  br label %if.end, !dbg !6150

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  %16 = load i8, i8* %wc, align 1, !dbg !6151, !tbaa !2438
  %conv9 = sext i8 %16 to i32, !dbg !6151
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6151, !tbaa !2286
  %call = call i32 @fputc_unlocked(i32 %conv9, %struct._IO_FILE* %17), !dbg !6151
  %cmp10 = icmp eq i32 %call, -1, !dbg !6153
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !6154

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i64 0, i64 0)) #12, !dbg !6155
  %18 = load i8*, i8** %output_file.addr, align 8, !dbg !6156, !tbaa !2286
  call void @sort_die(i8* %call13, i8* %18) #15, !dbg !6157
  unreachable, !dbg !6157

if.end14:                                         ; preds = %if.end8
  br label %while.cond, !dbg !6129, !llvm.loop !6158

while.end:                                        ; preds = %while.cond
  %19 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6160, !tbaa !2286
  call void @debug_line(%struct.line* %19), !dbg !6161
  br label %if.end23, !dbg !6162

if.else15:                                        ; preds = %land.lhs.true, %entry
  %20 = load i8, i8* @eolchar, align 1, !dbg !6163, !tbaa !2438
  %21 = load i8*, i8** %ebuf, align 8, !dbg !6165, !tbaa !2286
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !6165, !ctir !9
  store i8 %20, i8* %arrayidx, align 1, !dbg !6166, !tbaa !2438
  %22 = load i8*, i8** %buf, align 8, !dbg !6167, !tbaa !2286
  %23 = load i64, i64* %n_bytes, align 8, !dbg !6167, !tbaa !2447
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !6167, !tbaa !2286
  %call16 = call i64 @fwrite_unlocked(i8* %22, i64 1, i64 %23, %struct._IO_FILE* %24), !dbg !6167
  %25 = load i64, i64* %n_bytes, align 8, !dbg !6169, !tbaa !2447
  %cmp17 = icmp ne i64 %call16, %25, !dbg !6170
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !6171

if.then19:                                        ; preds = %if.else15
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.164, i64 0, i64 0)) #12, !dbg !6172
  %26 = load i8*, i8** %output_file.addr, align 8, !dbg !6173, !tbaa !2286
  call void @sort_die(i8* %call20, i8* %26) #15, !dbg !6174
  unreachable, !dbg !6174

if.end21:                                         ; preds = %if.else15
  %27 = load i8*, i8** %ebuf, align 8, !dbg !6175, !tbaa !2286
  %arrayidx22 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !6175, !ctir !9
  store i8 0, i8* %arrayidx22, align 1, !dbg !6176, !tbaa !2438
  br label %if.end23

if.end23:                                         ; preds = %if.end21, %while.end
  ret void, !dbg !6177
}

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_line(%struct.line* %line) #4 !dbg !6178 !ctir !518 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %key = alloca %struct.keyfield*, align 8, !ctir !423
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !6181, metadata !DIExpression()), !dbg !6182
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !6183, !tbaa !2286
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !6182, !tbaa !2286
  br label %do.body, !dbg !6184

do.body:                                          ; preds = %land.end, %entry
  %1 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6185, !tbaa !2286
  %2 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6186, !tbaa !2286
  call void @debug_key(%struct.line* %1, %struct.keyfield* %2), !dbg !6187
  br label %do.cond, !dbg !6187

do.cond:                                          ; preds = %do.body
  %3 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6188, !tbaa !2286
  %tobool = icmp ne %struct.keyfield* %3, null, !dbg !6188
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6189

land.rhs:                                         ; preds = %do.cond
  %4 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6190, !tbaa !2286
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 16, !dbg !6191, !ctir !424
  %5 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !6191, !tbaa !3203, !ctir !93
  store %struct.keyfield* %5, %struct.keyfield** %key, align 8, !dbg !6192, !tbaa !2286
  %tobool1 = icmp ne %struct.keyfield* %5, null, !dbg !6192
  br i1 %tobool1, label %lor.end5, label %lor.rhs, !dbg !6193

lor.rhs:                                          ; preds = %land.rhs
  %6 = load i8, i8* @unique, align 1, !dbg !6194, !tbaa !2430
  %tobool2 = trunc i8 %6 to i1, !dbg !6194
  br i1 %tobool2, label %lor.end, label %lor.rhs3, !dbg !6195

lor.rhs3:                                         ; preds = %lor.rhs
  %7 = load i8, i8* @stable, align 1, !dbg !6196, !tbaa !2430
  %tobool4 = trunc i8 %7 to i1, !dbg !6196
  br label %lor.end, !dbg !6195

lor.end:                                          ; preds = %lor.rhs3, %lor.rhs
  %8 = phi i1 [ true, %lor.rhs ], [ %tobool4, %lor.rhs3 ]
  %lnot = xor i1 %8, true, !dbg !6197
  br label %lor.end5, !dbg !6193

lor.end5:                                         ; preds = %lor.end, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %lnot, %lor.end ]
  br label %land.end

land.end:                                         ; preds = %lor.end5, %do.cond
  %10 = phi i1 [ false, %do.cond ], [ %9, %lor.end5 ], !dbg !6198
  br i1 %10, label %do.body, label %do.end, !dbg !6187, !llvm.loop !6199

do.end:                                           ; preds = %land.end
  ret void, !dbg !6201
}

declare dso_local i64 @fwrite_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_key(%struct.line* %line, %struct.keyfield* %key) #4 !dbg !6202 !ctir !520 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %key.addr = alloca %struct.keyfield*, align 8
  %text = alloca i8*, align 8, !ctir !9
  %beg = alloca i8*, align 8, !ctir !9
  %lim = alloca i8*, align 8, !ctir !9
  %saved = alloca i8, align 1, !ctir !10
  %tighter_lim = alloca i8*, align 8, !ctir !9
  %__x = alloca x86_fp80, align 16, !ctir !483
  %p = alloca i8*, align 8, !ctir !88
  %max_digit = alloca i8, align 1, !ctir !321
  %ch = alloca i8, align 1, !ctir !321
  %offset = alloca i64, align 8, !ctir !55
  %width = alloca i64, align 8, !ctir !55
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata i8** %text, metadata !6207, metadata !DIExpression()), !dbg !6208
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6209, !tbaa !2286
  %text1 = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6210, !ctir !448
  %1 = load i8*, i8** %text1, align 8, !dbg !6210, !tbaa !4488, !ctir !9
  store i8* %1, i8** %text, align 8, !dbg !6208, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %beg, metadata !6211, metadata !DIExpression()), !dbg !6212
  %2 = load i8*, i8** %text, align 8, !dbg !6213, !tbaa !2286
  store i8* %2, i8** %beg, align 8, !dbg !6212, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %lim, metadata !6214, metadata !DIExpression()), !dbg !6215
  %3 = load i8*, i8** %text, align 8, !dbg !6216, !tbaa !2286
  %4 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6217, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %4, i32 0, i32 1, !dbg !6218, !ctir !448
  %5 = load i64, i64* %length, align 8, !dbg !6218, !tbaa !4573, !ctir !55
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %5, !dbg !6219
  %add.ptr2 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !6220
  store i8* %add.ptr2, i8** %lim, align 8, !dbg !6215, !tbaa !2286
  %6 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6221, !tbaa !2286
  %tobool = icmp ne %struct.keyfield* %6, null, !dbg !6221
  br i1 %tobool, label %if.then, label %if.end60, !dbg !6223

if.then:                                          ; preds = %entry
  %7 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6224, !tbaa !2286
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 0, !dbg !6227, !ctir !424
  %8 = load i64, i64* %sword, align 8, !dbg !6227, !tbaa !2588, !ctir !55
  %cmp = icmp ne i64 %8, -1, !dbg !6228
  br i1 %cmp, label %if.then3, label %if.end, !dbg !6229

if.then3:                                         ; preds = %if.then
  %9 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6230, !tbaa !2286
  %10 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6231, !tbaa !2286
  %call = call i8* @begfield(%struct.line* %9, %struct.keyfield* %10), !dbg !6232
  store i8* %call, i8** %beg, align 8, !dbg !6233, !tbaa !2286
  br label %if.end, !dbg !6234

if.end:                                           ; preds = %if.then3, %if.then
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6235, !tbaa !2286
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 2, !dbg !6237, !ctir !424
  %12 = load i64, i64* %eword, align 8, !dbg !6237, !tbaa !2760, !ctir !55
  %cmp4 = icmp ne i64 %12, -1, !dbg !6238
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6239

if.then5:                                         ; preds = %if.end
  %13 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6240, !tbaa !2286
  %14 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6241, !tbaa !2286
  %call6 = call i8* @limfield(%struct.line* %13, %struct.keyfield* %14), !dbg !6242
  store i8* %call6, i8** %lim, align 8, !dbg !6243, !tbaa !2286
  br label %if.end7, !dbg !6244

if.end7:                                          ; preds = %if.then5, %if.end
  %15 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6245, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %15, i32 0, i32 6, !dbg !6247, !ctir !424
  %16 = load i8, i8* %skipsblanks, align 8, !dbg !6247, !tbaa !3153
  %tobool8 = trunc i8 %16 to i1, !dbg !6247, !ctir !103
  br i1 %tobool8, label %land.lhs.true, label %lor.lhs.false, !dbg !6248

land.lhs.true:                                    ; preds = %if.end7
  %17 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6249, !tbaa !2286
  %sword9 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 0, !dbg !6250, !ctir !424
  %18 = load i64, i64* %sword9, align 8, !dbg !6250, !tbaa !2588, !ctir !55
  %cmp10 = icmp eq i64 %18, -1, !dbg !6251
  br i1 %cmp10, label %if.then14, label %lor.lhs.false, !dbg !6252

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end7
  %19 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6253, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %19, i32 0, i32 12, !dbg !6254, !ctir !424
  %20 = load i8, i8* %month, align 2, !dbg !6254, !tbaa !3163
  %tobool11 = trunc i8 %20 to i1, !dbg !6254, !ctir !103
  br i1 %tobool11, label %if.then14, label %lor.lhs.false12, !dbg !6255

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %21 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6256, !tbaa !2286
  %call13 = call zeroext i1 @key_numeric(%struct.keyfield* %21), !dbg !6257
  br i1 %call13, label %if.then14, label %if.end59, !dbg !6258

if.then14:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %saved, metadata !6259, metadata !DIExpression()), !dbg !6261
  %22 = load i8*, i8** %lim, align 8, !dbg !6262, !tbaa !2286
  %23 = load i8, i8* %22, align 1, !dbg !6263, !tbaa !2438, !ctir !10
  store i8 %23, i8* %saved, align 1, !dbg !6261, !tbaa !2438
  %24 = load i8*, i8** %lim, align 8, !dbg !6264, !tbaa !2286
  store i8 0, i8* %24, align 1, !dbg !6265, !tbaa !2438, !ctir !10
  br label %while.cond, !dbg !6266

while.cond:                                       ; preds = %while.body, %if.then14
  %25 = load i8*, i8** %beg, align 8, !dbg !6267, !tbaa !2286
  %26 = load i8, i8* %25, align 1, !dbg !6268, !tbaa !2438, !ctir !10
  %call15 = call zeroext i8 @to_uchar(i8 signext %26), !dbg !6269
  %idxprom = zext i8 %call15 to i64, !dbg !6270
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6270, !ctir !322
  %27 = load i8, i8* %arrayidx, align 1, !dbg !6270, !tbaa !2430
  %tobool16 = trunc i8 %27 to i1, !dbg !6270
  br i1 %tobool16, label %while.body, label %while.end, !dbg !6266

while.body:                                       ; preds = %while.cond
  %28 = load i8*, i8** %beg, align 8, !dbg !6271, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6271
  store i8* %incdec.ptr, i8** %beg, align 8, !dbg !6271, !tbaa !2286
  br label %while.cond, !dbg !6266, !llvm.loop !6272

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %tighter_lim, metadata !6273, metadata !DIExpression()), !dbg !6274
  %29 = load i8*, i8** %beg, align 8, !dbg !6275, !tbaa !2286
  store i8* %29, i8** %tighter_lim, align 8, !dbg !6274, !tbaa !2286
  %30 = load i8*, i8** %lim, align 8, !dbg !6276, !tbaa !2286
  %31 = load i8*, i8** %beg, align 8, !dbg !6278, !tbaa !2286
  %cmp17 = icmp ult i8* %30, %31, !dbg !6279
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !6280

if.then18:                                        ; preds = %while.end
  %32 = load i8*, i8** %lim, align 8, !dbg !6281, !tbaa !2286
  store i8* %32, i8** %tighter_lim, align 8, !dbg !6282, !tbaa !2286
  br label %if.end58, !dbg !6283

if.else:                                          ; preds = %while.end
  %33 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6284, !tbaa !2286
  %month19 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %33, i32 0, i32 12, !dbg !6286, !ctir !424
  %34 = load i8, i8* %month19, align 2, !dbg !6286, !tbaa !3163
  %tobool20 = trunc i8 %34 to i1, !dbg !6286, !ctir !103
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !6287

if.then21:                                        ; preds = %if.else
  %35 = load i8*, i8** %beg, align 8, !dbg !6288, !tbaa !2286
  %call22 = call i32 @getmonth(i8* %35, i8** %tighter_lim), !dbg !6289
  br label %if.end57, !dbg !6289

if.else23:                                        ; preds = %if.else
  %36 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6290, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %36, i32 0, i32 10, !dbg !6292, !ctir !424
  %37 = load i8, i8* %general_numeric, align 4, !dbg !6292, !tbaa !3173
  %tobool24 = trunc i8 %37 to i1, !dbg !6292, !ctir !103
  br i1 %tobool24, label %if.then25, label %if.else27, !dbg !6293

if.then25:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata x86_fp80* %__x, metadata !6294, metadata !DIExpression()), !dbg !6296
  %38 = load i8*, i8** %beg, align 8, !dbg !6296, !tbaa !2286
  %call26 = call x86_fp80 @strtold(i8* %38, i8** %tighter_lim) #12, !dbg !6296
  store x86_fp80 %call26, x86_fp80* %__x, align 16, !dbg !6296, !tbaa !6297
  %39 = load x86_fp80, x86_fp80* %__x, align 16, !dbg !6296, !tbaa !6297
  br label %if.end56, !dbg !6299

if.else27:                                        ; preds = %if.else23
  %40 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6300, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %40, i32 0, i32 8, !dbg !6302, !ctir !424
  %41 = load i8, i8* %numeric, align 2, !dbg !6302, !tbaa !3168
  %tobool28 = trunc i8 %41 to i1, !dbg !6302, !ctir !103
  br i1 %tobool28, label %if.then31, label %lor.lhs.false29, !dbg !6303

lor.lhs.false29:                                  ; preds = %if.else27
  %42 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6304, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %42, i32 0, i32 11, !dbg !6305, !ctir !424
  %43 = load i8, i8* %human_numeric, align 1, !dbg !6305, !tbaa !3178
  %tobool30 = trunc i8 %43 to i1, !dbg !6305, !ctir !103
  br i1 %tobool30, label %if.then31, label %if.else54, !dbg !6306

if.then31:                                        ; preds = %lor.lhs.false29, %if.else27
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6307, metadata !DIExpression()), !dbg !6309
  %44 = load i8*, i8** %beg, align 8, !dbg !6310, !tbaa !2286
  %45 = load i8*, i8** %beg, align 8, !dbg !6311, !tbaa !2286
  %46 = load i8*, i8** %lim, align 8, !dbg !6312, !tbaa !2286
  %cmp32 = icmp ult i8* %45, %46, !dbg !6313
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !6314

land.rhs:                                         ; preds = %if.then31
  %47 = load i8*, i8** %beg, align 8, !dbg !6315, !tbaa !2286
  %48 = load i8, i8* %47, align 1, !dbg !6316, !tbaa !2438, !ctir !10
  %conv = sext i8 %48 to i32, !dbg !6316
  %cmp33 = icmp eq i32 %conv, 45, !dbg !6317
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then31
  %49 = phi i1 [ false, %if.then31 ], [ %cmp33, %land.rhs ], !dbg !6318
  %land.ext = zext i1 %49 to i32, !dbg !6314
  %idx.ext = sext i32 %land.ext to i64, !dbg !6319
  %add.ptr35 = getelementptr inbounds i8, i8* %44, i64 %idx.ext, !dbg !6319
  store i8* %add.ptr35, i8** %p, align 8, !dbg !6309, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %max_digit, metadata !6320, metadata !DIExpression()), !dbg !6321
  %call36 = call zeroext i8 @traverse_raw_number(i8** %p), !dbg !6322
  store i8 %call36, i8* %max_digit, align 1, !dbg !6321, !tbaa !2438
  %50 = load i8, i8* %max_digit, align 1, !dbg !6323, !tbaa !2438
  %conv37 = zext i8 %50 to i32, !dbg !6323
  %cmp38 = icmp sle i32 48, %conv37, !dbg !6325
  br i1 %cmp38, label %if.then40, label %if.end53, !dbg !6326

if.then40:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !6327, metadata !DIExpression()), !dbg !6329
  %51 = load i8*, i8** %p, align 8, !dbg !6330, !tbaa !2286
  %52 = load i8, i8* %51, align 1, !dbg !6331, !tbaa !2438, !ctir !89
  store i8 %52, i8* %ch, align 1, !dbg !6329, !tbaa !2438
  %53 = load i8*, i8** %p, align 8, !dbg !6332, !tbaa !2286
  %54 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6333, !tbaa !2286
  %human_numeric41 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %54, i32 0, i32 11, !dbg !6334, !ctir !424
  %55 = load i8, i8* %human_numeric41, align 1, !dbg !6334, !tbaa !3178
  %tobool42 = trunc i8 %55 to i1, !dbg !6334, !ctir !103
  br i1 %tobool42, label %land.rhs44, label %land.end49, !dbg !6335

land.rhs44:                                       ; preds = %if.then40
  %56 = load i8, i8* %ch, align 1, !dbg !6336, !tbaa !2438
  %idxprom45 = zext i8 %56 to i64, !dbg !6337
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [108 x i8], [148 x i8] }>* @unit_order to [256 x i8]*), i64 0, i64 %idxprom45, !dbg !6337, !ctir !486
  %57 = load i8, i8* %arrayidx46, align 1, !dbg !6337, !tbaa !2438
  %conv47 = sext i8 %57 to i32, !dbg !6337
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !6335
  br label %land.end49

land.end49:                                       ; preds = %land.rhs44, %if.then40
  %58 = phi i1 [ false, %if.then40 ], [ %tobool48, %land.rhs44 ], !dbg !6338
  %land.ext50 = zext i1 %58 to i32, !dbg !6335
  %idx.ext51 = sext i32 %land.ext50 to i64, !dbg !6339
  %add.ptr52 = getelementptr inbounds i8, i8* %53, i64 %idx.ext51, !dbg !6339
  store i8* %add.ptr52, i8** %tighter_lim, align 8, !dbg !6340, !tbaa !2286
  br label %if.end53, !dbg !6341

if.end53:                                         ; preds = %land.end49, %land.end
  br label %if.end55, !dbg !6342

if.else54:                                        ; preds = %lor.lhs.false29
  %59 = load i8*, i8** %lim, align 8, !dbg !6343, !tbaa !2286
  store i8* %59, i8** %tighter_lim, align 8, !dbg !6344, !tbaa !2286
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.end53
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then25
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then21
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then18
  %60 = load i8, i8* %saved, align 1, !dbg !6345, !tbaa !2438
  %61 = load i8*, i8** %lim, align 8, !dbg !6346, !tbaa !2286
  store i8 %60, i8* %61, align 1, !dbg !6347, !tbaa !2438, !ctir !10
  %62 = load i8*, i8** %tighter_lim, align 8, !dbg !6348, !tbaa !2286
  store i8* %62, i8** %lim, align 8, !dbg !6349, !tbaa !2286
  br label %if.end59, !dbg !6350

if.end59:                                         ; preds = %if.end58, %lor.lhs.false12
  br label %if.end60, !dbg !6351

if.end60:                                         ; preds = %if.end59, %entry
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !6352, metadata !DIExpression()), !dbg !6353
  %63 = load i8*, i8** %text, align 8, !dbg !6354, !tbaa !2286
  %64 = load i8*, i8** %beg, align 8, !dbg !6355, !tbaa !2286
  %call61 = call i64 @debug_width(i8* %63, i8* %64), !dbg !6356
  store i64 %call61, i64* %offset, align 8, !dbg !6353, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6357, metadata !DIExpression()), !dbg !6358
  %65 = load i8*, i8** %beg, align 8, !dbg !6359, !tbaa !2286
  %66 = load i8*, i8** %lim, align 8, !dbg !6360, !tbaa !2286
  %call62 = call i64 @debug_width(i8* %65, i8* %66), !dbg !6361
  store i64 %call62, i64* %width, align 8, !dbg !6358, !tbaa !2447
  %67 = load i64, i64* %offset, align 8, !dbg !6362, !tbaa !2447
  %68 = load i64, i64* %width, align 8, !dbg !6363, !tbaa !2447
  call void @mark_key(i64 %67, i64 %68), !dbg !6364
  ret void, !dbg !6365
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @begfield(%struct.line* %line, %struct.keyfield* %key) #4 !dbg !6366 !ctir !470 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %key.addr = alloca %struct.keyfield*, align 8
  %ptr = alloca i8*, align 8, !ctir !9
  %lim = alloca i8*, align 8, !ctir !9
  %sword = alloca i64, align 8, !ctir !55
  %schar = alloca i64, align 8, !ctir !55
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6367, metadata !DIExpression()), !dbg !6368
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6369, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6371, metadata !DIExpression()), !dbg !6372
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6373, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6374, !ctir !448
  %1 = load i8*, i8** %text, align 8, !dbg !6374, !tbaa !4488, !ctir !9
  store i8* %1, i8** %ptr, align 8, !dbg !6372, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %lim, metadata !6375, metadata !DIExpression()), !dbg !6376
  %2 = load i8*, i8** %ptr, align 8, !dbg !6377, !tbaa !2286
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6378, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 1, !dbg !6379, !ctir !448
  %4 = load i64, i64* %length, align 8, !dbg !6379, !tbaa !4573, !ctir !55
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4, !dbg !6380
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !6381
  store i8* %add.ptr1, i8** %lim, align 8, !dbg !6376, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %sword, metadata !6382, metadata !DIExpression()), !dbg !6383
  %5 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6384, !tbaa !2286
  %sword2 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 0, !dbg !6385, !ctir !424
  %6 = load i64, i64* %sword2, align 8, !dbg !6385, !tbaa !2588, !ctir !55
  store i64 %6, i64* %sword, align 8, !dbg !6383, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %schar, metadata !6386, metadata !DIExpression()), !dbg !6387
  %7 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6388, !tbaa !2286
  %schar3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 1, !dbg !6389, !ctir !424
  %8 = load i64, i64* %schar3, align 8, !dbg !6389, !tbaa !2707, !ctir !55
  store i64 %8, i64* %schar, align 8, !dbg !6387, !tbaa !2447
  %9 = load i32, i32* @tab, align 4, !dbg !6390, !tbaa !2273
  %cmp = icmp ne i32 %9, 128, !dbg !6392
  br i1 %cmp, label %if.then, label %if.else, !dbg !6393

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !6394

while.cond:                                       ; preds = %if.end, %if.then
  %10 = load i8*, i8** %ptr, align 8, !dbg !6395, !tbaa !2286
  %11 = load i8*, i8** %lim, align 8, !dbg !6396, !tbaa !2286
  %cmp4 = icmp ult i8* %10, %11, !dbg !6397
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !6398

land.rhs:                                         ; preds = %while.cond
  %12 = load i64, i64* %sword, align 8, !dbg !6399, !tbaa !2447
  %dec = add i64 %12, -1, !dbg !6399
  store i64 %dec, i64* %sword, align 8, !dbg !6399, !tbaa !2447
  %tobool = icmp ne i64 %12, 0, !dbg !6398
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !6400
  br i1 %13, label %while.body, label %while.end16, !dbg !6394

while.body:                                       ; preds = %land.end
  br label %while.cond5, !dbg !6401

while.cond5:                                      ; preds = %while.body11, %while.body
  %14 = load i8*, i8** %ptr, align 8, !dbg !6403, !tbaa !2286
  %15 = load i8*, i8** %lim, align 8, !dbg !6404, !tbaa !2286
  %cmp6 = icmp ult i8* %14, %15, !dbg !6405
  br i1 %cmp6, label %land.rhs7, label %land.end10, !dbg !6406

land.rhs7:                                        ; preds = %while.cond5
  %16 = load i8*, i8** %ptr, align 8, !dbg !6407, !tbaa !2286
  %17 = load i8, i8* %16, align 1, !dbg !6408, !tbaa !2438, !ctir !10
  %conv = sext i8 %17 to i32, !dbg !6408
  %18 = load i32, i32* @tab, align 4, !dbg !6409, !tbaa !2273
  %cmp8 = icmp ne i32 %conv, %18, !dbg !6410
  br label %land.end10

land.end10:                                       ; preds = %land.rhs7, %while.cond5
  %19 = phi i1 [ false, %while.cond5 ], [ %cmp8, %land.rhs7 ], !dbg !6411
  br i1 %19, label %while.body11, label %while.end, !dbg !6401

while.body11:                                     ; preds = %land.end10
  %20 = load i8*, i8** %ptr, align 8, !dbg !6412, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !6412
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !6412, !tbaa !2286
  br label %while.cond5, !dbg !6401, !llvm.loop !6413

while.end:                                        ; preds = %land.end10
  %21 = load i8*, i8** %ptr, align 8, !dbg !6415, !tbaa !2286
  %22 = load i8*, i8** %lim, align 8, !dbg !6417, !tbaa !2286
  %cmp12 = icmp ult i8* %21, %22, !dbg !6418
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !6419

if.then14:                                        ; preds = %while.end
  %23 = load i8*, i8** %ptr, align 8, !dbg !6420, !tbaa !2286
  %incdec.ptr15 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6420
  store i8* %incdec.ptr15, i8** %ptr, align 8, !dbg !6420, !tbaa !2286
  br label %if.end, !dbg !6420

if.end:                                           ; preds = %if.then14, %while.end
  br label %while.cond, !dbg !6394, !llvm.loop !6421

while.end16:                                      ; preds = %land.end
  br label %if.end48, !dbg !6394

if.else:                                          ; preds = %entry
  br label %while.cond17, !dbg !6423

while.cond17:                                     ; preds = %while.end46, %if.else
  %24 = load i8*, i8** %ptr, align 8, !dbg !6424, !tbaa !2286
  %25 = load i8*, i8** %lim, align 8, !dbg !6425, !tbaa !2286
  %cmp18 = icmp ult i8* %24, %25, !dbg !6426
  br i1 %cmp18, label %land.rhs20, label %land.end23, !dbg !6427

land.rhs20:                                       ; preds = %while.cond17
  %26 = load i64, i64* %sword, align 8, !dbg !6428, !tbaa !2447
  %dec21 = add i64 %26, -1, !dbg !6428
  store i64 %dec21, i64* %sword, align 8, !dbg !6428, !tbaa !2447
  %tobool22 = icmp ne i64 %26, 0, !dbg !6427
  br label %land.end23

land.end23:                                       ; preds = %land.rhs20, %while.cond17
  %27 = phi i1 [ false, %while.cond17 ], [ %tobool22, %land.rhs20 ], !dbg !6400
  br i1 %27, label %while.body24, label %while.end47, !dbg !6423

while.body24:                                     ; preds = %land.end23
  br label %while.cond25, !dbg !6429

while.cond25:                                     ; preds = %while.body32, %while.body24
  %28 = load i8*, i8** %ptr, align 8, !dbg !6431, !tbaa !2286
  %29 = load i8*, i8** %lim, align 8, !dbg !6432, !tbaa !2286
  %cmp26 = icmp ult i8* %28, %29, !dbg !6433
  br i1 %cmp26, label %land.rhs28, label %land.end31, !dbg !6434

land.rhs28:                                       ; preds = %while.cond25
  %30 = load i8*, i8** %ptr, align 8, !dbg !6435, !tbaa !2286
  %31 = load i8, i8* %30, align 1, !dbg !6436, !tbaa !2438, !ctir !10
  %call = call zeroext i8 @to_uchar(i8 signext %31), !dbg !6437
  %idxprom = zext i8 %call to i64, !dbg !6438
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6438, !ctir !322
  %32 = load i8, i8* %arrayidx, align 1, !dbg !6438, !tbaa !2430
  %tobool29 = trunc i8 %32 to i1, !dbg !6438
  br label %land.end31

land.end31:                                       ; preds = %land.rhs28, %while.cond25
  %33 = phi i1 [ false, %while.cond25 ], [ %tobool29, %land.rhs28 ], !dbg !6439
  br i1 %33, label %while.body32, label %while.end34, !dbg !6429

while.body32:                                     ; preds = %land.end31
  %34 = load i8*, i8** %ptr, align 8, !dbg !6440, !tbaa !2286
  %incdec.ptr33 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !6440
  store i8* %incdec.ptr33, i8** %ptr, align 8, !dbg !6440, !tbaa !2286
  br label %while.cond25, !dbg !6429, !llvm.loop !6441

while.end34:                                      ; preds = %land.end31
  br label %while.cond35, !dbg !6443

while.cond35:                                     ; preds = %while.body44, %while.end34
  %35 = load i8*, i8** %ptr, align 8, !dbg !6444, !tbaa !2286
  %36 = load i8*, i8** %lim, align 8, !dbg !6445, !tbaa !2286
  %cmp36 = icmp ult i8* %35, %36, !dbg !6446
  br i1 %cmp36, label %land.rhs38, label %land.end43, !dbg !6447

land.rhs38:                                       ; preds = %while.cond35
  %37 = load i8*, i8** %ptr, align 8, !dbg !6448, !tbaa !2286
  %38 = load i8, i8* %37, align 1, !dbg !6449, !tbaa !2438, !ctir !10
  %call39 = call zeroext i8 @to_uchar(i8 signext %38), !dbg !6450
  %idxprom40 = zext i8 %call39 to i64, !dbg !6451
  %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom40, !dbg !6451, !ctir !322
  %39 = load i8, i8* %arrayidx41, align 1, !dbg !6451, !tbaa !2430
  %tobool42 = trunc i8 %39 to i1, !dbg !6451
  %lnot = xor i1 %tobool42, true, !dbg !6452
  br label %land.end43

land.end43:                                       ; preds = %land.rhs38, %while.cond35
  %40 = phi i1 [ false, %while.cond35 ], [ %lnot, %land.rhs38 ], !dbg !6439
  br i1 %40, label %while.body44, label %while.end46, !dbg !6443

while.body44:                                     ; preds = %land.end43
  %41 = load i8*, i8** %ptr, align 8, !dbg !6453, !tbaa !2286
  %incdec.ptr45 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !6453
  store i8* %incdec.ptr45, i8** %ptr, align 8, !dbg !6453, !tbaa !2286
  br label %while.cond35, !dbg !6443, !llvm.loop !6454

while.end46:                                      ; preds = %land.end43
  br label %while.cond17, !dbg !6423, !llvm.loop !6456

while.end47:                                      ; preds = %land.end23
  br label %if.end48

if.end48:                                         ; preds = %while.end47, %while.end16
  %42 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6458, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %42, i32 0, i32 6, !dbg !6460, !ctir !424
  %43 = load i8, i8* %skipsblanks, align 8, !dbg !6460, !tbaa !3153
  %tobool49 = trunc i8 %43 to i1, !dbg !6460, !ctir !103
  br i1 %tobool49, label %if.then50, label %if.end64, !dbg !6461

if.then50:                                        ; preds = %if.end48
  br label %while.cond51, !dbg !6462

while.cond51:                                     ; preds = %while.body61, %if.then50
  %44 = load i8*, i8** %ptr, align 8, !dbg !6463, !tbaa !2286
  %45 = load i8*, i8** %lim, align 8, !dbg !6464, !tbaa !2286
  %cmp52 = icmp ult i8* %44, %45, !dbg !6465
  br i1 %cmp52, label %land.rhs54, label %land.end60, !dbg !6466

land.rhs54:                                       ; preds = %while.cond51
  %46 = load i8*, i8** %ptr, align 8, !dbg !6467, !tbaa !2286
  %47 = load i8, i8* %46, align 1, !dbg !6468, !tbaa !2438, !ctir !10
  %call55 = call zeroext i8 @to_uchar(i8 signext %47), !dbg !6469
  %idxprom56 = zext i8 %call55 to i64, !dbg !6470
  %arrayidx57 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom56, !dbg !6470, !ctir !322
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !6470, !tbaa !2430
  %tobool58 = trunc i8 %48 to i1, !dbg !6470
  br label %land.end60

land.end60:                                       ; preds = %land.rhs54, %while.cond51
  %49 = phi i1 [ false, %while.cond51 ], [ %tobool58, %land.rhs54 ], !dbg !6471
  br i1 %49, label %while.body61, label %while.end63, !dbg !6462

while.body61:                                     ; preds = %land.end60
  %50 = load i8*, i8** %ptr, align 8, !dbg !6472, !tbaa !2286
  %incdec.ptr62 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !6472
  store i8* %incdec.ptr62, i8** %ptr, align 8, !dbg !6472, !tbaa !2286
  br label %while.cond51, !dbg !6462, !llvm.loop !6473

while.end63:                                      ; preds = %land.end60
  br label %if.end64, !dbg !6462

if.end64:                                         ; preds = %while.end63, %if.end48
  %51 = load i8*, i8** %lim, align 8, !dbg !6475, !tbaa !2286
  %52 = load i8*, i8** %ptr, align 8, !dbg !6475, !tbaa !2286
  %53 = load i64, i64* %schar, align 8, !dbg !6475, !tbaa !2447
  %add.ptr65 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !6475
  %cmp66 = icmp ult i8* %51, %add.ptr65, !dbg !6475
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !6475

cond.true:                                        ; preds = %if.end64
  %54 = load i8*, i8** %lim, align 8, !dbg !6475, !tbaa !2286
  br label %cond.end, !dbg !6475

cond.false:                                       ; preds = %if.end64
  %55 = load i8*, i8** %ptr, align 8, !dbg !6475, !tbaa !2286
  %56 = load i64, i64* %schar, align 8, !dbg !6475, !tbaa !2447
  %add.ptr68 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !6475
  br label %cond.end, !dbg !6475

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %54, %cond.true ], [ %add.ptr68, %cond.false ], !dbg !6475
  store i8* %cond, i8** %ptr, align 8, !dbg !6476, !tbaa !2286
  %57 = load i8*, i8** %ptr, align 8, !dbg !6477, !tbaa !2286
  ret i8* %57, !dbg !6478
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @limfield(%struct.line* %line, %struct.keyfield* %key) #4 !dbg !6479 !ctir !470 {
entry:
  %line.addr = alloca %struct.line*, align 8
  %key.addr = alloca %struct.keyfield*, align 8
  %ptr = alloca i8*, align 8, !ctir !9
  %lim = alloca i8*, align 8, !ctir !9
  %eword = alloca i64, align 8, !ctir !55
  %echar = alloca i64, align 8, !ctir !55
  store %struct.line* %line, %struct.line** %line.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %line.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6484, metadata !DIExpression()), !dbg !6485
  %0 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6486, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %0, i32 0, i32 0, !dbg !6487, !ctir !448
  %1 = load i8*, i8** %text, align 8, !dbg !6487, !tbaa !4488, !ctir !9
  store i8* %1, i8** %ptr, align 8, !dbg !6485, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %lim, metadata !6488, metadata !DIExpression()), !dbg !6489
  %2 = load i8*, i8** %ptr, align 8, !dbg !6490, !tbaa !2286
  %3 = load %struct.line*, %struct.line** %line.addr, align 8, !dbg !6491, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 1, !dbg !6492, !ctir !448
  %4 = load i64, i64* %length, align 8, !dbg !6492, !tbaa !4573, !ctir !55
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4, !dbg !6493
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !6494
  store i8* %add.ptr1, i8** %lim, align 8, !dbg !6489, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %eword, metadata !6495, metadata !DIExpression()), !dbg !6496
  %5 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6497, !tbaa !2286
  %eword2 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 2, !dbg !6498, !ctir !424
  %6 = load i64, i64* %eword2, align 8, !dbg !6498, !tbaa !2760, !ctir !55
  store i64 %6, i64* %eword, align 8, !dbg !6496, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %echar, metadata !6499, metadata !DIExpression()), !dbg !6500
  %7 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6501, !tbaa !2286
  %echar3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %7, i32 0, i32 3, !dbg !6502, !ctir !424
  %8 = load i64, i64* %echar3, align 8, !dbg !6502, !tbaa !2756, !ctir !55
  store i64 %8, i64* %echar, align 8, !dbg !6500, !tbaa !2447
  %9 = load i64, i64* %echar, align 8, !dbg !6503, !tbaa !2447
  %cmp = icmp eq i64 %9, 0, !dbg !6505
  br i1 %cmp, label %if.then, label %if.end, !dbg !6506

if.then:                                          ; preds = %entry
  %10 = load i64, i64* %eword, align 8, !dbg !6507, !tbaa !2447
  %inc = add i64 %10, 1, !dbg !6507
  store i64 %inc, i64* %eword, align 8, !dbg !6507, !tbaa !2447
  br label %if.end, !dbg !6508

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* @tab, align 4, !dbg !6509, !tbaa !2273
  %cmp4 = icmp ne i32 %11, 128, !dbg !6511
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !6512

if.then5:                                         ; preds = %if.end
  br label %while.cond, !dbg !6513

while.cond:                                       ; preds = %if.end20, %if.then5
  %12 = load i8*, i8** %ptr, align 8, !dbg !6514, !tbaa !2286
  %13 = load i8*, i8** %lim, align 8, !dbg !6515, !tbaa !2286
  %cmp6 = icmp ult i8* %12, %13, !dbg !6516
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !6517

land.rhs:                                         ; preds = %while.cond
  %14 = load i64, i64* %eword, align 8, !dbg !6518, !tbaa !2447
  %dec = add i64 %14, -1, !dbg !6518
  store i64 %dec, i64* %eword, align 8, !dbg !6518, !tbaa !2447
  %tobool = icmp ne i64 %14, 0, !dbg !6517
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %15 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !6519
  br i1 %15, label %while.body, label %while.end21, !dbg !6513

while.body:                                       ; preds = %land.end
  br label %while.cond7, !dbg !6520

while.cond7:                                      ; preds = %while.body13, %while.body
  %16 = load i8*, i8** %ptr, align 8, !dbg !6522, !tbaa !2286
  %17 = load i8*, i8** %lim, align 8, !dbg !6523, !tbaa !2286
  %cmp8 = icmp ult i8* %16, %17, !dbg !6524
  br i1 %cmp8, label %land.rhs9, label %land.end12, !dbg !6525

land.rhs9:                                        ; preds = %while.cond7
  %18 = load i8*, i8** %ptr, align 8, !dbg !6526, !tbaa !2286
  %19 = load i8, i8* %18, align 1, !dbg !6527, !tbaa !2438, !ctir !10
  %conv = sext i8 %19 to i32, !dbg !6527
  %20 = load i32, i32* @tab, align 4, !dbg !6528, !tbaa !2273
  %cmp10 = icmp ne i32 %conv, %20, !dbg !6529
  br label %land.end12

land.end12:                                       ; preds = %land.rhs9, %while.cond7
  %21 = phi i1 [ false, %while.cond7 ], [ %cmp10, %land.rhs9 ], !dbg !6530
  br i1 %21, label %while.body13, label %while.end, !dbg !6520

while.body13:                                     ; preds = %land.end12
  %22 = load i8*, i8** %ptr, align 8, !dbg !6531, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !6531
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !6531, !tbaa !2286
  br label %while.cond7, !dbg !6520, !llvm.loop !6532

while.end:                                        ; preds = %land.end12
  %23 = load i8*, i8** %ptr, align 8, !dbg !6534, !tbaa !2286
  %24 = load i8*, i8** %lim, align 8, !dbg !6536, !tbaa !2286
  %cmp14 = icmp ult i8* %23, %24, !dbg !6537
  br i1 %cmp14, label %land.lhs.true, label %if.end20, !dbg !6538

land.lhs.true:                                    ; preds = %while.end
  %25 = load i64, i64* %eword, align 8, !dbg !6539, !tbaa !2447
  %tobool16 = icmp ne i64 %25, 0, !dbg !6539
  br i1 %tobool16, label %if.then18, label %lor.lhs.false, !dbg !6540

lor.lhs.false:                                    ; preds = %land.lhs.true
  %26 = load i64, i64* %echar, align 8, !dbg !6541, !tbaa !2447
  %tobool17 = icmp ne i64 %26, 0, !dbg !6541
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6542

if.then18:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i8*, i8** %ptr, align 8, !dbg !6543, !tbaa !2286
  %incdec.ptr19 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !6543
  store i8* %incdec.ptr19, i8** %ptr, align 8, !dbg !6543, !tbaa !2286
  br label %if.end20, !dbg !6543

if.end20:                                         ; preds = %if.then18, %lor.lhs.false, %while.end
  br label %while.cond, !dbg !6513, !llvm.loop !6544

while.end21:                                      ; preds = %land.end
  br label %if.end53, !dbg !6513

if.else:                                          ; preds = %if.end
  br label %while.cond22, !dbg !6546

while.cond22:                                     ; preds = %while.end51, %if.else
  %28 = load i8*, i8** %ptr, align 8, !dbg !6547, !tbaa !2286
  %29 = load i8*, i8** %lim, align 8, !dbg !6548, !tbaa !2286
  %cmp23 = icmp ult i8* %28, %29, !dbg !6549
  br i1 %cmp23, label %land.rhs25, label %land.end28, !dbg !6550

land.rhs25:                                       ; preds = %while.cond22
  %30 = load i64, i64* %eword, align 8, !dbg !6551, !tbaa !2447
  %dec26 = add i64 %30, -1, !dbg !6551
  store i64 %dec26, i64* %eword, align 8, !dbg !6551, !tbaa !2447
  %tobool27 = icmp ne i64 %30, 0, !dbg !6550
  br label %land.end28

land.end28:                                       ; preds = %land.rhs25, %while.cond22
  %31 = phi i1 [ false, %while.cond22 ], [ %tobool27, %land.rhs25 ], !dbg !6519
  br i1 %31, label %while.body29, label %while.end52, !dbg !6546

while.body29:                                     ; preds = %land.end28
  br label %while.cond30, !dbg !6552

while.cond30:                                     ; preds = %while.body37, %while.body29
  %32 = load i8*, i8** %ptr, align 8, !dbg !6554, !tbaa !2286
  %33 = load i8*, i8** %lim, align 8, !dbg !6555, !tbaa !2286
  %cmp31 = icmp ult i8* %32, %33, !dbg !6556
  br i1 %cmp31, label %land.rhs33, label %land.end36, !dbg !6557

land.rhs33:                                       ; preds = %while.cond30
  %34 = load i8*, i8** %ptr, align 8, !dbg !6558, !tbaa !2286
  %35 = load i8, i8* %34, align 1, !dbg !6559, !tbaa !2438, !ctir !10
  %call = call zeroext i8 @to_uchar(i8 signext %35), !dbg !6560
  %idxprom = zext i8 %call to i64, !dbg !6561
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6561, !ctir !322
  %36 = load i8, i8* %arrayidx, align 1, !dbg !6561, !tbaa !2430
  %tobool34 = trunc i8 %36 to i1, !dbg !6561
  br label %land.end36

land.end36:                                       ; preds = %land.rhs33, %while.cond30
  %37 = phi i1 [ false, %while.cond30 ], [ %tobool34, %land.rhs33 ], !dbg !6562
  br i1 %37, label %while.body37, label %while.end39, !dbg !6552

while.body37:                                     ; preds = %land.end36
  %38 = load i8*, i8** %ptr, align 8, !dbg !6563, !tbaa !2286
  %incdec.ptr38 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !6563
  store i8* %incdec.ptr38, i8** %ptr, align 8, !dbg !6563, !tbaa !2286
  br label %while.cond30, !dbg !6552, !llvm.loop !6564

while.end39:                                      ; preds = %land.end36
  br label %while.cond40, !dbg !6566

while.cond40:                                     ; preds = %while.body49, %while.end39
  %39 = load i8*, i8** %ptr, align 8, !dbg !6567, !tbaa !2286
  %40 = load i8*, i8** %lim, align 8, !dbg !6568, !tbaa !2286
  %cmp41 = icmp ult i8* %39, %40, !dbg !6569
  br i1 %cmp41, label %land.rhs43, label %land.end48, !dbg !6570

land.rhs43:                                       ; preds = %while.cond40
  %41 = load i8*, i8** %ptr, align 8, !dbg !6571, !tbaa !2286
  %42 = load i8, i8* %41, align 1, !dbg !6572, !tbaa !2438, !ctir !10
  %call44 = call zeroext i8 @to_uchar(i8 signext %42), !dbg !6573
  %idxprom45 = zext i8 %call44 to i64, !dbg !6574
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom45, !dbg !6574, !ctir !322
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !6574, !tbaa !2430
  %tobool47 = trunc i8 %43 to i1, !dbg !6574
  %lnot = xor i1 %tobool47, true, !dbg !6575
  br label %land.end48

land.end48:                                       ; preds = %land.rhs43, %while.cond40
  %44 = phi i1 [ false, %while.cond40 ], [ %lnot, %land.rhs43 ], !dbg !6562
  br i1 %44, label %while.body49, label %while.end51, !dbg !6566

while.body49:                                     ; preds = %land.end48
  %45 = load i8*, i8** %ptr, align 8, !dbg !6576, !tbaa !2286
  %incdec.ptr50 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !6576
  store i8* %incdec.ptr50, i8** %ptr, align 8, !dbg !6576, !tbaa !2286
  br label %while.cond40, !dbg !6566, !llvm.loop !6577

while.end51:                                      ; preds = %land.end48
  br label %while.cond22, !dbg !6546, !llvm.loop !6579

while.end52:                                      ; preds = %land.end28
  br label %if.end53

if.end53:                                         ; preds = %while.end52, %while.end21
  %46 = load i64, i64* %echar, align 8, !dbg !6581, !tbaa !2447
  %cmp54 = icmp ne i64 %46, 0, !dbg !6583
  br i1 %cmp54, label %if.then56, label %if.end77, !dbg !6584

if.then56:                                        ; preds = %if.end53
  %47 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6585, !tbaa !2286
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %47, i32 0, i32 7, !dbg !6588, !ctir !424
  %48 = load i8, i8* %skipeblanks, align 1, !dbg !6588, !tbaa !3158
  %tobool57 = trunc i8 %48 to i1, !dbg !6588, !ctir !103
  br i1 %tobool57, label %if.then58, label %if.end72, !dbg !6589

if.then58:                                        ; preds = %if.then56
  br label %while.cond59, !dbg !6590

while.cond59:                                     ; preds = %while.body69, %if.then58
  %49 = load i8*, i8** %ptr, align 8, !dbg !6591, !tbaa !2286
  %50 = load i8*, i8** %lim, align 8, !dbg !6592, !tbaa !2286
  %cmp60 = icmp ult i8* %49, %50, !dbg !6593
  br i1 %cmp60, label %land.rhs62, label %land.end68, !dbg !6594

land.rhs62:                                       ; preds = %while.cond59
  %51 = load i8*, i8** %ptr, align 8, !dbg !6595, !tbaa !2286
  %52 = load i8, i8* %51, align 1, !dbg !6596, !tbaa !2438, !ctir !10
  %call63 = call zeroext i8 @to_uchar(i8 signext %52), !dbg !6597
  %idxprom64 = zext i8 %call63 to i64, !dbg !6598
  %arrayidx65 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom64, !dbg !6598, !ctir !322
  %53 = load i8, i8* %arrayidx65, align 1, !dbg !6598, !tbaa !2430
  %tobool66 = trunc i8 %53 to i1, !dbg !6598
  br label %land.end68

land.end68:                                       ; preds = %land.rhs62, %while.cond59
  %54 = phi i1 [ false, %while.cond59 ], [ %tobool66, %land.rhs62 ], !dbg !6599
  br i1 %54, label %while.body69, label %while.end71, !dbg !6590

while.body69:                                     ; preds = %land.end68
  %55 = load i8*, i8** %ptr, align 8, !dbg !6600, !tbaa !2286
  %incdec.ptr70 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !6600
  store i8* %incdec.ptr70, i8** %ptr, align 8, !dbg !6600, !tbaa !2286
  br label %while.cond59, !dbg !6590, !llvm.loop !6601

while.end71:                                      ; preds = %land.end68
  br label %if.end72, !dbg !6590

if.end72:                                         ; preds = %while.end71, %if.then56
  %56 = load i8*, i8** %lim, align 8, !dbg !6603, !tbaa !2286
  %57 = load i8*, i8** %ptr, align 8, !dbg !6603, !tbaa !2286
  %58 = load i64, i64* %echar, align 8, !dbg !6603, !tbaa !2447
  %add.ptr73 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !6603
  %cmp74 = icmp ult i8* %56, %add.ptr73, !dbg !6603
  br i1 %cmp74, label %cond.true, label %cond.false, !dbg !6603

cond.true:                                        ; preds = %if.end72
  %59 = load i8*, i8** %lim, align 8, !dbg !6603, !tbaa !2286
  br label %cond.end, !dbg !6603

cond.false:                                       ; preds = %if.end72
  %60 = load i8*, i8** %ptr, align 8, !dbg !6603, !tbaa !2286
  %61 = load i64, i64* %echar, align 8, !dbg !6603, !tbaa !2447
  %add.ptr76 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !6603
  br label %cond.end, !dbg !6603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %59, %cond.true ], [ %add.ptr76, %cond.false ], !dbg !6603
  store i8* %cond, i8** %ptr, align 8, !dbg !6604, !tbaa !2286
  br label %if.end77, !dbg !6605

if.end77:                                         ; preds = %cond.end, %if.end53
  %62 = load i8*, i8** %ptr, align 8, !dbg !6606, !tbaa !2286
  ret i8* %62, !dbg !6607
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @key_numeric(%struct.keyfield* %key) #4 !dbg !6608 !ctir !421 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !6609, metadata !DIExpression()), !dbg !6610
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6611, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %0, i32 0, i32 8, !dbg !6612, !ctir !424
  %1 = load i8, i8* %numeric, align 2, !dbg !6612, !tbaa !3168
  %tobool = trunc i8 %1 to i1, !dbg !6612, !ctir !103
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !6613

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6614, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 10, !dbg !6615, !ctir !424
  %3 = load i8, i8* %general_numeric, align 4, !dbg !6615, !tbaa !3173
  %tobool1 = trunc i8 %3 to i1, !dbg !6615, !ctir !103
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !6616

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !6617, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %4, i32 0, i32 11, !dbg !6618, !ctir !424
  %5 = load i8, i8* %human_numeric, align 1, !dbg !6618, !tbaa !3178
  %tobool2 = trunc i8 %5 to i1, !dbg !6618, !ctir !103
  br label %lor.end, !dbg !6616

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool2, %lor.rhs ]
  ret i1 %6, !dbg !6619
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getmonth(i8* %month, i8** %ea) #4 !dbg !6620 !ctir !489 {
entry:
  %retval = alloca i32, align 4
  %month.addr = alloca i8*, align 8
  %ea.addr = alloca i8**, align 8
  %lo = alloca i64, align 8, !ctir !55
  %hi = alloca i64, align 8, !ctir !55
  %ix = alloca i64, align 8, !ctir !55
  %m = alloca i8*, align 8, !ctir !88
  %n = alloca i8*, align 8, !ctir !88
  store i8* %month, i8** %month.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %month.addr, metadata !6621, metadata !DIExpression()), !dbg !6622
  store i8** %ea, i8*** %ea.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %ea.addr, metadata !6623, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !6625, metadata !DIExpression()), !dbg !6626
  store i64 0, i64* %lo, align 8, !dbg !6626, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !6627, metadata !DIExpression()), !dbg !6628
  store i64 12, i64* %hi, align 8, !dbg !6628, !tbaa !2447
  br label %while.cond, !dbg !6629

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %month.addr, align 8, !dbg !6630, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !6631, !tbaa !2438, !ctir !89
  %call = call zeroext i8 @to_uchar(i8 signext %1), !dbg !6632
  %idxprom = zext i8 %call to i64, !dbg !6633
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !6633, !ctir !322
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6633, !tbaa !2430
  %tobool = trunc i8 %2 to i1, !dbg !6633
  br i1 %tobool, label %while.body, label %while.end, !dbg !6629

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %month.addr, align 8, !dbg !6634, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !6634
  store i8* %incdec.ptr, i8** %month.addr, align 8, !dbg !6634, !tbaa !2286
  br label %while.cond, !dbg !6629, !llvm.loop !6635

while.end:                                        ; preds = %while.cond
  br label %do.body, !dbg !6636

do.body:                                          ; preds = %do.cond, %while.end
  call void @llvm.dbg.declare(metadata i64* %ix, metadata !6637, metadata !DIExpression()), !dbg !6639
  %4 = load i64, i64* %lo, align 8, !dbg !6640, !tbaa !2447
  %5 = load i64, i64* %hi, align 8, !dbg !6641, !tbaa !2447
  %add = add i64 %4, %5, !dbg !6642
  %div = udiv i64 %add, 2, !dbg !6643
  store i64 %div, i64* %ix, align 8, !dbg !6639, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %m, metadata !6644, metadata !DIExpression()), !dbg !6645
  %6 = load i8*, i8** %month.addr, align 8, !dbg !6646, !tbaa !2286
  store i8* %6, i8** %m, align 8, !dbg !6645, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %n, metadata !6647, metadata !DIExpression()), !dbg !6648
  %7 = load i64, i64* %ix, align 8, !dbg !6649, !tbaa !2447
  %arrayidx1 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %7, !dbg !6650, !ctir !328
  %name = getelementptr inbounds %struct.month, %struct.month* %arrayidx1, i32 0, i32 0, !dbg !6651, !ctir !329
  %8 = load i8*, i8** %name, align 16, !dbg !6651, !tbaa !3486, !ctir !88
  store i8* %8, i8** %n, align 8, !dbg !6648, !tbaa !2286
  br label %for.cond, !dbg !6652

for.cond:                                         ; preds = %for.inc, %do.body
  %9 = load i8*, i8** %n, align 8, !dbg !6653, !tbaa !2286
  %10 = load i8, i8* %9, align 1, !dbg !6658, !tbaa !2438, !ctir !89
  %tobool2 = icmp ne i8 %10, 0, !dbg !6658
  br i1 %tobool2, label %if.end6, label %if.then, !dbg !6659

if.then:                                          ; preds = %for.cond
  %11 = load i8**, i8*** %ea.addr, align 8, !dbg !6660, !tbaa !2286
  %tobool3 = icmp ne i8** %11, null, !dbg !6660
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6663

if.then4:                                         ; preds = %if.then
  %12 = load i8*, i8** %m, align 8, !dbg !6664, !tbaa !2286
  %13 = load i8**, i8*** %ea.addr, align 8, !dbg !6665, !tbaa !2286
  store i8* %12, i8** %13, align 8, !dbg !6666, !tbaa !2286, !ctir !9
  br label %if.end, !dbg !6667

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load i64, i64* %ix, align 8, !dbg !6668, !tbaa !2447
  %arrayidx5 = getelementptr inbounds [12 x %struct.month], [12 x %struct.month]* @monthtab, i64 0, i64 %14, !dbg !6669, !ctir !328
  %val = getelementptr inbounds %struct.month, %struct.month* %arrayidx5, i32 0, i32 1, !dbg !6670, !ctir !329
  %15 = load i32, i32* %val, align 8, !dbg !6670, !tbaa !3494, !ctir !7
  store i32 %15, i32* %retval, align 4, !dbg !6671
  br label %return, !dbg !6671

if.end6:                                          ; preds = %for.cond
  %16 = load i8*, i8** %m, align 8, !dbg !6672, !tbaa !2286
  %17 = load i8, i8* %16, align 1, !dbg !6674, !tbaa !2438, !ctir !89
  %call7 = call zeroext i8 @to_uchar(i8 signext %17), !dbg !6675
  %idxprom8 = zext i8 %call7 to i64, !dbg !6676
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %idxprom8, !dbg !6676, !ctir !327
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !6676, !tbaa !2438
  %call10 = call zeroext i8 @to_uchar(i8 signext %18), !dbg !6677
  %conv = zext i8 %call10 to i32, !dbg !6677
  %19 = load i8*, i8** %n, align 8, !dbg !6678, !tbaa !2286
  %20 = load i8, i8* %19, align 1, !dbg !6679, !tbaa !2438, !ctir !89
  %call11 = call zeroext i8 @to_uchar(i8 signext %20), !dbg !6680
  %conv12 = zext i8 %call11 to i32, !dbg !6680
  %cmp = icmp slt i32 %conv, %conv12, !dbg !6681
  br i1 %cmp, label %if.then14, label %if.else, !dbg !6682

if.then14:                                        ; preds = %if.end6
  %21 = load i64, i64* %ix, align 8, !dbg !6683, !tbaa !2447
  store i64 %21, i64* %hi, align 8, !dbg !6685, !tbaa !2447
  br label %for.end, !dbg !6686

if.else:                                          ; preds = %if.end6
  %22 = load i8*, i8** %m, align 8, !dbg !6687, !tbaa !2286
  %23 = load i8, i8* %22, align 1, !dbg !6689, !tbaa !2438, !ctir !89
  %call15 = call zeroext i8 @to_uchar(i8 signext %23), !dbg !6690
  %idxprom16 = zext i8 %call15 to i64, !dbg !6691
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* @fold_toupper, i64 0, i64 %idxprom16, !dbg !6691, !ctir !327
  %24 = load i8, i8* %arrayidx17, align 1, !dbg !6691, !tbaa !2438
  %call18 = call zeroext i8 @to_uchar(i8 signext %24), !dbg !6692
  %conv19 = zext i8 %call18 to i32, !dbg !6692
  %25 = load i8*, i8** %n, align 8, !dbg !6693, !tbaa !2286
  %26 = load i8, i8* %25, align 1, !dbg !6694, !tbaa !2438, !ctir !89
  %call20 = call zeroext i8 @to_uchar(i8 signext %26), !dbg !6695
  %conv21 = zext i8 %call20 to i32, !dbg !6695
  %cmp22 = icmp sgt i32 %conv19, %conv21, !dbg !6696
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !6697

if.then24:                                        ; preds = %if.else
  %27 = load i64, i64* %ix, align 8, !dbg !6698, !tbaa !2447
  %add25 = add i64 %27, 1, !dbg !6700
  store i64 %add25, i64* %lo, align 8, !dbg !6701, !tbaa !2447
  br label %for.end, !dbg !6702

if.end26:                                         ; preds = %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  br label %for.inc, !dbg !6703

for.inc:                                          ; preds = %if.end27
  %28 = load i8*, i8** %m, align 8, !dbg !6704, !tbaa !2286
  %incdec.ptr28 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6704
  store i8* %incdec.ptr28, i8** %m, align 8, !dbg !6704, !tbaa !2286
  %29 = load i8*, i8** %n, align 8, !dbg !6705, !tbaa !2286
  %incdec.ptr29 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !6705
  store i8* %incdec.ptr29, i8** %n, align 8, !dbg !6705, !tbaa !2286
  br label %for.cond, !dbg !6706, !llvm.loop !6707

for.end:                                          ; preds = %if.then24, %if.then14
  br label %do.cond, !dbg !6710

do.cond:                                          ; preds = %for.end
  %30 = load i64, i64* %lo, align 8, !dbg !6711, !tbaa !2447
  %31 = load i64, i64* %hi, align 8, !dbg !6712, !tbaa !2447
  %cmp30 = icmp ult i64 %30, %31, !dbg !6713
  br i1 %cmp30, label %do.body, label %do.end, !dbg !6710, !llvm.loop !6714

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !6716
  br label %return, !dbg !6716

return:                                           ; preds = %do.end, %if.end
  %32 = load i32, i32* %retval, align 4, !dbg !6717
  ret i32 %32, !dbg !6717
}

; Function Attrs: nounwind
declare dso_local x86_fp80 @strtold(i8*, i8**) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @traverse_raw_number(i8** %number) #4 !dbg !6718 !ctir !487 {
entry:
  %retval = alloca i8, align 1
  %number.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !88
  %ch = alloca i8, align 1, !ctir !321
  %max_digit = alloca i8, align 1, !ctir !321
  %ends_with_thousands_sep = alloca i8, align 1, !ctir !103
  store i8** %number, i8*** %number.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %number.addr, metadata !6719, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6721, metadata !DIExpression()), !dbg !6722
  %0 = load i8**, i8*** %number.addr, align 8, !dbg !6723, !tbaa !2286
  %1 = load i8*, i8** %0, align 8, !dbg !6724, !tbaa !2286, !ctir !88
  store i8* %1, i8** %p, align 8, !dbg !6722, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !6725, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata i8* %max_digit, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i8 0, i8* %max_digit, align 1, !dbg !6728, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %ends_with_thousands_sep, metadata !6729, metadata !DIExpression()), !dbg !6730
  store i8 0, i8* %ends_with_thousands_sep, align 1, !dbg !6730, !tbaa !2430
  br label %while.cond, !dbg !6731

while.cond:                                       ; preds = %if.end11, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !6732, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !6732
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6732, !tbaa !2286
  %3 = load i8, i8* %2, align 1, !dbg !6732, !tbaa !2438, !ctir !89
  store i8 %3, i8* %ch, align 1, !dbg !6732, !tbaa !2438
  %conv = zext i8 %3 to i32, !dbg !6732
  %sub = sub i32 %conv, 48, !dbg !6732
  %cmp = icmp ule i32 %sub, 9, !dbg !6732
  br i1 %cmp, label %while.body, label %while.end, !dbg !6731

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %max_digit, align 1, !dbg !6733, !tbaa !2438
  %conv2 = zext i8 %4 to i32, !dbg !6733
  %5 = load i8, i8* %ch, align 1, !dbg !6736, !tbaa !2438
  %conv3 = zext i8 %5 to i32, !dbg !6736
  %cmp4 = icmp slt i32 %conv2, %conv3, !dbg !6737
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6738

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %ch, align 1, !dbg !6739, !tbaa !2438
  store i8 %6, i8* %max_digit, align 1, !dbg !6740, !tbaa !2438
  br label %if.end, !dbg !6741

if.end:                                           ; preds = %if.then, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !6742, !tbaa !2286
  %8 = load i8, i8* %7, align 1, !dbg !6743, !tbaa !2438, !ctir !89
  %conv6 = sext i8 %8 to i32, !dbg !6743
  %9 = load i32, i32* @thousands_sep, align 4, !dbg !6744, !tbaa !2273
  %cmp7 = icmp eq i32 %conv6, %9, !dbg !6745
  %frombool = zext i1 %cmp7 to i8, !dbg !6746
  store i8 %frombool, i8* %ends_with_thousands_sep, align 1, !dbg !6746, !tbaa !2430
  %10 = load i8, i8* %ends_with_thousands_sep, align 1, !dbg !6747, !tbaa !2430
  %tobool = trunc i8 %10 to i1, !dbg !6747
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !6749

if.then9:                                         ; preds = %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !6750, !tbaa !2286
  %incdec.ptr10 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6750
  store i8* %incdec.ptr10, i8** %p, align 8, !dbg !6750, !tbaa !2286
  br label %if.end11, !dbg !6750

if.end11:                                         ; preds = %if.then9, %if.end
  br label %while.cond, !dbg !6731, !llvm.loop !6751

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ends_with_thousands_sep, align 1, !dbg !6753, !tbaa !2430
  %tobool12 = trunc i8 %12 to i1, !dbg !6753
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6755

if.then13:                                        ; preds = %while.end
  %13 = load i8*, i8** %p, align 8, !dbg !6756, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 -2, !dbg !6758
  %14 = load i8**, i8*** %number.addr, align 8, !dbg !6759, !tbaa !2286
  store i8* %add.ptr, i8** %14, align 8, !dbg !6760, !tbaa !2286, !ctir !88
  %15 = load i8, i8* %max_digit, align 1, !dbg !6761, !tbaa !2438
  store i8 %15, i8* %retval, align 1, !dbg !6762
  br label %return, !dbg !6762

if.end14:                                         ; preds = %while.end
  %16 = load i8, i8* %ch, align 1, !dbg !6763, !tbaa !2438
  %conv15 = zext i8 %16 to i32, !dbg !6763
  %17 = load i32, i32* @decimal_point, align 4, !dbg !6765, !tbaa !2273
  %cmp16 = icmp eq i32 %conv15, %17, !dbg !6766
  br i1 %cmp16, label %if.then18, label %if.end33, !dbg !6767

if.then18:                                        ; preds = %if.end14
  br label %while.cond19, !dbg !6768

while.cond19:                                     ; preds = %if.end31, %if.then18
  %18 = load i8*, i8** %p, align 8, !dbg !6769, !tbaa !2286
  %incdec.ptr20 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6769
  store i8* %incdec.ptr20, i8** %p, align 8, !dbg !6769, !tbaa !2286
  %19 = load i8, i8* %18, align 1, !dbg !6769, !tbaa !2438, !ctir !89
  store i8 %19, i8* %ch, align 1, !dbg !6769, !tbaa !2438
  %conv21 = zext i8 %19 to i32, !dbg !6769
  %sub22 = sub i32 %conv21, 48, !dbg !6769
  %cmp23 = icmp ule i32 %sub22, 9, !dbg !6769
  br i1 %cmp23, label %while.body25, label %while.end32, !dbg !6768

while.body25:                                     ; preds = %while.cond19
  %20 = load i8, i8* %max_digit, align 1, !dbg !6770, !tbaa !2438
  %conv26 = zext i8 %20 to i32, !dbg !6770
  %21 = load i8, i8* %ch, align 1, !dbg !6772, !tbaa !2438
  %conv27 = zext i8 %21 to i32, !dbg !6772
  %cmp28 = icmp slt i32 %conv26, %conv27, !dbg !6773
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6774

if.then30:                                        ; preds = %while.body25
  %22 = load i8, i8* %ch, align 1, !dbg !6775, !tbaa !2438
  store i8 %22, i8* %max_digit, align 1, !dbg !6776, !tbaa !2438
  br label %if.end31, !dbg !6777

if.end31:                                         ; preds = %if.then30, %while.body25
  br label %while.cond19, !dbg !6768, !llvm.loop !6778

while.end32:                                      ; preds = %while.cond19
  br label %if.end33, !dbg !6768

if.end33:                                         ; preds = %while.end32, %if.end14
  %23 = load i8*, i8** %p, align 8, !dbg !6780, !tbaa !2286
  %add.ptr34 = getelementptr inbounds i8, i8* %23, i64 -1, !dbg !6781
  %24 = load i8**, i8*** %number.addr, align 8, !dbg !6782, !tbaa !2286
  store i8* %add.ptr34, i8** %24, align 8, !dbg !6783, !tbaa !2286, !ctir !88
  %25 = load i8, i8* %max_digit, align 1, !dbg !6784, !tbaa !2438
  store i8 %25, i8* %retval, align 1, !dbg !6785
  br label %return, !dbg !6785

return:                                           ; preds = %if.end33, %if.then13
  %26 = load i8, i8* %retval, align 1, !dbg !6786
  ret i8 %26, !dbg !6786
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @debug_width(i8* %text, i8* %lim) #4 !dbg !6787 !ctir !522 {
entry:
  %text.addr = alloca i8*, align 8
  %lim.addr = alloca i8*, align 8
  %width = alloca i64, align 8, !ctir !55
  store i8* %text, i8** %text.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %text.addr, metadata !6788, metadata !DIExpression()), !dbg !6789
  store i8* %lim, i8** %lim.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %lim.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6792, metadata !DIExpression()), !dbg !6793
  %0 = load i8*, i8** %text.addr, align 8, !dbg !6794, !tbaa !2286
  %1 = load i8*, i8** %lim.addr, align 8, !dbg !6795, !tbaa !2286
  %2 = load i8*, i8** %text.addr, align 8, !dbg !6796, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !6797
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !6797
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6797
  %call = call i32 @mbsnwidth(i8* %0, i64 %sub.ptr.sub, i32 0), !dbg !6798
  %conv = sext i32 %call to i64, !dbg !6798
  store i64 %conv, i64* %width, align 8, !dbg !6793, !tbaa !2447
  br label %while.cond, !dbg !6799

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i8*, i8** %text.addr, align 8, !dbg !6800, !tbaa !2286
  %4 = load i8*, i8** %lim.addr, align 8, !dbg !6801, !tbaa !2286
  %cmp = icmp ult i8* %3, %4, !dbg !6802
  br i1 %cmp, label %while.body, label %while.end, !dbg !6799

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %text.addr, align 8, !dbg !6803, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6803
  store i8* %incdec.ptr, i8** %text.addr, align 8, !dbg !6803, !tbaa !2286
  %6 = load i8, i8* %5, align 1, !dbg !6804, !tbaa !2438, !ctir !89
  %conv2 = sext i8 %6 to i32, !dbg !6804
  %cmp3 = icmp eq i32 %conv2, 9, !dbg !6805
  %conv4 = zext i1 %cmp3 to i32, !dbg !6805
  %conv5 = sext i32 %conv4 to i64, !dbg !6806
  %7 = load i64, i64* %width, align 8, !dbg !6807, !tbaa !2447
  %add = add i64 %7, %conv5, !dbg !6807
  store i64 %add, i64* %width, align 8, !dbg !6807, !tbaa !2447
  br label %while.cond, !dbg !6799, !llvm.loop !6808

while.end:                                        ; preds = %while.cond
  %8 = load i64, i64* %width, align 8, !dbg !6810, !tbaa !2447
  ret i64 %8, !dbg !6811
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_key(i64 %offset, i64 %width) #4 !dbg !6812 !ctir !524 {
entry:
  %offset.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6813, metadata !DIExpression()), !dbg !6814
  store i64 %width, i64* %width.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6815, metadata !DIExpression()), !dbg !6816
  br label %while.cond, !dbg !6817

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %offset.addr, align 8, !dbg !6818, !tbaa !2447
  %dec = add i64 %0, -1, !dbg !6818
  store i64 %dec, i64* %offset.addr, align 8, !dbg !6818, !tbaa !2447
  %tobool = icmp ne i64 %0, 0, !dbg !6817
  br i1 %tobool, label %while.body, label %while.end, !dbg !6817

while.body:                                       ; preds = %while.cond
  %call = call i32 @putchar_unlocked(i32 32), !dbg !6819
  br label %while.cond, !dbg !6817, !llvm.loop !6820

while.end:                                        ; preds = %while.cond
  %1 = load i64, i64* %width.addr, align 8, !dbg !6821, !tbaa !2447
  %tobool1 = icmp ne i64 %1, 0, !dbg !6821
  br i1 %tobool1, label %if.else, label %if.then, !dbg !6823

if.then:                                          ; preds = %while.end
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.165, i64 0, i64 0)) #12, !dbg !6824
  %call3 = call i32 (i8*, ...) @printf(i8* %call2), !dbg !6825
  br label %if.end, !dbg !6825

if.else:                                          ; preds = %while.end
  br label %do.body, !dbg !6826

do.body:                                          ; preds = %do.cond, %if.else
  %call4 = call i32 @putchar_unlocked(i32 95), !dbg !6828
  br label %do.cond, !dbg !6828

do.cond:                                          ; preds = %do.body
  %2 = load i64, i64* %width.addr, align 8, !dbg !6829, !tbaa !2447
  %dec5 = add i64 %2, -1, !dbg !6829
  store i64 %dec5, i64* %width.addr, align 8, !dbg !6829, !tbaa !2447
  %tobool6 = icmp ne i64 %dec5, 0, !dbg !6828
  br i1 %tobool6, label %do.body, label %do.end, !dbg !6828, !llvm.loop !6830

do.end:                                           ; preds = %do.cond
  %call7 = call i32 @putchar_unlocked(i32 10), !dbg !6832
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  ret void, !dbg !6833
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @keycompare(%struct.line* %a, %struct.line* %b) #4 !dbg !6834 !ctir !476 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.line*, align 8
  %b.addr = alloca %struct.line*, align 8
  %key = alloca %struct.keyfield*, align 8, !ctir !93
  %texta = alloca i8*, align 8, !ctir !9
  %textb = alloca i8*, align 8, !ctir !9
  %lima = alloca i8*, align 8, !ctir !9
  %limb = alloca i8*, align 8, !ctir !9
  %diff = alloca i32, align 4, !ctir !7
  %translate = alloca i8*, align 8, !ctir !88
  %ignore = alloca i8*, align 8, !ctir !101
  %lena = alloca i64, align 8, !ctir !55
  %lenb = alloca i64, align 8, !ctir !55
  %ta = alloca i8*, align 8, !ctir !9
  %tb = alloca i8*, align 8, !ctir !9
  %tlena = alloca i64, align 8, !ctir !55
  %tlenb = alloca i64, align 8, !ctir !55
  %enda = alloca i8, align 1, !ctir !10
  %endb = alloca i8, align 1, !ctir !10
  %allocated = alloca i8*, align 8, !ctir !53
  %stackbuf = alloca [4000 x i8], align 16, !ctir !478
  %i = alloca i64, align 8, !ctir !55
  %size = alloca i64, align 8, !ctir !55
  store %struct.line* %a, %struct.line** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %a.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  store %struct.line* %b, %struct.line** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %b.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !6839, metadata !DIExpression()), !dbg !6840
  %0 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !6841, !tbaa !2286
  store %struct.keyfield* %0, %struct.keyfield** %key, align 8, !dbg !6840, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %texta, metadata !6842, metadata !DIExpression()), !dbg !6843
  %1 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6844, !tbaa !2286
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %1, i32 0, i32 2, !dbg !6845, !ctir !448
  %2 = load i8*, i8** %keybeg, align 8, !dbg !6845, !tbaa !4619, !ctir !9
  store i8* %2, i8** %texta, align 8, !dbg !6843, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %textb, metadata !6846, metadata !DIExpression()), !dbg !6847
  %3 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6848, !tbaa !2286
  %keybeg1 = getelementptr inbounds %struct.line, %struct.line* %3, i32 0, i32 2, !dbg !6849, !ctir !448
  %4 = load i8*, i8** %keybeg1, align 8, !dbg !6849, !tbaa !4619, !ctir !9
  store i8* %4, i8** %textb, align 8, !dbg !6847, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %lima, metadata !6850, metadata !DIExpression()), !dbg !6851
  %5 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !6852, !tbaa !2286
  %keylim = getelementptr inbounds %struct.line, %struct.line* %5, i32 0, i32 3, !dbg !6853, !ctir !448
  %6 = load i8*, i8** %keylim, align 8, !dbg !6853, !tbaa !4629, !ctir !9
  store i8* %6, i8** %lima, align 8, !dbg !6851, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %limb, metadata !6854, metadata !DIExpression()), !dbg !6855
  %7 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !6856, !tbaa !2286
  %keylim2 = getelementptr inbounds %struct.line, %struct.line* %7, i32 0, i32 3, !dbg !6857, !ctir !448
  %8 = load i8*, i8** %keylim2, align 8, !dbg !6857, !tbaa !4629, !ctir !9
  store i8* %8, i8** %limb, align 8, !dbg !6855, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %while.body, !dbg !6860

while.body:                                       ; preds = %entry, %if.end380
  call void @llvm.dbg.declare(metadata i8** %translate, metadata !6861, metadata !DIExpression()), !dbg !6863
  %9 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6864, !tbaa !2286
  %translate3 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %9, i32 0, i32 5, !dbg !6865, !ctir !94
  %10 = load i8*, i8** %translate3, align 8, !dbg !6865, !tbaa !3148, !ctir !88
  store i8* %10, i8** %translate, align 8, !dbg !6863, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %ignore, metadata !6866, metadata !DIExpression()), !dbg !6867
  %11 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6868, !tbaa !2286
  %ignore4 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 4, !dbg !6869, !ctir !94
  %12 = load i8*, i8** %ignore4, align 8, !dbg !6869, !tbaa !3143, !ctir !101
  store i8* %12, i8** %ignore, align 8, !dbg !6867, !tbaa !2286
  %13 = load i8*, i8** %texta, align 8, !dbg !6870, !tbaa !2286
  %14 = load i8*, i8** %lima, align 8, !dbg !6870, !tbaa !2286
  %cmp = icmp ugt i8* %13, %14, !dbg !6870
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6870

cond.true:                                        ; preds = %while.body
  %15 = load i8*, i8** %texta, align 8, !dbg !6870, !tbaa !2286
  br label %cond.end, !dbg !6870

cond.false:                                       ; preds = %while.body
  %16 = load i8*, i8** %lima, align 8, !dbg !6870, !tbaa !2286
  br label %cond.end, !dbg !6870

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %15, %cond.true ], [ %16, %cond.false ], !dbg !6870
  store i8* %cond, i8** %lima, align 8, !dbg !6871, !tbaa !2286
  %17 = load i8*, i8** %textb, align 8, !dbg !6872, !tbaa !2286
  %18 = load i8*, i8** %limb, align 8, !dbg !6872, !tbaa !2286
  %cmp5 = icmp ugt i8* %17, %18, !dbg !6872
  br i1 %cmp5, label %cond.true6, label %cond.false7, !dbg !6872

cond.true6:                                       ; preds = %cond.end
  %19 = load i8*, i8** %textb, align 8, !dbg !6872, !tbaa !2286
  br label %cond.end8, !dbg !6872

cond.false7:                                      ; preds = %cond.end
  %20 = load i8*, i8** %limb, align 8, !dbg !6872, !tbaa !2286
  br label %cond.end8, !dbg !6872

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i8* [ %19, %cond.true6 ], [ %20, %cond.false7 ], !dbg !6872
  store i8* %cond9, i8** %limb, align 8, !dbg !6873, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %lena, metadata !6874, metadata !DIExpression()), !dbg !6875
  %21 = load i8*, i8** %lima, align 8, !dbg !6876, !tbaa !2286
  %22 = load i8*, i8** %texta, align 8, !dbg !6877, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !6878
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !6878
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6878
  store i64 %sub.ptr.sub, i64* %lena, align 8, !dbg !6875, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %lenb, metadata !6879, metadata !DIExpression()), !dbg !6880
  %23 = load i8*, i8** %limb, align 8, !dbg !6881, !tbaa !2286
  %24 = load i8*, i8** %textb, align 8, !dbg !6882, !tbaa !2286
  %sub.ptr.lhs.cast10 = ptrtoint i8* %23 to i64, !dbg !6883
  %sub.ptr.rhs.cast11 = ptrtoint i8* %24 to i64, !dbg !6883
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !6883
  store i64 %sub.ptr.sub12, i64* %lenb, align 8, !dbg !6880, !tbaa !2447
  %25 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !6884, !tbaa !2430
  %tobool = trunc i8 %25 to i1, !dbg !6884
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6886

lor.lhs.false:                                    ; preds = %cond.end8
  %26 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6887, !tbaa !2286
  %call = call zeroext i1 @key_numeric(%struct.keyfield* %26), !dbg !6888
  br i1 %call, label %if.then, label %lor.lhs.false13, !dbg !6889

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %27 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6890, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %27, i32 0, i32 12, !dbg !6891, !ctir !94
  %28 = load i8, i8* %month, align 2, !dbg !6891, !tbaa !3163
  %tobool14 = trunc i8 %28 to i1, !dbg !6891, !ctir !103
  br i1 %tobool14, label %if.then, label %lor.lhs.false15, !dbg !6892

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %29 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6893, !tbaa !2286
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %29, i32 0, i32 9, !dbg !6894, !ctir !94
  %30 = load i8, i8* %random, align 1, !dbg !6894, !tbaa !3188
  %tobool16 = trunc i8 %30 to i1, !dbg !6894, !ctir !103
  br i1 %tobool16, label %if.then, label %lor.lhs.false17, !dbg !6895

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %31 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !6896, !tbaa !2286
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %31, i32 0, i32 14, !dbg !6897, !ctir !94
  %32 = load i8, i8* %version, align 8, !dbg !6897, !tbaa !3183
  %tobool18 = trunc i8 %32 to i1, !dbg !6897, !ctir !103
  br i1 %tobool18, label %if.then, label %if.else148, !dbg !6898

if.then:                                          ; preds = %lor.lhs.false17, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false, %cond.end8
  call void @llvm.dbg.declare(metadata i8** %ta, metadata !6899, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.declare(metadata i8** %tb, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.declare(metadata i64* %tlena, metadata !6904, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.declare(metadata i64* %tlenb, metadata !6906, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.declare(metadata i8* %enda, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.declare(metadata i8* %endb, metadata !6910, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.declare(metadata i8** %allocated, metadata !6912, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.declare(metadata [4000 x i8]* %stackbuf, metadata !6914, metadata !DIExpression()), !dbg !6915
  %33 = load i8*, i8** %ignore, align 8, !dbg !6916, !tbaa !2286
  %tobool19 = icmp ne i8* %33, null, !dbg !6916
  br i1 %tobool19, label %if.then22, label %lor.lhs.false20, !dbg !6918

lor.lhs.false20:                                  ; preds = %if.then
  %34 = load i8*, i8** %translate, align 8, !dbg !6919, !tbaa !2286
  %tobool21 = icmp ne i8* %34, null, !dbg !6919
  br i1 %tobool21, label %if.then22, label %if.else84, !dbg !6920

if.then22:                                        ; preds = %lor.lhs.false20, %if.then
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6921, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata i64* %size, metadata !6924, metadata !DIExpression()), !dbg !6925
  %35 = load i64, i64* %lena, align 8, !dbg !6926, !tbaa !2447
  %add = add i64 %35, 1, !dbg !6927
  %36 = load i64, i64* %lenb, align 8, !dbg !6928, !tbaa !2447
  %add23 = add i64 %add, %36, !dbg !6929
  %add24 = add i64 %add23, 1, !dbg !6930
  store i64 %add24, i64* %size, align 8, !dbg !6925, !tbaa !2447
  %37 = load i64, i64* %size, align 8, !dbg !6931, !tbaa !2447
  %cmp25 = icmp ule i64 %37, 4000, !dbg !6933
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !6934

if.then26:                                        ; preds = %if.then22
  %arraydecay = getelementptr inbounds [4000 x i8], [4000 x i8]* %stackbuf, i64 0, i64 0, !dbg !6935
  store i8* %arraydecay, i8** %ta, align 8, !dbg !6936, !tbaa !2286
  store i8* null, i8** %allocated, align 8, !dbg !6937, !tbaa !2286
  br label %if.end, !dbg !6938

if.else:                                          ; preds = %if.then22
  %38 = load i64, i64* %size, align 8, !dbg !6939, !tbaa !2447
  %call27 = call noalias i8* @xmalloc(i64 %38), !dbg !6940
  store i8* %call27, i8** %allocated, align 8, !dbg !6941, !tbaa !2286
  store i8* %call27, i8** %ta, align 8, !dbg !6942, !tbaa !2286
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then26
  %39 = load i8*, i8** %ta, align 8, !dbg !6943, !tbaa !2286
  %40 = load i64, i64* %lena, align 8, !dbg !6944, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !6945
  %add.ptr28 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !6946
  store i8* %add.ptr28, i8** %tb, align 8, !dbg !6947, !tbaa !2286
  store i64 0, i64* %i, align 8, !dbg !6948, !tbaa !2447
  store i64 0, i64* %tlena, align 8, !dbg !6950, !tbaa !2447
  br label %for.cond, !dbg !6951

for.cond:                                         ; preds = %for.inc, %if.end
  %41 = load i64, i64* %i, align 8, !dbg !6952, !tbaa !2447
  %42 = load i64, i64* %lena, align 8, !dbg !6954, !tbaa !2447
  %cmp29 = icmp ult i64 %41, %42, !dbg !6955
  br i1 %cmp29, label %for.body, label %for.end, !dbg !6956

for.body:                                         ; preds = %for.cond
  %43 = load i8*, i8** %ignore, align 8, !dbg !6957, !tbaa !2286
  %tobool30 = icmp ne i8* %43, null, !dbg !6957
  br i1 %tobool30, label %land.lhs.true, label %if.then34, !dbg !6959

land.lhs.true:                                    ; preds = %for.body
  %44 = load i8*, i8** %ignore, align 8, !dbg !6960, !tbaa !2286
  %45 = load i8*, i8** %texta, align 8, !dbg !6961, !tbaa !2286
  %46 = load i64, i64* %i, align 8, !dbg !6962, !tbaa !2447
  %arrayidx = getelementptr inbounds i8, i8* %45, i64 %46, !dbg !6961, !ctir !9
  %47 = load i8, i8* %arrayidx, align 1, !dbg !6961, !tbaa !2438
  %call31 = call zeroext i8 @to_uchar(i8 signext %47), !dbg !6963
  %idxprom = zext i8 %call31 to i64, !dbg !6960
  %arrayidx32 = getelementptr inbounds i8, i8* %44, i64 %idxprom, !dbg !6960, !ctir !101
  %48 = load i8, i8* %arrayidx32, align 1, !dbg !6960, !tbaa !2430
  %tobool33 = trunc i8 %48 to i1, !dbg !6960
  br i1 %tobool33, label %if.end48, label %if.then34, !dbg !6964

if.then34:                                        ; preds = %land.lhs.true, %for.body
  %49 = load i8*, i8** %translate, align 8, !dbg !6965, !tbaa !2286
  %tobool35 = icmp ne i8* %49, null, !dbg !6965
  br i1 %tobool35, label %cond.true36, label %cond.false41, !dbg !6965

cond.true36:                                      ; preds = %if.then34
  %50 = load i8*, i8** %translate, align 8, !dbg !6966, !tbaa !2286
  %51 = load i8*, i8** %texta, align 8, !dbg !6967, !tbaa !2286
  %52 = load i64, i64* %i, align 8, !dbg !6968, !tbaa !2447
  %arrayidx37 = getelementptr inbounds i8, i8* %51, i64 %52, !dbg !6967, !ctir !9
  %53 = load i8, i8* %arrayidx37, align 1, !dbg !6967, !tbaa !2438
  %call38 = call zeroext i8 @to_uchar(i8 signext %53), !dbg !6969
  %idxprom39 = zext i8 %call38 to i64, !dbg !6966
  %arrayidx40 = getelementptr inbounds i8, i8* %50, i64 %idxprom39, !dbg !6966, !ctir !88
  %54 = load i8, i8* %arrayidx40, align 1, !dbg !6966, !tbaa !2438
  %conv = sext i8 %54 to i32, !dbg !6966
  br label %cond.end44, !dbg !6965

cond.false41:                                     ; preds = %if.then34
  %55 = load i8*, i8** %texta, align 8, !dbg !6970, !tbaa !2286
  %56 = load i64, i64* %i, align 8, !dbg !6971, !tbaa !2447
  %arrayidx42 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !6970, !ctir !9
  %57 = load i8, i8* %arrayidx42, align 1, !dbg !6970, !tbaa !2438
  %conv43 = sext i8 %57 to i32, !dbg !6970
  br label %cond.end44, !dbg !6965

cond.end44:                                       ; preds = %cond.false41, %cond.true36
  %cond45 = phi i32 [ %conv, %cond.true36 ], [ %conv43, %cond.false41 ], !dbg !6965
  %conv46 = trunc i32 %cond45 to i8, !dbg !6972
  %58 = load i8*, i8** %ta, align 8, !dbg !6973, !tbaa !2286
  %59 = load i64, i64* %tlena, align 8, !dbg !6974, !tbaa !2447
  %inc = add i64 %59, 1, !dbg !6974
  store i64 %inc, i64* %tlena, align 8, !dbg !6974, !tbaa !2447
  %arrayidx47 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !6973, !ctir !9
  store i8 %conv46, i8* %arrayidx47, align 1, !dbg !6975, !tbaa !2438
  br label %if.end48, !dbg !6973

if.end48:                                         ; preds = %cond.end44, %land.lhs.true
  br label %for.inc, !dbg !6976

for.inc:                                          ; preds = %if.end48
  %60 = load i64, i64* %i, align 8, !dbg !6977, !tbaa !2447
  %inc49 = add i64 %60, 1, !dbg !6977
  store i64 %inc49, i64* %i, align 8, !dbg !6977, !tbaa !2447
  br label %for.cond, !dbg !6978, !llvm.loop !6979

for.end:                                          ; preds = %for.cond
  %61 = load i8*, i8** %ta, align 8, !dbg !6981, !tbaa !2286
  %62 = load i64, i64* %tlena, align 8, !dbg !6982, !tbaa !2447
  %arrayidx50 = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !6981, !ctir !9
  store i8 0, i8* %arrayidx50, align 1, !dbg !6983, !tbaa !2438
  store i64 0, i64* %i, align 8, !dbg !6984, !tbaa !2447
  store i64 0, i64* %tlenb, align 8, !dbg !6986, !tbaa !2447
  br label %for.cond51, !dbg !6987

for.cond51:                                       ; preds = %for.inc80, %for.end
  %63 = load i64, i64* %i, align 8, !dbg !6988, !tbaa !2447
  %64 = load i64, i64* %lenb, align 8, !dbg !6990, !tbaa !2447
  %cmp52 = icmp ult i64 %63, %64, !dbg !6991
  br i1 %cmp52, label %for.body54, label %for.end82, !dbg !6992

for.body54:                                       ; preds = %for.cond51
  %65 = load i8*, i8** %ignore, align 8, !dbg !6993, !tbaa !2286
  %tobool55 = icmp ne i8* %65, null, !dbg !6993
  br i1 %tobool55, label %land.lhs.true56, label %if.then63, !dbg !6995

land.lhs.true56:                                  ; preds = %for.body54
  %66 = load i8*, i8** %ignore, align 8, !dbg !6996, !tbaa !2286
  %67 = load i8*, i8** %textb, align 8, !dbg !6997, !tbaa !2286
  %68 = load i64, i64* %i, align 8, !dbg !6998, !tbaa !2447
  %arrayidx57 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !6997, !ctir !9
  %69 = load i8, i8* %arrayidx57, align 1, !dbg !6997, !tbaa !2438
  %call58 = call zeroext i8 @to_uchar(i8 signext %69), !dbg !6999
  %idxprom59 = zext i8 %call58 to i64, !dbg !6996
  %arrayidx60 = getelementptr inbounds i8, i8* %66, i64 %idxprom59, !dbg !6996, !ctir !101
  %70 = load i8, i8* %arrayidx60, align 1, !dbg !6996, !tbaa !2430
  %tobool61 = trunc i8 %70 to i1, !dbg !6996
  br i1 %tobool61, label %if.end79, label %if.then63, !dbg !7000

if.then63:                                        ; preds = %land.lhs.true56, %for.body54
  %71 = load i8*, i8** %translate, align 8, !dbg !7001, !tbaa !2286
  %tobool64 = icmp ne i8* %71, null, !dbg !7001
  br i1 %tobool64, label %cond.true65, label %cond.false71, !dbg !7001

cond.true65:                                      ; preds = %if.then63
  %72 = load i8*, i8** %translate, align 8, !dbg !7002, !tbaa !2286
  %73 = load i8*, i8** %textb, align 8, !dbg !7003, !tbaa !2286
  %74 = load i64, i64* %i, align 8, !dbg !7004, !tbaa !2447
  %arrayidx66 = getelementptr inbounds i8, i8* %73, i64 %74, !dbg !7003, !ctir !9
  %75 = load i8, i8* %arrayidx66, align 1, !dbg !7003, !tbaa !2438
  %call67 = call zeroext i8 @to_uchar(i8 signext %75), !dbg !7005
  %idxprom68 = zext i8 %call67 to i64, !dbg !7002
  %arrayidx69 = getelementptr inbounds i8, i8* %72, i64 %idxprom68, !dbg !7002, !ctir !88
  %76 = load i8, i8* %arrayidx69, align 1, !dbg !7002, !tbaa !2438
  %conv70 = sext i8 %76 to i32, !dbg !7002
  br label %cond.end74, !dbg !7001

cond.false71:                                     ; preds = %if.then63
  %77 = load i8*, i8** %textb, align 8, !dbg !7006, !tbaa !2286
  %78 = load i64, i64* %i, align 8, !dbg !7007, !tbaa !2447
  %arrayidx72 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !7006, !ctir !9
  %79 = load i8, i8* %arrayidx72, align 1, !dbg !7006, !tbaa !2438
  %conv73 = sext i8 %79 to i32, !dbg !7006
  br label %cond.end74, !dbg !7001

cond.end74:                                       ; preds = %cond.false71, %cond.true65
  %cond75 = phi i32 [ %conv70, %cond.true65 ], [ %conv73, %cond.false71 ], !dbg !7001
  %conv76 = trunc i32 %cond75 to i8, !dbg !7008
  %80 = load i8*, i8** %tb, align 8, !dbg !7009, !tbaa !2286
  %81 = load i64, i64* %tlenb, align 8, !dbg !7010, !tbaa !2447
  %inc77 = add i64 %81, 1, !dbg !7010
  store i64 %inc77, i64* %tlenb, align 8, !dbg !7010, !tbaa !2447
  %arrayidx78 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !7009, !ctir !9
  store i8 %conv76, i8* %arrayidx78, align 1, !dbg !7011, !tbaa !2438
  br label %if.end79, !dbg !7009

if.end79:                                         ; preds = %cond.end74, %land.lhs.true56
  br label %for.inc80, !dbg !7012

for.inc80:                                        ; preds = %if.end79
  %82 = load i64, i64* %i, align 8, !dbg !7013, !tbaa !2447
  %inc81 = add i64 %82, 1, !dbg !7013
  store i64 %inc81, i64* %i, align 8, !dbg !7013, !tbaa !2447
  br label %for.cond51, !dbg !7014, !llvm.loop !7015

for.end82:                                        ; preds = %for.cond51
  %83 = load i8*, i8** %tb, align 8, !dbg !7017, !tbaa !2286
  %84 = load i64, i64* %tlenb, align 8, !dbg !7018, !tbaa !2447
  %arrayidx83 = getelementptr inbounds i8, i8* %83, i64 %84, !dbg !7017, !ctir !9
  store i8 0, i8* %arrayidx83, align 1, !dbg !7019, !tbaa !2438
  br label %if.end89, !dbg !7020

if.else84:                                        ; preds = %lor.lhs.false20
  %85 = load i8*, i8** %texta, align 8, !dbg !7021, !tbaa !2286
  store i8* %85, i8** %ta, align 8, !dbg !7023, !tbaa !2286
  %86 = load i64, i64* %lena, align 8, !dbg !7024, !tbaa !2447
  store i64 %86, i64* %tlena, align 8, !dbg !7025, !tbaa !2447
  %87 = load i8*, i8** %ta, align 8, !dbg !7026, !tbaa !2286
  %88 = load i64, i64* %tlena, align 8, !dbg !7027, !tbaa !2447
  %arrayidx85 = getelementptr inbounds i8, i8* %87, i64 %88, !dbg !7026, !ctir !9
  %89 = load i8, i8* %arrayidx85, align 1, !dbg !7026, !tbaa !2438
  store i8 %89, i8* %enda, align 1, !dbg !7028, !tbaa !2438
  %90 = load i8*, i8** %ta, align 8, !dbg !7029, !tbaa !2286
  %91 = load i64, i64* %tlena, align 8, !dbg !7030, !tbaa !2447
  %arrayidx86 = getelementptr inbounds i8, i8* %90, i64 %91, !dbg !7029, !ctir !9
  store i8 0, i8* %arrayidx86, align 1, !dbg !7031, !tbaa !2438
  %92 = load i8*, i8** %textb, align 8, !dbg !7032, !tbaa !2286
  store i8* %92, i8** %tb, align 8, !dbg !7033, !tbaa !2286
  %93 = load i64, i64* %lenb, align 8, !dbg !7034, !tbaa !2447
  store i64 %93, i64* %tlenb, align 8, !dbg !7035, !tbaa !2447
  %94 = load i8*, i8** %tb, align 8, !dbg !7036, !tbaa !2286
  %95 = load i64, i64* %tlenb, align 8, !dbg !7037, !tbaa !2447
  %arrayidx87 = getelementptr inbounds i8, i8* %94, i64 %95, !dbg !7036, !ctir !9
  %96 = load i8, i8* %arrayidx87, align 1, !dbg !7036, !tbaa !2438
  store i8 %96, i8* %endb, align 1, !dbg !7038, !tbaa !2438
  %97 = load i8*, i8** %tb, align 8, !dbg !7039, !tbaa !2286
  %98 = load i64, i64* %tlenb, align 8, !dbg !7040, !tbaa !2447
  %arrayidx88 = getelementptr inbounds i8, i8* %97, i64 %98, !dbg !7039, !ctir !9
  store i8 0, i8* %arrayidx88, align 1, !dbg !7041, !tbaa !2438
  br label %if.end89

if.end89:                                         ; preds = %if.else84, %for.end82
  %99 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7042, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %99, i32 0, i32 8, !dbg !7044, !ctir !94
  %100 = load i8, i8* %numeric, align 2, !dbg !7044, !tbaa !3168
  %tobool90 = trunc i8 %100 to i1, !dbg !7044, !ctir !103
  br i1 %tobool90, label %if.then91, label %if.else93, !dbg !7045

if.then91:                                        ; preds = %if.end89
  %101 = load i8*, i8** %ta, align 8, !dbg !7046, !tbaa !2286
  %102 = load i8*, i8** %tb, align 8, !dbg !7047, !tbaa !2286
  %call92 = call i32 @numcompare(i8* %101, i8* %102), !dbg !7048
  store i32 %call92, i32* %diff, align 4, !dbg !7049, !tbaa !2273
  br label %if.end139, !dbg !7050

if.else93:                                        ; preds = %if.end89
  %103 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7051, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %103, i32 0, i32 10, !dbg !7053, !ctir !94
  %104 = load i8, i8* %general_numeric, align 4, !dbg !7053, !tbaa !3173
  %tobool94 = trunc i8 %104 to i1, !dbg !7053, !ctir !103
  br i1 %tobool94, label %if.then95, label %if.else97, !dbg !7054

if.then95:                                        ; preds = %if.else93
  %105 = load i8*, i8** %ta, align 8, !dbg !7055, !tbaa !2286
  %106 = load i8*, i8** %tb, align 8, !dbg !7056, !tbaa !2286
  %call96 = call i32 @general_numcompare(i8* %105, i8* %106), !dbg !7057
  store i32 %call96, i32* %diff, align 4, !dbg !7058, !tbaa !2273
  br label %if.end138, !dbg !7059

if.else97:                                        ; preds = %if.else93
  %107 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7060, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %107, i32 0, i32 11, !dbg !7062, !ctir !94
  %108 = load i8, i8* %human_numeric, align 1, !dbg !7062, !tbaa !3178
  %tobool98 = trunc i8 %108 to i1, !dbg !7062, !ctir !103
  br i1 %tobool98, label %if.then99, label %if.else101, !dbg !7063

if.then99:                                        ; preds = %if.else97
  %109 = load i8*, i8** %ta, align 8, !dbg !7064, !tbaa !2286
  %110 = load i8*, i8** %tb, align 8, !dbg !7065, !tbaa !2286
  %call100 = call i32 @human_numcompare(i8* %109, i8* %110), !dbg !7066
  store i32 %call100, i32* %diff, align 4, !dbg !7067, !tbaa !2273
  br label %if.end137, !dbg !7068

if.else101:                                       ; preds = %if.else97
  %111 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7069, !tbaa !2286
  %month102 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %111, i32 0, i32 12, !dbg !7071, !ctir !94
  %112 = load i8, i8* %month102, align 2, !dbg !7071, !tbaa !3163
  %tobool103 = trunc i8 %112 to i1, !dbg !7071, !ctir !103
  br i1 %tobool103, label %if.then104, label %if.else107, !dbg !7072

if.then104:                                       ; preds = %if.else101
  %113 = load i8*, i8** %ta, align 8, !dbg !7073, !tbaa !2286
  %call105 = call i32 @getmonth(i8* %113, i8** null), !dbg !7074
  %114 = load i8*, i8** %tb, align 8, !dbg !7075, !tbaa !2286
  %call106 = call i32 @getmonth(i8* %114, i8** null), !dbg !7076
  %sub = sub nsw i32 %call105, %call106, !dbg !7077
  store i32 %sub, i32* %diff, align 4, !dbg !7078, !tbaa !2273
  br label %if.end136, !dbg !7079

if.else107:                                       ; preds = %if.else101
  %115 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7080, !tbaa !2286
  %random108 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %115, i32 0, i32 9, !dbg !7082, !ctir !94
  %116 = load i8, i8* %random108, align 1, !dbg !7082, !tbaa !3188
  %tobool109 = trunc i8 %116 to i1, !dbg !7082, !ctir !103
  br i1 %tobool109, label %if.then110, label %if.else112, !dbg !7083

if.then110:                                       ; preds = %if.else107
  %117 = load i8*, i8** %ta, align 8, !dbg !7084, !tbaa !2286
  %118 = load i64, i64* %tlena, align 8, !dbg !7085, !tbaa !2447
  %119 = load i8*, i8** %tb, align 8, !dbg !7086, !tbaa !2286
  %120 = load i64, i64* %tlenb, align 8, !dbg !7087, !tbaa !2447
  %call111 = call i32 @compare_random(i8* %117, i64 %118, i8* %119, i64 %120), !dbg !7088
  store i32 %call111, i32* %diff, align 4, !dbg !7089, !tbaa !2273
  br label %if.end135, !dbg !7090

if.else112:                                       ; preds = %if.else107
  %121 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7091, !tbaa !2286
  %version113 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %121, i32 0, i32 14, !dbg !7093, !ctir !94
  %122 = load i8, i8* %version113, align 8, !dbg !7093, !tbaa !3183
  %tobool114 = trunc i8 %122 to i1, !dbg !7093, !ctir !103
  br i1 %tobool114, label %if.then115, label %if.else117, !dbg !7094

if.then115:                                       ; preds = %if.else112
  %123 = load i8*, i8** %ta, align 8, !dbg !7095, !tbaa !2286
  %124 = load i8*, i8** %tb, align 8, !dbg !7096, !tbaa !2286
  %call116 = call i32 @filevercmp(i8* %123, i8* %124) #14, !dbg !7097
  store i32 %call116, i32* %diff, align 4, !dbg !7098, !tbaa !2273
  br label %if.end134, !dbg !7099

if.else117:                                       ; preds = %if.else112
  %125 = load i64, i64* %tlena, align 8, !dbg !7100, !tbaa !2447
  %cmp118 = icmp eq i64 %125, 0, !dbg !7103
  br i1 %cmp118, label %if.then120, label %if.else124, !dbg !7104

if.then120:                                       ; preds = %if.else117
  %126 = load i64, i64* %tlenb, align 8, !dbg !7105, !tbaa !2447
  %cmp121 = icmp ne i64 %126, 0, !dbg !7105
  %conv122 = zext i1 %cmp121 to i32, !dbg !7105
  %sub123 = sub nsw i32 0, %conv122, !dbg !7106
  store i32 %sub123, i32* %diff, align 4, !dbg !7107, !tbaa !2273
  br label %if.end133, !dbg !7108

if.else124:                                       ; preds = %if.else117
  %127 = load i64, i64* %tlenb, align 8, !dbg !7109, !tbaa !2447
  %cmp125 = icmp eq i64 %127, 0, !dbg !7111
  br i1 %cmp125, label %if.then127, label %if.else128, !dbg !7112

if.then127:                                       ; preds = %if.else124
  store i32 1, i32* %diff, align 4, !dbg !7113, !tbaa !2273
  br label %if.end132, !dbg !7114

if.else128:                                       ; preds = %if.else124
  %128 = load i8*, i8** %ta, align 8, !dbg !7115, !tbaa !2286
  %129 = load i64, i64* %tlena, align 8, !dbg !7116, !tbaa !2447
  %add129 = add i64 %129, 1, !dbg !7117
  %130 = load i8*, i8** %tb, align 8, !dbg !7118, !tbaa !2286
  %131 = load i64, i64* %tlenb, align 8, !dbg !7119, !tbaa !2447
  %add130 = add i64 %131, 1, !dbg !7120
  %call131 = call i32 @xmemcoll0(i8* %128, i64 %add129, i8* %130, i64 %add130), !dbg !7121
  store i32 %call131, i32* %diff, align 4, !dbg !7122, !tbaa !2273
  br label %if.end132

if.end132:                                        ; preds = %if.else128, %if.then127
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then120
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then115
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then110
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then104
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then99
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then95
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then91
  %132 = load i8*, i8** %ignore, align 8, !dbg !7123, !tbaa !2286
  %tobool140 = icmp ne i8* %132, null, !dbg !7123
  br i1 %tobool140, label %if.then143, label %lor.lhs.false141, !dbg !7125

lor.lhs.false141:                                 ; preds = %if.end139
  %133 = load i8*, i8** %translate, align 8, !dbg !7126, !tbaa !2286
  %tobool142 = icmp ne i8* %133, null, !dbg !7126
  br i1 %tobool142, label %if.then143, label %if.else144, !dbg !7127

if.then143:                                       ; preds = %lor.lhs.false141, %if.end139
  %134 = load i8*, i8** %allocated, align 8, !dbg !7128, !tbaa !2286
  call void @free(i8* %134) #12, !dbg !7129
  br label %if.end147, !dbg !7129

if.else144:                                       ; preds = %lor.lhs.false141
  %135 = load i8, i8* %enda, align 1, !dbg !7130, !tbaa !2438
  %136 = load i8*, i8** %ta, align 8, !dbg !7132, !tbaa !2286
  %137 = load i64, i64* %tlena, align 8, !dbg !7133, !tbaa !2447
  %arrayidx145 = getelementptr inbounds i8, i8* %136, i64 %137, !dbg !7132, !ctir !9
  store i8 %135, i8* %arrayidx145, align 1, !dbg !7134, !tbaa !2438
  %138 = load i8, i8* %endb, align 1, !dbg !7135, !tbaa !2438
  %139 = load i8*, i8** %tb, align 8, !dbg !7136, !tbaa !2286
  %140 = load i64, i64* %tlenb, align 8, !dbg !7137, !tbaa !2447
  %arrayidx146 = getelementptr inbounds i8, i8* %139, i64 %140, !dbg !7136, !ctir !9
  store i8 %138, i8* %arrayidx146, align 1, !dbg !7138, !tbaa !2438
  br label %if.end147

if.end147:                                        ; preds = %if.else144, %if.then143
  br label %if.end323, !dbg !7139

if.else148:                                       ; preds = %lor.lhs.false17
  %141 = load i8*, i8** %ignore, align 8, !dbg !7140, !tbaa !2286
  %tobool149 = icmp ne i8* %141, null, !dbg !7140
  br i1 %tobool149, label %if.then150, label %if.else261, !dbg !7142

if.then150:                                       ; preds = %if.else148
  %142 = load i8*, i8** %translate, align 8, !dbg !7143, !tbaa !2286
  %tobool151 = icmp ne i8* %142, null, !dbg !7143
  br i1 %tobool151, label %if.then152, label %if.else206, !dbg !7146

if.then152:                                       ; preds = %if.then150
  br label %do.body, !dbg !7147

do.body:                                          ; preds = %if.then152
  br label %while.body154, !dbg !7148

while.body154:                                    ; preds = %do.body, %if.end197
  br label %while.cond155, !dbg !7150

while.cond155:                                    ; preds = %while.body163, %while.body154
  %143 = load i8*, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  %144 = load i8*, i8** %lima, align 8, !dbg !7150, !tbaa !2286
  %cmp156 = icmp ult i8* %143, %144, !dbg !7150
  br i1 %cmp156, label %land.rhs, label %land.end, !dbg !7150

land.rhs:                                         ; preds = %while.cond155
  %145 = load i8*, i8** %ignore, align 8, !dbg !7150, !tbaa !2286
  %146 = load i8*, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  %147 = load i8, i8* %146, align 1, !dbg !7150, !tbaa !2438, !ctir !10
  %call158 = call zeroext i8 @to_uchar(i8 signext %147), !dbg !7150
  %idxprom159 = zext i8 %call158 to i64, !dbg !7150
  %arrayidx160 = getelementptr inbounds i8, i8* %145, i64 %idxprom159, !dbg !7150, !ctir !101
  %148 = load i8, i8* %arrayidx160, align 1, !dbg !7150, !tbaa !2430
  %tobool161 = trunc i8 %148 to i1, !dbg !7150
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond155
  %149 = phi i1 [ false, %while.cond155 ], [ %tobool161, %land.rhs ], !dbg !7152
  br i1 %149, label %while.body163, label %while.end, !dbg !7150

while.body163:                                    ; preds = %land.end
  %150 = load i8*, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %150, i32 1, !dbg !7150
  store i8* %incdec.ptr, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  br label %while.cond155, !dbg !7150, !llvm.loop !7153

while.end:                                        ; preds = %land.end
  br label %while.cond164, !dbg !7150

while.cond164:                                    ; preds = %while.body174, %while.end
  %151 = load i8*, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  %152 = load i8*, i8** %limb, align 8, !dbg !7150, !tbaa !2286
  %cmp165 = icmp ult i8* %151, %152, !dbg !7150
  br i1 %cmp165, label %land.rhs167, label %land.end173, !dbg !7150

land.rhs167:                                      ; preds = %while.cond164
  %153 = load i8*, i8** %ignore, align 8, !dbg !7150, !tbaa !2286
  %154 = load i8*, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  %155 = load i8, i8* %154, align 1, !dbg !7150, !tbaa !2438, !ctir !10
  %call168 = call zeroext i8 @to_uchar(i8 signext %155), !dbg !7150
  %idxprom169 = zext i8 %call168 to i64, !dbg !7150
  %arrayidx170 = getelementptr inbounds i8, i8* %153, i64 %idxprom169, !dbg !7150, !ctir !101
  %156 = load i8, i8* %arrayidx170, align 1, !dbg !7150, !tbaa !2430
  %tobool171 = trunc i8 %156 to i1, !dbg !7150
  br label %land.end173

land.end173:                                      ; preds = %land.rhs167, %while.cond164
  %157 = phi i1 [ false, %while.cond164 ], [ %tobool171, %land.rhs167 ], !dbg !7152
  br i1 %157, label %while.body174, label %while.end176, !dbg !7150

while.body174:                                    ; preds = %land.end173
  %158 = load i8*, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  %incdec.ptr175 = getelementptr inbounds i8, i8* %158, i32 1, !dbg !7150
  store i8* %incdec.ptr175, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  br label %while.cond164, !dbg !7150, !llvm.loop !7154

while.end176:                                     ; preds = %land.end173
  %159 = load i8*, i8** %texta, align 8, !dbg !7155, !tbaa !2286
  %160 = load i8*, i8** %lima, align 8, !dbg !7155, !tbaa !2286
  %cmp177 = icmp ult i8* %159, %160, !dbg !7155
  br i1 %cmp177, label %land.lhs.true179, label %if.then182, !dbg !7155

land.lhs.true179:                                 ; preds = %while.end176
  %161 = load i8*, i8** %textb, align 8, !dbg !7155, !tbaa !2286
  %162 = load i8*, i8** %limb, align 8, !dbg !7155, !tbaa !2286
  %cmp180 = icmp ult i8* %161, %162, !dbg !7155
  br i1 %cmp180, label %if.end183, label %if.then182, !dbg !7150

if.then182:                                       ; preds = %land.lhs.true179, %while.end176
  br label %while.end200, !dbg !7155

if.end183:                                        ; preds = %land.lhs.true179
  %163 = load i8*, i8** %translate, align 8, !dbg !7150, !tbaa !2286
  %164 = load i8*, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  %165 = load i8, i8* %164, align 1, !dbg !7150, !tbaa !2438, !ctir !10
  %call184 = call zeroext i8 @to_uchar(i8 signext %165), !dbg !7150
  %idxprom185 = zext i8 %call184 to i64, !dbg !7150
  %arrayidx186 = getelementptr inbounds i8, i8* %163, i64 %idxprom185, !dbg !7150, !ctir !88
  %166 = load i8, i8* %arrayidx186, align 1, !dbg !7150, !tbaa !2438
  %call187 = call zeroext i8 @to_uchar(i8 signext %166), !dbg !7150
  %conv188 = zext i8 %call187 to i32, !dbg !7150
  %167 = load i8*, i8** %translate, align 8, !dbg !7150, !tbaa !2286
  %168 = load i8*, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  %169 = load i8, i8* %168, align 1, !dbg !7150, !tbaa !2438, !ctir !10
  %call189 = call zeroext i8 @to_uchar(i8 signext %169), !dbg !7150
  %idxprom190 = zext i8 %call189 to i64, !dbg !7150
  %arrayidx191 = getelementptr inbounds i8, i8* %167, i64 %idxprom190, !dbg !7150, !ctir !88
  %170 = load i8, i8* %arrayidx191, align 1, !dbg !7150, !tbaa !2438
  %call192 = call zeroext i8 @to_uchar(i8 signext %170), !dbg !7150
  %conv193 = zext i8 %call192 to i32, !dbg !7150
  %sub194 = sub nsw i32 %conv188, %conv193, !dbg !7150
  store i32 %sub194, i32* %diff, align 4, !dbg !7150, !tbaa !2273
  %171 = load i32, i32* %diff, align 4, !dbg !7157, !tbaa !2273
  %tobool195 = icmp ne i32 %171, 0, !dbg !7157
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !7150

if.then196:                                       ; preds = %if.end183
  br label %not_equal, !dbg !7157

if.end197:                                        ; preds = %if.end183
  %172 = load i8*, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  %incdec.ptr198 = getelementptr inbounds i8, i8* %172, i32 1, !dbg !7150
  store i8* %incdec.ptr198, i8** %texta, align 8, !dbg !7150, !tbaa !2286
  %173 = load i8*, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  %incdec.ptr199 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !7150
  store i8* %incdec.ptr199, i8** %textb, align 8, !dbg !7150, !tbaa !2286
  br label %while.body154, !dbg !7148, !llvm.loop !7159

while.end200:                                     ; preds = %if.then182
  %174 = load i8*, i8** %texta, align 8, !dbg !7148, !tbaa !2286
  %175 = load i8*, i8** %lima, align 8, !dbg !7148, !tbaa !2286
  %cmp201 = icmp ult i8* %174, %175, !dbg !7148
  %conv202 = zext i1 %cmp201 to i32, !dbg !7148
  %176 = load i8*, i8** %textb, align 8, !dbg !7148, !tbaa !2286
  %177 = load i8*, i8** %limb, align 8, !dbg !7148, !tbaa !2286
  %cmp203 = icmp ult i8* %176, %177, !dbg !7148
  %conv204 = zext i1 %cmp203 to i32, !dbg !7148
  %sub205 = sub nsw i32 %conv202, %conv204, !dbg !7148
  store i32 %sub205, i32* %diff, align 4, !dbg !7148, !tbaa !2273
  br label %do.end, !dbg !7148

do.end:                                           ; preds = %while.end200
  br label %if.end260, !dbg !7148

if.else206:                                       ; preds = %if.then150
  br label %do.body207, !dbg !7160

do.body207:                                       ; preds = %if.else206
  br label %while.body209, !dbg !7161

while.body209:                                    ; preds = %do.body207, %if.end250
  br label %while.cond210, !dbg !7163

while.cond210:                                    ; preds = %while.body220, %while.body209
  %178 = load i8*, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  %179 = load i8*, i8** %lima, align 8, !dbg !7163, !tbaa !2286
  %cmp211 = icmp ult i8* %178, %179, !dbg !7163
  br i1 %cmp211, label %land.rhs213, label %land.end219, !dbg !7163

land.rhs213:                                      ; preds = %while.cond210
  %180 = load i8*, i8** %ignore, align 8, !dbg !7163, !tbaa !2286
  %181 = load i8*, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  %182 = load i8, i8* %181, align 1, !dbg !7163, !tbaa !2438, !ctir !10
  %call214 = call zeroext i8 @to_uchar(i8 signext %182), !dbg !7163
  %idxprom215 = zext i8 %call214 to i64, !dbg !7163
  %arrayidx216 = getelementptr inbounds i8, i8* %180, i64 %idxprom215, !dbg !7163, !ctir !101
  %183 = load i8, i8* %arrayidx216, align 1, !dbg !7163, !tbaa !2430
  %tobool217 = trunc i8 %183 to i1, !dbg !7163
  br label %land.end219

land.end219:                                      ; preds = %land.rhs213, %while.cond210
  %184 = phi i1 [ false, %while.cond210 ], [ %tobool217, %land.rhs213 ], !dbg !7165
  br i1 %184, label %while.body220, label %while.end222, !dbg !7163

while.body220:                                    ; preds = %land.end219
  %185 = load i8*, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  %incdec.ptr221 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !7163
  store i8* %incdec.ptr221, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  br label %while.cond210, !dbg !7163, !llvm.loop !7166

while.end222:                                     ; preds = %land.end219
  br label %while.cond223, !dbg !7163

while.cond223:                                    ; preds = %while.body233, %while.end222
  %186 = load i8*, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  %187 = load i8*, i8** %limb, align 8, !dbg !7163, !tbaa !2286
  %cmp224 = icmp ult i8* %186, %187, !dbg !7163
  br i1 %cmp224, label %land.rhs226, label %land.end232, !dbg !7163

land.rhs226:                                      ; preds = %while.cond223
  %188 = load i8*, i8** %ignore, align 8, !dbg !7163, !tbaa !2286
  %189 = load i8*, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  %190 = load i8, i8* %189, align 1, !dbg !7163, !tbaa !2438, !ctir !10
  %call227 = call zeroext i8 @to_uchar(i8 signext %190), !dbg !7163
  %idxprom228 = zext i8 %call227 to i64, !dbg !7163
  %arrayidx229 = getelementptr inbounds i8, i8* %188, i64 %idxprom228, !dbg !7163, !ctir !101
  %191 = load i8, i8* %arrayidx229, align 1, !dbg !7163, !tbaa !2430
  %tobool230 = trunc i8 %191 to i1, !dbg !7163
  br label %land.end232

land.end232:                                      ; preds = %land.rhs226, %while.cond223
  %192 = phi i1 [ false, %while.cond223 ], [ %tobool230, %land.rhs226 ], !dbg !7165
  br i1 %192, label %while.body233, label %while.end235, !dbg !7163

while.body233:                                    ; preds = %land.end232
  %193 = load i8*, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  %incdec.ptr234 = getelementptr inbounds i8, i8* %193, i32 1, !dbg !7163
  store i8* %incdec.ptr234, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  br label %while.cond223, !dbg !7163, !llvm.loop !7167

while.end235:                                     ; preds = %land.end232
  %194 = load i8*, i8** %texta, align 8, !dbg !7168, !tbaa !2286
  %195 = load i8*, i8** %lima, align 8, !dbg !7168, !tbaa !2286
  %cmp236 = icmp ult i8* %194, %195, !dbg !7168
  br i1 %cmp236, label %land.lhs.true238, label %if.then241, !dbg !7168

land.lhs.true238:                                 ; preds = %while.end235
  %196 = load i8*, i8** %textb, align 8, !dbg !7168, !tbaa !2286
  %197 = load i8*, i8** %limb, align 8, !dbg !7168, !tbaa !2286
  %cmp239 = icmp ult i8* %196, %197, !dbg !7168
  br i1 %cmp239, label %if.end242, label %if.then241, !dbg !7163

if.then241:                                       ; preds = %land.lhs.true238, %while.end235
  br label %while.end253, !dbg !7168

if.end242:                                        ; preds = %land.lhs.true238
  %198 = load i8*, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  %199 = load i8, i8* %198, align 1, !dbg !7163, !tbaa !2438, !ctir !10
  %call243 = call zeroext i8 @to_uchar(i8 signext %199), !dbg !7163
  %conv244 = zext i8 %call243 to i32, !dbg !7163
  %200 = load i8*, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  %201 = load i8, i8* %200, align 1, !dbg !7163, !tbaa !2438, !ctir !10
  %call245 = call zeroext i8 @to_uchar(i8 signext %201), !dbg !7163
  %conv246 = zext i8 %call245 to i32, !dbg !7163
  %sub247 = sub nsw i32 %conv244, %conv246, !dbg !7163
  store i32 %sub247, i32* %diff, align 4, !dbg !7163, !tbaa !2273
  %202 = load i32, i32* %diff, align 4, !dbg !7170, !tbaa !2273
  %tobool248 = icmp ne i32 %202, 0, !dbg !7170
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !7163

if.then249:                                       ; preds = %if.end242
  br label %not_equal, !dbg !7170

if.end250:                                        ; preds = %if.end242
  %203 = load i8*, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  %incdec.ptr251 = getelementptr inbounds i8, i8* %203, i32 1, !dbg !7163
  store i8* %incdec.ptr251, i8** %texta, align 8, !dbg !7163, !tbaa !2286
  %204 = load i8*, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  %incdec.ptr252 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !7163
  store i8* %incdec.ptr252, i8** %textb, align 8, !dbg !7163, !tbaa !2286
  br label %while.body209, !dbg !7161, !llvm.loop !7172

while.end253:                                     ; preds = %if.then241
  %205 = load i8*, i8** %texta, align 8, !dbg !7161, !tbaa !2286
  %206 = load i8*, i8** %lima, align 8, !dbg !7161, !tbaa !2286
  %cmp254 = icmp ult i8* %205, %206, !dbg !7161
  %conv255 = zext i1 %cmp254 to i32, !dbg !7161
  %207 = load i8*, i8** %textb, align 8, !dbg !7161, !tbaa !2286
  %208 = load i8*, i8** %limb, align 8, !dbg !7161, !tbaa !2286
  %cmp256 = icmp ult i8* %207, %208, !dbg !7161
  %conv257 = zext i1 %cmp256 to i32, !dbg !7161
  %sub258 = sub nsw i32 %conv255, %conv257, !dbg !7161
  store i32 %sub258, i32* %diff, align 4, !dbg !7161, !tbaa !2273
  br label %do.end259, !dbg !7161

do.end259:                                        ; preds = %while.end253
  br label %if.end260

if.end260:                                        ; preds = %do.end259, %do.end
  br label %if.end322, !dbg !7173

if.else261:                                       ; preds = %if.else148
  %209 = load i64, i64* %lena, align 8, !dbg !7174, !tbaa !2447
  %cmp262 = icmp eq i64 %209, 0, !dbg !7176
  br i1 %cmp262, label %if.then264, label %if.else268, !dbg !7177

if.then264:                                       ; preds = %if.else261
  %210 = load i64, i64* %lenb, align 8, !dbg !7178, !tbaa !2447
  %cmp265 = icmp ne i64 %210, 0, !dbg !7178
  %conv266 = zext i1 %cmp265 to i32, !dbg !7178
  %sub267 = sub nsw i32 0, %conv266, !dbg !7179
  store i32 %sub267, i32* %diff, align 4, !dbg !7180, !tbaa !2273
  br label %if.end321, !dbg !7181

if.else268:                                       ; preds = %if.else261
  %211 = load i64, i64* %lenb, align 8, !dbg !7182, !tbaa !2447
  %cmp269 = icmp eq i64 %211, 0, !dbg !7184
  br i1 %cmp269, label %if.then271, label %if.else272, !dbg !7185

if.then271:                                       ; preds = %if.else268
  br label %greater, !dbg !7186

if.else272:                                       ; preds = %if.else268
  %212 = load i8*, i8** %translate, align 8, !dbg !7187, !tbaa !2286
  %tobool273 = icmp ne i8* %212, null, !dbg !7187
  br i1 %tobool273, label %if.then274, label %if.else300, !dbg !7190

if.then274:                                       ; preds = %if.else272
  br label %while.cond275, !dbg !7191

while.cond275:                                    ; preds = %if.end298, %if.then274
  %213 = load i8*, i8** %texta, align 8, !dbg !7193, !tbaa !2286
  %214 = load i8*, i8** %lima, align 8, !dbg !7194, !tbaa !2286
  %cmp276 = icmp ult i8* %213, %214, !dbg !7195
  br i1 %cmp276, label %land.rhs278, label %land.end281, !dbg !7196

land.rhs278:                                      ; preds = %while.cond275
  %215 = load i8*, i8** %textb, align 8, !dbg !7197, !tbaa !2286
  %216 = load i8*, i8** %limb, align 8, !dbg !7198, !tbaa !2286
  %cmp279 = icmp ult i8* %215, %216, !dbg !7199
  br label %land.end281

land.end281:                                      ; preds = %land.rhs278, %while.cond275
  %217 = phi i1 [ false, %while.cond275 ], [ %cmp279, %land.rhs278 ], !dbg !7200
  br i1 %217, label %while.body282, label %while.end299, !dbg !7191

while.body282:                                    ; preds = %land.end281
  %218 = load i8*, i8** %translate, align 8, !dbg !7201, !tbaa !2286
  %219 = load i8*, i8** %texta, align 8, !dbg !7203, !tbaa !2286
  %incdec.ptr283 = getelementptr inbounds i8, i8* %219, i32 1, !dbg !7203
  store i8* %incdec.ptr283, i8** %texta, align 8, !dbg !7203, !tbaa !2286
  %220 = load i8, i8* %219, align 1, !dbg !7204, !tbaa !2438, !ctir !10
  %call284 = call zeroext i8 @to_uchar(i8 signext %220), !dbg !7205
  %idxprom285 = zext i8 %call284 to i64, !dbg !7201
  %arrayidx286 = getelementptr inbounds i8, i8* %218, i64 %idxprom285, !dbg !7201, !ctir !88
  %221 = load i8, i8* %arrayidx286, align 1, !dbg !7201, !tbaa !2438
  %call287 = call zeroext i8 @to_uchar(i8 signext %221), !dbg !7206
  %conv288 = zext i8 %call287 to i32, !dbg !7206
  %222 = load i8*, i8** %translate, align 8, !dbg !7207, !tbaa !2286
  %223 = load i8*, i8** %textb, align 8, !dbg !7208, !tbaa !2286
  %incdec.ptr289 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !7208
  store i8* %incdec.ptr289, i8** %textb, align 8, !dbg !7208, !tbaa !2286
  %224 = load i8, i8* %223, align 1, !dbg !7209, !tbaa !2438, !ctir !10
  %call290 = call zeroext i8 @to_uchar(i8 signext %224), !dbg !7210
  %idxprom291 = zext i8 %call290 to i64, !dbg !7207
  %arrayidx292 = getelementptr inbounds i8, i8* %222, i64 %idxprom291, !dbg !7207, !ctir !88
  %225 = load i8, i8* %arrayidx292, align 1, !dbg !7207, !tbaa !2438
  %call293 = call zeroext i8 @to_uchar(i8 signext %225), !dbg !7211
  %conv294 = zext i8 %call293 to i32, !dbg !7211
  %sub295 = sub nsw i32 %conv288, %conv294, !dbg !7212
  store i32 %sub295, i32* %diff, align 4, !dbg !7213, !tbaa !2273
  %226 = load i32, i32* %diff, align 4, !dbg !7214, !tbaa !2273
  %tobool296 = icmp ne i32 %226, 0, !dbg !7214
  br i1 %tobool296, label %if.then297, label %if.end298, !dbg !7216

if.then297:                                       ; preds = %while.body282
  br label %not_equal, !dbg !7217

if.end298:                                        ; preds = %while.body282
  br label %while.cond275, !dbg !7191, !llvm.loop !7218

while.end299:                                     ; preds = %land.end281
  br label %if.end311, !dbg !7220

if.else300:                                       ; preds = %if.else272
  %227 = load i8*, i8** %texta, align 8, !dbg !7221, !tbaa !2286
  %228 = load i8*, i8** %textb, align 8, !dbg !7223, !tbaa !2286
  %229 = load i64, i64* %lena, align 8, !dbg !7224, !tbaa !2447
  %230 = load i64, i64* %lenb, align 8, !dbg !7224, !tbaa !2447
  %cmp301 = icmp ult i64 %229, %230, !dbg !7224
  br i1 %cmp301, label %cond.true303, label %cond.false304, !dbg !7224

cond.true303:                                     ; preds = %if.else300
  %231 = load i64, i64* %lena, align 8, !dbg !7224, !tbaa !2447
  br label %cond.end305, !dbg !7224

cond.false304:                                    ; preds = %if.else300
  %232 = load i64, i64* %lenb, align 8, !dbg !7224, !tbaa !2447
  br label %cond.end305, !dbg !7224

cond.end305:                                      ; preds = %cond.false304, %cond.true303
  %cond306 = phi i64 [ %231, %cond.true303 ], [ %232, %cond.false304 ], !dbg !7224
  %call307 = call i32 @memcmp(i8* %227, i8* %228, i64 %cond306) #14, !dbg !7225
  store i32 %call307, i32* %diff, align 4, !dbg !7226, !tbaa !2273
  %233 = load i32, i32* %diff, align 4, !dbg !7227, !tbaa !2273
  %tobool308 = icmp ne i32 %233, 0, !dbg !7227
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !7229

if.then309:                                       ; preds = %cond.end305
  br label %not_equal, !dbg !7230

if.end310:                                        ; preds = %cond.end305
  br label %if.end311

if.end311:                                        ; preds = %if.end310, %while.end299
  %234 = load i64, i64* %lena, align 8, !dbg !7231, !tbaa !2447
  %235 = load i64, i64* %lenb, align 8, !dbg !7232, !tbaa !2447
  %cmp312 = icmp ult i64 %234, %235, !dbg !7233
  br i1 %cmp312, label %cond.true314, label %cond.false315, !dbg !7231

cond.true314:                                     ; preds = %if.end311
  br label %cond.end318, !dbg !7231

cond.false315:                                    ; preds = %if.end311
  %236 = load i64, i64* %lena, align 8, !dbg !7234, !tbaa !2447
  %237 = load i64, i64* %lenb, align 8, !dbg !7235, !tbaa !2447
  %cmp316 = icmp ne i64 %236, %237, !dbg !7236
  %conv317 = zext i1 %cmp316 to i32, !dbg !7236
  br label %cond.end318, !dbg !7231

cond.end318:                                      ; preds = %cond.false315, %cond.true314
  %cond319 = phi i32 [ -1, %cond.true314 ], [ %conv317, %cond.false315 ], !dbg !7231
  store i32 %cond319, i32* %diff, align 4, !dbg !7237, !tbaa !2273
  br label %if.end320

if.end320:                                        ; preds = %cond.end318
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then264
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.end260
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.end147
  %238 = load i32, i32* %diff, align 4, !dbg !7238, !tbaa !2273
  %tobool324 = icmp ne i32 %238, 0, !dbg !7238
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !7240

if.then325:                                       ; preds = %if.end323
  br label %not_equal, !dbg !7241

if.end326:                                        ; preds = %if.end323
  %239 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7242, !tbaa !2286
  %next = getelementptr inbounds %struct.keyfield, %struct.keyfield* %239, i32 0, i32 16, !dbg !7243, !ctir !94
  %240 = load %struct.keyfield*, %struct.keyfield** %next, align 8, !dbg !7243, !tbaa !3203, !ctir !93
  store %struct.keyfield* %240, %struct.keyfield** %key, align 8, !dbg !7244, !tbaa !2286
  %241 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7245, !tbaa !2286
  %tobool327 = icmp ne %struct.keyfield* %241, null, !dbg !7245
  br i1 %tobool327, label %if.end329, label %if.then328, !dbg !7247

if.then328:                                       ; preds = %if.end326
  br label %while.end381, !dbg !7248

if.end329:                                        ; preds = %if.end326
  %242 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7249, !tbaa !2286
  %eword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %242, i32 0, i32 2, !dbg !7251, !ctir !94
  %243 = load i64, i64* %eword, align 8, !dbg !7251, !tbaa !2760, !ctir !55
  %cmp330 = icmp ne i64 %243, -1, !dbg !7252
  br i1 %cmp330, label %if.then332, label %if.else335, !dbg !7253

if.then332:                                       ; preds = %if.end329
  %244 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7254, !tbaa !2286
  %245 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7255, !tbaa !2286
  %call333 = call i8* @limfield(%struct.line* %244, %struct.keyfield* %245), !dbg !7256
  store i8* %call333, i8** %lima, align 8, !dbg !7257, !tbaa !2286
  %246 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7258, !tbaa !2286
  %247 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7259, !tbaa !2286
  %call334 = call i8* @limfield(%struct.line* %246, %struct.keyfield* %247), !dbg !7260
  store i8* %call334, i8** %limb, align 8, !dbg !7261, !tbaa !2286
  br label %if.end342, !dbg !7262

if.else335:                                       ; preds = %if.end329
  %248 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7263, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %248, i32 0, i32 0, !dbg !7264, !ctir !448
  %249 = load i8*, i8** %text, align 8, !dbg !7264, !tbaa !4488, !ctir !9
  %250 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7265, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %250, i32 0, i32 1, !dbg !7266, !ctir !448
  %251 = load i64, i64* %length, align 8, !dbg !7266, !tbaa !4573, !ctir !55
  %add.ptr336 = getelementptr inbounds i8, i8* %249, i64 %251, !dbg !7267
  %add.ptr337 = getelementptr inbounds i8, i8* %add.ptr336, i64 -1, !dbg !7268
  store i8* %add.ptr337, i8** %lima, align 8, !dbg !7269, !tbaa !2286
  %252 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7270, !tbaa !2286
  %text338 = getelementptr inbounds %struct.line, %struct.line* %252, i32 0, i32 0, !dbg !7271, !ctir !448
  %253 = load i8*, i8** %text338, align 8, !dbg !7271, !tbaa !4488, !ctir !9
  %254 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7272, !tbaa !2286
  %length339 = getelementptr inbounds %struct.line, %struct.line* %254, i32 0, i32 1, !dbg !7273, !ctir !448
  %255 = load i64, i64* %length339, align 8, !dbg !7273, !tbaa !4573, !ctir !55
  %add.ptr340 = getelementptr inbounds i8, i8* %253, i64 %255, !dbg !7274
  %add.ptr341 = getelementptr inbounds i8, i8* %add.ptr340, i64 -1, !dbg !7275
  store i8* %add.ptr341, i8** %limb, align 8, !dbg !7276, !tbaa !2286
  br label %if.end342

if.end342:                                        ; preds = %if.else335, %if.then332
  %256 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7277, !tbaa !2286
  %sword = getelementptr inbounds %struct.keyfield, %struct.keyfield* %256, i32 0, i32 0, !dbg !7279, !ctir !94
  %257 = load i64, i64* %sword, align 8, !dbg !7279, !tbaa !2588, !ctir !55
  %cmp343 = icmp ne i64 %257, -1, !dbg !7280
  br i1 %cmp343, label %if.then345, label %if.else348, !dbg !7281

if.then345:                                       ; preds = %if.end342
  %258 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7282, !tbaa !2286
  %259 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7283, !tbaa !2286
  %call346 = call i8* @begfield(%struct.line* %258, %struct.keyfield* %259), !dbg !7284
  store i8* %call346, i8** %texta, align 8, !dbg !7285, !tbaa !2286
  %260 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7286, !tbaa !2286
  %261 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7287, !tbaa !2286
  %call347 = call i8* @begfield(%struct.line* %260, %struct.keyfield* %261), !dbg !7288
  store i8* %call347, i8** %textb, align 8, !dbg !7289, !tbaa !2286
  br label %if.end380, !dbg !7290

if.else348:                                       ; preds = %if.end342
  %262 = load %struct.line*, %struct.line** %a.addr, align 8, !dbg !7291, !tbaa !2286
  %text349 = getelementptr inbounds %struct.line, %struct.line* %262, i32 0, i32 0, !dbg !7293, !ctir !448
  %263 = load i8*, i8** %text349, align 8, !dbg !7293, !tbaa !4488, !ctir !9
  store i8* %263, i8** %texta, align 8, !dbg !7294, !tbaa !2286
  %264 = load %struct.line*, %struct.line** %b.addr, align 8, !dbg !7295, !tbaa !2286
  %text350 = getelementptr inbounds %struct.line, %struct.line* %264, i32 0, i32 0, !dbg !7296, !ctir !448
  %265 = load i8*, i8** %text350, align 8, !dbg !7296, !tbaa !4488, !ctir !9
  store i8* %265, i8** %textb, align 8, !dbg !7297, !tbaa !2286
  %266 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7298, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %266, i32 0, i32 6, !dbg !7300, !ctir !94
  %267 = load i8, i8* %skipsblanks, align 8, !dbg !7300, !tbaa !3153
  %tobool351 = trunc i8 %267 to i1, !dbg !7300, !ctir !103
  br i1 %tobool351, label %if.then352, label %if.end379, !dbg !7301

if.then352:                                       ; preds = %if.else348
  br label %while.cond353, !dbg !7302

while.cond353:                                    ; preds = %while.body363, %if.then352
  %268 = load i8*, i8** %texta, align 8, !dbg !7304, !tbaa !2286
  %269 = load i8*, i8** %lima, align 8, !dbg !7305, !tbaa !2286
  %cmp354 = icmp ult i8* %268, %269, !dbg !7306
  br i1 %cmp354, label %land.rhs356, label %land.end362, !dbg !7307

land.rhs356:                                      ; preds = %while.cond353
  %270 = load i8*, i8** %texta, align 8, !dbg !7308, !tbaa !2286
  %271 = load i8, i8* %270, align 1, !dbg !7309, !tbaa !2438, !ctir !10
  %call357 = call zeroext i8 @to_uchar(i8 signext %271), !dbg !7310
  %idxprom358 = zext i8 %call357 to i64, !dbg !7311
  %arrayidx359 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom358, !dbg !7311, !ctir !322
  %272 = load i8, i8* %arrayidx359, align 1, !dbg !7311, !tbaa !2430
  %tobool360 = trunc i8 %272 to i1, !dbg !7311
  br label %land.end362

land.end362:                                      ; preds = %land.rhs356, %while.cond353
  %273 = phi i1 [ false, %while.cond353 ], [ %tobool360, %land.rhs356 ], !dbg !7312
  br i1 %273, label %while.body363, label %while.end365, !dbg !7302

while.body363:                                    ; preds = %land.end362
  %274 = load i8*, i8** %texta, align 8, !dbg !7313, !tbaa !2286
  %incdec.ptr364 = getelementptr inbounds i8, i8* %274, i32 1, !dbg !7313
  store i8* %incdec.ptr364, i8** %texta, align 8, !dbg !7313, !tbaa !2286
  br label %while.cond353, !dbg !7302, !llvm.loop !7314

while.end365:                                     ; preds = %land.end362
  br label %while.cond366, !dbg !7316

while.cond366:                                    ; preds = %while.body376, %while.end365
  %275 = load i8*, i8** %textb, align 8, !dbg !7317, !tbaa !2286
  %276 = load i8*, i8** %limb, align 8, !dbg !7318, !tbaa !2286
  %cmp367 = icmp ult i8* %275, %276, !dbg !7319
  br i1 %cmp367, label %land.rhs369, label %land.end375, !dbg !7320

land.rhs369:                                      ; preds = %while.cond366
  %277 = load i8*, i8** %textb, align 8, !dbg !7321, !tbaa !2286
  %278 = load i8, i8* %277, align 1, !dbg !7322, !tbaa !2438, !ctir !10
  %call370 = call zeroext i8 @to_uchar(i8 signext %278), !dbg !7323
  %idxprom371 = zext i8 %call370 to i64, !dbg !7324
  %arrayidx372 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom371, !dbg !7324, !ctir !322
  %279 = load i8, i8* %arrayidx372, align 1, !dbg !7324, !tbaa !2430
  %tobool373 = trunc i8 %279 to i1, !dbg !7324
  br label %land.end375

land.end375:                                      ; preds = %land.rhs369, %while.cond366
  %280 = phi i1 [ false, %while.cond366 ], [ %tobool373, %land.rhs369 ], !dbg !7312
  br i1 %280, label %while.body376, label %while.end378, !dbg !7316

while.body376:                                    ; preds = %land.end375
  %281 = load i8*, i8** %textb, align 8, !dbg !7325, !tbaa !2286
  %incdec.ptr377 = getelementptr inbounds i8, i8* %281, i32 1, !dbg !7325
  store i8* %incdec.ptr377, i8** %textb, align 8, !dbg !7325, !tbaa !2286
  br label %while.cond366, !dbg !7316, !llvm.loop !7326

while.end378:                                     ; preds = %land.end375
  br label %if.end379, !dbg !7328

if.end379:                                        ; preds = %while.end378, %if.else348
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.then345
  br label %while.body, !dbg !6860, !llvm.loop !7329

while.end381:                                     ; preds = %if.then328
  store i32 0, i32* %retval, align 4, !dbg !7331
  br label %return, !dbg !7331

greater:                                          ; preds = %if.then271
  call void @llvm.dbg.label(metadata !7332), !dbg !7333
  store i32 1, i32* %diff, align 4, !dbg !7334, !tbaa !2273
  br label %not_equal, !dbg !7335

not_equal:                                        ; preds = %greater, %if.then325, %if.then309, %if.then297, %if.then249, %if.then196
  call void @llvm.dbg.label(metadata !7336), !dbg !7337
  %282 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !7338, !tbaa !2286
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %282, i32 0, i32 13, !dbg !7339, !ctir !94
  %283 = load i8, i8* %reverse, align 1, !dbg !7339, !tbaa !3139
  %tobool382 = trunc i8 %283 to i1, !dbg !7339, !ctir !103
  br i1 %tobool382, label %cond.true384, label %cond.false386, !dbg !7338

cond.true384:                                     ; preds = %not_equal
  %284 = load i32, i32* %diff, align 4, !dbg !7340, !tbaa !2273
  %sub385 = sub nsw i32 0, %284, !dbg !7341
  br label %cond.end387, !dbg !7338

cond.false386:                                    ; preds = %not_equal
  %285 = load i32, i32* %diff, align 4, !dbg !7342, !tbaa !2273
  br label %cond.end387, !dbg !7338

cond.end387:                                      ; preds = %cond.false386, %cond.true384
  %cond388 = phi i32 [ %sub385, %cond.true384 ], [ %285, %cond.false386 ], !dbg !7338
  store i32 %cond388, i32* %retval, align 4, !dbg !7343
  br label %return, !dbg !7343

return:                                           ; preds = %cond.end387, %while.end381
  %286 = load i32, i32* %retval, align 4, !dbg !7344
  ret i32 %286, !dbg !7344
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numcompare(i8* %a, i8* %b) #4 !dbg !7345 !ctir !481 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7346, metadata !DIExpression()), !dbg !7347
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7348, metadata !DIExpression()), !dbg !7349
  br label %while.cond, !dbg !7350

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7351, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !7352, !tbaa !2438, !ctir !89
  %call = call zeroext i8 @to_uchar(i8 signext %1), !dbg !7353
  %idxprom = zext i8 %call to i64, !dbg !7354
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !7354, !ctir !322
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7354, !tbaa !2430
  %tobool = trunc i8 %2 to i1, !dbg !7354
  br i1 %tobool, label %while.body, label %while.end, !dbg !7350

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %a.addr, align 8, !dbg !7355, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7355
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !7355, !tbaa !2286
  br label %while.cond, !dbg !7350, !llvm.loop !7356

while.end:                                        ; preds = %while.cond
  br label %while.cond1, !dbg !7357

while.cond1:                                      ; preds = %while.body6, %while.end
  %4 = load i8*, i8** %b.addr, align 8, !dbg !7358, !tbaa !2286
  %5 = load i8, i8* %4, align 1, !dbg !7359, !tbaa !2438, !ctir !89
  %call2 = call zeroext i8 @to_uchar(i8 signext %5), !dbg !7360
  %idxprom3 = zext i8 %call2 to i64, !dbg !7361
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom3, !dbg !7361, !ctir !322
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !7361, !tbaa !2430
  %tobool5 = trunc i8 %6 to i1, !dbg !7361
  br i1 %tobool5, label %while.body6, label %while.end8, !dbg !7357

while.body6:                                      ; preds = %while.cond1
  %7 = load i8*, i8** %b.addr, align 8, !dbg !7362, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7362
  store i8* %incdec.ptr7, i8** %b.addr, align 8, !dbg !7362, !tbaa !2286
  br label %while.cond1, !dbg !7357, !llvm.loop !7363

while.end8:                                       ; preds = %while.cond1
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7364, !tbaa !2286
  %9 = load i8*, i8** %b.addr, align 8, !dbg !7365, !tbaa !2286
  %10 = load i32, i32* @decimal_point, align 4, !dbg !7366, !tbaa !2273
  %11 = load i32, i32* @thousands_sep, align 4, !dbg !7367, !tbaa !2273
  %call9 = call i32 @strnumcmp(i8* %8, i8* %9, i32 %10, i32 %11), !dbg !7368
  ret i32 %call9, !dbg !7369
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @general_numcompare(i8* %sa, i8* %sb) #4 !dbg !7370 !ctir !481 {
entry:
  %retval = alloca i32, align 4
  %sa.addr = alloca i8*, align 8
  %sb.addr = alloca i8*, align 8
  %ea = alloca i8*, align 8, !ctir !9
  %eb = alloca i8*, align 8, !ctir !9
  %a = alloca x86_fp80, align 16, !ctir !483
  %b = alloca x86_fp80, align 16, !ctir !483
  store i8* %sa, i8** %sa.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %sa.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i8* %sb, i8** %sb.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %sb.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.declare(metadata i8** %ea, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.declare(metadata i8** %eb, metadata !7377, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.declare(metadata x86_fp80* %a, metadata !7379, metadata !DIExpression()), !dbg !7380
  %0 = load i8*, i8** %sa.addr, align 8, !dbg !7381, !tbaa !2286
  %call = call x86_fp80 @strtold(i8* %0, i8** %ea) #12, !dbg !7382
  store x86_fp80 %call, x86_fp80* %a, align 16, !dbg !7380, !tbaa !6297
  call void @llvm.dbg.declare(metadata x86_fp80* %b, metadata !7383, metadata !DIExpression()), !dbg !7384
  %1 = load i8*, i8** %sb.addr, align 8, !dbg !7385, !tbaa !2286
  %call1 = call x86_fp80 @strtold(i8* %1, i8** %eb) #12, !dbg !7386
  store x86_fp80 %call1, x86_fp80* %b, align 16, !dbg !7384, !tbaa !6297
  %2 = load i8*, i8** %sa.addr, align 8, !dbg !7387, !tbaa !2286
  %3 = load i8*, i8** %ea, align 8, !dbg !7389, !tbaa !2286
  %cmp = icmp eq i8* %2, %3, !dbg !7390
  br i1 %cmp, label %if.then, label %if.end, !dbg !7391

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %sb.addr, align 8, !dbg !7392, !tbaa !2286
  %5 = load i8*, i8** %eb, align 8, !dbg !7393, !tbaa !2286
  %cmp2 = icmp eq i8* %4, %5, !dbg !7394
  %6 = zext i1 %cmp2 to i64, !dbg !7392
  %cond = select i1 %cmp2, i32 0, i32 -1, !dbg !7392
  store i32 %cond, i32* %retval, align 4, !dbg !7395
  br label %return, !dbg !7395

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %sb.addr, align 8, !dbg !7396, !tbaa !2286
  %8 = load i8*, i8** %eb, align 8, !dbg !7398, !tbaa !2286
  %cmp3 = icmp eq i8* %7, %8, !dbg !7399
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7400

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7401
  br label %return, !dbg !7401

if.end5:                                          ; preds = %if.end
  %9 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7402, !tbaa !6297
  %10 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7403, !tbaa !6297
  %cmp6 = fcmp olt x86_fp80 %9, %10, !dbg !7404
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !7402

cond.true:                                        ; preds = %if.end5
  br label %cond.end27, !dbg !7402

cond.false:                                       ; preds = %if.end5
  %11 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7405, !tbaa !6297
  %12 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7406, !tbaa !6297
  %cmp7 = fcmp ogt x86_fp80 %11, %12, !dbg !7407
  br i1 %cmp7, label %cond.true8, label %cond.false9, !dbg !7405

cond.true8:                                       ; preds = %cond.false
  br label %cond.end25, !dbg !7405

cond.false9:                                      ; preds = %cond.false
  %13 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7408, !tbaa !6297
  %14 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7409, !tbaa !6297
  %cmp10 = fcmp oeq x86_fp80 %13, %14, !dbg !7410
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !7408

cond.true11:                                      ; preds = %cond.false9
  br label %cond.end23, !dbg !7408

cond.false12:                                     ; preds = %cond.false9
  %15 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7411, !tbaa !6297
  %16 = load x86_fp80, x86_fp80* %b, align 16, !dbg !7412, !tbaa !6297
  %cmp13 = fcmp oeq x86_fp80 %15, %16, !dbg !7413
  br i1 %cmp13, label %cond.true14, label %cond.false15, !dbg !7411

cond.true14:                                      ; preds = %cond.false12
  br label %cond.end21, !dbg !7411

cond.false15:                                     ; preds = %cond.false12
  %17 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7414, !tbaa !6297
  %18 = load x86_fp80, x86_fp80* %a, align 16, !dbg !7415, !tbaa !6297
  %cmp16 = fcmp oeq x86_fp80 %17, %18, !dbg !7416
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !7414

cond.true17:                                      ; preds = %cond.false15
  br label %cond.end, !dbg !7414

cond.false18:                                     ; preds = %cond.false15
  %19 = load i8*, i8** %sa.addr, align 8, !dbg !7417, !tbaa !2286
  %20 = load i8*, i8** %sb.addr, align 8, !dbg !7418, !tbaa !2286
  %call19 = call i32 @nan_compare(i8* %19, i8* %20), !dbg !7419
  br label %cond.end, !dbg !7414

cond.end:                                         ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 1, %cond.true17 ], [ %call19, %cond.false18 ], !dbg !7414
  br label %cond.end21, !dbg !7411

cond.end21:                                       ; preds = %cond.end, %cond.true14
  %cond22 = phi i32 [ -1, %cond.true14 ], [ %cond20, %cond.end ], !dbg !7411
  br label %cond.end23, !dbg !7408

cond.end23:                                       ; preds = %cond.end21, %cond.true11
  %cond24 = phi i32 [ 0, %cond.true11 ], [ %cond22, %cond.end21 ], !dbg !7408
  br label %cond.end25, !dbg !7405

cond.end25:                                       ; preds = %cond.end23, %cond.true8
  %cond26 = phi i32 [ 1, %cond.true8 ], [ %cond24, %cond.end23 ], !dbg !7405
  br label %cond.end27, !dbg !7402

cond.end27:                                       ; preds = %cond.end25, %cond.true
  %cond28 = phi i32 [ -1, %cond.true ], [ %cond26, %cond.end25 ], !dbg !7402
  store i32 %cond28, i32* %retval, align 4, !dbg !7420
  br label %return, !dbg !7420

return:                                           ; preds = %cond.end27, %if.then4, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7421
  ret i32 %21, !dbg !7421
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @human_numcompare(i8* %a, i8* %b) #4 !dbg !7422 !ctir !481 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %diff = alloca i32, align 4, !ctir !7
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7423, metadata !DIExpression()), !dbg !7424
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  br label %while.cond, !dbg !7427

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7428, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !7429, !tbaa !2438, !ctir !89
  %call = call zeroext i8 @to_uchar(i8 signext %1), !dbg !7430
  %idxprom = zext i8 %call to i64, !dbg !7431
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom, !dbg !7431, !ctir !322
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7431, !tbaa !2430
  %tobool = trunc i8 %2 to i1, !dbg !7431
  br i1 %tobool, label %while.body, label %while.end, !dbg !7427

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %a.addr, align 8, !dbg !7432, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7432
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !7432, !tbaa !2286
  br label %while.cond, !dbg !7427, !llvm.loop !7433

while.end:                                        ; preds = %while.cond
  br label %while.cond1, !dbg !7434

while.cond1:                                      ; preds = %while.body6, %while.end
  %4 = load i8*, i8** %b.addr, align 8, !dbg !7435, !tbaa !2286
  %5 = load i8, i8* %4, align 1, !dbg !7436, !tbaa !2438, !ctir !89
  %call2 = call zeroext i8 @to_uchar(i8 signext %5), !dbg !7437
  %idxprom3 = zext i8 %call2 to i64, !dbg !7438
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @blanks, i64 0, i64 %idxprom3, !dbg !7438, !ctir !322
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !7438, !tbaa !2430
  %tobool5 = trunc i8 %6 to i1, !dbg !7438
  br i1 %tobool5, label %while.body6, label %while.end8, !dbg !7434

while.body6:                                      ; preds = %while.cond1
  %7 = load i8*, i8** %b.addr, align 8, !dbg !7439, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7439
  store i8* %incdec.ptr7, i8** %b.addr, align 8, !dbg !7439, !tbaa !2286
  br label %while.cond1, !dbg !7434, !llvm.loop !7440

while.end8:                                       ; preds = %while.cond1
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7441, metadata !DIExpression()), !dbg !7442
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7443, !tbaa !2286
  %call9 = call i32 @find_unit_order(i8* %8) #14, !dbg !7444
  %9 = load i8*, i8** %b.addr, align 8, !dbg !7445, !tbaa !2286
  %call10 = call i32 @find_unit_order(i8* %9) #14, !dbg !7446
  %sub = sub nsw i32 %call9, %call10, !dbg !7447
  store i32 %sub, i32* %diff, align 4, !dbg !7442, !tbaa !2273
  %10 = load i32, i32* %diff, align 4, !dbg !7448, !tbaa !2273
  %tobool11 = icmp ne i32 %10, 0, !dbg !7448
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !7448

cond.true:                                        ; preds = %while.end8
  %11 = load i32, i32* %diff, align 4, !dbg !7449, !tbaa !2273
  br label %cond.end, !dbg !7448

cond.false:                                       ; preds = %while.end8
  %12 = load i8*, i8** %a.addr, align 8, !dbg !7450, !tbaa !2286
  %13 = load i8*, i8** %b.addr, align 8, !dbg !7451, !tbaa !2286
  %14 = load i32, i32* @decimal_point, align 4, !dbg !7452, !tbaa !2273
  %15 = load i32, i32* @thousands_sep, align 4, !dbg !7453, !tbaa !2273
  %call12 = call i32 @strnumcmp(i8* %12, i8* %13, i32 %14, i32 %15), !dbg !7454
  br label %cond.end, !dbg !7448

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %call12, %cond.false ], !dbg !7448
  ret i32 %cond, !dbg !7455
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare_random(i8* noalias %texta, i64 %lena, i8* noalias %textb, i64 %lenb) #4 !dbg !7456 !ctir !491 {
entry:
  %texta.addr = alloca i8*, align 8
  %lena.addr = alloca i64, align 8
  %textb.addr = alloca i8*, align 8
  %lenb.addr = alloca i64, align 8
  %xfrm_diff = alloca i32, align 4, !ctir !7
  %stackbuf = alloca [4000 x i8], align 16, !ctir !478
  %buf = alloca i8*, align 8, !ctir !9
  %bufsize = alloca i64, align 8, !ctir !55
  %allocated = alloca i8*, align 8, !ctir !53
  %dig = alloca [2 x [4 x i32]], align 16, !ctir !494
  %s = alloca [2 x %struct.md5_ctx], align 16, !ctir !498
  %lima = alloca i8*, align 8, !ctir !88
  %limb = alloca i8*, align 8, !ctir !88
  %guess_bufsize = alloca i64, align 8, !ctir !55
  %sizea = alloca i64, align 8, !ctir !55
  %a_fits = alloca i8, align 1, !ctir !103
  %sizeb = alloca i64, align 8, !ctir !55
  %diff = alloca i32, align 4, !ctir !7
  store i8* %texta, i8** %texta.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %texta.addr, metadata !7457, metadata !DIExpression()), !dbg !7458
  store i64 %lena, i64* %lena.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %lena.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  store i8* %textb, i8** %textb.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %textb.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store i64 %lenb, i64* %lenb.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %lenb.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata i32* %xfrm_diff, metadata !7465, metadata !DIExpression()), !dbg !7466
  store i32 0, i32* %xfrm_diff, align 4, !dbg !7466, !tbaa !2273
  call void @llvm.dbg.declare(metadata [4000 x i8]* %stackbuf, metadata !7467, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7469, metadata !DIExpression()), !dbg !7470
  %arraydecay = getelementptr inbounds [4000 x i8], [4000 x i8]* %stackbuf, i64 0, i64 0, !dbg !7471
  store i8* %arraydecay, i8** %buf, align 8, !dbg !7470, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !7472, metadata !DIExpression()), !dbg !7473
  store i64 4000, i64* %bufsize, align 8, !dbg !7473, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %allocated, metadata !7474, metadata !DIExpression()), !dbg !7475
  store i8* null, i8** %allocated, align 8, !dbg !7475, !tbaa !2286
  call void @llvm.dbg.declare(metadata [2 x [4 x i32]]* %dig, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata [2 x %struct.md5_ctx]* %s, metadata !7478, metadata !DIExpression()), !dbg !7479
  %arrayidx = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7480, !ctir !498
  %arrayidx1 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7481, !ctir !498
  %0 = bitcast %struct.md5_ctx* %arrayidx1 to i8*, !dbg !7482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast (%struct.md5_ctx* @random_md5_state to i8*), i64 156, i1 false), !dbg !7482, !tbaa.struct !7483
  %1 = bitcast %struct.md5_ctx* %arrayidx to i8*, !dbg !7484
  %2 = bitcast %struct.md5_ctx* %arrayidx1 to i8*, !dbg !7484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 4 %2, i64 156, i1 false), !dbg !7484, !tbaa.struct !7483
  %3 = load i8, i8* @hard_LC_COLLATE, align 1, !dbg !7485, !tbaa !2430
  %tobool = trunc i8 %3 to i1, !dbg !7485
  br i1 %tobool, label %if.then, label %if.end97, !dbg !7487

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %lima, metadata !7488, metadata !DIExpression()), !dbg !7490
  %4 = load i8*, i8** %texta.addr, align 8, !dbg !7491, !tbaa !2286
  %5 = load i64, i64* %lena.addr, align 8, !dbg !7492, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !7493
  store i8* %add.ptr, i8** %lima, align 8, !dbg !7490, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %limb, metadata !7494, metadata !DIExpression()), !dbg !7495
  %6 = load i8*, i8** %textb.addr, align 8, !dbg !7496, !tbaa !2286
  %7 = load i64, i64* %lenb.addr, align 8, !dbg !7497, !tbaa !2447
  %add.ptr2 = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !7498
  store i8* %add.ptr2, i8** %limb, align 8, !dbg !7495, !tbaa !2286
  br label %while.body, !dbg !7499

while.body:                                       ; preds = %if.then, %if.end96
  call void @llvm.dbg.declare(metadata i64* %guess_bufsize, metadata !7500, metadata !DIExpression()), !dbg !7502
  %8 = load i64, i64* %lena.addr, align 8, !dbg !7503, !tbaa !2447
  %9 = load i64, i64* %lenb.addr, align 8, !dbg !7504, !tbaa !2447
  %add = add i64 %8, %9, !dbg !7505
  %mul = mul i64 3, %add, !dbg !7506
  %add3 = add i64 %mul, 2, !dbg !7507
  store i64 %add3, i64* %guess_bufsize, align 8, !dbg !7502, !tbaa !2447
  %10 = load i64, i64* %bufsize, align 8, !dbg !7508, !tbaa !2447
  %11 = load i64, i64* %guess_bufsize, align 8, !dbg !7510, !tbaa !2447
  %cmp = icmp ult i64 %10, %11, !dbg !7511
  br i1 %cmp, label %if.then4, label %if.end12, !dbg !7512

if.then4:                                         ; preds = %while.body
  %12 = load i64, i64* %guess_bufsize, align 8, !dbg !7513, !tbaa !2447
  %13 = load i64, i64* %bufsize, align 8, !dbg !7513, !tbaa !2447
  %mul5 = mul i64 %13, 3, !dbg !7513
  %div = udiv i64 %mul5, 2, !dbg !7513
  %cmp6 = icmp ugt i64 %12, %div, !dbg !7513
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !7513

cond.true:                                        ; preds = %if.then4
  %14 = load i64, i64* %guess_bufsize, align 8, !dbg !7513, !tbaa !2447
  br label %cond.end, !dbg !7513

cond.false:                                       ; preds = %if.then4
  %15 = load i64, i64* %bufsize, align 8, !dbg !7513, !tbaa !2447
  %mul7 = mul i64 %15, 3, !dbg !7513
  %div8 = udiv i64 %mul7, 2, !dbg !7513
  br label %cond.end, !dbg !7513

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %14, %cond.true ], [ %div8, %cond.false ], !dbg !7513
  store i64 %cond, i64* %bufsize, align 8, !dbg !7515, !tbaa !2447
  %16 = load i8*, i8** %allocated, align 8, !dbg !7516, !tbaa !2286
  call void @free(i8* %16) #12, !dbg !7517
  %17 = load i64, i64* %bufsize, align 8, !dbg !7518, !tbaa !2447
  %call = call noalias i8* @malloc(i64 %17) #12, !dbg !7519
  store i8* %call, i8** %allocated, align 8, !dbg !7520, !tbaa !2286
  store i8* %call, i8** %buf, align 8, !dbg !7521, !tbaa !2286
  %18 = load i8*, i8** %buf, align 8, !dbg !7522, !tbaa !2286
  %tobool9 = icmp ne i8* %18, null, !dbg !7522
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !7524

if.then10:                                        ; preds = %cond.end
  %arraydecay11 = getelementptr inbounds [4000 x i8], [4000 x i8]* %stackbuf, i64 0, i64 0, !dbg !7525
  store i8* %arraydecay11, i8** %buf, align 8, !dbg !7527, !tbaa !2286
  store i64 4000, i64* %bufsize, align 8, !dbg !7528, !tbaa !2447
  br label %if.end, !dbg !7529

if.end:                                           ; preds = %if.then10, %cond.end
  br label %if.end12, !dbg !7530

if.end12:                                         ; preds = %if.end, %while.body
  call void @llvm.dbg.declare(metadata i64* %sizea, metadata !7531, metadata !DIExpression()), !dbg !7532
  %19 = load i8*, i8** %texta.addr, align 8, !dbg !7533, !tbaa !2286
  %20 = load i8*, i8** %lima, align 8, !dbg !7534, !tbaa !2286
  %cmp13 = icmp ult i8* %19, %20, !dbg !7535
  br i1 %cmp13, label %cond.true14, label %cond.false17, !dbg !7533

cond.true14:                                      ; preds = %if.end12
  %21 = load i8*, i8** %buf, align 8, !dbg !7536, !tbaa !2286
  %22 = load i8*, i8** %texta.addr, align 8, !dbg !7537, !tbaa !2286
  %23 = load i64, i64* %bufsize, align 8, !dbg !7538, !tbaa !2447
  %call15 = call i64 @xstrxfrm(i8* %21, i8* %22, i64 %23), !dbg !7539
  %add16 = add i64 %call15, 1, !dbg !7540
  br label %cond.end18, !dbg !7533

cond.false17:                                     ; preds = %if.end12
  br label %cond.end18, !dbg !7533

cond.end18:                                       ; preds = %cond.false17, %cond.true14
  %cond19 = phi i64 [ %add16, %cond.true14 ], [ 0, %cond.false17 ], !dbg !7533
  store i64 %cond19, i64* %sizea, align 8, !dbg !7532, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8* %a_fits, metadata !7541, metadata !DIExpression()), !dbg !7542
  %24 = load i64, i64* %sizea, align 8, !dbg !7543, !tbaa !2447
  %25 = load i64, i64* %bufsize, align 8, !dbg !7544, !tbaa !2447
  %cmp20 = icmp ule i64 %24, %25, !dbg !7545
  %frombool = zext i1 %cmp20 to i8, !dbg !7542
  store i8 %frombool, i8* %a_fits, align 1, !dbg !7542, !tbaa !2430
  call void @llvm.dbg.declare(metadata i64* %sizeb, metadata !7546, metadata !DIExpression()), !dbg !7547
  %26 = load i8*, i8** %textb.addr, align 8, !dbg !7548, !tbaa !2286
  %27 = load i8*, i8** %limb, align 8, !dbg !7549, !tbaa !2286
  %cmp21 = icmp ult i8* %26, %27, !dbg !7550
  br i1 %cmp21, label %cond.true22, label %cond.false36, !dbg !7548

cond.true22:                                      ; preds = %cond.end18
  %28 = load i8, i8* %a_fits, align 1, !dbg !7551, !tbaa !2430
  %tobool23 = trunc i8 %28 to i1, !dbg !7551
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !7551

cond.true24:                                      ; preds = %cond.true22
  %29 = load i8*, i8** %buf, align 8, !dbg !7552, !tbaa !2286
  %30 = load i64, i64* %sizea, align 8, !dbg !7553, !tbaa !2447
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !7554
  br label %cond.end27, !dbg !7551

cond.false26:                                     ; preds = %cond.true22
  br label %cond.end27, !dbg !7551

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i8* [ %add.ptr25, %cond.true24 ], [ null, %cond.false26 ], !dbg !7551
  %31 = load i8*, i8** %textb.addr, align 8, !dbg !7555, !tbaa !2286
  %32 = load i8, i8* %a_fits, align 1, !dbg !7556, !tbaa !2430
  %tobool29 = trunc i8 %32 to i1, !dbg !7556
  br i1 %tobool29, label %cond.true30, label %cond.false31, !dbg !7556

cond.true30:                                      ; preds = %cond.end27
  %33 = load i64, i64* %bufsize, align 8, !dbg !7557, !tbaa !2447
  %34 = load i64, i64* %sizea, align 8, !dbg !7558, !tbaa !2447
  %sub = sub i64 %33, %34, !dbg !7559
  br label %cond.end32, !dbg !7556

cond.false31:                                     ; preds = %cond.end27
  br label %cond.end32, !dbg !7556

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i64 [ %sub, %cond.true30 ], [ 0, %cond.false31 ], !dbg !7556
  %call34 = call i64 @xstrxfrm(i8* %cond28, i8* %31, i64 %cond33), !dbg !7560
  %add35 = add i64 %call34, 1, !dbg !7561
  br label %cond.end37, !dbg !7548

cond.false36:                                     ; preds = %cond.end18
  br label %cond.end37, !dbg !7548

cond.end37:                                       ; preds = %cond.false36, %cond.end32
  %cond38 = phi i64 [ %add35, %cond.end32 ], [ 0, %cond.false36 ], !dbg !7548
  store i64 %cond38, i64* %sizeb, align 8, !dbg !7547, !tbaa !2447
  %35 = load i8, i8* %a_fits, align 1, !dbg !7562, !tbaa !2430
  %tobool39 = trunc i8 %35 to i1, !dbg !7562
  br i1 %tobool39, label %land.lhs.true, label %if.then42, !dbg !7564

land.lhs.true:                                    ; preds = %cond.end37
  %36 = load i64, i64* %sizea, align 8, !dbg !7565, !tbaa !2447
  %37 = load i64, i64* %sizeb, align 8, !dbg !7566, !tbaa !2447
  %add40 = add i64 %36, %37, !dbg !7567
  %38 = load i64, i64* %bufsize, align 8, !dbg !7568, !tbaa !2447
  %cmp41 = icmp ule i64 %add40, %38, !dbg !7569
  br i1 %cmp41, label %if.end59, label %if.then42, !dbg !7570

if.then42:                                        ; preds = %land.lhs.true, %cond.end37
  %39 = load i64, i64* %sizea, align 8, !dbg !7571, !tbaa !2447
  %40 = load i64, i64* %sizeb, align 8, !dbg !7573, !tbaa !2447
  %add43 = add i64 %39, %40, !dbg !7574
  store i64 %add43, i64* %bufsize, align 8, !dbg !7575, !tbaa !2447
  %41 = load i64, i64* %bufsize, align 8, !dbg !7576, !tbaa !2447
  %cmp44 = icmp ult i64 %41, 6148914691236517205, !dbg !7578
  br i1 %cmp44, label %if.then45, label %if.end48, !dbg !7579

if.then45:                                        ; preds = %if.then42
  %42 = load i64, i64* %bufsize, align 8, !dbg !7580, !tbaa !2447
  %mul46 = mul i64 %42, 3, !dbg !7581
  %div47 = udiv i64 %mul46, 2, !dbg !7582
  store i64 %div47, i64* %bufsize, align 8, !dbg !7583, !tbaa !2447
  br label %if.end48, !dbg !7584

if.end48:                                         ; preds = %if.then45, %if.then42
  %43 = load i8*, i8** %allocated, align 8, !dbg !7585, !tbaa !2286
  call void @free(i8* %43) #12, !dbg !7586
  %44 = load i64, i64* %bufsize, align 8, !dbg !7587, !tbaa !2447
  %call49 = call noalias i8* @xmalloc(i64 %44), !dbg !7588
  store i8* %call49, i8** %allocated, align 8, !dbg !7589, !tbaa !2286
  store i8* %call49, i8** %buf, align 8, !dbg !7590, !tbaa !2286
  %45 = load i8*, i8** %texta.addr, align 8, !dbg !7591, !tbaa !2286
  %46 = load i8*, i8** %lima, align 8, !dbg !7593, !tbaa !2286
  %cmp50 = icmp ult i8* %45, %46, !dbg !7594
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !7595

if.then51:                                        ; preds = %if.end48
  %47 = load i8*, i8** %buf, align 8, !dbg !7596, !tbaa !2286
  %48 = load i8*, i8** %texta.addr, align 8, !dbg !7597, !tbaa !2286
  %49 = load i64, i64* %sizea, align 8, !dbg !7598, !tbaa !2447
  %call52 = call i64 @strxfrm(i8* %47, i8* %48, i64 %49) #12, !dbg !7599
  br label %if.end53, !dbg !7599

if.end53:                                         ; preds = %if.then51, %if.end48
  %50 = load i8*, i8** %textb.addr, align 8, !dbg !7600, !tbaa !2286
  %51 = load i8*, i8** %limb, align 8, !dbg !7602, !tbaa !2286
  %cmp54 = icmp ult i8* %50, %51, !dbg !7603
  br i1 %cmp54, label %if.then55, label %if.end58, !dbg !7604

if.then55:                                        ; preds = %if.end53
  %52 = load i8*, i8** %buf, align 8, !dbg !7605, !tbaa !2286
  %53 = load i64, i64* %sizea, align 8, !dbg !7606, !tbaa !2447
  %add.ptr56 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !7607
  %54 = load i8*, i8** %textb.addr, align 8, !dbg !7608, !tbaa !2286
  %55 = load i64, i64* %sizeb, align 8, !dbg !7609, !tbaa !2447
  %call57 = call i64 @strxfrm(i8* %add.ptr56, i8* %54, i64 %55) #12, !dbg !7610
  br label %if.end58, !dbg !7610

if.end58:                                         ; preds = %if.then55, %if.end53
  br label %if.end59, !dbg !7611

if.end59:                                         ; preds = %if.end58, %land.lhs.true
  %56 = load i8*, i8** %texta.addr, align 8, !dbg !7612, !tbaa !2286
  %57 = load i8*, i8** %lima, align 8, !dbg !7614, !tbaa !2286
  %cmp60 = icmp ult i8* %56, %57, !dbg !7615
  br i1 %cmp60, label %if.then61, label %if.end65, !dbg !7616

if.then61:                                        ; preds = %if.end59
  %58 = load i8*, i8** %texta.addr, align 8, !dbg !7617, !tbaa !2286
  %call62 = call i64 @strlen(i8* %58) #14, !dbg !7618
  %add63 = add i64 %call62, 1, !dbg !7619
  %59 = load i8*, i8** %texta.addr, align 8, !dbg !7620, !tbaa !2286
  %add.ptr64 = getelementptr inbounds i8, i8* %59, i64 %add63, !dbg !7620
  store i8* %add.ptr64, i8** %texta.addr, align 8, !dbg !7620, !tbaa !2286
  br label %if.end65, !dbg !7621

if.end65:                                         ; preds = %if.then61, %if.end59
  %60 = load i8*, i8** %textb.addr, align 8, !dbg !7622, !tbaa !2286
  %61 = load i8*, i8** %limb, align 8, !dbg !7624, !tbaa !2286
  %cmp66 = icmp ult i8* %60, %61, !dbg !7625
  br i1 %cmp66, label %if.then67, label %if.end71, !dbg !7626

if.then67:                                        ; preds = %if.end65
  %62 = load i8*, i8** %textb.addr, align 8, !dbg !7627, !tbaa !2286
  %call68 = call i64 @strlen(i8* %62) #14, !dbg !7628
  %add69 = add i64 %call68, 1, !dbg !7629
  %63 = load i8*, i8** %textb.addr, align 8, !dbg !7630, !tbaa !2286
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %add69, !dbg !7630
  store i8* %add.ptr70, i8** %textb.addr, align 8, !dbg !7630, !tbaa !2286
  br label %if.end71, !dbg !7631

if.end71:                                         ; preds = %if.then67, %if.end65
  %64 = load i8*, i8** %texta.addr, align 8, !dbg !7632, !tbaa !2286
  %65 = load i8*, i8** %lima, align 8, !dbg !7634, !tbaa !2286
  %cmp72 = icmp ult i8* %64, %65, !dbg !7635
  br i1 %cmp72, label %if.end76, label %lor.lhs.false, !dbg !7636

lor.lhs.false:                                    ; preds = %if.end71
  %66 = load i8*, i8** %textb.addr, align 8, !dbg !7637, !tbaa !2286
  %67 = load i8*, i8** %limb, align 8, !dbg !7638, !tbaa !2286
  %cmp73 = icmp ult i8* %66, %67, !dbg !7639
  br i1 %cmp73, label %if.end76, label %if.then74, !dbg !7640

if.then74:                                        ; preds = %lor.lhs.false
  %68 = load i64, i64* %sizea, align 8, !dbg !7641, !tbaa !2447
  store i64 %68, i64* %lena.addr, align 8, !dbg !7643, !tbaa !2447
  %69 = load i8*, i8** %buf, align 8, !dbg !7644, !tbaa !2286
  store i8* %69, i8** %texta.addr, align 8, !dbg !7645, !tbaa !2286
  %70 = load i64, i64* %sizeb, align 8, !dbg !7646, !tbaa !2447
  store i64 %70, i64* %lenb.addr, align 8, !dbg !7647, !tbaa !2447
  %71 = load i8*, i8** %buf, align 8, !dbg !7648, !tbaa !2286
  %72 = load i64, i64* %sizea, align 8, !dbg !7649, !tbaa !2447
  %add.ptr75 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !7650
  store i8* %add.ptr75, i8** %textb.addr, align 8, !dbg !7651, !tbaa !2286
  br label %while.end, !dbg !7652

if.end76:                                         ; preds = %lor.lhs.false, %if.end71
  %73 = load i8*, i8** %buf, align 8, !dbg !7653, !tbaa !2286
  %74 = load i64, i64* %sizea, align 8, !dbg !7654, !tbaa !2447
  %arrayidx77 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7655, !ctir !498
  call void @md5_process_bytes(i8* %73, i64 %74, %struct.md5_ctx* %arrayidx77) #12, !dbg !7656
  %75 = load i8*, i8** %buf, align 8, !dbg !7657, !tbaa !2286
  %76 = load i64, i64* %sizea, align 8, !dbg !7658, !tbaa !2447
  %add.ptr78 = getelementptr inbounds i8, i8* %75, i64 %76, !dbg !7659
  %77 = load i64, i64* %sizeb, align 8, !dbg !7660, !tbaa !2447
  %arrayidx79 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7661, !ctir !498
  call void @md5_process_bytes(i8* %add.ptr78, i64 %77, %struct.md5_ctx* %arrayidx79) #12, !dbg !7662
  %78 = load i32, i32* %xfrm_diff, align 4, !dbg !7663, !tbaa !2273
  %tobool80 = icmp ne i32 %78, 0, !dbg !7663
  br i1 %tobool80, label %if.end96, label %if.then81, !dbg !7665

if.then81:                                        ; preds = %if.end76
  %79 = load i8*, i8** %buf, align 8, !dbg !7666, !tbaa !2286
  %80 = load i8*, i8** %buf, align 8, !dbg !7668, !tbaa !2286
  %81 = load i64, i64* %sizea, align 8, !dbg !7669, !tbaa !2447
  %add.ptr82 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !7670
  %82 = load i64, i64* %sizea, align 8, !dbg !7671, !tbaa !2447
  %83 = load i64, i64* %sizeb, align 8, !dbg !7671, !tbaa !2447
  %cmp83 = icmp ult i64 %82, %83, !dbg !7671
  br i1 %cmp83, label %cond.true84, label %cond.false85, !dbg !7671

cond.true84:                                      ; preds = %if.then81
  %84 = load i64, i64* %sizea, align 8, !dbg !7671, !tbaa !2447
  br label %cond.end86, !dbg !7671

cond.false85:                                     ; preds = %if.then81
  %85 = load i64, i64* %sizeb, align 8, !dbg !7671, !tbaa !2447
  br label %cond.end86, !dbg !7671

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %cond87 = phi i64 [ %84, %cond.true84 ], [ %85, %cond.false85 ], !dbg !7671
  %call88 = call i32 @memcmp(i8* %79, i8* %add.ptr82, i64 %cond87) #14, !dbg !7672
  store i32 %call88, i32* %xfrm_diff, align 4, !dbg !7673, !tbaa !2273
  %86 = load i32, i32* %xfrm_diff, align 4, !dbg !7674, !tbaa !2273
  %tobool89 = icmp ne i32 %86, 0, !dbg !7674
  br i1 %tobool89, label %if.end95, label %if.then90, !dbg !7676

if.then90:                                        ; preds = %cond.end86
  %87 = load i64, i64* %sizea, align 8, !dbg !7677, !tbaa !2447
  %88 = load i64, i64* %sizeb, align 8, !dbg !7678, !tbaa !2447
  %cmp91 = icmp ugt i64 %87, %88, !dbg !7679
  %conv = zext i1 %cmp91 to i32, !dbg !7679
  %89 = load i64, i64* %sizea, align 8, !dbg !7680, !tbaa !2447
  %90 = load i64, i64* %sizeb, align 8, !dbg !7681, !tbaa !2447
  %cmp92 = icmp ult i64 %89, %90, !dbg !7682
  %conv93 = zext i1 %cmp92 to i32, !dbg !7682
  %sub94 = sub nsw i32 %conv, %conv93, !dbg !7683
  store i32 %sub94, i32* %xfrm_diff, align 4, !dbg !7684, !tbaa !2273
  br label %if.end95, !dbg !7685

if.end95:                                         ; preds = %if.then90, %cond.end86
  br label %if.end96, !dbg !7686

if.end96:                                         ; preds = %if.end95, %if.end76
  br label %while.body, !dbg !7499, !llvm.loop !7687

while.end:                                        ; preds = %if.then74
  br label %if.end97, !dbg !7689

if.end97:                                         ; preds = %while.end, %entry
  %91 = load i8*, i8** %texta.addr, align 8, !dbg !7690, !tbaa !2286
  %92 = load i64, i64* %lena.addr, align 8, !dbg !7691, !tbaa !2447
  %arrayidx98 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7692, !ctir !498
  call void @md5_process_bytes(i8* %91, i64 %92, %struct.md5_ctx* %arrayidx98) #12, !dbg !7693
  %arrayidx99 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 0, !dbg !7694, !ctir !498
  %arrayidx100 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 0, !dbg !7695, !ctir !494
  %arraydecay101 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx100, i64 0, i64 0, !dbg !7695
  %93 = bitcast i32* %arraydecay101 to i8*, !dbg !7695
  %call102 = call i8* @md5_finish_ctx(%struct.md5_ctx* %arrayidx99, i8* %93) #12, !dbg !7696
  %94 = load i8*, i8** %textb.addr, align 8, !dbg !7697, !tbaa !2286
  %95 = load i64, i64* %lenb.addr, align 8, !dbg !7698, !tbaa !2447
  %arrayidx103 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7699, !ctir !498
  call void @md5_process_bytes(i8* %94, i64 %95, %struct.md5_ctx* %arrayidx103) #12, !dbg !7700
  %arrayidx104 = getelementptr inbounds [2 x %struct.md5_ctx], [2 x %struct.md5_ctx]* %s, i64 0, i64 1, !dbg !7701, !ctir !498
  %arrayidx105 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 1, !dbg !7702, !ctir !494
  %arraydecay106 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx105, i64 0, i64 0, !dbg !7702
  %96 = bitcast i32* %arraydecay106 to i8*, !dbg !7702
  %call107 = call i8* @md5_finish_ctx(%struct.md5_ctx* %arrayidx104, i8* %96) #12, !dbg !7703
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7704, metadata !DIExpression()), !dbg !7705
  %arrayidx108 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 0, !dbg !7706, !ctir !494
  %arraydecay109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx108, i64 0, i64 0, !dbg !7706
  %97 = bitcast i32* %arraydecay109 to i8*, !dbg !7706
  %arrayidx110 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %dig, i64 0, i64 1, !dbg !7707, !ctir !494
  %arraydecay111 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx110, i64 0, i64 0, !dbg !7707
  %98 = bitcast i32* %arraydecay111 to i8*, !dbg !7707
  %call112 = call i32 @memcmp(i8* %97, i8* %98, i64 16) #14, !dbg !7708
  store i32 %call112, i32* %diff, align 4, !dbg !7705, !tbaa !2273
  %99 = load i32, i32* %diff, align 4, !dbg !7709, !tbaa !2273
  %tobool113 = icmp ne i32 %99, 0, !dbg !7709
  br i1 %tobool113, label %if.end133, label %if.then114, !dbg !7711

if.then114:                                       ; preds = %if.end97
  %100 = load i32, i32* %xfrm_diff, align 4, !dbg !7712, !tbaa !2273
  %tobool115 = icmp ne i32 %100, 0, !dbg !7712
  br i1 %tobool115, label %if.end132, label %if.then116, !dbg !7715

if.then116:                                       ; preds = %if.then114
  %101 = load i8*, i8** %texta.addr, align 8, !dbg !7716, !tbaa !2286
  %102 = load i8*, i8** %textb.addr, align 8, !dbg !7718, !tbaa !2286
  %103 = load i64, i64* %lena.addr, align 8, !dbg !7719, !tbaa !2447
  %104 = load i64, i64* %lenb.addr, align 8, !dbg !7719, !tbaa !2447
  %cmp117 = icmp ult i64 %103, %104, !dbg !7719
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !7719

cond.true119:                                     ; preds = %if.then116
  %105 = load i64, i64* %lena.addr, align 8, !dbg !7719, !tbaa !2447
  br label %cond.end121, !dbg !7719

cond.false120:                                    ; preds = %if.then116
  %106 = load i64, i64* %lenb.addr, align 8, !dbg !7719, !tbaa !2447
  br label %cond.end121, !dbg !7719

cond.end121:                                      ; preds = %cond.false120, %cond.true119
  %cond122 = phi i64 [ %105, %cond.true119 ], [ %106, %cond.false120 ], !dbg !7719
  %call123 = call i32 @memcmp(i8* %101, i8* %102, i64 %cond122) #14, !dbg !7720
  store i32 %call123, i32* %xfrm_diff, align 4, !dbg !7721, !tbaa !2273
  %107 = load i32, i32* %xfrm_diff, align 4, !dbg !7722, !tbaa !2273
  %tobool124 = icmp ne i32 %107, 0, !dbg !7722
  br i1 %tobool124, label %if.end131, label %if.then125, !dbg !7724

if.then125:                                       ; preds = %cond.end121
  %108 = load i64, i64* %lena.addr, align 8, !dbg !7725, !tbaa !2447
  %109 = load i64, i64* %lenb.addr, align 8, !dbg !7726, !tbaa !2447
  %cmp126 = icmp ugt i64 %108, %109, !dbg !7727
  %conv127 = zext i1 %cmp126 to i32, !dbg !7727
  %110 = load i64, i64* %lena.addr, align 8, !dbg !7728, !tbaa !2447
  %111 = load i64, i64* %lenb.addr, align 8, !dbg !7729, !tbaa !2447
  %cmp128 = icmp ult i64 %110, %111, !dbg !7730
  %conv129 = zext i1 %cmp128 to i32, !dbg !7730
  %sub130 = sub nsw i32 %conv127, %conv129, !dbg !7731
  store i32 %sub130, i32* %xfrm_diff, align 4, !dbg !7732, !tbaa !2273
  br label %if.end131, !dbg !7733

if.end131:                                        ; preds = %if.then125, %cond.end121
  br label %if.end132, !dbg !7734

if.end132:                                        ; preds = %if.end131, %if.then114
  %112 = load i32, i32* %xfrm_diff, align 4, !dbg !7735, !tbaa !2273
  store i32 %112, i32* %diff, align 4, !dbg !7736, !tbaa !2273
  br label %if.end133, !dbg !7737

if.end133:                                        ; preds = %if.end132, %if.end97
  %113 = load i8*, i8** %allocated, align 8, !dbg !7738, !tbaa !2286
  call void @free(i8* %113) #12, !dbg !7739
  %114 = load i32, i32* %diff, align 4, !dbg !7740, !tbaa !2273
  ret i32 %114, !dbg !7741
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @xstrxfrm(i8* noalias %dest, i8* noalias %src, i64 %destsize) #4 !dbg !7742 !ctir !513 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %destsize.addr = alloca i64, align 8
  %translated_size = alloca i64, align 8, !ctir !55
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  store i8* %src, i8** %src.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  store i64 %destsize, i64* %destsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %destsize.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  %call = call i32* @__errno_location() #16, !dbg !7749
  store i32 0, i32* %call, align 4, !dbg !7750, !tbaa !2273, !ctir !7
  call void @llvm.dbg.declare(metadata i64* %translated_size, metadata !7751, metadata !DIExpression()), !dbg !7752
  %0 = load i8*, i8** %dest.addr, align 8, !dbg !7753, !tbaa !2286
  %1 = load i8*, i8** %src.addr, align 8, !dbg !7754, !tbaa !2286
  %2 = load i64, i64* %destsize.addr, align 8, !dbg !7755, !tbaa !2447
  %call1 = call i64 @strxfrm(i8* %0, i8* %1, i64 %2) #12, !dbg !7756
  store i64 %call1, i64* %translated_size, align 8, !dbg !7752, !tbaa !2447
  %call2 = call i32* @__errno_location() #16, !dbg !7757
  %3 = load i32, i32* %call2, align 4, !dbg !7757, !tbaa !2273, !ctir !7
  %tobool = icmp ne i32 %3, 0, !dbg !7757
  br i1 %tobool, label %if.then, label %if.end, !dbg !7759

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !7760
  %4 = load i32, i32* %call3, align 4, !dbg !7760, !tbaa !2273, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i64 0, i64 0)) #12, !dbg !7762
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call4), !dbg !7763
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.162, i64 0, i64 0)) #12, !dbg !7764
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call5), !dbg !7765
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.163, i64 0, i64 0)) #12, !dbg !7766
  %5 = load i8*, i8** %src.addr, align 8, !dbg !7766, !tbaa !2286
  %call7 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %5), !dbg !7766
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call6, i8* %call7), !dbg !7766
  unreachable, !dbg !7766

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %translated_size, align 8, !dbg !7767, !tbaa !2447
  ret i64 %6, !dbg !7768
}

; Function Attrs: nounwind
declare dso_local i64 @strxfrm(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @find_unit_order(i8* %number) #9 !dbg !7769 !ctir !484 {
entry:
  %retval = alloca i32, align 4
  %number.addr = alloca i8*, align 8
  %minus_sign = alloca i8, align 1, !ctir !103
  %p = alloca i8*, align 8, !ctir !88
  %max_digit = alloca i8, align 1, !ctir !321
  %ch = alloca i8, align 1, !ctir !321
  %order = alloca i32, align 4, !ctir !7
  store i8* %number, i8** %number.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %number.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata i8* %minus_sign, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load i8*, i8** %number.addr, align 8, !dbg !7774, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !7775, !tbaa !2438, !ctir !89
  %conv = sext i8 %1 to i32, !dbg !7775
  %cmp = icmp eq i32 %conv, 45, !dbg !7776
  %frombool = zext i1 %cmp to i8, !dbg !7773
  store i8 %frombool, i8* %minus_sign, align 1, !dbg !7773, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7777, metadata !DIExpression()), !dbg !7778
  %2 = load i8*, i8** %number.addr, align 8, !dbg !7779, !tbaa !2286
  %3 = load i8, i8* %minus_sign, align 1, !dbg !7780, !tbaa !2430
  %tobool = trunc i8 %3 to i1, !dbg !7780
  %conv2 = zext i1 %tobool to i32, !dbg !7780
  %idx.ext = sext i32 %conv2 to i64, !dbg !7781
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !7781
  store i8* %add.ptr, i8** %p, align 8, !dbg !7778, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %max_digit, metadata !7782, metadata !DIExpression()), !dbg !7783
  %call = call zeroext i8 @traverse_raw_number(i8** %p), !dbg !7784
  store i8 %call, i8* %max_digit, align 1, !dbg !7783, !tbaa !2438
  %4 = load i8, i8* %max_digit, align 1, !dbg !7785, !tbaa !2438
  %conv3 = zext i8 %4 to i32, !dbg !7785
  %cmp4 = icmp slt i32 48, %conv3, !dbg !7787
  br i1 %cmp4, label %if.then, label %if.else, !dbg !7788

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !7789, metadata !DIExpression()), !dbg !7791
  %5 = load i8*, i8** %p, align 8, !dbg !7792, !tbaa !2286
  %6 = load i8, i8* %5, align 1, !dbg !7793, !tbaa !2438, !ctir !89
  store i8 %6, i8* %ch, align 1, !dbg !7791, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %order, metadata !7794, metadata !DIExpression()), !dbg !7795
  %7 = load i8, i8* %ch, align 1, !dbg !7796, !tbaa !2438
  %idxprom = zext i8 %7 to i64, !dbg !7797
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [108 x i8], [148 x i8] }>* @unit_order to [256 x i8]*), i64 0, i64 %idxprom, !dbg !7797, !ctir !486
  %8 = load i8, i8* %arrayidx, align 1, !dbg !7797, !tbaa !2438
  %conv6 = sext i8 %8 to i32, !dbg !7797
  store i32 %conv6, i32* %order, align 4, !dbg !7795, !tbaa !2273
  %9 = load i8, i8* %minus_sign, align 1, !dbg !7798, !tbaa !2430
  %tobool7 = trunc i8 %9 to i1, !dbg !7798
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !7798

cond.true:                                        ; preds = %if.then
  %10 = load i32, i32* %order, align 4, !dbg !7799, !tbaa !2273
  %sub = sub nsw i32 0, %10, !dbg !7800
  br label %cond.end, !dbg !7798

cond.false:                                       ; preds = %if.then
  %11 = load i32, i32* %order, align 4, !dbg !7801, !tbaa !2273
  br label %cond.end, !dbg !7798

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %11, %cond.false ], !dbg !7798
  store i32 %cond, i32* %retval, align 4, !dbg !7802
  br label %return, !dbg !7802

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7803
  br label %return, !dbg !7803

return:                                           ; preds = %if.else, %cond.end
  %12 = load i32, i32* %retval, align 4, !dbg !7804
  ret i32 %12, !dbg !7804
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @nan_compare(i8* %sa, i8* %sb) #4 !dbg !7805 !ctir !481 {
entry:
  %sa.addr = alloca i8*, align 8
  %sb.addr = alloca i8*, align 8
  %a = alloca x86_fp80, align 16, !ctir !483
  %b = alloca x86_fp80, align 16, !ctir !483
  store i8* %sa, i8** %sa.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %sa.addr, metadata !7806, metadata !DIExpression()), !dbg !7807
  store i8* %sb, i8** %sb.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %sb.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.declare(metadata x86_fp80* %a, metadata !7810, metadata !DIExpression()), !dbg !7811
  %0 = bitcast x86_fp80* %a to i8*, !dbg !7812
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !7812
  %1 = load i8*, i8** %sa.addr, align 8, !dbg !7813, !tbaa !2286
  %call = call x86_fp80 @strtold(i8* %1, i8** null) #12, !dbg !7814
  store x86_fp80 %call, x86_fp80* %a, align 16, !dbg !7815, !tbaa !6297
  call void @llvm.dbg.declare(metadata x86_fp80* %b, metadata !7816, metadata !DIExpression()), !dbg !7817
  %2 = bitcast x86_fp80* %b to i8*, !dbg !7818
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false), !dbg !7818
  %3 = load i8*, i8** %sb.addr, align 8, !dbg !7819, !tbaa !2286
  %call1 = call x86_fp80 @strtold(i8* %3, i8** null) #12, !dbg !7820
  store x86_fp80 %call1, x86_fp80* %b, align 16, !dbg !7821, !tbaa !6297
  %4 = bitcast x86_fp80* %a to i8*, !dbg !7822
  %5 = bitcast x86_fp80* %b to i8*, !dbg !7823
  %call2 = call i32 @memcmp(i8* %4, i8* %5, i64 16) #14, !dbg !7824
  ret i32 %call2, !dbg !7825
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @sortlines_thread(i8* %data) #4 !dbg !7826 !ctir !687 {
entry:
  %data.addr = alloca i8*, align 8
  %args = alloca %struct.thread_args*, align 8, !ctir !689
  store i8* %data, i8** %data.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.declare(metadata %struct.thread_args** %args, metadata !7829, metadata !DIExpression()), !dbg !7830
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7831, !tbaa !2286
  %1 = bitcast i8* %0 to %struct.thread_args*, !dbg !7831
  store %struct.thread_args* %1, %struct.thread_args** %args, align 8, !dbg !7830, !tbaa !2286
  %2 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7832, !tbaa !2286
  %lines = getelementptr inbounds %struct.thread_args, %struct.thread_args* %2, i32 0, i32 0, !dbg !7833, !ctir !690
  %3 = load %struct.line*, %struct.line** %lines, align 8, !dbg !7833, !tbaa !5804, !ctir !469
  %4 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7834, !tbaa !2286
  %nthreads = getelementptr inbounds %struct.thread_args, %struct.thread_args* %4, i32 0, i32 1, !dbg !7835, !ctir !690
  %5 = load i64, i64* %nthreads, align 8, !dbg !7835, !tbaa !5807, !ctir !55
  %6 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7836, !tbaa !2286
  %total_lines = getelementptr inbounds %struct.thread_args, %struct.thread_args* %6, i32 0, i32 2, !dbg !7837, !ctir !690
  %7 = load i64, i64* %total_lines, align 8, !dbg !7837, !tbaa !5809, !ctir !696
  %8 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7838, !tbaa !2286
  %node = getelementptr inbounds %struct.thread_args, %struct.thread_args* %8, i32 0, i32 3, !dbg !7839, !ctir !690
  %9 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !7839, !tbaa !5813, !ctir !698
  %10 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7840, !tbaa !2286
  %queue = getelementptr inbounds %struct.thread_args, %struct.thread_args* %10, i32 0, i32 4, !dbg !7841, !ctir !690
  %11 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue, align 8, !dbg !7841, !tbaa !5815, !ctir !700
  %12 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7842, !tbaa !2286
  %tfp = getelementptr inbounds %struct.thread_args, %struct.thread_args* %12, i32 0, i32 5, !dbg !7843, !ctir !690
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp, align 8, !dbg !7843, !tbaa !5817, !ctir !0
  %14 = load %struct.thread_args*, %struct.thread_args** %args, align 8, !dbg !7844, !tbaa !2286
  %output_temp = getelementptr inbounds %struct.thread_args, %struct.thread_args* %14, i32 0, i32 6, !dbg !7845, !ctir !690
  %15 = load i8*, i8** %output_temp, align 8, !dbg !7845, !tbaa !5819, !ctir !88
  call void @sortlines(%struct.line* %3, i64 %5, i64 %7, %struct.merge_node* %9, %struct.merge_node_queue* %11, %struct._IO_FILE* %13, i8* %15), !dbg !7846
  ret i8* null, !dbg !7847
}

; Function Attrs: nounwind
declare !callback !7848 dso_local i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #2

declare dso_local i32 @pthread_join(i64, i8**) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sequential_sort(%struct.line* noalias %lines, i64 %nlines, %struct.line* noalias %temp, i1 zeroext %to_temp) #4 !dbg !7850 !ctir !703 {
entry:
  %lines.addr = alloca %struct.line*, align 8
  %nlines.addr = alloca i64, align 8
  %temp.addr = alloca %struct.line*, align 8
  %to_temp.addr = alloca i8, align 1
  %swap = alloca i32, align 4, !ctir !7
  %nlo = alloca i64, align 8, !ctir !55
  %nhi = alloca i64, align 8, !ctir !55
  %lo = alloca %struct.line*, align 8, !ctir !469
  %hi = alloca %struct.line*, align 8, !ctir !469
  %dest = alloca %struct.line*, align 8, !ctir !469
  %sorted_lo = alloca %struct.line*, align 8, !ctir !447
  store %struct.line* %lines, %struct.line** %lines.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %lines.addr, metadata !7851, metadata !DIExpression()), !dbg !7852
  store i64 %nlines, i64* %nlines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nlines.addr, metadata !7853, metadata !DIExpression()), !dbg !7854
  store %struct.line* %temp, %struct.line** %temp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %temp.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  %frombool = zext i1 %to_temp to i8
  store i8 %frombool, i8* %to_temp.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %to_temp.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  %0 = load i64, i64* %nlines.addr, align 8, !dbg !7859, !tbaa !2447
  %cmp = icmp eq i64 %0, 2, !dbg !7861
  br i1 %cmp, label %if.then, label %if.else18, !dbg !7862

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %swap, metadata !7863, metadata !DIExpression()), !dbg !7865
  %1 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7866, !tbaa !2286
  %arrayidx = getelementptr inbounds %struct.line, %struct.line* %1, i64 -1, !dbg !7866, !ctir !469
  %2 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7867, !tbaa !2286
  %arrayidx1 = getelementptr inbounds %struct.line, %struct.line* %2, i64 -2, !dbg !7867, !ctir !469
  %call = call i32 @compare(%struct.line* %arrayidx, %struct.line* %arrayidx1), !dbg !7868
  %cmp2 = icmp slt i32 0, %call, !dbg !7869
  %conv = zext i1 %cmp2 to i32, !dbg !7869
  store i32 %conv, i32* %swap, align 4, !dbg !7865, !tbaa !2273
  %3 = load i8, i8* %to_temp.addr, align 1, !dbg !7870, !tbaa !2430
  %tobool = trunc i8 %3 to i1, !dbg !7870
  br i1 %tobool, label %if.then3, label %if.else, !dbg !7872

if.then3:                                         ; preds = %if.then
  %4 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7873, !tbaa !2286
  %arrayidx4 = getelementptr inbounds %struct.line, %struct.line* %4, i64 -1, !dbg !7873, !ctir !469
  %5 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7875, !tbaa !2286
  %6 = load i32, i32* %swap, align 4, !dbg !7876, !tbaa !2273
  %sub = sub nsw i32 -1, %6, !dbg !7877
  %idxprom = sext i32 %sub to i64, !dbg !7875
  %arrayidx5 = getelementptr inbounds %struct.line, %struct.line* %5, i64 %idxprom, !dbg !7875, !ctir !469
  %7 = bitcast %struct.line* %arrayidx4 to i8*, !dbg !7875
  %8 = bitcast %struct.line* %arrayidx5 to i8*, !dbg !7875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !7875, !tbaa.struct !5937
  %9 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7878, !tbaa !2286
  %arrayidx6 = getelementptr inbounds %struct.line, %struct.line* %9, i64 -2, !dbg !7878, !ctir !469
  %10 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7879, !tbaa !2286
  %11 = load i32, i32* %swap, align 4, !dbg !7880, !tbaa !2273
  %add = add nsw i32 -2, %11, !dbg !7881
  %idxprom7 = sext i32 %add to i64, !dbg !7879
  %arrayidx8 = getelementptr inbounds %struct.line, %struct.line* %10, i64 %idxprom7, !dbg !7879, !ctir !469
  %12 = bitcast %struct.line* %arrayidx6 to i8*, !dbg !7879
  %13 = bitcast %struct.line* %arrayidx8 to i8*, !dbg !7879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !7879, !tbaa.struct !5937
  br label %if.end17, !dbg !7882

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %swap, align 4, !dbg !7883, !tbaa !2273
  %tobool9 = icmp ne i32 %14, 0, !dbg !7883
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7885

if.then10:                                        ; preds = %if.else
  %15 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7886, !tbaa !2286
  %arrayidx11 = getelementptr inbounds %struct.line, %struct.line* %15, i64 -1, !dbg !7886, !ctir !469
  %16 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7888, !tbaa !2286
  %arrayidx12 = getelementptr inbounds %struct.line, %struct.line* %16, i64 -1, !dbg !7888, !ctir !469
  %17 = bitcast %struct.line* %arrayidx11 to i8*, !dbg !7888
  %18 = bitcast %struct.line* %arrayidx12 to i8*, !dbg !7888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false), !dbg !7888, !tbaa.struct !5937
  %19 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7889, !tbaa !2286
  %arrayidx13 = getelementptr inbounds %struct.line, %struct.line* %19, i64 -1, !dbg !7889, !ctir !469
  %20 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7890, !tbaa !2286
  %arrayidx14 = getelementptr inbounds %struct.line, %struct.line* %20, i64 -2, !dbg !7890, !ctir !469
  %21 = bitcast %struct.line* %arrayidx13 to i8*, !dbg !7890
  %22 = bitcast %struct.line* %arrayidx14 to i8*, !dbg !7890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false), !dbg !7890, !tbaa.struct !5937
  %23 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7891, !tbaa !2286
  %arrayidx15 = getelementptr inbounds %struct.line, %struct.line* %23, i64 -2, !dbg !7891, !ctir !469
  %24 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7892, !tbaa !2286
  %arrayidx16 = getelementptr inbounds %struct.line, %struct.line* %24, i64 -1, !dbg !7892, !ctir !469
  %25 = bitcast %struct.line* %arrayidx15 to i8*, !dbg !7892
  %26 = bitcast %struct.line* %arrayidx16 to i8*, !dbg !7892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false), !dbg !7892, !tbaa.struct !5937
  br label %if.end, !dbg !7893

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then3
  br label %if.end40, !dbg !7894

if.else18:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %nlo, metadata !7895, metadata !DIExpression()), !dbg !7897
  %27 = load i64, i64* %nlines.addr, align 8, !dbg !7898, !tbaa !2447
  %div = udiv i64 %27, 2, !dbg !7899
  store i64 %div, i64* %nlo, align 8, !dbg !7897, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nhi, metadata !7900, metadata !DIExpression()), !dbg !7901
  %28 = load i64, i64* %nlines.addr, align 8, !dbg !7902, !tbaa !2447
  %29 = load i64, i64* %nlo, align 8, !dbg !7903, !tbaa !2447
  %sub19 = sub i64 %28, %29, !dbg !7904
  store i64 %sub19, i64* %nhi, align 8, !dbg !7901, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.line** %lo, metadata !7905, metadata !DIExpression()), !dbg !7906
  %30 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7907, !tbaa !2286
  store %struct.line* %30, %struct.line** %lo, align 8, !dbg !7906, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %hi, metadata !7908, metadata !DIExpression()), !dbg !7909
  %31 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7910, !tbaa !2286
  %32 = load i64, i64* %nlo, align 8, !dbg !7911, !tbaa !2447
  %idx.neg = sub i64 0, %32, !dbg !7912
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %31, i64 %idx.neg, !dbg !7912
  store %struct.line* %add.ptr, %struct.line** %hi, align 8, !dbg !7909, !tbaa !2286
  %33 = load %struct.line*, %struct.line** %hi, align 8, !dbg !7913, !tbaa !2286
  %34 = load i64, i64* %nhi, align 8, !dbg !7914, !tbaa !2447
  %35 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7915, !tbaa !2286
  %36 = load i8, i8* %to_temp.addr, align 1, !dbg !7916, !tbaa !2430
  %tobool20 = trunc i8 %36 to i1, !dbg !7916
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !7916

cond.true:                                        ; preds = %if.else18
  %37 = load i64, i64* %nlo, align 8, !dbg !7917, !tbaa !2447
  br label %cond.end, !dbg !7916

cond.false:                                       ; preds = %if.else18
  br label %cond.end, !dbg !7916

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %37, %cond.true ], [ 0, %cond.false ], !dbg !7916
  %idx.neg22 = sub i64 0, %cond, !dbg !7918
  %add.ptr23 = getelementptr inbounds %struct.line, %struct.line* %35, i64 %idx.neg22, !dbg !7918
  %38 = load i8, i8* %to_temp.addr, align 1, !dbg !7919, !tbaa !2430
  %tobool24 = trunc i8 %38 to i1, !dbg !7919
  call void @sequential_sort(%struct.line* %33, i64 %34, %struct.line* %add.ptr23, i1 zeroext %tobool24), !dbg !7920
  %39 = load i64, i64* %nlo, align 8, !dbg !7921, !tbaa !2447
  %cmp25 = icmp ult i64 1, %39, !dbg !7923
  br i1 %cmp25, label %if.then27, label %if.else29, !dbg !7924

if.then27:                                        ; preds = %cond.end
  %40 = load %struct.line*, %struct.line** %lo, align 8, !dbg !7925, !tbaa !2286
  %41 = load i64, i64* %nlo, align 8, !dbg !7926, !tbaa !2447
  %42 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7927, !tbaa !2286
  %43 = load i8, i8* %to_temp.addr, align 1, !dbg !7928, !tbaa !2430
  %tobool28 = trunc i8 %43 to i1, !dbg !7928
  %lnot = xor i1 %tobool28, true, !dbg !7929
  call void @sequential_sort(%struct.line* %40, i64 %41, %struct.line* %42, i1 zeroext %lnot), !dbg !7930
  br label %if.end35, !dbg !7930

if.else29:                                        ; preds = %cond.end
  %44 = load i8, i8* %to_temp.addr, align 1, !dbg !7931, !tbaa !2430
  %tobool30 = trunc i8 %44 to i1, !dbg !7931
  br i1 %tobool30, label %if.end34, label %if.then31, !dbg !7933

if.then31:                                        ; preds = %if.else29
  %45 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7934, !tbaa !2286
  %arrayidx32 = getelementptr inbounds %struct.line, %struct.line* %45, i64 -1, !dbg !7934, !ctir !469
  %46 = load %struct.line*, %struct.line** %lo, align 8, !dbg !7935, !tbaa !2286
  %arrayidx33 = getelementptr inbounds %struct.line, %struct.line* %46, i64 -1, !dbg !7935, !ctir !469
  %47 = bitcast %struct.line* %arrayidx32 to i8*, !dbg !7935
  %48 = bitcast %struct.line* %arrayidx33 to i8*, !dbg !7935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 32, i1 false), !dbg !7935, !tbaa.struct !5937
  br label %if.end34, !dbg !7934

if.end34:                                         ; preds = %if.then31, %if.else29
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then27
  call void @llvm.dbg.declare(metadata %struct.line** %dest, metadata !7936, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.declare(metadata %struct.line** %sorted_lo, metadata !7938, metadata !DIExpression()), !dbg !7939
  %49 = load i8, i8* %to_temp.addr, align 1, !dbg !7940, !tbaa !2430
  %tobool36 = trunc i8 %49 to i1, !dbg !7940
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !7942

if.then37:                                        ; preds = %if.end35
  %50 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7943, !tbaa !2286
  store %struct.line* %50, %struct.line** %dest, align 8, !dbg !7945, !tbaa !2286
  %51 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7946, !tbaa !2286
  store %struct.line* %51, %struct.line** %sorted_lo, align 8, !dbg !7947, !tbaa !2286
  br label %if.end39, !dbg !7948

if.else38:                                        ; preds = %if.end35
  %52 = load %struct.line*, %struct.line** %lines.addr, align 8, !dbg !7949, !tbaa !2286
  store %struct.line* %52, %struct.line** %dest, align 8, !dbg !7951, !tbaa !2286
  %53 = load %struct.line*, %struct.line** %temp.addr, align 8, !dbg !7952, !tbaa !2286
  store %struct.line* %53, %struct.line** %sorted_lo, align 8, !dbg !7953, !tbaa !2286
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then37
  %54 = load %struct.line*, %struct.line** %dest, align 8, !dbg !7954, !tbaa !2286
  %55 = load i64, i64* %nlines.addr, align 8, !dbg !7955, !tbaa !2447
  %56 = load %struct.line*, %struct.line** %sorted_lo, align 8, !dbg !7956, !tbaa !2286
  call void @mergelines(%struct.line* %54, i64 %55, %struct.line* %56), !dbg !7957
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end17
  ret void, !dbg !7958
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_insert(%struct.merge_node_queue* %queue, %struct.merge_node* %node) #4 !dbg !7959 !ctir !708 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %node.addr = alloca %struct.merge_node*, align 8
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  %0 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !7964, !tbaa !2286
  %mutex = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %0, i32 0, i32 1, !dbg !7965, !ctir !631
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %mutex) #12, !dbg !7966
  %1 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !7967, !tbaa !2286
  %priority_queue = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %1, i32 0, i32 0, !dbg !7968, !ctir !631
  %2 = load %struct.heap*, %struct.heap** %priority_queue, align 8, !dbg !7968, !tbaa !5689, !ctir !634
  %3 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !7969, !tbaa !2286
  %4 = bitcast %struct.merge_node* %3 to i8*, !dbg !7969
  %call1 = call i32 @heap_insert(%struct.heap* %2, i8* %4), !dbg !7970
  %5 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !7971, !tbaa !2286
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 11, !dbg !7972, !ctir !577
  store i8 1, i8* %queued, align 4, !dbg !7973, !tbaa !5754, !ctir !103
  %6 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !7974, !tbaa !2286
  %cond = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %6, i32 0, i32 2, !dbg !7975, !ctir !631
  %call2 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %cond) #12, !dbg !7976
  %7 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !7977, !tbaa !2286
  %mutex3 = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %7, i32 0, i32 1, !dbg !7978, !ctir !631
  %call4 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %mutex3) #12, !dbg !7979
  ret void, !dbg !7980
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @merge_loop(%struct.merge_node_queue* %queue, i64 %total_lines, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !7981 !ctir !710 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %total_lines.addr = alloca i64, align 8
  %tfp.addr = alloca %struct._IO_FILE*, align 8
  %temp_output.addr = alloca i8*, align 8
  %node = alloca %struct.merge_node*, align 8, !ctir !576
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !7982, metadata !DIExpression()), !dbg !7983
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !7984, metadata !DIExpression()), !dbg !7985
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !7986, metadata !DIExpression()), !dbg !7987
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  br label %while.body, !dbg !7990

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node, metadata !7991, metadata !DIExpression()), !dbg !7993
  %0 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !7994, !tbaa !2286
  %call = call %struct.merge_node* @queue_pop(%struct.merge_node_queue* %0), !dbg !7995
  store %struct.merge_node* %call, %struct.merge_node** %node, align 8, !dbg !7993, !tbaa !2286
  %1 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !7996, !tbaa !2286
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %1, i32 0, i32 10, !dbg !7998, !ctir !577
  %2 = load i32, i32* %level, align 8, !dbg !7998, !tbaa !5750, !ctir !69
  %cmp = icmp eq i32 %2, 0, !dbg !7999
  br i1 %cmp, label %if.then, label %if.end, !dbg !8000

if.then:                                          ; preds = %while.body
  %3 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8001, !tbaa !2286
  call void @unlock_node(%struct.merge_node* %3), !dbg !8003
  %4 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8004, !tbaa !2286
  %5 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8005, !tbaa !2286
  call void @queue_insert(%struct.merge_node_queue* %4, %struct.merge_node* %5), !dbg !8006
  br label %while.end, !dbg !8007

if.end:                                           ; preds = %while.body
  %6 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8008, !tbaa !2286
  %7 = load i64, i64* %total_lines.addr, align 8, !dbg !8009, !tbaa !2447
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8010, !tbaa !2286
  %9 = load i8*, i8** %temp_output.addr, align 8, !dbg !8011, !tbaa !2286
  call void @mergelines_node(%struct.merge_node* %6, i64 %7, %struct._IO_FILE* %8, i8* %9), !dbg !8012
  %10 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8013, !tbaa !2286
  %11 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8014, !tbaa !2286
  call void @queue_check_insert(%struct.merge_node_queue* %10, %struct.merge_node* %11), !dbg !8015
  %12 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8016, !tbaa !2286
  %13 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8017, !tbaa !2286
  call void @queue_check_insert_parent(%struct.merge_node_queue* %12, %struct.merge_node* %13), !dbg !8018
  %14 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8019, !tbaa !2286
  call void @unlock_node(%struct.merge_node* %14), !dbg !8020
  br label %while.body, !dbg !7990, !llvm.loop !8021

while.end:                                        ; preds = %if.then
  ret void, !dbg !8023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.merge_node* @queue_pop(%struct.merge_node_queue* %queue) #4 !dbg !8024 !ctir !712 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %node = alloca %struct.merge_node*, align 8, !ctir !576
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node, metadata !8027, metadata !DIExpression()), !dbg !8028
  %0 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8029, !tbaa !2286
  %mutex = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %0, i32 0, i32 1, !dbg !8030, !ctir !631
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %mutex) #12, !dbg !8031
  br label %while.cond, !dbg !8032

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8033, !tbaa !2286
  %priority_queue = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %1, i32 0, i32 0, !dbg !8034, !ctir !631
  %2 = load %struct.heap*, %struct.heap** %priority_queue, align 8, !dbg !8034, !tbaa !5689, !ctir !634
  %call1 = call i8* @heap_remove_top(%struct.heap* %2), !dbg !8035
  %3 = bitcast i8* %call1 to %struct.merge_node*, !dbg !8035
  store %struct.merge_node* %3, %struct.merge_node** %node, align 8, !dbg !8036, !tbaa !2286
  %tobool = icmp ne %struct.merge_node* %3, null, !dbg !8037
  %lnot = xor i1 %tobool, true, !dbg !8037
  br i1 %lnot, label %while.body, label %while.end, !dbg !8032

while.body:                                       ; preds = %while.cond
  %4 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8038, !tbaa !2286
  %cond = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %4, i32 0, i32 2, !dbg !8039, !ctir !631
  %5 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8040, !tbaa !2286
  %mutex2 = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %5, i32 0, i32 1, !dbg !8041, !ctir !631
  %call3 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %cond, %union.pthread_mutex_t* %mutex2), !dbg !8042
  br label %while.cond, !dbg !8032, !llvm.loop !8043

while.end:                                        ; preds = %while.cond
  %6 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8045, !tbaa !2286
  %mutex4 = getelementptr inbounds %struct.merge_node_queue, %struct.merge_node_queue* %6, i32 0, i32 1, !dbg !8046, !ctir !631
  %call5 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %mutex4) #12, !dbg !8047
  %7 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8048, !tbaa !2286
  call void @lock_node(%struct.merge_node* %7), !dbg !8049
  %8 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8050, !tbaa !2286
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %8, i32 0, i32 11, !dbg !8051, !ctir !577
  store i8 0, i8* %queued, align 4, !dbg !8052, !tbaa !5754, !ctir !103
  %9 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8053, !tbaa !2286
  ret %struct.merge_node* %9, !dbg !8054
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @unlock_node(%struct.merge_node* %node) #4 !dbg !8055 !ctir !714 {
entry:
  %node.addr = alloca %struct.merge_node*, align 8
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8058, !tbaa !2286
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 12, !dbg !8059, !ctir !577
  %call = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %lock) #12, !dbg !8060
  ret void, !dbg !8061
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mergelines_node(%struct.merge_node* noalias %node, i64 %total_lines, %struct._IO_FILE* %tfp, i8* %temp_output) #4 !dbg !8062 !ctir !716 {
entry:
  %node.addr = alloca %struct.merge_node*, align 8
  %total_lines.addr = alloca i64, align 8
  %tfp.addr = alloca %struct._IO_FILE*, align 8
  %temp_output.addr = alloca i8*, align 8
  %lo_orig = alloca %struct.line*, align 8, !ctir !469
  %hi_orig = alloca %struct.line*, align 8, !ctir !469
  %to_merge = alloca i64, align 8, !ctir !55
  %merged_lo = alloca i64, align 8, !ctir !55
  %merged_hi = alloca i64, align 8, !ctir !55
  %dest = alloca %struct.line*, align 8, !ctir !469
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8063, metadata !DIExpression()), !dbg !8064
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !8065, metadata !DIExpression()), !dbg !8066
  store %struct._IO_FILE* %tfp, %struct._IO_FILE** %tfp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tfp.addr, metadata !8067, metadata !DIExpression()), !dbg !8068
  store i8* %temp_output, i8** %temp_output.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %temp_output.addr, metadata !8069, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.declare(metadata %struct.line** %lo_orig, metadata !8071, metadata !DIExpression()), !dbg !8072
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8073, !tbaa !2286
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 0, !dbg !8074, !ctir !577
  %1 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8074, !tbaa !5729, !ctir !469
  store %struct.line* %1, %struct.line** %lo_orig, align 8, !dbg !8072, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %hi_orig, metadata !8075, metadata !DIExpression()), !dbg !8076
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8077, !tbaa !2286
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 1, !dbg !8078, !ctir !577
  %3 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8078, !tbaa !5725, !ctir !469
  store %struct.line* %3, %struct.line** %hi_orig, align 8, !dbg !8076, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %to_merge, metadata !8079, metadata !DIExpression()), !dbg !8080
  %4 = load i64, i64* %total_lines.addr, align 8, !dbg !8081, !tbaa !2447
  %5 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8081, !tbaa !2286
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 10, !dbg !8081, !ctir !577
  %6 = load i32, i32* %level, align 8, !dbg !8081, !tbaa !5750, !ctir !69
  %add = add i32 %6, 1, !dbg !8081
  %mul = mul i32 2, %add, !dbg !8081
  %sh_prom = zext i32 %mul to i64, !dbg !8081
  %shr = lshr i64 %4, %sh_prom, !dbg !8081
  %add1 = add i64 %shr, 1, !dbg !8081
  store i64 %add1, i64* %to_merge, align 8, !dbg !8080, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %merged_lo, metadata !8082, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.declare(metadata i64* %merged_hi, metadata !8084, metadata !DIExpression()), !dbg !8085
  %7 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8086, !tbaa !2286
  %level2 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %7, i32 0, i32 10, !dbg !8088, !ctir !577
  %8 = load i32, i32* %level2, align 8, !dbg !8088, !tbaa !5750, !ctir !69
  %cmp = icmp ugt i32 %8, 1, !dbg !8089
  br i1 %cmp, label %if.then, label %if.else58, !dbg !8090

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.line** %dest, metadata !8091, metadata !DIExpression()), !dbg !8093
  %9 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8094, !tbaa !2286
  %dest3 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %9, i32 0, i32 4, !dbg !8095, !ctir !577
  %10 = load %struct.line**, %struct.line*** %dest3, align 8, !dbg !8095, !tbaa !5733, !ctir !584
  %11 = load %struct.line*, %struct.line** %10, align 8, !dbg !8096, !tbaa !2286, !ctir !469
  store %struct.line* %11, %struct.line** %dest, align 8, !dbg !8093, !tbaa !2286
  br label %while.cond, !dbg !8097

while.cond:                                       ; preds = %if.end, %if.then
  %12 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8098, !tbaa !2286
  %lo4 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 0, !dbg !8099, !ctir !577
  %13 = load %struct.line*, %struct.line** %lo4, align 8, !dbg !8099, !tbaa !5729, !ctir !469
  %14 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8100, !tbaa !2286
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 2, !dbg !8101, !ctir !577
  %15 = load %struct.line*, %struct.line** %end_lo, align 8, !dbg !8101, !tbaa !5721, !ctir !469
  %cmp5 = icmp ne %struct.line* %13, %15, !dbg !8102
  br i1 %cmp5, label %land.lhs.true, label %land.end, !dbg !8103

land.lhs.true:                                    ; preds = %while.cond
  %16 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8104, !tbaa !2286
  %hi6 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %16, i32 0, i32 1, !dbg !8105, !ctir !577
  %17 = load %struct.line*, %struct.line** %hi6, align 8, !dbg !8105, !tbaa !5725, !ctir !469
  %18 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8106, !tbaa !2286
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %18, i32 0, i32 3, !dbg !8107, !ctir !577
  %19 = load %struct.line*, %struct.line** %end_hi, align 8, !dbg !8107, !tbaa !5716, !ctir !469
  %cmp7 = icmp ne %struct.line* %17, %19, !dbg !8108
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !8109

land.rhs:                                         ; preds = %land.lhs.true
  %20 = load i64, i64* %to_merge, align 8, !dbg !8110, !tbaa !2447
  %dec = add i64 %20, -1, !dbg !8110
  store i64 %dec, i64* %to_merge, align 8, !dbg !8110, !tbaa !2447
  %tobool = icmp ne i64 %20, 0, !dbg !8109
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %21 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !8111
  br i1 %21, label %while.body, label %while.end, !dbg !8097

while.body:                                       ; preds = %land.end
  %22 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8112, !tbaa !2286
  %lo8 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %22, i32 0, i32 0, !dbg !8114, !ctir !577
  %23 = load %struct.line*, %struct.line** %lo8, align 8, !dbg !8114, !tbaa !5729, !ctir !469
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %23, i64 -1, !dbg !8115
  %24 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8116, !tbaa !2286
  %hi9 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %24, i32 0, i32 1, !dbg !8117, !ctir !577
  %25 = load %struct.line*, %struct.line** %hi9, align 8, !dbg !8117, !tbaa !5725, !ctir !469
  %add.ptr10 = getelementptr inbounds %struct.line, %struct.line* %25, i64 -1, !dbg !8118
  %call = call i32 @compare(%struct.line* %add.ptr, %struct.line* %add.ptr10), !dbg !8119
  %cmp11 = icmp sle i32 %call, 0, !dbg !8120
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !8121

if.then12:                                        ; preds = %while.body
  %26 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8122, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.line, %struct.line* %26, i32 -1, !dbg !8122
  store %struct.line* %incdec.ptr, %struct.line** %dest, align 8, !dbg !8122, !tbaa !2286
  %27 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8123, !tbaa !2286
  %lo13 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %27, i32 0, i32 0, !dbg !8124, !ctir !577
  %28 = load %struct.line*, %struct.line** %lo13, align 8, !dbg !8125, !tbaa !5729, !ctir !469
  %incdec.ptr14 = getelementptr inbounds %struct.line, %struct.line* %28, i32 -1, !dbg !8125
  store %struct.line* %incdec.ptr14, %struct.line** %lo13, align 8, !dbg !8125, !tbaa !5729, !ctir !469
  %29 = bitcast %struct.line* %incdec.ptr to i8*, !dbg !8126
  %30 = bitcast %struct.line* %incdec.ptr14 to i8*, !dbg !8126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 32, i1 false), !dbg !8126, !tbaa.struct !5937
  br label %if.end, !dbg !8127

if.else:                                          ; preds = %while.body
  %31 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8128, !tbaa !2286
  %incdec.ptr15 = getelementptr inbounds %struct.line, %struct.line* %31, i32 -1, !dbg !8128
  store %struct.line* %incdec.ptr15, %struct.line** %dest, align 8, !dbg !8128, !tbaa !2286
  %32 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8129, !tbaa !2286
  %hi16 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %32, i32 0, i32 1, !dbg !8130, !ctir !577
  %33 = load %struct.line*, %struct.line** %hi16, align 8, !dbg !8131, !tbaa !5725, !ctir !469
  %incdec.ptr17 = getelementptr inbounds %struct.line, %struct.line* %33, i32 -1, !dbg !8131
  store %struct.line* %incdec.ptr17, %struct.line** %hi16, align 8, !dbg !8131, !tbaa !5725, !ctir !469
  %34 = bitcast %struct.line* %incdec.ptr15 to i8*, !dbg !8132
  %35 = bitcast %struct.line* %incdec.ptr17 to i8*, !dbg !8132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 32, i1 false), !dbg !8132, !tbaa.struct !5937
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  br label %while.cond, !dbg !8097, !llvm.loop !8133

while.end:                                        ; preds = %land.end
  %36 = load %struct.line*, %struct.line** %lo_orig, align 8, !dbg !8135, !tbaa !2286
  %37 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8136, !tbaa !2286
  %lo18 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %37, i32 0, i32 0, !dbg !8137, !ctir !577
  %38 = load %struct.line*, %struct.line** %lo18, align 8, !dbg !8137, !tbaa !5729, !ctir !469
  %sub.ptr.lhs.cast = ptrtoint %struct.line* %36 to i64, !dbg !8138
  %sub.ptr.rhs.cast = ptrtoint %struct.line* %38 to i64, !dbg !8138
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8138
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !8138
  store i64 %sub.ptr.div, i64* %merged_lo, align 8, !dbg !8139, !tbaa !2447
  %39 = load %struct.line*, %struct.line** %hi_orig, align 8, !dbg !8140, !tbaa !2286
  %40 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8141, !tbaa !2286
  %hi19 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %40, i32 0, i32 1, !dbg !8142, !ctir !577
  %41 = load %struct.line*, %struct.line** %hi19, align 8, !dbg !8142, !tbaa !5725, !ctir !469
  %sub.ptr.lhs.cast20 = ptrtoint %struct.line* %39 to i64, !dbg !8143
  %sub.ptr.rhs.cast21 = ptrtoint %struct.line* %41 to i64, !dbg !8143
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !8143
  %sub.ptr.div23 = sdiv exact i64 %sub.ptr.sub22, 32, !dbg !8143
  store i64 %sub.ptr.div23, i64* %merged_hi, align 8, !dbg !8144, !tbaa !2447
  %42 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8145, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %42, i32 0, i32 6, !dbg !8147, !ctir !577
  %43 = load i64, i64* %nhi, align 8, !dbg !8147, !tbaa !5738, !ctir !55
  %44 = load i64, i64* %merged_hi, align 8, !dbg !8148, !tbaa !2447
  %cmp24 = icmp eq i64 %43, %44, !dbg !8149
  br i1 %cmp24, label %if.then25, label %if.else39, !dbg !8150

if.then25:                                        ; preds = %while.end
  br label %while.cond26, !dbg !8151

while.cond26:                                     ; preds = %while.body34, %if.then25
  %45 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8152, !tbaa !2286
  %lo27 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %45, i32 0, i32 0, !dbg !8153, !ctir !577
  %46 = load %struct.line*, %struct.line** %lo27, align 8, !dbg !8153, !tbaa !5729, !ctir !469
  %47 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8154, !tbaa !2286
  %end_lo28 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %47, i32 0, i32 2, !dbg !8155, !ctir !577
  %48 = load %struct.line*, %struct.line** %end_lo28, align 8, !dbg !8155, !tbaa !5721, !ctir !469
  %cmp29 = icmp ne %struct.line* %46, %48, !dbg !8156
  br i1 %cmp29, label %land.rhs30, label %land.end33, !dbg !8157

land.rhs30:                                       ; preds = %while.cond26
  %49 = load i64, i64* %to_merge, align 8, !dbg !8158, !tbaa !2447
  %dec31 = add i64 %49, -1, !dbg !8158
  store i64 %dec31, i64* %to_merge, align 8, !dbg !8158, !tbaa !2447
  %tobool32 = icmp ne i64 %49, 0, !dbg !8157
  br label %land.end33

land.end33:                                       ; preds = %land.rhs30, %while.cond26
  %50 = phi i1 [ false, %while.cond26 ], [ %tobool32, %land.rhs30 ], !dbg !8159
  br i1 %50, label %while.body34, label %while.end38, !dbg !8151

while.body34:                                     ; preds = %land.end33
  %51 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8160, !tbaa !2286
  %incdec.ptr35 = getelementptr inbounds %struct.line, %struct.line* %51, i32 -1, !dbg !8160
  store %struct.line* %incdec.ptr35, %struct.line** %dest, align 8, !dbg !8160, !tbaa !2286
  %52 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8161, !tbaa !2286
  %lo36 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %52, i32 0, i32 0, !dbg !8162, !ctir !577
  %53 = load %struct.line*, %struct.line** %lo36, align 8, !dbg !8163, !tbaa !5729, !ctir !469
  %incdec.ptr37 = getelementptr inbounds %struct.line, %struct.line* %53, i32 -1, !dbg !8163
  store %struct.line* %incdec.ptr37, %struct.line** %lo36, align 8, !dbg !8163, !tbaa !5729, !ctir !469
  %54 = bitcast %struct.line* %incdec.ptr35 to i8*, !dbg !8164
  %55 = bitcast %struct.line* %incdec.ptr37 to i8*, !dbg !8164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false), !dbg !8164, !tbaa.struct !5937
  br label %while.cond26, !dbg !8151, !llvm.loop !8165

while.end38:                                      ; preds = %land.end33
  br label %if.end56, !dbg !8151

if.else39:                                        ; preds = %while.end
  %56 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8166, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %56, i32 0, i32 5, !dbg !8168, !ctir !577
  %57 = load i64, i64* %nlo, align 8, !dbg !8168, !tbaa !5742, !ctir !55
  %58 = load i64, i64* %merged_lo, align 8, !dbg !8169, !tbaa !2447
  %cmp40 = icmp eq i64 %57, %58, !dbg !8170
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !8171

if.then41:                                        ; preds = %if.else39
  br label %while.cond42, !dbg !8172

while.cond42:                                     ; preds = %while.body50, %if.then41
  %59 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8173, !tbaa !2286
  %hi43 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %59, i32 0, i32 1, !dbg !8174, !ctir !577
  %60 = load %struct.line*, %struct.line** %hi43, align 8, !dbg !8174, !tbaa !5725, !ctir !469
  %61 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8175, !tbaa !2286
  %end_hi44 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %61, i32 0, i32 3, !dbg !8176, !ctir !577
  %62 = load %struct.line*, %struct.line** %end_hi44, align 8, !dbg !8176, !tbaa !5716, !ctir !469
  %cmp45 = icmp ne %struct.line* %60, %62, !dbg !8177
  br i1 %cmp45, label %land.rhs46, label %land.end49, !dbg !8178

land.rhs46:                                       ; preds = %while.cond42
  %63 = load i64, i64* %to_merge, align 8, !dbg !8179, !tbaa !2447
  %dec47 = add i64 %63, -1, !dbg !8179
  store i64 %dec47, i64* %to_merge, align 8, !dbg !8179, !tbaa !2447
  %tobool48 = icmp ne i64 %63, 0, !dbg !8178
  br label %land.end49

land.end49:                                       ; preds = %land.rhs46, %while.cond42
  %64 = phi i1 [ false, %while.cond42 ], [ %tobool48, %land.rhs46 ], !dbg !8180
  br i1 %64, label %while.body50, label %while.end54, !dbg !8172

while.body50:                                     ; preds = %land.end49
  %65 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8181, !tbaa !2286
  %incdec.ptr51 = getelementptr inbounds %struct.line, %struct.line* %65, i32 -1, !dbg !8181
  store %struct.line* %incdec.ptr51, %struct.line** %dest, align 8, !dbg !8181, !tbaa !2286
  %66 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8182, !tbaa !2286
  %hi52 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %66, i32 0, i32 1, !dbg !8183, !ctir !577
  %67 = load %struct.line*, %struct.line** %hi52, align 8, !dbg !8184, !tbaa !5725, !ctir !469
  %incdec.ptr53 = getelementptr inbounds %struct.line, %struct.line* %67, i32 -1, !dbg !8184
  store %struct.line* %incdec.ptr53, %struct.line** %hi52, align 8, !dbg !8184, !tbaa !5725, !ctir !469
  %68 = bitcast %struct.line* %incdec.ptr51 to i8*, !dbg !8185
  %69 = bitcast %struct.line* %incdec.ptr53 to i8*, !dbg !8185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 32, i1 false), !dbg !8185, !tbaa.struct !5937
  br label %while.cond42, !dbg !8172, !llvm.loop !8186

while.end54:                                      ; preds = %land.end49
  br label %if.end55, !dbg !8172

if.end55:                                         ; preds = %while.end54, %if.else39
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %while.end38
  %70 = load %struct.line*, %struct.line** %dest, align 8, !dbg !8187, !tbaa !2286
  %71 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8188, !tbaa !2286
  %dest57 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %71, i32 0, i32 4, !dbg !8189, !ctir !577
  %72 = load %struct.line**, %struct.line*** %dest57, align 8, !dbg !8189, !tbaa !5733, !ctir !584
  store %struct.line* %70, %struct.line** %72, align 8, !dbg !8190, !tbaa !2286, !ctir !469
  br label %if.end129, !dbg !8191

if.else58:                                        ; preds = %entry
  br label %while.cond59, !dbg !8192

while.cond59:                                     ; preds = %if.end84, %if.else58
  %73 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8194, !tbaa !2286
  %lo60 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %73, i32 0, i32 0, !dbg !8195, !ctir !577
  %74 = load %struct.line*, %struct.line** %lo60, align 8, !dbg !8195, !tbaa !5729, !ctir !469
  %75 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8196, !tbaa !2286
  %end_lo61 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %75, i32 0, i32 2, !dbg !8197, !ctir !577
  %76 = load %struct.line*, %struct.line** %end_lo61, align 8, !dbg !8197, !tbaa !5721, !ctir !469
  %cmp62 = icmp ne %struct.line* %74, %76, !dbg !8198
  br i1 %cmp62, label %land.lhs.true63, label %land.end70, !dbg !8199

land.lhs.true63:                                  ; preds = %while.cond59
  %77 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8200, !tbaa !2286
  %hi64 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %77, i32 0, i32 1, !dbg !8201, !ctir !577
  %78 = load %struct.line*, %struct.line** %hi64, align 8, !dbg !8201, !tbaa !5725, !ctir !469
  %79 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8202, !tbaa !2286
  %end_hi65 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %79, i32 0, i32 3, !dbg !8203, !ctir !577
  %80 = load %struct.line*, %struct.line** %end_hi65, align 8, !dbg !8203, !tbaa !5716, !ctir !469
  %cmp66 = icmp ne %struct.line* %78, %80, !dbg !8204
  br i1 %cmp66, label %land.rhs67, label %land.end70, !dbg !8205

land.rhs67:                                       ; preds = %land.lhs.true63
  %81 = load i64, i64* %to_merge, align 8, !dbg !8206, !tbaa !2447
  %dec68 = add i64 %81, -1, !dbg !8206
  store i64 %dec68, i64* %to_merge, align 8, !dbg !8206, !tbaa !2447
  %tobool69 = icmp ne i64 %81, 0, !dbg !8205
  br label %land.end70

land.end70:                                       ; preds = %land.rhs67, %land.lhs.true63, %while.cond59
  %82 = phi i1 [ false, %land.lhs.true63 ], [ false, %while.cond59 ], [ %tobool69, %land.rhs67 ], !dbg !8207
  br i1 %82, label %while.body71, label %while.end85, !dbg !8192

while.body71:                                     ; preds = %land.end70
  %83 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8208, !tbaa !2286
  %lo72 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %83, i32 0, i32 0, !dbg !8211, !ctir !577
  %84 = load %struct.line*, %struct.line** %lo72, align 8, !dbg !8211, !tbaa !5729, !ctir !469
  %add.ptr73 = getelementptr inbounds %struct.line, %struct.line* %84, i64 -1, !dbg !8212
  %85 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8213, !tbaa !2286
  %hi74 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %85, i32 0, i32 1, !dbg !8214, !ctir !577
  %86 = load %struct.line*, %struct.line** %hi74, align 8, !dbg !8214, !tbaa !5725, !ctir !469
  %add.ptr75 = getelementptr inbounds %struct.line, %struct.line* %86, i64 -1, !dbg !8215
  %call76 = call i32 @compare(%struct.line* %add.ptr73, %struct.line* %add.ptr75), !dbg !8216
  %cmp77 = icmp sle i32 %call76, 0, !dbg !8217
  br i1 %cmp77, label %if.then78, label %if.else81, !dbg !8218

if.then78:                                        ; preds = %while.body71
  %87 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8219, !tbaa !2286
  %lo79 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %87, i32 0, i32 0, !dbg !8220, !ctir !577
  %88 = load %struct.line*, %struct.line** %lo79, align 8, !dbg !8221, !tbaa !5729, !ctir !469
  %incdec.ptr80 = getelementptr inbounds %struct.line, %struct.line* %88, i32 -1, !dbg !8221
  store %struct.line* %incdec.ptr80, %struct.line** %lo79, align 8, !dbg !8221, !tbaa !5729, !ctir !469
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8222, !tbaa !2286
  %90 = load i8*, i8** %temp_output.addr, align 8, !dbg !8223, !tbaa !2286
  call void @write_unique(%struct.line* %incdec.ptr80, %struct._IO_FILE* %89, i8* %90), !dbg !8224
  br label %if.end84, !dbg !8224

if.else81:                                        ; preds = %while.body71
  %91 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8225, !tbaa !2286
  %hi82 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %91, i32 0, i32 1, !dbg !8226, !ctir !577
  %92 = load %struct.line*, %struct.line** %hi82, align 8, !dbg !8227, !tbaa !5725, !ctir !469
  %incdec.ptr83 = getelementptr inbounds %struct.line, %struct.line* %92, i32 -1, !dbg !8227
  store %struct.line* %incdec.ptr83, %struct.line** %hi82, align 8, !dbg !8227, !tbaa !5725, !ctir !469
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8228, !tbaa !2286
  %94 = load i8*, i8** %temp_output.addr, align 8, !dbg !8229, !tbaa !2286
  call void @write_unique(%struct.line* %incdec.ptr83, %struct._IO_FILE* %93, i8* %94), !dbg !8230
  br label %if.end84

if.end84:                                         ; preds = %if.else81, %if.then78
  br label %while.cond59, !dbg !8192, !llvm.loop !8231

while.end85:                                      ; preds = %land.end70
  %95 = load %struct.line*, %struct.line** %lo_orig, align 8, !dbg !8233, !tbaa !2286
  %96 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8234, !tbaa !2286
  %lo86 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %96, i32 0, i32 0, !dbg !8235, !ctir !577
  %97 = load %struct.line*, %struct.line** %lo86, align 8, !dbg !8235, !tbaa !5729, !ctir !469
  %sub.ptr.lhs.cast87 = ptrtoint %struct.line* %95 to i64, !dbg !8236
  %sub.ptr.rhs.cast88 = ptrtoint %struct.line* %97 to i64, !dbg !8236
  %sub.ptr.sub89 = sub i64 %sub.ptr.lhs.cast87, %sub.ptr.rhs.cast88, !dbg !8236
  %sub.ptr.div90 = sdiv exact i64 %sub.ptr.sub89, 32, !dbg !8236
  store i64 %sub.ptr.div90, i64* %merged_lo, align 8, !dbg !8237, !tbaa !2447
  %98 = load %struct.line*, %struct.line** %hi_orig, align 8, !dbg !8238, !tbaa !2286
  %99 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8239, !tbaa !2286
  %hi91 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %99, i32 0, i32 1, !dbg !8240, !ctir !577
  %100 = load %struct.line*, %struct.line** %hi91, align 8, !dbg !8240, !tbaa !5725, !ctir !469
  %sub.ptr.lhs.cast92 = ptrtoint %struct.line* %98 to i64, !dbg !8241
  %sub.ptr.rhs.cast93 = ptrtoint %struct.line* %100 to i64, !dbg !8241
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93, !dbg !8241
  %sub.ptr.div95 = sdiv exact i64 %sub.ptr.sub94, 32, !dbg !8241
  store i64 %sub.ptr.div95, i64* %merged_hi, align 8, !dbg !8242, !tbaa !2447
  %101 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8243, !tbaa !2286
  %nhi96 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %101, i32 0, i32 6, !dbg !8245, !ctir !577
  %102 = load i64, i64* %nhi96, align 8, !dbg !8245, !tbaa !5738, !ctir !55
  %103 = load i64, i64* %merged_hi, align 8, !dbg !8246, !tbaa !2447
  %cmp97 = icmp eq i64 %102, %103, !dbg !8247
  br i1 %cmp97, label %if.then98, label %if.else111, !dbg !8248

if.then98:                                        ; preds = %while.end85
  br label %while.cond99, !dbg !8249

while.cond99:                                     ; preds = %while.body107, %if.then98
  %104 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8251, !tbaa !2286
  %lo100 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %104, i32 0, i32 0, !dbg !8252, !ctir !577
  %105 = load %struct.line*, %struct.line** %lo100, align 8, !dbg !8252, !tbaa !5729, !ctir !469
  %106 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8253, !tbaa !2286
  %end_lo101 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %106, i32 0, i32 2, !dbg !8254, !ctir !577
  %107 = load %struct.line*, %struct.line** %end_lo101, align 8, !dbg !8254, !tbaa !5721, !ctir !469
  %cmp102 = icmp ne %struct.line* %105, %107, !dbg !8255
  br i1 %cmp102, label %land.rhs103, label %land.end106, !dbg !8256

land.rhs103:                                      ; preds = %while.cond99
  %108 = load i64, i64* %to_merge, align 8, !dbg !8257, !tbaa !2447
  %dec104 = add i64 %108, -1, !dbg !8257
  store i64 %dec104, i64* %to_merge, align 8, !dbg !8257, !tbaa !2447
  %tobool105 = icmp ne i64 %108, 0, !dbg !8256
  br label %land.end106

land.end106:                                      ; preds = %land.rhs103, %while.cond99
  %109 = phi i1 [ false, %while.cond99 ], [ %tobool105, %land.rhs103 ], !dbg !8258
  br i1 %109, label %while.body107, label %while.end110, !dbg !8249

while.body107:                                    ; preds = %land.end106
  %110 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8259, !tbaa !2286
  %lo108 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %110, i32 0, i32 0, !dbg !8260, !ctir !577
  %111 = load %struct.line*, %struct.line** %lo108, align 8, !dbg !8261, !tbaa !5729, !ctir !469
  %incdec.ptr109 = getelementptr inbounds %struct.line, %struct.line* %111, i32 -1, !dbg !8261
  store %struct.line* %incdec.ptr109, %struct.line** %lo108, align 8, !dbg !8261, !tbaa !5729, !ctir !469
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8262, !tbaa !2286
  %113 = load i8*, i8** %temp_output.addr, align 8, !dbg !8263, !tbaa !2286
  call void @write_unique(%struct.line* %incdec.ptr109, %struct._IO_FILE* %112, i8* %113), !dbg !8264
  br label %while.cond99, !dbg !8249, !llvm.loop !8265

while.end110:                                     ; preds = %land.end106
  br label %if.end128, !dbg !8267

if.else111:                                       ; preds = %while.end85
  %114 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8268, !tbaa !2286
  %nlo112 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %114, i32 0, i32 5, !dbg !8270, !ctir !577
  %115 = load i64, i64* %nlo112, align 8, !dbg !8270, !tbaa !5742, !ctir !55
  %116 = load i64, i64* %merged_lo, align 8, !dbg !8271, !tbaa !2447
  %cmp113 = icmp eq i64 %115, %116, !dbg !8272
  br i1 %cmp113, label %if.then114, label %if.end127, !dbg !8273

if.then114:                                       ; preds = %if.else111
  br label %while.cond115, !dbg !8274

while.cond115:                                    ; preds = %while.body123, %if.then114
  %117 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8276, !tbaa !2286
  %hi116 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %117, i32 0, i32 1, !dbg !8277, !ctir !577
  %118 = load %struct.line*, %struct.line** %hi116, align 8, !dbg !8277, !tbaa !5725, !ctir !469
  %119 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8278, !tbaa !2286
  %end_hi117 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %119, i32 0, i32 3, !dbg !8279, !ctir !577
  %120 = load %struct.line*, %struct.line** %end_hi117, align 8, !dbg !8279, !tbaa !5716, !ctir !469
  %cmp118 = icmp ne %struct.line* %118, %120, !dbg !8280
  br i1 %cmp118, label %land.rhs119, label %land.end122, !dbg !8281

land.rhs119:                                      ; preds = %while.cond115
  %121 = load i64, i64* %to_merge, align 8, !dbg !8282, !tbaa !2447
  %dec120 = add i64 %121, -1, !dbg !8282
  store i64 %dec120, i64* %to_merge, align 8, !dbg !8282, !tbaa !2447
  %tobool121 = icmp ne i64 %121, 0, !dbg !8281
  br label %land.end122

land.end122:                                      ; preds = %land.rhs119, %while.cond115
  %122 = phi i1 [ false, %while.cond115 ], [ %tobool121, %land.rhs119 ], !dbg !8283
  br i1 %122, label %while.body123, label %while.end126, !dbg !8274

while.body123:                                    ; preds = %land.end122
  %123 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8284, !tbaa !2286
  %hi124 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %123, i32 0, i32 1, !dbg !8285, !ctir !577
  %124 = load %struct.line*, %struct.line** %hi124, align 8, !dbg !8286, !tbaa !5725, !ctir !469
  %incdec.ptr125 = getelementptr inbounds %struct.line, %struct.line* %124, i32 -1, !dbg !8286
  store %struct.line* %incdec.ptr125, %struct.line** %hi124, align 8, !dbg !8286, !tbaa !5725, !ctir !469
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %tfp.addr, align 8, !dbg !8287, !tbaa !2286
  %126 = load i8*, i8** %temp_output.addr, align 8, !dbg !8288, !tbaa !2286
  call void @write_unique(%struct.line* %incdec.ptr125, %struct._IO_FILE* %125, i8* %126), !dbg !8289
  br label %while.cond115, !dbg !8274, !llvm.loop !8290

while.end126:                                     ; preds = %land.end122
  br label %if.end127, !dbg !8292

if.end127:                                        ; preds = %while.end126, %if.else111
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %while.end110
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end56
  %127 = load %struct.line*, %struct.line** %lo_orig, align 8, !dbg !8293, !tbaa !2286
  %128 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8294, !tbaa !2286
  %lo130 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %128, i32 0, i32 0, !dbg !8295, !ctir !577
  %129 = load %struct.line*, %struct.line** %lo130, align 8, !dbg !8295, !tbaa !5729, !ctir !469
  %sub.ptr.lhs.cast131 = ptrtoint %struct.line* %127 to i64, !dbg !8296
  %sub.ptr.rhs.cast132 = ptrtoint %struct.line* %129 to i64, !dbg !8296
  %sub.ptr.sub133 = sub i64 %sub.ptr.lhs.cast131, %sub.ptr.rhs.cast132, !dbg !8296
  %sub.ptr.div134 = sdiv exact i64 %sub.ptr.sub133, 32, !dbg !8296
  store i64 %sub.ptr.div134, i64* %merged_lo, align 8, !dbg !8297, !tbaa !2447
  %130 = load %struct.line*, %struct.line** %hi_orig, align 8, !dbg !8298, !tbaa !2286
  %131 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8299, !tbaa !2286
  %hi135 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %131, i32 0, i32 1, !dbg !8300, !ctir !577
  %132 = load %struct.line*, %struct.line** %hi135, align 8, !dbg !8300, !tbaa !5725, !ctir !469
  %sub.ptr.lhs.cast136 = ptrtoint %struct.line* %130 to i64, !dbg !8301
  %sub.ptr.rhs.cast137 = ptrtoint %struct.line* %132 to i64, !dbg !8301
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !8301
  %sub.ptr.div139 = sdiv exact i64 %sub.ptr.sub138, 32, !dbg !8301
  store i64 %sub.ptr.div139, i64* %merged_hi, align 8, !dbg !8302, !tbaa !2447
  %133 = load i64, i64* %merged_lo, align 8, !dbg !8303, !tbaa !2447
  %134 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8304, !tbaa !2286
  %nlo140 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %134, i32 0, i32 5, !dbg !8305, !ctir !577
  %135 = load i64, i64* %nlo140, align 8, !dbg !8306, !tbaa !5742, !ctir !55
  %sub = sub i64 %135, %133, !dbg !8306
  store i64 %sub, i64* %nlo140, align 8, !dbg !8306, !tbaa !5742, !ctir !55
  %136 = load i64, i64* %merged_hi, align 8, !dbg !8307, !tbaa !2447
  %137 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8308, !tbaa !2286
  %nhi141 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %137, i32 0, i32 6, !dbg !8309, !ctir !577
  %138 = load i64, i64* %nhi141, align 8, !dbg !8310, !tbaa !5738, !ctir !55
  %sub142 = sub i64 %138, %136, !dbg !8310
  store i64 %sub142, i64* %nhi141, align 8, !dbg !8310, !tbaa !5738, !ctir !55
  ret void, !dbg !8311
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_check_insert(%struct.merge_node_queue* %queue, %struct.merge_node* %node) #4 !dbg !8312 !ctir !708 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %node.addr = alloca %struct.merge_node*, align 8
  %lo_avail = alloca i8, align 1, !ctir !103
  %hi_avail = alloca i8, align 1, !ctir !103
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8317, !tbaa !2286
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 11, !dbg !8319, !ctir !577
  %1 = load i8, i8* %queued, align 4, !dbg !8319, !tbaa !5754
  %tobool = trunc i8 %1 to i1, !dbg !8319, !ctir !103
  br i1 %tobool, label %if.end13, label %if.then, !dbg !8320

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %lo_avail, metadata !8321, metadata !DIExpression()), !dbg !8323
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8324, !tbaa !2286
  %lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 0, !dbg !8325, !ctir !577
  %3 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8325, !tbaa !5729, !ctir !469
  %4 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8326, !tbaa !2286
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %4, i32 0, i32 2, !dbg !8327, !ctir !577
  %5 = load %struct.line*, %struct.line** %end_lo, align 8, !dbg !8327, !tbaa !5721, !ctir !469
  %sub.ptr.lhs.cast = ptrtoint %struct.line* %3 to i64, !dbg !8328
  %sub.ptr.rhs.cast = ptrtoint %struct.line* %5 to i64, !dbg !8328
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8328
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !8328
  %cmp = icmp ne i64 %sub.ptr.div, 0, !dbg !8329
  %frombool = zext i1 %cmp to i8, !dbg !8323
  store i8 %frombool, i8* %lo_avail, align 1, !dbg !8323, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %hi_avail, metadata !8330, metadata !DIExpression()), !dbg !8331
  %6 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8332, !tbaa !2286
  %hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %6, i32 0, i32 1, !dbg !8333, !ctir !577
  %7 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8333, !tbaa !5725, !ctir !469
  %8 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8334, !tbaa !2286
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %8, i32 0, i32 3, !dbg !8335, !ctir !577
  %9 = load %struct.line*, %struct.line** %end_hi, align 8, !dbg !8335, !tbaa !5716, !ctir !469
  %sub.ptr.lhs.cast1 = ptrtoint %struct.line* %7 to i64, !dbg !8336
  %sub.ptr.rhs.cast2 = ptrtoint %struct.line* %9 to i64, !dbg !8336
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !8336
  %sub.ptr.div4 = sdiv exact i64 %sub.ptr.sub3, 32, !dbg !8336
  %cmp5 = icmp ne i64 %sub.ptr.div4, 0, !dbg !8337
  %frombool6 = zext i1 %cmp5 to i8, !dbg !8331
  store i8 %frombool6, i8* %hi_avail, align 1, !dbg !8331, !tbaa !2430
  %10 = load i8, i8* %lo_avail, align 1, !dbg !8338, !tbaa !2430
  %tobool7 = trunc i8 %10 to i1, !dbg !8338
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !8340

cond.true:                                        ; preds = %if.then
  %11 = load i8, i8* %hi_avail, align 1, !dbg !8341, !tbaa !2430
  %tobool8 = trunc i8 %11 to i1, !dbg !8341
  br i1 %tobool8, label %if.then12, label %lor.lhs.false, !dbg !8342

lor.lhs.false:                                    ; preds = %cond.true
  %12 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8343, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 6, !dbg !8344, !ctir !577
  %13 = load i64, i64* %nhi, align 8, !dbg !8344, !tbaa !5738, !ctir !55
  %tobool9 = icmp ne i64 %13, 0, !dbg !8343
  br i1 %tobool9, label %if.end, label %if.then12, !dbg !8338

cond.false:                                       ; preds = %if.then
  %14 = load i8, i8* %hi_avail, align 1, !dbg !8345, !tbaa !2430
  %tobool10 = trunc i8 %14 to i1, !dbg !8345
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !8346

land.lhs.true:                                    ; preds = %cond.false
  %15 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8347, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %15, i32 0, i32 5, !dbg !8348, !ctir !577
  %16 = load i64, i64* %nlo, align 8, !dbg !8348, !tbaa !5742, !ctir !55
  %tobool11 = icmp ne i64 %16, 0, !dbg !8347
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !8340

if.then12:                                        ; preds = %land.lhs.true, %lor.lhs.false, %cond.true
  %17 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8349, !tbaa !2286
  %18 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8350, !tbaa !2286
  call void @queue_insert(%struct.merge_node_queue* %17, %struct.merge_node* %18), !dbg !8351
  br label %if.end, !dbg !8351

if.end:                                           ; preds = %if.then12, %land.lhs.true, %cond.false, %lor.lhs.false
  br label %if.end13, !dbg !8352

if.end13:                                         ; preds = %if.end, %entry
  ret void, !dbg !8353
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_check_insert_parent(%struct.merge_node_queue* %queue, %struct.merge_node* %node) #4 !dbg !8354 !ctir !708 {
entry:
  %queue.addr = alloca %struct.merge_node_queue*, align 8
  %node.addr = alloca %struct.merge_node*, align 8
  store %struct.merge_node_queue* %queue, %struct.merge_node_queue** %queue.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node_queue** %queue.addr, metadata !8355, metadata !DIExpression()), !dbg !8356
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8357, metadata !DIExpression()), !dbg !8358
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8359, !tbaa !2286
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 10, !dbg !8361, !ctir !577
  %1 = load i32, i32* %level, align 8, !dbg !8361, !tbaa !5750, !ctir !69
  %cmp = icmp ugt i32 %1, 1, !dbg !8362
  br i1 %cmp, label %if.then, label %if.else, !dbg !8363

if.then:                                          ; preds = %entry
  %2 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8364, !tbaa !2286
  %parent = getelementptr inbounds %struct.merge_node, %struct.merge_node* %2, i32 0, i32 7, !dbg !8366, !ctir !577
  %3 = load %struct.merge_node*, %struct.merge_node** %parent, align 8, !dbg !8366, !tbaa !5746, !ctir !576
  call void @lock_node(%struct.merge_node* %3), !dbg !8367
  %4 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8368, !tbaa !2286
  %5 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8369, !tbaa !2286
  %parent1 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %5, i32 0, i32 7, !dbg !8370, !ctir !577
  %6 = load %struct.merge_node*, %struct.merge_node** %parent1, align 8, !dbg !8370, !tbaa !5746, !ctir !576
  call void @queue_check_insert(%struct.merge_node_queue* %4, %struct.merge_node* %6), !dbg !8371
  %7 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8372, !tbaa !2286
  %parent2 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %7, i32 0, i32 7, !dbg !8373, !ctir !577
  %8 = load %struct.merge_node*, %struct.merge_node** %parent2, align 8, !dbg !8373, !tbaa !5746, !ctir !576
  call void @unlock_node(%struct.merge_node* %8), !dbg !8374
  br label %if.end6, !dbg !8375

if.else:                                          ; preds = %entry
  %9 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8376, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %9, i32 0, i32 5, !dbg !8378, !ctir !577
  %10 = load i64, i64* %nlo, align 8, !dbg !8378, !tbaa !5742, !ctir !55
  %11 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8379, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %11, i32 0, i32 6, !dbg !8380, !ctir !577
  %12 = load i64, i64* %nhi, align 8, !dbg !8380, !tbaa !5738, !ctir !55
  %add = add i64 %10, %12, !dbg !8381
  %cmp3 = icmp eq i64 %add, 0, !dbg !8382
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8383

if.then4:                                         ; preds = %if.else
  %13 = load %struct.merge_node_queue*, %struct.merge_node_queue** %queue.addr, align 8, !dbg !8384, !tbaa !2286
  %14 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8386, !tbaa !2286
  %parent5 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 7, !dbg !8387, !ctir !577
  %15 = load %struct.merge_node*, %struct.merge_node** %parent5, align 8, !dbg !8387, !tbaa !5746, !ctir !576
  call void @queue_insert(%struct.merge_node_queue* %13, %struct.merge_node* %15), !dbg !8388
  br label %if.end, !dbg !8389

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !8390
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lock_node(%struct.merge_node* %node) #4 !dbg !8391 !ctir !714 {
entry:
  %node.addr = alloca %struct.merge_node*, align 8
  store %struct.merge_node* %node, %struct.merge_node** %node.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  %0 = load %struct.merge_node*, %struct.merge_node** %node.addr, align 8, !dbg !8394, !tbaa !2286
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %0, i32 0, i32 12, !dbg !8395, !ctir !577
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %lock) #12, !dbg !8396
  ret void, !dbg !8397
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #2

declare dso_local i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) #3

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_signal(%union.pthread_cond_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mergelines(%struct.line* noalias %t, i64 %nlines, %struct.line* noalias %lo) #4 !dbg !8398 !ctir !705 {
entry:
  %t.addr = alloca %struct.line*, align 8
  %nlines.addr = alloca i64, align 8
  %lo.addr = alloca %struct.line*, align 8
  %nlo = alloca i64, align 8, !ctir !55
  %nhi = alloca i64, align 8, !ctir !55
  %hi = alloca %struct.line*, align 8, !ctir !469
  store %struct.line* %t, %struct.line** %t.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %t.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i64 %nlines, i64* %nlines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nlines.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  store %struct.line* %lo, %struct.line** %lo.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %lo.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata i64* %nlo, metadata !8405, metadata !DIExpression()), !dbg !8406
  %0 = load i64, i64* %nlines.addr, align 8, !dbg !8407, !tbaa !2447
  %div = udiv i64 %0, 2, !dbg !8408
  store i64 %div, i64* %nlo, align 8, !dbg !8406, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nhi, metadata !8409, metadata !DIExpression()), !dbg !8410
  %1 = load i64, i64* %nlines.addr, align 8, !dbg !8411, !tbaa !2447
  %2 = load i64, i64* %nlo, align 8, !dbg !8412, !tbaa !2447
  %sub = sub i64 %1, %2, !dbg !8413
  store i64 %sub, i64* %nhi, align 8, !dbg !8410, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.line** %hi, metadata !8414, metadata !DIExpression()), !dbg !8415
  %3 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8416, !tbaa !2286
  %4 = load i64, i64* %nlo, align 8, !dbg !8417, !tbaa !2447
  %idx.neg = sub i64 0, %4, !dbg !8418
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %3, i64 %idx.neg, !dbg !8418
  store %struct.line* %add.ptr, %struct.line** %hi, align 8, !dbg !8415, !tbaa !2286
  br label %while.body, !dbg !8419

while.body:                                       ; preds = %entry, %if.end15
  %5 = load %struct.line*, %struct.line** %lo.addr, align 8, !dbg !8420, !tbaa !2286
  %add.ptr1 = getelementptr inbounds %struct.line, %struct.line* %5, i64 -1, !dbg !8422
  %6 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8423, !tbaa !2286
  %add.ptr2 = getelementptr inbounds %struct.line, %struct.line* %6, i64 -1, !dbg !8424
  %call = call i32 @compare(%struct.line* %add.ptr1, %struct.line* %add.ptr2), !dbg !8425
  %cmp = icmp sle i32 %call, 0, !dbg !8426
  br i1 %cmp, label %if.then, label %if.else, !dbg !8427

if.then:                                          ; preds = %while.body
  %7 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8428, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.line, %struct.line* %7, i32 -1, !dbg !8428
  store %struct.line* %incdec.ptr, %struct.line** %t.addr, align 8, !dbg !8428, !tbaa !2286
  %8 = load %struct.line*, %struct.line** %lo.addr, align 8, !dbg !8430, !tbaa !2286
  %incdec.ptr3 = getelementptr inbounds %struct.line, %struct.line* %8, i32 -1, !dbg !8430
  store %struct.line* %incdec.ptr3, %struct.line** %lo.addr, align 8, !dbg !8430, !tbaa !2286
  %9 = bitcast %struct.line* %incdec.ptr to i8*, !dbg !8431
  %10 = bitcast %struct.line* %incdec.ptr3 to i8*, !dbg !8431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !8431, !tbaa.struct !5937
  %11 = load i64, i64* %nlo, align 8, !dbg !8432, !tbaa !2447
  %dec = add i64 %11, -1, !dbg !8432
  store i64 %dec, i64* %nlo, align 8, !dbg !8432, !tbaa !2447
  %tobool = icmp ne i64 %dec, 0, !dbg !8432
  br i1 %tobool, label %if.end, label %if.then4, !dbg !8434

if.then4:                                         ; preds = %if.then
  br label %return, !dbg !8435

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !8437

if.else:                                          ; preds = %while.body
  %12 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8438, !tbaa !2286
  %incdec.ptr5 = getelementptr inbounds %struct.line, %struct.line* %12, i32 -1, !dbg !8438
  store %struct.line* %incdec.ptr5, %struct.line** %t.addr, align 8, !dbg !8438, !tbaa !2286
  %13 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8440, !tbaa !2286
  %incdec.ptr6 = getelementptr inbounds %struct.line, %struct.line* %13, i32 -1, !dbg !8440
  store %struct.line* %incdec.ptr6, %struct.line** %hi, align 8, !dbg !8440, !tbaa !2286
  %14 = bitcast %struct.line* %incdec.ptr5 to i8*, !dbg !8441
  %15 = bitcast %struct.line* %incdec.ptr6 to i8*, !dbg !8441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false), !dbg !8441, !tbaa.struct !5937
  %16 = load i64, i64* %nhi, align 8, !dbg !8442, !tbaa !2447
  %dec7 = add i64 %16, -1, !dbg !8442
  store i64 %dec7, i64* %nhi, align 8, !dbg !8442, !tbaa !2447
  %tobool8 = icmp ne i64 %dec7, 0, !dbg !8442
  br i1 %tobool8, label %if.end14, label %if.then9, !dbg !8444

if.then9:                                         ; preds = %if.else
  br label %do.body, !dbg !8445

do.body:                                          ; preds = %do.cond, %if.then9
  %17 = load %struct.line*, %struct.line** %t.addr, align 8, !dbg !8447, !tbaa !2286
  %incdec.ptr10 = getelementptr inbounds %struct.line, %struct.line* %17, i32 -1, !dbg !8447
  store %struct.line* %incdec.ptr10, %struct.line** %t.addr, align 8, !dbg !8447, !tbaa !2286
  %18 = load %struct.line*, %struct.line** %lo.addr, align 8, !dbg !8448, !tbaa !2286
  %incdec.ptr11 = getelementptr inbounds %struct.line, %struct.line* %18, i32 -1, !dbg !8448
  store %struct.line* %incdec.ptr11, %struct.line** %lo.addr, align 8, !dbg !8448, !tbaa !2286
  %19 = bitcast %struct.line* %incdec.ptr10 to i8*, !dbg !8449
  %20 = bitcast %struct.line* %incdec.ptr11 to i8*, !dbg !8449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false), !dbg !8449, !tbaa.struct !5937
  br label %do.cond, !dbg !8450

do.cond:                                          ; preds = %do.body
  %21 = load i64, i64* %nlo, align 8, !dbg !8451, !tbaa !2447
  %dec12 = add i64 %21, -1, !dbg !8451
  store i64 %dec12, i64* %nlo, align 8, !dbg !8451, !tbaa !2447
  %tobool13 = icmp ne i64 %dec12, 0, !dbg !8450
  br i1 %tobool13, label %do.body, label %do.end, !dbg !8450, !llvm.loop !8452

do.end:                                           ; preds = %do.cond
  br label %return, !dbg !8454

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  br label %while.body, !dbg !8419, !llvm.loop !8455

return:                                           ; preds = %do.end, %if.then4
  ret void, !dbg !8457
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.merge_node* @init_node(%struct.merge_node* noalias %parent, %struct.merge_node* noalias %node_pool, %struct.line* %dest, i64 %nthreads, i64 %total_lines, i1 zeroext %is_lo_child) #4 !dbg !8458 !ctir !680 {
entry:
  %parent.addr = alloca %struct.merge_node*, align 8
  %node_pool.addr = alloca %struct.merge_node*, align 8
  %dest.addr = alloca %struct.line*, align 8
  %nthreads.addr = alloca i64, align 8
  %total_lines.addr = alloca i64, align 8
  %is_lo_child.addr = alloca i8, align 1
  %nlines = alloca i64, align 8, !ctir !55
  %nlo1 = alloca i64, align 8, !ctir !55
  %nhi2 = alloca i64, align 8, !ctir !55
  %lo = alloca %struct.line*, align 8, !ctir !469
  %hi = alloca %struct.line*, align 8, !ctir !469
  %parent_end = alloca %struct.line**, align 8, !ctir !584
  %node = alloca %struct.merge_node*, align 8, !ctir !576
  %lo_threads = alloca i64, align 8, !ctir !55
  %hi_threads = alloca i64, align 8, !ctir !55
  store %struct.merge_node* %parent, %struct.merge_node** %parent.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %parent.addr, metadata !8459, metadata !DIExpression()), !dbg !8460
  store %struct.merge_node* %node_pool, %struct.merge_node** %node_pool.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node_pool.addr, metadata !8461, metadata !DIExpression()), !dbg !8462
  store %struct.line* %dest, %struct.line** %dest.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %dest.addr, metadata !8463, metadata !DIExpression()), !dbg !8464
  store i64 %nthreads, i64* %nthreads.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nthreads.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  store i64 %total_lines, i64* %total_lines.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %total_lines.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  %frombool = zext i1 %is_lo_child to i8
  store i8 %frombool, i8* %is_lo_child.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %is_lo_child.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.declare(metadata i64* %nlines, metadata !8471, metadata !DIExpression()), !dbg !8472
  %0 = load i8, i8* %is_lo_child.addr, align 1, !dbg !8473, !tbaa !2430
  %tobool = trunc i8 %0 to i1, !dbg !8473
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8473

cond.true:                                        ; preds = %entry
  %1 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8474, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %1, i32 0, i32 5, !dbg !8475, !ctir !577
  %2 = load i64, i64* %nlo, align 8, !dbg !8475, !tbaa !5742, !ctir !55
  br label %cond.end, !dbg !8473

cond.false:                                       ; preds = %entry
  %3 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8476, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %3, i32 0, i32 6, !dbg !8477, !ctir !577
  %4 = load i64, i64* %nhi, align 8, !dbg !8477, !tbaa !5738, !ctir !55
  br label %cond.end, !dbg !8473

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %4, %cond.false ], !dbg !8473
  store i64 %cond, i64* %nlines, align 8, !dbg !8472, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nlo1, metadata !8478, metadata !DIExpression()), !dbg !8479
  %5 = load i64, i64* %nlines, align 8, !dbg !8480, !tbaa !2447
  %div = udiv i64 %5, 2, !dbg !8481
  store i64 %div, i64* %nlo1, align 8, !dbg !8479, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nhi2, metadata !8482, metadata !DIExpression()), !dbg !8483
  %6 = load i64, i64* %nlines, align 8, !dbg !8484, !tbaa !2447
  %7 = load i64, i64* %nlo1, align 8, !dbg !8485, !tbaa !2447
  %sub = sub i64 %6, %7, !dbg !8486
  store i64 %sub, i64* %nhi2, align 8, !dbg !8483, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.line** %lo, metadata !8487, metadata !DIExpression()), !dbg !8488
  %8 = load %struct.line*, %struct.line** %dest.addr, align 8, !dbg !8489, !tbaa !2286
  %9 = load i64, i64* %total_lines.addr, align 8, !dbg !8490, !tbaa !2447
  %idx.neg = sub i64 0, %9, !dbg !8491
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %8, i64 %idx.neg, !dbg !8491
  store %struct.line* %add.ptr, %struct.line** %lo, align 8, !dbg !8488, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line** %hi, metadata !8492, metadata !DIExpression()), !dbg !8493
  %10 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8494, !tbaa !2286
  %11 = load i64, i64* %nlo1, align 8, !dbg !8495, !tbaa !2447
  %idx.neg3 = sub i64 0, %11, !dbg !8496
  %add.ptr4 = getelementptr inbounds %struct.line, %struct.line* %10, i64 %idx.neg3, !dbg !8496
  store %struct.line* %add.ptr4, %struct.line** %hi, align 8, !dbg !8493, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line*** %parent_end, metadata !8497, metadata !DIExpression()), !dbg !8498
  %12 = load i8, i8* %is_lo_child.addr, align 1, !dbg !8499, !tbaa !2430
  %tobool5 = trunc i8 %12 to i1, !dbg !8499
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !8499

cond.true6:                                       ; preds = %cond.end
  %13 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8500, !tbaa !2286
  %end_lo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %13, i32 0, i32 2, !dbg !8501, !ctir !577
  br label %cond.end8, !dbg !8499

cond.false7:                                      ; preds = %cond.end
  %14 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8502, !tbaa !2286
  %end_hi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 3, !dbg !8503, !ctir !577
  br label %cond.end8, !dbg !8499

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi %struct.line** [ %end_lo, %cond.true6 ], [ %end_hi, %cond.false7 ], !dbg !8499
  store %struct.line** %cond9, %struct.line*** %parent_end, align 8, !dbg !8498, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %node, metadata !8504, metadata !DIExpression()), !dbg !8505
  %15 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8506, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.merge_node, %struct.merge_node* %15, i32 1, !dbg !8506
  store %struct.merge_node* %incdec.ptr, %struct.merge_node** %node_pool.addr, align 8, !dbg !8506, !tbaa !2286
  store %struct.merge_node* %15, %struct.merge_node** %node, align 8, !dbg !8505, !tbaa !2286
  %16 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8507, !tbaa !2286
  %17 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8508, !tbaa !2286
  %end_lo10 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %17, i32 0, i32 2, !dbg !8509, !ctir !577
  store %struct.line* %16, %struct.line** %end_lo10, align 8, !dbg !8510, !tbaa !5721, !ctir !469
  %18 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8511, !tbaa !2286
  %lo11 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %18, i32 0, i32 0, !dbg !8512, !ctir !577
  store %struct.line* %16, %struct.line** %lo11, align 8, !dbg !8513, !tbaa !5729, !ctir !469
  %19 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8514, !tbaa !2286
  %20 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8515, !tbaa !2286
  %end_hi12 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %20, i32 0, i32 3, !dbg !8516, !ctir !577
  store %struct.line* %19, %struct.line** %end_hi12, align 8, !dbg !8517, !tbaa !5716, !ctir !469
  %21 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8518, !tbaa !2286
  %hi13 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %21, i32 0, i32 1, !dbg !8519, !ctir !577
  store %struct.line* %19, %struct.line** %hi13, align 8, !dbg !8520, !tbaa !5725, !ctir !469
  %22 = load %struct.line**, %struct.line*** %parent_end, align 8, !dbg !8521, !tbaa !2286
  %23 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8522, !tbaa !2286
  %dest14 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %23, i32 0, i32 4, !dbg !8523, !ctir !577
  store %struct.line** %22, %struct.line*** %dest14, align 8, !dbg !8524, !tbaa !5733, !ctir !584
  %24 = load i64, i64* %nlo1, align 8, !dbg !8525, !tbaa !2447
  %25 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8526, !tbaa !2286
  %nlo15 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %25, i32 0, i32 5, !dbg !8527, !ctir !577
  store i64 %24, i64* %nlo15, align 8, !dbg !8528, !tbaa !5742, !ctir !55
  %26 = load i64, i64* %nhi2, align 8, !dbg !8529, !tbaa !2447
  %27 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8530, !tbaa !2286
  %nhi16 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %27, i32 0, i32 6, !dbg !8531, !ctir !577
  store i64 %26, i64* %nhi16, align 8, !dbg !8532, !tbaa !5738, !ctir !55
  %28 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8533, !tbaa !2286
  %29 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8534, !tbaa !2286
  %parent17 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %29, i32 0, i32 7, !dbg !8535, !ctir !577
  store %struct.merge_node* %28, %struct.merge_node** %parent17, align 8, !dbg !8536, !tbaa !5746, !ctir !576
  %30 = load %struct.merge_node*, %struct.merge_node** %parent.addr, align 8, !dbg !8537, !tbaa !2286
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %30, i32 0, i32 10, !dbg !8538, !ctir !577
  %31 = load i32, i32* %level, align 8, !dbg !8538, !tbaa !5750, !ctir !69
  %add = add i32 %31, 1, !dbg !8539
  %32 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8540, !tbaa !2286
  %level18 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %32, i32 0, i32 10, !dbg !8541, !ctir !577
  store i32 %add, i32* %level18, align 8, !dbg !8542, !tbaa !5750, !ctir !69
  %33 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8543, !tbaa !2286
  %queued = getelementptr inbounds %struct.merge_node, %struct.merge_node* %33, i32 0, i32 11, !dbg !8544, !ctir !577
  store i8 0, i8* %queued, align 4, !dbg !8545, !tbaa !5754, !ctir !103
  %34 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8546, !tbaa !2286
  %lock = getelementptr inbounds %struct.merge_node, %struct.merge_node* %34, i32 0, i32 12, !dbg !8547, !ctir !577
  %call = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %lock, %union.pthread_mutexattr_t* null) #12, !dbg !8548
  %35 = load i64, i64* %nthreads.addr, align 8, !dbg !8549, !tbaa !2447
  %cmp = icmp ugt i64 %35, 1, !dbg !8551
  br i1 %cmp, label %if.then, label %if.else, !dbg !8552

if.then:                                          ; preds = %cond.end8
  call void @llvm.dbg.declare(metadata i64* %lo_threads, metadata !8553, metadata !DIExpression()), !dbg !8555
  %36 = load i64, i64* %nthreads.addr, align 8, !dbg !8556, !tbaa !2447
  %div19 = udiv i64 %36, 2, !dbg !8557
  store i64 %div19, i64* %lo_threads, align 8, !dbg !8555, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %hi_threads, metadata !8558, metadata !DIExpression()), !dbg !8559
  %37 = load i64, i64* %nthreads.addr, align 8, !dbg !8560, !tbaa !2447
  %38 = load i64, i64* %lo_threads, align 8, !dbg !8561, !tbaa !2447
  %sub20 = sub i64 %37, %38, !dbg !8562
  store i64 %sub20, i64* %hi_threads, align 8, !dbg !8559, !tbaa !2447
  %39 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8563, !tbaa !2286
  %40 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8564, !tbaa !2286
  %lo_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %40, i32 0, i32 8, !dbg !8565, !ctir !577
  store %struct.merge_node* %39, %struct.merge_node** %lo_child, align 8, !dbg !8566, !tbaa !5812, !ctir !576
  %41 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8567, !tbaa !2286
  %42 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8568, !tbaa !2286
  %43 = load %struct.line*, %struct.line** %lo, align 8, !dbg !8569, !tbaa !2286
  %44 = load i64, i64* %lo_threads, align 8, !dbg !8570, !tbaa !2447
  %45 = load i64, i64* %total_lines.addr, align 8, !dbg !8571, !tbaa !2447
  %call21 = call %struct.merge_node* @init_node(%struct.merge_node* %41, %struct.merge_node* %42, %struct.line* %43, i64 %44, i64 %45, i1 zeroext true), !dbg !8572
  store %struct.merge_node* %call21, %struct.merge_node** %node_pool.addr, align 8, !dbg !8573, !tbaa !2286
  %46 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8574, !tbaa !2286
  %47 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8575, !tbaa !2286
  %hi_child = getelementptr inbounds %struct.merge_node, %struct.merge_node* %47, i32 0, i32 9, !dbg !8576, !ctir !577
  store %struct.merge_node* %46, %struct.merge_node** %hi_child, align 8, !dbg !8577, !tbaa !5840, !ctir !576
  %48 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8578, !tbaa !2286
  %49 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8579, !tbaa !2286
  %50 = load %struct.line*, %struct.line** %hi, align 8, !dbg !8580, !tbaa !2286
  %51 = load i64, i64* %hi_threads, align 8, !dbg !8581, !tbaa !2447
  %52 = load i64, i64* %total_lines.addr, align 8, !dbg !8582, !tbaa !2447
  %call22 = call %struct.merge_node* @init_node(%struct.merge_node* %48, %struct.merge_node* %49, %struct.line* %50, i64 %51, i64 %52, i1 zeroext false), !dbg !8583
  store %struct.merge_node* %call22, %struct.merge_node** %node_pool.addr, align 8, !dbg !8584, !tbaa !2286
  br label %if.end, !dbg !8585

if.else:                                          ; preds = %cond.end8
  %53 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8586, !tbaa !2286
  %lo_child23 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %53, i32 0, i32 8, !dbg !8588, !ctir !577
  store %struct.merge_node* null, %struct.merge_node** %lo_child23, align 8, !dbg !8589, !tbaa !5812, !ctir !576
  %54 = load %struct.merge_node*, %struct.merge_node** %node, align 8, !dbg !8590, !tbaa !2286
  %hi_child24 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %54, i32 0, i32 9, !dbg !8591, !ctir !577
  store %struct.merge_node* null, %struct.merge_node** %hi_child24, align 8, !dbg !8592, !tbaa !5840, !ctir !576
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %55 = load %struct.merge_node*, %struct.merge_node** %node_pool.addr, align 8, !dbg !8593, !tbaa !2286
  ret %struct.merge_node* %55, !dbg !8594
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare_nodes(i8* %a, i8* %b) #4 !dbg !8595 !ctir !337 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %nodea = alloca %struct.merge_node*, align 8, !ctir !676
  %nodeb = alloca %struct.merge_node*, align 8, !ctir !676
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.declare(metadata %struct.merge_node** %nodea, metadata !8600, metadata !DIExpression()), !dbg !8601
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8602, !tbaa !2286
  %1 = bitcast i8* %0 to %struct.merge_node*, !dbg !8602
  store %struct.merge_node* %1, %struct.merge_node** %nodea, align 8, !dbg !8601, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.merge_node** %nodeb, metadata !8603, metadata !DIExpression()), !dbg !8604
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8605, !tbaa !2286
  %3 = bitcast i8* %2 to %struct.merge_node*, !dbg !8605
  store %struct.merge_node* %3, %struct.merge_node** %nodeb, align 8, !dbg !8604, !tbaa !2286
  %4 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8606, !tbaa !2286
  %level = getelementptr inbounds %struct.merge_node, %struct.merge_node* %4, i32 0, i32 10, !dbg !8608, !ctir !677
  %5 = load i32, i32* %level, align 8, !dbg !8608, !tbaa !5750, !ctir !69
  %6 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8609, !tbaa !2286
  %level1 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %6, i32 0, i32 10, !dbg !8610, !ctir !677
  %7 = load i32, i32* %level1, align 8, !dbg !8610, !tbaa !5750, !ctir !69
  %cmp = icmp eq i32 %5, %7, !dbg !8611
  br i1 %cmp, label %if.then, label %if.end, !dbg !8612

if.then:                                          ; preds = %entry
  %8 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8613, !tbaa !2286
  %nlo = getelementptr inbounds %struct.merge_node, %struct.merge_node* %8, i32 0, i32 5, !dbg !8614, !ctir !677
  %9 = load i64, i64* %nlo, align 8, !dbg !8614, !tbaa !5742, !ctir !55
  %10 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8615, !tbaa !2286
  %nhi = getelementptr inbounds %struct.merge_node, %struct.merge_node* %10, i32 0, i32 6, !dbg !8616, !ctir !677
  %11 = load i64, i64* %nhi, align 8, !dbg !8616, !tbaa !5738, !ctir !55
  %add = add i64 %9, %11, !dbg !8617
  %12 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8618, !tbaa !2286
  %nlo2 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %12, i32 0, i32 5, !dbg !8619, !ctir !677
  %13 = load i64, i64* %nlo2, align 8, !dbg !8619, !tbaa !5742, !ctir !55
  %14 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8620, !tbaa !2286
  %nhi3 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %14, i32 0, i32 6, !dbg !8621, !ctir !677
  %15 = load i64, i64* %nhi3, align 8, !dbg !8621, !tbaa !5738, !ctir !55
  %add4 = add i64 %13, %15, !dbg !8622
  %cmp5 = icmp ult i64 %add, %add4, !dbg !8623
  %conv = zext i1 %cmp5 to i32, !dbg !8623
  store i32 %conv, i32* %retval, align 4, !dbg !8624
  br label %return, !dbg !8624

if.end:                                           ; preds = %entry
  %16 = load %struct.merge_node*, %struct.merge_node** %nodea, align 8, !dbg !8625, !tbaa !2286
  %level6 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %16, i32 0, i32 10, !dbg !8626, !ctir !677
  %17 = load i32, i32* %level6, align 8, !dbg !8626, !tbaa !5750, !ctir !69
  %18 = load %struct.merge_node*, %struct.merge_node** %nodeb, align 8, !dbg !8627, !tbaa !2286
  %level7 = getelementptr inbounds %struct.merge_node, %struct.merge_node* %18, i32 0, i32 10, !dbg !8628, !ctir !677
  %19 = load i32, i32* %level7, align 8, !dbg !8628, !tbaa !5750, !ctir !69
  %cmp8 = icmp ult i32 %17, %19, !dbg !8629
  %conv9 = zext i1 %cmp8 to i32, !dbg !8629
  store i32 %conv9, i32* %retval, align 4, !dbg !8630
  br label %return, !dbg !8630

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8631
  ret i32 %20, !dbg !8631
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_mutexattr_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tempnode* @maybe_create_temp(%struct._IO_FILE** %pfp, i1 zeroext %survive_fd_exhaustion) #4 !dbg !8632 !ctir !570 {
entry:
  %retval = alloca %struct.tempnode*, align 8
  %pfp.addr = alloca %struct._IO_FILE**, align 8
  %survive_fd_exhaustion.addr = alloca i8, align 1
  %tempfd = alloca i32, align 4, !ctir !7
  %node = alloca %struct.tempnode*, align 8, !ctir !293
  %pipefds = alloca [2 x i32], align 4, !ctir !544
  store %struct._IO_FILE** %pfp, %struct._IO_FILE*** %pfp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %pfp.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  %frombool = zext i1 %survive_fd_exhaustion to i8
  store i8 %frombool, i8* %survive_fd_exhaustion.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %survive_fd_exhaustion.addr, metadata !8635, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.declare(metadata i32* %tempfd, metadata !8637, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !8639, metadata !DIExpression()), !dbg !8640
  %0 = load i8, i8* %survive_fd_exhaustion.addr, align 1, !dbg !8641, !tbaa !2430
  %tobool = trunc i8 %0 to i1, !dbg !8641
  %call = call %struct.tempnode* @create_temp_file(i32* %tempfd, i1 zeroext %tobool), !dbg !8642
  store %struct.tempnode* %call, %struct.tempnode** %node, align 8, !dbg !8640, !tbaa !2286
  %1 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8643, !tbaa !2286
  %tobool1 = icmp ne %struct.tempnode* %1, null, !dbg !8643
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8645

if.then:                                          ; preds = %entry
  store %struct.tempnode* null, %struct.tempnode** %retval, align 8, !dbg !8646
  br label %return, !dbg !8646

if.end:                                           ; preds = %entry
  %2 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8647, !tbaa !2286
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 2, !dbg !8648, !ctir !294
  store i8 0, i8* %state, align 4, !dbg !8649, !tbaa !2438, !ctir !10
  %3 = load i8*, i8** @compress_program, align 8, !dbg !8650, !tbaa !2286
  %tobool2 = icmp ne i8* %3, null, !dbg !8650
  br i1 %tobool2, label %if.then3, label %if.end20, !dbg !8652

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [2 x i32]* %pipefds, metadata !8653, metadata !DIExpression()), !dbg !8655
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !8656
  %call4 = call i32 @pipe_fork(i32* %arraydecay, i64 4), !dbg !8657
  %4 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8658, !tbaa !2286
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 1, !dbg !8659, !ctir !294
  store i32 %call4, i32* %pid, align 8, !dbg !8660, !tbaa !2273, !ctir !299
  %5 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8661, !tbaa !2286
  %pid5 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %5, i32 0, i32 1, !dbg !8663, !ctir !294
  %6 = load i32, i32* %pid5, align 8, !dbg !8663, !tbaa !2273, !ctir !299
  %cmp = icmp slt i32 0, %6, !dbg !8664
  br i1 %cmp, label %if.then6, label %if.else, !dbg !8665

if.then6:                                         ; preds = %if.then3
  %7 = load i32, i32* %tempfd, align 4, !dbg !8666, !tbaa !2273
  %call7 = call i32 @close(i32 %7), !dbg !8668
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !8669, !ctir !544
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8669, !tbaa !2273
  %call8 = call i32 @close(i32 %8), !dbg !8670
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !8671, !ctir !544
  %9 = load i32, i32* %arrayidx9, align 4, !dbg !8671, !tbaa !2273
  store i32 %9, i32* %tempfd, align 4, !dbg !8672, !tbaa !2273
  %10 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8673, !tbaa !2286
  call void @register_proc(%struct.tempnode* %10), !dbg !8674
  br label %if.end19, !dbg !8675

if.else:                                          ; preds = %if.then3
  %11 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8676, !tbaa !2286
  %pid10 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %11, i32 0, i32 1, !dbg !8678, !ctir !294
  %12 = load i32, i32* %pid10, align 8, !dbg !8678, !tbaa !2273, !ctir !299
  %cmp11 = icmp eq i32 %12, 0, !dbg !8679
  br i1 %cmp11, label %if.then12, label %if.end18, !dbg !8680

if.then12:                                        ; preds = %if.else
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !8681, !ctir !544
  %13 = load i32, i32* %arrayidx13, align 4, !dbg !8681, !tbaa !2273
  %call14 = call i32 @close(i32 %13), !dbg !8683
  %14 = load i32, i32* %tempfd, align 4, !dbg !8684, !tbaa !2273
  call void @move_fd(i32 %14, i32 1), !dbg !8685
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !8686, !ctir !544
  %15 = load i32, i32* %arrayidx15, align 4, !dbg !8686, !tbaa !2273
  call void @move_fd(i32 %15, i32 0), !dbg !8687
  %16 = load i8*, i8** @compress_program, align 8, !dbg !8688, !tbaa !2286
  %17 = load i8*, i8** @compress_program, align 8, !dbg !8689, !tbaa !2286
  %call16 = call i32 (i8*, i8*, ...) @execlp(i8* %16, i8* %17, i8* null) #12, !dbg !8690
  %call17 = call i32* @__errno_location() #16, !dbg !8691
  %18 = load i32, i32* %call17, align 4, !dbg !8691, !tbaa !2273, !ctir !7
  call void @async_safe_die(i32 %18, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.176, i64 0, i64 0)) #15, !dbg !8692
  unreachable, !dbg !8692

if.end18:                                         ; preds = %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then6
  br label %if.end20, !dbg !8693

if.end20:                                         ; preds = %if.end19, %if.end
  %19 = load i32, i32* %tempfd, align 4, !dbg !8694, !tbaa !2273
  %call21 = call %struct._IO_FILE* @fdopen(i32 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.167, i64 0, i64 0)) #12, !dbg !8695
  %20 = load %struct._IO_FILE**, %struct._IO_FILE*** %pfp.addr, align 8, !dbg !8696, !tbaa !2286
  store %struct._IO_FILE* %call21, %struct._IO_FILE** %20, align 8, !dbg !8697, !tbaa !2286, !ctir !0
  %21 = load %struct._IO_FILE**, %struct._IO_FILE*** %pfp.addr, align 8, !dbg !8698, !tbaa !2286
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !dbg !8700, !tbaa !2286, !ctir !0
  %tobool22 = icmp ne %struct._IO_FILE* %22, null, !dbg !8700
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !8701

if.then23:                                        ; preds = %if.end20
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.177, i64 0, i64 0)) #12, !dbg !8702
  %23 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8703, !tbaa !2286
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %23, i32 0, i32 3, !dbg !8704, !ctir !294
  %arraydecay25 = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !8703
  call void @sort_die(i8* %call24, i8* %arraydecay25) #15, !dbg !8705
  unreachable, !dbg !8705

if.end26:                                         ; preds = %if.end20
  %24 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8706, !tbaa !2286
  store %struct.tempnode* %24, %struct.tempnode** %retval, align 8, !dbg !8707
  br label %return, !dbg !8707

return:                                           ; preds = %if.end26, %if.then
  %25 = load %struct.tempnode*, %struct.tempnode** %retval, align 8, !dbg !8708
  ret %struct.tempnode* %25, !dbg !8708
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tempnode* @create_temp_file(i32* %pfd, i1 zeroext %survive_fd_exhaustion) #4 !dbg !805 !ctir !572 {
entry:
  %pfd.addr = alloca i32*, align 8
  %survive_fd_exhaustion.addr = alloca i8, align 1
  %fd = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %temp_dir = alloca i8*, align 8, !ctir !88
  %len = alloca i64, align 8, !ctir !55
  %node = alloca %struct.tempnode*, align 8, !ctir !293
  %file = alloca i8*, align 8, !ctir !9
  %cs = alloca %struct.cs_status, align 8, !ctir !348
  store i32* %pfd, i32** %pfd.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32** %pfd.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  %frombool = zext i1 %survive_fd_exhaustion to i8
  store i8 %frombool, i8* %survive_fd_exhaustion.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %survive_fd_exhaustion.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !8713, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8715, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.declare(metadata i8** %temp_dir, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load i8**, i8*** @temp_dirs, align 8, !dbg !8719, !tbaa !2286
  %1 = load i64, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8720, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !8719, !ctir !378
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8719, !tbaa !2286
  store i8* %2, i8** %temp_dir, align 8, !dbg !8718, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8721, metadata !DIExpression()), !dbg !8722
  %3 = load i8*, i8** %temp_dir, align 8, !dbg !8723, !tbaa !2286
  %call = call i64 @strlen(i8* %3) #14, !dbg !8724
  store i64 %call, i64* %len, align 8, !dbg !8722, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !8725, metadata !DIExpression()), !dbg !8726
  %4 = load i64, i64* %len, align 8, !dbg !8727, !tbaa !2447
  %add = add i64 %4, 12, !dbg !8727
  %add1 = add i64 20, %add, !dbg !8727
  %and = and i64 %add1, -8, !dbg !8727
  %call2 = call noalias i8* @xmalloc(i64 %and), !dbg !8728
  %5 = bitcast i8* %call2 to %struct.tempnode*, !dbg !8728
  store %struct.tempnode* %5, %struct.tempnode** %node, align 8, !dbg !8726, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file, metadata !8729, metadata !DIExpression()), !dbg !8730
  %6 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8731, !tbaa !2286
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %6, i32 0, i32 3, !dbg !8732, !ctir !294
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !8731
  store i8* %arraydecay, i8** %file, align 8, !dbg !8730, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !8733, metadata !DIExpression()), !dbg !8734
  %7 = load i8*, i8** %file, align 8, !dbg !8735, !tbaa !2286
  %8 = load i8*, i8** %temp_dir, align 8, !dbg !8736, !tbaa !2286
  %9 = load i64, i64* %len, align 8, !dbg !8737, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 %9, i1 false), !dbg !8738
  %10 = load i8*, i8** %file, align 8, !dbg !8739, !tbaa !2286
  %11 = load i64, i64* %len, align 8, !dbg !8740, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !8741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @create_temp_file.slashbase, i64 0, i64 0), i64 12, i1 false), !dbg !8742
  %12 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8743, !tbaa !2286
  %next = getelementptr inbounds %struct.tempnode, %struct.tempnode* %12, i32 0, i32 0, !dbg !8744, !ctir !294
  store volatile %struct.tempnode* null, %struct.tempnode** %next, align 8, !dbg !8745, !tbaa !2286, !ctir !297
  %13 = load i64, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8746, !tbaa !2447
  %inc = add i64 %13, 1, !dbg !8746
  store i64 %inc, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8746, !tbaa !2447
  %14 = load i64, i64* @temp_dir_count, align 8, !dbg !8748, !tbaa !2447
  %cmp = icmp eq i64 %inc, %14, !dbg !8749
  br i1 %cmp, label %if.then, label %if.end, !dbg !8750

if.then:                                          ; preds = %entry
  store i64 0, i64* @create_temp_file.temp_dir_index, align 8, !dbg !8751, !tbaa !2447
  br label %if.end, !dbg !8752

if.end:                                           ; preds = %if.then, %entry
  call void @cs_enter(%struct.cs_status* %cs), !dbg !8753
  %15 = load i8*, i8** %file, align 8, !dbg !8754, !tbaa !2286
  %call3 = call i32 @mkostemp_safer(i8* %15, i32 524288), !dbg !8755
  store i32 %call3, i32* %fd, align 4, !dbg !8756, !tbaa !2273
  %16 = load i32, i32* %fd, align 4, !dbg !8757, !tbaa !2273
  %cmp4 = icmp sle i32 0, %16, !dbg !8759
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8760

if.then5:                                         ; preds = %if.end
  %17 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8761, !tbaa !2286
  %18 = load %struct.tempnode**, %struct.tempnode*** @temptail, align 8, !dbg !8763, !tbaa !2286
  store volatile %struct.tempnode* %17, %struct.tempnode** %18, align 8, !dbg !8764, !tbaa !2286, !ctir !297
  %19 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8765, !tbaa !2286
  %next6 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %19, i32 0, i32 0, !dbg !8766, !ctir !294
  store %struct.tempnode** %next6, %struct.tempnode*** @temptail, align 8, !dbg !8767, !tbaa !2286
  br label %if.end7, !dbg !8768

if.end7:                                          ; preds = %if.then5, %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !8769
  %20 = load i32, i32* %call8, align 4, !dbg !8769, !tbaa !2273, !ctir !7
  store i32 %20, i32* %saved_errno, align 4, !dbg !8770, !tbaa !2273
  call void @cs_leave(%struct.cs_status* %cs), !dbg !8771
  %21 = load i32, i32* %saved_errno, align 4, !dbg !8772, !tbaa !2273
  %call9 = call i32* @__errno_location() #16, !dbg !8773
  store i32 %21, i32* %call9, align 4, !dbg !8774, !tbaa !2273, !ctir !7
  %22 = load i32, i32* %fd, align 4, !dbg !8775, !tbaa !2273
  %cmp10 = icmp slt i32 %22, 0, !dbg !8777
  br i1 %cmp10, label %if.then11, label %if.end19, !dbg !8778

if.then11:                                        ; preds = %if.end7
  %23 = load i8, i8* %survive_fd_exhaustion.addr, align 1, !dbg !8779, !tbaa !2430
  %tobool = trunc i8 %23 to i1, !dbg !8779
  br i1 %tobool, label %land.lhs.true, label %if.then14, !dbg !8782

land.lhs.true:                                    ; preds = %if.then11
  %call12 = call i32* @__errno_location() #16, !dbg !8783
  %24 = load i32, i32* %call12, align 4, !dbg !8783, !tbaa !2273, !ctir !7
  %cmp13 = icmp eq i32 %24, 24, !dbg !8784
  br i1 %cmp13, label %if.end18, label %if.then14, !dbg !8785

if.then14:                                        ; preds = %land.lhs.true, %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !8786
  %25 = load i32, i32* %call15, align 4, !dbg !8786, !tbaa !2273, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.178, i64 0, i64 0)) #12, !dbg !8786
  %26 = load i8*, i8** %temp_dir, align 8, !dbg !8786, !tbaa !2286
  %call17 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !8786
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %25, i8* %call16, i8* %call17), !dbg !8786
  unreachable, !dbg !8786

if.end18:                                         ; preds = %land.lhs.true
  %27 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8787, !tbaa !2286
  %28 = bitcast %struct.tempnode* %27 to i8*, !dbg !8787
  call void @free(i8* %28) #12, !dbg !8788
  store %struct.tempnode* null, %struct.tempnode** %node, align 8, !dbg !8789, !tbaa !2286
  br label %if.end19, !dbg !8790

if.end19:                                         ; preds = %if.end18, %if.end7
  %29 = load i32, i32* %fd, align 4, !dbg !8791, !tbaa !2273
  %30 = load i32*, i32** %pfd.addr, align 8, !dbg !8792, !tbaa !2286
  store i32 %29, i32* %30, align 4, !dbg !8793, !tbaa !2273, !ctir !7
  %31 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8794, !tbaa !2286
  ret %struct.tempnode* %31, !dbg !8795
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @pipe_fork(i32* %pipefds, i64 %tries) #4 !dbg !8796 !ctir !555 {
entry:
  %retval = alloca i32, align 4
  %pipefds.addr = alloca i32*, align 8
  %tries.addr = alloca i64, align 8
  %saved_temphead = alloca %struct.tempnode*, align 8, !ctir !293
  %saved_errno = alloca i32, align 4, !ctir !7
  %wait_retry = alloca double, align 8, !ctir !377
  %pid = alloca i32, align 4, !ctir !299
  %cs = alloca %struct.cs_status, align 8, !ctir !348
  store i32* %pipefds, i32** %pipefds.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32** %pipefds.addr, metadata !8797, metadata !DIExpression()), !dbg !8798
  store i64 %tries, i64* %tries.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %tries.addr, metadata !8799, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.declare(metadata %struct.tempnode** %saved_temphead, metadata !8801, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8803, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.declare(metadata double* %wait_retry, metadata !8805, metadata !DIExpression()), !dbg !8806
  store double 2.500000e-01, double* %wait_retry, align 8, !dbg !8806, !tbaa !3865
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !8807, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !8809, metadata !DIExpression()), !dbg !8810
  %0 = load i32*, i32** %pipefds.addr, align 8, !dbg !8811, !tbaa !2286
  %call = call i32 @rpl_pipe2(i32* %0, i32 524288), !dbg !8813
  %cmp = icmp slt i32 %call, 0, !dbg !8814
  br i1 %cmp, label %if.then, label %if.end, !dbg !8815

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8816
  br label %return, !dbg !8816

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @nmerge, align 4, !dbg !8817, !tbaa !2273
  %add = add i32 %1, 1, !dbg !8819
  %2 = load i32, i32* @nprocs, align 4, !dbg !8820, !tbaa !2273
  %cmp1 = icmp ult i32 %add, %2, !dbg !8821
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8822

if.then2:                                         ; preds = %if.end
  call void @reap_some(), !dbg !8823
  br label %if.end3, !dbg !8823

if.end3:                                          ; preds = %if.then2, %if.end
  br label %while.cond, !dbg !8824

while.cond:                                       ; preds = %if.end15, %if.end3
  %3 = load i64, i64* %tries.addr, align 8, !dbg !8825, !tbaa !2447
  %dec = add i64 %3, -1, !dbg !8825
  store i64 %dec, i64* %tries.addr, align 8, !dbg !8825, !tbaa !2447
  %tobool = icmp ne i64 %3, 0, !dbg !8824
  br i1 %tobool, label %while.body, label %while.end, !dbg !8824

while.body:                                       ; preds = %while.cond
  call void @cs_enter(%struct.cs_status* %cs), !dbg !8826
  %4 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !8828, !tbaa !2286
  store %struct.tempnode* %4, %struct.tempnode** %saved_temphead, align 8, !dbg !8829, !tbaa !2286
  store volatile %struct.tempnode* null, %struct.tempnode** @temphead, align 8, !dbg !8830, !tbaa !2286
  %call4 = call i32 @fork() #12, !dbg !8831
  store i32 %call4, i32* %pid, align 4, !dbg !8832, !tbaa !2273
  %call5 = call i32* @__errno_location() #16, !dbg !8833
  %5 = load i32, i32* %call5, align 4, !dbg !8833, !tbaa !2273, !ctir !7
  store i32 %5, i32* %saved_errno, align 4, !dbg !8834, !tbaa !2273
  %6 = load i32, i32* %pid, align 4, !dbg !8835, !tbaa !2273
  %tobool6 = icmp ne i32 %6, 0, !dbg !8835
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8837

if.then7:                                         ; preds = %while.body
  %7 = load %struct.tempnode*, %struct.tempnode** %saved_temphead, align 8, !dbg !8838, !tbaa !2286
  store volatile %struct.tempnode* %7, %struct.tempnode** @temphead, align 8, !dbg !8839, !tbaa !2286
  br label %if.end8, !dbg !8840

if.end8:                                          ; preds = %if.then7, %while.body
  call void @cs_leave(%struct.cs_status* %cs), !dbg !8841
  %8 = load i32, i32* %saved_errno, align 4, !dbg !8842, !tbaa !2273
  %call9 = call i32* @__errno_location() #16, !dbg !8843
  store i32 %8, i32* %call9, align 4, !dbg !8844, !tbaa !2273, !ctir !7
  %9 = load i32, i32* %pid, align 4, !dbg !8845, !tbaa !2273
  %cmp10 = icmp sle i32 0, %9, !dbg !8847
  br i1 %cmp10, label %if.then13, label %lor.lhs.false, !dbg !8848

lor.lhs.false:                                    ; preds = %if.end8
  %call11 = call i32* @__errno_location() #16, !dbg !8849
  %10 = load i32, i32* %call11, align 4, !dbg !8849, !tbaa !2273, !ctir !7
  %cmp12 = icmp ne i32 %10, 11, !dbg !8850
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !8851

if.then13:                                        ; preds = %lor.lhs.false, %if.end8
  br label %while.end, !dbg !8852

if.else:                                          ; preds = %lor.lhs.false
  %11 = load double, double* %wait_retry, align 8, !dbg !8853, !tbaa !3865
  %call14 = call i32 @xnanosleep(double %11), !dbg !8855
  %12 = load double, double* %wait_retry, align 8, !dbg !8856, !tbaa !3865
  %mul = fmul double %12, 2.000000e+00, !dbg !8856
  store double %mul, double* %wait_retry, align 8, !dbg !8856, !tbaa !3865
  call void @reap_exited(), !dbg !8857
  br label %if.end15

if.end15:                                         ; preds = %if.else
  br label %while.cond, !dbg !8824, !llvm.loop !8858

while.end:                                        ; preds = %if.then13, %while.cond
  %13 = load i32, i32* %pid, align 4, !dbg !8860, !tbaa !2273
  %cmp16 = icmp slt i32 %13, 0, !dbg !8862
  br i1 %cmp16, label %if.then17, label %if.else23, !dbg !8863

if.then17:                                        ; preds = %while.end
  %call18 = call i32* @__errno_location() #16, !dbg !8864
  %14 = load i32, i32* %call18, align 4, !dbg !8864, !tbaa !2273, !ctir !7
  store i32 %14, i32* %saved_errno, align 4, !dbg !8866, !tbaa !2273
  %15 = load i32*, i32** %pipefds.addr, align 8, !dbg !8867, !tbaa !2286
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 0, !dbg !8867, !ctir !264
  %16 = load i32, i32* %arrayidx, align 4, !dbg !8867, !tbaa !2273
  %call19 = call i32 @close(i32 %16), !dbg !8868
  %17 = load i32*, i32** %pipefds.addr, align 8, !dbg !8869, !tbaa !2286
  %arrayidx20 = getelementptr inbounds i32, i32* %17, i64 1, !dbg !8869, !ctir !264
  %18 = load i32, i32* %arrayidx20, align 4, !dbg !8869, !tbaa !2273
  %call21 = call i32 @close(i32 %18), !dbg !8870
  %19 = load i32, i32* %saved_errno, align 4, !dbg !8871, !tbaa !2273
  %call22 = call i32* @__errno_location() #16, !dbg !8872
  store i32 %19, i32* %call22, align 4, !dbg !8873, !tbaa !2273, !ctir !7
  br label %if.end30, !dbg !8874

if.else23:                                        ; preds = %while.end
  %20 = load i32, i32* %pid, align 4, !dbg !8875, !tbaa !2273
  %cmp24 = icmp eq i32 %20, 0, !dbg !8877
  br i1 %cmp24, label %if.then25, label %if.else28, !dbg !8878

if.then25:                                        ; preds = %if.else23
  %call26 = call i32 @close(i32 0), !dbg !8879
  %call27 = call i32 @close(i32 1), !dbg !8881
  br label %if.end29, !dbg !8882

if.else28:                                        ; preds = %if.else23
  %21 = load i32, i32* @nprocs, align 4, !dbg !8883, !tbaa !2273
  %inc = add nsw i32 %21, 1, !dbg !8883
  store i32 %inc, i32* @nprocs, align 4, !dbg !8883, !tbaa !2273
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then25
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then17
  %22 = load i32, i32* %pid, align 4, !dbg !8884, !tbaa !2273
  store i32 %22, i32* %retval, align 4, !dbg !8885
  br label %return, !dbg !8885

return:                                           ; preds = %if.end30, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !8886
  ret i32 %23, !dbg !8886
}

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @register_proc(%struct.tempnode* %temp) #4 !dbg !8887 !ctir !560 {
entry:
  %temp.addr = alloca %struct.tempnode*, align 8
  store %struct.tempnode* %temp, %struct.tempnode** %temp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  %0 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !8890, !tbaa !2286
  %tobool = icmp ne %struct.hash_table* %0, null, !dbg !8890
  br i1 %tobool, label %if.end3, label %if.then, !dbg !8892

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 47, %struct.hash_tuning* null, i64 (i8*, i64)* @proctab_hasher, i1 (i8*, i8*)* @proctab_comparator, void (i8*)* null), !dbg !8893
  store %struct.hash_table* %call, %struct.hash_table** @proctab, align 8, !dbg !8895, !tbaa !2286
  %1 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !8896, !tbaa !2286
  %tobool1 = icmp ne %struct.hash_table* %1, null, !dbg !8896
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8898

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #15, !dbg !8899
  unreachable, !dbg !8899

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !8900

if.end3:                                          ; preds = %if.end, %entry
  %2 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !8901, !tbaa !2286
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 2, !dbg !8902, !ctir !294
  store i8 1, i8* %state, align 4, !dbg !8903, !tbaa !2438, !ctir !10
  %3 = load %struct.hash_table*, %struct.hash_table** @proctab, align 8, !dbg !8904, !tbaa !2286
  %4 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !8906, !tbaa !2286
  %5 = bitcast %struct.tempnode* %4 to i8*, !dbg !8906
  %call4 = call i8* @hash_insert(%struct.hash_table* %3, i8* %5), !dbg !8907
  %tobool5 = icmp ne i8* %call4, null, !dbg !8907
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8908

if.then6:                                         ; preds = %if.end3
  call void @xalloc_die() #15, !dbg !8909
  unreachable, !dbg !8909

if.end7:                                          ; preds = %if.end3
  ret void, !dbg !8910
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @move_fd(i32 %oldfd, i32 %newfd) #4 !dbg !8911 !ctir !530 {
entry:
  %oldfd.addr = alloca i32, align 4
  %newfd.addr = alloca i32, align 4
  store i32 %oldfd, i32* %oldfd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %oldfd.addr, metadata !8912, metadata !DIExpression()), !dbg !8913
  store i32 %newfd, i32* %newfd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %newfd.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  %0 = load i32, i32* %oldfd.addr, align 4, !dbg !8916, !tbaa !2273
  %1 = load i32, i32* %newfd.addr, align 4, !dbg !8918, !tbaa !2273
  %cmp = icmp ne i32 %0, %1, !dbg !8919
  br i1 %cmp, label %if.then, label %if.end, !dbg !8920

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %oldfd.addr, align 4, !dbg !8921, !tbaa !2273
  %3 = load i32, i32* %newfd.addr, align 4, !dbg !8923, !tbaa !2273
  %call = call i32 @dup2(i32 %2, i32 %3) #12, !dbg !8924
  %4 = load i32, i32* %oldfd.addr, align 4, !dbg !8925, !tbaa !2273
  %call1 = call i32 @close(i32 %4), !dbg !8926
  br label %if.end, !dbg !8927

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8928
}

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @async_safe_die(i32 %errnum, i8* %errstr) #0 !dbg !8929 !ctir !557 {
entry:
  %errnum.addr = alloca i32, align 4
  %errstr.addr = alloca i8*, align 8
  %__x = alloca i64, align 8, !ctir !1712
  %errbuf = alloca [12 x i8], align 1, !ctir !559
  %p = alloca i8*, align 8, !ctir !9
  %__x3 = alloca i64, align 8, !ctir !1712
  %__x5 = alloca i64, align 8, !ctir !1712
  %__x8 = alloca i64, align 8, !ctir !1712
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  store i8* %errstr, i8** %errstr.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %errstr.addr, metadata !8932, metadata !DIExpression()), !dbg !8933
  call void @llvm.dbg.declare(metadata i64* %__x, metadata !8934, metadata !DIExpression()), !dbg !8936
  %0 = load i8*, i8** %errstr.addr, align 8, !dbg !8936, !tbaa !2286
  %1 = load i8*, i8** %errstr.addr, align 8, !dbg !8936, !tbaa !2286
  %call = call i64 @strlen(i8* %1) #14, !dbg !8936
  %call1 = call i64 @write(i32 2, i8* %0, i64 %call), !dbg !8936
  store i64 %call1, i64* %__x, align 8, !dbg !8936, !tbaa !2447
  %2 = load i64, i64* %__x, align 8, !dbg !8936, !tbaa !2447
  %3 = load i32, i32* %errnum.addr, align 4, !dbg !8937, !tbaa !2273
  %tobool = icmp ne i32 %3, 0, !dbg !8937
  br i1 %tobool, label %if.then, label %if.end, !dbg !8939

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %errbuf, metadata !8940, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8943, metadata !DIExpression()), !dbg !8944
  %4 = load i32, i32* %errnum.addr, align 4, !dbg !8945, !tbaa !2273
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %errbuf, i64 0, i64 0, !dbg !8946
  %call2 = call i8* @inttostr(i32 %4, i8* %arraydecay), !dbg !8947
  store i8* %call2, i8** %p, align 8, !dbg !8944, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %__x3, metadata !8948, metadata !DIExpression()), !dbg !8950
  %call4 = call i64 @write(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.173, i64 0, i64 0), i64 8), !dbg !8950
  store i64 %call4, i64* %__x3, align 8, !dbg !8950, !tbaa !2447
  %5 = load i64, i64* %__x3, align 8, !dbg !8950, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %__x5, metadata !8951, metadata !DIExpression()), !dbg !8953
  %6 = load i8*, i8** %p, align 8, !dbg !8953, !tbaa !2286
  %7 = load i8*, i8** %p, align 8, !dbg !8953, !tbaa !2286
  %call6 = call i64 @strlen(i8* %7) #14, !dbg !8953
  %call7 = call i64 @write(i32 2, i8* %6, i64 %call6), !dbg !8953
  store i64 %call7, i64* %__x5, align 8, !dbg !8953, !tbaa !2447
  %8 = load i64, i64* %__x5, align 8, !dbg !8953, !tbaa !2447
  br label %if.end, !dbg !8954

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %__x8, metadata !8955, metadata !DIExpression()), !dbg !8957
  %call9 = call i64 @write(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174, i64 0, i64 0), i64 1), !dbg !8957
  store i64 %call9, i64* %__x8, align 8, !dbg !8957, !tbaa !2447
  %9 = load i64, i64* %__x8, align 8, !dbg !8957, !tbaa !2447
  call void @_exit(i32 2) #15, !dbg !8958
  unreachable, !dbg !8958
}

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #10

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @proctab_hasher(i8* %entry1, i64 %tabsize) #4 !dbg !8959 !ctir !562 {
entry:
  %entry.addr = alloca i8*, align 8
  %tabsize.addr = alloca i64, align 8
  %node = alloca %struct.tempnode*, align 8, !ctir !343
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  store i64 %tabsize, i64* %tabsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %tabsize.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !8964, metadata !DIExpression()), !dbg !8965
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !8966, !tbaa !2286
  %1 = bitcast i8* %0 to %struct.tempnode*, !dbg !8966
  store %struct.tempnode* %1, %struct.tempnode** %node, align 8, !dbg !8965, !tbaa !2286
  %2 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !8967, !tbaa !2286
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 1, !dbg !8968, !ctir !344
  %3 = load i32, i32* %pid, align 8, !dbg !8968, !tbaa !2273, !ctir !299
  %conv = sext i32 %3 to i64, !dbg !8967
  %4 = load i64, i64* %tabsize.addr, align 8, !dbg !8969, !tbaa !2447
  %rem = urem i64 %conv, %4, !dbg !8970
  ret i64 %rem, !dbg !8971
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @proctab_comparator(i8* %e1, i8* %e2) #4 !dbg !8972 !ctir !564 {
entry:
  %e1.addr = alloca i8*, align 8
  %e2.addr = alloca i8*, align 8
  %n1 = alloca %struct.tempnode*, align 8, !ctir !343
  %n2 = alloca %struct.tempnode*, align 8, !ctir !343
  store i8* %e1, i8** %e1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %e1.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  store i8* %e2, i8** %e2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %e2.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.declare(metadata %struct.tempnode** %n1, metadata !8977, metadata !DIExpression()), !dbg !8978
  %0 = load i8*, i8** %e1.addr, align 8, !dbg !8979, !tbaa !2286
  %1 = bitcast i8* %0 to %struct.tempnode*, !dbg !8979
  store %struct.tempnode* %1, %struct.tempnode** %n1, align 8, !dbg !8978, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.tempnode** %n2, metadata !8980, metadata !DIExpression()), !dbg !8981
  %2 = load i8*, i8** %e2.addr, align 8, !dbg !8982, !tbaa !2286
  %3 = bitcast i8* %2 to %struct.tempnode*, !dbg !8982
  store %struct.tempnode* %3, %struct.tempnode** %n2, align 8, !dbg !8981, !tbaa !2286
  %4 = load %struct.tempnode*, %struct.tempnode** %n1, align 8, !dbg !8983, !tbaa !2286
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 1, !dbg !8984, !ctir !344
  %5 = load i32, i32* %pid, align 8, !dbg !8984, !tbaa !2273, !ctir !299
  %6 = load %struct.tempnode*, %struct.tempnode** %n2, align 8, !dbg !8985, !tbaa !2286
  %pid1 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %6, i32 0, i32 1, !dbg !8986, !ctir !344
  %7 = load i32, i32* %pid1, align 8, !dbg !8986, !tbaa !2273, !ctir !299
  %cmp = icmp eq i32 %5, %7, !dbg !8987
  ret i1 %cmp, !dbg !8988
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reap_some() #4 !dbg !8989 !ctir !168 {
entry:
  %call = call i32 @reap(i32 -1), !dbg !8990
  call void @reap_exited(), !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cs_enter(%struct.cs_status* %status) #4 !dbg !8993 !ctir !345 {
entry:
  %status.addr = alloca %struct.cs_status*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.cs_status* %status, %struct.cs_status** %status.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.cs_status** %status.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8996, metadata !DIExpression()), !dbg !8997
  %0 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !8998, !tbaa !2286
  %sigs = getelementptr inbounds %struct.cs_status, %struct.cs_status* %0, i32 0, i32 1, !dbg !8999, !ctir !348
  %call = call i32 @pthread_sigmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %sigs) #12, !dbg !9000
  store i32 %call, i32* %ret, align 4, !dbg !8997, !tbaa !2273
  %1 = load i32, i32* %ret, align 4, !dbg !9001, !tbaa !2273
  %cmp = icmp eq i32 %1, 0, !dbg !9002
  %2 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9003, !tbaa !2286
  %valid = getelementptr inbounds %struct.cs_status, %struct.cs_status* %2, i32 0, i32 0, !dbg !9004, !ctir !348
  %frombool = zext i1 %cmp to i8, !dbg !9005
  store i8 %frombool, i8* %valid, align 8, !dbg !9005, !tbaa !9006, !ctir !103
  ret void, !dbg !9008
}

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cs_leave(%struct.cs_status* %status) #4 !dbg !9009 !ctir !352 {
entry:
  %status.addr = alloca %struct.cs_status*, align 8
  store %struct.cs_status* %status, %struct.cs_status** %status.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.cs_status** %status.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  %0 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9012, !tbaa !2286
  %valid = getelementptr inbounds %struct.cs_status, %struct.cs_status* %0, i32 0, i32 0, !dbg !9014, !ctir !355
  %1 = load i8, i8* %valid, align 8, !dbg !9014, !tbaa !9006
  %tobool = trunc i8 %1 to i1, !dbg !9014, !ctir !103
  br i1 %tobool, label %if.then, label %if.end, !dbg !9015

if.then:                                          ; preds = %entry
  %2 = load %struct.cs_status*, %struct.cs_status** %status.addr, align 8, !dbg !9016, !tbaa !2286
  %sigs = getelementptr inbounds %struct.cs_status, %struct.cs_status* %2, i32 0, i32 1, !dbg !9018, !ctir !355
  %call = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* %sigs, %struct.__sigset_t* null) #12, !dbg !9019
  br label %if.end, !dbg !9020

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9021
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @reap_exited() #4 !dbg !9022 !ctir !168 {
entry:
  br label %while.cond, !dbg !9023

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* @nprocs, align 4, !dbg !9024, !tbaa !2273
  %cmp = icmp slt i32 0, %0, !dbg !9025
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9026

land.rhs:                                         ; preds = %while.cond
  %call = call i32 @reap(i32 0), !dbg !9027
  %tobool = icmp ne i32 %call, 0, !dbg !9026
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %1 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !9028
  br i1 %1, label %while.body, label %while.end, !dbg !9023

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !9029, !llvm.loop !9030

while.end:                                        ; preds = %land.end
  ret void, !dbg !9031
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_sigmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @feof_unlocked(%struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #7

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @default_sort_size() #4 !dbg !9032 !ctir !626 {
entry:
  %size = alloca i64, align 8, !ctir !55
  %rlimit = alloca %struct.timespec, align 8, !ctir !3728
  %avail = alloca double, align 8, !ctir !377
  %total = alloca double, align 8, !ctir !377
  %mem = alloca double, align 8, !ctir !377
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9033, metadata !DIExpression()), !dbg !9034
  store i64 -1, i64* %size, align 8, !dbg !9034, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.timespec* %rlimit, metadata !9035, metadata !DIExpression()), !dbg !9036
  %call = call i32 @getrlimit(i32 2, %struct.timespec* %rlimit) #12, !dbg !9037
  %cmp = icmp eq i32 %call, 0, !dbg !9039
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9040

land.lhs.true:                                    ; preds = %entry
  %rlim_cur = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9041, !ctir !3728
  %0 = load i64, i64* %rlim_cur, align 8, !dbg !9041, !tbaa !3751, !ctir !373
  %1 = load i64, i64* %size, align 8, !dbg !9042, !tbaa !2447
  %cmp1 = icmp ult i64 %0, %1, !dbg !9043
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9044

if.then:                                          ; preds = %land.lhs.true
  %rlim_cur2 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9045, !ctir !3728
  %2 = load i64, i64* %rlim_cur2, align 8, !dbg !9045, !tbaa !3751, !ctir !373
  store i64 %2, i64* %size, align 8, !dbg !9046, !tbaa !2447
  br label %if.end, !dbg !9047

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call3 = call i32 @getrlimit(i32 9, %struct.timespec* %rlimit) #12, !dbg !9048
  %cmp4 = icmp eq i32 %call3, 0, !dbg !9050
  br i1 %cmp4, label %land.lhs.true5, label %if.end10, !dbg !9051

land.lhs.true5:                                   ; preds = %if.end
  %rlim_cur6 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9052, !ctir !3728
  %3 = load i64, i64* %rlim_cur6, align 8, !dbg !9052, !tbaa !3751, !ctir !373
  %4 = load i64, i64* %size, align 8, !dbg !9053, !tbaa !2447
  %cmp7 = icmp ult i64 %3, %4, !dbg !9054
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9055

if.then8:                                         ; preds = %land.lhs.true5
  %rlim_cur9 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9056, !ctir !3728
  %5 = load i64, i64* %rlim_cur9, align 8, !dbg !9056, !tbaa !3751, !ctir !373
  store i64 %5, i64* %size, align 8, !dbg !9057, !tbaa !2447
  br label %if.end10, !dbg !9058

if.end10:                                         ; preds = %if.then8, %land.lhs.true5, %if.end
  %6 = load i64, i64* %size, align 8, !dbg !9059, !tbaa !2447
  %div = udiv i64 %6, 2, !dbg !9059
  store i64 %div, i64* %size, align 8, !dbg !9059, !tbaa !2447
  %call11 = call i32 @getrlimit(i32 5, %struct.timespec* %rlimit) #12, !dbg !9060
  %cmp12 = icmp eq i32 %call11, 0, !dbg !9062
  br i1 %cmp12, label %land.lhs.true13, label %if.end21, !dbg !9063

land.lhs.true13:                                  ; preds = %if.end10
  %rlim_cur14 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9064, !ctir !3728
  %7 = load i64, i64* %rlim_cur14, align 8, !dbg !9064, !tbaa !3751, !ctir !373
  %div15 = udiv i64 %7, 16, !dbg !9065
  %mul = mul i64 %div15, 15, !dbg !9066
  %8 = load i64, i64* %size, align 8, !dbg !9067, !tbaa !2447
  %cmp16 = icmp ult i64 %mul, %8, !dbg !9068
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !9069

if.then17:                                        ; preds = %land.lhs.true13
  %rlim_cur18 = getelementptr inbounds %struct.timespec, %struct.timespec* %rlimit, i32 0, i32 0, !dbg !9070, !ctir !3728
  %9 = load i64, i64* %rlim_cur18, align 8, !dbg !9070, !tbaa !3751, !ctir !373
  %div19 = udiv i64 %9, 16, !dbg !9071
  %mul20 = mul i64 %div19, 15, !dbg !9072
  store i64 %mul20, i64* %size, align 8, !dbg !9073, !tbaa !2447
  br label %if.end21, !dbg !9074

if.end21:                                         ; preds = %if.then17, %land.lhs.true13, %if.end10
  call void @llvm.dbg.declare(metadata double* %avail, metadata !9075, metadata !DIExpression()), !dbg !9076
  %call22 = call double @physmem_available(), !dbg !9077
  store double %call22, double* %avail, align 8, !dbg !9076, !tbaa !3865
  call void @llvm.dbg.declare(metadata double* %total, metadata !9078, metadata !DIExpression()), !dbg !9079
  %call23 = call double @physmem_total(), !dbg !9080
  store double %call23, double* %total, align 8, !dbg !9079, !tbaa !3865
  call void @llvm.dbg.declare(metadata double* %mem, metadata !9081, metadata !DIExpression()), !dbg !9082
  %10 = load double, double* %avail, align 8, !dbg !9083, !tbaa !3865
  %11 = load double, double* %total, align 8, !dbg !9083, !tbaa !3865
  %div24 = fdiv double %11, 8.000000e+00, !dbg !9083
  %cmp25 = fcmp ogt double %10, %div24, !dbg !9083
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !9083

cond.true:                                        ; preds = %if.end21
  %12 = load double, double* %avail, align 8, !dbg !9083, !tbaa !3865
  br label %cond.end, !dbg !9083

cond.false:                                       ; preds = %if.end21
  %13 = load double, double* %total, align 8, !dbg !9083, !tbaa !3865
  %div26 = fdiv double %13, 8.000000e+00, !dbg !9083
  br label %cond.end, !dbg !9083

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %12, %cond.true ], [ %div26, %cond.false ], !dbg !9083
  store double %cond, double* %mem, align 8, !dbg !9082, !tbaa !3865
  %14 = load double, double* %total, align 8, !dbg !9084, !tbaa !3865
  %mul27 = fmul double %14, 7.500000e-01, !dbg !9086
  %15 = load i64, i64* %size, align 8, !dbg !9087, !tbaa !2447
  %conv = uitofp i64 %15 to double, !dbg !9087
  %cmp28 = fcmp olt double %mul27, %conv, !dbg !9088
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !9089

if.then30:                                        ; preds = %cond.end
  %16 = load double, double* %total, align 8, !dbg !9090, !tbaa !3865
  %mul31 = fmul double %16, 7.500000e-01, !dbg !9091
  %conv32 = fptoui double %mul31 to i64, !dbg !9090
  store i64 %conv32, i64* %size, align 8, !dbg !9092, !tbaa !2447
  br label %if.end33, !dbg !9093

if.end33:                                         ; preds = %if.then30, %cond.end
  %17 = load double, double* %mem, align 8, !dbg !9094, !tbaa !3865
  %18 = load i64, i64* %size, align 8, !dbg !9096, !tbaa !2447
  %conv34 = uitofp i64 %18 to double, !dbg !9096
  %cmp35 = fcmp olt double %17, %conv34, !dbg !9097
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !9098

if.then37:                                        ; preds = %if.end33
  %19 = load double, double* %mem, align 8, !dbg !9099, !tbaa !3865
  %conv38 = fptoui double %19 to i64, !dbg !9099
  store i64 %conv38, i64* %size, align 8, !dbg !9100, !tbaa !2447
  br label %if.end39, !dbg !9101

if.end39:                                         ; preds = %if.then37, %if.end33
  %20 = load i64, i64* %size, align 8, !dbg !9102, !tbaa !2447
  %21 = load i32, i32* @nmerge, align 4, !dbg !9102, !tbaa !2273
  %conv40 = zext i32 %21 to i64, !dbg !9102
  %mul41 = mul i64 %conv40, 34, !dbg !9102
  %cmp42 = icmp ugt i64 %20, %mul41, !dbg !9102
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !9102

cond.true44:                                      ; preds = %if.end39
  %22 = load i64, i64* %size, align 8, !dbg !9102, !tbaa !2447
  br label %cond.end48, !dbg !9102

cond.false45:                                     ; preds = %if.end39
  %23 = load i32, i32* @nmerge, align 4, !dbg !9102, !tbaa !2273
  %conv46 = zext i32 %23 to i64, !dbg !9102
  %mul47 = mul i64 %conv46, 34, !dbg !9102
  br label %cond.end48, !dbg !9102

cond.end48:                                       ; preds = %cond.false45, %cond.true44
  %cond49 = phi i64 [ %22, %cond.true44 ], [ %mul47, %cond.false45 ], !dbg !9102
  ret i64 %cond49, !dbg !9103
}

; Function Attrs: nounwind
declare dso_local i32 @getrlimit(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mergefiles(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, %struct._IO_FILE* %ofp, i8* %output_file) #4 !dbg !9104 !ctir !537 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8
  %ntemps.addr = alloca i64, align 8
  %nfiles.addr = alloca i64, align 8
  %ofp.addr = alloca %struct._IO_FILE*, align 8
  %output_file.addr = alloca i8*, align 8
  %fps = alloca %struct._IO_FILE**, align 8, !ctir !534
  %nopened = alloca i64, align 8, !ctir !55
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9105, metadata !DIExpression()), !dbg !9106
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  store %struct._IO_FILE* %ofp, %struct._IO_FILE** %ofp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %ofp.addr, metadata !9111, metadata !DIExpression()), !dbg !9112
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps, metadata !9115, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.declare(metadata i64* %nopened, metadata !9117, metadata !DIExpression()), !dbg !9118
  %0 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9119, !tbaa !2286
  %1 = load i64, i64* %nfiles.addr, align 8, !dbg !9120, !tbaa !2447
  %call = call i64 @open_input_files(%struct.sortfile* %0, i64 %1, %struct._IO_FILE*** %fps), !dbg !9121
  store i64 %call, i64* %nopened, align 8, !dbg !9118, !tbaa !2447
  %2 = load i64, i64* %nopened, align 8, !dbg !9122, !tbaa !2447
  %3 = load i64, i64* %nfiles.addr, align 8, !dbg !9124, !tbaa !2447
  %cmp = icmp ult i64 %2, %3, !dbg !9125
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9126

land.lhs.true:                                    ; preds = %entry
  %4 = load i64, i64* %nopened, align 8, !dbg !9127, !tbaa !2447
  %cmp1 = icmp ult i64 %4, 2, !dbg !9128
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9129

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0)) #12, !dbg !9130
  %5 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9131, !tbaa !2286
  %6 = load i64, i64* %nopened, align 8, !dbg !9132, !tbaa !2447
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %5, i64 %6, !dbg !9131, !ctir !288
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 0, !dbg !9133, !ctir !289
  %7 = load i8*, i8** %name, align 8, !dbg !9133, !tbaa !3348, !ctir !88
  call void @sort_die(i8* %call2, i8* %7) #15, !dbg !9134
  unreachable, !dbg !9134

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9135, !tbaa !2286
  %9 = load i64, i64* %ntemps.addr, align 8, !dbg !9136, !tbaa !2447
  %10 = load i64, i64* %nopened, align 8, !dbg !9137, !tbaa !2447
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9138, !tbaa !2286
  %12 = load i8*, i8** %output_file.addr, align 8, !dbg !9139, !tbaa !2286
  %13 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !9140, !tbaa !2286
  call void @mergefps(%struct.sortfile* %8, i64 %9, i64 %10, %struct._IO_FILE* %11, i8* %12, %struct._IO_FILE** %13), !dbg !9141
  %14 = load i64, i64* %nopened, align 8, !dbg !9142, !tbaa !2447
  ret i64 %14, !dbg !9143
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @avoid_trashing_input(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, i8* %outfile) #4 !dbg !9144 !ctir !532 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8
  %ntemps.addr = alloca i64, align 8
  %nfiles.addr = alloca i64, align 8
  %outfile.addr = alloca i8*, align 8
  %tempcopy = alloca %struct.tempnode*, align 8, !ctir !293
  %i = alloca i64, align 8, !ctir !55
  %is_stdin = alloca i8, align 1, !ctir !103
  %same = alloca i8, align 1, !ctir !103
  %instat = alloca %struct.stat, align 8, !ctir !384
  %outst = alloca %struct.stat*, align 8, !ctir !383
  %tftp = alloca %struct._IO_FILE*, align 8, !ctir !0
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9145, metadata !DIExpression()), !dbg !9146
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  store i8* %outfile, i8** %outfile.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %outfile.addr, metadata !9151, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.declare(metadata %struct.tempnode** %tempcopy, metadata !9153, metadata !DIExpression()), !dbg !9154
  store %struct.tempnode* null, %struct.tempnode** %tempcopy, align 8, !dbg !9154, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9155, metadata !DIExpression()), !dbg !9157
  %0 = load i64, i64* %ntemps.addr, align 8, !dbg !9158, !tbaa !2447
  store i64 %0, i64* %i, align 8, !dbg !9157, !tbaa !2447
  br label %for.cond, !dbg !9159

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !9160, !tbaa !2447
  %2 = load i64, i64* %nfiles.addr, align 8, !dbg !9162, !tbaa !2447
  %cmp = icmp ult i64 %1, %2, !dbg !9163
  br i1 %cmp, label %for.body, label %for.end, !dbg !9164

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %is_stdin, metadata !9165, metadata !DIExpression()), !dbg !9167
  %3 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9168, !tbaa !2286
  %4 = load i64, i64* %i, align 8, !dbg !9168, !tbaa !2447
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %3, i64 %4, !dbg !9168, !ctir !288
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 0, !dbg !9168, !ctir !289
  %5 = load i8*, i8** %name, align 8, !dbg !9168, !tbaa !3348, !ctir !88
  %call = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !9168
  %cmp1 = icmp eq i32 %call, 0, !dbg !9168
  %frombool = zext i1 %cmp1 to i8, !dbg !9167
  store i8 %frombool, i8* %is_stdin, align 1, !dbg !9167, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %same, metadata !9169, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.declare(metadata %struct.stat* %instat, metadata !9171, metadata !DIExpression()), !dbg !9172
  %6 = load i8*, i8** %outfile.addr, align 8, !dbg !9173, !tbaa !2286
  %tobool = icmp ne i8* %6, null, !dbg !9173
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9175

land.lhs.true:                                    ; preds = %for.body
  %7 = load i8*, i8** %outfile.addr, align 8, !dbg !9176, !tbaa !2286
  %8 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9176, !tbaa !2286
  %9 = load i64, i64* %i, align 8, !dbg !9176, !tbaa !2447
  %arrayidx2 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %8, i64 %9, !dbg !9176, !ctir !288
  %name3 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx2, i32 0, i32 0, !dbg !9176, !ctir !289
  %10 = load i8*, i8** %name3, align 8, !dbg !9176, !tbaa !3348, !ctir !88
  %call4 = call i32 @strcmp(i8* %7, i8* %10) #14, !dbg !9176
  %cmp5 = icmp eq i32 %call4, 0, !dbg !9176
  br i1 %cmp5, label %land.lhs.true6, label %if.else, !dbg !9177

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i8, i8* %is_stdin, align 1, !dbg !9178, !tbaa !2430
  %tobool7 = trunc i8 %11 to i1, !dbg !9178
  br i1 %tobool7, label %if.else, label %if.then, !dbg !9179

if.then:                                          ; preds = %land.lhs.true6
  store i8 1, i8* %same, align 1, !dbg !9180, !tbaa !2430
  br label %if.end24, !dbg !9181

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true, %for.body
  call void @llvm.dbg.declare(metadata %struct.stat** %outst, metadata !9182, metadata !DIExpression()), !dbg !9184
  %call8 = call %struct.stat* @get_outstatus(), !dbg !9185
  store %struct.stat* %call8, %struct.stat** %outst, align 8, !dbg !9184, !tbaa !2286
  %12 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9186, !tbaa !2286
  %tobool9 = icmp ne %struct.stat* %12, null, !dbg !9186
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !9188

if.then10:                                        ; preds = %if.else
  br label %for.end, !dbg !9189

if.end:                                           ; preds = %if.else
  %13 = load i8, i8* %is_stdin, align 1, !dbg !9190, !tbaa !2430
  %tobool11 = trunc i8 %13 to i1, !dbg !9190
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !9190

cond.true:                                        ; preds = %if.end
  %call12 = call i32 @fstat(i32 0, %struct.stat* %instat) #12, !dbg !9191
  br label %cond.end, !dbg !9190

cond.false:                                       ; preds = %if.end
  %14 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9192, !tbaa !2286
  %15 = load i64, i64* %i, align 8, !dbg !9193, !tbaa !2447
  %arrayidx13 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %14, i64 %15, !dbg !9192, !ctir !288
  %name14 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx13, i32 0, i32 0, !dbg !9194, !ctir !289
  %16 = load i8*, i8** %name14, align 8, !dbg !9194, !tbaa !3348, !ctir !88
  %call15 = call i32 @stat(i8* %16, %struct.stat* %instat) #12, !dbg !9195
  br label %cond.end, !dbg !9190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call12, %cond.true ], [ %call15, %cond.false ], !dbg !9190
  %cmp16 = icmp eq i32 %cond, 0, !dbg !9196
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !9197

land.rhs:                                         ; preds = %cond.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %instat, i32 0, i32 1, !dbg !9198, !ctir !384
  %17 = load i64, i64* %st_ino, align 8, !dbg !9198, !tbaa !9199, !ctir !390
  %18 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9198, !tbaa !2286
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1, !dbg !9198, !ctir !384
  %19 = load i64, i64* %st_ino17, align 8, !dbg !9198, !tbaa !9199, !ctir !390
  %cmp18 = icmp eq i64 %17, %19, !dbg !9198
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !9198

land.rhs19:                                       ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %instat, i32 0, i32 0, !dbg !9198, !ctir !384
  %20 = load i64, i64* %st_dev, align 8, !dbg !9198, !tbaa !9200, !ctir !388
  %21 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9198, !tbaa !2286
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0, !dbg !9198, !ctir !384
  %22 = load i64, i64* %st_dev20, align 8, !dbg !9198, !tbaa !9200, !ctir !388
  %cmp21 = icmp eq i64 %20, %22, !dbg !9198
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %23 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !9201
  br label %land.end22

land.end22:                                       ; preds = %land.end, %cond.end
  %24 = phi i1 [ false, %cond.end ], [ %23, %land.end ], !dbg !9201
  %frombool23 = zext i1 %24 to i8, !dbg !9202
  store i8 %frombool23, i8* %same, align 1, !dbg !9202, !tbaa !2430
  br label %if.end24

if.end24:                                         ; preds = %land.end22, %if.then
  %25 = load i8, i8* %same, align 1, !dbg !9203, !tbaa !2430
  %tobool25 = trunc i8 %25 to i1, !dbg !9203
  br i1 %tobool25, label %if.then26, label %if.end39, !dbg !9205

if.then26:                                        ; preds = %if.end24
  %26 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9206, !tbaa !2286
  %tobool27 = icmp ne %struct.tempnode* %26, null, !dbg !9206
  br i1 %tobool27, label %if.end33, label %if.then28, !dbg !9209

if.then28:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %tftp, metadata !9210, metadata !DIExpression()), !dbg !9212
  %call29 = call %struct.tempnode* @create_temp(%struct._IO_FILE** %tftp), !dbg !9213
  store %struct.tempnode* %call29, %struct.tempnode** %tempcopy, align 8, !dbg !9214, !tbaa !2286
  %27 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9215, !tbaa !2286
  %28 = load i64, i64* %i, align 8, !dbg !9216, !tbaa !2447
  %arrayidx30 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %27, i64 %28, !dbg !9215, !ctir !288
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %tftp, align 8, !dbg !9217, !tbaa !2286
  %30 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9218, !tbaa !2286
  %name31 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %30, i32 0, i32 3, !dbg !9219, !ctir !294
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name31, i64 0, i64 0, !dbg !9218
  %call32 = call i64 @mergefiles(%struct.sortfile* %arrayidx30, i64 0, i64 1, %struct._IO_FILE* %29, i8* %arraydecay), !dbg !9220
  br label %if.end33, !dbg !9221

if.end33:                                         ; preds = %if.then28, %if.then26
  %31 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9222, !tbaa !2286
  %name34 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %31, i32 0, i32 3, !dbg !9223, !ctir !294
  %arraydecay35 = getelementptr inbounds [0 x i8], [0 x i8]* %name34, i64 0, i64 0, !dbg !9222
  %32 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9224, !tbaa !2286
  %33 = load i64, i64* %i, align 8, !dbg !9225, !tbaa !2447
  %arrayidx36 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %32, i64 %33, !dbg !9224, !ctir !288
  %name37 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx36, i32 0, i32 0, !dbg !9226, !ctir !289
  store i8* %arraydecay35, i8** %name37, align 8, !dbg !9227, !tbaa !3348, !ctir !88
  %34 = load %struct.tempnode*, %struct.tempnode** %tempcopy, align 8, !dbg !9228, !tbaa !2286
  %35 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9229, !tbaa !2286
  %36 = load i64, i64* %i, align 8, !dbg !9230, !tbaa !2447
  %arrayidx38 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %35, i64 %36, !dbg !9229, !ctir !288
  %temp = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx38, i32 0, i32 1, !dbg !9231, !ctir !289
  store %struct.tempnode* %34, %struct.tempnode** %temp, align 8, !dbg !9232, !tbaa !4771, !ctir !293
  br label %if.end39, !dbg !9233

if.end39:                                         ; preds = %if.end33, %if.end24
  br label %for.inc, !dbg !9234

for.inc:                                          ; preds = %if.end39
  %37 = load i64, i64* %i, align 8, !dbg !9235, !tbaa !2447
  %inc = add i64 %37, 1, !dbg !9235
  store i64 %inc, i64* %i, align 8, !dbg !9235, !tbaa !2447
  br label %for.cond, !dbg !9236, !llvm.loop !9237

for.end:                                          ; preds = %if.then10, %for.cond
  ret void, !dbg !9239
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @open_input_files(%struct.sortfile* %files, i64 %nfiles, %struct._IO_FILE*** %pfps) #4 !dbg !9240 !ctir !539 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8
  %nfiles.addr = alloca i64, align 8
  %pfps.addr = alloca %struct._IO_FILE***, align 8
  %fps = alloca %struct._IO_FILE**, align 8, !ctir !534
  %i = alloca i32, align 4, !ctir !7
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9243, metadata !DIExpression()), !dbg !9244
  store %struct._IO_FILE*** %pfps, %struct._IO_FILE**** %pfps.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE**** %pfps.addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps, metadata !9247, metadata !DIExpression()), !dbg !9248
  %0 = load i64, i64* %nfiles.addr, align 8, !dbg !9249, !tbaa !2447
  %call = call noalias i8* @xnmalloc(i64 %0, i64 8), !dbg !9250
  %1 = bitcast i8* %call to %struct._IO_FILE**, !dbg !9250
  %2 = load %struct._IO_FILE***, %struct._IO_FILE**** %pfps.addr, align 8, !dbg !9251, !tbaa !2286
  store %struct._IO_FILE** %1, %struct._IO_FILE*** %2, align 8, !dbg !9252, !tbaa !2286, !ctir !534
  store %struct._IO_FILE** %1, %struct._IO_FILE*** %fps, align 8, !dbg !9248, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9253, metadata !DIExpression()), !dbg !9254
  store i32 0, i32* %i, align 4, !dbg !9255, !tbaa !2273
  br label %for.cond, !dbg !9257

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !9258, !tbaa !2273
  %conv = sext i32 %3 to i64, !dbg !9258
  %4 = load i64, i64* %nfiles.addr, align 8, !dbg !9260, !tbaa !2447
  %cmp = icmp ult i64 %conv, %4, !dbg !9261
  br i1 %cmp, label %for.body, label %for.end, !dbg !9262

for.body:                                         ; preds = %for.cond
  %5 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9263, !tbaa !2286
  %6 = load i32, i32* %i, align 4, !dbg !9265, !tbaa !2273
  %idxprom = sext i32 %6 to i64, !dbg !9263
  %arrayidx = getelementptr inbounds %struct.sortfile, %struct.sortfile* %5, i64 %idxprom, !dbg !9263, !ctir !288
  %temp = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx, i32 0, i32 1, !dbg !9266, !ctir !289
  %7 = load %struct.tempnode*, %struct.tempnode** %temp, align 8, !dbg !9266, !tbaa !4771, !ctir !293
  %tobool = icmp ne %struct.tempnode* %7, null, !dbg !9263
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !9267

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9268, !tbaa !2286
  %9 = load i32, i32* %i, align 4, !dbg !9269, !tbaa !2273
  %idxprom2 = sext i32 %9 to i64, !dbg !9268
  %arrayidx3 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %8, i64 %idxprom2, !dbg !9268, !ctir !288
  %temp4 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx3, i32 0, i32 1, !dbg !9270, !ctir !289
  %10 = load %struct.tempnode*, %struct.tempnode** %temp4, align 8, !dbg !9270, !tbaa !4771, !ctir !293
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %10, i32 0, i32 2, !dbg !9271, !ctir !294
  %11 = load i8, i8* %state, align 4, !dbg !9271, !tbaa !2438, !ctir !10
  %conv5 = sext i8 %11 to i32, !dbg !9268
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !9272
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9263

cond.true:                                        ; preds = %land.lhs.true
  %12 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9273, !tbaa !2286
  %13 = load i32, i32* %i, align 4, !dbg !9274, !tbaa !2273
  %idxprom8 = sext i32 %13 to i64, !dbg !9273
  %arrayidx9 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %12, i64 %idxprom8, !dbg !9273, !ctir !288
  %temp10 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx9, i32 0, i32 1, !dbg !9275, !ctir !289
  %14 = load %struct.tempnode*, %struct.tempnode** %temp10, align 8, !dbg !9275, !tbaa !4771, !ctir !293
  %call11 = call %struct._IO_FILE* @open_temp(%struct.tempnode* %14), !dbg !9276
  br label %cond.end, !dbg !9263

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %15 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9277, !tbaa !2286
  %16 = load i32, i32* %i, align 4, !dbg !9278, !tbaa !2273
  %idxprom12 = sext i32 %16 to i64, !dbg !9277
  %arrayidx13 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %15, i64 %idxprom12, !dbg !9277, !ctir !288
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx13, i32 0, i32 0, !dbg !9279, !ctir !289
  %17 = load i8*, i8** %name, align 8, !dbg !9279, !tbaa !3348, !ctir !88
  %call14 = call %struct._IO_FILE* @stream_open(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !9280
  br label %cond.end, !dbg !9263

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._IO_FILE* [ %call11, %cond.true ], [ %call14, %cond.false ], !dbg !9263
  %18 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !9281, !tbaa !2286
  %19 = load i32, i32* %i, align 4, !dbg !9282, !tbaa !2273
  %idxprom15 = sext i32 %19 to i64, !dbg !9281
  %arrayidx16 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %18, i64 %idxprom15, !dbg !9281, !ctir !534
  store %struct._IO_FILE* %cond, %struct._IO_FILE** %arrayidx16, align 8, !dbg !9283, !tbaa !2286
  %20 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps, align 8, !dbg !9284, !tbaa !2286
  %21 = load i32, i32* %i, align 4, !dbg !9286, !tbaa !2273
  %idxprom17 = sext i32 %21 to i64, !dbg !9284
  %arrayidx18 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %20, i64 %idxprom17, !dbg !9284, !ctir !534
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx18, align 8, !dbg !9284, !tbaa !2286
  %tobool19 = icmp ne %struct._IO_FILE* %22, null, !dbg !9284
  br i1 %tobool19, label %if.end, label %if.then, !dbg !9287

if.then:                                          ; preds = %cond.end
  br label %for.end, !dbg !9288

if.end:                                           ; preds = %cond.end
  br label %for.inc, !dbg !9289

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !9290, !tbaa !2273
  %inc = add nsw i32 %23, 1, !dbg !9290
  store i32 %inc, i32* %i, align 4, !dbg !9290, !tbaa !2273
  br label %for.cond, !dbg !9291, !llvm.loop !9292

for.end:                                          ; preds = %if.then, %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !9294, !tbaa !2273
  %conv20 = sext i32 %24 to i64, !dbg !9294
  ret i64 %conv20, !dbg !9295
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @stream_open(i8* %file, i8* %how) #4 !dbg !9296 !ctir !381 {
entry:
  %file.addr = alloca i8*, align 8
  %how.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %fd = alloca i32, align 4, !ctir !7
  %ftruncate_errno = alloca i32, align 4, !ctir !7
  %outst = alloca %struct.stat*, align 8, !ctir !383
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  store i8* %how, i8** %how.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %how.addr, metadata !9299, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !9301, metadata !DIExpression()), !dbg !9302
  %0 = load i8*, i8** %how.addr, align 8, !dbg !9303, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !9305, !tbaa !2438, !ctir !89
  %conv = sext i8 %1 to i32, !dbg !9305
  %cmp = icmp eq i32 %conv, 114, !dbg !9306
  br i1 %cmp, label %if.then, label %if.else9, !dbg !9307

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %file.addr, align 8, !dbg !9308, !tbaa !2286
  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)) #14, !dbg !9308
  %cmp2 = icmp eq i32 %call, 0, !dbg !9308
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !9311

if.then4:                                         ; preds = %if.then
  store i8 1, i8* @have_read_stdin, align 1, !dbg !9312, !tbaa !2430
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9314, !tbaa !2286
  store %struct._IO_FILE* %3, %struct._IO_FILE** %fp, align 8, !dbg !9315, !tbaa !2286
  br label %if.end, !dbg !9316

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !9317, metadata !DIExpression()), !dbg !9319
  %4 = load i8*, i8** %file.addr, align 8, !dbg !9320, !tbaa !2286
  %call5 = call i32 (i8*, i32, ...) @open(i8* %4, i32 524288), !dbg !9321
  store i32 %call5, i32* %fd, align 4, !dbg !9319, !tbaa !2273
  %5 = load i32, i32* %fd, align 4, !dbg !9322, !tbaa !2273
  %cmp6 = icmp slt i32 %5, 0, !dbg !9323
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9322

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !9322

cond.false:                                       ; preds = %if.else
  %6 = load i32, i32* %fd, align 4, !dbg !9324, !tbaa !2273
  %7 = load i8*, i8** %how.addr, align 8, !dbg !9325, !tbaa !2286
  %call8 = call %struct._IO_FILE* @fdopen(i32 %6, i8* %7) #12, !dbg !9326
  br label %cond.end, !dbg !9322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._IO_FILE* [ null, %cond.true ], [ %call8, %cond.false ], !dbg !9322
  store %struct._IO_FILE* %cond, %struct._IO_FILE** %fp, align 8, !dbg !9327, !tbaa !2286
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !9328, !tbaa !2286
  call void @fadvise(%struct._IO_FILE* %8, i32 2), !dbg !9329
  br label %if.end34, !dbg !9330

if.else9:                                         ; preds = %entry
  %9 = load i8*, i8** %how.addr, align 8, !dbg !9331, !tbaa !2286
  %10 = load i8, i8* %9, align 1, !dbg !9333, !tbaa !2438, !ctir !89
  %conv10 = sext i8 %10 to i32, !dbg !9333
  %cmp11 = icmp eq i32 %conv10, 119, !dbg !9334
  br i1 %cmp11, label %if.then13, label %if.else32, !dbg !9335

if.then13:                                        ; preds = %if.else9
  %11 = load i8*, i8** %file.addr, align 8, !dbg !9336, !tbaa !2286
  %tobool = icmp ne i8* %11, null, !dbg !9336
  br i1 %tobool, label %land.lhs.true, label %if.end31, !dbg !9339

land.lhs.true:                                    ; preds = %if.then13
  %call14 = call i32 @ftruncate(i32 1, i64 0) #12, !dbg !9340
  %cmp15 = icmp ne i32 %call14, 0, !dbg !9341
  br i1 %cmp15, label %if.then17, label %if.end31, !dbg !9342

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %ftruncate_errno, metadata !9343, metadata !DIExpression()), !dbg !9345
  %call18 = call i32* @__errno_location() #16, !dbg !9346
  %12 = load i32, i32* %call18, align 4, !dbg !9346, !tbaa !2273, !ctir !7
  store i32 %12, i32* %ftruncate_errno, align 4, !dbg !9345, !tbaa !2273
  call void @llvm.dbg.declare(metadata %struct.stat** %outst, metadata !9347, metadata !DIExpression()), !dbg !9348
  %call19 = call %struct.stat* @get_outstatus(), !dbg !9349
  store %struct.stat* %call19, %struct.stat** %outst, align 8, !dbg !9348, !tbaa !2286
  %13 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9350, !tbaa !2286
  %tobool20 = icmp ne %struct.stat* %13, null, !dbg !9350
  br i1 %tobool20, label %lor.lhs.false, label %if.then27, !dbg !9352

lor.lhs.false:                                    ; preds = %if.then17
  %14 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9353, !tbaa !2286
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !9353, !ctir !384
  %15 = load i32, i32* %st_mode, align 8, !dbg !9353, !tbaa !5250, !ctir !394
  %and = and i32 %15, 61440, !dbg !9353
  %cmp21 = icmp eq i32 %and, 32768, !dbg !9353
  br i1 %cmp21, label %if.then27, label %lor.lhs.false23, !dbg !9354

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %16 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9355, !tbaa !2286
  %st_mode24 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !9355, !ctir !384
  %17 = load i32, i32* %st_mode24, align 8, !dbg !9355, !tbaa !5250, !ctir !394
  %18 = load %struct.stat*, %struct.stat** %outst, align 8, !dbg !9355, !tbaa !2286
  %st_mode25 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !9355, !ctir !384
  %19 = load i32, i32* %st_mode25, align 8, !dbg !9355, !tbaa !5250, !ctir !394
  %sub = sub i32 %17, %19, !dbg !9355
  %tobool26 = icmp ne i32 %sub, 0, !dbg !9355
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !9356

if.then27:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %if.then17
  %20 = load i32, i32* %ftruncate_errno, align 4, !dbg !9357, !tbaa !2273
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.143, i64 0, i64 0)) #12, !dbg !9357
  %21 = load i8*, i8** %file.addr, align 8, !dbg !9357, !tbaa !2286
  %call29 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %21), !dbg !9357
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %20, i8* %call28, i8* %call29), !dbg !9357
  unreachable, !dbg !9357

if.end30:                                         ; preds = %lor.lhs.false23
  br label %if.end31, !dbg !9358

if.end31:                                         ; preds = %if.end30, %land.lhs.true, %if.then13
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9359, !tbaa !2286
  store %struct._IO_FILE* %22, %struct._IO_FILE** %fp, align 8, !dbg !9360, !tbaa !2286
  br label %if.end33, !dbg !9361

if.else32:                                        ; preds = %if.else9
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 982, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.stream_open, i64 0, i64 0)) #13, !dbg !9362
  unreachable, !dbg !9362

if.end33:                                         ; preds = %if.end31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !9365, !tbaa !2286
  ret %struct._IO_FILE* %23, !dbg !9366
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mergefps(%struct.sortfile* %files, i64 %ntemps, i64 %nfiles, %struct._IO_FILE* %ofp, i8* %output_file, %struct._IO_FILE** %fps) #4 !dbg !9367 !ctir !566 {
entry:
  %files.addr = alloca %struct.sortfile*, align 8
  %ntemps.addr = alloca i64, align 8
  %nfiles.addr = alloca i64, align 8
  %ofp.addr = alloca %struct._IO_FILE*, align 8
  %output_file.addr = alloca i8*, align 8
  %fps.addr = alloca %struct._IO_FILE**, align 8
  %buffer = alloca %struct.buffer*, align 8, !ctir !457
  %saved = alloca %struct.line, align 8, !ctir !449
  %savedline = alloca %struct.line*, align 8, !ctir !447
  %savealloc = alloca i64, align 8, !ctir !55
  %cur = alloca %struct.line**, align 8, !ctir !568
  %base = alloca %struct.line**, align 8, !ctir !568
  %ord = alloca i64*, align 8, !ctir !360
  %i = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %t = alloca i64, align 8, !ctir !55
  %key = alloca %struct.keyfield*, align 8, !ctir !423
  %linelim = alloca %struct.line*, align 8, !ctir !447
  %smallest = alloca %struct.line*, align 8, !ctir !447
  %linelim125 = alloca %struct.line*, align 8, !ctir !447
  %lo = alloca i64, align 8, !ctir !55
  %hi = alloca i64, align 8, !ctir !55
  %probe = alloca i64, align 8, !ctir !55
  %ord0 = alloca i64, align 8, !ctir !55
  %count_of_smaller_lines = alloca i64, align 8, !ctir !55
  %cmp207 = alloca i32, align 4, !ctir !7
  store %struct.sortfile* %files, %struct.sortfile** %files.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.sortfile** %files.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  store i64 %ntemps, i64* %ntemps.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %ntemps.addr, metadata !9370, metadata !DIExpression()), !dbg !9371
  store i64 %nfiles, i64* %nfiles.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nfiles.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  store %struct._IO_FILE* %ofp, %struct._IO_FILE** %ofp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %ofp.addr, metadata !9374, metadata !DIExpression()), !dbg !9375
  store i8* %output_file, i8** %output_file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %output_file.addr, metadata !9376, metadata !DIExpression()), !dbg !9377
  store %struct._IO_FILE** %fps, %struct._IO_FILE*** %fps.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE*** %fps.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.declare(metadata %struct.buffer** %buffer, metadata !9380, metadata !DIExpression()), !dbg !9381
  %0 = load i64, i64* %nfiles.addr, align 8, !dbg !9382, !tbaa !2447
  %call = call noalias i8* @xnmalloc(i64 %0, i64 56), !dbg !9383
  %1 = bitcast i8* %call to %struct.buffer*, !dbg !9383
  store %struct.buffer* %1, %struct.buffer** %buffer, align 8, !dbg !9381, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line* %saved, metadata !9384, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.declare(metadata %struct.line** %savedline, metadata !9386, metadata !DIExpression()), !dbg !9387
  store %struct.line* null, %struct.line** %savedline, align 8, !dbg !9387, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %savealloc, metadata !9388, metadata !DIExpression()), !dbg !9389
  store i64 0, i64* %savealloc, align 8, !dbg !9389, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.line*** %cur, metadata !9390, metadata !DIExpression()), !dbg !9391
  %2 = load i64, i64* %nfiles.addr, align 8, !dbg !9392, !tbaa !2447
  %call1 = call noalias i8* @xnmalloc(i64 %2, i64 8), !dbg !9393
  %3 = bitcast i8* %call1 to %struct.line**, !dbg !9393
  store %struct.line** %3, %struct.line*** %cur, align 8, !dbg !9391, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.line*** %base, metadata !9394, metadata !DIExpression()), !dbg !9395
  %4 = load i64, i64* %nfiles.addr, align 8, !dbg !9396, !tbaa !2447
  %call2 = call noalias i8* @xnmalloc(i64 %4, i64 8), !dbg !9397
  %5 = bitcast i8* %call2 to %struct.line**, !dbg !9397
  store %struct.line** %5, %struct.line*** %base, align 8, !dbg !9395, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %ord, metadata !9398, metadata !DIExpression()), !dbg !9399
  %6 = load i64, i64* %nfiles.addr, align 8, !dbg !9400, !tbaa !2447
  %call3 = call noalias i8* @xnmalloc(i64 %6, i64 8), !dbg !9401
  %7 = bitcast i8* %call3 to i64*, !dbg !9401
  store i64* %7, i64** %ord, align 8, !dbg !9399, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata i64* %j, metadata !9404, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.declare(metadata i64* %t, metadata !9406, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key, metadata !9408, metadata !DIExpression()), !dbg !9409
  %8 = load %struct.keyfield*, %struct.keyfield** @keylist, align 8, !dbg !9410, !tbaa !2286
  store %struct.keyfield* %8, %struct.keyfield** %key, align 8, !dbg !9409, !tbaa !2286
  %text = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9411, !ctir !449
  store i8* null, i8** %text, align 8, !dbg !9412, !tbaa !4488, !ctir !9
  store i64 0, i64* %i, align 8, !dbg !9413, !tbaa !2447
  br label %for.cond, !dbg !9415

for.cond:                                         ; preds = %if.end34, %entry
  %9 = load i64, i64* %i, align 8, !dbg !9416, !tbaa !2447
  %10 = load i64, i64* %nfiles.addr, align 8, !dbg !9418, !tbaa !2447
  %cmp = icmp ult i64 %9, %10, !dbg !9419
  br i1 %cmp, label %for.body, label %for.end35, !dbg !9420

for.body:                                         ; preds = %for.cond
  %11 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9421, !tbaa !2286
  %12 = load i64, i64* %i, align 8, !dbg !9423, !tbaa !2447
  %arrayidx = getelementptr inbounds %struct.buffer, %struct.buffer* %11, i64 %12, !dbg !9421, !ctir !457
  %13 = load i64, i64* @merge_buffer_size, align 8, !dbg !9424, !tbaa !2447
  %14 = load i64, i64* @sort_size, align 8, !dbg !9424, !tbaa !2447
  %15 = load i64, i64* %nfiles.addr, align 8, !dbg !9424, !tbaa !2447
  %div = udiv i64 %14, %15, !dbg !9424
  %cmp4 = icmp ugt i64 %13, %div, !dbg !9424
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9424

cond.true:                                        ; preds = %for.body
  %16 = load i64, i64* @merge_buffer_size, align 8, !dbg !9424, !tbaa !2447
  br label %cond.end, !dbg !9424

cond.false:                                       ; preds = %for.body
  %17 = load i64, i64* @sort_size, align 8, !dbg !9424, !tbaa !2447
  %18 = load i64, i64* %nfiles.addr, align 8, !dbg !9424, !tbaa !2447
  %div5 = udiv i64 %17, %18, !dbg !9424
  br label %cond.end, !dbg !9424

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %div5, %cond.false ], !dbg !9424
  call void @initbuf(%struct.buffer* %arrayidx, i64 32, i64 %cond), !dbg !9425
  %19 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9426, !tbaa !2286
  %20 = load i64, i64* %i, align 8, !dbg !9428, !tbaa !2447
  %arrayidx6 = getelementptr inbounds %struct.buffer, %struct.buffer* %19, i64 %20, !dbg !9426, !ctir !457
  %21 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9429, !tbaa !2286
  %22 = load i64, i64* %i, align 8, !dbg !9430, !tbaa !2447
  %arrayidx7 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %21, i64 %22, !dbg !9429, !ctir !534
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx7, align 8, !dbg !9429, !tbaa !2286
  %24 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9431, !tbaa !2286
  %25 = load i64, i64* %i, align 8, !dbg !9432, !tbaa !2447
  %arrayidx8 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %24, i64 %25, !dbg !9431, !ctir !288
  %name = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx8, i32 0, i32 0, !dbg !9433, !ctir !289
  %26 = load i8*, i8** %name, align 8, !dbg !9433, !tbaa !3348, !ctir !88
  %call9 = call zeroext i1 @fillbuf(%struct.buffer* %arrayidx6, %struct._IO_FILE* %23, i8* %26), !dbg !9434
  br i1 %call9, label %if.then, label %if.else, !dbg !9435

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.line** %linelim, metadata !9436, metadata !DIExpression()), !dbg !9438
  %27 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9439, !tbaa !2286
  %28 = load i64, i64* %i, align 8, !dbg !9440, !tbaa !2447
  %arrayidx10 = getelementptr inbounds %struct.buffer, %struct.buffer* %27, i64 %28, !dbg !9439, !ctir !457
  %call11 = call %struct.line* @buffer_linelim(%struct.buffer* %arrayidx10), !dbg !9441
  store %struct.line* %call11, %struct.line** %linelim, align 8, !dbg !9438, !tbaa !2286
  %29 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !9442, !tbaa !2286
  %add.ptr = getelementptr inbounds %struct.line, %struct.line* %29, i64 -1, !dbg !9443
  %30 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9444, !tbaa !2286
  %31 = load i64, i64* %i, align 8, !dbg !9445, !tbaa !2447
  %arrayidx12 = getelementptr inbounds %struct.line*, %struct.line** %30, i64 %31, !dbg !9444, !ctir !568
  store %struct.line* %add.ptr, %struct.line** %arrayidx12, align 8, !dbg !9446, !tbaa !2286
  %32 = load %struct.line*, %struct.line** %linelim, align 8, !dbg !9447, !tbaa !2286
  %33 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9448, !tbaa !2286
  %34 = load i64, i64* %i, align 8, !dbg !9449, !tbaa !2447
  %arrayidx13 = getelementptr inbounds %struct.buffer, %struct.buffer* %33, i64 %34, !dbg !9448, !ctir !457
  %nlines = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx13, i32 0, i32 2, !dbg !9450, !ctir !458
  %35 = load i64, i64* %nlines, align 8, !dbg !9450, !tbaa !4502, !ctir !55
  %idx.neg = sub i64 0, %35, !dbg !9451
  %add.ptr14 = getelementptr inbounds %struct.line, %struct.line* %32, i64 %idx.neg, !dbg !9451
  %36 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9452, !tbaa !2286
  %37 = load i64, i64* %i, align 8, !dbg !9453, !tbaa !2447
  %arrayidx15 = getelementptr inbounds %struct.line*, %struct.line** %36, i64 %37, !dbg !9452, !ctir !568
  store %struct.line* %add.ptr14, %struct.line** %arrayidx15, align 8, !dbg !9454, !tbaa !2286
  %38 = load i64, i64* %i, align 8, !dbg !9455, !tbaa !2447
  %inc = add i64 %38, 1, !dbg !9455
  store i64 %inc, i64* %i, align 8, !dbg !9455, !tbaa !2447
  br label %if.end34, !dbg !9456

if.else:                                          ; preds = %cond.end
  %39 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9457, !tbaa !2286
  %40 = load i64, i64* %i, align 8, !dbg !9459, !tbaa !2447
  %arrayidx16 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %39, i64 %40, !dbg !9457, !ctir !534
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx16, align 8, !dbg !9457, !tbaa !2286
  %42 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9460, !tbaa !2286
  %43 = load i64, i64* %i, align 8, !dbg !9461, !tbaa !2447
  %arrayidx17 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %42, i64 %43, !dbg !9460, !ctir !288
  %name18 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx17, i32 0, i32 0, !dbg !9462, !ctir !289
  %44 = load i8*, i8** %name18, align 8, !dbg !9462, !tbaa !3348, !ctir !88
  call void @xfclose(%struct._IO_FILE* %41, i8* %44), !dbg !9463
  %45 = load i64, i64* %i, align 8, !dbg !9464, !tbaa !2447
  %46 = load i64, i64* %ntemps.addr, align 8, !dbg !9466, !tbaa !2447
  %cmp19 = icmp ult i64 %45, %46, !dbg !9467
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !9468

if.then20:                                        ; preds = %if.else
  %47 = load i64, i64* %ntemps.addr, align 8, !dbg !9469, !tbaa !2447
  %dec = add i64 %47, -1, !dbg !9469
  store i64 %dec, i64* %ntemps.addr, align 8, !dbg !9469, !tbaa !2447
  %48 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9471, !tbaa !2286
  %49 = load i64, i64* %i, align 8, !dbg !9472, !tbaa !2447
  %arrayidx21 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %48, i64 %49, !dbg !9471, !ctir !288
  %name22 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx21, i32 0, i32 0, !dbg !9473, !ctir !289
  %50 = load i8*, i8** %name22, align 8, !dbg !9473, !tbaa !3348, !ctir !88
  call void @zaptemp(i8* %50), !dbg !9474
  br label %if.end, !dbg !9475

if.end:                                           ; preds = %if.then20, %if.else
  %51 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9476, !tbaa !2286
  %52 = load i64, i64* %i, align 8, !dbg !9477, !tbaa !2447
  %arrayidx23 = getelementptr inbounds %struct.buffer, %struct.buffer* %51, i64 %52, !dbg !9476, !ctir !457
  %buf = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx23, i32 0, i32 0, !dbg !9478, !ctir !458
  %53 = load i8*, i8** %buf, align 8, !dbg !9478, !tbaa !4643, !ctir !9
  call void @free(i8* %53) #12, !dbg !9479
  %54 = load i64, i64* %nfiles.addr, align 8, !dbg !9480, !tbaa !2447
  %dec24 = add i64 %54, -1, !dbg !9480
  store i64 %dec24, i64* %nfiles.addr, align 8, !dbg !9480, !tbaa !2447
  %55 = load i64, i64* %i, align 8, !dbg !9481, !tbaa !2447
  store i64 %55, i64* %j, align 8, !dbg !9483, !tbaa !2447
  br label %for.cond25, !dbg !9484

for.cond25:                                       ; preds = %for.inc, %if.end
  %56 = load i64, i64* %j, align 8, !dbg !9485, !tbaa !2447
  %57 = load i64, i64* %nfiles.addr, align 8, !dbg !9487, !tbaa !2447
  %cmp26 = icmp ult i64 %56, %57, !dbg !9488
  br i1 %cmp26, label %for.body27, label %for.end, !dbg !9489

for.body27:                                       ; preds = %for.cond25
  %58 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9490, !tbaa !2286
  %59 = load i64, i64* %j, align 8, !dbg !9492, !tbaa !2447
  %arrayidx28 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %58, i64 %59, !dbg !9490, !ctir !288
  %60 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9493, !tbaa !2286
  %61 = load i64, i64* %j, align 8, !dbg !9494, !tbaa !2447
  %add = add i64 %61, 1, !dbg !9495
  %arrayidx29 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %60, i64 %add, !dbg !9493, !ctir !288
  %62 = bitcast %struct.sortfile* %arrayidx28 to i8*, !dbg !9493
  %63 = bitcast %struct.sortfile* %arrayidx29 to i8*, !dbg !9493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false), !dbg !9493, !tbaa.struct !9496
  %64 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9497, !tbaa !2286
  %65 = load i64, i64* %j, align 8, !dbg !9498, !tbaa !2447
  %add30 = add i64 %65, 1, !dbg !9499
  %arrayidx31 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %64, i64 %add30, !dbg !9497, !ctir !534
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx31, align 8, !dbg !9497, !tbaa !2286
  %67 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9500, !tbaa !2286
  %68 = load i64, i64* %j, align 8, !dbg !9501, !tbaa !2447
  %arrayidx32 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %67, i64 %68, !dbg !9500, !ctir !534
  store %struct._IO_FILE* %66, %struct._IO_FILE** %arrayidx32, align 8, !dbg !9502, !tbaa !2286
  br label %for.inc, !dbg !9503

for.inc:                                          ; preds = %for.body27
  %69 = load i64, i64* %j, align 8, !dbg !9504, !tbaa !2447
  %inc33 = add i64 %69, 1, !dbg !9504
  store i64 %inc33, i64* %j, align 8, !dbg !9504, !tbaa !2447
  br label %for.cond25, !dbg !9505, !llvm.loop !9506

for.end:                                          ; preds = %for.cond25
  br label %if.end34

if.end34:                                         ; preds = %for.end, %if.then
  br label %for.cond, !dbg !9508, !llvm.loop !9509

for.end35:                                        ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !9511, !tbaa !2447
  br label %for.cond36, !dbg !9513

for.cond36:                                       ; preds = %for.inc40, %for.end35
  %70 = load i64, i64* %i, align 8, !dbg !9514, !tbaa !2447
  %71 = load i64, i64* %nfiles.addr, align 8, !dbg !9516, !tbaa !2447
  %cmp37 = icmp ult i64 %70, %71, !dbg !9517
  br i1 %cmp37, label %for.body38, label %for.end42, !dbg !9518

for.body38:                                       ; preds = %for.cond36
  %72 = load i64, i64* %i, align 8, !dbg !9519, !tbaa !2447
  %73 = load i64*, i64** %ord, align 8, !dbg !9520, !tbaa !2286
  %74 = load i64, i64* %i, align 8, !dbg !9521, !tbaa !2447
  %arrayidx39 = getelementptr inbounds i64, i64* %73, i64 %74, !dbg !9520, !ctir !360
  store i64 %72, i64* %arrayidx39, align 8, !dbg !9522, !tbaa !2447
  br label %for.inc40, !dbg !9520

for.inc40:                                        ; preds = %for.body38
  %75 = load i64, i64* %i, align 8, !dbg !9523, !tbaa !2447
  %inc41 = add i64 %75, 1, !dbg !9523
  store i64 %inc41, i64* %i, align 8, !dbg !9523, !tbaa !2447
  br label %for.cond36, !dbg !9524, !llvm.loop !9525

for.end42:                                        ; preds = %for.cond36
  store i64 1, i64* %i, align 8, !dbg !9527, !tbaa !2447
  br label %for.cond43, !dbg !9529

for.cond43:                                       ; preds = %for.inc60, %for.end42
  %76 = load i64, i64* %i, align 8, !dbg !9530, !tbaa !2447
  %77 = load i64, i64* %nfiles.addr, align 8, !dbg !9532, !tbaa !2447
  %cmp44 = icmp ult i64 %76, %77, !dbg !9533
  br i1 %cmp44, label %for.body45, label %for.end62, !dbg !9534

for.body45:                                       ; preds = %for.cond43
  %78 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9535, !tbaa !2286
  %79 = load i64*, i64** %ord, align 8, !dbg !9537, !tbaa !2286
  %80 = load i64, i64* %i, align 8, !dbg !9538, !tbaa !2447
  %sub = sub i64 %80, 1, !dbg !9539
  %arrayidx46 = getelementptr inbounds i64, i64* %79, i64 %sub, !dbg !9537, !ctir !360
  %81 = load i64, i64* %arrayidx46, align 8, !dbg !9537, !tbaa !2447
  %arrayidx47 = getelementptr inbounds %struct.line*, %struct.line** %78, i64 %81, !dbg !9535, !ctir !568
  %82 = load %struct.line*, %struct.line** %arrayidx47, align 8, !dbg !9535, !tbaa !2286
  %83 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9540, !tbaa !2286
  %84 = load i64*, i64** %ord, align 8, !dbg !9541, !tbaa !2286
  %85 = load i64, i64* %i, align 8, !dbg !9542, !tbaa !2447
  %arrayidx48 = getelementptr inbounds i64, i64* %84, i64 %85, !dbg !9541, !ctir !360
  %86 = load i64, i64* %arrayidx48, align 8, !dbg !9541, !tbaa !2447
  %arrayidx49 = getelementptr inbounds %struct.line*, %struct.line** %83, i64 %86, !dbg !9540, !ctir !568
  %87 = load %struct.line*, %struct.line** %arrayidx49, align 8, !dbg !9540, !tbaa !2286
  %call50 = call i32 @compare(%struct.line* %82, %struct.line* %87), !dbg !9543
  %cmp51 = icmp slt i32 0, %call50, !dbg !9544
  br i1 %cmp51, label %if.then52, label %if.end59, !dbg !9545

if.then52:                                        ; preds = %for.body45
  %88 = load i64*, i64** %ord, align 8, !dbg !9546, !tbaa !2286
  %89 = load i64, i64* %i, align 8, !dbg !9547, !tbaa !2447
  %sub53 = sub i64 %89, 1, !dbg !9548
  %arrayidx54 = getelementptr inbounds i64, i64* %88, i64 %sub53, !dbg !9546, !ctir !360
  %90 = load i64, i64* %arrayidx54, align 8, !dbg !9546, !tbaa !2447
  store i64 %90, i64* %t, align 8, !dbg !9549, !tbaa !2447
  %91 = load i64*, i64** %ord, align 8, !dbg !9550, !tbaa !2286
  %92 = load i64, i64* %i, align 8, !dbg !9551, !tbaa !2447
  %arrayidx55 = getelementptr inbounds i64, i64* %91, i64 %92, !dbg !9550, !ctir !360
  %93 = load i64, i64* %arrayidx55, align 8, !dbg !9550, !tbaa !2447
  %94 = load i64*, i64** %ord, align 8, !dbg !9552, !tbaa !2286
  %95 = load i64, i64* %i, align 8, !dbg !9553, !tbaa !2447
  %sub56 = sub i64 %95, 1, !dbg !9554
  %arrayidx57 = getelementptr inbounds i64, i64* %94, i64 %sub56, !dbg !9552, !ctir !360
  store i64 %93, i64* %arrayidx57, align 8, !dbg !9555, !tbaa !2447
  %96 = load i64, i64* %t, align 8, !dbg !9556, !tbaa !2447
  %97 = load i64*, i64** %ord, align 8, !dbg !9557, !tbaa !2286
  %98 = load i64, i64* %i, align 8, !dbg !9558, !tbaa !2447
  %arrayidx58 = getelementptr inbounds i64, i64* %97, i64 %98, !dbg !9557, !ctir !360
  store i64 %96, i64* %arrayidx58, align 8, !dbg !9559, !tbaa !2447
  store i64 0, i64* %i, align 8, !dbg !9560, !tbaa !2447
  br label %if.end59, !dbg !9561

if.end59:                                         ; preds = %if.then52, %for.body45
  br label %for.inc60, !dbg !9562

for.inc60:                                        ; preds = %if.end59
  %99 = load i64, i64* %i, align 8, !dbg !9563, !tbaa !2447
  %inc61 = add i64 %99, 1, !dbg !9563
  store i64 %inc61, i64* %i, align 8, !dbg !9563, !tbaa !2447
  br label %for.cond43, !dbg !9564, !llvm.loop !9565

for.end62:                                        ; preds = %for.cond43
  br label %while.cond, !dbg !9567

while.cond:                                       ; preds = %for.end232, %for.end200, %for.end62
  %100 = load i64, i64* %nfiles.addr, align 8, !dbg !9568, !tbaa !2447
  %tobool = icmp ne i64 %100, 0, !dbg !9567
  br i1 %tobool, label %while.body, label %while.end234, !dbg !9567

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.line** %smallest, metadata !9569, metadata !DIExpression()), !dbg !9571
  %101 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9572, !tbaa !2286
  %102 = load i64*, i64** %ord, align 8, !dbg !9573, !tbaa !2286
  %arrayidx63 = getelementptr inbounds i64, i64* %102, i64 0, !dbg !9573, !ctir !360
  %103 = load i64, i64* %arrayidx63, align 8, !dbg !9573, !tbaa !2447
  %arrayidx64 = getelementptr inbounds %struct.line*, %struct.line** %101, i64 %103, !dbg !9572, !ctir !568
  %104 = load %struct.line*, %struct.line** %arrayidx64, align 8, !dbg !9572, !tbaa !2286
  store %struct.line* %104, %struct.line** %smallest, align 8, !dbg !9571, !tbaa !2286
  %105 = load i8, i8* @unique, align 1, !dbg !9574, !tbaa !2430
  %tobool65 = trunc i8 %105 to i1, !dbg !9574
  br i1 %tobool65, label %if.then66, label %if.else106, !dbg !9576

if.then66:                                        ; preds = %while.body
  %106 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9577, !tbaa !2286
  %tobool67 = icmp ne %struct.line* %106, null, !dbg !9577
  br i1 %tobool67, label %land.lhs.true, label %if.end71, !dbg !9580

land.lhs.true:                                    ; preds = %if.then66
  %107 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9581, !tbaa !2286
  %108 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9582, !tbaa !2286
  %call68 = call i32 @compare(%struct.line* %107, %struct.line* %108), !dbg !9583
  %tobool69 = icmp ne i32 %call68, 0, !dbg !9583
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !9584

if.then70:                                        ; preds = %land.lhs.true
  store %struct.line* null, %struct.line** %savedline, align 8, !dbg !9585, !tbaa !2286
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9587, !tbaa !2286
  %110 = load i8*, i8** %output_file.addr, align 8, !dbg !9588, !tbaa !2286
  call void @write_line(%struct.line* %saved, %struct._IO_FILE* %109, i8* %110), !dbg !9589
  br label %if.end71, !dbg !9590

if.end71:                                         ; preds = %if.then70, %land.lhs.true, %if.then66
  %111 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9591, !tbaa !2286
  %tobool72 = icmp ne %struct.line* %111, null, !dbg !9591
  br i1 %tobool72, label %if.end105, label %if.then73, !dbg !9593

if.then73:                                        ; preds = %if.end71
  store %struct.line* %saved, %struct.line** %savedline, align 8, !dbg !9594, !tbaa !2286
  %112 = load i64, i64* %savealloc, align 8, !dbg !9596, !tbaa !2447
  %113 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9598, !tbaa !2286
  %length = getelementptr inbounds %struct.line, %struct.line* %113, i32 0, i32 1, !dbg !9599, !ctir !448
  %114 = load i64, i64* %length, align 8, !dbg !9599, !tbaa !4573, !ctir !55
  %cmp74 = icmp ult i64 %112, %114, !dbg !9600
  br i1 %cmp74, label %if.then75, label %if.end85, !dbg !9601

if.then75:                                        ; preds = %if.then73
  br label %do.body, !dbg !9602

do.body:                                          ; preds = %do.cond, %if.then75
  %115 = load i64, i64* %savealloc, align 8, !dbg !9604, !tbaa !2447
  %tobool76 = icmp ne i64 %115, 0, !dbg !9604
  br i1 %tobool76, label %if.end79, label %if.then77, !dbg !9606

if.then77:                                        ; preds = %do.body
  %116 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9607, !tbaa !2286
  %length78 = getelementptr inbounds %struct.line, %struct.line* %116, i32 0, i32 1, !dbg !9609, !ctir !448
  %117 = load i64, i64* %length78, align 8, !dbg !9609, !tbaa !4573, !ctir !55
  store i64 %117, i64* %savealloc, align 8, !dbg !9610, !tbaa !2447
  br label %do.end, !dbg !9611

if.end79:                                         ; preds = %do.body
  br label %do.cond, !dbg !9604

do.cond:                                          ; preds = %if.end79
  %118 = load i64, i64* %savealloc, align 8, !dbg !9612, !tbaa !2447
  %mul = mul i64 %118, 2, !dbg !9612
  store i64 %mul, i64* %savealloc, align 8, !dbg !9612, !tbaa !2447
  %119 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9613, !tbaa !2286
  %length80 = getelementptr inbounds %struct.line, %struct.line* %119, i32 0, i32 1, !dbg !9614, !ctir !448
  %120 = load i64, i64* %length80, align 8, !dbg !9614, !tbaa !4573, !ctir !55
  %cmp81 = icmp ult i64 %mul, %120, !dbg !9615
  br i1 %cmp81, label %do.body, label %do.end, !dbg !9604, !llvm.loop !9616

do.end:                                           ; preds = %do.cond, %if.then77
  %text82 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9618, !ctir !449
  %121 = load i8*, i8** %text82, align 8, !dbg !9618, !tbaa !4488, !ctir !9
  call void @free(i8* %121) #12, !dbg !9619
  %122 = load i64, i64* %savealloc, align 8, !dbg !9620, !tbaa !2447
  %call83 = call noalias i8* @xmalloc(i64 %122), !dbg !9621
  %text84 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9622, !ctir !449
  store i8* %call83, i8** %text84, align 8, !dbg !9623, !tbaa !4488, !ctir !9
  br label %if.end85, !dbg !9624

if.end85:                                         ; preds = %do.end, %if.then73
  %123 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9625, !tbaa !2286
  %length86 = getelementptr inbounds %struct.line, %struct.line* %123, i32 0, i32 1, !dbg !9626, !ctir !448
  %124 = load i64, i64* %length86, align 8, !dbg !9626, !tbaa !4573, !ctir !55
  %length87 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 1, !dbg !9627, !ctir !449
  store i64 %124, i64* %length87, align 8, !dbg !9628, !tbaa !4573, !ctir !55
  %text88 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9629, !ctir !449
  %125 = load i8*, i8** %text88, align 8, !dbg !9629, !tbaa !4488, !ctir !9
  %126 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9630, !tbaa !2286
  %text89 = getelementptr inbounds %struct.line, %struct.line* %126, i32 0, i32 0, !dbg !9631, !ctir !448
  %127 = load i8*, i8** %text89, align 8, !dbg !9631, !tbaa !4488, !ctir !9
  %length90 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 1, !dbg !9632, !ctir !449
  %128 = load i64, i64* %length90, align 8, !dbg !9632, !tbaa !4573, !ctir !55
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %125, i8* align 1 %127, i64 %128, i1 false), !dbg !9633
  %129 = load %struct.keyfield*, %struct.keyfield** %key, align 8, !dbg !9634, !tbaa !2286
  %tobool91 = icmp ne %struct.keyfield* %129, null, !dbg !9634
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !9636

if.then92:                                        ; preds = %if.end85
  %text93 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9637, !ctir !449
  %130 = load i8*, i8** %text93, align 8, !dbg !9637, !tbaa !4488, !ctir !9
  %131 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9639, !tbaa !2286
  %keybeg = getelementptr inbounds %struct.line, %struct.line* %131, i32 0, i32 2, !dbg !9640, !ctir !448
  %132 = load i8*, i8** %keybeg, align 8, !dbg !9640, !tbaa !4619, !ctir !9
  %133 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9641, !tbaa !2286
  %text94 = getelementptr inbounds %struct.line, %struct.line* %133, i32 0, i32 0, !dbg !9642, !ctir !448
  %134 = load i8*, i8** %text94, align 8, !dbg !9642, !tbaa !4488, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %132 to i64, !dbg !9643
  %sub.ptr.rhs.cast = ptrtoint i8* %134 to i64, !dbg !9643
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9643
  %add.ptr95 = getelementptr inbounds i8, i8* %130, i64 %sub.ptr.sub, !dbg !9644
  %keybeg96 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 2, !dbg !9645, !ctir !449
  store i8* %add.ptr95, i8** %keybeg96, align 8, !dbg !9646, !tbaa !4619, !ctir !9
  %text97 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9647, !ctir !449
  %135 = load i8*, i8** %text97, align 8, !dbg !9647, !tbaa !4488, !ctir !9
  %136 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9648, !tbaa !2286
  %keylim = getelementptr inbounds %struct.line, %struct.line* %136, i32 0, i32 3, !dbg !9649, !ctir !448
  %137 = load i8*, i8** %keylim, align 8, !dbg !9649, !tbaa !4629, !ctir !9
  %138 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9650, !tbaa !2286
  %text98 = getelementptr inbounds %struct.line, %struct.line* %138, i32 0, i32 0, !dbg !9651, !ctir !448
  %139 = load i8*, i8** %text98, align 8, !dbg !9651, !tbaa !4488, !ctir !9
  %sub.ptr.lhs.cast99 = ptrtoint i8* %137 to i64, !dbg !9652
  %sub.ptr.rhs.cast100 = ptrtoint i8* %139 to i64, !dbg !9652
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !9652
  %add.ptr102 = getelementptr inbounds i8, i8* %135, i64 %sub.ptr.sub101, !dbg !9653
  %keylim103 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 3, !dbg !9654, !ctir !449
  store i8* %add.ptr102, i8** %keylim103, align 8, !dbg !9655, !tbaa !4629, !ctir !9
  br label %if.end104, !dbg !9656

if.end104:                                        ; preds = %if.then92, %if.end85
  br label %if.end105, !dbg !9657

if.end105:                                        ; preds = %if.end104, %if.end71
  br label %if.end107, !dbg !9658

if.else106:                                       ; preds = %while.body
  %140 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9659, !tbaa !2286
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9660, !tbaa !2286
  %142 = load i8*, i8** %output_file.addr, align 8, !dbg !9661, !tbaa !2286
  call void @write_line(%struct.line* %140, %struct._IO_FILE* %141, i8* %142), !dbg !9662
  br label %if.end107

if.end107:                                        ; preds = %if.else106, %if.end105
  %143 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9663, !tbaa !2286
  %144 = load i64*, i64** %ord, align 8, !dbg !9665, !tbaa !2286
  %arrayidx108 = getelementptr inbounds i64, i64* %144, i64 0, !dbg !9665, !ctir !360
  %145 = load i64, i64* %arrayidx108, align 8, !dbg !9665, !tbaa !2447
  %arrayidx109 = getelementptr inbounds %struct.line*, %struct.line** %143, i64 %145, !dbg !9663, !ctir !568
  %146 = load %struct.line*, %struct.line** %arrayidx109, align 8, !dbg !9663, !tbaa !2286
  %147 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9666, !tbaa !2286
  %cmp110 = icmp ult %struct.line* %146, %147, !dbg !9667
  br i1 %cmp110, label %if.then111, label %if.else115, !dbg !9668

if.then111:                                       ; preds = %if.end107
  %148 = load %struct.line*, %struct.line** %smallest, align 8, !dbg !9669, !tbaa !2286
  %add.ptr112 = getelementptr inbounds %struct.line, %struct.line* %148, i64 -1, !dbg !9670
  %149 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9671, !tbaa !2286
  %150 = load i64*, i64** %ord, align 8, !dbg !9672, !tbaa !2286
  %arrayidx113 = getelementptr inbounds i64, i64* %150, i64 0, !dbg !9672, !ctir !360
  %151 = load i64, i64* %arrayidx113, align 8, !dbg !9672, !tbaa !2447
  %arrayidx114 = getelementptr inbounds %struct.line*, %struct.line** %149, i64 %151, !dbg !9671, !ctir !568
  store %struct.line* %add.ptr112, %struct.line** %arrayidx114, align 8, !dbg !9673, !tbaa !2286
  br label %if.end202, !dbg !9671

if.else115:                                       ; preds = %if.end107
  %152 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9674, !tbaa !2286
  %153 = load i64*, i64** %ord, align 8, !dbg !9677, !tbaa !2286
  %arrayidx116 = getelementptr inbounds i64, i64* %153, i64 0, !dbg !9677, !ctir !360
  %154 = load i64, i64* %arrayidx116, align 8, !dbg !9677, !tbaa !2447
  %arrayidx117 = getelementptr inbounds %struct.buffer, %struct.buffer* %152, i64 %154, !dbg !9674, !ctir !457
  %155 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9678, !tbaa !2286
  %156 = load i64*, i64** %ord, align 8, !dbg !9679, !tbaa !2286
  %arrayidx118 = getelementptr inbounds i64, i64* %156, i64 0, !dbg !9679, !ctir !360
  %157 = load i64, i64* %arrayidx118, align 8, !dbg !9679, !tbaa !2447
  %arrayidx119 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %155, i64 %157, !dbg !9678, !ctir !534
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx119, align 8, !dbg !9678, !tbaa !2286
  %159 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9680, !tbaa !2286
  %160 = load i64*, i64** %ord, align 8, !dbg !9681, !tbaa !2286
  %arrayidx120 = getelementptr inbounds i64, i64* %160, i64 0, !dbg !9681, !ctir !360
  %161 = load i64, i64* %arrayidx120, align 8, !dbg !9681, !tbaa !2447
  %arrayidx121 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %159, i64 %161, !dbg !9680, !ctir !288
  %name122 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx121, i32 0, i32 0, !dbg !9682, !ctir !289
  %162 = load i8*, i8** %name122, align 8, !dbg !9682, !tbaa !3348, !ctir !88
  %call123 = call zeroext i1 @fillbuf(%struct.buffer* %arrayidx117, %struct._IO_FILE* %158, i8* %162), !dbg !9683
  br i1 %call123, label %if.then124, label %if.else139, !dbg !9684

if.then124:                                       ; preds = %if.else115
  call void @llvm.dbg.declare(metadata %struct.line** %linelim125, metadata !9685, metadata !DIExpression()), !dbg !9687
  %163 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9688, !tbaa !2286
  %164 = load i64*, i64** %ord, align 8, !dbg !9689, !tbaa !2286
  %arrayidx126 = getelementptr inbounds i64, i64* %164, i64 0, !dbg !9689, !ctir !360
  %165 = load i64, i64* %arrayidx126, align 8, !dbg !9689, !tbaa !2447
  %arrayidx127 = getelementptr inbounds %struct.buffer, %struct.buffer* %163, i64 %165, !dbg !9688, !ctir !457
  %call128 = call %struct.line* @buffer_linelim(%struct.buffer* %arrayidx127), !dbg !9690
  store %struct.line* %call128, %struct.line** %linelim125, align 8, !dbg !9687, !tbaa !2286
  %166 = load %struct.line*, %struct.line** %linelim125, align 8, !dbg !9691, !tbaa !2286
  %add.ptr129 = getelementptr inbounds %struct.line, %struct.line* %166, i64 -1, !dbg !9692
  %167 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9693, !tbaa !2286
  %168 = load i64*, i64** %ord, align 8, !dbg !9694, !tbaa !2286
  %arrayidx130 = getelementptr inbounds i64, i64* %168, i64 0, !dbg !9694, !ctir !360
  %169 = load i64, i64* %arrayidx130, align 8, !dbg !9694, !tbaa !2447
  %arrayidx131 = getelementptr inbounds %struct.line*, %struct.line** %167, i64 %169, !dbg !9693, !ctir !568
  store %struct.line* %add.ptr129, %struct.line** %arrayidx131, align 8, !dbg !9695, !tbaa !2286
  %170 = load %struct.line*, %struct.line** %linelim125, align 8, !dbg !9696, !tbaa !2286
  %171 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9697, !tbaa !2286
  %172 = load i64*, i64** %ord, align 8, !dbg !9698, !tbaa !2286
  %arrayidx132 = getelementptr inbounds i64, i64* %172, i64 0, !dbg !9698, !ctir !360
  %173 = load i64, i64* %arrayidx132, align 8, !dbg !9698, !tbaa !2447
  %arrayidx133 = getelementptr inbounds %struct.buffer, %struct.buffer* %171, i64 %173, !dbg !9697, !ctir !457
  %nlines134 = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx133, i32 0, i32 2, !dbg !9699, !ctir !458
  %174 = load i64, i64* %nlines134, align 8, !dbg !9699, !tbaa !4502, !ctir !55
  %idx.neg135 = sub i64 0, %174, !dbg !9700
  %add.ptr136 = getelementptr inbounds %struct.line, %struct.line* %170, i64 %idx.neg135, !dbg !9700
  %175 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9701, !tbaa !2286
  %176 = load i64*, i64** %ord, align 8, !dbg !9702, !tbaa !2286
  %arrayidx137 = getelementptr inbounds i64, i64* %176, i64 0, !dbg !9702, !ctir !360
  %177 = load i64, i64* %arrayidx137, align 8, !dbg !9702, !tbaa !2447
  %arrayidx138 = getelementptr inbounds %struct.line*, %struct.line** %175, i64 %177, !dbg !9701, !ctir !568
  store %struct.line* %add.ptr136, %struct.line** %arrayidx138, align 8, !dbg !9703, !tbaa !2286
  br label %if.end201, !dbg !9704

if.else139:                                       ; preds = %if.else115
  store i64 1, i64* %i, align 8, !dbg !9705, !tbaa !2447
  br label %for.cond140, !dbg !9708

for.cond140:                                      ; preds = %for.inc150, %if.else139
  %178 = load i64, i64* %i, align 8, !dbg !9709, !tbaa !2447
  %179 = load i64, i64* %nfiles.addr, align 8, !dbg !9711, !tbaa !2447
  %cmp141 = icmp ult i64 %178, %179, !dbg !9712
  br i1 %cmp141, label %for.body142, label %for.end152, !dbg !9713

for.body142:                                      ; preds = %for.cond140
  %180 = load i64*, i64** %ord, align 8, !dbg !9714, !tbaa !2286
  %181 = load i64, i64* %i, align 8, !dbg !9716, !tbaa !2447
  %arrayidx143 = getelementptr inbounds i64, i64* %180, i64 %181, !dbg !9714, !ctir !360
  %182 = load i64, i64* %arrayidx143, align 8, !dbg !9714, !tbaa !2447
  %183 = load i64*, i64** %ord, align 8, !dbg !9717, !tbaa !2286
  %arrayidx144 = getelementptr inbounds i64, i64* %183, i64 0, !dbg !9717, !ctir !360
  %184 = load i64, i64* %arrayidx144, align 8, !dbg !9717, !tbaa !2447
  %cmp145 = icmp ugt i64 %182, %184, !dbg !9718
  br i1 %cmp145, label %if.then146, label %if.end149, !dbg !9719

if.then146:                                       ; preds = %for.body142
  %185 = load i64*, i64** %ord, align 8, !dbg !9720, !tbaa !2286
  %186 = load i64, i64* %i, align 8, !dbg !9721, !tbaa !2447
  %arrayidx147 = getelementptr inbounds i64, i64* %185, i64 %186, !dbg !9720, !ctir !360
  %187 = load i64, i64* %arrayidx147, align 8, !dbg !9722, !tbaa !2447
  %dec148 = add i64 %187, -1, !dbg !9722
  store i64 %dec148, i64* %arrayidx147, align 8, !dbg !9722, !tbaa !2447
  br label %if.end149, !dbg !9722

if.end149:                                        ; preds = %if.then146, %for.body142
  br label %for.inc150, !dbg !9723

for.inc150:                                       ; preds = %if.end149
  %188 = load i64, i64* %i, align 8, !dbg !9724, !tbaa !2447
  %inc151 = add i64 %188, 1, !dbg !9724
  store i64 %inc151, i64* %i, align 8, !dbg !9724, !tbaa !2447
  br label %for.cond140, !dbg !9725, !llvm.loop !9726

for.end152:                                       ; preds = %for.cond140
  %189 = load i64, i64* %nfiles.addr, align 8, !dbg !9728, !tbaa !2447
  %dec153 = add i64 %189, -1, !dbg !9728
  store i64 %dec153, i64* %nfiles.addr, align 8, !dbg !9728, !tbaa !2447
  %190 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9729, !tbaa !2286
  %191 = load i64*, i64** %ord, align 8, !dbg !9730, !tbaa !2286
  %arrayidx154 = getelementptr inbounds i64, i64* %191, i64 0, !dbg !9730, !ctir !360
  %192 = load i64, i64* %arrayidx154, align 8, !dbg !9730, !tbaa !2447
  %arrayidx155 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %190, i64 %192, !dbg !9729, !ctir !534
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx155, align 8, !dbg !9729, !tbaa !2286
  %194 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9731, !tbaa !2286
  %195 = load i64*, i64** %ord, align 8, !dbg !9732, !tbaa !2286
  %arrayidx156 = getelementptr inbounds i64, i64* %195, i64 0, !dbg !9732, !ctir !360
  %196 = load i64, i64* %arrayidx156, align 8, !dbg !9732, !tbaa !2447
  %arrayidx157 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %194, i64 %196, !dbg !9731, !ctir !288
  %name158 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx157, i32 0, i32 0, !dbg !9733, !ctir !289
  %197 = load i8*, i8** %name158, align 8, !dbg !9733, !tbaa !3348, !ctir !88
  call void @xfclose(%struct._IO_FILE* %193, i8* %197), !dbg !9734
  %198 = load i64*, i64** %ord, align 8, !dbg !9735, !tbaa !2286
  %arrayidx159 = getelementptr inbounds i64, i64* %198, i64 0, !dbg !9735, !ctir !360
  %199 = load i64, i64* %arrayidx159, align 8, !dbg !9735, !tbaa !2447
  %200 = load i64, i64* %ntemps.addr, align 8, !dbg !9737, !tbaa !2447
  %cmp160 = icmp ult i64 %199, %200, !dbg !9738
  br i1 %cmp160, label %if.then161, label %if.end166, !dbg !9739

if.then161:                                       ; preds = %for.end152
  %201 = load i64, i64* %ntemps.addr, align 8, !dbg !9740, !tbaa !2447
  %dec162 = add i64 %201, -1, !dbg !9740
  store i64 %dec162, i64* %ntemps.addr, align 8, !dbg !9740, !tbaa !2447
  %202 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9742, !tbaa !2286
  %203 = load i64*, i64** %ord, align 8, !dbg !9743, !tbaa !2286
  %arrayidx163 = getelementptr inbounds i64, i64* %203, i64 0, !dbg !9743, !ctir !360
  %204 = load i64, i64* %arrayidx163, align 8, !dbg !9743, !tbaa !2447
  %arrayidx164 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %202, i64 %204, !dbg !9742, !ctir !288
  %name165 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %arrayidx164, i32 0, i32 0, !dbg !9744, !ctir !289
  %205 = load i8*, i8** %name165, align 8, !dbg !9744, !tbaa !3348, !ctir !88
  call void @zaptemp(i8* %205), !dbg !9745
  br label %if.end166, !dbg !9746

if.end166:                                        ; preds = %if.then161, %for.end152
  %206 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9747, !tbaa !2286
  %207 = load i64*, i64** %ord, align 8, !dbg !9748, !tbaa !2286
  %arrayidx167 = getelementptr inbounds i64, i64* %207, i64 0, !dbg !9748, !ctir !360
  %208 = load i64, i64* %arrayidx167, align 8, !dbg !9748, !tbaa !2447
  %arrayidx168 = getelementptr inbounds %struct.buffer, %struct.buffer* %206, i64 %208, !dbg !9747, !ctir !457
  %buf169 = getelementptr inbounds %struct.buffer, %struct.buffer* %arrayidx168, i32 0, i32 0, !dbg !9749, !ctir !458
  %209 = load i8*, i8** %buf169, align 8, !dbg !9749, !tbaa !4643, !ctir !9
  call void @free(i8* %209) #12, !dbg !9750
  %210 = load i64*, i64** %ord, align 8, !dbg !9751, !tbaa !2286
  %arrayidx170 = getelementptr inbounds i64, i64* %210, i64 0, !dbg !9751, !ctir !360
  %211 = load i64, i64* %arrayidx170, align 8, !dbg !9751, !tbaa !2447
  store i64 %211, i64* %i, align 8, !dbg !9753, !tbaa !2447
  br label %for.cond171, !dbg !9754

for.cond171:                                      ; preds = %for.inc189, %if.end166
  %212 = load i64, i64* %i, align 8, !dbg !9755, !tbaa !2447
  %213 = load i64, i64* %nfiles.addr, align 8, !dbg !9757, !tbaa !2447
  %cmp172 = icmp ult i64 %212, %213, !dbg !9758
  br i1 %cmp172, label %for.body173, label %for.end191, !dbg !9759

for.body173:                                      ; preds = %for.cond171
  %214 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9760, !tbaa !2286
  %215 = load i64, i64* %i, align 8, !dbg !9762, !tbaa !2447
  %add174 = add i64 %215, 1, !dbg !9763
  %arrayidx175 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %214, i64 %add174, !dbg !9760, !ctir !534
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %arrayidx175, align 8, !dbg !9760, !tbaa !2286
  %217 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9764, !tbaa !2286
  %218 = load i64, i64* %i, align 8, !dbg !9765, !tbaa !2447
  %arrayidx176 = getelementptr inbounds %struct._IO_FILE*, %struct._IO_FILE** %217, i64 %218, !dbg !9764, !ctir !534
  store %struct._IO_FILE* %216, %struct._IO_FILE** %arrayidx176, align 8, !dbg !9766, !tbaa !2286
  %219 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9767, !tbaa !2286
  %220 = load i64, i64* %i, align 8, !dbg !9768, !tbaa !2447
  %arrayidx177 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %219, i64 %220, !dbg !9767, !ctir !288
  %221 = load %struct.sortfile*, %struct.sortfile** %files.addr, align 8, !dbg !9769, !tbaa !2286
  %222 = load i64, i64* %i, align 8, !dbg !9770, !tbaa !2447
  %add178 = add i64 %222, 1, !dbg !9771
  %arrayidx179 = getelementptr inbounds %struct.sortfile, %struct.sortfile* %221, i64 %add178, !dbg !9769, !ctir !288
  %223 = bitcast %struct.sortfile* %arrayidx177 to i8*, !dbg !9769
  %224 = bitcast %struct.sortfile* %arrayidx179 to i8*, !dbg !9769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 16, i1 false), !dbg !9769, !tbaa.struct !9496
  %225 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9772, !tbaa !2286
  %226 = load i64, i64* %i, align 8, !dbg !9773, !tbaa !2447
  %arrayidx180 = getelementptr inbounds %struct.buffer, %struct.buffer* %225, i64 %226, !dbg !9772, !ctir !457
  %227 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9774, !tbaa !2286
  %228 = load i64, i64* %i, align 8, !dbg !9775, !tbaa !2447
  %add181 = add i64 %228, 1, !dbg !9776
  %arrayidx182 = getelementptr inbounds %struct.buffer, %struct.buffer* %227, i64 %add181, !dbg !9774, !ctir !457
  %229 = bitcast %struct.buffer* %arrayidx180 to i8*, !dbg !9774
  %230 = bitcast %struct.buffer* %arrayidx182 to i8*, !dbg !9774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 56, i1 false), !dbg !9774, !tbaa.struct !9777
  %231 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9778, !tbaa !2286
  %232 = load i64, i64* %i, align 8, !dbg !9779, !tbaa !2447
  %add183 = add i64 %232, 1, !dbg !9780
  %arrayidx184 = getelementptr inbounds %struct.line*, %struct.line** %231, i64 %add183, !dbg !9778, !ctir !568
  %233 = load %struct.line*, %struct.line** %arrayidx184, align 8, !dbg !9778, !tbaa !2286
  %234 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9781, !tbaa !2286
  %235 = load i64, i64* %i, align 8, !dbg !9782, !tbaa !2447
  %arrayidx185 = getelementptr inbounds %struct.line*, %struct.line** %234, i64 %235, !dbg !9781, !ctir !568
  store %struct.line* %233, %struct.line** %arrayidx185, align 8, !dbg !9783, !tbaa !2286
  %236 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9784, !tbaa !2286
  %237 = load i64, i64* %i, align 8, !dbg !9785, !tbaa !2447
  %add186 = add i64 %237, 1, !dbg !9786
  %arrayidx187 = getelementptr inbounds %struct.line*, %struct.line** %236, i64 %add186, !dbg !9784, !ctir !568
  %238 = load %struct.line*, %struct.line** %arrayidx187, align 8, !dbg !9784, !tbaa !2286
  %239 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9787, !tbaa !2286
  %240 = load i64, i64* %i, align 8, !dbg !9788, !tbaa !2447
  %arrayidx188 = getelementptr inbounds %struct.line*, %struct.line** %239, i64 %240, !dbg !9787, !ctir !568
  store %struct.line* %238, %struct.line** %arrayidx188, align 8, !dbg !9789, !tbaa !2286
  br label %for.inc189, !dbg !9790

for.inc189:                                       ; preds = %for.body173
  %241 = load i64, i64* %i, align 8, !dbg !9791, !tbaa !2447
  %inc190 = add i64 %241, 1, !dbg !9791
  store i64 %inc190, i64* %i, align 8, !dbg !9791, !tbaa !2447
  br label %for.cond171, !dbg !9792, !llvm.loop !9793

for.end191:                                       ; preds = %for.cond171
  store i64 0, i64* %i, align 8, !dbg !9795, !tbaa !2447
  br label %for.cond192, !dbg !9797

for.cond192:                                      ; preds = %for.inc198, %for.end191
  %242 = load i64, i64* %i, align 8, !dbg !9798, !tbaa !2447
  %243 = load i64, i64* %nfiles.addr, align 8, !dbg !9800, !tbaa !2447
  %cmp193 = icmp ult i64 %242, %243, !dbg !9801
  br i1 %cmp193, label %for.body194, label %for.end200, !dbg !9802

for.body194:                                      ; preds = %for.cond192
  %244 = load i64*, i64** %ord, align 8, !dbg !9803, !tbaa !2286
  %245 = load i64, i64* %i, align 8, !dbg !9804, !tbaa !2447
  %add195 = add i64 %245, 1, !dbg !9805
  %arrayidx196 = getelementptr inbounds i64, i64* %244, i64 %add195, !dbg !9803, !ctir !360
  %246 = load i64, i64* %arrayidx196, align 8, !dbg !9803, !tbaa !2447
  %247 = load i64*, i64** %ord, align 8, !dbg !9806, !tbaa !2286
  %248 = load i64, i64* %i, align 8, !dbg !9807, !tbaa !2447
  %arrayidx197 = getelementptr inbounds i64, i64* %247, i64 %248, !dbg !9806, !ctir !360
  store i64 %246, i64* %arrayidx197, align 8, !dbg !9808, !tbaa !2447
  br label %for.inc198, !dbg !9806

for.inc198:                                       ; preds = %for.body194
  %249 = load i64, i64* %i, align 8, !dbg !9809, !tbaa !2447
  %inc199 = add i64 %249, 1, !dbg !9809
  store i64 %inc199, i64* %i, align 8, !dbg !9809, !tbaa !2447
  br label %for.cond192, !dbg !9810, !llvm.loop !9811

for.end200:                                       ; preds = %for.cond192
  br label %while.cond, !dbg !9813, !llvm.loop !9814

if.end201:                                        ; preds = %if.then124
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then111
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !9816, metadata !DIExpression()), !dbg !9818
  store i64 1, i64* %lo, align 8, !dbg !9818, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !9819, metadata !DIExpression()), !dbg !9820
  %250 = load i64, i64* %nfiles.addr, align 8, !dbg !9821, !tbaa !2447
  store i64 %250, i64* %hi, align 8, !dbg !9820, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %probe, metadata !9822, metadata !DIExpression()), !dbg !9823
  %251 = load i64, i64* %lo, align 8, !dbg !9824, !tbaa !2447
  store i64 %251, i64* %probe, align 8, !dbg !9823, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %ord0, metadata !9825, metadata !DIExpression()), !dbg !9826
  %252 = load i64*, i64** %ord, align 8, !dbg !9827, !tbaa !2286
  %arrayidx203 = getelementptr inbounds i64, i64* %252, i64 0, !dbg !9827, !ctir !360
  %253 = load i64, i64* %arrayidx203, align 8, !dbg !9827, !tbaa !2447
  store i64 %253, i64* %ord0, align 8, !dbg !9826, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %count_of_smaller_lines, metadata !9828, metadata !DIExpression()), !dbg !9829
  br label %while.cond204, !dbg !9830

while.cond204:                                    ; preds = %if.end220, %if.end202
  %254 = load i64, i64* %lo, align 8, !dbg !9831, !tbaa !2447
  %255 = load i64, i64* %hi, align 8, !dbg !9832, !tbaa !2447
  %cmp205 = icmp ult i64 %254, %255, !dbg !9833
  br i1 %cmp205, label %while.body206, label %while.end, !dbg !9830

while.body206:                                    ; preds = %while.cond204
  call void @llvm.dbg.declare(metadata i32* %cmp207, metadata !9834, metadata !DIExpression()), !dbg !9836
  %256 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9837, !tbaa !2286
  %257 = load i64, i64* %ord0, align 8, !dbg !9838, !tbaa !2447
  %arrayidx208 = getelementptr inbounds %struct.line*, %struct.line** %256, i64 %257, !dbg !9837, !ctir !568
  %258 = load %struct.line*, %struct.line** %arrayidx208, align 8, !dbg !9837, !tbaa !2286
  %259 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9839, !tbaa !2286
  %260 = load i64*, i64** %ord, align 8, !dbg !9840, !tbaa !2286
  %261 = load i64, i64* %probe, align 8, !dbg !9841, !tbaa !2447
  %arrayidx209 = getelementptr inbounds i64, i64* %260, i64 %261, !dbg !9840, !ctir !360
  %262 = load i64, i64* %arrayidx209, align 8, !dbg !9840, !tbaa !2447
  %arrayidx210 = getelementptr inbounds %struct.line*, %struct.line** %259, i64 %262, !dbg !9839, !ctir !568
  %263 = load %struct.line*, %struct.line** %arrayidx210, align 8, !dbg !9839, !tbaa !2286
  %call211 = call i32 @compare(%struct.line* %258, %struct.line* %263), !dbg !9842
  store i32 %call211, i32* %cmp207, align 4, !dbg !9836, !tbaa !2273
  %264 = load i32, i32* %cmp207, align 4, !dbg !9843, !tbaa !2273
  %cmp212 = icmp slt i32 %264, 0, !dbg !9845
  br i1 %cmp212, label %if.then217, label %lor.lhs.false, !dbg !9846

lor.lhs.false:                                    ; preds = %while.body206
  %265 = load i32, i32* %cmp207, align 4, !dbg !9847, !tbaa !2273
  %cmp213 = icmp eq i32 %265, 0, !dbg !9848
  br i1 %cmp213, label %land.lhs.true214, label %if.else218, !dbg !9849

land.lhs.true214:                                 ; preds = %lor.lhs.false
  %266 = load i64, i64* %ord0, align 8, !dbg !9850, !tbaa !2447
  %267 = load i64*, i64** %ord, align 8, !dbg !9851, !tbaa !2286
  %268 = load i64, i64* %probe, align 8, !dbg !9852, !tbaa !2447
  %arrayidx215 = getelementptr inbounds i64, i64* %267, i64 %268, !dbg !9851, !ctir !360
  %269 = load i64, i64* %arrayidx215, align 8, !dbg !9851, !tbaa !2447
  %cmp216 = icmp ult i64 %266, %269, !dbg !9853
  br i1 %cmp216, label %if.then217, label %if.else218, !dbg !9854

if.then217:                                       ; preds = %land.lhs.true214, %while.body206
  %270 = load i64, i64* %probe, align 8, !dbg !9855, !tbaa !2447
  store i64 %270, i64* %hi, align 8, !dbg !9856, !tbaa !2447
  br label %if.end220, !dbg !9857

if.else218:                                       ; preds = %land.lhs.true214, %lor.lhs.false
  %271 = load i64, i64* %probe, align 8, !dbg !9858, !tbaa !2447
  %add219 = add i64 %271, 1, !dbg !9859
  store i64 %add219, i64* %lo, align 8, !dbg !9860, !tbaa !2447
  br label %if.end220

if.end220:                                        ; preds = %if.else218, %if.then217
  %272 = load i64, i64* %lo, align 8, !dbg !9861, !tbaa !2447
  %273 = load i64, i64* %hi, align 8, !dbg !9862, !tbaa !2447
  %add221 = add i64 %272, %273, !dbg !9863
  %div222 = udiv i64 %add221, 2, !dbg !9864
  store i64 %div222, i64* %probe, align 8, !dbg !9865, !tbaa !2447
  br label %while.cond204, !dbg !9830, !llvm.loop !9866

while.end:                                        ; preds = %while.cond204
  %274 = load i64, i64* %lo, align 8, !dbg !9868, !tbaa !2447
  %sub223 = sub i64 %274, 1, !dbg !9869
  store i64 %sub223, i64* %count_of_smaller_lines, align 8, !dbg !9870, !tbaa !2447
  store i64 0, i64* %j, align 8, !dbg !9871, !tbaa !2447
  br label %for.cond224, !dbg !9873

for.cond224:                                      ; preds = %for.inc230, %while.end
  %275 = load i64, i64* %j, align 8, !dbg !9874, !tbaa !2447
  %276 = load i64, i64* %count_of_smaller_lines, align 8, !dbg !9876, !tbaa !2447
  %cmp225 = icmp ult i64 %275, %276, !dbg !9877
  br i1 %cmp225, label %for.body226, label %for.end232, !dbg !9878

for.body226:                                      ; preds = %for.cond224
  %277 = load i64*, i64** %ord, align 8, !dbg !9879, !tbaa !2286
  %278 = load i64, i64* %j, align 8, !dbg !9880, !tbaa !2447
  %add227 = add i64 %278, 1, !dbg !9881
  %arrayidx228 = getelementptr inbounds i64, i64* %277, i64 %add227, !dbg !9879, !ctir !360
  %279 = load i64, i64* %arrayidx228, align 8, !dbg !9879, !tbaa !2447
  %280 = load i64*, i64** %ord, align 8, !dbg !9882, !tbaa !2286
  %281 = load i64, i64* %j, align 8, !dbg !9883, !tbaa !2447
  %arrayidx229 = getelementptr inbounds i64, i64* %280, i64 %281, !dbg !9882, !ctir !360
  store i64 %279, i64* %arrayidx229, align 8, !dbg !9884, !tbaa !2447
  br label %for.inc230, !dbg !9882

for.inc230:                                       ; preds = %for.body226
  %282 = load i64, i64* %j, align 8, !dbg !9885, !tbaa !2447
  %inc231 = add i64 %282, 1, !dbg !9885
  store i64 %inc231, i64* %j, align 8, !dbg !9885, !tbaa !2447
  br label %for.cond224, !dbg !9886, !llvm.loop !9887

for.end232:                                       ; preds = %for.cond224
  %283 = load i64, i64* %ord0, align 8, !dbg !9889, !tbaa !2447
  %284 = load i64*, i64** %ord, align 8, !dbg !9890, !tbaa !2286
  %285 = load i64, i64* %count_of_smaller_lines, align 8, !dbg !9891, !tbaa !2447
  %arrayidx233 = getelementptr inbounds i64, i64* %284, i64 %285, !dbg !9890, !ctir !360
  store i64 %283, i64* %arrayidx233, align 8, !dbg !9892, !tbaa !2447
  br label %while.cond, !dbg !9567, !llvm.loop !9814

while.end234:                                     ; preds = %while.cond
  %286 = load i8, i8* @unique, align 1, !dbg !9893, !tbaa !2430
  %tobool235 = trunc i8 %286 to i1, !dbg !9893
  br i1 %tobool235, label %land.lhs.true236, label %if.end240, !dbg !9895

land.lhs.true236:                                 ; preds = %while.end234
  %287 = load %struct.line*, %struct.line** %savedline, align 8, !dbg !9896, !tbaa !2286
  %tobool237 = icmp ne %struct.line* %287, null, !dbg !9896
  br i1 %tobool237, label %if.then238, label %if.end240, !dbg !9897

if.then238:                                       ; preds = %land.lhs.true236
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9898, !tbaa !2286
  %289 = load i8*, i8** %output_file.addr, align 8, !dbg !9900, !tbaa !2286
  call void @write_line(%struct.line* %saved, %struct._IO_FILE* %288, i8* %289), !dbg !9901
  %text239 = getelementptr inbounds %struct.line, %struct.line* %saved, i32 0, i32 0, !dbg !9902, !ctir !449
  %290 = load i8*, i8** %text239, align 8, !dbg !9902, !tbaa !4488, !ctir !9
  call void @free(i8* %290) #12, !dbg !9903
  br label %if.end240, !dbg !9904

if.end240:                                        ; preds = %if.then238, %land.lhs.true236, %while.end234
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %ofp.addr, align 8, !dbg !9905, !tbaa !2286
  %292 = load i8*, i8** %output_file.addr, align 8, !dbg !9906, !tbaa !2286
  call void @xfclose(%struct._IO_FILE* %291, i8* %292), !dbg !9907
  %293 = load %struct._IO_FILE**, %struct._IO_FILE*** %fps.addr, align 8, !dbg !9908, !tbaa !2286
  %294 = bitcast %struct._IO_FILE** %293 to i8*, !dbg !9908
  call void @free(i8* %294) #12, !dbg !9909
  %295 = load %struct.buffer*, %struct.buffer** %buffer, align 8, !dbg !9910, !tbaa !2286
  %296 = bitcast %struct.buffer* %295 to i8*, !dbg !9910
  call void @free(i8* %296) #12, !dbg !9911
  %297 = load i64*, i64** %ord, align 8, !dbg !9912, !tbaa !2286
  %298 = bitcast i64* %297 to i8*, !dbg !9912
  call void @free(i8* %298) #12, !dbg !9913
  %299 = load %struct.line**, %struct.line*** %base, align 8, !dbg !9914, !tbaa !2286
  %300 = bitcast %struct.line** %299 to i8*, !dbg !9914
  call void @free(i8* %300) #12, !dbg !9915
  %301 = load %struct.line**, %struct.line*** %cur, align 8, !dbg !9916, !tbaa !2286
  %302 = bitcast %struct.line** %301 to i8*, !dbg !9916
  call void @free(i8* %302) #12, !dbg !9917
  ret void, !dbg !9918
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @zaptemp(i8* %name) #4 !dbg !9919 !ctir !306 {
entry:
  %name.addr = alloca i8*, align 8
  %pnode = alloca %struct.tempnode**, align 8, !ctir !569
  %node = alloca %struct.tempnode*, align 8, !ctir !293
  %next = alloca %struct.tempnode*, align 8, !ctir !293
  %unlink_status = alloca i32, align 4, !ctir !7
  %unlink_errno = alloca i32, align 4, !ctir !7
  %cs = alloca %struct.cs_status, align 8, !ctir !348
  store i8* %name, i8** %name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9920, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.declare(metadata %struct.tempnode*** %pnode, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !9924, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.declare(metadata %struct.tempnode** %next, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.declare(metadata i32* %unlink_status, metadata !9928, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.declare(metadata i32* %unlink_errno, metadata !9930, metadata !DIExpression()), !dbg !9931
  store i32 0, i32* %unlink_errno, align 4, !dbg !9931, !tbaa !2273
  call void @llvm.dbg.declare(metadata %struct.cs_status* %cs, metadata !9932, metadata !DIExpression()), !dbg !9933
  store %struct.tempnode** @temphead, %struct.tempnode*** %pnode, align 8, !dbg !9934, !tbaa !2286
  br label %for.cond, !dbg !9936

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.tempnode**, %struct.tempnode*** %pnode, align 8, !dbg !9937, !tbaa !2286
  %1 = load volatile %struct.tempnode*, %struct.tempnode** %0, align 8, !dbg !9939, !tbaa !2286, !ctir !297
  store %struct.tempnode* %1, %struct.tempnode** %node, align 8, !dbg !9940, !tbaa !2286
  %name1 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %1, i32 0, i32 3, !dbg !9941, !ctir !294
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name1, i64 0, i64 0, !dbg !9942
  %2 = load i8*, i8** %name.addr, align 8, !dbg !9943, !tbaa !2286
  %cmp = icmp ne i8* %arraydecay, %2, !dbg !9944
  br i1 %cmp, label %for.body, label %for.end, !dbg !9945

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !9946

for.inc:                                          ; preds = %for.body
  %3 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !9947, !tbaa !2286
  %next2 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %3, i32 0, i32 0, !dbg !9948, !ctir !294
  store %struct.tempnode** %next2, %struct.tempnode*** %pnode, align 8, !dbg !9949, !tbaa !2286
  br label %for.cond, !dbg !9950, !llvm.loop !9951

for.end:                                          ; preds = %for.cond
  %4 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !9953, !tbaa !2286
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 2, !dbg !9955, !ctir !294
  %5 = load i8, i8* %state, align 4, !dbg !9955, !tbaa !2438, !ctir !10
  %conv = sext i8 %5 to i32, !dbg !9953
  %cmp3 = icmp eq i32 %conv, 1, !dbg !9956
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9957

if.then:                                          ; preds = %for.end
  %6 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !9958, !tbaa !2286
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %6, i32 0, i32 1, !dbg !9959, !ctir !294
  %7 = load i32, i32* %pid, align 8, !dbg !9959, !tbaa !2273, !ctir !299
  call void @wait_proc(i32 %7), !dbg !9960
  br label %if.end, !dbg !9960

if.end:                                           ; preds = %if.then, %for.end
  %8 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !9961, !tbaa !2286
  %next5 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %8, i32 0, i32 0, !dbg !9962, !ctir !294
  %9 = load volatile %struct.tempnode*, %struct.tempnode** %next5, align 8, !dbg !9962, !tbaa !2286, !ctir !297
  store %struct.tempnode* %9, %struct.tempnode** %next, align 8, !dbg !9963, !tbaa !2286
  call void @cs_enter(%struct.cs_status* %cs), !dbg !9964
  %10 = load i8*, i8** %name.addr, align 8, !dbg !9965, !tbaa !2286
  %call = call i32 @unlink(i8* %10) #12, !dbg !9966
  store i32 %call, i32* %unlink_status, align 4, !dbg !9967, !tbaa !2273
  %call6 = call i32* @__errno_location() #16, !dbg !9968
  %11 = load i32, i32* %call6, align 4, !dbg !9968, !tbaa !2273, !ctir !7
  store i32 %11, i32* %unlink_errno, align 4, !dbg !9969, !tbaa !2273
  %12 = load %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !9970, !tbaa !2286
  %13 = load %struct.tempnode**, %struct.tempnode*** %pnode, align 8, !dbg !9971, !tbaa !2286
  store volatile %struct.tempnode* %12, %struct.tempnode** %13, align 8, !dbg !9972, !tbaa !2286, !ctir !297
  call void @cs_leave(%struct.cs_status* %cs), !dbg !9973
  %14 = load i32, i32* %unlink_status, align 4, !dbg !9974, !tbaa !2273
  %cmp7 = icmp ne i32 %14, 0, !dbg !9976
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !9977

if.then9:                                         ; preds = %if.end
  %15 = load i32, i32* %unlink_errno, align 4, !dbg !9978, !tbaa !2273
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.175, i64 0, i64 0)) #12, !dbg !9979
  %16 = load i8*, i8** %name.addr, align 8, !dbg !9980, !tbaa !2286
  %call11 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %16), !dbg !9980
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call10, i8* %call11), !dbg !9981
  br label %if.end12, !dbg !9981

if.end12:                                         ; preds = %if.then9, %if.end
  %17 = load %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !9982, !tbaa !2286
  %tobool = icmp ne %struct.tempnode* %17, null, !dbg !9982
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !9984

if.then13:                                        ; preds = %if.end12
  %18 = load %struct.tempnode**, %struct.tempnode*** %pnode, align 8, !dbg !9985, !tbaa !2286
  store %struct.tempnode** %18, %struct.tempnode*** @temptail, align 8, !dbg !9986, !tbaa !2286
  br label %if.end14, !dbg !9987

if.end14:                                         ; preds = %if.then13, %if.end12
  %19 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !9988, !tbaa !2286
  %20 = bitcast %struct.tempnode* %19 to i8*, !dbg !9988
  call void @free(i8* %20) #12, !dbg !9989
  ret void, !dbg !9990
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @wait_proc(i32 %pid) #4 !dbg !9991 !ctir !545 {
entry:
  %pid.addr = alloca i32, align 4
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  %0 = load i32, i32* %pid.addr, align 4, !dbg !9994, !tbaa !2273
  %call = call zeroext i1 @delete_proc(i32 %0), !dbg !9996
  br i1 %call, label %if.then, label %if.end, !dbg !9997

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %pid.addr, align 4, !dbg !9998, !tbaa !2273
  %call1 = call i32 @reap(i32 %1), !dbg !9999
  br label %if.end, !dbg !9999

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10000
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @get_outstatus() #4 !dbg !786 !ctir !417 {
entry:
  %0 = load i32, i32* @get_outstatus.outstat_errno, align 4, !dbg !10001, !tbaa !2273
  %cmp = icmp eq i32 %0, 0, !dbg !10003
  br i1 %cmp, label %if.then, label %if.end, !dbg !10004

if.then:                                          ; preds = %entry
  %call = call i32 @fstat(i32 1, %struct.stat* @get_outstatus.outstat) #12, !dbg !10005
  %cmp1 = icmp eq i32 %call, 0, !dbg !10006
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10005

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !10005

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !10007
  %1 = load i32, i32* %call2, align 4, !dbg !10007, !tbaa !2273, !ctir !7
  br label %cond.end, !dbg !10005

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %1, %cond.false ], !dbg !10005
  store i32 %cond, i32* @get_outstatus.outstat_errno, align 4, !dbg !10008, !tbaa !2273
  br label %if.end, !dbg !10009

if.end:                                           ; preds = %cond.end, %entry
  %2 = load i32, i32* @get_outstatus.outstat_errno, align 4, !dbg !10010, !tbaa !2273
  %cmp3 = icmp slt i32 %2, 0, !dbg !10011
  %3 = zext i1 %cmp3 to i64, !dbg !10010
  %cond4 = select i1 %cmp3, %struct.stat* @get_outstatus.outstat, %struct.stat* null, !dbg !10010
  ret %struct.stat* %cond4, !dbg !10012
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @open_temp(%struct.tempnode* %temp) #4 !dbg !10013 !ctir !542 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %temp.addr = alloca %struct.tempnode*, align 8
  %tempfd = alloca i32, align 4, !ctir !7
  %pipefds = alloca [2 x i32], align 4, !ctir !544
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !0
  %child = alloca i32, align 4, !ctir !299
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.tempnode* %temp, %struct.tempnode** %temp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.tempnode** %temp.addr, metadata !10014, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.declare(metadata i32* %tempfd, metadata !10016, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.declare(metadata [2 x i32]* %pipefds, metadata !10018, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !10020, metadata !DIExpression()), !dbg !10021
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !dbg !10021, !tbaa !2286
  %0 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10022, !tbaa !2286
  %state = getelementptr inbounds %struct.tempnode, %struct.tempnode* %0, i32 0, i32 2, !dbg !10024, !ctir !294
  %1 = load i8, i8* %state, align 4, !dbg !10024, !tbaa !2438, !ctir !10
  %conv = sext i8 %1 to i32, !dbg !10022
  %cmp = icmp eq i32 %conv, 1, !dbg !10025
  br i1 %cmp, label %if.then, label %if.end, !dbg !10026

if.then:                                          ; preds = %entry
  %2 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10027, !tbaa !2286
  %pid = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 1, !dbg !10028, !ctir !294
  %3 = load i32, i32* %pid, align 8, !dbg !10028, !tbaa !2273, !ctir !299
  call void @wait_proc(i32 %3), !dbg !10029
  br label %if.end, !dbg !10029

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10030, !tbaa !2286
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %4, i32 0, i32 3, !dbg !10031, !ctir !294
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !10030
  %call = call i32 (i8*, i32, ...) @open(i8* %arraydecay, i32 0), !dbg !10032
  store i32 %call, i32* %tempfd, align 4, !dbg !10033, !tbaa !2273
  %5 = load i32, i32* %tempfd, align 4, !dbg !10034, !tbaa !2273
  %cmp2 = icmp slt i32 %5, 0, !dbg !10036
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10037

if.then4:                                         ; preds = %if.end
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !10038
  br label %return, !dbg !10038

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %child, metadata !10039, metadata !DIExpression()), !dbg !10040
  %arraydecay6 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10041
  %call7 = call i32 @pipe_fork(i32* %arraydecay6, i64 9), !dbg !10042
  store i32 %call7, i32* %child, align 4, !dbg !10040, !tbaa !2273
  %6 = load i32, i32* %child, align 4, !dbg !10043, !tbaa !2273
  switch i32 %6, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb18
  ], !dbg !10044

sw.bb:                                            ; preds = %if.end5
  %call8 = call i32* @__errno_location() #16, !dbg !10045
  %7 = load i32, i32* %call8, align 4, !dbg !10045, !tbaa !2273, !ctir !7
  %cmp9 = icmp ne i32 %7, 24, !dbg !10048
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !10049

if.then11:                                        ; preds = %sw.bb
  %call12 = call i32* @__errno_location() #16, !dbg !10050
  %8 = load i32, i32* %call12, align 4, !dbg !10050, !tbaa !2273, !ctir !7
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.168, i64 0, i64 0)) #12, !dbg !10050
  %9 = load i8*, i8** @compress_program, align 8, !dbg !10050, !tbaa !2286
  %call14 = call i8* @quotearg_style(i32 4, i8* %9), !dbg !10050
  call void (i32, i32, i8*, ...) @error(i32 2, i32 %8, i8* %call13, i8* %call14), !dbg !10050
  unreachable, !dbg !10050

if.end15:                                         ; preds = %sw.bb
  %10 = load i32, i32* %tempfd, align 4, !dbg !10051, !tbaa !2273
  %call16 = call i32 @close(i32 %10), !dbg !10052
  %call17 = call i32* @__errno_location() #16, !dbg !10053
  store i32 24, i32* %call17, align 4, !dbg !10054, !tbaa !2273, !ctir !7
  br label %sw.epilog, !dbg !10055

sw.bb18:                                          ; preds = %if.end5
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10056, !ctir !544
  %11 = load i32, i32* %arrayidx, align 4, !dbg !10056, !tbaa !2273
  %call19 = call i32 @close(i32 %11), !dbg !10057
  %12 = load i32, i32* %tempfd, align 4, !dbg !10058, !tbaa !2273
  call void @move_fd(i32 %12, i32 0), !dbg !10059
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !10060, !ctir !544
  %13 = load i32, i32* %arrayidx20, align 4, !dbg !10060, !tbaa !2273
  call void @move_fd(i32 %13, i32 1), !dbg !10061
  %14 = load i8*, i8** @compress_program, align 8, !dbg !10062, !tbaa !2286
  %15 = load i8*, i8** @compress_program, align 8, !dbg !10063, !tbaa !2286
  %call21 = call i32 (i8*, i8*, ...) @execlp(i8* %14, i8* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i64 0, i64 0), i8* null) #12, !dbg !10064
  %call22 = call i32* @__errno_location() #16, !dbg !10065
  %16 = load i32, i32* %call22, align 4, !dbg !10065, !tbaa !2273, !ctir !7
  call void @async_safe_die(i32 %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.170, i64 0, i64 0)) #15, !dbg !10066
  unreachable, !dbg !10066

sw.default:                                       ; preds = %if.end5
  %17 = load i32, i32* %child, align 4, !dbg !10067, !tbaa !2273
  %18 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10068, !tbaa !2286
  %pid23 = getelementptr inbounds %struct.tempnode, %struct.tempnode* %18, i32 0, i32 1, !dbg !10069, !ctir !294
  store i32 %17, i32* %pid23, align 8, !dbg !10070, !tbaa !2273, !ctir !299
  %19 = load %struct.tempnode*, %struct.tempnode** %temp.addr, align 8, !dbg !10071, !tbaa !2286
  call void @register_proc(%struct.tempnode* %19), !dbg !10072
  %20 = load i32, i32* %tempfd, align 4, !dbg !10073, !tbaa !2273
  %call24 = call i32 @close(i32 %20), !dbg !10074
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 1, !dbg !10075, !ctir !544
  %21 = load i32, i32* %arrayidx25, align 4, !dbg !10075, !tbaa !2273
  %call26 = call i32 @close(i32 %21), !dbg !10076
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10077, !ctir !544
  %22 = load i32, i32* %arrayidx27, align 4, !dbg !10077, !tbaa !2273
  %call28 = call %struct._IO_FILE* @fdopen(i32 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #12, !dbg !10078
  store %struct._IO_FILE* %call28, %struct._IO_FILE** %fp, align 8, !dbg !10079, !tbaa !2286
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !10080, !tbaa !2286
  %tobool = icmp ne %struct._IO_FILE* %23, null, !dbg !10080
  br i1 %tobool, label %if.end34, label %if.then29, !dbg !10082

if.then29:                                        ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10083, metadata !DIExpression()), !dbg !10085
  %call30 = call i32* @__errno_location() #16, !dbg !10086
  %24 = load i32, i32* %call30, align 4, !dbg !10086, !tbaa !2273, !ctir !7
  store i32 %24, i32* %saved_errno, align 4, !dbg !10085, !tbaa !2273
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %pipefds, i64 0, i64 0, !dbg !10087, !ctir !544
  %25 = load i32, i32* %arrayidx31, align 4, !dbg !10087, !tbaa !2273
  %call32 = call i32 @close(i32 %25), !dbg !10088
  %26 = load i32, i32* %saved_errno, align 4, !dbg !10089, !tbaa !2273
  %call33 = call i32* @__errno_location() #16, !dbg !10090
  store i32 %26, i32* %call33, align 4, !dbg !10091, !tbaa !2273, !ctir !7
  br label %if.end34, !dbg !10092

if.end34:                                         ; preds = %if.then29, %sw.default
  br label %sw.epilog, !dbg !10093

sw.epilog:                                        ; preds = %if.end34, %if.end15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !10094, !tbaa !2286
  store %struct._IO_FILE* %27, %struct._IO_FILE** %retval, align 8, !dbg !10095
  br label %return, !dbg !10095

return:                                           ; preds = %sw.epilog, %if.then4
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !10096
  ret %struct._IO_FILE* %28, !dbg !10096
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @key_to_opts(%struct.keyfield* %key, i8* %opts) #4 !dbg !10097 !ctir !426 {
entry:
  %key.addr = alloca %struct.keyfield*, align 8
  %opts.addr = alloca i8*, align 8
  store %struct.keyfield* %key, %struct.keyfield** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.keyfield** %key.addr, metadata !10098, metadata !DIExpression()), !dbg !10099
  store i8* %opts, i8** %opts.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %opts.addr, metadata !10100, metadata !DIExpression()), !dbg !10101
  %0 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10102, !tbaa !2286
  %skipsblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %0, i32 0, i32 6, !dbg !10104, !ctir !424
  %1 = load i8, i8* %skipsblanks, align 8, !dbg !10104, !tbaa !3153
  %tobool = trunc i8 %1 to i1, !dbg !10104, !ctir !103
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10105

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10106, !tbaa !2286
  %skipeblanks = getelementptr inbounds %struct.keyfield, %struct.keyfield* %2, i32 0, i32 7, !dbg !10107, !ctir !424
  %3 = load i8, i8* %skipeblanks, align 1, !dbg !10107, !tbaa !3158
  %tobool1 = trunc i8 %3 to i1, !dbg !10107, !ctir !103
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10108

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8*, i8** %opts.addr, align 8, !dbg !10109, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !10109
  store i8* %incdec.ptr, i8** %opts.addr, align 8, !dbg !10109, !tbaa !2286
  store i8 98, i8* %4, align 1, !dbg !10110, !tbaa !2438, !ctir !10
  br label %if.end, !dbg !10111

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %5 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10112, !tbaa !2286
  %ignore = getelementptr inbounds %struct.keyfield, %struct.keyfield* %5, i32 0, i32 4, !dbg !10114, !ctir !424
  %6 = load i8*, i8** %ignore, align 8, !dbg !10114, !tbaa !3143, !ctir !101
  %cmp = icmp eq i8* %6, getelementptr inbounds ([256 x i8], [256 x i8]* @nondictionary, i64 0, i64 0), !dbg !10115
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !10116

if.then2:                                         ; preds = %if.end
  %7 = load i8*, i8** %opts.addr, align 8, !dbg !10117, !tbaa !2286
  %incdec.ptr3 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10117
  store i8* %incdec.ptr3, i8** %opts.addr, align 8, !dbg !10117, !tbaa !2286
  store i8 100, i8* %7, align 1, !dbg !10118, !tbaa !2438, !ctir !10
  br label %if.end4, !dbg !10119

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10120, !tbaa !2286
  %translate = getelementptr inbounds %struct.keyfield, %struct.keyfield* %8, i32 0, i32 5, !dbg !10122, !ctir !424
  %9 = load i8*, i8** %translate, align 8, !dbg !10122, !tbaa !3148, !ctir !88
  %tobool5 = icmp ne i8* %9, null, !dbg !10120
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !10123

if.then6:                                         ; preds = %if.end4
  %10 = load i8*, i8** %opts.addr, align 8, !dbg !10124, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !10124
  store i8* %incdec.ptr7, i8** %opts.addr, align 8, !dbg !10124, !tbaa !2286
  store i8 102, i8* %10, align 1, !dbg !10125, !tbaa !2438, !ctir !10
  br label %if.end8, !dbg !10126

if.end8:                                          ; preds = %if.then6, %if.end4
  %11 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10127, !tbaa !2286
  %general_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %11, i32 0, i32 10, !dbg !10129, !ctir !424
  %12 = load i8, i8* %general_numeric, align 4, !dbg !10129, !tbaa !3173
  %tobool9 = trunc i8 %12 to i1, !dbg !10129, !ctir !103
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !10130

if.then10:                                        ; preds = %if.end8
  %13 = load i8*, i8** %opts.addr, align 8, !dbg !10131, !tbaa !2286
  %incdec.ptr11 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10131
  store i8* %incdec.ptr11, i8** %opts.addr, align 8, !dbg !10131, !tbaa !2286
  store i8 103, i8* %13, align 1, !dbg !10132, !tbaa !2438, !ctir !10
  br label %if.end12, !dbg !10133

if.end12:                                         ; preds = %if.then10, %if.end8
  %14 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10134, !tbaa !2286
  %human_numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %14, i32 0, i32 11, !dbg !10136, !ctir !424
  %15 = load i8, i8* %human_numeric, align 1, !dbg !10136, !tbaa !3178
  %tobool13 = trunc i8 %15 to i1, !dbg !10136, !ctir !103
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !10137

if.then14:                                        ; preds = %if.end12
  %16 = load i8*, i8** %opts.addr, align 8, !dbg !10138, !tbaa !2286
  %incdec.ptr15 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !10138
  store i8* %incdec.ptr15, i8** %opts.addr, align 8, !dbg !10138, !tbaa !2286
  store i8 104, i8* %16, align 1, !dbg !10139, !tbaa !2438, !ctir !10
  br label %if.end16, !dbg !10140

if.end16:                                         ; preds = %if.then14, %if.end12
  %17 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10141, !tbaa !2286
  %ignore17 = getelementptr inbounds %struct.keyfield, %struct.keyfield* %17, i32 0, i32 4, !dbg !10143, !ctir !424
  %18 = load i8*, i8** %ignore17, align 8, !dbg !10143, !tbaa !3143, !ctir !101
  %cmp18 = icmp eq i8* %18, getelementptr inbounds ([256 x i8], [256 x i8]* @nonprinting, i64 0, i64 0), !dbg !10144
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10145

if.then19:                                        ; preds = %if.end16
  %19 = load i8*, i8** %opts.addr, align 8, !dbg !10146, !tbaa !2286
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !10146
  store i8* %incdec.ptr20, i8** %opts.addr, align 8, !dbg !10146, !tbaa !2286
  store i8 105, i8* %19, align 1, !dbg !10147, !tbaa !2438, !ctir !10
  br label %if.end21, !dbg !10148

if.end21:                                         ; preds = %if.then19, %if.end16
  %20 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10149, !tbaa !2286
  %month = getelementptr inbounds %struct.keyfield, %struct.keyfield* %20, i32 0, i32 12, !dbg !10151, !ctir !424
  %21 = load i8, i8* %month, align 2, !dbg !10151, !tbaa !3163
  %tobool22 = trunc i8 %21 to i1, !dbg !10151, !ctir !103
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !10152

if.then23:                                        ; preds = %if.end21
  %22 = load i8*, i8** %opts.addr, align 8, !dbg !10153, !tbaa !2286
  %incdec.ptr24 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !10153
  store i8* %incdec.ptr24, i8** %opts.addr, align 8, !dbg !10153, !tbaa !2286
  store i8 77, i8* %22, align 1, !dbg !10154, !tbaa !2438, !ctir !10
  br label %if.end25, !dbg !10155

if.end25:                                         ; preds = %if.then23, %if.end21
  %23 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10156, !tbaa !2286
  %numeric = getelementptr inbounds %struct.keyfield, %struct.keyfield* %23, i32 0, i32 8, !dbg !10158, !ctir !424
  %24 = load i8, i8* %numeric, align 2, !dbg !10158, !tbaa !3168
  %tobool26 = trunc i8 %24 to i1, !dbg !10158, !ctir !103
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !10159

if.then27:                                        ; preds = %if.end25
  %25 = load i8*, i8** %opts.addr, align 8, !dbg !10160, !tbaa !2286
  %incdec.ptr28 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !10160
  store i8* %incdec.ptr28, i8** %opts.addr, align 8, !dbg !10160, !tbaa !2286
  store i8 110, i8* %25, align 1, !dbg !10161, !tbaa !2438, !ctir !10
  br label %if.end29, !dbg !10162

if.end29:                                         ; preds = %if.then27, %if.end25
  %26 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10163, !tbaa !2286
  %random = getelementptr inbounds %struct.keyfield, %struct.keyfield* %26, i32 0, i32 9, !dbg !10165, !ctir !424
  %27 = load i8, i8* %random, align 1, !dbg !10165, !tbaa !3188
  %tobool30 = trunc i8 %27 to i1, !dbg !10165, !ctir !103
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10166

if.then31:                                        ; preds = %if.end29
  %28 = load i8*, i8** %opts.addr, align 8, !dbg !10167, !tbaa !2286
  %incdec.ptr32 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !10167
  store i8* %incdec.ptr32, i8** %opts.addr, align 8, !dbg !10167, !tbaa !2286
  store i8 82, i8* %28, align 1, !dbg !10168, !tbaa !2438, !ctir !10
  br label %if.end33, !dbg !10169

if.end33:                                         ; preds = %if.then31, %if.end29
  %29 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10170, !tbaa !2286
  %reverse = getelementptr inbounds %struct.keyfield, %struct.keyfield* %29, i32 0, i32 13, !dbg !10172, !ctir !424
  %30 = load i8, i8* %reverse, align 1, !dbg !10172, !tbaa !3139
  %tobool34 = trunc i8 %30 to i1, !dbg !10172, !ctir !103
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !10173

if.then35:                                        ; preds = %if.end33
  %31 = load i8*, i8** %opts.addr, align 8, !dbg !10174, !tbaa !2286
  %incdec.ptr36 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !10174
  store i8* %incdec.ptr36, i8** %opts.addr, align 8, !dbg !10174, !tbaa !2286
  store i8 114, i8* %31, align 1, !dbg !10175, !tbaa !2438, !ctir !10
  br label %if.end37, !dbg !10176

if.end37:                                         ; preds = %if.then35, %if.end33
  %32 = load %struct.keyfield*, %struct.keyfield** %key.addr, align 8, !dbg !10177, !tbaa !2286
  %version = getelementptr inbounds %struct.keyfield, %struct.keyfield* %32, i32 0, i32 14, !dbg !10179, !ctir !424
  %33 = load i8, i8* %version, align 8, !dbg !10179, !tbaa !3183
  %tobool38 = trunc i8 %33 to i1, !dbg !10179, !ctir !103
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !10180

if.then39:                                        ; preds = %if.end37
  %34 = load i8*, i8** %opts.addr, align 8, !dbg !10181, !tbaa !2286
  %incdec.ptr40 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !10181
  store i8* %incdec.ptr40, i8** %opts.addr, align 8, !dbg !10181, !tbaa !2286
  store i8 86, i8* %34, align 1, !dbg !10182, !tbaa !2438, !ctir !10
  br label %if.end41, !dbg !10183

if.end41:                                         ; preds = %if.then39, %if.end37
  %35 = load i8*, i8** %opts.addr, align 8, !dbg !10184, !tbaa !2286
  store i8 0, i8* %35, align 1, !dbg !10185, !tbaa !2438, !ctir !10
  ret void, !dbg !10186
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @select_plural(i64 %n) #4 !dbg !10187 !ctir !439 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10188, metadata !DIExpression()), !dbg !10189
  %0 = load i64, i64* %n.addr, align 8, !dbg !10190, !tbaa !2447
  %cmp = icmp ule i64 %0, -1, !dbg !10191
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10190

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !10192, !tbaa !2447
  br label %cond.end, !dbg !10190

cond.false:                                       ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !10193, !tbaa !2447
  %rem = urem i64 %2, 1000000, !dbg !10194
  %add = add i64 %rem, 1000000, !dbg !10195
  br label %cond.end, !dbg !10190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %1, %cond.true ], [ %add, %cond.false ], !dbg !10190
  ret i64 %cond, !dbg !10196
}

; Function Attrs: nounwind
declare dso_local i8* @ngettext(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local void @clearerr_unlocked(%struct._IO_FILE*) #2

declare dso_local i32 @fflush_unlocked(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cleanup() #4 !dbg !10197 !ctir !168 {
entry:
  %node = alloca %struct.tempnode*, align 8, !ctir !343
  call void @llvm.dbg.declare(metadata %struct.tempnode** %node, metadata !10198, metadata !DIExpression()), !dbg !10199
  %0 = load volatile %struct.tempnode*, %struct.tempnode** @temphead, align 8, !dbg !10200, !tbaa !2286
  store %struct.tempnode* %0, %struct.tempnode** %node, align 8, !dbg !10202, !tbaa !2286
  br label %for.cond, !dbg !10203

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10204, !tbaa !2286
  %tobool = icmp ne %struct.tempnode* %1, null, !dbg !10206
  br i1 %tobool, label %for.body, label %for.end, !dbg !10206

for.body:                                         ; preds = %for.cond
  %2 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10207, !tbaa !2286
  %name = getelementptr inbounds %struct.tempnode, %struct.tempnode* %2, i32 0, i32 3, !dbg !10208, !ctir !344
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !10207
  %call = call i32 @unlink(i8* %arraydecay) #12, !dbg !10209
  br label %for.inc, !dbg !10209

for.inc:                                          ; preds = %for.body
  %3 = load %struct.tempnode*, %struct.tempnode** %node, align 8, !dbg !10210, !tbaa !2286
  %next = getelementptr inbounds %struct.tempnode, %struct.tempnode* %3, i32 0, i32 0, !dbg !10211, !ctir !344
  %4 = load volatile %struct.tempnode*, %struct.tempnode** %next, align 8, !dbg !10211, !tbaa !2286, !ctir !297
  store %struct.tempnode* %4, %struct.tempnode** %node, align 8, !dbg !10212, !tbaa !2286
  br label %for.cond, !dbg !10213, !llvm.loop !10214

for.end:                                          ; preds = %for.cond
  store volatile %struct.tempnode* null, %struct.tempnode** @temphead, align 8, !dbg !10216, !tbaa !2286
  ret void, !dbg !10217
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @field_sep(i8 zeroext %ch) #4 !dbg !10218 !ctir !335 {
entry:
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  %call = call i16** @__ctype_b_loc() #16, !dbg !10221
  %0 = load i16*, i16** %call, align 8, !dbg !10221, !tbaa !2286, !ctir !325
  %1 = load i8, i8* %ch.addr, align 1, !dbg !10221, !tbaa !2438
  %conv = zext i8 %1 to i32, !dbg !10221
  %idxprom = sext i32 %conv to i64, !dbg !10221
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 %idxprom, !dbg !10221, !ctir !325
  %2 = load i16, i16* %arrayidx, align 2, !dbg !10221, !tbaa !3423
  %conv1 = zext i16 %2 to i32, !dbg !10221
  %and = and i32 %conv1, 1, !dbg !10221
  %tobool = icmp ne i32 %and, 0, !dbg !10221
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !10222

lor.rhs:                                          ; preds = %entry
  %3 = load i8, i8* %ch.addr, align 1, !dbg !10223, !tbaa !2438
  %conv2 = zext i8 %3 to i32, !dbg !10223
  %cmp = icmp eq i32 %conv2, 10, !dbg !10224
  br label %lor.end, !dbg !10222

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  ret i1 %4, !dbg !10225
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #7

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @struct_month_cmp(i8* %m1, i8* %m2) #4 !dbg !10226 !ctir !337 {
entry:
  %m1.addr = alloca i8*, align 8
  %m2.addr = alloca i8*, align 8
  %month1 = alloca %struct.month*, align 8, !ctir !341
  %month2 = alloca %struct.month*, align 8, !ctir !341
  store i8* %m1, i8** %m1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %m1.addr, metadata !10227, metadata !DIExpression()), !dbg !10228
  store i8* %m2, i8** %m2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %m2.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata %struct.month** %month1, metadata !10231, metadata !DIExpression()), !dbg !10232
  %0 = load i8*, i8** %m1.addr, align 8, !dbg !10233, !tbaa !2286
  %1 = bitcast i8* %0 to %struct.month*, !dbg !10233
  store %struct.month* %1, %struct.month** %month1, align 8, !dbg !10232, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.month** %month2, metadata !10234, metadata !DIExpression()), !dbg !10235
  %2 = load i8*, i8** %m2.addr, align 8, !dbg !10236, !tbaa !2286
  %3 = bitcast i8* %2 to %struct.month*, !dbg !10236
  store %struct.month* %3, %struct.month** %month2, align 8, !dbg !10235, !tbaa !2286
  %4 = load %struct.month*, %struct.month** %month1, align 8, !dbg !10237, !tbaa !2286
  %name = getelementptr inbounds %struct.month, %struct.month* %4, i32 0, i32 0, !dbg !10238, !ctir !342
  %5 = load i8*, i8** %name, align 8, !dbg !10238, !tbaa !3486, !ctir !88
  %6 = load %struct.month*, %struct.month** %month2, align 8, !dbg !10239, !tbaa !2286
  %name1 = getelementptr inbounds %struct.month, %struct.month* %6, i32 0, i32 0, !dbg !10240, !ctir !342
  %7 = load i8*, i8** %name1, align 8, !dbg !10240, !tbaa !3486, !ctir !88
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !10241
  ret i32 %call, !dbg !10242
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !10243 !ctir !168 {
entry:
  call void @usage(i32 1), !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !10246 !ctir !825 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !827
  %ambiguous = alloca i8, align 1, !ctir !103
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10247, metadata !DIExpression()), !dbg !10248
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10249, metadata !DIExpression()), !dbg !10250
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10251, metadata !DIExpression()), !dbg !10252
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10255, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !10259, metadata !DIExpression()), !dbg !10260
  store i64 -1, i64* %matchind, align 8, !dbg !10260, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !10261, metadata !DIExpression()), !dbg !10262
  store i8 0, i8* %ambiguous, align 1, !dbg !10262, !tbaa !2430
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !10263, !tbaa !2286
  %call = call i64 @strlen(i8* %0) #14, !dbg !10264
  store i64 %call, i64* %arglen, align 8, !dbg !10265, !tbaa !2447
  store i64 0, i64* %i, align 8, !dbg !10266, !tbaa !2447
  br label %for.cond, !dbg !10268

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !10269, !tbaa !2286
  %2 = load i64, i64* %i, align 8, !dbg !10271, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !10269, !ctir !828
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10269, !tbaa !2286
  %tobool = icmp ne i8* %3, null, !dbg !10272
  br i1 %tobool, label %for.body, label %for.end, !dbg !10272

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !10273, !tbaa !2286
  %5 = load i64, i64* %i, align 8, !dbg !10276, !tbaa !2447
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !10273, !ctir !828
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !10273, !tbaa !2286
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !10277, !tbaa !2286
  %8 = load i64, i64* %arglen, align 8, !dbg !10278, !tbaa !2447
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !10279
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10279
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !10280

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !10281, !tbaa !2286
  %10 = load i64, i64* %i, align 8, !dbg !10284, !tbaa !2447
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !10281, !ctir !828
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !10281, !tbaa !2286
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !10285
  %12 = load i64, i64* %arglen, align 8, !dbg !10286, !tbaa !2447
  %cmp = icmp eq i64 %call5, %12, !dbg !10287
  br i1 %cmp, label %if.then6, label %if.else, !dbg !10288

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !10289, !tbaa !2447
  store i64 %13, i64* %retval, align 8, !dbg !10290
  br label %return, !dbg !10290

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !10291, !tbaa !2447
  %cmp7 = icmp eq i64 %14, -1, !dbg !10293
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !10294

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !10295, !tbaa !2447
  store i64 %15, i64* %matchind, align 8, !dbg !10296, !tbaa !2447
  br label %if.end16, !dbg !10297

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !10298, !tbaa !2286
  %cmp10 = icmp eq i8* %16, null, !dbg !10301
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !10302

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !10303, !tbaa !2286
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !10304, !tbaa !2447
  %19 = load i64, i64* %matchind, align 8, !dbg !10305, !tbaa !2447
  %mul = mul i64 %18, %19, !dbg !10306
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !10307
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !10308, !tbaa !2286
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !10309, !tbaa !2447
  %22 = load i64, i64* %i, align 8, !dbg !10310, !tbaa !2447
  %mul11 = mul i64 %21, %22, !dbg !10311
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !10312
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !10313, !tbaa !2447
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !10314
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10314
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !10315

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !10316, !tbaa !2430
  br label %if.end, !dbg !10318

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !10319

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !10320

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !10321, !tbaa !2447
  %inc = add i64 %24, 1, !dbg !10321
  store i64 %inc, i64* %i, align 8, !dbg !10321, !tbaa !2447
  br label %for.cond, !dbg !10322, !llvm.loop !10323

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !10325, !tbaa !2430
  %tobool19 = trunc i8 %25 to i1, !dbg !10325
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !10327

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !10328
  br label %return, !dbg !10328

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !10329, !tbaa !2447
  store i64 %26, i64* %retval, align 8, !dbg !10330
  br label %return, !dbg !10330

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !10331
  ret i64 %27, !dbg !10331
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !10332 !ctir !829 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !88
  store i8* %context, i8** %context.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  store i8* %value, i8** %value.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.declare(metadata i8** %format, metadata !10339, metadata !DIExpression()), !dbg !10340
  %0 = load i64, i64* %problem.addr, align 8, !dbg !10341, !tbaa !2447
  %cmp = icmp eq i64 %0, -1, !dbg !10342
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10341

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.160, i64 0, i64 0)) #12, !dbg !10343
  br label %cond.end, !dbg !10341

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.161, i64 0, i64 0)) #12, !dbg !10344
  br label %cond.end, !dbg !10341

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !10341
  store i8* %cond, i8** %format, align 8, !dbg !10340, !tbaa !2286
  %1 = load i8*, i8** %format, align 8, !dbg !10345, !tbaa !2286
  %2 = load i8*, i8** %value.addr, align 8, !dbg !10346, !tbaa !2286
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !10347
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10348, !tbaa !2286
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !10349
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !10350
  ret void, !dbg !10351
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !10352 !ctir !831 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !88
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10353, metadata !DIExpression()), !dbg !10354
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10355, metadata !DIExpression()), !dbg !10356
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10357, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10359, metadata !DIExpression()), !dbg !10360
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !10361, metadata !DIExpression()), !dbg !10362
  store i8* null, i8** %last_val, align 8, !dbg !10362, !tbaa !2286
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.162, i64 0, i64 0)) #12, !dbg !10363
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10363, !tbaa !2286
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !10363
  store i64 0, i64* %i, align 8, !dbg !10364, !tbaa !2447
  br label %for.cond, !dbg !10366

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !10367, !tbaa !2286
  %2 = load i64, i64* %i, align 8, !dbg !10369, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !10367, !ctir !828
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10367, !tbaa !2286
  %tobool = icmp ne i8* %3, null, !dbg !10370
  br i1 %tobool, label %for.body, label %for.end, !dbg !10370

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !10371, !tbaa !2447
  %cmp = icmp eq i64 %4, 0, !dbg !10373
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10374

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !10375, !tbaa !2286
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !10376, !tbaa !2286
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !10377, !tbaa !2447
  %8 = load i64, i64* %i, align 8, !dbg !10378, !tbaa !2447
  %mul = mul i64 %7, %8, !dbg !10379
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !10380
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !10381, !tbaa !2447
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !10382
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10382
  br i1 %tobool3, label %if.then, label %if.else, !dbg !10383

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10384, !tbaa !2286
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !10386, !tbaa !2286
  %12 = load i64, i64* %i, align 8, !dbg !10387, !tbaa !2447
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !10386, !ctir !828
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !10386, !tbaa !2286
  %call5 = call i8* @quote(i8* %13), !dbg !10388
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.163, i64 0, i64 0), i8* %call5), !dbg !10389
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !10390, !tbaa !2286
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !10391, !tbaa !2447
  %16 = load i64, i64* %i, align 8, !dbg !10392, !tbaa !2447
  %mul7 = mul i64 %15, %16, !dbg !10393
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !10394
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !10395, !tbaa !2286
  br label %if.end, !dbg !10396

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10397, !tbaa !2286
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !10399, !tbaa !2286
  %19 = load i64, i64* %i, align 8, !dbg !10400, !tbaa !2447
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !10399, !ctir !828
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !10399, !tbaa !2286
  %call10 = call i8* @quote(i8* %20), !dbg !10401
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.164, i64 0, i64 0), i8* %call10), !dbg !10402
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !10403

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !10404, !tbaa !2447
  %inc = add i64 %21, 1, !dbg !10404
  store i64 %inc, i64* %i, align 8, !dbg !10404, !tbaa !2447
  br label %for.cond, !dbg !10405, !llvm.loop !10406

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10408, !tbaa !2286
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !10408
  ret void, !dbg !10409
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !10410 !ctir !867 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !827
  store i8* %context, i8** %context.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10411, metadata !DIExpression()), !dbg !10412
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10413, metadata !DIExpression()), !dbg !10414
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10415, metadata !DIExpression()), !dbg !10416
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.declare(metadata i64* %res, metadata !10423, metadata !DIExpression()), !dbg !10424
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !10425, !tbaa !2286
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !10426, !tbaa !2286
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !10427, !tbaa !2286
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !10428, !tbaa !2447
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !10429
  store i64 %call, i64* %res, align 8, !dbg !10424, !tbaa !2447
  %4 = load i64, i64* %res, align 8, !dbg !10430, !tbaa !2447
  %cmp = icmp sge i64 %4, 0, !dbg !10432
  br i1 %cmp, label %if.then, label %if.end, !dbg !10433

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !10434, !tbaa !2447
  store i64 %5, i64* %retval, align 8, !dbg !10435
  br label %return, !dbg !10435

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !10436, !tbaa !2286
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !10437, !tbaa !2286
  %8 = load i64, i64* %res, align 8, !dbg !10438, !tbaa !2447
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !10439
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !10440, !tbaa !2286
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !10441, !tbaa !2286
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !10442, !tbaa !2447
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !10443
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !10444, !tbaa !2286
  call void %12(), !dbg !10445
  store i64 -1, i64* %retval, align 8, !dbg !10446
  br label %return, !dbg !10446

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !10447
  ret i64 %13, !dbg !10447
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !10448 !ctir !869 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !10449, metadata !DIExpression()), !dbg !10450
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !10451, metadata !DIExpression()), !dbg !10452
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !10453, metadata !DIExpression()), !dbg !10454
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !10455, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10457, metadata !DIExpression()), !dbg !10458
  store i64 0, i64* %i, align 8, !dbg !10459, !tbaa !2447
  br label %for.cond, !dbg !10461

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !10462, !tbaa !2286
  %1 = load i64, i64* %i, align 8, !dbg !10464, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !10462, !ctir !828
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !10462, !tbaa !2286
  %tobool = icmp ne i8* %2, null, !dbg !10465
  br i1 %tobool, label %for.body, label %for.end, !dbg !10465

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !10466, !tbaa !2286
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !10468, !tbaa !2286
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !10469, !tbaa !2447
  %6 = load i64, i64* %i, align 8, !dbg !10470, !tbaa !2447
  %mul = mul i64 %5, %6, !dbg !10471
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !10472
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !10473, !tbaa !2447
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !10474
  %tobool1 = icmp ne i32 %call, 0, !dbg !10474
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10475

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !10476, !tbaa !2286
  %9 = load i64, i64* %i, align 8, !dbg !10477, !tbaa !2447
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !10476, !ctir !828
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !10476, !tbaa !2286
  store i8* %10, i8** %retval, align 8, !dbg !10478
  br label %return, !dbg !10478

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10479

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !10480, !tbaa !2447
  %inc = add i64 %11, 1, !dbg !10480
  store i64 %inc, i64* %i, align 8, !dbg !10480, !tbaa !2447
  br label %for.cond, !dbg !10481, !llvm.loop !10482

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !10484
  br label %return, !dbg !10484

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !10485
  ret i8* %12, !dbg !10485
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10486 !ctir !306 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10487, metadata !DIExpression()), !dbg !10488
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10489, !tbaa !2286
  store i8* %0, i8** @file_name, align 8, !dbg !10490, !tbaa !2286
  ret void, !dbg !10491
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10492 !ctir !878 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10495, !tbaa !2430
  %tobool = trunc i8 %0 to i1, !dbg !10495
  %frombool1 = zext i1 %tobool to i8, !dbg !10496
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10496, !tbaa !2430
  ret void, !dbg !10497
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10498 !ctir !168 {
entry:
  %write_error = alloca i8*, align 8, !ctir !88
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10499, !tbaa !2286
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10501
  %cmp = icmp ne i32 %call, 0, !dbg !10502
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10503

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10504, !tbaa !2430
  %tobool = trunc i8 %1 to i1, !dbg !10504
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10505

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !10506
  %2 = load i32, i32* %call2, align 4, !dbg !10506, !tbaa !2273, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !10507
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10508

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10509, metadata !DIExpression()), !dbg !10511
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.182, i64 0, i64 0)) #12, !dbg !10512
  store i8* %call4, i8** %write_error, align 8, !dbg !10511, !tbaa !2286
  %3 = load i8*, i8** @file_name, align 8, !dbg !10513, !tbaa !2286
  %tobool5 = icmp ne i8* %3, null, !dbg !10513
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10515

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !10516
  %4 = load i32, i32* %call7, align 4, !dbg !10516, !tbaa !2273, !ctir !7
  %5 = load i8*, i8** @file_name, align 8, !dbg !10517, !tbaa !2286
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10518
  %6 = load i8*, i8** %write_error, align 8, !dbg !10519, !tbaa !2286
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.183, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10520
  br label %if.end, !dbg !10520

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !10521
  %7 = load i32, i32* %call9, align 4, !dbg !10521, !tbaa !2273, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !10522, !tbaa !2286
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.184, i64 0, i64 0), i8* %8), !dbg !10523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10524, !tbaa !2273
  call void @_exit(i32 %9) #15, !dbg !10525
  unreachable, !dbg !10525

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10526, !tbaa !2286
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10528
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10529
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10530

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10531, !tbaa !2273
  call void @_exit(i32 %11) #15, !dbg !10532
  unreachable, !dbg !10532

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10533
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @md5_init_ctx(%struct.md5_ctx* %ctx) #4 !dbg !10534 !ctir !924 {
entry:
  %ctx.addr = alloca %struct.md5_ctx*, align 8
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10535, metadata !DIExpression()), !dbg !10536
  %0 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10537, !tbaa !2286
  %A = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %0, i32 0, i32 0, !dbg !10538, !ctir !927
  store i32 1732584193, i32* %A, align 4, !dbg !10539, !tbaa !10540, !ctir !495
  %1 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10542, !tbaa !2286
  %B = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %1, i32 0, i32 1, !dbg !10543, !ctir !927
  store i32 -271733879, i32* %B, align 4, !dbg !10544, !tbaa !10545, !ctir !495
  %2 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10546, !tbaa !2286
  %C = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i32 0, i32 2, !dbg !10547, !ctir !927
  store i32 -1732584194, i32* %C, align 4, !dbg !10548, !tbaa !10549, !ctir !495
  %3 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10550, !tbaa !2286
  %D = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %3, i32 0, i32 3, !dbg !10551, !ctir !927
  store i32 271733878, i32* %D, align 4, !dbg !10552, !tbaa !10553, !ctir !495
  %4 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10554, !tbaa !2286
  %total = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %4, i32 0, i32 4, !dbg !10555, !ctir !927
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %total, i64 0, i64 1, !dbg !10554, !ctir !507
  store i32 0, i32* %arrayidx, align 4, !dbg !10556, !tbaa !2273
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10557, !tbaa !2286
  %total1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 4, !dbg !10558, !ctir !927
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %total1, i64 0, i64 0, !dbg !10557, !ctir !507
  store i32 0, i32* %arrayidx2, align 4, !dbg !10559, !tbaa !2273
  %6 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10560, !tbaa !2286
  %buflen = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %6, i32 0, i32 5, !dbg !10561, !ctir !927
  store i32 0, i32* %buflen, align 4, !dbg !10562, !tbaa !10563, !ctir !495
  ret void, !dbg !10564
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @md5_read_ctx(%struct.md5_ctx* %ctx, i8* %resbuf) #4 !dbg !10565 !ctir !936 {
entry:
  %ctx.addr = alloca %struct.md5_ctx*, align 8
  %resbuf.addr = alloca i8*, align 8
  %r = alloca i8*, align 8, !ctir !9
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10566, metadata !DIExpression()), !dbg !10567
  store i8* %resbuf, i8** %resbuf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !10568, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.declare(metadata i8** %r, metadata !10570, metadata !DIExpression()), !dbg !10571
  %0 = load i8*, i8** %resbuf.addr, align 8, !dbg !10572, !tbaa !2286
  store i8* %0, i8** %r, align 8, !dbg !10571, !tbaa !2286
  %1 = load i8*, i8** %r, align 8, !dbg !10573, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10574
  %2 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10575, !tbaa !2286
  %A = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i32 0, i32 0, !dbg !10575, !ctir !939
  %3 = load i32, i32* %A, align 4, !dbg !10575, !tbaa !10540, !ctir !495
  call void @set_uint32(i8* %add.ptr, i32 %3), !dbg !10576
  %4 = load i8*, i8** %r, align 8, !dbg !10577, !tbaa !2286
  %add.ptr1 = getelementptr inbounds i8, i8* %4, i64 4, !dbg !10578
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10579, !tbaa !2286
  %B = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 1, !dbg !10579, !ctir !939
  %6 = load i32, i32* %B, align 4, !dbg !10579, !tbaa !10545, !ctir !495
  call void @set_uint32(i8* %add.ptr1, i32 %6), !dbg !10580
  %7 = load i8*, i8** %r, align 8, !dbg !10581, !tbaa !2286
  %add.ptr2 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !10582
  %8 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10583, !tbaa !2286
  %C = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %8, i32 0, i32 2, !dbg !10583, !ctir !939
  %9 = load i32, i32* %C, align 4, !dbg !10583, !tbaa !10549, !ctir !495
  call void @set_uint32(i8* %add.ptr2, i32 %9), !dbg !10584
  %10 = load i8*, i8** %r, align 8, !dbg !10585, !tbaa !2286
  %add.ptr3 = getelementptr inbounds i8, i8* %10, i64 12, !dbg !10586
  %11 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10587, !tbaa !2286
  %D = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %11, i32 0, i32 3, !dbg !10587, !ctir !939
  %12 = load i32, i32* %D, align 4, !dbg !10587, !tbaa !10553, !ctir !495
  call void @set_uint32(i8* %add.ptr3, i32 %12), !dbg !10588
  %13 = load i8*, i8** %resbuf.addr, align 8, !dbg !10589, !tbaa !2286
  ret i8* %13, !dbg !10590
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_uint32(i8* %cp, i32 %v) #4 !dbg !10591 !ctir !990 {
entry:
  %cp.addr = alloca i8*, align 8
  %v.addr = alloca i32, align 4
  store i8* %cp, i8** %cp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !10592, metadata !DIExpression()), !dbg !10593
  store i32 %v, i32* %v.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !10594, metadata !DIExpression()), !dbg !10595
  %0 = load i8*, i8** %cp.addr, align 8, !dbg !10596, !tbaa !2286
  %1 = bitcast i32* %v.addr to i8*, !dbg !10597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 4 %1, i64 4, i1 false), !dbg !10597
  ret void, !dbg !10598
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %resbuf) #4 !dbg !10599 !ctir !940 {
entry:
  %ctx.addr = alloca %struct.md5_ctx*, align 8
  %resbuf.addr = alloca i8*, align 8
  %bytes = alloca i32, align 4, !ctir !495
  %size = alloca i64, align 8, !ctir !55
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  store i8* %resbuf, i8** %resbuf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %resbuf.addr, metadata !10602, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10606, !tbaa !2286
  %buflen = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %0, i32 0, i32 5, !dbg !10607, !ctir !927
  %1 = load i32, i32* %buflen, align 4, !dbg !10607, !tbaa !10563, !ctir !495
  store i32 %1, i32* %bytes, align 4, !dbg !10605, !tbaa !2273
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10608, metadata !DIExpression()), !dbg !10609
  %2 = load i32, i32* %bytes, align 4, !dbg !10610, !tbaa !2273
  %cmp = icmp ult i32 %2, 56, !dbg !10611
  %3 = zext i1 %cmp to i64, !dbg !10612
  %cond = select i1 %cmp, i32 16, i32 32, !dbg !10612
  %conv = sext i32 %cond to i64, !dbg !10612
  store i64 %conv, i64* %size, align 8, !dbg !10609, !tbaa !2447
  %4 = load i32, i32* %bytes, align 4, !dbg !10613, !tbaa !2273
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10614, !tbaa !2286
  %total = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 4, !dbg !10615, !ctir !927
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %total, i64 0, i64 0, !dbg !10614, !ctir !507
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10616, !tbaa !2273
  %add = add i32 %6, %4, !dbg !10616
  store i32 %add, i32* %arrayidx, align 4, !dbg !10616, !tbaa !2273
  %7 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10617, !tbaa !2286
  %total1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %7, i32 0, i32 4, !dbg !10619, !ctir !927
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %total1, i64 0, i64 0, !dbg !10617, !ctir !507
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !10617, !tbaa !2273
  %9 = load i32, i32* %bytes, align 4, !dbg !10620, !tbaa !2273
  %cmp3 = icmp ult i32 %8, %9, !dbg !10621
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10622

if.then:                                          ; preds = %entry
  %10 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10623, !tbaa !2286
  %total5 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %10, i32 0, i32 4, !dbg !10624, !ctir !927
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %total5, i64 0, i64 1, !dbg !10623, !ctir !507
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !10625, !tbaa !2273
  %inc = add i32 %11, 1, !dbg !10625
  store i32 %inc, i32* %arrayidx6, align 4, !dbg !10625, !tbaa !2273
  br label %if.end, !dbg !10625

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10626, !tbaa !2286
  %total7 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %12, i32 0, i32 4, !dbg !10626, !ctir !927
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %total7, i64 0, i64 0, !dbg !10626, !ctir !507
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !10626, !tbaa !2273
  %shl = shl i32 %13, 3, !dbg !10626
  %14 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10627, !tbaa !2286
  %buffer = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %14, i32 0, i32 6, !dbg !10628, !ctir !927
  %15 = load i64, i64* %size, align 8, !dbg !10629, !tbaa !2447
  %sub = sub i64 %15, 2, !dbg !10630
  %arrayidx9 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer, i64 0, i64 %sub, !dbg !10627, !ctir !510
  store i32 %shl, i32* %arrayidx9, align 4, !dbg !10631, !tbaa !2273
  %16 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10632, !tbaa !2286
  %total10 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %16, i32 0, i32 4, !dbg !10632, !ctir !927
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %total10, i64 0, i64 1, !dbg !10632, !ctir !507
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !10632, !tbaa !2273
  %shl12 = shl i32 %17, 3, !dbg !10632
  %18 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10632, !tbaa !2286
  %total13 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %18, i32 0, i32 4, !dbg !10632, !ctir !927
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %total13, i64 0, i64 0, !dbg !10632, !ctir !507
  %19 = load i32, i32* %arrayidx14, align 4, !dbg !10632, !tbaa !2273
  %shr = lshr i32 %19, 29, !dbg !10632
  %or = or i32 %shl12, %shr, !dbg !10632
  %20 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10633, !tbaa !2286
  %buffer15 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %20, i32 0, i32 6, !dbg !10634, !ctir !927
  %21 = load i64, i64* %size, align 8, !dbg !10635, !tbaa !2447
  %sub16 = sub i64 %21, 1, !dbg !10636
  %arrayidx17 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer15, i64 0, i64 %sub16, !dbg !10633, !ctir !510
  store i32 %or, i32* %arrayidx17, align 4, !dbg !10637, !tbaa !2273
  %22 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10638, !tbaa !2286
  %buffer18 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %22, i32 0, i32 6, !dbg !10639, !ctir !927
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %buffer18, i64 0, i64 0, !dbg !10640
  %23 = bitcast i32* %arraydecay to i8*, !dbg !10640
  %24 = load i32, i32* %bytes, align 4, !dbg !10641, !tbaa !2273
  %idxprom = zext i32 %24 to i64, !dbg !10640
  %arrayidx19 = getelementptr inbounds i8, i8* %23, i64 %idxprom, !dbg !10640, !ctir !9
  %25 = load i64, i64* %size, align 8, !dbg !10642, !tbaa !2447
  %sub20 = sub i64 %25, 2, !dbg !10643
  %mul = mul i64 %sub20, 4, !dbg !10644
  %26 = load i32, i32* %bytes, align 4, !dbg !10645, !tbaa !2273
  %conv21 = zext i32 %26 to i64, !dbg !10645
  %sub22 = sub i64 %mul, %conv21, !dbg !10646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx19, i8* align 16 getelementptr inbounds ([64 x i8], [64 x i8]* bitcast (<{ i8, [63 x i8] }>* @fillbuf.189 to [64 x i8]*), i64 0, i64 0), i64 %sub22, i1 false), !dbg !10647
  %27 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10648, !tbaa !2286
  %buffer23 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %27, i32 0, i32 6, !dbg !10649, !ctir !927
  %arraydecay24 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer23, i64 0, i64 0, !dbg !10648
  %28 = bitcast i32* %arraydecay24 to i8*, !dbg !10648
  %29 = load i64, i64* %size, align 8, !dbg !10650, !tbaa !2447
  %mul25 = mul i64 %29, 4, !dbg !10651
  %30 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10652, !tbaa !2286
  call void @md5_process_block(i8* %28, i64 %mul25, %struct.md5_ctx* %30) #12, !dbg !10653
  %31 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10654, !tbaa !2286
  %32 = load i8*, i8** %resbuf.addr, align 8, !dbg !10655, !tbaa !2286
  %call = call i8* @md5_read_ctx(%struct.md5_ctx* %31, i8* %32) #12, !dbg !10656
  ret i8* %call, !dbg !10657
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @md5_process_block(i8* %buffer, i64 %len, %struct.md5_ctx* %ctx) #4 !dbg !10658 !ctir !984 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.md5_ctx*, align 8
  %correct_words = alloca [16 x i32], align 16, !ctir !986
  %words = alloca i32*, align 8, !ctir !987
  %nwords = alloca i64, align 8, !ctir !55
  %endp = alloca i32*, align 8, !ctir !987
  %A = alloca i32, align 4, !ctir !495
  %B = alloca i32, align 4, !ctir !495
  %C = alloca i32, align 4, !ctir !495
  %D = alloca i32, align 4, !ctir !495
  %lolen = alloca i32, align 4, !ctir !495
  %cwp = alloca i32*, align 8, !ctir !989
  %A_save = alloca i32, align 4, !ctir !495
  %B_save = alloca i32, align 4, !ctir !495
  %C_save = alloca i32, align 4, !ctir !495
  %D_save = alloca i32, align 4, !ctir !495
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  store i64 %len, i64* %len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10661, metadata !DIExpression()), !dbg !10662
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.declare(metadata [16 x i32]* %correct_words, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata i32** %words, metadata !10667, metadata !DIExpression()), !dbg !10668
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10669, !tbaa !2286
  %1 = bitcast i8* %0 to i32*, !dbg !10669
  store i32* %1, i32** %words, align 8, !dbg !10668, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %nwords, metadata !10670, metadata !DIExpression()), !dbg !10671
  %2 = load i64, i64* %len.addr, align 8, !dbg !10672, !tbaa !2447
  %div = udiv i64 %2, 4, !dbg !10673
  store i64 %div, i64* %nwords, align 8, !dbg !10671, !tbaa !2447
  call void @llvm.dbg.declare(metadata i32** %endp, metadata !10674, metadata !DIExpression()), !dbg !10675
  %3 = load i32*, i32** %words, align 8, !dbg !10676, !tbaa !2286
  %4 = load i64, i64* %nwords, align 8, !dbg !10677, !tbaa !2447
  %add.ptr = getelementptr inbounds i32, i32* %3, i64 %4, !dbg !10678
  store i32* %add.ptr, i32** %endp, align 8, !dbg !10675, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %A, metadata !10679, metadata !DIExpression()), !dbg !10680
  %5 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10681, !tbaa !2286
  %A1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %5, i32 0, i32 0, !dbg !10682, !ctir !927
  %6 = load i32, i32* %A1, align 4, !dbg !10682, !tbaa !10540, !ctir !495
  store i32 %6, i32* %A, align 4, !dbg !10680, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %B, metadata !10683, metadata !DIExpression()), !dbg !10684
  %7 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10685, !tbaa !2286
  %B2 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %7, i32 0, i32 1, !dbg !10686, !ctir !927
  %8 = load i32, i32* %B2, align 4, !dbg !10686, !tbaa !10545, !ctir !495
  store i32 %8, i32* %B, align 4, !dbg !10684, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %C, metadata !10687, metadata !DIExpression()), !dbg !10688
  %9 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10689, !tbaa !2286
  %C3 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %9, i32 0, i32 2, !dbg !10690, !ctir !927
  %10 = load i32, i32* %C3, align 4, !dbg !10690, !tbaa !10549, !ctir !495
  store i32 %10, i32* %C, align 4, !dbg !10688, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %D, metadata !10691, metadata !DIExpression()), !dbg !10692
  %11 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10693, !tbaa !2286
  %D4 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %11, i32 0, i32 3, !dbg !10694, !ctir !927
  %12 = load i32, i32* %D4, align 4, !dbg !10694, !tbaa !10553, !ctir !495
  store i32 %12, i32* %D, align 4, !dbg !10692, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %lolen, metadata !10695, metadata !DIExpression()), !dbg !10696
  %13 = load i64, i64* %len.addr, align 8, !dbg !10697, !tbaa !2447
  %conv = trunc i64 %13 to i32, !dbg !10697
  store i32 %conv, i32* %lolen, align 4, !dbg !10696, !tbaa !2273
  %14 = load i32, i32* %lolen, align 4, !dbg !10698, !tbaa !2273
  %15 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10699, !tbaa !2286
  %total = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %15, i32 0, i32 4, !dbg !10700, !ctir !927
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %total, i64 0, i64 0, !dbg !10699, !ctir !507
  %16 = load i32, i32* %arrayidx, align 4, !dbg !10701, !tbaa !2273
  %add = add i32 %16, %14, !dbg !10701
  store i32 %add, i32* %arrayidx, align 4, !dbg !10701, !tbaa !2273
  %17 = load i64, i64* %len.addr, align 8, !dbg !10702, !tbaa !2447
  %shr = lshr i64 %17, 31, !dbg !10703
  %shr5 = lshr i64 %shr, 1, !dbg !10704
  %18 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10705, !tbaa !2286
  %total6 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %18, i32 0, i32 4, !dbg !10706, !ctir !927
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %total6, i64 0, i64 0, !dbg !10705, !ctir !507
  %19 = load i32, i32* %arrayidx7, align 4, !dbg !10705, !tbaa !2273
  %20 = load i32, i32* %lolen, align 4, !dbg !10707, !tbaa !2273
  %cmp = icmp ult i32 %19, %20, !dbg !10708
  %conv8 = zext i1 %cmp to i32, !dbg !10708
  %conv9 = sext i32 %conv8 to i64, !dbg !10709
  %add10 = add i64 %shr5, %conv9, !dbg !10710
  %21 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10711, !tbaa !2286
  %total11 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %21, i32 0, i32 4, !dbg !10712, !ctir !927
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %total11, i64 0, i64 1, !dbg !10711, !ctir !507
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !10713, !tbaa !2273
  %conv13 = zext i32 %22 to i64, !dbg !10713
  %add14 = add i64 %conv13, %add10, !dbg !10713
  %conv15 = trunc i64 %add14 to i32, !dbg !10713
  store i32 %conv15, i32* %arrayidx12, align 4, !dbg !10713, !tbaa !2273
  br label %while.cond, !dbg !10714

while.cond:                                       ; preds = %do.end841, %entry
  %23 = load i32*, i32** %words, align 8, !dbg !10715, !tbaa !2286
  %24 = load i32*, i32** %endp, align 8, !dbg !10716, !tbaa !2286
  %cmp16 = icmp ult i32* %23, %24, !dbg !10717
  br i1 %cmp16, label %while.body, label %while.end, !dbg !10714

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %cwp, metadata !10718, metadata !DIExpression()), !dbg !10720
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10721
  store i32* %arraydecay, i32** %cwp, align 8, !dbg !10720, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %A_save, metadata !10722, metadata !DIExpression()), !dbg !10723
  %25 = load i32, i32* %A, align 4, !dbg !10724, !tbaa !2273
  store i32 %25, i32* %A_save, align 4, !dbg !10723, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %B_save, metadata !10725, metadata !DIExpression()), !dbg !10726
  %26 = load i32, i32* %B, align 4, !dbg !10727, !tbaa !2273
  store i32 %26, i32* %B_save, align 4, !dbg !10726, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %C_save, metadata !10728, metadata !DIExpression()), !dbg !10729
  %27 = load i32, i32* %C, align 4, !dbg !10730, !tbaa !2273
  store i32 %27, i32* %C_save, align 4, !dbg !10729, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %D_save, metadata !10731, metadata !DIExpression()), !dbg !10732
  %28 = load i32, i32* %D, align 4, !dbg !10733, !tbaa !2273
  store i32 %28, i32* %D_save, align 4, !dbg !10732, !tbaa !2273
  br label %do.body, !dbg !10734

do.body:                                          ; preds = %while.body
  %29 = load i32, i32* %D, align 4, !dbg !10735, !tbaa !2273
  %30 = load i32, i32* %B, align 4, !dbg !10735, !tbaa !2273
  %31 = load i32, i32* %C, align 4, !dbg !10735, !tbaa !2273
  %32 = load i32, i32* %D, align 4, !dbg !10735, !tbaa !2273
  %xor = xor i32 %31, %32, !dbg !10735
  %and = and i32 %30, %xor, !dbg !10735
  %xor18 = xor i32 %29, %and, !dbg !10735
  %33 = load i32*, i32** %words, align 8, !dbg !10735, !tbaa !2286
  %34 = load i32, i32* %33, align 4, !dbg !10735, !tbaa !2273, !ctir !988
  %35 = load i32*, i32** %cwp, align 8, !dbg !10735, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i32, i32* %35, i32 1, !dbg !10735
  store i32* %incdec.ptr, i32** %cwp, align 8, !dbg !10735, !tbaa !2286
  store i32 %34, i32* %35, align 4, !dbg !10735, !tbaa !2273, !ctir !495
  %add19 = add i32 %xor18, %34, !dbg !10735
  %add20 = add i32 %add19, -680876936, !dbg !10735
  %36 = load i32, i32* %A, align 4, !dbg !10735, !tbaa !2273
  %add21 = add i32 %36, %add20, !dbg !10735
  store i32 %add21, i32* %A, align 4, !dbg !10735, !tbaa !2273
  %37 = load i32*, i32** %words, align 8, !dbg !10735, !tbaa !2286
  %incdec.ptr22 = getelementptr inbounds i32, i32* %37, i32 1, !dbg !10735
  store i32* %incdec.ptr22, i32** %words, align 8, !dbg !10735, !tbaa !2286
  %38 = load i32, i32* %A, align 4, !dbg !10735, !tbaa !2273
  %shl = shl i32 %38, 7, !dbg !10735
  %39 = load i32, i32* %A, align 4, !dbg !10735, !tbaa !2273
  %shr23 = lshr i32 %39, 25, !dbg !10735
  %or = or i32 %shl, %shr23, !dbg !10735
  store i32 %or, i32* %A, align 4, !dbg !10735, !tbaa !2273
  %40 = load i32, i32* %B, align 4, !dbg !10735, !tbaa !2273
  %41 = load i32, i32* %A, align 4, !dbg !10735, !tbaa !2273
  %add24 = add i32 %41, %40, !dbg !10735
  store i32 %add24, i32* %A, align 4, !dbg !10735, !tbaa !2273
  br label %do.end, !dbg !10735

do.end:                                           ; preds = %do.body
  br label %do.body25, !dbg !10737

do.body25:                                        ; preds = %do.end
  %42 = load i32, i32* %C, align 4, !dbg !10738, !tbaa !2273
  %43 = load i32, i32* %A, align 4, !dbg !10738, !tbaa !2273
  %44 = load i32, i32* %B, align 4, !dbg !10738, !tbaa !2273
  %45 = load i32, i32* %C, align 4, !dbg !10738, !tbaa !2273
  %xor26 = xor i32 %44, %45, !dbg !10738
  %and27 = and i32 %43, %xor26, !dbg !10738
  %xor28 = xor i32 %42, %and27, !dbg !10738
  %46 = load i32*, i32** %words, align 8, !dbg !10738, !tbaa !2286
  %47 = load i32, i32* %46, align 4, !dbg !10738, !tbaa !2273, !ctir !988
  %48 = load i32*, i32** %cwp, align 8, !dbg !10738, !tbaa !2286
  %incdec.ptr29 = getelementptr inbounds i32, i32* %48, i32 1, !dbg !10738
  store i32* %incdec.ptr29, i32** %cwp, align 8, !dbg !10738, !tbaa !2286
  store i32 %47, i32* %48, align 4, !dbg !10738, !tbaa !2273, !ctir !495
  %add30 = add i32 %xor28, %47, !dbg !10738
  %add31 = add i32 %add30, -389564586, !dbg !10738
  %49 = load i32, i32* %D, align 4, !dbg !10738, !tbaa !2273
  %add32 = add i32 %49, %add31, !dbg !10738
  store i32 %add32, i32* %D, align 4, !dbg !10738, !tbaa !2273
  %50 = load i32*, i32** %words, align 8, !dbg !10738, !tbaa !2286
  %incdec.ptr33 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !10738
  store i32* %incdec.ptr33, i32** %words, align 8, !dbg !10738, !tbaa !2286
  %51 = load i32, i32* %D, align 4, !dbg !10738, !tbaa !2273
  %shl34 = shl i32 %51, 12, !dbg !10738
  %52 = load i32, i32* %D, align 4, !dbg !10738, !tbaa !2273
  %shr35 = lshr i32 %52, 20, !dbg !10738
  %or36 = or i32 %shl34, %shr35, !dbg !10738
  store i32 %or36, i32* %D, align 4, !dbg !10738, !tbaa !2273
  %53 = load i32, i32* %A, align 4, !dbg !10738, !tbaa !2273
  %54 = load i32, i32* %D, align 4, !dbg !10738, !tbaa !2273
  %add37 = add i32 %54, %53, !dbg !10738
  store i32 %add37, i32* %D, align 4, !dbg !10738, !tbaa !2273
  br label %do.end38, !dbg !10738

do.end38:                                         ; preds = %do.body25
  br label %do.body39, !dbg !10740

do.body39:                                        ; preds = %do.end38
  %55 = load i32, i32* %B, align 4, !dbg !10741, !tbaa !2273
  %56 = load i32, i32* %D, align 4, !dbg !10741, !tbaa !2273
  %57 = load i32, i32* %A, align 4, !dbg !10741, !tbaa !2273
  %58 = load i32, i32* %B, align 4, !dbg !10741, !tbaa !2273
  %xor40 = xor i32 %57, %58, !dbg !10741
  %and41 = and i32 %56, %xor40, !dbg !10741
  %xor42 = xor i32 %55, %and41, !dbg !10741
  %59 = load i32*, i32** %words, align 8, !dbg !10741, !tbaa !2286
  %60 = load i32, i32* %59, align 4, !dbg !10741, !tbaa !2273, !ctir !988
  %61 = load i32*, i32** %cwp, align 8, !dbg !10741, !tbaa !2286
  %incdec.ptr43 = getelementptr inbounds i32, i32* %61, i32 1, !dbg !10741
  store i32* %incdec.ptr43, i32** %cwp, align 8, !dbg !10741, !tbaa !2286
  store i32 %60, i32* %61, align 4, !dbg !10741, !tbaa !2273, !ctir !495
  %add44 = add i32 %xor42, %60, !dbg !10741
  %add45 = add i32 %add44, 606105819, !dbg !10741
  %62 = load i32, i32* %C, align 4, !dbg !10741, !tbaa !2273
  %add46 = add i32 %62, %add45, !dbg !10741
  store i32 %add46, i32* %C, align 4, !dbg !10741, !tbaa !2273
  %63 = load i32*, i32** %words, align 8, !dbg !10741, !tbaa !2286
  %incdec.ptr47 = getelementptr inbounds i32, i32* %63, i32 1, !dbg !10741
  store i32* %incdec.ptr47, i32** %words, align 8, !dbg !10741, !tbaa !2286
  %64 = load i32, i32* %C, align 4, !dbg !10741, !tbaa !2273
  %shl48 = shl i32 %64, 17, !dbg !10741
  %65 = load i32, i32* %C, align 4, !dbg !10741, !tbaa !2273
  %shr49 = lshr i32 %65, 15, !dbg !10741
  %or50 = or i32 %shl48, %shr49, !dbg !10741
  store i32 %or50, i32* %C, align 4, !dbg !10741, !tbaa !2273
  %66 = load i32, i32* %D, align 4, !dbg !10741, !tbaa !2273
  %67 = load i32, i32* %C, align 4, !dbg !10741, !tbaa !2273
  %add51 = add i32 %67, %66, !dbg !10741
  store i32 %add51, i32* %C, align 4, !dbg !10741, !tbaa !2273
  br label %do.end52, !dbg !10741

do.end52:                                         ; preds = %do.body39
  br label %do.body53, !dbg !10743

do.body53:                                        ; preds = %do.end52
  %68 = load i32, i32* %A, align 4, !dbg !10744, !tbaa !2273
  %69 = load i32, i32* %C, align 4, !dbg !10744, !tbaa !2273
  %70 = load i32, i32* %D, align 4, !dbg !10744, !tbaa !2273
  %71 = load i32, i32* %A, align 4, !dbg !10744, !tbaa !2273
  %xor54 = xor i32 %70, %71, !dbg !10744
  %and55 = and i32 %69, %xor54, !dbg !10744
  %xor56 = xor i32 %68, %and55, !dbg !10744
  %72 = load i32*, i32** %words, align 8, !dbg !10744, !tbaa !2286
  %73 = load i32, i32* %72, align 4, !dbg !10744, !tbaa !2273, !ctir !988
  %74 = load i32*, i32** %cwp, align 8, !dbg !10744, !tbaa !2286
  %incdec.ptr57 = getelementptr inbounds i32, i32* %74, i32 1, !dbg !10744
  store i32* %incdec.ptr57, i32** %cwp, align 8, !dbg !10744, !tbaa !2286
  store i32 %73, i32* %74, align 4, !dbg !10744, !tbaa !2273, !ctir !495
  %add58 = add i32 %xor56, %73, !dbg !10744
  %add59 = add i32 %add58, -1044525330, !dbg !10744
  %75 = load i32, i32* %B, align 4, !dbg !10744, !tbaa !2273
  %add60 = add i32 %75, %add59, !dbg !10744
  store i32 %add60, i32* %B, align 4, !dbg !10744, !tbaa !2273
  %76 = load i32*, i32** %words, align 8, !dbg !10744, !tbaa !2286
  %incdec.ptr61 = getelementptr inbounds i32, i32* %76, i32 1, !dbg !10744
  store i32* %incdec.ptr61, i32** %words, align 8, !dbg !10744, !tbaa !2286
  %77 = load i32, i32* %B, align 4, !dbg !10744, !tbaa !2273
  %shl62 = shl i32 %77, 22, !dbg !10744
  %78 = load i32, i32* %B, align 4, !dbg !10744, !tbaa !2273
  %shr63 = lshr i32 %78, 10, !dbg !10744
  %or64 = or i32 %shl62, %shr63, !dbg !10744
  store i32 %or64, i32* %B, align 4, !dbg !10744, !tbaa !2273
  %79 = load i32, i32* %C, align 4, !dbg !10744, !tbaa !2273
  %80 = load i32, i32* %B, align 4, !dbg !10744, !tbaa !2273
  %add65 = add i32 %80, %79, !dbg !10744
  store i32 %add65, i32* %B, align 4, !dbg !10744, !tbaa !2273
  br label %do.end66, !dbg !10744

do.end66:                                         ; preds = %do.body53
  br label %do.body67, !dbg !10746

do.body67:                                        ; preds = %do.end66
  %81 = load i32, i32* %D, align 4, !dbg !10747, !tbaa !2273
  %82 = load i32, i32* %B, align 4, !dbg !10747, !tbaa !2273
  %83 = load i32, i32* %C, align 4, !dbg !10747, !tbaa !2273
  %84 = load i32, i32* %D, align 4, !dbg !10747, !tbaa !2273
  %xor68 = xor i32 %83, %84, !dbg !10747
  %and69 = and i32 %82, %xor68, !dbg !10747
  %xor70 = xor i32 %81, %and69, !dbg !10747
  %85 = load i32*, i32** %words, align 8, !dbg !10747, !tbaa !2286
  %86 = load i32, i32* %85, align 4, !dbg !10747, !tbaa !2273, !ctir !988
  %87 = load i32*, i32** %cwp, align 8, !dbg !10747, !tbaa !2286
  %incdec.ptr71 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !10747
  store i32* %incdec.ptr71, i32** %cwp, align 8, !dbg !10747, !tbaa !2286
  store i32 %86, i32* %87, align 4, !dbg !10747, !tbaa !2273, !ctir !495
  %add72 = add i32 %xor70, %86, !dbg !10747
  %add73 = add i32 %add72, -176418897, !dbg !10747
  %88 = load i32, i32* %A, align 4, !dbg !10747, !tbaa !2273
  %add74 = add i32 %88, %add73, !dbg !10747
  store i32 %add74, i32* %A, align 4, !dbg !10747, !tbaa !2273
  %89 = load i32*, i32** %words, align 8, !dbg !10747, !tbaa !2286
  %incdec.ptr75 = getelementptr inbounds i32, i32* %89, i32 1, !dbg !10747
  store i32* %incdec.ptr75, i32** %words, align 8, !dbg !10747, !tbaa !2286
  %90 = load i32, i32* %A, align 4, !dbg !10747, !tbaa !2273
  %shl76 = shl i32 %90, 7, !dbg !10747
  %91 = load i32, i32* %A, align 4, !dbg !10747, !tbaa !2273
  %shr77 = lshr i32 %91, 25, !dbg !10747
  %or78 = or i32 %shl76, %shr77, !dbg !10747
  store i32 %or78, i32* %A, align 4, !dbg !10747, !tbaa !2273
  %92 = load i32, i32* %B, align 4, !dbg !10747, !tbaa !2273
  %93 = load i32, i32* %A, align 4, !dbg !10747, !tbaa !2273
  %add79 = add i32 %93, %92, !dbg !10747
  store i32 %add79, i32* %A, align 4, !dbg !10747, !tbaa !2273
  br label %do.end80, !dbg !10747

do.end80:                                         ; preds = %do.body67
  br label %do.body81, !dbg !10749

do.body81:                                        ; preds = %do.end80
  %94 = load i32, i32* %C, align 4, !dbg !10750, !tbaa !2273
  %95 = load i32, i32* %A, align 4, !dbg !10750, !tbaa !2273
  %96 = load i32, i32* %B, align 4, !dbg !10750, !tbaa !2273
  %97 = load i32, i32* %C, align 4, !dbg !10750, !tbaa !2273
  %xor82 = xor i32 %96, %97, !dbg !10750
  %and83 = and i32 %95, %xor82, !dbg !10750
  %xor84 = xor i32 %94, %and83, !dbg !10750
  %98 = load i32*, i32** %words, align 8, !dbg !10750, !tbaa !2286
  %99 = load i32, i32* %98, align 4, !dbg !10750, !tbaa !2273, !ctir !988
  %100 = load i32*, i32** %cwp, align 8, !dbg !10750, !tbaa !2286
  %incdec.ptr85 = getelementptr inbounds i32, i32* %100, i32 1, !dbg !10750
  store i32* %incdec.ptr85, i32** %cwp, align 8, !dbg !10750, !tbaa !2286
  store i32 %99, i32* %100, align 4, !dbg !10750, !tbaa !2273, !ctir !495
  %add86 = add i32 %xor84, %99, !dbg !10750
  %add87 = add i32 %add86, 1200080426, !dbg !10750
  %101 = load i32, i32* %D, align 4, !dbg !10750, !tbaa !2273
  %add88 = add i32 %101, %add87, !dbg !10750
  store i32 %add88, i32* %D, align 4, !dbg !10750, !tbaa !2273
  %102 = load i32*, i32** %words, align 8, !dbg !10750, !tbaa !2286
  %incdec.ptr89 = getelementptr inbounds i32, i32* %102, i32 1, !dbg !10750
  store i32* %incdec.ptr89, i32** %words, align 8, !dbg !10750, !tbaa !2286
  %103 = load i32, i32* %D, align 4, !dbg !10750, !tbaa !2273
  %shl90 = shl i32 %103, 12, !dbg !10750
  %104 = load i32, i32* %D, align 4, !dbg !10750, !tbaa !2273
  %shr91 = lshr i32 %104, 20, !dbg !10750
  %or92 = or i32 %shl90, %shr91, !dbg !10750
  store i32 %or92, i32* %D, align 4, !dbg !10750, !tbaa !2273
  %105 = load i32, i32* %A, align 4, !dbg !10750, !tbaa !2273
  %106 = load i32, i32* %D, align 4, !dbg !10750, !tbaa !2273
  %add93 = add i32 %106, %105, !dbg !10750
  store i32 %add93, i32* %D, align 4, !dbg !10750, !tbaa !2273
  br label %do.end94, !dbg !10750

do.end94:                                         ; preds = %do.body81
  br label %do.body95, !dbg !10752

do.body95:                                        ; preds = %do.end94
  %107 = load i32, i32* %B, align 4, !dbg !10753, !tbaa !2273
  %108 = load i32, i32* %D, align 4, !dbg !10753, !tbaa !2273
  %109 = load i32, i32* %A, align 4, !dbg !10753, !tbaa !2273
  %110 = load i32, i32* %B, align 4, !dbg !10753, !tbaa !2273
  %xor96 = xor i32 %109, %110, !dbg !10753
  %and97 = and i32 %108, %xor96, !dbg !10753
  %xor98 = xor i32 %107, %and97, !dbg !10753
  %111 = load i32*, i32** %words, align 8, !dbg !10753, !tbaa !2286
  %112 = load i32, i32* %111, align 4, !dbg !10753, !tbaa !2273, !ctir !988
  %113 = load i32*, i32** %cwp, align 8, !dbg !10753, !tbaa !2286
  %incdec.ptr99 = getelementptr inbounds i32, i32* %113, i32 1, !dbg !10753
  store i32* %incdec.ptr99, i32** %cwp, align 8, !dbg !10753, !tbaa !2286
  store i32 %112, i32* %113, align 4, !dbg !10753, !tbaa !2273, !ctir !495
  %add100 = add i32 %xor98, %112, !dbg !10753
  %add101 = add i32 %add100, -1473231341, !dbg !10753
  %114 = load i32, i32* %C, align 4, !dbg !10753, !tbaa !2273
  %add102 = add i32 %114, %add101, !dbg !10753
  store i32 %add102, i32* %C, align 4, !dbg !10753, !tbaa !2273
  %115 = load i32*, i32** %words, align 8, !dbg !10753, !tbaa !2286
  %incdec.ptr103 = getelementptr inbounds i32, i32* %115, i32 1, !dbg !10753
  store i32* %incdec.ptr103, i32** %words, align 8, !dbg !10753, !tbaa !2286
  %116 = load i32, i32* %C, align 4, !dbg !10753, !tbaa !2273
  %shl104 = shl i32 %116, 17, !dbg !10753
  %117 = load i32, i32* %C, align 4, !dbg !10753, !tbaa !2273
  %shr105 = lshr i32 %117, 15, !dbg !10753
  %or106 = or i32 %shl104, %shr105, !dbg !10753
  store i32 %or106, i32* %C, align 4, !dbg !10753, !tbaa !2273
  %118 = load i32, i32* %D, align 4, !dbg !10753, !tbaa !2273
  %119 = load i32, i32* %C, align 4, !dbg !10753, !tbaa !2273
  %add107 = add i32 %119, %118, !dbg !10753
  store i32 %add107, i32* %C, align 4, !dbg !10753, !tbaa !2273
  br label %do.end108, !dbg !10753

do.end108:                                        ; preds = %do.body95
  br label %do.body109, !dbg !10755

do.body109:                                       ; preds = %do.end108
  %120 = load i32, i32* %A, align 4, !dbg !10756, !tbaa !2273
  %121 = load i32, i32* %C, align 4, !dbg !10756, !tbaa !2273
  %122 = load i32, i32* %D, align 4, !dbg !10756, !tbaa !2273
  %123 = load i32, i32* %A, align 4, !dbg !10756, !tbaa !2273
  %xor110 = xor i32 %122, %123, !dbg !10756
  %and111 = and i32 %121, %xor110, !dbg !10756
  %xor112 = xor i32 %120, %and111, !dbg !10756
  %124 = load i32*, i32** %words, align 8, !dbg !10756, !tbaa !2286
  %125 = load i32, i32* %124, align 4, !dbg !10756, !tbaa !2273, !ctir !988
  %126 = load i32*, i32** %cwp, align 8, !dbg !10756, !tbaa !2286
  %incdec.ptr113 = getelementptr inbounds i32, i32* %126, i32 1, !dbg !10756
  store i32* %incdec.ptr113, i32** %cwp, align 8, !dbg !10756, !tbaa !2286
  store i32 %125, i32* %126, align 4, !dbg !10756, !tbaa !2273, !ctir !495
  %add114 = add i32 %xor112, %125, !dbg !10756
  %add115 = add i32 %add114, -45705983, !dbg !10756
  %127 = load i32, i32* %B, align 4, !dbg !10756, !tbaa !2273
  %add116 = add i32 %127, %add115, !dbg !10756
  store i32 %add116, i32* %B, align 4, !dbg !10756, !tbaa !2273
  %128 = load i32*, i32** %words, align 8, !dbg !10756, !tbaa !2286
  %incdec.ptr117 = getelementptr inbounds i32, i32* %128, i32 1, !dbg !10756
  store i32* %incdec.ptr117, i32** %words, align 8, !dbg !10756, !tbaa !2286
  %129 = load i32, i32* %B, align 4, !dbg !10756, !tbaa !2273
  %shl118 = shl i32 %129, 22, !dbg !10756
  %130 = load i32, i32* %B, align 4, !dbg !10756, !tbaa !2273
  %shr119 = lshr i32 %130, 10, !dbg !10756
  %or120 = or i32 %shl118, %shr119, !dbg !10756
  store i32 %or120, i32* %B, align 4, !dbg !10756, !tbaa !2273
  %131 = load i32, i32* %C, align 4, !dbg !10756, !tbaa !2273
  %132 = load i32, i32* %B, align 4, !dbg !10756, !tbaa !2273
  %add121 = add i32 %132, %131, !dbg !10756
  store i32 %add121, i32* %B, align 4, !dbg !10756, !tbaa !2273
  br label %do.end122, !dbg !10756

do.end122:                                        ; preds = %do.body109
  br label %do.body123, !dbg !10758

do.body123:                                       ; preds = %do.end122
  %133 = load i32, i32* %D, align 4, !dbg !10759, !tbaa !2273
  %134 = load i32, i32* %B, align 4, !dbg !10759, !tbaa !2273
  %135 = load i32, i32* %C, align 4, !dbg !10759, !tbaa !2273
  %136 = load i32, i32* %D, align 4, !dbg !10759, !tbaa !2273
  %xor124 = xor i32 %135, %136, !dbg !10759
  %and125 = and i32 %134, %xor124, !dbg !10759
  %xor126 = xor i32 %133, %and125, !dbg !10759
  %137 = load i32*, i32** %words, align 8, !dbg !10759, !tbaa !2286
  %138 = load i32, i32* %137, align 4, !dbg !10759, !tbaa !2273, !ctir !988
  %139 = load i32*, i32** %cwp, align 8, !dbg !10759, !tbaa !2286
  %incdec.ptr127 = getelementptr inbounds i32, i32* %139, i32 1, !dbg !10759
  store i32* %incdec.ptr127, i32** %cwp, align 8, !dbg !10759, !tbaa !2286
  store i32 %138, i32* %139, align 4, !dbg !10759, !tbaa !2273, !ctir !495
  %add128 = add i32 %xor126, %138, !dbg !10759
  %add129 = add i32 %add128, 1770035416, !dbg !10759
  %140 = load i32, i32* %A, align 4, !dbg !10759, !tbaa !2273
  %add130 = add i32 %140, %add129, !dbg !10759
  store i32 %add130, i32* %A, align 4, !dbg !10759, !tbaa !2273
  %141 = load i32*, i32** %words, align 8, !dbg !10759, !tbaa !2286
  %incdec.ptr131 = getelementptr inbounds i32, i32* %141, i32 1, !dbg !10759
  store i32* %incdec.ptr131, i32** %words, align 8, !dbg !10759, !tbaa !2286
  %142 = load i32, i32* %A, align 4, !dbg !10759, !tbaa !2273
  %shl132 = shl i32 %142, 7, !dbg !10759
  %143 = load i32, i32* %A, align 4, !dbg !10759, !tbaa !2273
  %shr133 = lshr i32 %143, 25, !dbg !10759
  %or134 = or i32 %shl132, %shr133, !dbg !10759
  store i32 %or134, i32* %A, align 4, !dbg !10759, !tbaa !2273
  %144 = load i32, i32* %B, align 4, !dbg !10759, !tbaa !2273
  %145 = load i32, i32* %A, align 4, !dbg !10759, !tbaa !2273
  %add135 = add i32 %145, %144, !dbg !10759
  store i32 %add135, i32* %A, align 4, !dbg !10759, !tbaa !2273
  br label %do.end136, !dbg !10759

do.end136:                                        ; preds = %do.body123
  br label %do.body137, !dbg !10761

do.body137:                                       ; preds = %do.end136
  %146 = load i32, i32* %C, align 4, !dbg !10762, !tbaa !2273
  %147 = load i32, i32* %A, align 4, !dbg !10762, !tbaa !2273
  %148 = load i32, i32* %B, align 4, !dbg !10762, !tbaa !2273
  %149 = load i32, i32* %C, align 4, !dbg !10762, !tbaa !2273
  %xor138 = xor i32 %148, %149, !dbg !10762
  %and139 = and i32 %147, %xor138, !dbg !10762
  %xor140 = xor i32 %146, %and139, !dbg !10762
  %150 = load i32*, i32** %words, align 8, !dbg !10762, !tbaa !2286
  %151 = load i32, i32* %150, align 4, !dbg !10762, !tbaa !2273, !ctir !988
  %152 = load i32*, i32** %cwp, align 8, !dbg !10762, !tbaa !2286
  %incdec.ptr141 = getelementptr inbounds i32, i32* %152, i32 1, !dbg !10762
  store i32* %incdec.ptr141, i32** %cwp, align 8, !dbg !10762, !tbaa !2286
  store i32 %151, i32* %152, align 4, !dbg !10762, !tbaa !2273, !ctir !495
  %add142 = add i32 %xor140, %151, !dbg !10762
  %add143 = add i32 %add142, -1958414417, !dbg !10762
  %153 = load i32, i32* %D, align 4, !dbg !10762, !tbaa !2273
  %add144 = add i32 %153, %add143, !dbg !10762
  store i32 %add144, i32* %D, align 4, !dbg !10762, !tbaa !2273
  %154 = load i32*, i32** %words, align 8, !dbg !10762, !tbaa !2286
  %incdec.ptr145 = getelementptr inbounds i32, i32* %154, i32 1, !dbg !10762
  store i32* %incdec.ptr145, i32** %words, align 8, !dbg !10762, !tbaa !2286
  %155 = load i32, i32* %D, align 4, !dbg !10762, !tbaa !2273
  %shl146 = shl i32 %155, 12, !dbg !10762
  %156 = load i32, i32* %D, align 4, !dbg !10762, !tbaa !2273
  %shr147 = lshr i32 %156, 20, !dbg !10762
  %or148 = or i32 %shl146, %shr147, !dbg !10762
  store i32 %or148, i32* %D, align 4, !dbg !10762, !tbaa !2273
  %157 = load i32, i32* %A, align 4, !dbg !10762, !tbaa !2273
  %158 = load i32, i32* %D, align 4, !dbg !10762, !tbaa !2273
  %add149 = add i32 %158, %157, !dbg !10762
  store i32 %add149, i32* %D, align 4, !dbg !10762, !tbaa !2273
  br label %do.end150, !dbg !10762

do.end150:                                        ; preds = %do.body137
  br label %do.body151, !dbg !10764

do.body151:                                       ; preds = %do.end150
  %159 = load i32, i32* %B, align 4, !dbg !10765, !tbaa !2273
  %160 = load i32, i32* %D, align 4, !dbg !10765, !tbaa !2273
  %161 = load i32, i32* %A, align 4, !dbg !10765, !tbaa !2273
  %162 = load i32, i32* %B, align 4, !dbg !10765, !tbaa !2273
  %xor152 = xor i32 %161, %162, !dbg !10765
  %and153 = and i32 %160, %xor152, !dbg !10765
  %xor154 = xor i32 %159, %and153, !dbg !10765
  %163 = load i32*, i32** %words, align 8, !dbg !10765, !tbaa !2286
  %164 = load i32, i32* %163, align 4, !dbg !10765, !tbaa !2273, !ctir !988
  %165 = load i32*, i32** %cwp, align 8, !dbg !10765, !tbaa !2286
  %incdec.ptr155 = getelementptr inbounds i32, i32* %165, i32 1, !dbg !10765
  store i32* %incdec.ptr155, i32** %cwp, align 8, !dbg !10765, !tbaa !2286
  store i32 %164, i32* %165, align 4, !dbg !10765, !tbaa !2273, !ctir !495
  %add156 = add i32 %xor154, %164, !dbg !10765
  %add157 = add i32 %add156, -42063, !dbg !10765
  %166 = load i32, i32* %C, align 4, !dbg !10765, !tbaa !2273
  %add158 = add i32 %166, %add157, !dbg !10765
  store i32 %add158, i32* %C, align 4, !dbg !10765, !tbaa !2273
  %167 = load i32*, i32** %words, align 8, !dbg !10765, !tbaa !2286
  %incdec.ptr159 = getelementptr inbounds i32, i32* %167, i32 1, !dbg !10765
  store i32* %incdec.ptr159, i32** %words, align 8, !dbg !10765, !tbaa !2286
  %168 = load i32, i32* %C, align 4, !dbg !10765, !tbaa !2273
  %shl160 = shl i32 %168, 17, !dbg !10765
  %169 = load i32, i32* %C, align 4, !dbg !10765, !tbaa !2273
  %shr161 = lshr i32 %169, 15, !dbg !10765
  %or162 = or i32 %shl160, %shr161, !dbg !10765
  store i32 %or162, i32* %C, align 4, !dbg !10765, !tbaa !2273
  %170 = load i32, i32* %D, align 4, !dbg !10765, !tbaa !2273
  %171 = load i32, i32* %C, align 4, !dbg !10765, !tbaa !2273
  %add163 = add i32 %171, %170, !dbg !10765
  store i32 %add163, i32* %C, align 4, !dbg !10765, !tbaa !2273
  br label %do.end164, !dbg !10765

do.end164:                                        ; preds = %do.body151
  br label %do.body165, !dbg !10767

do.body165:                                       ; preds = %do.end164
  %172 = load i32, i32* %A, align 4, !dbg !10768, !tbaa !2273
  %173 = load i32, i32* %C, align 4, !dbg !10768, !tbaa !2273
  %174 = load i32, i32* %D, align 4, !dbg !10768, !tbaa !2273
  %175 = load i32, i32* %A, align 4, !dbg !10768, !tbaa !2273
  %xor166 = xor i32 %174, %175, !dbg !10768
  %and167 = and i32 %173, %xor166, !dbg !10768
  %xor168 = xor i32 %172, %and167, !dbg !10768
  %176 = load i32*, i32** %words, align 8, !dbg !10768, !tbaa !2286
  %177 = load i32, i32* %176, align 4, !dbg !10768, !tbaa !2273, !ctir !988
  %178 = load i32*, i32** %cwp, align 8, !dbg !10768, !tbaa !2286
  %incdec.ptr169 = getelementptr inbounds i32, i32* %178, i32 1, !dbg !10768
  store i32* %incdec.ptr169, i32** %cwp, align 8, !dbg !10768, !tbaa !2286
  store i32 %177, i32* %178, align 4, !dbg !10768, !tbaa !2273, !ctir !495
  %add170 = add i32 %xor168, %177, !dbg !10768
  %add171 = add i32 %add170, -1990404162, !dbg !10768
  %179 = load i32, i32* %B, align 4, !dbg !10768, !tbaa !2273
  %add172 = add i32 %179, %add171, !dbg !10768
  store i32 %add172, i32* %B, align 4, !dbg !10768, !tbaa !2273
  %180 = load i32*, i32** %words, align 8, !dbg !10768, !tbaa !2286
  %incdec.ptr173 = getelementptr inbounds i32, i32* %180, i32 1, !dbg !10768
  store i32* %incdec.ptr173, i32** %words, align 8, !dbg !10768, !tbaa !2286
  %181 = load i32, i32* %B, align 4, !dbg !10768, !tbaa !2273
  %shl174 = shl i32 %181, 22, !dbg !10768
  %182 = load i32, i32* %B, align 4, !dbg !10768, !tbaa !2273
  %shr175 = lshr i32 %182, 10, !dbg !10768
  %or176 = or i32 %shl174, %shr175, !dbg !10768
  store i32 %or176, i32* %B, align 4, !dbg !10768, !tbaa !2273
  %183 = load i32, i32* %C, align 4, !dbg !10768, !tbaa !2273
  %184 = load i32, i32* %B, align 4, !dbg !10768, !tbaa !2273
  %add177 = add i32 %184, %183, !dbg !10768
  store i32 %add177, i32* %B, align 4, !dbg !10768, !tbaa !2273
  br label %do.end178, !dbg !10768

do.end178:                                        ; preds = %do.body165
  br label %do.body179, !dbg !10770

do.body179:                                       ; preds = %do.end178
  %185 = load i32, i32* %D, align 4, !dbg !10771, !tbaa !2273
  %186 = load i32, i32* %B, align 4, !dbg !10771, !tbaa !2273
  %187 = load i32, i32* %C, align 4, !dbg !10771, !tbaa !2273
  %188 = load i32, i32* %D, align 4, !dbg !10771, !tbaa !2273
  %xor180 = xor i32 %187, %188, !dbg !10771
  %and181 = and i32 %186, %xor180, !dbg !10771
  %xor182 = xor i32 %185, %and181, !dbg !10771
  %189 = load i32*, i32** %words, align 8, !dbg !10771, !tbaa !2286
  %190 = load i32, i32* %189, align 4, !dbg !10771, !tbaa !2273, !ctir !988
  %191 = load i32*, i32** %cwp, align 8, !dbg !10771, !tbaa !2286
  %incdec.ptr183 = getelementptr inbounds i32, i32* %191, i32 1, !dbg !10771
  store i32* %incdec.ptr183, i32** %cwp, align 8, !dbg !10771, !tbaa !2286
  store i32 %190, i32* %191, align 4, !dbg !10771, !tbaa !2273, !ctir !495
  %add184 = add i32 %xor182, %190, !dbg !10771
  %add185 = add i32 %add184, 1804603682, !dbg !10771
  %192 = load i32, i32* %A, align 4, !dbg !10771, !tbaa !2273
  %add186 = add i32 %192, %add185, !dbg !10771
  store i32 %add186, i32* %A, align 4, !dbg !10771, !tbaa !2273
  %193 = load i32*, i32** %words, align 8, !dbg !10771, !tbaa !2286
  %incdec.ptr187 = getelementptr inbounds i32, i32* %193, i32 1, !dbg !10771
  store i32* %incdec.ptr187, i32** %words, align 8, !dbg !10771, !tbaa !2286
  %194 = load i32, i32* %A, align 4, !dbg !10771, !tbaa !2273
  %shl188 = shl i32 %194, 7, !dbg !10771
  %195 = load i32, i32* %A, align 4, !dbg !10771, !tbaa !2273
  %shr189 = lshr i32 %195, 25, !dbg !10771
  %or190 = or i32 %shl188, %shr189, !dbg !10771
  store i32 %or190, i32* %A, align 4, !dbg !10771, !tbaa !2273
  %196 = load i32, i32* %B, align 4, !dbg !10771, !tbaa !2273
  %197 = load i32, i32* %A, align 4, !dbg !10771, !tbaa !2273
  %add191 = add i32 %197, %196, !dbg !10771
  store i32 %add191, i32* %A, align 4, !dbg !10771, !tbaa !2273
  br label %do.end192, !dbg !10771

do.end192:                                        ; preds = %do.body179
  br label %do.body193, !dbg !10773

do.body193:                                       ; preds = %do.end192
  %198 = load i32, i32* %C, align 4, !dbg !10774, !tbaa !2273
  %199 = load i32, i32* %A, align 4, !dbg !10774, !tbaa !2273
  %200 = load i32, i32* %B, align 4, !dbg !10774, !tbaa !2273
  %201 = load i32, i32* %C, align 4, !dbg !10774, !tbaa !2273
  %xor194 = xor i32 %200, %201, !dbg !10774
  %and195 = and i32 %199, %xor194, !dbg !10774
  %xor196 = xor i32 %198, %and195, !dbg !10774
  %202 = load i32*, i32** %words, align 8, !dbg !10774, !tbaa !2286
  %203 = load i32, i32* %202, align 4, !dbg !10774, !tbaa !2273, !ctir !988
  %204 = load i32*, i32** %cwp, align 8, !dbg !10774, !tbaa !2286
  %incdec.ptr197 = getelementptr inbounds i32, i32* %204, i32 1, !dbg !10774
  store i32* %incdec.ptr197, i32** %cwp, align 8, !dbg !10774, !tbaa !2286
  store i32 %203, i32* %204, align 4, !dbg !10774, !tbaa !2273, !ctir !495
  %add198 = add i32 %xor196, %203, !dbg !10774
  %add199 = add i32 %add198, -40341101, !dbg !10774
  %205 = load i32, i32* %D, align 4, !dbg !10774, !tbaa !2273
  %add200 = add i32 %205, %add199, !dbg !10774
  store i32 %add200, i32* %D, align 4, !dbg !10774, !tbaa !2273
  %206 = load i32*, i32** %words, align 8, !dbg !10774, !tbaa !2286
  %incdec.ptr201 = getelementptr inbounds i32, i32* %206, i32 1, !dbg !10774
  store i32* %incdec.ptr201, i32** %words, align 8, !dbg !10774, !tbaa !2286
  %207 = load i32, i32* %D, align 4, !dbg !10774, !tbaa !2273
  %shl202 = shl i32 %207, 12, !dbg !10774
  %208 = load i32, i32* %D, align 4, !dbg !10774, !tbaa !2273
  %shr203 = lshr i32 %208, 20, !dbg !10774
  %or204 = or i32 %shl202, %shr203, !dbg !10774
  store i32 %or204, i32* %D, align 4, !dbg !10774, !tbaa !2273
  %209 = load i32, i32* %A, align 4, !dbg !10774, !tbaa !2273
  %210 = load i32, i32* %D, align 4, !dbg !10774, !tbaa !2273
  %add205 = add i32 %210, %209, !dbg !10774
  store i32 %add205, i32* %D, align 4, !dbg !10774, !tbaa !2273
  br label %do.end206, !dbg !10774

do.end206:                                        ; preds = %do.body193
  br label %do.body207, !dbg !10776

do.body207:                                       ; preds = %do.end206
  %211 = load i32, i32* %B, align 4, !dbg !10777, !tbaa !2273
  %212 = load i32, i32* %D, align 4, !dbg !10777, !tbaa !2273
  %213 = load i32, i32* %A, align 4, !dbg !10777, !tbaa !2273
  %214 = load i32, i32* %B, align 4, !dbg !10777, !tbaa !2273
  %xor208 = xor i32 %213, %214, !dbg !10777
  %and209 = and i32 %212, %xor208, !dbg !10777
  %xor210 = xor i32 %211, %and209, !dbg !10777
  %215 = load i32*, i32** %words, align 8, !dbg !10777, !tbaa !2286
  %216 = load i32, i32* %215, align 4, !dbg !10777, !tbaa !2273, !ctir !988
  %217 = load i32*, i32** %cwp, align 8, !dbg !10777, !tbaa !2286
  %incdec.ptr211 = getelementptr inbounds i32, i32* %217, i32 1, !dbg !10777
  store i32* %incdec.ptr211, i32** %cwp, align 8, !dbg !10777, !tbaa !2286
  store i32 %216, i32* %217, align 4, !dbg !10777, !tbaa !2273, !ctir !495
  %add212 = add i32 %xor210, %216, !dbg !10777
  %add213 = add i32 %add212, -1502002290, !dbg !10777
  %218 = load i32, i32* %C, align 4, !dbg !10777, !tbaa !2273
  %add214 = add i32 %218, %add213, !dbg !10777
  store i32 %add214, i32* %C, align 4, !dbg !10777, !tbaa !2273
  %219 = load i32*, i32** %words, align 8, !dbg !10777, !tbaa !2286
  %incdec.ptr215 = getelementptr inbounds i32, i32* %219, i32 1, !dbg !10777
  store i32* %incdec.ptr215, i32** %words, align 8, !dbg !10777, !tbaa !2286
  %220 = load i32, i32* %C, align 4, !dbg !10777, !tbaa !2273
  %shl216 = shl i32 %220, 17, !dbg !10777
  %221 = load i32, i32* %C, align 4, !dbg !10777, !tbaa !2273
  %shr217 = lshr i32 %221, 15, !dbg !10777
  %or218 = or i32 %shl216, %shr217, !dbg !10777
  store i32 %or218, i32* %C, align 4, !dbg !10777, !tbaa !2273
  %222 = load i32, i32* %D, align 4, !dbg !10777, !tbaa !2273
  %223 = load i32, i32* %C, align 4, !dbg !10777, !tbaa !2273
  %add219 = add i32 %223, %222, !dbg !10777
  store i32 %add219, i32* %C, align 4, !dbg !10777, !tbaa !2273
  br label %do.end220, !dbg !10777

do.end220:                                        ; preds = %do.body207
  br label %do.body221, !dbg !10779

do.body221:                                       ; preds = %do.end220
  %224 = load i32, i32* %A, align 4, !dbg !10780, !tbaa !2273
  %225 = load i32, i32* %C, align 4, !dbg !10780, !tbaa !2273
  %226 = load i32, i32* %D, align 4, !dbg !10780, !tbaa !2273
  %227 = load i32, i32* %A, align 4, !dbg !10780, !tbaa !2273
  %xor222 = xor i32 %226, %227, !dbg !10780
  %and223 = and i32 %225, %xor222, !dbg !10780
  %xor224 = xor i32 %224, %and223, !dbg !10780
  %228 = load i32*, i32** %words, align 8, !dbg !10780, !tbaa !2286
  %229 = load i32, i32* %228, align 4, !dbg !10780, !tbaa !2273, !ctir !988
  %230 = load i32*, i32** %cwp, align 8, !dbg !10780, !tbaa !2286
  %incdec.ptr225 = getelementptr inbounds i32, i32* %230, i32 1, !dbg !10780
  store i32* %incdec.ptr225, i32** %cwp, align 8, !dbg !10780, !tbaa !2286
  store i32 %229, i32* %230, align 4, !dbg !10780, !tbaa !2273, !ctir !495
  %add226 = add i32 %xor224, %229, !dbg !10780
  %add227 = add i32 %add226, 1236535329, !dbg !10780
  %231 = load i32, i32* %B, align 4, !dbg !10780, !tbaa !2273
  %add228 = add i32 %231, %add227, !dbg !10780
  store i32 %add228, i32* %B, align 4, !dbg !10780, !tbaa !2273
  %232 = load i32*, i32** %words, align 8, !dbg !10780, !tbaa !2286
  %incdec.ptr229 = getelementptr inbounds i32, i32* %232, i32 1, !dbg !10780
  store i32* %incdec.ptr229, i32** %words, align 8, !dbg !10780, !tbaa !2286
  %233 = load i32, i32* %B, align 4, !dbg !10780, !tbaa !2273
  %shl230 = shl i32 %233, 22, !dbg !10780
  %234 = load i32, i32* %B, align 4, !dbg !10780, !tbaa !2273
  %shr231 = lshr i32 %234, 10, !dbg !10780
  %or232 = or i32 %shl230, %shr231, !dbg !10780
  store i32 %or232, i32* %B, align 4, !dbg !10780, !tbaa !2273
  %235 = load i32, i32* %C, align 4, !dbg !10780, !tbaa !2273
  %236 = load i32, i32* %B, align 4, !dbg !10780, !tbaa !2273
  %add233 = add i32 %236, %235, !dbg !10780
  store i32 %add233, i32* %B, align 4, !dbg !10780, !tbaa !2273
  br label %do.end234, !dbg !10780

do.end234:                                        ; preds = %do.body221
  br label %do.body235, !dbg !10782

do.body235:                                       ; preds = %do.end234
  %237 = load i32, i32* %C, align 4, !dbg !10783, !tbaa !2273
  %238 = load i32, i32* %D, align 4, !dbg !10783, !tbaa !2273
  %239 = load i32, i32* %B, align 4, !dbg !10783, !tbaa !2273
  %240 = load i32, i32* %C, align 4, !dbg !10783, !tbaa !2273
  %xor236 = xor i32 %239, %240, !dbg !10783
  %and237 = and i32 %238, %xor236, !dbg !10783
  %xor238 = xor i32 %237, %and237, !dbg !10783
  %arrayidx239 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 1, !dbg !10783, !ctir !986
  %241 = load i32, i32* %arrayidx239, align 4, !dbg !10783, !tbaa !2273
  %add240 = add i32 %xor238, %241, !dbg !10783
  %add241 = add i32 %add240, -165796510, !dbg !10783
  %242 = load i32, i32* %A, align 4, !dbg !10783, !tbaa !2273
  %add242 = add i32 %242, %add241, !dbg !10783
  store i32 %add242, i32* %A, align 4, !dbg !10783, !tbaa !2273
  %243 = load i32, i32* %A, align 4, !dbg !10783, !tbaa !2273
  %shl243 = shl i32 %243, 5, !dbg !10783
  %244 = load i32, i32* %A, align 4, !dbg !10783, !tbaa !2273
  %shr244 = lshr i32 %244, 27, !dbg !10783
  %or245 = or i32 %shl243, %shr244, !dbg !10783
  store i32 %or245, i32* %A, align 4, !dbg !10783, !tbaa !2273
  %245 = load i32, i32* %B, align 4, !dbg !10783, !tbaa !2273
  %246 = load i32, i32* %A, align 4, !dbg !10783, !tbaa !2273
  %add246 = add i32 %246, %245, !dbg !10783
  store i32 %add246, i32* %A, align 4, !dbg !10783, !tbaa !2273
  br label %do.end247, !dbg !10783

do.end247:                                        ; preds = %do.body235
  br label %do.body248, !dbg !10785

do.body248:                                       ; preds = %do.end247
  %247 = load i32, i32* %B, align 4, !dbg !10786, !tbaa !2273
  %248 = load i32, i32* %C, align 4, !dbg !10786, !tbaa !2273
  %249 = load i32, i32* %A, align 4, !dbg !10786, !tbaa !2273
  %250 = load i32, i32* %B, align 4, !dbg !10786, !tbaa !2273
  %xor249 = xor i32 %249, %250, !dbg !10786
  %and250 = and i32 %248, %xor249, !dbg !10786
  %xor251 = xor i32 %247, %and250, !dbg !10786
  %arrayidx252 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 6, !dbg !10786, !ctir !986
  %251 = load i32, i32* %arrayidx252, align 8, !dbg !10786, !tbaa !2273
  %add253 = add i32 %xor251, %251, !dbg !10786
  %add254 = add i32 %add253, -1069501632, !dbg !10786
  %252 = load i32, i32* %D, align 4, !dbg !10786, !tbaa !2273
  %add255 = add i32 %252, %add254, !dbg !10786
  store i32 %add255, i32* %D, align 4, !dbg !10786, !tbaa !2273
  %253 = load i32, i32* %D, align 4, !dbg !10786, !tbaa !2273
  %shl256 = shl i32 %253, 9, !dbg !10786
  %254 = load i32, i32* %D, align 4, !dbg !10786, !tbaa !2273
  %shr257 = lshr i32 %254, 23, !dbg !10786
  %or258 = or i32 %shl256, %shr257, !dbg !10786
  store i32 %or258, i32* %D, align 4, !dbg !10786, !tbaa !2273
  %255 = load i32, i32* %A, align 4, !dbg !10786, !tbaa !2273
  %256 = load i32, i32* %D, align 4, !dbg !10786, !tbaa !2273
  %add259 = add i32 %256, %255, !dbg !10786
  store i32 %add259, i32* %D, align 4, !dbg !10786, !tbaa !2273
  br label %do.end260, !dbg !10786

do.end260:                                        ; preds = %do.body248
  br label %do.body261, !dbg !10788

do.body261:                                       ; preds = %do.end260
  %257 = load i32, i32* %A, align 4, !dbg !10789, !tbaa !2273
  %258 = load i32, i32* %B, align 4, !dbg !10789, !tbaa !2273
  %259 = load i32, i32* %D, align 4, !dbg !10789, !tbaa !2273
  %260 = load i32, i32* %A, align 4, !dbg !10789, !tbaa !2273
  %xor262 = xor i32 %259, %260, !dbg !10789
  %and263 = and i32 %258, %xor262, !dbg !10789
  %xor264 = xor i32 %257, %and263, !dbg !10789
  %arrayidx265 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 11, !dbg !10789, !ctir !986
  %261 = load i32, i32* %arrayidx265, align 4, !dbg !10789, !tbaa !2273
  %add266 = add i32 %xor264, %261, !dbg !10789
  %add267 = add i32 %add266, 643717713, !dbg !10789
  %262 = load i32, i32* %C, align 4, !dbg !10789, !tbaa !2273
  %add268 = add i32 %262, %add267, !dbg !10789
  store i32 %add268, i32* %C, align 4, !dbg !10789, !tbaa !2273
  %263 = load i32, i32* %C, align 4, !dbg !10789, !tbaa !2273
  %shl269 = shl i32 %263, 14, !dbg !10789
  %264 = load i32, i32* %C, align 4, !dbg !10789, !tbaa !2273
  %shr270 = lshr i32 %264, 18, !dbg !10789
  %or271 = or i32 %shl269, %shr270, !dbg !10789
  store i32 %or271, i32* %C, align 4, !dbg !10789, !tbaa !2273
  %265 = load i32, i32* %D, align 4, !dbg !10789, !tbaa !2273
  %266 = load i32, i32* %C, align 4, !dbg !10789, !tbaa !2273
  %add272 = add i32 %266, %265, !dbg !10789
  store i32 %add272, i32* %C, align 4, !dbg !10789, !tbaa !2273
  br label %do.end273, !dbg !10789

do.end273:                                        ; preds = %do.body261
  br label %do.body274, !dbg !10791

do.body274:                                       ; preds = %do.end273
  %267 = load i32, i32* %D, align 4, !dbg !10792, !tbaa !2273
  %268 = load i32, i32* %A, align 4, !dbg !10792, !tbaa !2273
  %269 = load i32, i32* %C, align 4, !dbg !10792, !tbaa !2273
  %270 = load i32, i32* %D, align 4, !dbg !10792, !tbaa !2273
  %xor275 = xor i32 %269, %270, !dbg !10792
  %and276 = and i32 %268, %xor275, !dbg !10792
  %xor277 = xor i32 %267, %and276, !dbg !10792
  %arrayidx278 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10792, !ctir !986
  %271 = load i32, i32* %arrayidx278, align 16, !dbg !10792, !tbaa !2273
  %add279 = add i32 %xor277, %271, !dbg !10792
  %add280 = add i32 %add279, -373897302, !dbg !10792
  %272 = load i32, i32* %B, align 4, !dbg !10792, !tbaa !2273
  %add281 = add i32 %272, %add280, !dbg !10792
  store i32 %add281, i32* %B, align 4, !dbg !10792, !tbaa !2273
  %273 = load i32, i32* %B, align 4, !dbg !10792, !tbaa !2273
  %shl282 = shl i32 %273, 20, !dbg !10792
  %274 = load i32, i32* %B, align 4, !dbg !10792, !tbaa !2273
  %shr283 = lshr i32 %274, 12, !dbg !10792
  %or284 = or i32 %shl282, %shr283, !dbg !10792
  store i32 %or284, i32* %B, align 4, !dbg !10792, !tbaa !2273
  %275 = load i32, i32* %C, align 4, !dbg !10792, !tbaa !2273
  %276 = load i32, i32* %B, align 4, !dbg !10792, !tbaa !2273
  %add285 = add i32 %276, %275, !dbg !10792
  store i32 %add285, i32* %B, align 4, !dbg !10792, !tbaa !2273
  br label %do.end286, !dbg !10792

do.end286:                                        ; preds = %do.body274
  br label %do.body287, !dbg !10794

do.body287:                                       ; preds = %do.end286
  %277 = load i32, i32* %C, align 4, !dbg !10795, !tbaa !2273
  %278 = load i32, i32* %D, align 4, !dbg !10795, !tbaa !2273
  %279 = load i32, i32* %B, align 4, !dbg !10795, !tbaa !2273
  %280 = load i32, i32* %C, align 4, !dbg !10795, !tbaa !2273
  %xor288 = xor i32 %279, %280, !dbg !10795
  %and289 = and i32 %278, %xor288, !dbg !10795
  %xor290 = xor i32 %277, %and289, !dbg !10795
  %arrayidx291 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 5, !dbg !10795, !ctir !986
  %281 = load i32, i32* %arrayidx291, align 4, !dbg !10795, !tbaa !2273
  %add292 = add i32 %xor290, %281, !dbg !10795
  %add293 = add i32 %add292, -701558691, !dbg !10795
  %282 = load i32, i32* %A, align 4, !dbg !10795, !tbaa !2273
  %add294 = add i32 %282, %add293, !dbg !10795
  store i32 %add294, i32* %A, align 4, !dbg !10795, !tbaa !2273
  %283 = load i32, i32* %A, align 4, !dbg !10795, !tbaa !2273
  %shl295 = shl i32 %283, 5, !dbg !10795
  %284 = load i32, i32* %A, align 4, !dbg !10795, !tbaa !2273
  %shr296 = lshr i32 %284, 27, !dbg !10795
  %or297 = or i32 %shl295, %shr296, !dbg !10795
  store i32 %or297, i32* %A, align 4, !dbg !10795, !tbaa !2273
  %285 = load i32, i32* %B, align 4, !dbg !10795, !tbaa !2273
  %286 = load i32, i32* %A, align 4, !dbg !10795, !tbaa !2273
  %add298 = add i32 %286, %285, !dbg !10795
  store i32 %add298, i32* %A, align 4, !dbg !10795, !tbaa !2273
  br label %do.end299, !dbg !10795

do.end299:                                        ; preds = %do.body287
  br label %do.body300, !dbg !10797

do.body300:                                       ; preds = %do.end299
  %287 = load i32, i32* %B, align 4, !dbg !10798, !tbaa !2273
  %288 = load i32, i32* %C, align 4, !dbg !10798, !tbaa !2273
  %289 = load i32, i32* %A, align 4, !dbg !10798, !tbaa !2273
  %290 = load i32, i32* %B, align 4, !dbg !10798, !tbaa !2273
  %xor301 = xor i32 %289, %290, !dbg !10798
  %and302 = and i32 %288, %xor301, !dbg !10798
  %xor303 = xor i32 %287, %and302, !dbg !10798
  %arrayidx304 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 10, !dbg !10798, !ctir !986
  %291 = load i32, i32* %arrayidx304, align 8, !dbg !10798, !tbaa !2273
  %add305 = add i32 %xor303, %291, !dbg !10798
  %add306 = add i32 %add305, 38016083, !dbg !10798
  %292 = load i32, i32* %D, align 4, !dbg !10798, !tbaa !2273
  %add307 = add i32 %292, %add306, !dbg !10798
  store i32 %add307, i32* %D, align 4, !dbg !10798, !tbaa !2273
  %293 = load i32, i32* %D, align 4, !dbg !10798, !tbaa !2273
  %shl308 = shl i32 %293, 9, !dbg !10798
  %294 = load i32, i32* %D, align 4, !dbg !10798, !tbaa !2273
  %shr309 = lshr i32 %294, 23, !dbg !10798
  %or310 = or i32 %shl308, %shr309, !dbg !10798
  store i32 %or310, i32* %D, align 4, !dbg !10798, !tbaa !2273
  %295 = load i32, i32* %A, align 4, !dbg !10798, !tbaa !2273
  %296 = load i32, i32* %D, align 4, !dbg !10798, !tbaa !2273
  %add311 = add i32 %296, %295, !dbg !10798
  store i32 %add311, i32* %D, align 4, !dbg !10798, !tbaa !2273
  br label %do.end312, !dbg !10798

do.end312:                                        ; preds = %do.body300
  br label %do.body313, !dbg !10800

do.body313:                                       ; preds = %do.end312
  %297 = load i32, i32* %A, align 4, !dbg !10801, !tbaa !2273
  %298 = load i32, i32* %B, align 4, !dbg !10801, !tbaa !2273
  %299 = load i32, i32* %D, align 4, !dbg !10801, !tbaa !2273
  %300 = load i32, i32* %A, align 4, !dbg !10801, !tbaa !2273
  %xor314 = xor i32 %299, %300, !dbg !10801
  %and315 = and i32 %298, %xor314, !dbg !10801
  %xor316 = xor i32 %297, %and315, !dbg !10801
  %arrayidx317 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 15, !dbg !10801, !ctir !986
  %301 = load i32, i32* %arrayidx317, align 4, !dbg !10801, !tbaa !2273
  %add318 = add i32 %xor316, %301, !dbg !10801
  %add319 = add i32 %add318, -660478335, !dbg !10801
  %302 = load i32, i32* %C, align 4, !dbg !10801, !tbaa !2273
  %add320 = add i32 %302, %add319, !dbg !10801
  store i32 %add320, i32* %C, align 4, !dbg !10801, !tbaa !2273
  %303 = load i32, i32* %C, align 4, !dbg !10801, !tbaa !2273
  %shl321 = shl i32 %303, 14, !dbg !10801
  %304 = load i32, i32* %C, align 4, !dbg !10801, !tbaa !2273
  %shr322 = lshr i32 %304, 18, !dbg !10801
  %or323 = or i32 %shl321, %shr322, !dbg !10801
  store i32 %or323, i32* %C, align 4, !dbg !10801, !tbaa !2273
  %305 = load i32, i32* %D, align 4, !dbg !10801, !tbaa !2273
  %306 = load i32, i32* %C, align 4, !dbg !10801, !tbaa !2273
  %add324 = add i32 %306, %305, !dbg !10801
  store i32 %add324, i32* %C, align 4, !dbg !10801, !tbaa !2273
  br label %do.end325, !dbg !10801

do.end325:                                        ; preds = %do.body313
  br label %do.body326, !dbg !10803

do.body326:                                       ; preds = %do.end325
  %307 = load i32, i32* %D, align 4, !dbg !10804, !tbaa !2273
  %308 = load i32, i32* %A, align 4, !dbg !10804, !tbaa !2273
  %309 = load i32, i32* %C, align 4, !dbg !10804, !tbaa !2273
  %310 = load i32, i32* %D, align 4, !dbg !10804, !tbaa !2273
  %xor327 = xor i32 %309, %310, !dbg !10804
  %and328 = and i32 %308, %xor327, !dbg !10804
  %xor329 = xor i32 %307, %and328, !dbg !10804
  %arrayidx330 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 4, !dbg !10804, !ctir !986
  %311 = load i32, i32* %arrayidx330, align 16, !dbg !10804, !tbaa !2273
  %add331 = add i32 %xor329, %311, !dbg !10804
  %add332 = add i32 %add331, -405537848, !dbg !10804
  %312 = load i32, i32* %B, align 4, !dbg !10804, !tbaa !2273
  %add333 = add i32 %312, %add332, !dbg !10804
  store i32 %add333, i32* %B, align 4, !dbg !10804, !tbaa !2273
  %313 = load i32, i32* %B, align 4, !dbg !10804, !tbaa !2273
  %shl334 = shl i32 %313, 20, !dbg !10804
  %314 = load i32, i32* %B, align 4, !dbg !10804, !tbaa !2273
  %shr335 = lshr i32 %314, 12, !dbg !10804
  %or336 = or i32 %shl334, %shr335, !dbg !10804
  store i32 %or336, i32* %B, align 4, !dbg !10804, !tbaa !2273
  %315 = load i32, i32* %C, align 4, !dbg !10804, !tbaa !2273
  %316 = load i32, i32* %B, align 4, !dbg !10804, !tbaa !2273
  %add337 = add i32 %316, %315, !dbg !10804
  store i32 %add337, i32* %B, align 4, !dbg !10804, !tbaa !2273
  br label %do.end338, !dbg !10804

do.end338:                                        ; preds = %do.body326
  br label %do.body339, !dbg !10806

do.body339:                                       ; preds = %do.end338
  %317 = load i32, i32* %C, align 4, !dbg !10807, !tbaa !2273
  %318 = load i32, i32* %D, align 4, !dbg !10807, !tbaa !2273
  %319 = load i32, i32* %B, align 4, !dbg !10807, !tbaa !2273
  %320 = load i32, i32* %C, align 4, !dbg !10807, !tbaa !2273
  %xor340 = xor i32 %319, %320, !dbg !10807
  %and341 = and i32 %318, %xor340, !dbg !10807
  %xor342 = xor i32 %317, %and341, !dbg !10807
  %arrayidx343 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 9, !dbg !10807, !ctir !986
  %321 = load i32, i32* %arrayidx343, align 4, !dbg !10807, !tbaa !2273
  %add344 = add i32 %xor342, %321, !dbg !10807
  %add345 = add i32 %add344, 568446438, !dbg !10807
  %322 = load i32, i32* %A, align 4, !dbg !10807, !tbaa !2273
  %add346 = add i32 %322, %add345, !dbg !10807
  store i32 %add346, i32* %A, align 4, !dbg !10807, !tbaa !2273
  %323 = load i32, i32* %A, align 4, !dbg !10807, !tbaa !2273
  %shl347 = shl i32 %323, 5, !dbg !10807
  %324 = load i32, i32* %A, align 4, !dbg !10807, !tbaa !2273
  %shr348 = lshr i32 %324, 27, !dbg !10807
  %or349 = or i32 %shl347, %shr348, !dbg !10807
  store i32 %or349, i32* %A, align 4, !dbg !10807, !tbaa !2273
  %325 = load i32, i32* %B, align 4, !dbg !10807, !tbaa !2273
  %326 = load i32, i32* %A, align 4, !dbg !10807, !tbaa !2273
  %add350 = add i32 %326, %325, !dbg !10807
  store i32 %add350, i32* %A, align 4, !dbg !10807, !tbaa !2273
  br label %do.end351, !dbg !10807

do.end351:                                        ; preds = %do.body339
  br label %do.body352, !dbg !10809

do.body352:                                       ; preds = %do.end351
  %327 = load i32, i32* %B, align 4, !dbg !10810, !tbaa !2273
  %328 = load i32, i32* %C, align 4, !dbg !10810, !tbaa !2273
  %329 = load i32, i32* %A, align 4, !dbg !10810, !tbaa !2273
  %330 = load i32, i32* %B, align 4, !dbg !10810, !tbaa !2273
  %xor353 = xor i32 %329, %330, !dbg !10810
  %and354 = and i32 %328, %xor353, !dbg !10810
  %xor355 = xor i32 %327, %and354, !dbg !10810
  %arrayidx356 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 14, !dbg !10810, !ctir !986
  %331 = load i32, i32* %arrayidx356, align 8, !dbg !10810, !tbaa !2273
  %add357 = add i32 %xor355, %331, !dbg !10810
  %add358 = add i32 %add357, -1019803690, !dbg !10810
  %332 = load i32, i32* %D, align 4, !dbg !10810, !tbaa !2273
  %add359 = add i32 %332, %add358, !dbg !10810
  store i32 %add359, i32* %D, align 4, !dbg !10810, !tbaa !2273
  %333 = load i32, i32* %D, align 4, !dbg !10810, !tbaa !2273
  %shl360 = shl i32 %333, 9, !dbg !10810
  %334 = load i32, i32* %D, align 4, !dbg !10810, !tbaa !2273
  %shr361 = lshr i32 %334, 23, !dbg !10810
  %or362 = or i32 %shl360, %shr361, !dbg !10810
  store i32 %or362, i32* %D, align 4, !dbg !10810, !tbaa !2273
  %335 = load i32, i32* %A, align 4, !dbg !10810, !tbaa !2273
  %336 = load i32, i32* %D, align 4, !dbg !10810, !tbaa !2273
  %add363 = add i32 %336, %335, !dbg !10810
  store i32 %add363, i32* %D, align 4, !dbg !10810, !tbaa !2273
  br label %do.end364, !dbg !10810

do.end364:                                        ; preds = %do.body352
  br label %do.body365, !dbg !10812

do.body365:                                       ; preds = %do.end364
  %337 = load i32, i32* %A, align 4, !dbg !10813, !tbaa !2273
  %338 = load i32, i32* %B, align 4, !dbg !10813, !tbaa !2273
  %339 = load i32, i32* %D, align 4, !dbg !10813, !tbaa !2273
  %340 = load i32, i32* %A, align 4, !dbg !10813, !tbaa !2273
  %xor366 = xor i32 %339, %340, !dbg !10813
  %and367 = and i32 %338, %xor366, !dbg !10813
  %xor368 = xor i32 %337, %and367, !dbg !10813
  %arrayidx369 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 3, !dbg !10813, !ctir !986
  %341 = load i32, i32* %arrayidx369, align 4, !dbg !10813, !tbaa !2273
  %add370 = add i32 %xor368, %341, !dbg !10813
  %add371 = add i32 %add370, -187363961, !dbg !10813
  %342 = load i32, i32* %C, align 4, !dbg !10813, !tbaa !2273
  %add372 = add i32 %342, %add371, !dbg !10813
  store i32 %add372, i32* %C, align 4, !dbg !10813, !tbaa !2273
  %343 = load i32, i32* %C, align 4, !dbg !10813, !tbaa !2273
  %shl373 = shl i32 %343, 14, !dbg !10813
  %344 = load i32, i32* %C, align 4, !dbg !10813, !tbaa !2273
  %shr374 = lshr i32 %344, 18, !dbg !10813
  %or375 = or i32 %shl373, %shr374, !dbg !10813
  store i32 %or375, i32* %C, align 4, !dbg !10813, !tbaa !2273
  %345 = load i32, i32* %D, align 4, !dbg !10813, !tbaa !2273
  %346 = load i32, i32* %C, align 4, !dbg !10813, !tbaa !2273
  %add376 = add i32 %346, %345, !dbg !10813
  store i32 %add376, i32* %C, align 4, !dbg !10813, !tbaa !2273
  br label %do.end377, !dbg !10813

do.end377:                                        ; preds = %do.body365
  br label %do.body378, !dbg !10815

do.body378:                                       ; preds = %do.end377
  %347 = load i32, i32* %D, align 4, !dbg !10816, !tbaa !2273
  %348 = load i32, i32* %A, align 4, !dbg !10816, !tbaa !2273
  %349 = load i32, i32* %C, align 4, !dbg !10816, !tbaa !2273
  %350 = load i32, i32* %D, align 4, !dbg !10816, !tbaa !2273
  %xor379 = xor i32 %349, %350, !dbg !10816
  %and380 = and i32 %348, %xor379, !dbg !10816
  %xor381 = xor i32 %347, %and380, !dbg !10816
  %arrayidx382 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 8, !dbg !10816, !ctir !986
  %351 = load i32, i32* %arrayidx382, align 16, !dbg !10816, !tbaa !2273
  %add383 = add i32 %xor381, %351, !dbg !10816
  %add384 = add i32 %add383, 1163531501, !dbg !10816
  %352 = load i32, i32* %B, align 4, !dbg !10816, !tbaa !2273
  %add385 = add i32 %352, %add384, !dbg !10816
  store i32 %add385, i32* %B, align 4, !dbg !10816, !tbaa !2273
  %353 = load i32, i32* %B, align 4, !dbg !10816, !tbaa !2273
  %shl386 = shl i32 %353, 20, !dbg !10816
  %354 = load i32, i32* %B, align 4, !dbg !10816, !tbaa !2273
  %shr387 = lshr i32 %354, 12, !dbg !10816
  %or388 = or i32 %shl386, %shr387, !dbg !10816
  store i32 %or388, i32* %B, align 4, !dbg !10816, !tbaa !2273
  %355 = load i32, i32* %C, align 4, !dbg !10816, !tbaa !2273
  %356 = load i32, i32* %B, align 4, !dbg !10816, !tbaa !2273
  %add389 = add i32 %356, %355, !dbg !10816
  store i32 %add389, i32* %B, align 4, !dbg !10816, !tbaa !2273
  br label %do.end390, !dbg !10816

do.end390:                                        ; preds = %do.body378
  br label %do.body391, !dbg !10818

do.body391:                                       ; preds = %do.end390
  %357 = load i32, i32* %C, align 4, !dbg !10819, !tbaa !2273
  %358 = load i32, i32* %D, align 4, !dbg !10819, !tbaa !2273
  %359 = load i32, i32* %B, align 4, !dbg !10819, !tbaa !2273
  %360 = load i32, i32* %C, align 4, !dbg !10819, !tbaa !2273
  %xor392 = xor i32 %359, %360, !dbg !10819
  %and393 = and i32 %358, %xor392, !dbg !10819
  %xor394 = xor i32 %357, %and393, !dbg !10819
  %arrayidx395 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 13, !dbg !10819, !ctir !986
  %361 = load i32, i32* %arrayidx395, align 4, !dbg !10819, !tbaa !2273
  %add396 = add i32 %xor394, %361, !dbg !10819
  %add397 = add i32 %add396, -1444681467, !dbg !10819
  %362 = load i32, i32* %A, align 4, !dbg !10819, !tbaa !2273
  %add398 = add i32 %362, %add397, !dbg !10819
  store i32 %add398, i32* %A, align 4, !dbg !10819, !tbaa !2273
  %363 = load i32, i32* %A, align 4, !dbg !10819, !tbaa !2273
  %shl399 = shl i32 %363, 5, !dbg !10819
  %364 = load i32, i32* %A, align 4, !dbg !10819, !tbaa !2273
  %shr400 = lshr i32 %364, 27, !dbg !10819
  %or401 = or i32 %shl399, %shr400, !dbg !10819
  store i32 %or401, i32* %A, align 4, !dbg !10819, !tbaa !2273
  %365 = load i32, i32* %B, align 4, !dbg !10819, !tbaa !2273
  %366 = load i32, i32* %A, align 4, !dbg !10819, !tbaa !2273
  %add402 = add i32 %366, %365, !dbg !10819
  store i32 %add402, i32* %A, align 4, !dbg !10819, !tbaa !2273
  br label %do.end403, !dbg !10819

do.end403:                                        ; preds = %do.body391
  br label %do.body404, !dbg !10821

do.body404:                                       ; preds = %do.end403
  %367 = load i32, i32* %B, align 4, !dbg !10822, !tbaa !2273
  %368 = load i32, i32* %C, align 4, !dbg !10822, !tbaa !2273
  %369 = load i32, i32* %A, align 4, !dbg !10822, !tbaa !2273
  %370 = load i32, i32* %B, align 4, !dbg !10822, !tbaa !2273
  %xor405 = xor i32 %369, %370, !dbg !10822
  %and406 = and i32 %368, %xor405, !dbg !10822
  %xor407 = xor i32 %367, %and406, !dbg !10822
  %arrayidx408 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 2, !dbg !10822, !ctir !986
  %371 = load i32, i32* %arrayidx408, align 8, !dbg !10822, !tbaa !2273
  %add409 = add i32 %xor407, %371, !dbg !10822
  %add410 = add i32 %add409, -51403784, !dbg !10822
  %372 = load i32, i32* %D, align 4, !dbg !10822, !tbaa !2273
  %add411 = add i32 %372, %add410, !dbg !10822
  store i32 %add411, i32* %D, align 4, !dbg !10822, !tbaa !2273
  %373 = load i32, i32* %D, align 4, !dbg !10822, !tbaa !2273
  %shl412 = shl i32 %373, 9, !dbg !10822
  %374 = load i32, i32* %D, align 4, !dbg !10822, !tbaa !2273
  %shr413 = lshr i32 %374, 23, !dbg !10822
  %or414 = or i32 %shl412, %shr413, !dbg !10822
  store i32 %or414, i32* %D, align 4, !dbg !10822, !tbaa !2273
  %375 = load i32, i32* %A, align 4, !dbg !10822, !tbaa !2273
  %376 = load i32, i32* %D, align 4, !dbg !10822, !tbaa !2273
  %add415 = add i32 %376, %375, !dbg !10822
  store i32 %add415, i32* %D, align 4, !dbg !10822, !tbaa !2273
  br label %do.end416, !dbg !10822

do.end416:                                        ; preds = %do.body404
  br label %do.body417, !dbg !10824

do.body417:                                       ; preds = %do.end416
  %377 = load i32, i32* %A, align 4, !dbg !10825, !tbaa !2273
  %378 = load i32, i32* %B, align 4, !dbg !10825, !tbaa !2273
  %379 = load i32, i32* %D, align 4, !dbg !10825, !tbaa !2273
  %380 = load i32, i32* %A, align 4, !dbg !10825, !tbaa !2273
  %xor418 = xor i32 %379, %380, !dbg !10825
  %and419 = and i32 %378, %xor418, !dbg !10825
  %xor420 = xor i32 %377, %and419, !dbg !10825
  %arrayidx421 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 7, !dbg !10825, !ctir !986
  %381 = load i32, i32* %arrayidx421, align 4, !dbg !10825, !tbaa !2273
  %add422 = add i32 %xor420, %381, !dbg !10825
  %add423 = add i32 %add422, 1735328473, !dbg !10825
  %382 = load i32, i32* %C, align 4, !dbg !10825, !tbaa !2273
  %add424 = add i32 %382, %add423, !dbg !10825
  store i32 %add424, i32* %C, align 4, !dbg !10825, !tbaa !2273
  %383 = load i32, i32* %C, align 4, !dbg !10825, !tbaa !2273
  %shl425 = shl i32 %383, 14, !dbg !10825
  %384 = load i32, i32* %C, align 4, !dbg !10825, !tbaa !2273
  %shr426 = lshr i32 %384, 18, !dbg !10825
  %or427 = or i32 %shl425, %shr426, !dbg !10825
  store i32 %or427, i32* %C, align 4, !dbg !10825, !tbaa !2273
  %385 = load i32, i32* %D, align 4, !dbg !10825, !tbaa !2273
  %386 = load i32, i32* %C, align 4, !dbg !10825, !tbaa !2273
  %add428 = add i32 %386, %385, !dbg !10825
  store i32 %add428, i32* %C, align 4, !dbg !10825, !tbaa !2273
  br label %do.end429, !dbg !10825

do.end429:                                        ; preds = %do.body417
  br label %do.body430, !dbg !10827

do.body430:                                       ; preds = %do.end429
  %387 = load i32, i32* %D, align 4, !dbg !10828, !tbaa !2273
  %388 = load i32, i32* %A, align 4, !dbg !10828, !tbaa !2273
  %389 = load i32, i32* %C, align 4, !dbg !10828, !tbaa !2273
  %390 = load i32, i32* %D, align 4, !dbg !10828, !tbaa !2273
  %xor431 = xor i32 %389, %390, !dbg !10828
  %and432 = and i32 %388, %xor431, !dbg !10828
  %xor433 = xor i32 %387, %and432, !dbg !10828
  %arrayidx434 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 12, !dbg !10828, !ctir !986
  %391 = load i32, i32* %arrayidx434, align 16, !dbg !10828, !tbaa !2273
  %add435 = add i32 %xor433, %391, !dbg !10828
  %add436 = add i32 %add435, -1926607734, !dbg !10828
  %392 = load i32, i32* %B, align 4, !dbg !10828, !tbaa !2273
  %add437 = add i32 %392, %add436, !dbg !10828
  store i32 %add437, i32* %B, align 4, !dbg !10828, !tbaa !2273
  %393 = load i32, i32* %B, align 4, !dbg !10828, !tbaa !2273
  %shl438 = shl i32 %393, 20, !dbg !10828
  %394 = load i32, i32* %B, align 4, !dbg !10828, !tbaa !2273
  %shr439 = lshr i32 %394, 12, !dbg !10828
  %or440 = or i32 %shl438, %shr439, !dbg !10828
  store i32 %or440, i32* %B, align 4, !dbg !10828, !tbaa !2273
  %395 = load i32, i32* %C, align 4, !dbg !10828, !tbaa !2273
  %396 = load i32, i32* %B, align 4, !dbg !10828, !tbaa !2273
  %add441 = add i32 %396, %395, !dbg !10828
  store i32 %add441, i32* %B, align 4, !dbg !10828, !tbaa !2273
  br label %do.end442, !dbg !10828

do.end442:                                        ; preds = %do.body430
  br label %do.body443, !dbg !10830

do.body443:                                       ; preds = %do.end442
  %397 = load i32, i32* %B, align 4, !dbg !10831, !tbaa !2273
  %398 = load i32, i32* %C, align 4, !dbg !10831, !tbaa !2273
  %xor444 = xor i32 %397, %398, !dbg !10831
  %399 = load i32, i32* %D, align 4, !dbg !10831, !tbaa !2273
  %xor445 = xor i32 %xor444, %399, !dbg !10831
  %arrayidx446 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 5, !dbg !10831, !ctir !986
  %400 = load i32, i32* %arrayidx446, align 4, !dbg !10831, !tbaa !2273
  %add447 = add i32 %xor445, %400, !dbg !10831
  %add448 = add i32 %add447, -378558, !dbg !10831
  %401 = load i32, i32* %A, align 4, !dbg !10831, !tbaa !2273
  %add449 = add i32 %401, %add448, !dbg !10831
  store i32 %add449, i32* %A, align 4, !dbg !10831, !tbaa !2273
  %402 = load i32, i32* %A, align 4, !dbg !10831, !tbaa !2273
  %shl450 = shl i32 %402, 4, !dbg !10831
  %403 = load i32, i32* %A, align 4, !dbg !10831, !tbaa !2273
  %shr451 = lshr i32 %403, 28, !dbg !10831
  %or452 = or i32 %shl450, %shr451, !dbg !10831
  store i32 %or452, i32* %A, align 4, !dbg !10831, !tbaa !2273
  %404 = load i32, i32* %B, align 4, !dbg !10831, !tbaa !2273
  %405 = load i32, i32* %A, align 4, !dbg !10831, !tbaa !2273
  %add453 = add i32 %405, %404, !dbg !10831
  store i32 %add453, i32* %A, align 4, !dbg !10831, !tbaa !2273
  br label %do.end454, !dbg !10831

do.end454:                                        ; preds = %do.body443
  br label %do.body455, !dbg !10833

do.body455:                                       ; preds = %do.end454
  %406 = load i32, i32* %A, align 4, !dbg !10834, !tbaa !2273
  %407 = load i32, i32* %B, align 4, !dbg !10834, !tbaa !2273
  %xor456 = xor i32 %406, %407, !dbg !10834
  %408 = load i32, i32* %C, align 4, !dbg !10834, !tbaa !2273
  %xor457 = xor i32 %xor456, %408, !dbg !10834
  %arrayidx458 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 8, !dbg !10834, !ctir !986
  %409 = load i32, i32* %arrayidx458, align 16, !dbg !10834, !tbaa !2273
  %add459 = add i32 %xor457, %409, !dbg !10834
  %add460 = add i32 %add459, -2022574463, !dbg !10834
  %410 = load i32, i32* %D, align 4, !dbg !10834, !tbaa !2273
  %add461 = add i32 %410, %add460, !dbg !10834
  store i32 %add461, i32* %D, align 4, !dbg !10834, !tbaa !2273
  %411 = load i32, i32* %D, align 4, !dbg !10834, !tbaa !2273
  %shl462 = shl i32 %411, 11, !dbg !10834
  %412 = load i32, i32* %D, align 4, !dbg !10834, !tbaa !2273
  %shr463 = lshr i32 %412, 21, !dbg !10834
  %or464 = or i32 %shl462, %shr463, !dbg !10834
  store i32 %or464, i32* %D, align 4, !dbg !10834, !tbaa !2273
  %413 = load i32, i32* %A, align 4, !dbg !10834, !tbaa !2273
  %414 = load i32, i32* %D, align 4, !dbg !10834, !tbaa !2273
  %add465 = add i32 %414, %413, !dbg !10834
  store i32 %add465, i32* %D, align 4, !dbg !10834, !tbaa !2273
  br label %do.end466, !dbg !10834

do.end466:                                        ; preds = %do.body455
  br label %do.body467, !dbg !10836

do.body467:                                       ; preds = %do.end466
  %415 = load i32, i32* %D, align 4, !dbg !10837, !tbaa !2273
  %416 = load i32, i32* %A, align 4, !dbg !10837, !tbaa !2273
  %xor468 = xor i32 %415, %416, !dbg !10837
  %417 = load i32, i32* %B, align 4, !dbg !10837, !tbaa !2273
  %xor469 = xor i32 %xor468, %417, !dbg !10837
  %arrayidx470 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 11, !dbg !10837, !ctir !986
  %418 = load i32, i32* %arrayidx470, align 4, !dbg !10837, !tbaa !2273
  %add471 = add i32 %xor469, %418, !dbg !10837
  %add472 = add i32 %add471, 1839030562, !dbg !10837
  %419 = load i32, i32* %C, align 4, !dbg !10837, !tbaa !2273
  %add473 = add i32 %419, %add472, !dbg !10837
  store i32 %add473, i32* %C, align 4, !dbg !10837, !tbaa !2273
  %420 = load i32, i32* %C, align 4, !dbg !10837, !tbaa !2273
  %shl474 = shl i32 %420, 16, !dbg !10837
  %421 = load i32, i32* %C, align 4, !dbg !10837, !tbaa !2273
  %shr475 = lshr i32 %421, 16, !dbg !10837
  %or476 = or i32 %shl474, %shr475, !dbg !10837
  store i32 %or476, i32* %C, align 4, !dbg !10837, !tbaa !2273
  %422 = load i32, i32* %D, align 4, !dbg !10837, !tbaa !2273
  %423 = load i32, i32* %C, align 4, !dbg !10837, !tbaa !2273
  %add477 = add i32 %423, %422, !dbg !10837
  store i32 %add477, i32* %C, align 4, !dbg !10837, !tbaa !2273
  br label %do.end478, !dbg !10837

do.end478:                                        ; preds = %do.body467
  br label %do.body479, !dbg !10839

do.body479:                                       ; preds = %do.end478
  %424 = load i32, i32* %C, align 4, !dbg !10840, !tbaa !2273
  %425 = load i32, i32* %D, align 4, !dbg !10840, !tbaa !2273
  %xor480 = xor i32 %424, %425, !dbg !10840
  %426 = load i32, i32* %A, align 4, !dbg !10840, !tbaa !2273
  %xor481 = xor i32 %xor480, %426, !dbg !10840
  %arrayidx482 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 14, !dbg !10840, !ctir !986
  %427 = load i32, i32* %arrayidx482, align 8, !dbg !10840, !tbaa !2273
  %add483 = add i32 %xor481, %427, !dbg !10840
  %add484 = add i32 %add483, -35309556, !dbg !10840
  %428 = load i32, i32* %B, align 4, !dbg !10840, !tbaa !2273
  %add485 = add i32 %428, %add484, !dbg !10840
  store i32 %add485, i32* %B, align 4, !dbg !10840, !tbaa !2273
  %429 = load i32, i32* %B, align 4, !dbg !10840, !tbaa !2273
  %shl486 = shl i32 %429, 23, !dbg !10840
  %430 = load i32, i32* %B, align 4, !dbg !10840, !tbaa !2273
  %shr487 = lshr i32 %430, 9, !dbg !10840
  %or488 = or i32 %shl486, %shr487, !dbg !10840
  store i32 %or488, i32* %B, align 4, !dbg !10840, !tbaa !2273
  %431 = load i32, i32* %C, align 4, !dbg !10840, !tbaa !2273
  %432 = load i32, i32* %B, align 4, !dbg !10840, !tbaa !2273
  %add489 = add i32 %432, %431, !dbg !10840
  store i32 %add489, i32* %B, align 4, !dbg !10840, !tbaa !2273
  br label %do.end490, !dbg !10840

do.end490:                                        ; preds = %do.body479
  br label %do.body491, !dbg !10842

do.body491:                                       ; preds = %do.end490
  %433 = load i32, i32* %B, align 4, !dbg !10843, !tbaa !2273
  %434 = load i32, i32* %C, align 4, !dbg !10843, !tbaa !2273
  %xor492 = xor i32 %433, %434, !dbg !10843
  %435 = load i32, i32* %D, align 4, !dbg !10843, !tbaa !2273
  %xor493 = xor i32 %xor492, %435, !dbg !10843
  %arrayidx494 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 1, !dbg !10843, !ctir !986
  %436 = load i32, i32* %arrayidx494, align 4, !dbg !10843, !tbaa !2273
  %add495 = add i32 %xor493, %436, !dbg !10843
  %add496 = add i32 %add495, -1530992060, !dbg !10843
  %437 = load i32, i32* %A, align 4, !dbg !10843, !tbaa !2273
  %add497 = add i32 %437, %add496, !dbg !10843
  store i32 %add497, i32* %A, align 4, !dbg !10843, !tbaa !2273
  %438 = load i32, i32* %A, align 4, !dbg !10843, !tbaa !2273
  %shl498 = shl i32 %438, 4, !dbg !10843
  %439 = load i32, i32* %A, align 4, !dbg !10843, !tbaa !2273
  %shr499 = lshr i32 %439, 28, !dbg !10843
  %or500 = or i32 %shl498, %shr499, !dbg !10843
  store i32 %or500, i32* %A, align 4, !dbg !10843, !tbaa !2273
  %440 = load i32, i32* %B, align 4, !dbg !10843, !tbaa !2273
  %441 = load i32, i32* %A, align 4, !dbg !10843, !tbaa !2273
  %add501 = add i32 %441, %440, !dbg !10843
  store i32 %add501, i32* %A, align 4, !dbg !10843, !tbaa !2273
  br label %do.end502, !dbg !10843

do.end502:                                        ; preds = %do.body491
  br label %do.body503, !dbg !10845

do.body503:                                       ; preds = %do.end502
  %442 = load i32, i32* %A, align 4, !dbg !10846, !tbaa !2273
  %443 = load i32, i32* %B, align 4, !dbg !10846, !tbaa !2273
  %xor504 = xor i32 %442, %443, !dbg !10846
  %444 = load i32, i32* %C, align 4, !dbg !10846, !tbaa !2273
  %xor505 = xor i32 %xor504, %444, !dbg !10846
  %arrayidx506 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 4, !dbg !10846, !ctir !986
  %445 = load i32, i32* %arrayidx506, align 16, !dbg !10846, !tbaa !2273
  %add507 = add i32 %xor505, %445, !dbg !10846
  %add508 = add i32 %add507, 1272893353, !dbg !10846
  %446 = load i32, i32* %D, align 4, !dbg !10846, !tbaa !2273
  %add509 = add i32 %446, %add508, !dbg !10846
  store i32 %add509, i32* %D, align 4, !dbg !10846, !tbaa !2273
  %447 = load i32, i32* %D, align 4, !dbg !10846, !tbaa !2273
  %shl510 = shl i32 %447, 11, !dbg !10846
  %448 = load i32, i32* %D, align 4, !dbg !10846, !tbaa !2273
  %shr511 = lshr i32 %448, 21, !dbg !10846
  %or512 = or i32 %shl510, %shr511, !dbg !10846
  store i32 %or512, i32* %D, align 4, !dbg !10846, !tbaa !2273
  %449 = load i32, i32* %A, align 4, !dbg !10846, !tbaa !2273
  %450 = load i32, i32* %D, align 4, !dbg !10846, !tbaa !2273
  %add513 = add i32 %450, %449, !dbg !10846
  store i32 %add513, i32* %D, align 4, !dbg !10846, !tbaa !2273
  br label %do.end514, !dbg !10846

do.end514:                                        ; preds = %do.body503
  br label %do.body515, !dbg !10848

do.body515:                                       ; preds = %do.end514
  %451 = load i32, i32* %D, align 4, !dbg !10849, !tbaa !2273
  %452 = load i32, i32* %A, align 4, !dbg !10849, !tbaa !2273
  %xor516 = xor i32 %451, %452, !dbg !10849
  %453 = load i32, i32* %B, align 4, !dbg !10849, !tbaa !2273
  %xor517 = xor i32 %xor516, %453, !dbg !10849
  %arrayidx518 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 7, !dbg !10849, !ctir !986
  %454 = load i32, i32* %arrayidx518, align 4, !dbg !10849, !tbaa !2273
  %add519 = add i32 %xor517, %454, !dbg !10849
  %add520 = add i32 %add519, -155497632, !dbg !10849
  %455 = load i32, i32* %C, align 4, !dbg !10849, !tbaa !2273
  %add521 = add i32 %455, %add520, !dbg !10849
  store i32 %add521, i32* %C, align 4, !dbg !10849, !tbaa !2273
  %456 = load i32, i32* %C, align 4, !dbg !10849, !tbaa !2273
  %shl522 = shl i32 %456, 16, !dbg !10849
  %457 = load i32, i32* %C, align 4, !dbg !10849, !tbaa !2273
  %shr523 = lshr i32 %457, 16, !dbg !10849
  %or524 = or i32 %shl522, %shr523, !dbg !10849
  store i32 %or524, i32* %C, align 4, !dbg !10849, !tbaa !2273
  %458 = load i32, i32* %D, align 4, !dbg !10849, !tbaa !2273
  %459 = load i32, i32* %C, align 4, !dbg !10849, !tbaa !2273
  %add525 = add i32 %459, %458, !dbg !10849
  store i32 %add525, i32* %C, align 4, !dbg !10849, !tbaa !2273
  br label %do.end526, !dbg !10849

do.end526:                                        ; preds = %do.body515
  br label %do.body527, !dbg !10851

do.body527:                                       ; preds = %do.end526
  %460 = load i32, i32* %C, align 4, !dbg !10852, !tbaa !2273
  %461 = load i32, i32* %D, align 4, !dbg !10852, !tbaa !2273
  %xor528 = xor i32 %460, %461, !dbg !10852
  %462 = load i32, i32* %A, align 4, !dbg !10852, !tbaa !2273
  %xor529 = xor i32 %xor528, %462, !dbg !10852
  %arrayidx530 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 10, !dbg !10852, !ctir !986
  %463 = load i32, i32* %arrayidx530, align 8, !dbg !10852, !tbaa !2273
  %add531 = add i32 %xor529, %463, !dbg !10852
  %add532 = add i32 %add531, -1094730640, !dbg !10852
  %464 = load i32, i32* %B, align 4, !dbg !10852, !tbaa !2273
  %add533 = add i32 %464, %add532, !dbg !10852
  store i32 %add533, i32* %B, align 4, !dbg !10852, !tbaa !2273
  %465 = load i32, i32* %B, align 4, !dbg !10852, !tbaa !2273
  %shl534 = shl i32 %465, 23, !dbg !10852
  %466 = load i32, i32* %B, align 4, !dbg !10852, !tbaa !2273
  %shr535 = lshr i32 %466, 9, !dbg !10852
  %or536 = or i32 %shl534, %shr535, !dbg !10852
  store i32 %or536, i32* %B, align 4, !dbg !10852, !tbaa !2273
  %467 = load i32, i32* %C, align 4, !dbg !10852, !tbaa !2273
  %468 = load i32, i32* %B, align 4, !dbg !10852, !tbaa !2273
  %add537 = add i32 %468, %467, !dbg !10852
  store i32 %add537, i32* %B, align 4, !dbg !10852, !tbaa !2273
  br label %do.end538, !dbg !10852

do.end538:                                        ; preds = %do.body527
  br label %do.body539, !dbg !10854

do.body539:                                       ; preds = %do.end538
  %469 = load i32, i32* %B, align 4, !dbg !10855, !tbaa !2273
  %470 = load i32, i32* %C, align 4, !dbg !10855, !tbaa !2273
  %xor540 = xor i32 %469, %470, !dbg !10855
  %471 = load i32, i32* %D, align 4, !dbg !10855, !tbaa !2273
  %xor541 = xor i32 %xor540, %471, !dbg !10855
  %arrayidx542 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 13, !dbg !10855, !ctir !986
  %472 = load i32, i32* %arrayidx542, align 4, !dbg !10855, !tbaa !2273
  %add543 = add i32 %xor541, %472, !dbg !10855
  %add544 = add i32 %add543, 681279174, !dbg !10855
  %473 = load i32, i32* %A, align 4, !dbg !10855, !tbaa !2273
  %add545 = add i32 %473, %add544, !dbg !10855
  store i32 %add545, i32* %A, align 4, !dbg !10855, !tbaa !2273
  %474 = load i32, i32* %A, align 4, !dbg !10855, !tbaa !2273
  %shl546 = shl i32 %474, 4, !dbg !10855
  %475 = load i32, i32* %A, align 4, !dbg !10855, !tbaa !2273
  %shr547 = lshr i32 %475, 28, !dbg !10855
  %or548 = or i32 %shl546, %shr547, !dbg !10855
  store i32 %or548, i32* %A, align 4, !dbg !10855, !tbaa !2273
  %476 = load i32, i32* %B, align 4, !dbg !10855, !tbaa !2273
  %477 = load i32, i32* %A, align 4, !dbg !10855, !tbaa !2273
  %add549 = add i32 %477, %476, !dbg !10855
  store i32 %add549, i32* %A, align 4, !dbg !10855, !tbaa !2273
  br label %do.end550, !dbg !10855

do.end550:                                        ; preds = %do.body539
  br label %do.body551, !dbg !10857

do.body551:                                       ; preds = %do.end550
  %478 = load i32, i32* %A, align 4, !dbg !10858, !tbaa !2273
  %479 = load i32, i32* %B, align 4, !dbg !10858, !tbaa !2273
  %xor552 = xor i32 %478, %479, !dbg !10858
  %480 = load i32, i32* %C, align 4, !dbg !10858, !tbaa !2273
  %xor553 = xor i32 %xor552, %480, !dbg !10858
  %arrayidx554 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10858, !ctir !986
  %481 = load i32, i32* %arrayidx554, align 16, !dbg !10858, !tbaa !2273
  %add555 = add i32 %xor553, %481, !dbg !10858
  %add556 = add i32 %add555, -358537222, !dbg !10858
  %482 = load i32, i32* %D, align 4, !dbg !10858, !tbaa !2273
  %add557 = add i32 %482, %add556, !dbg !10858
  store i32 %add557, i32* %D, align 4, !dbg !10858, !tbaa !2273
  %483 = load i32, i32* %D, align 4, !dbg !10858, !tbaa !2273
  %shl558 = shl i32 %483, 11, !dbg !10858
  %484 = load i32, i32* %D, align 4, !dbg !10858, !tbaa !2273
  %shr559 = lshr i32 %484, 21, !dbg !10858
  %or560 = or i32 %shl558, %shr559, !dbg !10858
  store i32 %or560, i32* %D, align 4, !dbg !10858, !tbaa !2273
  %485 = load i32, i32* %A, align 4, !dbg !10858, !tbaa !2273
  %486 = load i32, i32* %D, align 4, !dbg !10858, !tbaa !2273
  %add561 = add i32 %486, %485, !dbg !10858
  store i32 %add561, i32* %D, align 4, !dbg !10858, !tbaa !2273
  br label %do.end562, !dbg !10858

do.end562:                                        ; preds = %do.body551
  br label %do.body563, !dbg !10860

do.body563:                                       ; preds = %do.end562
  %487 = load i32, i32* %D, align 4, !dbg !10861, !tbaa !2273
  %488 = load i32, i32* %A, align 4, !dbg !10861, !tbaa !2273
  %xor564 = xor i32 %487, %488, !dbg !10861
  %489 = load i32, i32* %B, align 4, !dbg !10861, !tbaa !2273
  %xor565 = xor i32 %xor564, %489, !dbg !10861
  %arrayidx566 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 3, !dbg !10861, !ctir !986
  %490 = load i32, i32* %arrayidx566, align 4, !dbg !10861, !tbaa !2273
  %add567 = add i32 %xor565, %490, !dbg !10861
  %add568 = add i32 %add567, -722521979, !dbg !10861
  %491 = load i32, i32* %C, align 4, !dbg !10861, !tbaa !2273
  %add569 = add i32 %491, %add568, !dbg !10861
  store i32 %add569, i32* %C, align 4, !dbg !10861, !tbaa !2273
  %492 = load i32, i32* %C, align 4, !dbg !10861, !tbaa !2273
  %shl570 = shl i32 %492, 16, !dbg !10861
  %493 = load i32, i32* %C, align 4, !dbg !10861, !tbaa !2273
  %shr571 = lshr i32 %493, 16, !dbg !10861
  %or572 = or i32 %shl570, %shr571, !dbg !10861
  store i32 %or572, i32* %C, align 4, !dbg !10861, !tbaa !2273
  %494 = load i32, i32* %D, align 4, !dbg !10861, !tbaa !2273
  %495 = load i32, i32* %C, align 4, !dbg !10861, !tbaa !2273
  %add573 = add i32 %495, %494, !dbg !10861
  store i32 %add573, i32* %C, align 4, !dbg !10861, !tbaa !2273
  br label %do.end574, !dbg !10861

do.end574:                                        ; preds = %do.body563
  br label %do.body575, !dbg !10863

do.body575:                                       ; preds = %do.end574
  %496 = load i32, i32* %C, align 4, !dbg !10864, !tbaa !2273
  %497 = load i32, i32* %D, align 4, !dbg !10864, !tbaa !2273
  %xor576 = xor i32 %496, %497, !dbg !10864
  %498 = load i32, i32* %A, align 4, !dbg !10864, !tbaa !2273
  %xor577 = xor i32 %xor576, %498, !dbg !10864
  %arrayidx578 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 6, !dbg !10864, !ctir !986
  %499 = load i32, i32* %arrayidx578, align 8, !dbg !10864, !tbaa !2273
  %add579 = add i32 %xor577, %499, !dbg !10864
  %add580 = add i32 %add579, 76029189, !dbg !10864
  %500 = load i32, i32* %B, align 4, !dbg !10864, !tbaa !2273
  %add581 = add i32 %500, %add580, !dbg !10864
  store i32 %add581, i32* %B, align 4, !dbg !10864, !tbaa !2273
  %501 = load i32, i32* %B, align 4, !dbg !10864, !tbaa !2273
  %shl582 = shl i32 %501, 23, !dbg !10864
  %502 = load i32, i32* %B, align 4, !dbg !10864, !tbaa !2273
  %shr583 = lshr i32 %502, 9, !dbg !10864
  %or584 = or i32 %shl582, %shr583, !dbg !10864
  store i32 %or584, i32* %B, align 4, !dbg !10864, !tbaa !2273
  %503 = load i32, i32* %C, align 4, !dbg !10864, !tbaa !2273
  %504 = load i32, i32* %B, align 4, !dbg !10864, !tbaa !2273
  %add585 = add i32 %504, %503, !dbg !10864
  store i32 %add585, i32* %B, align 4, !dbg !10864, !tbaa !2273
  br label %do.end586, !dbg !10864

do.end586:                                        ; preds = %do.body575
  br label %do.body587, !dbg !10866

do.body587:                                       ; preds = %do.end586
  %505 = load i32, i32* %B, align 4, !dbg !10867, !tbaa !2273
  %506 = load i32, i32* %C, align 4, !dbg !10867, !tbaa !2273
  %xor588 = xor i32 %505, %506, !dbg !10867
  %507 = load i32, i32* %D, align 4, !dbg !10867, !tbaa !2273
  %xor589 = xor i32 %xor588, %507, !dbg !10867
  %arrayidx590 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 9, !dbg !10867, !ctir !986
  %508 = load i32, i32* %arrayidx590, align 4, !dbg !10867, !tbaa !2273
  %add591 = add i32 %xor589, %508, !dbg !10867
  %add592 = add i32 %add591, -640364487, !dbg !10867
  %509 = load i32, i32* %A, align 4, !dbg !10867, !tbaa !2273
  %add593 = add i32 %509, %add592, !dbg !10867
  store i32 %add593, i32* %A, align 4, !dbg !10867, !tbaa !2273
  %510 = load i32, i32* %A, align 4, !dbg !10867, !tbaa !2273
  %shl594 = shl i32 %510, 4, !dbg !10867
  %511 = load i32, i32* %A, align 4, !dbg !10867, !tbaa !2273
  %shr595 = lshr i32 %511, 28, !dbg !10867
  %or596 = or i32 %shl594, %shr595, !dbg !10867
  store i32 %or596, i32* %A, align 4, !dbg !10867, !tbaa !2273
  %512 = load i32, i32* %B, align 4, !dbg !10867, !tbaa !2273
  %513 = load i32, i32* %A, align 4, !dbg !10867, !tbaa !2273
  %add597 = add i32 %513, %512, !dbg !10867
  store i32 %add597, i32* %A, align 4, !dbg !10867, !tbaa !2273
  br label %do.end598, !dbg !10867

do.end598:                                        ; preds = %do.body587
  br label %do.body599, !dbg !10869

do.body599:                                       ; preds = %do.end598
  %514 = load i32, i32* %A, align 4, !dbg !10870, !tbaa !2273
  %515 = load i32, i32* %B, align 4, !dbg !10870, !tbaa !2273
  %xor600 = xor i32 %514, %515, !dbg !10870
  %516 = load i32, i32* %C, align 4, !dbg !10870, !tbaa !2273
  %xor601 = xor i32 %xor600, %516, !dbg !10870
  %arrayidx602 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 12, !dbg !10870, !ctir !986
  %517 = load i32, i32* %arrayidx602, align 16, !dbg !10870, !tbaa !2273
  %add603 = add i32 %xor601, %517, !dbg !10870
  %add604 = add i32 %add603, -421815835, !dbg !10870
  %518 = load i32, i32* %D, align 4, !dbg !10870, !tbaa !2273
  %add605 = add i32 %518, %add604, !dbg !10870
  store i32 %add605, i32* %D, align 4, !dbg !10870, !tbaa !2273
  %519 = load i32, i32* %D, align 4, !dbg !10870, !tbaa !2273
  %shl606 = shl i32 %519, 11, !dbg !10870
  %520 = load i32, i32* %D, align 4, !dbg !10870, !tbaa !2273
  %shr607 = lshr i32 %520, 21, !dbg !10870
  %or608 = or i32 %shl606, %shr607, !dbg !10870
  store i32 %or608, i32* %D, align 4, !dbg !10870, !tbaa !2273
  %521 = load i32, i32* %A, align 4, !dbg !10870, !tbaa !2273
  %522 = load i32, i32* %D, align 4, !dbg !10870, !tbaa !2273
  %add609 = add i32 %522, %521, !dbg !10870
  store i32 %add609, i32* %D, align 4, !dbg !10870, !tbaa !2273
  br label %do.end610, !dbg !10870

do.end610:                                        ; preds = %do.body599
  br label %do.body611, !dbg !10872

do.body611:                                       ; preds = %do.end610
  %523 = load i32, i32* %D, align 4, !dbg !10873, !tbaa !2273
  %524 = load i32, i32* %A, align 4, !dbg !10873, !tbaa !2273
  %xor612 = xor i32 %523, %524, !dbg !10873
  %525 = load i32, i32* %B, align 4, !dbg !10873, !tbaa !2273
  %xor613 = xor i32 %xor612, %525, !dbg !10873
  %arrayidx614 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 15, !dbg !10873, !ctir !986
  %526 = load i32, i32* %arrayidx614, align 4, !dbg !10873, !tbaa !2273
  %add615 = add i32 %xor613, %526, !dbg !10873
  %add616 = add i32 %add615, 530742520, !dbg !10873
  %527 = load i32, i32* %C, align 4, !dbg !10873, !tbaa !2273
  %add617 = add i32 %527, %add616, !dbg !10873
  store i32 %add617, i32* %C, align 4, !dbg !10873, !tbaa !2273
  %528 = load i32, i32* %C, align 4, !dbg !10873, !tbaa !2273
  %shl618 = shl i32 %528, 16, !dbg !10873
  %529 = load i32, i32* %C, align 4, !dbg !10873, !tbaa !2273
  %shr619 = lshr i32 %529, 16, !dbg !10873
  %or620 = or i32 %shl618, %shr619, !dbg !10873
  store i32 %or620, i32* %C, align 4, !dbg !10873, !tbaa !2273
  %530 = load i32, i32* %D, align 4, !dbg !10873, !tbaa !2273
  %531 = load i32, i32* %C, align 4, !dbg !10873, !tbaa !2273
  %add621 = add i32 %531, %530, !dbg !10873
  store i32 %add621, i32* %C, align 4, !dbg !10873, !tbaa !2273
  br label %do.end622, !dbg !10873

do.end622:                                        ; preds = %do.body611
  br label %do.body623, !dbg !10875

do.body623:                                       ; preds = %do.end622
  %532 = load i32, i32* %C, align 4, !dbg !10876, !tbaa !2273
  %533 = load i32, i32* %D, align 4, !dbg !10876, !tbaa !2273
  %xor624 = xor i32 %532, %533, !dbg !10876
  %534 = load i32, i32* %A, align 4, !dbg !10876, !tbaa !2273
  %xor625 = xor i32 %xor624, %534, !dbg !10876
  %arrayidx626 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 2, !dbg !10876, !ctir !986
  %535 = load i32, i32* %arrayidx626, align 8, !dbg !10876, !tbaa !2273
  %add627 = add i32 %xor625, %535, !dbg !10876
  %add628 = add i32 %add627, -995338651, !dbg !10876
  %536 = load i32, i32* %B, align 4, !dbg !10876, !tbaa !2273
  %add629 = add i32 %536, %add628, !dbg !10876
  store i32 %add629, i32* %B, align 4, !dbg !10876, !tbaa !2273
  %537 = load i32, i32* %B, align 4, !dbg !10876, !tbaa !2273
  %shl630 = shl i32 %537, 23, !dbg !10876
  %538 = load i32, i32* %B, align 4, !dbg !10876, !tbaa !2273
  %shr631 = lshr i32 %538, 9, !dbg !10876
  %or632 = or i32 %shl630, %shr631, !dbg !10876
  store i32 %or632, i32* %B, align 4, !dbg !10876, !tbaa !2273
  %539 = load i32, i32* %C, align 4, !dbg !10876, !tbaa !2273
  %540 = load i32, i32* %B, align 4, !dbg !10876, !tbaa !2273
  %add633 = add i32 %540, %539, !dbg !10876
  store i32 %add633, i32* %B, align 4, !dbg !10876, !tbaa !2273
  br label %do.end634, !dbg !10876

do.end634:                                        ; preds = %do.body623
  br label %do.body635, !dbg !10878

do.body635:                                       ; preds = %do.end634
  %541 = load i32, i32* %C, align 4, !dbg !10879, !tbaa !2273
  %542 = load i32, i32* %B, align 4, !dbg !10879, !tbaa !2273
  %543 = load i32, i32* %D, align 4, !dbg !10879, !tbaa !2273
  %neg = xor i32 %543, -1, !dbg !10879
  %or636 = or i32 %542, %neg, !dbg !10879
  %xor637 = xor i32 %541, %or636, !dbg !10879
  %arrayidx638 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 0, !dbg !10879, !ctir !986
  %544 = load i32, i32* %arrayidx638, align 16, !dbg !10879, !tbaa !2273
  %add639 = add i32 %xor637, %544, !dbg !10879
  %add640 = add i32 %add639, -198630844, !dbg !10879
  %545 = load i32, i32* %A, align 4, !dbg !10879, !tbaa !2273
  %add641 = add i32 %545, %add640, !dbg !10879
  store i32 %add641, i32* %A, align 4, !dbg !10879, !tbaa !2273
  %546 = load i32, i32* %A, align 4, !dbg !10879, !tbaa !2273
  %shl642 = shl i32 %546, 6, !dbg !10879
  %547 = load i32, i32* %A, align 4, !dbg !10879, !tbaa !2273
  %shr643 = lshr i32 %547, 26, !dbg !10879
  %or644 = or i32 %shl642, %shr643, !dbg !10879
  store i32 %or644, i32* %A, align 4, !dbg !10879, !tbaa !2273
  %548 = load i32, i32* %B, align 4, !dbg !10879, !tbaa !2273
  %549 = load i32, i32* %A, align 4, !dbg !10879, !tbaa !2273
  %add645 = add i32 %549, %548, !dbg !10879
  store i32 %add645, i32* %A, align 4, !dbg !10879, !tbaa !2273
  br label %do.end646, !dbg !10879

do.end646:                                        ; preds = %do.body635
  br label %do.body647, !dbg !10881

do.body647:                                       ; preds = %do.end646
  %550 = load i32, i32* %B, align 4, !dbg !10882, !tbaa !2273
  %551 = load i32, i32* %A, align 4, !dbg !10882, !tbaa !2273
  %552 = load i32, i32* %C, align 4, !dbg !10882, !tbaa !2273
  %neg648 = xor i32 %552, -1, !dbg !10882
  %or649 = or i32 %551, %neg648, !dbg !10882
  %xor650 = xor i32 %550, %or649, !dbg !10882
  %arrayidx651 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 7, !dbg !10882, !ctir !986
  %553 = load i32, i32* %arrayidx651, align 4, !dbg !10882, !tbaa !2273
  %add652 = add i32 %xor650, %553, !dbg !10882
  %add653 = add i32 %add652, 1126891415, !dbg !10882
  %554 = load i32, i32* %D, align 4, !dbg !10882, !tbaa !2273
  %add654 = add i32 %554, %add653, !dbg !10882
  store i32 %add654, i32* %D, align 4, !dbg !10882, !tbaa !2273
  %555 = load i32, i32* %D, align 4, !dbg !10882, !tbaa !2273
  %shl655 = shl i32 %555, 10, !dbg !10882
  %556 = load i32, i32* %D, align 4, !dbg !10882, !tbaa !2273
  %shr656 = lshr i32 %556, 22, !dbg !10882
  %or657 = or i32 %shl655, %shr656, !dbg !10882
  store i32 %or657, i32* %D, align 4, !dbg !10882, !tbaa !2273
  %557 = load i32, i32* %A, align 4, !dbg !10882, !tbaa !2273
  %558 = load i32, i32* %D, align 4, !dbg !10882, !tbaa !2273
  %add658 = add i32 %558, %557, !dbg !10882
  store i32 %add658, i32* %D, align 4, !dbg !10882, !tbaa !2273
  br label %do.end659, !dbg !10882

do.end659:                                        ; preds = %do.body647
  br label %do.body660, !dbg !10884

do.body660:                                       ; preds = %do.end659
  %559 = load i32, i32* %A, align 4, !dbg !10885, !tbaa !2273
  %560 = load i32, i32* %D, align 4, !dbg !10885, !tbaa !2273
  %561 = load i32, i32* %B, align 4, !dbg !10885, !tbaa !2273
  %neg661 = xor i32 %561, -1, !dbg !10885
  %or662 = or i32 %560, %neg661, !dbg !10885
  %xor663 = xor i32 %559, %or662, !dbg !10885
  %arrayidx664 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 14, !dbg !10885, !ctir !986
  %562 = load i32, i32* %arrayidx664, align 8, !dbg !10885, !tbaa !2273
  %add665 = add i32 %xor663, %562, !dbg !10885
  %add666 = add i32 %add665, -1416354905, !dbg !10885
  %563 = load i32, i32* %C, align 4, !dbg !10885, !tbaa !2273
  %add667 = add i32 %563, %add666, !dbg !10885
  store i32 %add667, i32* %C, align 4, !dbg !10885, !tbaa !2273
  %564 = load i32, i32* %C, align 4, !dbg !10885, !tbaa !2273
  %shl668 = shl i32 %564, 15, !dbg !10885
  %565 = load i32, i32* %C, align 4, !dbg !10885, !tbaa !2273
  %shr669 = lshr i32 %565, 17, !dbg !10885
  %or670 = or i32 %shl668, %shr669, !dbg !10885
  store i32 %or670, i32* %C, align 4, !dbg !10885, !tbaa !2273
  %566 = load i32, i32* %D, align 4, !dbg !10885, !tbaa !2273
  %567 = load i32, i32* %C, align 4, !dbg !10885, !tbaa !2273
  %add671 = add i32 %567, %566, !dbg !10885
  store i32 %add671, i32* %C, align 4, !dbg !10885, !tbaa !2273
  br label %do.end672, !dbg !10885

do.end672:                                        ; preds = %do.body660
  br label %do.body673, !dbg !10887

do.body673:                                       ; preds = %do.end672
  %568 = load i32, i32* %D, align 4, !dbg !10888, !tbaa !2273
  %569 = load i32, i32* %C, align 4, !dbg !10888, !tbaa !2273
  %570 = load i32, i32* %A, align 4, !dbg !10888, !tbaa !2273
  %neg674 = xor i32 %570, -1, !dbg !10888
  %or675 = or i32 %569, %neg674, !dbg !10888
  %xor676 = xor i32 %568, %or675, !dbg !10888
  %arrayidx677 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 5, !dbg !10888, !ctir !986
  %571 = load i32, i32* %arrayidx677, align 4, !dbg !10888, !tbaa !2273
  %add678 = add i32 %xor676, %571, !dbg !10888
  %add679 = add i32 %add678, -57434055, !dbg !10888
  %572 = load i32, i32* %B, align 4, !dbg !10888, !tbaa !2273
  %add680 = add i32 %572, %add679, !dbg !10888
  store i32 %add680, i32* %B, align 4, !dbg !10888, !tbaa !2273
  %573 = load i32, i32* %B, align 4, !dbg !10888, !tbaa !2273
  %shl681 = shl i32 %573, 21, !dbg !10888
  %574 = load i32, i32* %B, align 4, !dbg !10888, !tbaa !2273
  %shr682 = lshr i32 %574, 11, !dbg !10888
  %or683 = or i32 %shl681, %shr682, !dbg !10888
  store i32 %or683, i32* %B, align 4, !dbg !10888, !tbaa !2273
  %575 = load i32, i32* %C, align 4, !dbg !10888, !tbaa !2273
  %576 = load i32, i32* %B, align 4, !dbg !10888, !tbaa !2273
  %add684 = add i32 %576, %575, !dbg !10888
  store i32 %add684, i32* %B, align 4, !dbg !10888, !tbaa !2273
  br label %do.end685, !dbg !10888

do.end685:                                        ; preds = %do.body673
  br label %do.body686, !dbg !10890

do.body686:                                       ; preds = %do.end685
  %577 = load i32, i32* %C, align 4, !dbg !10891, !tbaa !2273
  %578 = load i32, i32* %B, align 4, !dbg !10891, !tbaa !2273
  %579 = load i32, i32* %D, align 4, !dbg !10891, !tbaa !2273
  %neg687 = xor i32 %579, -1, !dbg !10891
  %or688 = or i32 %578, %neg687, !dbg !10891
  %xor689 = xor i32 %577, %or688, !dbg !10891
  %arrayidx690 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 12, !dbg !10891, !ctir !986
  %580 = load i32, i32* %arrayidx690, align 16, !dbg !10891, !tbaa !2273
  %add691 = add i32 %xor689, %580, !dbg !10891
  %add692 = add i32 %add691, 1700485571, !dbg !10891
  %581 = load i32, i32* %A, align 4, !dbg !10891, !tbaa !2273
  %add693 = add i32 %581, %add692, !dbg !10891
  store i32 %add693, i32* %A, align 4, !dbg !10891, !tbaa !2273
  %582 = load i32, i32* %A, align 4, !dbg !10891, !tbaa !2273
  %shl694 = shl i32 %582, 6, !dbg !10891
  %583 = load i32, i32* %A, align 4, !dbg !10891, !tbaa !2273
  %shr695 = lshr i32 %583, 26, !dbg !10891
  %or696 = or i32 %shl694, %shr695, !dbg !10891
  store i32 %or696, i32* %A, align 4, !dbg !10891, !tbaa !2273
  %584 = load i32, i32* %B, align 4, !dbg !10891, !tbaa !2273
  %585 = load i32, i32* %A, align 4, !dbg !10891, !tbaa !2273
  %add697 = add i32 %585, %584, !dbg !10891
  store i32 %add697, i32* %A, align 4, !dbg !10891, !tbaa !2273
  br label %do.end698, !dbg !10891

do.end698:                                        ; preds = %do.body686
  br label %do.body699, !dbg !10893

do.body699:                                       ; preds = %do.end698
  %586 = load i32, i32* %B, align 4, !dbg !10894, !tbaa !2273
  %587 = load i32, i32* %A, align 4, !dbg !10894, !tbaa !2273
  %588 = load i32, i32* %C, align 4, !dbg !10894, !tbaa !2273
  %neg700 = xor i32 %588, -1, !dbg !10894
  %or701 = or i32 %587, %neg700, !dbg !10894
  %xor702 = xor i32 %586, %or701, !dbg !10894
  %arrayidx703 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 3, !dbg !10894, !ctir !986
  %589 = load i32, i32* %arrayidx703, align 4, !dbg !10894, !tbaa !2273
  %add704 = add i32 %xor702, %589, !dbg !10894
  %add705 = add i32 %add704, -1894986606, !dbg !10894
  %590 = load i32, i32* %D, align 4, !dbg !10894, !tbaa !2273
  %add706 = add i32 %590, %add705, !dbg !10894
  store i32 %add706, i32* %D, align 4, !dbg !10894, !tbaa !2273
  %591 = load i32, i32* %D, align 4, !dbg !10894, !tbaa !2273
  %shl707 = shl i32 %591, 10, !dbg !10894
  %592 = load i32, i32* %D, align 4, !dbg !10894, !tbaa !2273
  %shr708 = lshr i32 %592, 22, !dbg !10894
  %or709 = or i32 %shl707, %shr708, !dbg !10894
  store i32 %or709, i32* %D, align 4, !dbg !10894, !tbaa !2273
  %593 = load i32, i32* %A, align 4, !dbg !10894, !tbaa !2273
  %594 = load i32, i32* %D, align 4, !dbg !10894, !tbaa !2273
  %add710 = add i32 %594, %593, !dbg !10894
  store i32 %add710, i32* %D, align 4, !dbg !10894, !tbaa !2273
  br label %do.end711, !dbg !10894

do.end711:                                        ; preds = %do.body699
  br label %do.body712, !dbg !10896

do.body712:                                       ; preds = %do.end711
  %595 = load i32, i32* %A, align 4, !dbg !10897, !tbaa !2273
  %596 = load i32, i32* %D, align 4, !dbg !10897, !tbaa !2273
  %597 = load i32, i32* %B, align 4, !dbg !10897, !tbaa !2273
  %neg713 = xor i32 %597, -1, !dbg !10897
  %or714 = or i32 %596, %neg713, !dbg !10897
  %xor715 = xor i32 %595, %or714, !dbg !10897
  %arrayidx716 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 10, !dbg !10897, !ctir !986
  %598 = load i32, i32* %arrayidx716, align 8, !dbg !10897, !tbaa !2273
  %add717 = add i32 %xor715, %598, !dbg !10897
  %add718 = add i32 %add717, -1051523, !dbg !10897
  %599 = load i32, i32* %C, align 4, !dbg !10897, !tbaa !2273
  %add719 = add i32 %599, %add718, !dbg !10897
  store i32 %add719, i32* %C, align 4, !dbg !10897, !tbaa !2273
  %600 = load i32, i32* %C, align 4, !dbg !10897, !tbaa !2273
  %shl720 = shl i32 %600, 15, !dbg !10897
  %601 = load i32, i32* %C, align 4, !dbg !10897, !tbaa !2273
  %shr721 = lshr i32 %601, 17, !dbg !10897
  %or722 = or i32 %shl720, %shr721, !dbg !10897
  store i32 %or722, i32* %C, align 4, !dbg !10897, !tbaa !2273
  %602 = load i32, i32* %D, align 4, !dbg !10897, !tbaa !2273
  %603 = load i32, i32* %C, align 4, !dbg !10897, !tbaa !2273
  %add723 = add i32 %603, %602, !dbg !10897
  store i32 %add723, i32* %C, align 4, !dbg !10897, !tbaa !2273
  br label %do.end724, !dbg !10897

do.end724:                                        ; preds = %do.body712
  br label %do.body725, !dbg !10899

do.body725:                                       ; preds = %do.end724
  %604 = load i32, i32* %D, align 4, !dbg !10900, !tbaa !2273
  %605 = load i32, i32* %C, align 4, !dbg !10900, !tbaa !2273
  %606 = load i32, i32* %A, align 4, !dbg !10900, !tbaa !2273
  %neg726 = xor i32 %606, -1, !dbg !10900
  %or727 = or i32 %605, %neg726, !dbg !10900
  %xor728 = xor i32 %604, %or727, !dbg !10900
  %arrayidx729 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 1, !dbg !10900, !ctir !986
  %607 = load i32, i32* %arrayidx729, align 4, !dbg !10900, !tbaa !2273
  %add730 = add i32 %xor728, %607, !dbg !10900
  %add731 = add i32 %add730, -2054922799, !dbg !10900
  %608 = load i32, i32* %B, align 4, !dbg !10900, !tbaa !2273
  %add732 = add i32 %608, %add731, !dbg !10900
  store i32 %add732, i32* %B, align 4, !dbg !10900, !tbaa !2273
  %609 = load i32, i32* %B, align 4, !dbg !10900, !tbaa !2273
  %shl733 = shl i32 %609, 21, !dbg !10900
  %610 = load i32, i32* %B, align 4, !dbg !10900, !tbaa !2273
  %shr734 = lshr i32 %610, 11, !dbg !10900
  %or735 = or i32 %shl733, %shr734, !dbg !10900
  store i32 %or735, i32* %B, align 4, !dbg !10900, !tbaa !2273
  %611 = load i32, i32* %C, align 4, !dbg !10900, !tbaa !2273
  %612 = load i32, i32* %B, align 4, !dbg !10900, !tbaa !2273
  %add736 = add i32 %612, %611, !dbg !10900
  store i32 %add736, i32* %B, align 4, !dbg !10900, !tbaa !2273
  br label %do.end737, !dbg !10900

do.end737:                                        ; preds = %do.body725
  br label %do.body738, !dbg !10902

do.body738:                                       ; preds = %do.end737
  %613 = load i32, i32* %C, align 4, !dbg !10903, !tbaa !2273
  %614 = load i32, i32* %B, align 4, !dbg !10903, !tbaa !2273
  %615 = load i32, i32* %D, align 4, !dbg !10903, !tbaa !2273
  %neg739 = xor i32 %615, -1, !dbg !10903
  %or740 = or i32 %614, %neg739, !dbg !10903
  %xor741 = xor i32 %613, %or740, !dbg !10903
  %arrayidx742 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 8, !dbg !10903, !ctir !986
  %616 = load i32, i32* %arrayidx742, align 16, !dbg !10903, !tbaa !2273
  %add743 = add i32 %xor741, %616, !dbg !10903
  %add744 = add i32 %add743, 1873313359, !dbg !10903
  %617 = load i32, i32* %A, align 4, !dbg !10903, !tbaa !2273
  %add745 = add i32 %617, %add744, !dbg !10903
  store i32 %add745, i32* %A, align 4, !dbg !10903, !tbaa !2273
  %618 = load i32, i32* %A, align 4, !dbg !10903, !tbaa !2273
  %shl746 = shl i32 %618, 6, !dbg !10903
  %619 = load i32, i32* %A, align 4, !dbg !10903, !tbaa !2273
  %shr747 = lshr i32 %619, 26, !dbg !10903
  %or748 = or i32 %shl746, %shr747, !dbg !10903
  store i32 %or748, i32* %A, align 4, !dbg !10903, !tbaa !2273
  %620 = load i32, i32* %B, align 4, !dbg !10903, !tbaa !2273
  %621 = load i32, i32* %A, align 4, !dbg !10903, !tbaa !2273
  %add749 = add i32 %621, %620, !dbg !10903
  store i32 %add749, i32* %A, align 4, !dbg !10903, !tbaa !2273
  br label %do.end750, !dbg !10903

do.end750:                                        ; preds = %do.body738
  br label %do.body751, !dbg !10905

do.body751:                                       ; preds = %do.end750
  %622 = load i32, i32* %B, align 4, !dbg !10906, !tbaa !2273
  %623 = load i32, i32* %A, align 4, !dbg !10906, !tbaa !2273
  %624 = load i32, i32* %C, align 4, !dbg !10906, !tbaa !2273
  %neg752 = xor i32 %624, -1, !dbg !10906
  %or753 = or i32 %623, %neg752, !dbg !10906
  %xor754 = xor i32 %622, %or753, !dbg !10906
  %arrayidx755 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 15, !dbg !10906, !ctir !986
  %625 = load i32, i32* %arrayidx755, align 4, !dbg !10906, !tbaa !2273
  %add756 = add i32 %xor754, %625, !dbg !10906
  %add757 = add i32 %add756, -30611744, !dbg !10906
  %626 = load i32, i32* %D, align 4, !dbg !10906, !tbaa !2273
  %add758 = add i32 %626, %add757, !dbg !10906
  store i32 %add758, i32* %D, align 4, !dbg !10906, !tbaa !2273
  %627 = load i32, i32* %D, align 4, !dbg !10906, !tbaa !2273
  %shl759 = shl i32 %627, 10, !dbg !10906
  %628 = load i32, i32* %D, align 4, !dbg !10906, !tbaa !2273
  %shr760 = lshr i32 %628, 22, !dbg !10906
  %or761 = or i32 %shl759, %shr760, !dbg !10906
  store i32 %or761, i32* %D, align 4, !dbg !10906, !tbaa !2273
  %629 = load i32, i32* %A, align 4, !dbg !10906, !tbaa !2273
  %630 = load i32, i32* %D, align 4, !dbg !10906, !tbaa !2273
  %add762 = add i32 %630, %629, !dbg !10906
  store i32 %add762, i32* %D, align 4, !dbg !10906, !tbaa !2273
  br label %do.end763, !dbg !10906

do.end763:                                        ; preds = %do.body751
  br label %do.body764, !dbg !10908

do.body764:                                       ; preds = %do.end763
  %631 = load i32, i32* %A, align 4, !dbg !10909, !tbaa !2273
  %632 = load i32, i32* %D, align 4, !dbg !10909, !tbaa !2273
  %633 = load i32, i32* %B, align 4, !dbg !10909, !tbaa !2273
  %neg765 = xor i32 %633, -1, !dbg !10909
  %or766 = or i32 %632, %neg765, !dbg !10909
  %xor767 = xor i32 %631, %or766, !dbg !10909
  %arrayidx768 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 6, !dbg !10909, !ctir !986
  %634 = load i32, i32* %arrayidx768, align 8, !dbg !10909, !tbaa !2273
  %add769 = add i32 %xor767, %634, !dbg !10909
  %add770 = add i32 %add769, -1560198380, !dbg !10909
  %635 = load i32, i32* %C, align 4, !dbg !10909, !tbaa !2273
  %add771 = add i32 %635, %add770, !dbg !10909
  store i32 %add771, i32* %C, align 4, !dbg !10909, !tbaa !2273
  %636 = load i32, i32* %C, align 4, !dbg !10909, !tbaa !2273
  %shl772 = shl i32 %636, 15, !dbg !10909
  %637 = load i32, i32* %C, align 4, !dbg !10909, !tbaa !2273
  %shr773 = lshr i32 %637, 17, !dbg !10909
  %or774 = or i32 %shl772, %shr773, !dbg !10909
  store i32 %or774, i32* %C, align 4, !dbg !10909, !tbaa !2273
  %638 = load i32, i32* %D, align 4, !dbg !10909, !tbaa !2273
  %639 = load i32, i32* %C, align 4, !dbg !10909, !tbaa !2273
  %add775 = add i32 %639, %638, !dbg !10909
  store i32 %add775, i32* %C, align 4, !dbg !10909, !tbaa !2273
  br label %do.end776, !dbg !10909

do.end776:                                        ; preds = %do.body764
  br label %do.body777, !dbg !10911

do.body777:                                       ; preds = %do.end776
  %640 = load i32, i32* %D, align 4, !dbg !10912, !tbaa !2273
  %641 = load i32, i32* %C, align 4, !dbg !10912, !tbaa !2273
  %642 = load i32, i32* %A, align 4, !dbg !10912, !tbaa !2273
  %neg778 = xor i32 %642, -1, !dbg !10912
  %or779 = or i32 %641, %neg778, !dbg !10912
  %xor780 = xor i32 %640, %or779, !dbg !10912
  %arrayidx781 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 13, !dbg !10912, !ctir !986
  %643 = load i32, i32* %arrayidx781, align 4, !dbg !10912, !tbaa !2273
  %add782 = add i32 %xor780, %643, !dbg !10912
  %add783 = add i32 %add782, 1309151649, !dbg !10912
  %644 = load i32, i32* %B, align 4, !dbg !10912, !tbaa !2273
  %add784 = add i32 %644, %add783, !dbg !10912
  store i32 %add784, i32* %B, align 4, !dbg !10912, !tbaa !2273
  %645 = load i32, i32* %B, align 4, !dbg !10912, !tbaa !2273
  %shl785 = shl i32 %645, 21, !dbg !10912
  %646 = load i32, i32* %B, align 4, !dbg !10912, !tbaa !2273
  %shr786 = lshr i32 %646, 11, !dbg !10912
  %or787 = or i32 %shl785, %shr786, !dbg !10912
  store i32 %or787, i32* %B, align 4, !dbg !10912, !tbaa !2273
  %647 = load i32, i32* %C, align 4, !dbg !10912, !tbaa !2273
  %648 = load i32, i32* %B, align 4, !dbg !10912, !tbaa !2273
  %add788 = add i32 %648, %647, !dbg !10912
  store i32 %add788, i32* %B, align 4, !dbg !10912, !tbaa !2273
  br label %do.end789, !dbg !10912

do.end789:                                        ; preds = %do.body777
  br label %do.body790, !dbg !10914

do.body790:                                       ; preds = %do.end789
  %649 = load i32, i32* %C, align 4, !dbg !10915, !tbaa !2273
  %650 = load i32, i32* %B, align 4, !dbg !10915, !tbaa !2273
  %651 = load i32, i32* %D, align 4, !dbg !10915, !tbaa !2273
  %neg791 = xor i32 %651, -1, !dbg !10915
  %or792 = or i32 %650, %neg791, !dbg !10915
  %xor793 = xor i32 %649, %or792, !dbg !10915
  %arrayidx794 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 4, !dbg !10915, !ctir !986
  %652 = load i32, i32* %arrayidx794, align 16, !dbg !10915, !tbaa !2273
  %add795 = add i32 %xor793, %652, !dbg !10915
  %add796 = add i32 %add795, -145523070, !dbg !10915
  %653 = load i32, i32* %A, align 4, !dbg !10915, !tbaa !2273
  %add797 = add i32 %653, %add796, !dbg !10915
  store i32 %add797, i32* %A, align 4, !dbg !10915, !tbaa !2273
  %654 = load i32, i32* %A, align 4, !dbg !10915, !tbaa !2273
  %shl798 = shl i32 %654, 6, !dbg !10915
  %655 = load i32, i32* %A, align 4, !dbg !10915, !tbaa !2273
  %shr799 = lshr i32 %655, 26, !dbg !10915
  %or800 = or i32 %shl798, %shr799, !dbg !10915
  store i32 %or800, i32* %A, align 4, !dbg !10915, !tbaa !2273
  %656 = load i32, i32* %B, align 4, !dbg !10915, !tbaa !2273
  %657 = load i32, i32* %A, align 4, !dbg !10915, !tbaa !2273
  %add801 = add i32 %657, %656, !dbg !10915
  store i32 %add801, i32* %A, align 4, !dbg !10915, !tbaa !2273
  br label %do.end802, !dbg !10915

do.end802:                                        ; preds = %do.body790
  br label %do.body803, !dbg !10917

do.body803:                                       ; preds = %do.end802
  %658 = load i32, i32* %B, align 4, !dbg !10918, !tbaa !2273
  %659 = load i32, i32* %A, align 4, !dbg !10918, !tbaa !2273
  %660 = load i32, i32* %C, align 4, !dbg !10918, !tbaa !2273
  %neg804 = xor i32 %660, -1, !dbg !10918
  %or805 = or i32 %659, %neg804, !dbg !10918
  %xor806 = xor i32 %658, %or805, !dbg !10918
  %arrayidx807 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 11, !dbg !10918, !ctir !986
  %661 = load i32, i32* %arrayidx807, align 4, !dbg !10918, !tbaa !2273
  %add808 = add i32 %xor806, %661, !dbg !10918
  %add809 = add i32 %add808, -1120210379, !dbg !10918
  %662 = load i32, i32* %D, align 4, !dbg !10918, !tbaa !2273
  %add810 = add i32 %662, %add809, !dbg !10918
  store i32 %add810, i32* %D, align 4, !dbg !10918, !tbaa !2273
  %663 = load i32, i32* %D, align 4, !dbg !10918, !tbaa !2273
  %shl811 = shl i32 %663, 10, !dbg !10918
  %664 = load i32, i32* %D, align 4, !dbg !10918, !tbaa !2273
  %shr812 = lshr i32 %664, 22, !dbg !10918
  %or813 = or i32 %shl811, %shr812, !dbg !10918
  store i32 %or813, i32* %D, align 4, !dbg !10918, !tbaa !2273
  %665 = load i32, i32* %A, align 4, !dbg !10918, !tbaa !2273
  %666 = load i32, i32* %D, align 4, !dbg !10918, !tbaa !2273
  %add814 = add i32 %666, %665, !dbg !10918
  store i32 %add814, i32* %D, align 4, !dbg !10918, !tbaa !2273
  br label %do.end815, !dbg !10918

do.end815:                                        ; preds = %do.body803
  br label %do.body816, !dbg !10920

do.body816:                                       ; preds = %do.end815
  %667 = load i32, i32* %A, align 4, !dbg !10921, !tbaa !2273
  %668 = load i32, i32* %D, align 4, !dbg !10921, !tbaa !2273
  %669 = load i32, i32* %B, align 4, !dbg !10921, !tbaa !2273
  %neg817 = xor i32 %669, -1, !dbg !10921
  %or818 = or i32 %668, %neg817, !dbg !10921
  %xor819 = xor i32 %667, %or818, !dbg !10921
  %arrayidx820 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 2, !dbg !10921, !ctir !986
  %670 = load i32, i32* %arrayidx820, align 8, !dbg !10921, !tbaa !2273
  %add821 = add i32 %xor819, %670, !dbg !10921
  %add822 = add i32 %add821, 718787259, !dbg !10921
  %671 = load i32, i32* %C, align 4, !dbg !10921, !tbaa !2273
  %add823 = add i32 %671, %add822, !dbg !10921
  store i32 %add823, i32* %C, align 4, !dbg !10921, !tbaa !2273
  %672 = load i32, i32* %C, align 4, !dbg !10921, !tbaa !2273
  %shl824 = shl i32 %672, 15, !dbg !10921
  %673 = load i32, i32* %C, align 4, !dbg !10921, !tbaa !2273
  %shr825 = lshr i32 %673, 17, !dbg !10921
  %or826 = or i32 %shl824, %shr825, !dbg !10921
  store i32 %or826, i32* %C, align 4, !dbg !10921, !tbaa !2273
  %674 = load i32, i32* %D, align 4, !dbg !10921, !tbaa !2273
  %675 = load i32, i32* %C, align 4, !dbg !10921, !tbaa !2273
  %add827 = add i32 %675, %674, !dbg !10921
  store i32 %add827, i32* %C, align 4, !dbg !10921, !tbaa !2273
  br label %do.end828, !dbg !10921

do.end828:                                        ; preds = %do.body816
  br label %do.body829, !dbg !10923

do.body829:                                       ; preds = %do.end828
  %676 = load i32, i32* %D, align 4, !dbg !10924, !tbaa !2273
  %677 = load i32, i32* %C, align 4, !dbg !10924, !tbaa !2273
  %678 = load i32, i32* %A, align 4, !dbg !10924, !tbaa !2273
  %neg830 = xor i32 %678, -1, !dbg !10924
  %or831 = or i32 %677, %neg830, !dbg !10924
  %xor832 = xor i32 %676, %or831, !dbg !10924
  %arrayidx833 = getelementptr inbounds [16 x i32], [16 x i32]* %correct_words, i64 0, i64 9, !dbg !10924, !ctir !986
  %679 = load i32, i32* %arrayidx833, align 4, !dbg !10924, !tbaa !2273
  %add834 = add i32 %xor832, %679, !dbg !10924
  %add835 = add i32 %add834, -343485551, !dbg !10924
  %680 = load i32, i32* %B, align 4, !dbg !10924, !tbaa !2273
  %add836 = add i32 %680, %add835, !dbg !10924
  store i32 %add836, i32* %B, align 4, !dbg !10924, !tbaa !2273
  %681 = load i32, i32* %B, align 4, !dbg !10924, !tbaa !2273
  %shl837 = shl i32 %681, 21, !dbg !10924
  %682 = load i32, i32* %B, align 4, !dbg !10924, !tbaa !2273
  %shr838 = lshr i32 %682, 11, !dbg !10924
  %or839 = or i32 %shl837, %shr838, !dbg !10924
  store i32 %or839, i32* %B, align 4, !dbg !10924, !tbaa !2273
  %683 = load i32, i32* %C, align 4, !dbg !10924, !tbaa !2273
  %684 = load i32, i32* %B, align 4, !dbg !10924, !tbaa !2273
  %add840 = add i32 %684, %683, !dbg !10924
  store i32 %add840, i32* %B, align 4, !dbg !10924, !tbaa !2273
  br label %do.end841, !dbg !10924

do.end841:                                        ; preds = %do.body829
  %685 = load i32, i32* %A_save, align 4, !dbg !10926, !tbaa !2273
  %686 = load i32, i32* %A, align 4, !dbg !10927, !tbaa !2273
  %add842 = add i32 %686, %685, !dbg !10927
  store i32 %add842, i32* %A, align 4, !dbg !10927, !tbaa !2273
  %687 = load i32, i32* %B_save, align 4, !dbg !10928, !tbaa !2273
  %688 = load i32, i32* %B, align 4, !dbg !10929, !tbaa !2273
  %add843 = add i32 %688, %687, !dbg !10929
  store i32 %add843, i32* %B, align 4, !dbg !10929, !tbaa !2273
  %689 = load i32, i32* %C_save, align 4, !dbg !10930, !tbaa !2273
  %690 = load i32, i32* %C, align 4, !dbg !10931, !tbaa !2273
  %add844 = add i32 %690, %689, !dbg !10931
  store i32 %add844, i32* %C, align 4, !dbg !10931, !tbaa !2273
  %691 = load i32, i32* %D_save, align 4, !dbg !10932, !tbaa !2273
  %692 = load i32, i32* %D, align 4, !dbg !10933, !tbaa !2273
  %add845 = add i32 %692, %691, !dbg !10933
  store i32 %add845, i32* %D, align 4, !dbg !10933, !tbaa !2273
  br label %while.cond, !dbg !10714, !llvm.loop !10934

while.end:                                        ; preds = %while.cond
  %693 = load i32, i32* %A, align 4, !dbg !10936, !tbaa !2273
  %694 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10937, !tbaa !2286
  %A846 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %694, i32 0, i32 0, !dbg !10938, !ctir !927
  store i32 %693, i32* %A846, align 4, !dbg !10939, !tbaa !10540, !ctir !495
  %695 = load i32, i32* %B, align 4, !dbg !10940, !tbaa !2273
  %696 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10941, !tbaa !2286
  %B847 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %696, i32 0, i32 1, !dbg !10942, !ctir !927
  store i32 %695, i32* %B847, align 4, !dbg !10943, !tbaa !10545, !ctir !495
  %697 = load i32, i32* %C, align 4, !dbg !10944, !tbaa !2273
  %698 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10945, !tbaa !2286
  %C848 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %698, i32 0, i32 2, !dbg !10946, !ctir !927
  store i32 %697, i32* %C848, align 4, !dbg !10947, !tbaa !10549, !ctir !495
  %699 = load i32, i32* %D, align 4, !dbg !10948, !tbaa !2273
  %700 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !10949, !tbaa !2286
  %D849 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %700, i32 0, i32 3, !dbg !10950, !ctir !927
  store i32 %699, i32* %D849, align 4, !dbg !10951, !tbaa !10553, !ctir !495
  ret void, !dbg !10952
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @md5_stream(%struct._IO_FILE* %stream, i8* %resblock) #4 !dbg !10953 !ctir !946 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %resblock.addr = alloca i8*, align 8
  %buffer = alloca i8*, align 8, !ctir !9
  %ctx = alloca %struct.md5_ctx, align 4, !ctir !927
  %sum = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !10954, metadata !DIExpression()), !dbg !10955
  store i8* %resblock, i8** %resblock.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !10956, metadata !DIExpression()), !dbg !10957
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10958, !tbaa !2286
  %1 = load i8*, i8** %resblock.addr, align 8, !dbg !10959, !tbaa !2286
  %call = call i32 @afalg_stream(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.190, i64 0, i64 0), i8* %1, i64 16), !dbg !10960
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 -5, label %sw.bb1
  ], !dbg !10961

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10962
  br label %return, !dbg !10962

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10964
  br label %return, !dbg !10964

sw.epilog:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !10965, metadata !DIExpression()), !dbg !10966
  %call2 = call noalias i8* @malloc(i64 32840) #12, !dbg !10967
  store i8* %call2, i8** %buffer, align 8, !dbg !10966, !tbaa !2286
  %2 = load i8*, i8** %buffer, align 8, !dbg !10968, !tbaa !2286
  %tobool = icmp ne i8* %2, null, !dbg !10968
  br i1 %tobool, label %if.end, label %if.then, !dbg !10970

if.then:                                          ; preds = %sw.epilog
  store i32 1, i32* %retval, align 4, !dbg !10971
  br label %return, !dbg !10971

if.end:                                           ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.md5_ctx* %ctx, metadata !10972, metadata !DIExpression()), !dbg !10973
  call void @md5_init_ctx(%struct.md5_ctx* %ctx) #12, !dbg !10974
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !10975, metadata !DIExpression()), !dbg !10976
  br label %while.body, !dbg !10977

while.body:                                       ; preds = %if.end, %while.end
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10978, metadata !DIExpression()), !dbg !10980
  store i64 0, i64* %sum, align 8, !dbg !10981, !tbaa !2447
  br label %while.body4, !dbg !10982

while.body4:                                      ; preds = %while.body, %if.end18
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10983, !tbaa !2286
  %call5 = call i32 @feof_unlocked(%struct._IO_FILE* %3) #12, !dbg !10983
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10983
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10986

if.then7:                                         ; preds = %while.body4
  br label %process_partial_block, !dbg !10987

if.end8:                                          ; preds = %while.body4
  %4 = load i8*, i8** %buffer, align 8, !dbg !10988, !tbaa !2286
  %5 = load i64, i64* %sum, align 8, !dbg !10988, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !10988
  %6 = load i64, i64* %sum, align 8, !dbg !10988, !tbaa !2447
  %sub = sub i64 32768, %6, !dbg !10988
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10988, !tbaa !2286
  %call9 = call i64 @fread_unlocked(i8* %add.ptr, i64 1, i64 %sub, %struct._IO_FILE* %7), !dbg !10988
  store i64 %call9, i64* %n, align 8, !dbg !10989, !tbaa !2447
  %8 = load i64, i64* %n, align 8, !dbg !10990, !tbaa !2447
  %9 = load i64, i64* %sum, align 8, !dbg !10991, !tbaa !2447
  %add = add i64 %9, %8, !dbg !10991
  store i64 %add, i64* %sum, align 8, !dbg !10991, !tbaa !2447
  %10 = load i64, i64* %sum, align 8, !dbg !10992, !tbaa !2447
  %cmp = icmp eq i64 %10, 32768, !dbg !10994
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !10995

if.then10:                                        ; preds = %if.end8
  br label %while.end, !dbg !10996

if.end11:                                         ; preds = %if.end8
  %11 = load i64, i64* %n, align 8, !dbg !10997, !tbaa !2447
  %cmp12 = icmp eq i64 %11, 0, !dbg !10999
  br i1 %cmp12, label %if.then13, label %if.end18, !dbg !11000

if.then13:                                        ; preds = %if.end11
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11001, !tbaa !2286
  %call14 = call i32 @ferror_unlocked(%struct._IO_FILE* %12) #12, !dbg !11001
  %tobool15 = icmp ne i32 %call14, 0, !dbg !11001
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !11004

if.then16:                                        ; preds = %if.then13
  %13 = load i8*, i8** %buffer, align 8, !dbg !11005, !tbaa !2286
  call void @free(i8* %13) #12, !dbg !11007
  store i32 1, i32* %retval, align 4, !dbg !11008
  br label %return, !dbg !11008

if.end17:                                         ; preds = %if.then13
  br label %process_partial_block, !dbg !11009

if.end18:                                         ; preds = %if.end11
  br label %while.body4, !dbg !10982, !llvm.loop !11010

while.end:                                        ; preds = %if.then10
  %14 = load i8*, i8** %buffer, align 8, !dbg !11012, !tbaa !2286
  call void @md5_process_block(i8* %14, i64 32768, %struct.md5_ctx* %ctx) #12, !dbg !11013
  br label %while.body, !dbg !10977, !llvm.loop !11014

process_partial_block:                            ; preds = %if.end17, %if.then7
  call void @llvm.dbg.label(metadata !11016), !dbg !11017
  %15 = load i64, i64* %sum, align 8, !dbg !11018, !tbaa !2447
  %cmp19 = icmp ugt i64 %15, 0, !dbg !11020
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11021

if.then20:                                        ; preds = %process_partial_block
  %16 = load i8*, i8** %buffer, align 8, !dbg !11022, !tbaa !2286
  %17 = load i64, i64* %sum, align 8, !dbg !11023, !tbaa !2447
  call void @md5_process_bytes(i8* %16, i64 %17, %struct.md5_ctx* %ctx) #12, !dbg !11024
  br label %if.end21, !dbg !11024

if.end21:                                         ; preds = %if.then20, %process_partial_block
  %18 = load i8*, i8** %resblock.addr, align 8, !dbg !11025, !tbaa !2286
  %call22 = call i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %18) #12, !dbg !11026
  %19 = load i8*, i8** %buffer, align 8, !dbg !11027, !tbaa !2286
  call void @free(i8* %19) #12, !dbg !11028
  store i32 0, i32* %retval, align 4, !dbg !11029
  br label %return, !dbg !11029

return:                                           ; preds = %if.end21, %if.then16, %if.then, %sw.bb1, %sw.bb
  %20 = load i32, i32* %retval, align 4, !dbg !11030
  ret i32 %20, !dbg !11030
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @afalg_stream(%struct._IO_FILE* %stream, i8* %alg, i8* %resblock, i64 %hashlen) #4 !dbg !11031 !ctir !992 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %alg.addr = alloca i8*, align 8
  %resblock.addr = alloca i8*, align 8
  %hashlen.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11033, metadata !DIExpression()), !dbg !11034
  store i8* %alg, i8** %alg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %alg.addr, metadata !11035, metadata !DIExpression()), !dbg !11036
  store i8* %resblock, i8** %resblock.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !11037, metadata !DIExpression()), !dbg !11038
  store i64 %hashlen, i64* %hashlen.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %hashlen.addr, metadata !11039, metadata !DIExpression()), !dbg !11040
  ret i32 -97, !dbg !11041
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @md5_process_bytes(i8* %buffer, i64 %len, %struct.md5_ctx* %ctx) #4 !dbg !11042 !ctir !984 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.md5_ctx*, align 8
  %left_over = alloca i64, align 8, !ctir !55
  %add = alloca i64, align 8, !ctir !55
  %left_over52 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11043, metadata !DIExpression()), !dbg !11044
  store i64 %len, i64* %len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  store %struct.md5_ctx* %ctx, %struct.md5_ctx** %ctx.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.md5_ctx** %ctx.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  %0 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11049, !tbaa !2286
  %buflen = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %0, i32 0, i32 5, !dbg !11051, !ctir !927
  %1 = load i32, i32* %buflen, align 4, !dbg !11051, !tbaa !10563, !ctir !495
  %cmp = icmp ne i32 %1, 0, !dbg !11052
  br i1 %cmp, label %if.then, label %if.end30, !dbg !11053

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %left_over, metadata !11054, metadata !DIExpression()), !dbg !11056
  %2 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11057, !tbaa !2286
  %buflen1 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i32 0, i32 5, !dbg !11058, !ctir !927
  %3 = load i32, i32* %buflen1, align 4, !dbg !11058, !tbaa !10563, !ctir !495
  %conv = zext i32 %3 to i64, !dbg !11057
  store i64 %conv, i64* %left_over, align 8, !dbg !11056, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %add, metadata !11059, metadata !DIExpression()), !dbg !11060
  %4 = load i64, i64* %left_over, align 8, !dbg !11061, !tbaa !2447
  %sub = sub i64 128, %4, !dbg !11062
  %5 = load i64, i64* %len.addr, align 8, !dbg !11063, !tbaa !2447
  %cmp2 = icmp ugt i64 %sub, %5, !dbg !11064
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !11065

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %len.addr, align 8, !dbg !11066, !tbaa !2447
  br label %cond.end, !dbg !11065

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %left_over, align 8, !dbg !11067, !tbaa !2447
  %sub4 = sub i64 128, %7, !dbg !11068
  br label %cond.end, !dbg !11065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %sub4, %cond.false ], !dbg !11065
  store i64 %cond, i64* %add, align 8, !dbg !11060, !tbaa !2447
  %8 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11069, !tbaa !2286
  %buffer5 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %8, i32 0, i32 6, !dbg !11070, !ctir !927
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %buffer5, i64 0, i64 0, !dbg !11071
  %9 = bitcast i32* %arraydecay to i8*, !dbg !11071
  %10 = load i64, i64* %left_over, align 8, !dbg !11072, !tbaa !2447
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !11071, !ctir !9
  %11 = load i8*, i8** %buffer.addr, align 8, !dbg !11073, !tbaa !2286
  %12 = load i64, i64* %add, align 8, !dbg !11074, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %11, i64 %12, i1 false), !dbg !11075
  %13 = load i64, i64* %add, align 8, !dbg !11076, !tbaa !2447
  %14 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11077, !tbaa !2286
  %buflen6 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %14, i32 0, i32 5, !dbg !11078, !ctir !927
  %15 = load i32, i32* %buflen6, align 4, !dbg !11079, !tbaa !10563, !ctir !495
  %conv7 = zext i32 %15 to i64, !dbg !11079
  %add8 = add i64 %conv7, %13, !dbg !11079
  %conv9 = trunc i64 %add8 to i32, !dbg !11079
  store i32 %conv9, i32* %buflen6, align 4, !dbg !11079, !tbaa !10563, !ctir !495
  %16 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11080, !tbaa !2286
  %buflen10 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %16, i32 0, i32 5, !dbg !11082, !ctir !927
  %17 = load i32, i32* %buflen10, align 4, !dbg !11082, !tbaa !10563, !ctir !495
  %cmp11 = icmp ugt i32 %17, 64, !dbg !11083
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !11084

if.then13:                                        ; preds = %cond.end
  %18 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11085, !tbaa !2286
  %buffer14 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %18, i32 0, i32 6, !dbg !11087, !ctir !927
  %arraydecay15 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer14, i64 0, i64 0, !dbg !11085
  %19 = bitcast i32* %arraydecay15 to i8*, !dbg !11085
  %20 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11088, !tbaa !2286
  %buflen16 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %20, i32 0, i32 5, !dbg !11089, !ctir !927
  %21 = load i32, i32* %buflen16, align 4, !dbg !11089, !tbaa !10563, !ctir !495
  %and = and i32 %21, -64, !dbg !11090
  %conv17 = zext i32 %and to i64, !dbg !11088
  %22 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11091, !tbaa !2286
  call void @md5_process_block(i8* %19, i64 %conv17, %struct.md5_ctx* %22) #12, !dbg !11092
  %23 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11093, !tbaa !2286
  %buflen18 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %23, i32 0, i32 5, !dbg !11094, !ctir !927
  %24 = load i32, i32* %buflen18, align 4, !dbg !11095, !tbaa !10563, !ctir !495
  %and19 = and i32 %24, 63, !dbg !11095
  store i32 %and19, i32* %buflen18, align 4, !dbg !11095, !tbaa !10563, !ctir !495
  %25 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11096, !tbaa !2286
  %buffer20 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %25, i32 0, i32 6, !dbg !11097, !ctir !927
  %arraydecay21 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer20, i64 0, i64 0, !dbg !11098
  %26 = bitcast i32* %arraydecay21 to i8*, !dbg !11098
  %27 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11099, !tbaa !2286
  %buffer22 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %27, i32 0, i32 6, !dbg !11100, !ctir !927
  %arraydecay23 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer22, i64 0, i64 0, !dbg !11101
  %28 = bitcast i32* %arraydecay23 to i8*, !dbg !11101
  %29 = load i64, i64* %left_over, align 8, !dbg !11102, !tbaa !2447
  %30 = load i64, i64* %add, align 8, !dbg !11103, !tbaa !2447
  %add24 = add i64 %29, %30, !dbg !11104
  %and25 = and i64 %add24, -64, !dbg !11105
  %arrayidx26 = getelementptr inbounds i8, i8* %28, i64 %and25, !dbg !11101, !ctir !9
  %31 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11106, !tbaa !2286
  %buflen27 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %31, i32 0, i32 5, !dbg !11107, !ctir !927
  %32 = load i32, i32* %buflen27, align 4, !dbg !11107, !tbaa !10563, !ctir !495
  %conv28 = zext i32 %32 to i64, !dbg !11106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 1 %arrayidx26, i64 %conv28, i1 false), !dbg !11098
  br label %if.end, !dbg !11108

if.end:                                           ; preds = %if.then13, %cond.end
  %33 = load i8*, i8** %buffer.addr, align 8, !dbg !11109, !tbaa !2286
  %34 = load i64, i64* %add, align 8, !dbg !11110, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11111
  store i8* %add.ptr, i8** %buffer.addr, align 8, !dbg !11112, !tbaa !2286
  %35 = load i64, i64* %add, align 8, !dbg !11113, !tbaa !2447
  %36 = load i64, i64* %len.addr, align 8, !dbg !11114, !tbaa !2447
  %sub29 = sub i64 %36, %35, !dbg !11114
  store i64 %sub29, i64* %len.addr, align 8, !dbg !11114, !tbaa !2447
  br label %if.end30, !dbg !11115

if.end30:                                         ; preds = %if.end, %entry
  %37 = load i64, i64* %len.addr, align 8, !dbg !11116, !tbaa !2447
  %cmp31 = icmp uge i64 %37, 64, !dbg !11118
  br i1 %cmp31, label %if.then33, label %if.end48, !dbg !11119

if.then33:                                        ; preds = %if.end30
  %38 = load i8*, i8** %buffer.addr, align 8, !dbg !11120, !tbaa !2286
  %39 = ptrtoint i8* %38 to i64, !dbg !11120
  %rem = urem i64 %39, 4, !dbg !11120
  %cmp34 = icmp ne i64 %rem, 0, !dbg !11120
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !11123

if.then36:                                        ; preds = %if.then33
  br label %while.cond, !dbg !11124

while.cond:                                       ; preds = %while.body, %if.then36
  %40 = load i64, i64* %len.addr, align 8, !dbg !11125, !tbaa !2447
  %cmp37 = icmp ugt i64 %40, 64, !dbg !11126
  br i1 %cmp37, label %while.body, label %while.end, !dbg !11124

while.body:                                       ; preds = %while.cond
  %41 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11127, !tbaa !2286
  %buffer39 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %41, i32 0, i32 6, !dbg !11129, !ctir !927
  %arraydecay40 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer39, i64 0, i64 0, !dbg !11130
  %42 = bitcast i32* %arraydecay40 to i8*, !dbg !11130
  %43 = load i8*, i8** %buffer.addr, align 8, !dbg !11131, !tbaa !2286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 1 %43, i64 64, i1 false), !dbg !11130
  %44 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11132, !tbaa !2286
  call void @md5_process_block(i8* %42, i64 64, %struct.md5_ctx* %44) #12, !dbg !11133
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !11134, !tbaa !2286
  %add.ptr41 = getelementptr inbounds i8, i8* %45, i64 64, !dbg !11135
  store i8* %add.ptr41, i8** %buffer.addr, align 8, !dbg !11136, !tbaa !2286
  %46 = load i64, i64* %len.addr, align 8, !dbg !11137, !tbaa !2447
  %sub42 = sub i64 %46, 64, !dbg !11137
  store i64 %sub42, i64* %len.addr, align 8, !dbg !11137, !tbaa !2447
  br label %while.cond, !dbg !11124, !llvm.loop !11138

while.end:                                        ; preds = %while.cond
  br label %if.end47, !dbg !11124

if.else:                                          ; preds = %if.then33
  %47 = load i8*, i8** %buffer.addr, align 8, !dbg !11140, !tbaa !2286
  %48 = load i64, i64* %len.addr, align 8, !dbg !11142, !tbaa !2447
  %and43 = and i64 %48, -64, !dbg !11143
  %49 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11144, !tbaa !2286
  call void @md5_process_block(i8* %47, i64 %and43, %struct.md5_ctx* %49) #12, !dbg !11145
  %50 = load i8*, i8** %buffer.addr, align 8, !dbg !11146, !tbaa !2286
  %51 = load i64, i64* %len.addr, align 8, !dbg !11147, !tbaa !2447
  %and44 = and i64 %51, -64, !dbg !11148
  %add.ptr45 = getelementptr inbounds i8, i8* %50, i64 %and44, !dbg !11149
  store i8* %add.ptr45, i8** %buffer.addr, align 8, !dbg !11150, !tbaa !2286
  %52 = load i64, i64* %len.addr, align 8, !dbg !11151, !tbaa !2447
  %and46 = and i64 %52, 63, !dbg !11151
  store i64 %and46, i64* %len.addr, align 8, !dbg !11151, !tbaa !2447
  br label %if.end47

if.end47:                                         ; preds = %if.else, %while.end
  br label %if.end48, !dbg !11152

if.end48:                                         ; preds = %if.end47, %if.end30
  %53 = load i64, i64* %len.addr, align 8, !dbg !11153, !tbaa !2447
  %cmp49 = icmp ugt i64 %53, 0, !dbg !11155
  br i1 %cmp49, label %if.then51, label %if.end72, !dbg !11156

if.then51:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i64* %left_over52, metadata !11157, metadata !DIExpression()), !dbg !11159
  %54 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11160, !tbaa !2286
  %buflen53 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %54, i32 0, i32 5, !dbg !11161, !ctir !927
  %55 = load i32, i32* %buflen53, align 4, !dbg !11161, !tbaa !10563, !ctir !495
  %conv54 = zext i32 %55 to i64, !dbg !11160
  store i64 %conv54, i64* %left_over52, align 8, !dbg !11159, !tbaa !2447
  %56 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11162, !tbaa !2286
  %buffer55 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %56, i32 0, i32 6, !dbg !11163, !ctir !927
  %arraydecay56 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer55, i64 0, i64 0, !dbg !11164
  %57 = bitcast i32* %arraydecay56 to i8*, !dbg !11164
  %58 = load i64, i64* %left_over52, align 8, !dbg !11165, !tbaa !2447
  %arrayidx57 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11164, !ctir !9
  %59 = load i8*, i8** %buffer.addr, align 8, !dbg !11166, !tbaa !2286
  %60 = load i64, i64* %len.addr, align 8, !dbg !11167, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx57, i8* align 1 %59, i64 %60, i1 false), !dbg !11168
  %61 = load i64, i64* %len.addr, align 8, !dbg !11169, !tbaa !2447
  %62 = load i64, i64* %left_over52, align 8, !dbg !11170, !tbaa !2447
  %add58 = add i64 %62, %61, !dbg !11170
  store i64 %add58, i64* %left_over52, align 8, !dbg !11170, !tbaa !2447
  %63 = load i64, i64* %left_over52, align 8, !dbg !11171, !tbaa !2447
  %cmp59 = icmp uge i64 %63, 64, !dbg !11173
  br i1 %cmp59, label %if.then61, label %if.end69, !dbg !11174

if.then61:                                        ; preds = %if.then51
  %64 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11175, !tbaa !2286
  %buffer62 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %64, i32 0, i32 6, !dbg !11177, !ctir !927
  %arraydecay63 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer62, i64 0, i64 0, !dbg !11175
  %65 = bitcast i32* %arraydecay63 to i8*, !dbg !11175
  %66 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11178, !tbaa !2286
  call void @md5_process_block(i8* %65, i64 64, %struct.md5_ctx* %66) #12, !dbg !11179
  %67 = load i64, i64* %left_over52, align 8, !dbg !11180, !tbaa !2447
  %sub64 = sub i64 %67, 64, !dbg !11180
  store i64 %sub64, i64* %left_over52, align 8, !dbg !11180, !tbaa !2447
  %68 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11181, !tbaa !2286
  %buffer65 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %68, i32 0, i32 6, !dbg !11182, !ctir !927
  %arraydecay66 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer65, i64 0, i64 0, !dbg !11183
  %69 = bitcast i32* %arraydecay66 to i8*, !dbg !11183
  %70 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11184, !tbaa !2286
  %buffer67 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %70, i32 0, i32 6, !dbg !11185, !ctir !927
  %arrayidx68 = getelementptr inbounds [32 x i32], [32 x i32]* %buffer67, i64 0, i64 16, !dbg !11184, !ctir !510
  %71 = bitcast i32* %arrayidx68 to i8*, !dbg !11183
  %72 = load i64, i64* %left_over52, align 8, !dbg !11186, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %71, i64 %72, i1 false), !dbg !11183
  br label %if.end69, !dbg !11187

if.end69:                                         ; preds = %if.then61, %if.then51
  %73 = load i64, i64* %left_over52, align 8, !dbg !11188, !tbaa !2447
  %conv70 = trunc i64 %73 to i32, !dbg !11188
  %74 = load %struct.md5_ctx*, %struct.md5_ctx** %ctx.addr, align 8, !dbg !11189, !tbaa !2286
  %buflen71 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %74, i32 0, i32 5, !dbg !11190, !ctir !927
  store i32 %conv70, i32* %buflen71, align 4, !dbg !11191, !tbaa !10563, !ctir !495
  br label %if.end72, !dbg !11192

if.end72:                                         ; preds = %if.end69, %if.end48
  ret void, !dbg !11193
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @md5_buffer(i8* %buffer, i64 %len, i8* %resblock) #4 !dbg !11194 !ctir !982 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %resblock.addr = alloca i8*, align 8
  %ctx = alloca %struct.md5_ctx, align 4, !ctir !927
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  store i64 %len, i64* %len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11197, metadata !DIExpression()), !dbg !11198
  store i8* %resblock, i8** %resblock.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %resblock.addr, metadata !11199, metadata !DIExpression()), !dbg !11200
  call void @llvm.dbg.declare(metadata %struct.md5_ctx* %ctx, metadata !11201, metadata !DIExpression()), !dbg !11202
  call void @md5_init_ctx(%struct.md5_ctx* %ctx) #12, !dbg !11203
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !11204, !tbaa !2286
  %1 = load i64, i64* %len.addr, align 8, !dbg !11205, !tbaa !2447
  call void @md5_process_bytes(i8* %0, i64 %1, %struct.md5_ctx* %ctx) #12, !dbg !11206
  %2 = load i8*, i8** %resblock.addr, align 8, !dbg !11207, !tbaa !2286
  %call = call i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %2) #12, !dbg !11208
  ret i8* %call, !dbg !11209
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !11210 !ctir !1472 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11212, metadata !DIExpression()), !dbg !11213
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11214, metadata !DIExpression()), !dbg !11215
  store i64 %len, i64* %len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11216, metadata !DIExpression()), !dbg !11217
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !11220, metadata !DIExpression()), !dbg !11222
  %0 = load i32, i32* %fd.addr, align 4, !dbg !11222, !tbaa !2273
  %1 = load i64, i64* %offset.addr, align 8, !dbg !11222, !tbaa !2447
  %2 = load i64, i64* %len.addr, align 8, !dbg !11222, !tbaa !2447
  %3 = load i32, i32* %advice.addr, align 4, !dbg !11222, !tbaa !2438
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #12, !dbg !11222
  store i32 %call, i32* %__x, align 4, !dbg !11222, !tbaa !2273
  %4 = load i32, i32* %__x, align 4, !dbg !11222, !tbaa !2273
  ret void, !dbg !11223
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !11224 !ctir !1476 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !11225, metadata !DIExpression()), !dbg !11226
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11227, metadata !DIExpression()), !dbg !11228
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11229, !tbaa !2286
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !11229
  br i1 %tobool, label %if.then, label %if.end, !dbg !11231

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11232, !tbaa !2286
  %call = call i32 @fileno(%struct._IO_FILE* %1) #12, !dbg !11233
  %2 = load i32, i32* %advice.addr, align 4, !dbg !11234, !tbaa !2438
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !11235
  br label %if.end, !dbg !11235

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11236
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @filevercmp(i8* %s1, i8* %s2) #9 !dbg !11237 !ctir !481 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %s1_pos = alloca i8*, align 8, !ctir !88
  %s2_pos = alloca i8*, align 8, !ctir !88
  %s1_suffix = alloca i8*, align 8, !ctir !88
  %s2_suffix = alloca i8*, align 8, !ctir !88
  %s1_len = alloca i64, align 8, !ctir !55
  %s2_len = alloca i64, align 8, !ctir !55
  %result = alloca i32, align 4, !ctir !7
  %simple_cmp = alloca i32, align 4, !ctir !7
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11239, metadata !DIExpression()), !dbg !11240
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.declare(metadata i8** %s1_pos, metadata !11243, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.declare(metadata i8** %s2_pos, metadata !11245, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.declare(metadata i8** %s1_suffix, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.declare(metadata i8** %s2_suffix, metadata !11249, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata i64* %s1_len, metadata !11251, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.declare(metadata i64* %s2_len, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata i32* %simple_cmp, metadata !11257, metadata !DIExpression()), !dbg !11258
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11259, !tbaa !2286
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !11260, !tbaa !2286
  %call = call i32 @strcmp(i8* %0, i8* %1) #14, !dbg !11261
  store i32 %call, i32* %simple_cmp, align 4, !dbg !11258, !tbaa !2273
  %2 = load i32, i32* %simple_cmp, align 4, !dbg !11262, !tbaa !2273
  %cmp = icmp eq i32 %2, 0, !dbg !11264
  br i1 %cmp, label %if.then, label %if.end, !dbg !11265

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11266
  br label %return, !dbg !11266

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s1.addr, align 8, !dbg !11267, !tbaa !2286
  %4 = load i8, i8* %3, align 1, !dbg !11269, !tbaa !2438, !ctir !89
  %tobool = icmp ne i8 %4, 0, !dbg !11269
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11270

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !11271
  br label %return, !dbg !11271

if.end2:                                          ; preds = %if.end
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !11272, !tbaa !2286
  %6 = load i8, i8* %5, align 1, !dbg !11274, !tbaa !2438, !ctir !89
  %tobool3 = icmp ne i8 %6, 0, !dbg !11274
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11275

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !11276
  br label %return, !dbg !11276

if.end5:                                          ; preds = %if.end2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11277, !tbaa !2286
  %call6 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i64 0, i64 0), i8* %7) #14, !dbg !11279
  %cmp7 = icmp eq i32 0, %call6, !dbg !11280
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11281

if.then8:                                         ; preds = %if.end5
  store i32 -1, i32* %retval, align 4, !dbg !11282
  br label %return, !dbg !11282

if.end9:                                          ; preds = %if.end5
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !11283, !tbaa !2286
  %call10 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i64 0, i64 0), i8* %8) #14, !dbg !11285
  %cmp11 = icmp eq i32 0, %call10, !dbg !11286
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11287

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !11288
  br label %return, !dbg !11288

if.end13:                                         ; preds = %if.end9
  %9 = load i8*, i8** %s1.addr, align 8, !dbg !11289, !tbaa !2286
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.200, i64 0, i64 0), i8* %9) #14, !dbg !11291
  %cmp15 = icmp eq i32 0, %call14, !dbg !11292
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11293

if.then16:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !11294
  br label %return, !dbg !11294

if.end17:                                         ; preds = %if.end13
  %10 = load i8*, i8** %s2.addr, align 8, !dbg !11295, !tbaa !2286
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.200, i64 0, i64 0), i8* %10) #14, !dbg !11297
  %cmp19 = icmp eq i32 0, %call18, !dbg !11298
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11299

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !11300
  br label %return, !dbg !11300

if.end21:                                         ; preds = %if.end17
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !11301, !tbaa !2286
  %12 = load i8, i8* %11, align 1, !dbg !11303, !tbaa !2438, !ctir !89
  %conv = sext i8 %12 to i32, !dbg !11303
  %cmp22 = icmp eq i32 %conv, 46, !dbg !11304
  br i1 %cmp22, label %land.lhs.true, label %if.end28, !dbg !11305

land.lhs.true:                                    ; preds = %if.end21
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !11306, !tbaa !2286
  %14 = load i8, i8* %13, align 1, !dbg !11307, !tbaa !2438, !ctir !89
  %conv24 = sext i8 %14 to i32, !dbg !11307
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !11308
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11309

if.then27:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !11310
  br label %return, !dbg !11310

if.end28:                                         ; preds = %land.lhs.true, %if.end21
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !11311, !tbaa !2286
  %16 = load i8, i8* %15, align 1, !dbg !11313, !tbaa !2438, !ctir !89
  %conv29 = sext i8 %16 to i32, !dbg !11313
  %cmp30 = icmp ne i32 %conv29, 46, !dbg !11314
  br i1 %cmp30, label %land.lhs.true32, label %if.end37, !dbg !11315

land.lhs.true32:                                  ; preds = %if.end28
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !11316, !tbaa !2286
  %18 = load i8, i8* %17, align 1, !dbg !11317, !tbaa !2438, !ctir !89
  %conv33 = sext i8 %18 to i32, !dbg !11317
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !11318
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11319

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %retval, align 4, !dbg !11320
  br label %return, !dbg !11320

if.end37:                                         ; preds = %land.lhs.true32, %if.end28
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11321, !tbaa !2286
  %20 = load i8, i8* %19, align 1, !dbg !11323, !tbaa !2438, !ctir !89
  %conv38 = sext i8 %20 to i32, !dbg !11323
  %cmp39 = icmp eq i32 %conv38, 46, !dbg !11324
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !11325

land.lhs.true41:                                  ; preds = %if.end37
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !11326, !tbaa !2286
  %22 = load i8, i8* %21, align 1, !dbg !11327, !tbaa !2438, !ctir !89
  %conv42 = sext i8 %22 to i32, !dbg !11327
  %cmp43 = icmp eq i32 %conv42, 46, !dbg !11328
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11329

if.then45:                                        ; preds = %land.lhs.true41
  %23 = load i8*, i8** %s1.addr, align 8, !dbg !11330, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11330
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11330, !tbaa !2286
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11332, !tbaa !2286
  %incdec.ptr46 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11332
  store i8* %incdec.ptr46, i8** %s2.addr, align 8, !dbg !11332, !tbaa !2286
  br label %if.end47, !dbg !11333

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.end37
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !11334, !tbaa !2286
  store i8* %25, i8** %s1_pos, align 8, !dbg !11335, !tbaa !2286
  %26 = load i8*, i8** %s2.addr, align 8, !dbg !11336, !tbaa !2286
  store i8* %26, i8** %s2_pos, align 8, !dbg !11337, !tbaa !2286
  %call48 = call i8* @match_suffix(i8** %s1_pos), !dbg !11338
  store i8* %call48, i8** %s1_suffix, align 8, !dbg !11339, !tbaa !2286
  %call49 = call i8* @match_suffix(i8** %s2_pos), !dbg !11340
  store i8* %call49, i8** %s2_suffix, align 8, !dbg !11341, !tbaa !2286
  %27 = load i8*, i8** %s1_suffix, align 8, !dbg !11342, !tbaa !2286
  %tobool50 = icmp ne i8* %27, null, !dbg !11342
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !11342

cond.true:                                        ; preds = %if.end47
  %28 = load i8*, i8** %s1_suffix, align 8, !dbg !11343, !tbaa !2286
  br label %cond.end, !dbg !11342

cond.false:                                       ; preds = %if.end47
  %29 = load i8*, i8** %s1_pos, align 8, !dbg !11344, !tbaa !2286
  br label %cond.end, !dbg !11342

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %28, %cond.true ], [ %29, %cond.false ], !dbg !11342
  %30 = load i8*, i8** %s1.addr, align 8, !dbg !11345, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64, !dbg !11346
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !11346
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11346
  store i64 %sub.ptr.sub, i64* %s1_len, align 8, !dbg !11347, !tbaa !2447
  %31 = load i8*, i8** %s2_suffix, align 8, !dbg !11348, !tbaa !2286
  %tobool51 = icmp ne i8* %31, null, !dbg !11348
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !11348

cond.true52:                                      ; preds = %cond.end
  %32 = load i8*, i8** %s2_suffix, align 8, !dbg !11349, !tbaa !2286
  br label %cond.end54, !dbg !11348

cond.false53:                                     ; preds = %cond.end
  %33 = load i8*, i8** %s2_pos, align 8, !dbg !11350, !tbaa !2286
  br label %cond.end54, !dbg !11348

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %32, %cond.true52 ], [ %33, %cond.false53 ], !dbg !11348
  %34 = load i8*, i8** %s2.addr, align 8, !dbg !11351, !tbaa !2286
  %sub.ptr.lhs.cast56 = ptrtoint i8* %cond55 to i64, !dbg !11352
  %sub.ptr.rhs.cast57 = ptrtoint i8* %34 to i64, !dbg !11352
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57, !dbg !11352
  store i64 %sub.ptr.sub58, i64* %s2_len, align 8, !dbg !11353, !tbaa !2447
  %35 = load i8*, i8** %s1_suffix, align 8, !dbg !11354, !tbaa !2286
  %tobool59 = icmp ne i8* %35, null, !dbg !11354
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false, !dbg !11356

lor.lhs.false:                                    ; preds = %cond.end54
  %36 = load i8*, i8** %s2_suffix, align 8, !dbg !11357, !tbaa !2286
  %tobool60 = icmp ne i8* %36, null, !dbg !11357
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !11358

land.lhs.true61:                                  ; preds = %lor.lhs.false, %cond.end54
  %37 = load i64, i64* %s1_len, align 8, !dbg !11359, !tbaa !2447
  %38 = load i64, i64* %s2_len, align 8, !dbg !11360, !tbaa !2447
  %cmp62 = icmp eq i64 %37, %38, !dbg !11361
  br i1 %cmp62, label %land.lhs.true64, label %if.end75, !dbg !11362

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !11363, !tbaa !2286
  %40 = load i8*, i8** %s2.addr, align 8, !dbg !11364, !tbaa !2286
  %41 = load i64, i64* %s1_len, align 8, !dbg !11365, !tbaa !2447
  %call65 = call i32 @strncmp(i8* %39, i8* %40, i64 %41) #14, !dbg !11366
  %cmp66 = icmp eq i32 0, %call65, !dbg !11367
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !11368

if.then68:                                        ; preds = %land.lhs.true64
  %42 = load i8*, i8** %s1_pos, align 8, !dbg !11369, !tbaa !2286
  %43 = load i8*, i8** %s1.addr, align 8, !dbg !11371, !tbaa !2286
  %sub.ptr.lhs.cast69 = ptrtoint i8* %42 to i64, !dbg !11372
  %sub.ptr.rhs.cast70 = ptrtoint i8* %43 to i64, !dbg !11372
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !11372
  store i64 %sub.ptr.sub71, i64* %s1_len, align 8, !dbg !11373, !tbaa !2447
  %44 = load i8*, i8** %s2_pos, align 8, !dbg !11374, !tbaa !2286
  %45 = load i8*, i8** %s2.addr, align 8, !dbg !11375, !tbaa !2286
  %sub.ptr.lhs.cast72 = ptrtoint i8* %44 to i64, !dbg !11376
  %sub.ptr.rhs.cast73 = ptrtoint i8* %45 to i64, !dbg !11376
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !11376
  store i64 %sub.ptr.sub74, i64* %s2_len, align 8, !dbg !11377, !tbaa !2447
  br label %if.end75, !dbg !11378

if.end75:                                         ; preds = %if.then68, %land.lhs.true64, %land.lhs.true61, %lor.lhs.false
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !11379, !tbaa !2286
  %47 = load i64, i64* %s1_len, align 8, !dbg !11380, !tbaa !2447
  %48 = load i8*, i8** %s2.addr, align 8, !dbg !11381, !tbaa !2286
  %49 = load i64, i64* %s2_len, align 8, !dbg !11382, !tbaa !2447
  %call76 = call i32 @verrevcmp(i8* %46, i64 %47, i8* %48, i64 %49) #14, !dbg !11383
  store i32 %call76, i32* %result, align 4, !dbg !11384, !tbaa !2273
  %50 = load i32, i32* %result, align 4, !dbg !11385, !tbaa !2273
  %cmp77 = icmp eq i32 %50, 0, !dbg !11386
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !11385

cond.true79:                                      ; preds = %if.end75
  %51 = load i32, i32* %simple_cmp, align 4, !dbg !11387, !tbaa !2273
  br label %cond.end81, !dbg !11385

cond.false80:                                     ; preds = %if.end75
  %52 = load i32, i32* %result, align 4, !dbg !11388, !tbaa !2273
  br label %cond.end81, !dbg !11385

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ %51, %cond.true79 ], [ %52, %cond.false80 ], !dbg !11385
  store i32 %cond82, i32* %retval, align 4, !dbg !11389
  br label %return, !dbg !11389

return:                                           ; preds = %cond.end81, %if.then36, %if.then27, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !11390
  ret i32 %53, !dbg !11390
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @match_suffix(i8** %str) #4 !dbg !11391 !ctir !1515 {
entry:
  %str.addr = alloca i8**, align 8
  %match = alloca i8*, align 8, !ctir !88
  %read_alpha = alloca i8, align 1, !ctir !103
  store i8** %str, i8*** %str.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !11392, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.declare(metadata i8** %match, metadata !11394, metadata !DIExpression()), !dbg !11395
  store i8* null, i8** %match, align 8, !dbg !11395, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %read_alpha, metadata !11396, metadata !DIExpression()), !dbg !11397
  store i8 0, i8* %read_alpha, align 1, !dbg !11397, !tbaa !2430
  br label %while.cond, !dbg !11398

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !11399, !tbaa !2286
  %1 = load i8*, i8** %0, align 8, !dbg !11400, !tbaa !2286, !ctir !88
  %2 = load i8, i8* %1, align 1, !dbg !11401, !tbaa !2438, !ctir !89
  %tobool = icmp ne i8 %2, 0, !dbg !11398
  br i1 %tobool, label %while.body, label %while.end, !dbg !11398

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %read_alpha, align 1, !dbg !11402, !tbaa !2430
  %tobool1 = trunc i8 %3 to i1, !dbg !11402
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11405

if.then:                                          ; preds = %while.body
  store i8 0, i8* %read_alpha, align 1, !dbg !11406, !tbaa !2430
  %4 = load i8**, i8*** %str.addr, align 8, !dbg !11408, !tbaa !2286
  %5 = load i8*, i8** %4, align 8, !dbg !11410, !tbaa !2286, !ctir !88
  %6 = load i8, i8* %5, align 1, !dbg !11411, !tbaa !2438, !ctir !89
  %conv = sext i8 %6 to i32, !dbg !11411
  %call = call zeroext i1 @c_isalpha(i32 %conv), !dbg !11412
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !11413

land.lhs.true:                                    ; preds = %if.then
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !11414, !tbaa !2286
  %8 = load i8*, i8** %7, align 8, !dbg !11415, !tbaa !2286, !ctir !88
  %9 = load i8, i8* %8, align 1, !dbg !11416, !tbaa !2438, !ctir !89
  %conv2 = sext i8 %9 to i32, !dbg !11416
  %cmp = icmp ne i32 126, %conv2, !dbg !11417
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11418

if.then4:                                         ; preds = %land.lhs.true
  store i8* null, i8** %match, align 8, !dbg !11419, !tbaa !2286
  br label %if.end, !dbg !11420

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end22, !dbg !11421

if.else:                                          ; preds = %while.body
  %10 = load i8**, i8*** %str.addr, align 8, !dbg !11422, !tbaa !2286
  %11 = load i8*, i8** %10, align 8, !dbg !11424, !tbaa !2286, !ctir !88
  %12 = load i8, i8* %11, align 1, !dbg !11425, !tbaa !2438, !ctir !89
  %conv5 = sext i8 %12 to i32, !dbg !11425
  %cmp6 = icmp eq i32 46, %conv5, !dbg !11426
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !11427

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %read_alpha, align 1, !dbg !11428, !tbaa !2430
  %13 = load i8*, i8** %match, align 8, !dbg !11430, !tbaa !2286
  %tobool9 = icmp ne i8* %13, null, !dbg !11430
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11432

if.then10:                                        ; preds = %if.then8
  %14 = load i8**, i8*** %str.addr, align 8, !dbg !11433, !tbaa !2286
  %15 = load i8*, i8** %14, align 8, !dbg !11434, !tbaa !2286, !ctir !88
  store i8* %15, i8** %match, align 8, !dbg !11435, !tbaa !2286
  br label %if.end11, !dbg !11436

if.end11:                                         ; preds = %if.then10, %if.then8
  br label %if.end21, !dbg !11437

if.else12:                                        ; preds = %if.else
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !11438, !tbaa !2286
  %17 = load i8*, i8** %16, align 8, !dbg !11440, !tbaa !2286, !ctir !88
  %18 = load i8, i8* %17, align 1, !dbg !11441, !tbaa !2438, !ctir !89
  %conv13 = sext i8 %18 to i32, !dbg !11441
  %call14 = call zeroext i1 @c_isalnum(i32 %conv13), !dbg !11442
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !11443

land.lhs.true15:                                  ; preds = %if.else12
  %19 = load i8**, i8*** %str.addr, align 8, !dbg !11444, !tbaa !2286
  %20 = load i8*, i8** %19, align 8, !dbg !11445, !tbaa !2286, !ctir !88
  %21 = load i8, i8* %20, align 1, !dbg !11446, !tbaa !2438, !ctir !89
  %conv16 = sext i8 %21 to i32, !dbg !11446
  %cmp17 = icmp ne i32 126, %conv16, !dbg !11447
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11448

if.then19:                                        ; preds = %land.lhs.true15
  store i8* null, i8** %match, align 8, !dbg !11449, !tbaa !2286
  br label %if.end20, !dbg !11450

if.end20:                                         ; preds = %if.then19, %land.lhs.true15, %if.else12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !11451, !tbaa !2286
  %23 = load i8*, i8** %22, align 8, !dbg !11452, !tbaa !2286, !ctir !88
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11452
  store i8* %incdec.ptr, i8** %22, align 8, !dbg !11452, !tbaa !2286, !ctir !88
  br label %while.cond, !dbg !11398, !llvm.loop !11453

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %match, align 8, !dbg !11455, !tbaa !2286
  ret i8* %24, !dbg !11456
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @verrevcmp(i8* %s1, i64 %s1_len, i8* %s2, i64 %s2_len) #9 !dbg !11457 !ctir !1517 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1_len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2_len.addr = alloca i64, align 8
  %s1_pos = alloca i64, align 8, !ctir !55
  %s2_pos = alloca i64, align 8, !ctir !55
  %first_diff = alloca i32, align 4, !ctir !7
  %s1_c = alloca i32, align 4, !ctir !7
  %s2_c = alloca i32, align 4, !ctir !7
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11458, metadata !DIExpression()), !dbg !11459
  store i64 %s1_len, i64* %s1_len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1_len.addr, metadata !11460, metadata !DIExpression()), !dbg !11461
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  store i64 %s2_len, i64* %s2_len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2_len.addr, metadata !11464, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.declare(metadata i64* %s1_pos, metadata !11466, metadata !DIExpression()), !dbg !11467
  store i64 0, i64* %s1_pos, align 8, !dbg !11467, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2_pos, metadata !11468, metadata !DIExpression()), !dbg !11469
  store i64 0, i64* %s2_pos, align 8, !dbg !11469, !tbaa !2447
  br label %while.cond, !dbg !11470

while.cond:                                       ; preds = %if.end77, %entry
  %0 = load i64, i64* %s1_pos, align 8, !dbg !11471, !tbaa !2447
  %1 = load i64, i64* %s1_len.addr, align 8, !dbg !11472, !tbaa !2447
  %cmp = icmp ult i64 %0, %1, !dbg !11473
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11474

lor.rhs:                                          ; preds = %while.cond
  %2 = load i64, i64* %s2_pos, align 8, !dbg !11475, !tbaa !2447
  %3 = load i64, i64* %s2_len.addr, align 8, !dbg !11476, !tbaa !2447
  %cmp1 = icmp ult i64 %2, %3, !dbg !11477
  br label %lor.end, !dbg !11474

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end78, !dbg !11470

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %first_diff, metadata !11478, metadata !DIExpression()), !dbg !11480
  store i32 0, i32* %first_diff, align 4, !dbg !11480, !tbaa !2273
  br label %while.cond2, !dbg !11481

while.cond2:                                      ; preds = %if.end, %while.body
  %5 = load i64, i64* %s1_pos, align 8, !dbg !11482, !tbaa !2447
  %6 = load i64, i64* %s1_len.addr, align 8, !dbg !11483, !tbaa !2447
  %cmp3 = icmp ult i64 %5, %6, !dbg !11484
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs4, !dbg !11485

land.lhs.true:                                    ; preds = %while.cond2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11486, !tbaa !2286
  %8 = load i64, i64* %s1_pos, align 8, !dbg !11487, !tbaa !2447
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !11486, !ctir !88
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11486, !tbaa !2438
  %conv = sext i8 %9 to i32, !dbg !11486
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11488
  br i1 %call, label %lor.rhs4, label %lor.end10, !dbg !11489

lor.rhs4:                                         ; preds = %land.lhs.true, %while.cond2
  %10 = load i64, i64* %s2_pos, align 8, !dbg !11490, !tbaa !2447
  %11 = load i64, i64* %s2_len.addr, align 8, !dbg !11491, !tbaa !2447
  %cmp5 = icmp ult i64 %10, %11, !dbg !11492
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !11493

land.rhs:                                         ; preds = %lor.rhs4
  %12 = load i8*, i8** %s2.addr, align 8, !dbg !11494, !tbaa !2286
  %13 = load i64, i64* %s2_pos, align 8, !dbg !11495, !tbaa !2447
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !11494, !ctir !88
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !11494, !tbaa !2438
  %conv8 = sext i8 %14 to i32, !dbg !11494
  %call9 = call zeroext i1 @c_isdigit(i32 %conv8), !dbg !11496
  %lnot = xor i1 %call9, true, !dbg !11497
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs4
  %15 = phi i1 [ false, %lor.rhs4 ], [ %lnot, %land.rhs ], !dbg !11498
  br label %lor.end10, !dbg !11489

lor.end10:                                        ; preds = %land.end, %land.lhs.true
  %16 = phi i1 [ true, %land.lhs.true ], [ %15, %land.end ]
  br i1 %16, label %while.body11, label %while.end, !dbg !11481

while.body11:                                     ; preds = %lor.end10
  call void @llvm.dbg.declare(metadata i32* %s1_c, metadata !11499, metadata !DIExpression()), !dbg !11501
  %17 = load i64, i64* %s1_pos, align 8, !dbg !11502, !tbaa !2447
  %18 = load i64, i64* %s1_len.addr, align 8, !dbg !11503, !tbaa !2447
  %cmp12 = icmp eq i64 %17, %18, !dbg !11504
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !11505

cond.true:                                        ; preds = %while.body11
  br label %cond.end, !dbg !11505

cond.false:                                       ; preds = %while.body11
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11506, !tbaa !2286
  %20 = load i64, i64* %s1_pos, align 8, !dbg !11507, !tbaa !2447
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !11506, !ctir !88
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !11506, !tbaa !2438
  %call15 = call i32 @order(i8 zeroext %21), !dbg !11508
  br label %cond.end, !dbg !11505

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call15, %cond.false ], !dbg !11505
  store i32 %cond, i32* %s1_c, align 4, !dbg !11501, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %s2_c, metadata !11509, metadata !DIExpression()), !dbg !11510
  %22 = load i64, i64* %s2_pos, align 8, !dbg !11511, !tbaa !2447
  %23 = load i64, i64* %s2_len.addr, align 8, !dbg !11512, !tbaa !2447
  %cmp16 = icmp eq i64 %22, %23, !dbg !11513
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !11514

cond.true18:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !11514

cond.false19:                                     ; preds = %cond.end
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11515, !tbaa !2286
  %25 = load i64, i64* %s2_pos, align 8, !dbg !11516, !tbaa !2447
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !11515, !ctir !88
  %26 = load i8, i8* %arrayidx20, align 1, !dbg !11515, !tbaa !2438
  %call21 = call i32 @order(i8 zeroext %26), !dbg !11517
  br label %cond.end22, !dbg !11514

cond.end22:                                       ; preds = %cond.false19, %cond.true18
  %cond23 = phi i32 [ 0, %cond.true18 ], [ %call21, %cond.false19 ], !dbg !11514
  store i32 %cond23, i32* %s2_c, align 4, !dbg !11510, !tbaa !2273
  %27 = load i32, i32* %s1_c, align 4, !dbg !11518, !tbaa !2273
  %28 = load i32, i32* %s2_c, align 4, !dbg !11520, !tbaa !2273
  %cmp24 = icmp ne i32 %27, %28, !dbg !11521
  br i1 %cmp24, label %if.then, label %if.end, !dbg !11522

if.then:                                          ; preds = %cond.end22
  %29 = load i32, i32* %s1_c, align 4, !dbg !11523, !tbaa !2273
  %30 = load i32, i32* %s2_c, align 4, !dbg !11524, !tbaa !2273
  %sub = sub nsw i32 %29, %30, !dbg !11525
  store i32 %sub, i32* %retval, align 4, !dbg !11526
  br label %return, !dbg !11526

if.end:                                           ; preds = %cond.end22
  %31 = load i64, i64* %s1_pos, align 8, !dbg !11527, !tbaa !2447
  %inc = add i64 %31, 1, !dbg !11527
  store i64 %inc, i64* %s1_pos, align 8, !dbg !11527, !tbaa !2447
  %32 = load i64, i64* %s2_pos, align 8, !dbg !11528, !tbaa !2447
  %inc26 = add i64 %32, 1, !dbg !11528
  store i64 %inc26, i64* %s2_pos, align 8, !dbg !11528, !tbaa !2447
  br label %while.cond2, !dbg !11481, !llvm.loop !11529

while.end:                                        ; preds = %lor.end10
  br label %while.cond27, !dbg !11531

while.cond27:                                     ; preds = %while.body32, %while.end
  %33 = load i8*, i8** %s1.addr, align 8, !dbg !11532, !tbaa !2286
  %34 = load i64, i64* %s1_pos, align 8, !dbg !11533, !tbaa !2447
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11532, !ctir !88
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !11532, !tbaa !2438
  %conv29 = sext i8 %35 to i32, !dbg !11532
  %cmp30 = icmp eq i32 %conv29, 48, !dbg !11534
  br i1 %cmp30, label %while.body32, label %while.end34, !dbg !11531

while.body32:                                     ; preds = %while.cond27
  %36 = load i64, i64* %s1_pos, align 8, !dbg !11535, !tbaa !2447
  %inc33 = add i64 %36, 1, !dbg !11535
  store i64 %inc33, i64* %s1_pos, align 8, !dbg !11535, !tbaa !2447
  br label %while.cond27, !dbg !11531, !llvm.loop !11536

while.end34:                                      ; preds = %while.cond27
  br label %while.cond35, !dbg !11537

while.cond35:                                     ; preds = %while.body40, %while.end34
  %37 = load i8*, i8** %s2.addr, align 8, !dbg !11538, !tbaa !2286
  %38 = load i64, i64* %s2_pos, align 8, !dbg !11539, !tbaa !2447
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !11538, !ctir !88
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !11538, !tbaa !2438
  %conv37 = sext i8 %39 to i32, !dbg !11538
  %cmp38 = icmp eq i32 %conv37, 48, !dbg !11540
  br i1 %cmp38, label %while.body40, label %while.end42, !dbg !11537

while.body40:                                     ; preds = %while.cond35
  %40 = load i64, i64* %s2_pos, align 8, !dbg !11541, !tbaa !2447
  %inc41 = add i64 %40, 1, !dbg !11541
  store i64 %inc41, i64* %s2_pos, align 8, !dbg !11541, !tbaa !2447
  br label %while.cond35, !dbg !11537, !llvm.loop !11542

while.end42:                                      ; preds = %while.cond35
  br label %while.cond43, !dbg !11543

while.cond43:                                     ; preds = %if.end61, %while.end42
  %41 = load i8*, i8** %s1.addr, align 8, !dbg !11544, !tbaa !2286
  %42 = load i64, i64* %s1_pos, align 8, !dbg !11545, !tbaa !2447
  %arrayidx44 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !11544, !ctir !88
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !11544, !tbaa !2438
  %conv45 = sext i8 %43 to i32, !dbg !11544
  %call46 = call zeroext i1 @c_isdigit(i32 %conv45), !dbg !11546
  br i1 %call46, label %land.rhs48, label %land.end53, !dbg !11547

land.rhs48:                                       ; preds = %while.cond43
  %44 = load i8*, i8** %s2.addr, align 8, !dbg !11548, !tbaa !2286
  %45 = load i64, i64* %s2_pos, align 8, !dbg !11549, !tbaa !2447
  %arrayidx49 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !11548, !ctir !88
  %46 = load i8, i8* %arrayidx49, align 1, !dbg !11548, !tbaa !2438
  %conv50 = sext i8 %46 to i32, !dbg !11548
  %call51 = call zeroext i1 @c_isdigit(i32 %conv50), !dbg !11550
  br label %land.end53

land.end53:                                       ; preds = %land.rhs48, %while.cond43
  %47 = phi i1 [ false, %while.cond43 ], [ %call51, %land.rhs48 ], !dbg !11498
  br i1 %47, label %while.body54, label %while.end64, !dbg !11543

while.body54:                                     ; preds = %land.end53
  %48 = load i32, i32* %first_diff, align 4, !dbg !11551, !tbaa !2273
  %tobool = icmp ne i32 %48, 0, !dbg !11551
  br i1 %tobool, label %if.end61, label %if.then55, !dbg !11554

if.then55:                                        ; preds = %while.body54
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !11555, !tbaa !2286
  %50 = load i64, i64* %s1_pos, align 8, !dbg !11556, !tbaa !2447
  %arrayidx56 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !11555, !ctir !88
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !11555, !tbaa !2438
  %conv57 = sext i8 %51 to i32, !dbg !11555
  %52 = load i8*, i8** %s2.addr, align 8, !dbg !11557, !tbaa !2286
  %53 = load i64, i64* %s2_pos, align 8, !dbg !11558, !tbaa !2447
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !11557, !ctir !88
  %54 = load i8, i8* %arrayidx58, align 1, !dbg !11557, !tbaa !2438
  %conv59 = sext i8 %54 to i32, !dbg !11557
  %sub60 = sub nsw i32 %conv57, %conv59, !dbg !11559
  store i32 %sub60, i32* %first_diff, align 4, !dbg !11560, !tbaa !2273
  br label %if.end61, !dbg !11561

if.end61:                                         ; preds = %if.then55, %while.body54
  %55 = load i64, i64* %s1_pos, align 8, !dbg !11562, !tbaa !2447
  %inc62 = add i64 %55, 1, !dbg !11562
  store i64 %inc62, i64* %s1_pos, align 8, !dbg !11562, !tbaa !2447
  %56 = load i64, i64* %s2_pos, align 8, !dbg !11563, !tbaa !2447
  %inc63 = add i64 %56, 1, !dbg !11563
  store i64 %inc63, i64* %s2_pos, align 8, !dbg !11563, !tbaa !2447
  br label %while.cond43, !dbg !11543, !llvm.loop !11564

while.end64:                                      ; preds = %land.end53
  %57 = load i8*, i8** %s1.addr, align 8, !dbg !11566, !tbaa !2286
  %58 = load i64, i64* %s1_pos, align 8, !dbg !11568, !tbaa !2447
  %arrayidx65 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11566, !ctir !88
  %59 = load i8, i8* %arrayidx65, align 1, !dbg !11566, !tbaa !2438
  %conv66 = sext i8 %59 to i32, !dbg !11566
  %call67 = call zeroext i1 @c_isdigit(i32 %conv66), !dbg !11569
  br i1 %call67, label %if.then68, label %if.end69, !dbg !11570

if.then68:                                        ; preds = %while.end64
  store i32 1, i32* %retval, align 4, !dbg !11571
  br label %return, !dbg !11571

if.end69:                                         ; preds = %while.end64
  %60 = load i8*, i8** %s2.addr, align 8, !dbg !11572, !tbaa !2286
  %61 = load i64, i64* %s2_pos, align 8, !dbg !11574, !tbaa !2447
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !11572, !ctir !88
  %62 = load i8, i8* %arrayidx70, align 1, !dbg !11572, !tbaa !2438
  %conv71 = sext i8 %62 to i32, !dbg !11572
  %call72 = call zeroext i1 @c_isdigit(i32 %conv71), !dbg !11575
  br i1 %call72, label %if.then73, label %if.end74, !dbg !11576

if.then73:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !11577
  br label %return, !dbg !11577

if.end74:                                         ; preds = %if.end69
  %63 = load i32, i32* %first_diff, align 4, !dbg !11578, !tbaa !2273
  %tobool75 = icmp ne i32 %63, 0, !dbg !11578
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11580

if.then76:                                        ; preds = %if.end74
  %64 = load i32, i32* %first_diff, align 4, !dbg !11581, !tbaa !2273
  store i32 %64, i32* %retval, align 4, !dbg !11582
  br label %return, !dbg !11582

if.end77:                                         ; preds = %if.end74
  br label %while.cond, !dbg !11470, !llvm.loop !11583

while.end78:                                      ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !11585
  br label %return, !dbg !11585

return:                                           ; preds = %while.end78, %if.then76, %if.then73, %if.then68, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11586
  ret i32 %65, !dbg !11586
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @order(i8 zeroext %c) #4 !dbg !11587 !ctir !1519 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  %0 = load i8, i8* %c.addr, align 1, !dbg !11590, !tbaa !2438
  %conv = zext i8 %0 to i32, !dbg !11590
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11592
  br i1 %call, label %if.then, label %if.else, !dbg !11593

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11594
  br label %return, !dbg !11594

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !11595, !tbaa !2438
  %conv1 = zext i8 %1 to i32, !dbg !11595
  %call2 = call zeroext i1 @c_isalpha(i32 %conv1), !dbg !11597
  br i1 %call2, label %if.then3, label %if.else5, !dbg !11598

if.then3:                                         ; preds = %if.else
  %2 = load i8, i8* %c.addr, align 1, !dbg !11599, !tbaa !2438
  %conv4 = zext i8 %2 to i32, !dbg !11599
  store i32 %conv4, i32* %retval, align 4, !dbg !11600
  br label %return, !dbg !11600

if.else5:                                         ; preds = %if.else
  %3 = load i8, i8* %c.addr, align 1, !dbg !11601, !tbaa !2438
  %conv6 = zext i8 %3 to i32, !dbg !11601
  %cmp = icmp eq i32 %conv6, 126, !dbg !11603
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !11604

if.then8:                                         ; preds = %if.else5
  store i32 -1, i32* %retval, align 4, !dbg !11605
  br label %return, !dbg !11605

if.else9:                                         ; preds = %if.else5
  %4 = load i8, i8* %c.addr, align 1, !dbg !11606, !tbaa !2438
  %conv10 = zext i8 %4 to i32, !dbg !11607
  %add = add nsw i32 %conv10, 255, !dbg !11608
  %add11 = add nsw i32 %add, 1, !dbg !11609
  store i32 %add11, i32* %retval, align 4, !dbg !11610
  br label %return, !dbg !11610

return:                                           ; preds = %if.else9, %if.then8, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11611
  ret i32 %5, !dbg !11611
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !11612 !ctir !1524 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !103
  %p = alloca i8*, align 8, !ctir !88
  store i32 %category, i32* %category.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !11614, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !11616, metadata !DIExpression()), !dbg !11617
  store i8 1, i8* %hard, align 1, !dbg !11617, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11618, metadata !DIExpression()), !dbg !11619
  %0 = load i32, i32* %category.addr, align 4, !dbg !11620, !tbaa !2273
  %call = call i8* @setlocale(i32 %0, i8* null) #12, !dbg !11621
  store i8* %call, i8** %p, align 8, !dbg !11619, !tbaa !2286
  %1 = load i8*, i8** %p, align 8, !dbg !11622, !tbaa !2286
  %tobool = icmp ne i8* %1, null, !dbg !11622
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11624

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !11625, !tbaa !2286
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.203, i64 0, i64 0)) #14, !dbg !11630
  %cmp = icmp eq i32 %call1, 0, !dbg !11631
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !11632

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !11633, !tbaa !2286
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.204, i64 0, i64 0)) #14, !dbg !11634
  %cmp3 = icmp eq i32 %call2, 0, !dbg !11635
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11636

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !11637, !tbaa !2430
  br label %if.end, !dbg !11638

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !11639

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !11640, !tbaa !2430
  %tobool6 = trunc i8 %4 to i1, !dbg !11640
  ret i1 %tobool6, !dbg !11641
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11642 !ctir !1011 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11643, metadata !DIExpression()), !dbg !11644
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11645, !tbaa !2286
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11646, !ctir !1014
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11646, !tbaa !11647, !ctir !55
  ret i64 %1, !dbg !11649
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11650 !ctir !1011 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11653, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11654, !ctir !1014
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11654, !tbaa !11655, !ctir !55
  ret i64 %1, !dbg !11656
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11657 !ctir !1011 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11658, metadata !DIExpression()), !dbg !11659
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11660, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11661, !ctir !1014
  %1 = load i64, i64* %n_entries, align 8, !dbg !11661, !tbaa !11662, !ctir !55
  ret i64 %1, !dbg !11663
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11664 !ctir !1011 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1026
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11667, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11669, metadata !DIExpression()), !dbg !11670
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11670, !tbaa !2447
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11671, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11673, !ctir !1014
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11673, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11675, !tbaa !2286
  br label %for.cond, !dbg !11676

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11677, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11679, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11680, !ctir !1014
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11680, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11682
  br i1 %cmp, label %for.body, label %for.end, !dbg !11683

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11684, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11687, !ctir !1027
  %6 = load i8*, i8** %data, align 8, !dbg !11687, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11684
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11690

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11691, metadata !DIExpression()), !dbg !11693
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11694, !tbaa !2286
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11693, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11695, metadata !DIExpression()), !dbg !11696
  store i64 1, i64* %bucket_length, align 8, !dbg !11696, !tbaa !2447
  br label %while.cond, !dbg !11697

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11698, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11699, !ctir !1027
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11699, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11701, !tbaa !2286
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11702, !tbaa !2286
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11697
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11697

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11703, !tbaa !2447
  %inc = add i64 %11, 1, !dbg !11703
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11703, !tbaa !2447
  br label %while.cond, !dbg !11697, !llvm.loop !11704

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11705, !tbaa !2447
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11707, !tbaa !2447
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11708
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11709

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11710, !tbaa !2447
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11711, !tbaa !2447
  br label %if.end, !dbg !11712

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11713

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11714

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11715, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11715
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11715, !tbaa !2286
  br label %for.cond, !dbg !11716, !llvm.loop !11717

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11719, !tbaa !2447
  ret i64 %16, !dbg !11720
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11721 !ctir !1055 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1026
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11722, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11724, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11726, metadata !DIExpression()), !dbg !11727
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11727, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11728, metadata !DIExpression()), !dbg !11729
  store i64 0, i64* %n_entries, align 8, !dbg !11729, !tbaa !2447
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11730, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11732, !ctir !1014
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11732, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11733, !tbaa !2286
  br label %for.cond, !dbg !11734

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11735, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11737, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11738, !ctir !1014
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11738, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11739
  br i1 %cmp, label %for.body, label %for.end, !dbg !11740

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11741, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11744, !ctir !1027
  %6 = load i8*, i8** %data, align 8, !dbg !11744, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11741
  br i1 %tobool, label %if.then, label %if.end, !dbg !11745

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11746, metadata !DIExpression()), !dbg !11748
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11749, !tbaa !2286
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11748, !tbaa !2286
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11750, !tbaa !2447
  %inc = add i64 %8, 1, !dbg !11750
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11750, !tbaa !2447
  %9 = load i64, i64* %n_entries, align 8, !dbg !11751, !tbaa !2447
  %inc2 = add i64 %9, 1, !dbg !11751
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11751, !tbaa !2447
  br label %while.cond, !dbg !11752

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11753, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11754, !ctir !1027
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11754, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11755, !tbaa !2286
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11756, !tbaa !2286
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11752
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11752

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11757, !tbaa !2447
  %inc4 = add i64 %13, 1, !dbg !11757
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11757, !tbaa !2447
  br label %while.cond, !dbg !11752, !llvm.loop !11758

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11759

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11760

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11761, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11761
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11761, !tbaa !2286
  br label %for.cond, !dbg !11762, !llvm.loop !11763

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11765, !tbaa !2447
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11767, !tbaa !2286
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11768, !ctir !1014
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11768, !tbaa !11655, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !11769
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11770

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11771, !tbaa !2447
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11772, !tbaa !2286
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11773, !ctir !1014
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11773, !tbaa !11662, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !11774
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11775

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11776
  br label %return, !dbg !11776

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11777
  br label %return, !dbg !11777

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11778
  ret i1 %21, !dbg !11778
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11779 !ctir !1057 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11782, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11784, metadata !DIExpression()), !dbg !11785
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11786, !tbaa !2286
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11787
  store i64 %call, i64* %n_entries, align 8, !dbg !11785, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11788, metadata !DIExpression()), !dbg !11789
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11790, !tbaa !2286
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11791
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11789, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11792, metadata !DIExpression()), !dbg !11793
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11794, !tbaa !2286
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11795
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11793, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11796, metadata !DIExpression()), !dbg !11797
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11798, !tbaa !2286
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11799
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11797, !tbaa !2447
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11800, !tbaa !2286
  %5 = load i64, i64* %n_entries, align 8, !dbg !11801, !tbaa !2447
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.205, i64 0, i64 0), i64 %5), !dbg !11802
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11803, !tbaa !2286
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11804, !tbaa !2447
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.206, i64 0, i64 0), i64 %7), !dbg !11805
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11806, !tbaa !2286
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11807, !tbaa !2447
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11808, !tbaa !2447
  %conv = uitofp i64 %10 to double, !dbg !11808
  %mul = fmul double 1.000000e+02, %conv, !dbg !11809
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11810, !tbaa !2447
  %conv6 = uitofp i64 %11 to double, !dbg !11810
  %div = fdiv double %mul, %conv6, !dbg !11811
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.207, i64 0, i64 0), i64 %9, double %div), !dbg !11812
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11813, !tbaa !2286
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11814, !tbaa !2447
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.208, i64 0, i64 0), i64 %13), !dbg !11815
  ret void, !dbg !11816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11817 !ctir !1093 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1026
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11820, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11822, metadata !DIExpression()), !dbg !11823
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11824, !tbaa !2286
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11825, !tbaa !2286
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11826
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11823, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11827, metadata !DIExpression()), !dbg !11828
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11829, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11831, !ctir !1027
  %3 = load i8*, i8** %data, align 8, !dbg !11831, !tbaa !11688, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !11832
  br i1 %cmp, label %if.then, label %if.end, !dbg !11833

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11834
  br label %return, !dbg !11834

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11835, !tbaa !2286
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11837, !tbaa !2286
  br label %for.cond, !dbg !11838

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11839, !tbaa !2286
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11841
  br i1 %tobool, label %for.body, label %for.end, !dbg !11841

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11842, !tbaa !2286
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11844, !tbaa !2286
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11845, !ctir !1027
  %8 = load i8*, i8** %data2, align 8, !dbg !11845, !tbaa !11688, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !11846
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11847

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11848, !tbaa !2286
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11849, !ctir !1014
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11849, !tbaa !11850, !ctir !1047
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11851, !tbaa !2286
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11852, !tbaa !2286
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11853, !ctir !1027
  %13 = load i8*, i8** %data4, align 8, !dbg !11853, !tbaa !11688, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11848
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11854

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11855, !tbaa !2286
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11856, !ctir !1027
  %15 = load i8*, i8** %data7, align 8, !dbg !11856, !tbaa !11688, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !11857
  br label %return, !dbg !11857

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11858

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11859, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11860, !ctir !1027
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11860, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11861, !tbaa !2286
  br label %for.cond, !dbg !11862, !llvm.loop !11863

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11865
  br label %return, !dbg !11865

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11866
  ret i8* %18, !dbg !11866
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11867 !ctir !1123 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  store i8* %key, i8** %key.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11870, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11872, metadata !DIExpression()), !dbg !11873
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11874, !tbaa !2286
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11875, !ctir !1014
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11875, !tbaa !11876, !ctir !1044
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11877, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11878, !tbaa !2286
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11879, !ctir !1014
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11879, !tbaa !11647, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11874
  store i64 %call, i64* %n, align 8, !dbg !11873, !tbaa !2447
  %5 = load i64, i64* %n, align 8, !dbg !11880, !tbaa !2447
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11882, !tbaa !2286
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11883, !ctir !1014
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11883, !tbaa !11647, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !11884
  br i1 %cmp, label %if.end, label %if.then, !dbg !11885

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11886
  unreachable, !dbg !11886

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11887, !tbaa !2286
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11888, !ctir !1014
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11888, !tbaa !11674, !ctir !1020
  %10 = load i64, i64* %n, align 8, !dbg !11889, !tbaa !2447
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11890
  ret %struct.hash_entry* %add.ptr, !dbg !11891
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11892 !ctir !1095 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11895, metadata !DIExpression()), !dbg !11896
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11897, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11899, !ctir !1014
  %1 = load i64, i64* %n_entries, align 8, !dbg !11899, !tbaa !11662, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !11900
  br i1 %cmp, label %if.then, label %if.end, !dbg !11901

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11902
  br label %return, !dbg !11902

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11903, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11905, !ctir !1014
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11905, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11906, !tbaa !2286
  br label %for.cond, !dbg !11907

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11908, !tbaa !2286
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11911, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11912, !ctir !1014
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11912, !tbaa !11681, !ctir !1026
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11913
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11914

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11915
  unreachable, !dbg !11915

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11916, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11918, !ctir !1027
  %8 = load i8*, i8** %data, align 8, !dbg !11918, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !11916
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11919

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11920, !tbaa !2286
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11921, !ctir !1027
  %10 = load i8*, i8** %data5, align 8, !dbg !11921, !tbaa !11688, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11922
  br label %return, !dbg !11922

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11923

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11924, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11924
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11924, !tbaa !2286
  br label %for.cond, !dbg !11925, !llvm.loop !11926

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11929
  ret i8* %12, !dbg !11929
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11930 !ctir !1093 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1026
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11931, metadata !DIExpression()), !dbg !11932
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11933, metadata !DIExpression()), !dbg !11934
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11935, metadata !DIExpression()), !dbg !11936
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11937, !tbaa !2286
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11938, !tbaa !2286
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11939
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11936, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11940, metadata !DIExpression()), !dbg !11941
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11942, !tbaa !2286
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11943, !tbaa !2286
  br label %do.body, !dbg !11944

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11945, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11948, !ctir !1027
  %4 = load i8*, i8** %data, align 8, !dbg !11948, !tbaa !11688, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11949, !tbaa !2286
  %cmp = icmp eq i8* %4, %5, !dbg !11950
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11951

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11952, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11953, !ctir !1027
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11953, !tbaa !11700, !ctir !1020
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11952
  br i1 %tobool, label %if.then, label %if.end, !dbg !11954

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11955, !tbaa !2286
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11956, !ctir !1027
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11956, !tbaa !11700, !ctir !1020
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11957, !ctir !1021
  %10 = load i8*, i8** %data3, align 8, !dbg !11957, !tbaa !11688, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11958
  br label %return, !dbg !11958

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11959, !tbaa !2286
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11960, !ctir !1027
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11960, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11961, !tbaa !2286
  br label %do.cond, !dbg !11962

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11963, !tbaa !2286
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11964
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11962, !llvm.loop !11965

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11967

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11968, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11968
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11968, !tbaa !2286
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11969, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11970, !ctir !1014
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11970, !tbaa !11681, !ctir !1026
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11971
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11967

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11972, !tbaa !2286
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11974, !ctir !1027
  %18 = load i8*, i8** %data7, align 8, !dbg !11974, !tbaa !11688, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !11972
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11975

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11976, !tbaa !2286
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11977, !ctir !1027
  %20 = load i8*, i8** %data10, align 8, !dbg !11977, !tbaa !11688, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !11978
  br label %return, !dbg !11978

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11967, !llvm.loop !11979

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11981
  br label %return, !dbg !11981

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11982
  ret i8* %21, !dbg !11982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11983 !ctir !1097 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1026
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11986, metadata !DIExpression()), !dbg !11987
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11988, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11990, metadata !DIExpression()), !dbg !11991
  store i64 0, i64* %counter, align 8, !dbg !11991, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11992, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11994, metadata !DIExpression()), !dbg !11995
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11996, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11998, !ctir !1014
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11998, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11999, !tbaa !2286
  br label %for.cond, !dbg !12000

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12001, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12003, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12004, !ctir !1014
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12004, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12005
  br i1 %cmp, label %for.body, label %for.end10, !dbg !12006

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12007, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12010, !ctir !1027
  %6 = load i8*, i8** %data, align 8, !dbg !12010, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12007
  br i1 %tobool, label %if.then, label %if.end8, !dbg !12011

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12012, !tbaa !2286
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12015, !tbaa !2286
  br label %for.cond2, !dbg !12016

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12017, !tbaa !2286
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12019
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12019

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !12020, !tbaa !2447
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !12023, !tbaa !2447
  %cmp5 = icmp uge i64 %9, %10, !dbg !12024
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !12025

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !12026, !tbaa !2447
  store i64 %11, i64* %retval, align 8, !dbg !12027
  br label %return, !dbg !12027

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12028, !tbaa !2286
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12029, !ctir !1027
  %13 = load i8*, i8** %data7, align 8, !dbg !12029, !tbaa !11688, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !12030, !tbaa !2286
  %15 = load i64, i64* %counter, align 8, !dbg !12031, !tbaa !2447
  %inc = add i64 %15, 1, !dbg !12031
  store i64 %inc, i64* %counter, align 8, !dbg !12031, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !12030, !ctir !1099
  store i8* %13, i8** %arrayidx, align 8, !dbg !12032, !tbaa !2286
  br label %for.inc, !dbg !12033

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12034, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !12035, !ctir !1027
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12035, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !12036, !tbaa !2286
  br label %for.cond2, !dbg !12037, !llvm.loop !12038

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !12040

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !12041

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12042, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !12042
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12042, !tbaa !2286
  br label %for.cond, !dbg !12043, !llvm.loop !12044

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !12046, !tbaa !2447
  store i64 %19, i64* %retval, align 8, !dbg !12047
  br label %return, !dbg !12047

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !12048
  ret i64 %20, !dbg !12048
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !12049 !ctir !1100 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1026
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1026
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12050, metadata !DIExpression()), !dbg !12051
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !12052, metadata !DIExpression()), !dbg !12053
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !12054, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12056, metadata !DIExpression()), !dbg !12057
  store i64 0, i64* %counter, align 8, !dbg !12057, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12058, metadata !DIExpression()), !dbg !12059
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12060, metadata !DIExpression()), !dbg !12061
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12062, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12064, !ctir !1014
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12064, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12065, !tbaa !2286
  br label %for.cond, !dbg !12066

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12067, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12069, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12070, !ctir !1014
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12070, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12071
  br i1 %cmp, label %for.body, label %for.end9, !dbg !12072

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12073, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12076, !ctir !1027
  %6 = load i8*, i8** %data, align 8, !dbg !12076, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12073
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12077

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12078, !tbaa !2286
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12081, !tbaa !2286
  br label %for.cond2, !dbg !12082

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12083, !tbaa !2286
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12085
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12085

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !12086, !tbaa !2286
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12089, !tbaa !2286
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12090, !ctir !1027
  %11 = load i8*, i8** %data5, align 8, !dbg !12090, !tbaa !11688, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !12091, !tbaa !2286
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !12086
  br i1 %call, label %if.end, label %if.then6, !dbg !12092

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !12093, !tbaa !2447
  store i64 %13, i64* %retval, align 8, !dbg !12094
  br label %return, !dbg !12094

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !12095, !tbaa !2447
  %inc = add i64 %14, 1, !dbg !12095
  store i64 %inc, i64* %counter, align 8, !dbg !12095, !tbaa !2447
  br label %for.inc, !dbg !12096

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12097, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12098, !ctir !1027
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12098, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12099, !tbaa !2286
  br label %for.cond2, !dbg !12100, !llvm.loop !12101

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12103

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12104

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12105, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12105
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12105, !tbaa !2286
  br label %for.cond, !dbg !12106, !llvm.loop !12107

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12109, !tbaa !2447
  store i64 %18, i64* %retval, align 8, !dbg !12110
  br label %return, !dbg !12110

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12111
  ret i64 %19, !dbg !12111
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12112 !ctir !1106 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !321
  store i8* %string, i8** %string.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12117, metadata !DIExpression()), !dbg !12118
  store i64 0, i64* %value, align 8, !dbg !12118, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12119, metadata !DIExpression()), !dbg !12120
  br label %for.cond, !dbg !12121

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12122, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !12125, !tbaa !2438, !ctir !89
  store i8 %1, i8* %ch, align 1, !dbg !12126, !tbaa !2438
  %tobool = icmp ne i8 %1, 0, !dbg !12127
  br i1 %tobool, label %for.body, label %for.end, !dbg !12127

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12128, !tbaa !2447
  %mul = mul i64 %2, 31, !dbg !12129
  %3 = load i8, i8* %ch, align 1, !dbg !12130, !tbaa !2438
  %conv = zext i8 %3 to i64, !dbg !12130
  %add = add i64 %mul, %conv, !dbg !12131
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12132, !tbaa !2447
  %rem = urem i64 %add, %4, !dbg !12133
  store i64 %rem, i64* %value, align 8, !dbg !12134, !tbaa !2447
  br label %for.inc, !dbg !12135

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12136, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12136
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12136, !tbaa !2286
  br label %for.cond, !dbg !12137, !llvm.loop !12138

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12140, !tbaa !2447
  ret i64 %6, !dbg !12141
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !12142 !ctir !1108 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12143, metadata !DIExpression()), !dbg !12144
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12145, !tbaa !2286
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12146, !tbaa.struct !12147
  ret void, !dbg !12150
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !12151 !ctir !1111 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !1113
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12152, metadata !DIExpression()), !dbg !12153
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12154, metadata !DIExpression()), !dbg !12155
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12156, metadata !DIExpression()), !dbg !12157
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12158, metadata !DIExpression()), !dbg !12159
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12160, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12162, metadata !DIExpression()), !dbg !12163
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12164, !tbaa !2286
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12166
  br i1 %cmp, label %if.then, label %if.end, !dbg !12167

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12168, !tbaa !2286
  br label %if.end, !dbg !12169

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12170, !tbaa !2286
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12172
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12173

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12174, !tbaa !2286
  br label %if.end3, !dbg !12175

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #12, !dbg !12176
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12176
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12177, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12178, !tbaa !2286
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12180
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12181

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12182
  br label %return, !dbg !12182

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12183, !tbaa !2286
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12183
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12185

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12186, !tbaa !2286
  br label %if.end8, !dbg !12187

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12188, !tbaa !2286
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12189, !tbaa !2286
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12190, !ctir !1015
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12191, !tbaa !12192, !ctir !1032
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12193, !tbaa !2286
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12195
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12196

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12197

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12199, !tbaa !2447
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12200, !tbaa !2286
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !12201
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12202, !tbaa !2286
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12203, !ctir !1015
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12204, !tbaa !11647, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12205, !tbaa !2286
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12207, !ctir !1015
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12207, !tbaa !11647, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !12205
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12208

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12209

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12210, !tbaa !2286
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12211, !ctir !1015
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12211, !tbaa !11647, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #12, !dbg !12212
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12212
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12213, !tbaa !2286
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12214, !ctir !1015
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12215, !tbaa !11674, !ctir !1020
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12216, !tbaa !2286
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12218, !ctir !1015
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12218, !tbaa !11674, !ctir !1020
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12219
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12220

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12221

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12222, !tbaa !2286
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12223, !ctir !1015
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12223, !tbaa !11674, !ctir !1020
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12224, !tbaa !2286
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12225, !ctir !1015
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12225, !tbaa !11647, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12226
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12227, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12228, !ctir !1015
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12229, !tbaa !11681, !ctir !1026
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12230, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12231, !ctir !1015
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12232, !tbaa !11655, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12233, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12234, !ctir !1015
  store i64 0, i64* %n_entries, align 8, !dbg !12235, !tbaa !11662, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12236, !tbaa !2286
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12237, !tbaa !2286
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12238, !ctir !1015
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12239, !tbaa !11876, !ctir !1044
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12240, !tbaa !2286
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12241, !tbaa !2286
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12242, !ctir !1015
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12243, !tbaa !11850, !ctir !1047
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12244, !tbaa !2286
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12245, !tbaa !2286
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12246, !ctir !1015
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12247, !tbaa !12248, !ctir !1050
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12249, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12250, !ctir !1015
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12251, !tbaa !12252, !ctir !1020
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12253, !tbaa !2286
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12254
  br label %return, !dbg !12254

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12255), !dbg !12256
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12257, !tbaa !2286
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12257
  call void @free(i8* %35) #12, !dbg !12258
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12259
  br label %return, !dbg !12259

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12260
  ret %struct.hash_table* %36, !dbg !12260
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !12261 !ctir !562 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12262, metadata !DIExpression()), !dbg !12263
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12264, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12266, metadata !DIExpression()), !dbg !12267
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12268, !tbaa !2286
  %1 = ptrtoint i8* %0 to i64, !dbg !12269
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12270
  store i64 %call, i64* %val, align 8, !dbg !12267, !tbaa !2447
  %2 = load i64, i64* %val, align 8, !dbg !12271, !tbaa !2447
  %3 = load i64, i64* %n.addr, align 8, !dbg !12272, !tbaa !2447
  %rem = urem i64 %2, %3, !dbg !12273
  ret i64 %rem, !dbg !12274
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !12275 !ctir !564 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12276, metadata !DIExpression()), !dbg !12277
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12278, metadata !DIExpression()), !dbg !12279
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12280, !tbaa !2286
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12281, !tbaa !2286
  %cmp = icmp eq i8* %0, %1, !dbg !12282
  ret i1 %cmp, !dbg !12283
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !12284 !ctir !1125 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !1032
  %epsilon = alloca float, align 4, !ctir !1038
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12285, metadata !DIExpression()), !dbg !12286
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12287, metadata !DIExpression()), !dbg !12288
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12289, !tbaa !2286
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12290, !ctir !1015
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12290, !tbaa !12192, !ctir !1032
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12288, !tbaa !2286
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12291, metadata !DIExpression()), !dbg !12292
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12293, !tbaa !2286
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12295
  br i1 %cmp, label %if.then, label %if.end, !dbg !12296

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12297
  br label %return, !dbg !12297

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12298, !tbaa !12148
  %3 = load float, float* %epsilon, align 4, !dbg !12299, !tbaa !12148
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12301, !tbaa !2286
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12302, !ctir !1033
  %5 = load float, float* %growth_threshold, align 4, !dbg !12302, !tbaa !12303, !ctir !1038
  %cmp2 = fcmp olt float %3, %5, !dbg !12305
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12306

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12307, !tbaa !2286
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12308, !ctir !1033
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12308, !tbaa !12303, !ctir !1038
  %8 = load float, float* %epsilon, align 4, !dbg !12309, !tbaa !12148
  %sub = fsub float 1.000000e+00, %8, !dbg !12310
  %cmp4 = fcmp olt float %7, %sub, !dbg !12311
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12312

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12313, !tbaa !12148
  %add = fadd float 1.000000e+00, %9, !dbg !12314
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12315, !tbaa !2286
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12316, !ctir !1033
  %11 = load float, float* %growth_factor, align 4, !dbg !12316, !tbaa !12317, !ctir !1038
  %cmp6 = fcmp olt float %add, %11, !dbg !12318
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12319

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12320, !tbaa !2286
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12321, !ctir !1033
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12321, !tbaa !12322, !ctir !1038
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12323
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12324

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12325, !tbaa !2286
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12326, !ctir !1033
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12326, !tbaa !12322, !ctir !1038
  %16 = load float, float* %epsilon, align 4, !dbg !12327, !tbaa !12148
  %add11 = fadd float %15, %16, !dbg !12328
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12329, !tbaa !2286
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12330, !ctir !1033
  %18 = load float, float* %shrink_factor, align 4, !dbg !12330, !tbaa !12331, !ctir !1038
  %cmp12 = fcmp olt float %add11, %18, !dbg !12332
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12333

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12334, !tbaa !2286
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12335, !ctir !1033
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12335, !tbaa !12331, !ctir !1038
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12336
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12337

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12338, !tbaa !2286
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12339, !ctir !1033
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12339, !tbaa !12322, !ctir !1038
  %23 = load float, float* %epsilon, align 4, !dbg !12340, !tbaa !12148
  %add18 = fadd float %22, %23, !dbg !12341
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12342, !tbaa !2286
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12343, !ctir !1033
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12343, !tbaa !12303, !ctir !1038
  %cmp20 = fcmp olt float %add18, %25, !dbg !12344
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12345

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12346
  br label %return, !dbg !12346

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12347, !tbaa !2286
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12348, !ctir !1015
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12349, !tbaa !12192, !ctir !1032
  store i1 false, i1* %retval, align 1, !dbg !12350
  br label %return, !dbg !12350

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12351
  ret i1 %27, !dbg !12351
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12352 !ctir !1127 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !1038
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12353, metadata !DIExpression()), !dbg !12354
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12357, !tbaa !2286
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12359, !ctir !1033
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12359, !tbaa !12360
  %tobool = trunc i8 %1 to i1, !dbg !12359, !ctir !103
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12361

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12362, metadata !DIExpression()), !dbg !12364
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12365, !tbaa !2447
  %conv = uitofp i64 %2 to float, !dbg !12365
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12366, !tbaa !2286
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12367, !ctir !1033
  %4 = load float, float* %growth_threshold, align 4, !dbg !12367, !tbaa !12303, !ctir !1038
  %div = fdiv float %conv, %4, !dbg !12368
  store float %div, float* %new_candidate, align 4, !dbg !12364, !tbaa !12148
  %5 = load float, float* %new_candidate, align 4, !dbg !12369, !tbaa !12148
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12371
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12372

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12373
  br label %return, !dbg !12373

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12374, !tbaa !12148
  %conv3 = fptoui float %6 to i64, !dbg !12374
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12375, !tbaa !2447
  br label %if.end4, !dbg !12376

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12377, !tbaa !2447
  %call = call i64 @next_prime(i64 %7) #16, !dbg !12378
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12379, !tbaa !2447
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12380, !tbaa !2447
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12380
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12382

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12383
  br label %return, !dbg !12383

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12384, !tbaa !2447
  store i64 %9, i64* %retval, align 8, !dbg !12385
  br label %return, !dbg !12385

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12386
  ret i64 %10, !dbg !12386
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !12387 !ctir !1129 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12388, metadata !DIExpression()), !dbg !12389
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12390, !tbaa !2447
  %cmp = icmp ult i64 %0, 10, !dbg !12392
  br i1 %cmp, label %if.then, label %if.end, !dbg !12393

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12394, !tbaa !2447
  br label %if.end, !dbg !12395

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12396, !tbaa !2447
  %or = or i64 %1, 1, !dbg !12396
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12396, !tbaa !2447
  br label %while.cond, !dbg !12397

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12398, !tbaa !2447
  %cmp1 = icmp ne i64 -1, %2, !dbg !12399
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12400

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12401, !tbaa !2447
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !12402
  %lnot = xor i1 %call, true, !dbg !12403
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12404
  br i1 %4, label %while.body, label %while.end, !dbg !12397

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12405, !tbaa !2447
  %add = add i64 %5, 2, !dbg !12405
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12405, !tbaa !2447
  br label %while.cond, !dbg !12397, !llvm.loop !12406

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12408, !tbaa !2447
  ret i64 %6, !dbg !12409
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !12410 !ctir !1131 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12411, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12413, metadata !DIExpression()), !dbg !12414
  store i64 3, i64* %divisor, align 8, !dbg !12414, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12415, metadata !DIExpression()), !dbg !12416
  %0 = load i64, i64* %divisor, align 8, !dbg !12417, !tbaa !2447
  %1 = load i64, i64* %divisor, align 8, !dbg !12418, !tbaa !2447
  %mul = mul i64 %0, %1, !dbg !12419
  store i64 %mul, i64* %square, align 8, !dbg !12416, !tbaa !2447
  br label %while.cond, !dbg !12420

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12421, !tbaa !2447
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12422, !tbaa !2447
  %cmp = icmp ult i64 %2, %3, !dbg !12423
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12424

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12425, !tbaa !2447
  %5 = load i64, i64* %divisor, align 8, !dbg !12426, !tbaa !2447
  %rem = urem i64 %4, %5, !dbg !12427
  %tobool = icmp ne i64 %rem, 0, !dbg !12424
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12428
  br i1 %6, label %while.body, label %while.end, !dbg !12420

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12429, !tbaa !2447
  %inc = add i64 %7, 1, !dbg !12429
  store i64 %inc, i64* %divisor, align 8, !dbg !12429, !tbaa !2447
  %8 = load i64, i64* %divisor, align 8, !dbg !12431, !tbaa !2447
  %mul1 = mul i64 4, %8, !dbg !12432
  %9 = load i64, i64* %square, align 8, !dbg !12433, !tbaa !2447
  %add = add i64 %9, %mul1, !dbg !12433
  store i64 %add, i64* %square, align 8, !dbg !12433, !tbaa !2447
  %10 = load i64, i64* %divisor, align 8, !dbg !12434, !tbaa !2447
  %inc2 = add i64 %10, 1, !dbg !12434
  store i64 %inc2, i64* %divisor, align 8, !dbg !12434, !tbaa !2447
  br label %while.cond, !dbg !12420, !llvm.loop !12435

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12437, !tbaa !2447
  %12 = load i64, i64* %divisor, align 8, !dbg !12438, !tbaa !2447
  %rem3 = urem i64 %11, %12, !dbg !12439
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12437
  %13 = zext i1 %tobool4 to i64, !dbg !12437
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12437
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12440
  ret i1 %tobool5, !dbg !12441
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !12442 !ctir !1114 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1020
  %next = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12443, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12445, metadata !DIExpression()), !dbg !12446
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12447, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12449, !ctir !1015
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12449, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12450, !tbaa !2286
  br label %for.cond, !dbg !12451

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12452, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12454, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12455, !ctir !1015
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12455, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12456
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12457

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12458, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12461, !ctir !1021
  %6 = load i8*, i8** %data, align 8, !dbg !12461, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12458
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12462

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12463, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12466, metadata !DIExpression()), !dbg !12467
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12468, !tbaa !2286
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12470, !ctir !1021
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12470, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12471, !tbaa !2286
  br label %for.cond3, !dbg !12472

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12473, !tbaa !2286
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12475
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12475

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12476, !tbaa !2286
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12479, !ctir !1015
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12479, !tbaa !12248, !ctir !1050
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12476
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12480

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12481, !tbaa !2286
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12482, !ctir !1015
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12482, !tbaa !12248, !ctir !1050
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12483, !tbaa !2286
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12484, !ctir !1021
  %15 = load i8*, i8** %data9, align 8, !dbg !12484, !tbaa !11688, !ctir !53
  call void %13(i8* %15), !dbg !12481
  br label %if.end, !dbg !12481

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12485, !tbaa !2286
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12486, !ctir !1021
  store i8* null, i8** %data10, align 8, !dbg !12487, !tbaa !11688, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12488, !tbaa !2286
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12489, !ctir !1021
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12489, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12490, !tbaa !2286
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12491, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12492, !ctir !1015
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12492, !tbaa !12252, !ctir !1020
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12493, !tbaa !2286
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12494, !ctir !1021
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12495, !tbaa !11700, !ctir !1020
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12496, !tbaa !2286
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12497, !tbaa !2286
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12498, !ctir !1015
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12499, !tbaa !12252, !ctir !1020
  br label %for.inc, !dbg !12500

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12501, !tbaa !2286
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12502, !tbaa !2286
  br label %for.cond3, !dbg !12503, !llvm.loop !12504

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12506, !tbaa !2286
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12508, !ctir !1015
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12508, !tbaa !12248, !ctir !1050
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12506
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12509

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12510, !tbaa !2286
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12511, !ctir !1015
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12511, !tbaa !12248, !ctir !1050
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12512, !tbaa !2286
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12513, !ctir !1021
  %30 = load i8*, i8** %data18, align 8, !dbg !12513, !tbaa !11688, !ctir !53
  call void %28(i8* %30), !dbg !12510
  br label %if.end19, !dbg !12510

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12514, !tbaa !2286
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12515, !ctir !1021
  store i8* null, i8** %data20, align 8, !dbg !12516, !tbaa !11688, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12517, !tbaa !2286
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12518, !ctir !1021
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12519, !tbaa !11700, !ctir !1020
  br label %if.end22, !dbg !12520

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12521

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12522, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12522
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12522, !tbaa !2286
  br label %for.cond, !dbg !12523, !llvm.loop !12524

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12526, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12527, !ctir !1015
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12528, !tbaa !11655, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12529, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12530, !ctir !1015
  store i64 0, i64* %n_entries, align 8, !dbg !12531, !tbaa !11662, !ctir !55
  ret void, !dbg !12532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !12533 !ctir !1114 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1020
  %next = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12536, metadata !DIExpression()), !dbg !12537
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12538, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12540, metadata !DIExpression()), !dbg !12541
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12542, !tbaa !2286
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12544, !ctir !1015
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12544, !tbaa !12248, !ctir !1050
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12542
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12545

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12546, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12547, !ctir !1015
  %3 = load i64, i64* %n_entries, align 8, !dbg !12547, !tbaa !11662, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !12546
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12548

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12549, !tbaa !2286
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12552, !ctir !1015
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12552, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12553, !tbaa !2286
  br label %for.cond, !dbg !12554

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12555, !tbaa !2286
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12557, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12558, !ctir !1015
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12558, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12559
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12560

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12561, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12564, !ctir !1021
  %10 = load i8*, i8** %data, align 8, !dbg !12564, !tbaa !11688, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !12561
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12565

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12566, !tbaa !2286
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12569, !tbaa !2286
  br label %for.cond5, !dbg !12570

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12571, !tbaa !2286
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12573
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12573

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12574, !tbaa !2286
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12575, !ctir !1015
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12575, !tbaa !12248, !ctir !1050
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12576, !tbaa !2286
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12577, !ctir !1021
  %16 = load i8*, i8** %data9, align 8, !dbg !12577, !tbaa !11688, !ctir !53
  call void %14(i8* %16), !dbg !12574
  br label %for.inc, !dbg !12574

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12578, !tbaa !2286
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12579, !ctir !1021
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12579, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12580, !tbaa !2286
  br label %for.cond5, !dbg !12581, !llvm.loop !12582

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12584

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12585

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12586, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12586
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12586, !tbaa !2286
  br label %for.cond, !dbg !12587, !llvm.loop !12588

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12590

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12591, !tbaa !2286
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12593, !ctir !1015
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12593, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12594, !tbaa !2286
  br label %for.cond15, !dbg !12595

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12596, !tbaa !2286
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12598, !tbaa !2286
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12599, !ctir !1015
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12599, !tbaa !11681, !ctir !1026
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12600
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12601

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12602, !tbaa !2286
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12605, !ctir !1021
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12605, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12606, !tbaa !2286
  br label %for.cond20, !dbg !12607

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12608, !tbaa !2286
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12610
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12610

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12611, !tbaa !2286
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12613, !ctir !1021
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12613, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12614, !tbaa !2286
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12615, !tbaa !2286
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12615
  call void @free(i8* %31) #12, !dbg !12616
  br label %for.inc24, !dbg !12617

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12618, !tbaa !2286
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12619, !tbaa !2286
  br label %for.cond20, !dbg !12620, !llvm.loop !12621

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12623

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12624, !tbaa !2286
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12624
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12624, !tbaa !2286
  br label %for.cond15, !dbg !12625, !llvm.loop !12626

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12628, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12630, !ctir !1015
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12630, !tbaa !12252, !ctir !1020
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12631, !tbaa !2286
  br label %for.cond29, !dbg !12632

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12633, !tbaa !2286
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12635
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12635

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12636, !tbaa !2286
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12638, !ctir !1021
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12638, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12639, !tbaa !2286
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12640, !tbaa !2286
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12640
  call void @free(i8* %40) #12, !dbg !12641
  br label %for.inc33, !dbg !12642

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12643, !tbaa !2286
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12644, !tbaa !2286
  br label %for.cond29, !dbg !12645, !llvm.loop !12646

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12648, !tbaa !2286
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12649, !ctir !1015
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12649, !tbaa !11674, !ctir !1020
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12648
  call void @free(i8* %44) #12, !dbg !12650
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12651, !tbaa !2286
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12651
  call void @free(i8* %46) #12, !dbg !12652
  ret void, !dbg !12653
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12654 !ctir !1116 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !1015
  %new_table = alloca %struct.hash_table*, align 8, !ctir !1113
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12655, metadata !DIExpression()), !dbg !12656
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12657, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12659, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12661, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12663, metadata !DIExpression()), !dbg !12664
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12665, !tbaa !2447
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12666, !tbaa !2286
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12667, !ctir !1015
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12667, !tbaa !12192, !ctir !1032
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12668
  store i64 %call, i64* %new_size, align 8, !dbg !12664, !tbaa !2447
  %3 = load i64, i64* %new_size, align 8, !dbg !12669, !tbaa !2447
  %tobool = icmp ne i64 %3, 0, !dbg !12669
  br i1 %tobool, label %if.end, label %if.then, !dbg !12671

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12672
  br label %return, !dbg !12672

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12673, !tbaa !2447
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12675, !tbaa !2286
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12676, !ctir !1015
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12676, !tbaa !11647, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !12677
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12678

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12679
  br label %return, !dbg !12679

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12680, !tbaa !2286
  %7 = load i64, i64* %new_size, align 8, !dbg !12681, !tbaa !2447
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #12, !dbg !12682
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12682
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12683, !tbaa !2286
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12684, !ctir !1015
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12685, !tbaa !11674, !ctir !1020
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12686, !tbaa !2286
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12688, !ctir !1015
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12688, !tbaa !11674, !ctir !1020
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12689
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12690

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12691
  br label %return, !dbg !12691

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12692, !tbaa !2447
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12693, !tbaa !2286
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12694, !ctir !1015
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12695, !tbaa !11647, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12696, !tbaa !2286
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12697, !ctir !1015
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12697, !tbaa !11674, !ctir !1020
  %16 = load i64, i64* %new_size, align 8, !dbg !12698, !tbaa !2447
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12699
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12700, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12701, !ctir !1015
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12702, !tbaa !11681, !ctir !1026
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12703, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12704, !ctir !1015
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12705, !tbaa !11655, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12706, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12707, !ctir !1015
  store i64 0, i64* %n_entries, align 8, !dbg !12708, !tbaa !11662, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12709, !tbaa !2286
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12710, !ctir !1015
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12710, !tbaa !12192, !ctir !1032
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12711, !tbaa !2286
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12712, !ctir !1015
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12713, !tbaa !12192, !ctir !1032
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12714, !tbaa !2286
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12715, !ctir !1015
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12715, !tbaa !11876, !ctir !1044
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12716, !tbaa !2286
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12717, !ctir !1015
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12718, !tbaa !11876, !ctir !1044
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12719, !tbaa !2286
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12720, !ctir !1015
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12720, !tbaa !11850, !ctir !1047
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12721, !tbaa !2286
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12722, !ctir !1015
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12723, !tbaa !11850, !ctir !1047
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12724, !tbaa !2286
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12725, !ctir !1015
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12725, !tbaa !12248, !ctir !1050
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12726, !tbaa !2286
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12727, !ctir !1015
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12728, !tbaa !12248, !ctir !1050
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12729, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12730, !ctir !1015
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12730, !tbaa !12252, !ctir !1020
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12731, !tbaa !2286
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12732, !ctir !1015
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12733, !tbaa !12252, !ctir !1020
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12734, !tbaa !2286
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12736, !tbaa !2286
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12737
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12738

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12739, !tbaa !2286
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12741, !ctir !1015
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12741, !tbaa !11674, !ctir !1020
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12739
  call void @free(i8* %39) #12, !dbg !12742
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12743, !tbaa !2286
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12744, !ctir !1015
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12744, !tbaa !11674, !ctir !1020
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12745, !tbaa !2286
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12746, !ctir !1015
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12747, !tbaa !11674, !ctir !1020
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12748, !tbaa !2286
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12749, !ctir !1015
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12749, !tbaa !11681, !ctir !1026
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12750, !tbaa !2286
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12751, !ctir !1015
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12752, !tbaa !11681, !ctir !1026
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12753, !tbaa !2286
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12754, !ctir !1015
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12754, !tbaa !11647, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12755, !tbaa !2286
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12756, !ctir !1015
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12757, !tbaa !11647, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12758, !tbaa !2286
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12759, !ctir !1015
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12759, !tbaa !11655, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12760, !tbaa !2286
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12761, !ctir !1015
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12762, !tbaa !11655, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12763, !tbaa !2286
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12764, !ctir !1015
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12764, !tbaa !12252, !ctir !1020
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12765, !tbaa !2286
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12766, !ctir !1015
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12767, !tbaa !12252, !ctir !1020
  store i1 true, i1* %retval, align 1, !dbg !12768
  br label %return, !dbg !12768

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12769, !tbaa !2286
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12770, !ctir !1015
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12770, !tbaa !12252, !ctir !1020
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12771, !tbaa !2286
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12772, !ctir !1015
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12773, !tbaa !12252, !ctir !1020
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12774, !tbaa !2286
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12776, !tbaa !2286
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12777
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12778

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12779, !tbaa !2286
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12780, !tbaa !2286
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12781
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12782

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12783
  unreachable, !dbg !12783

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12784, !tbaa !2286
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12785, !ctir !1015
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12785, !tbaa !11674, !ctir !1020
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12784
  call void @free(i8* %64) #12, !dbg !12786
  store i1 false, i1* %retval, align 1, !dbg !12787
  br label %return, !dbg !12787

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12788
  ret i1 %65, !dbg !12788
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12789 !ctir !1133 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1020
  %next = alloca %struct.hash_entry*, align 8, !ctir !1020
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12790, metadata !DIExpression()), !dbg !12791
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12792, metadata !DIExpression()), !dbg !12793
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12794, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12796, metadata !DIExpression()), !dbg !12797
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12798, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12800, metadata !DIExpression()), !dbg !12801
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12802, !tbaa !2286
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12804, !ctir !1015
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12804, !tbaa !11674, !ctir !1020
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12805, !tbaa !2286
  br label %for.cond, !dbg !12806

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12807, !tbaa !2286
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12809, !tbaa !2286
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12810, !ctir !1015
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12810, !tbaa !11681, !ctir !1026
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12811
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12812

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12813, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12815, !ctir !1021
  %6 = load i8*, i8** %data, align 8, !dbg !12815, !tbaa !11688, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12813
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12816

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12817, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12820, metadata !DIExpression()), !dbg !12821
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12822, !tbaa !2286
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12824, !ctir !1021
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12824, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12825, !tbaa !2286
  br label %for.cond4, !dbg !12826

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12827, !tbaa !2286
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12829
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12829

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12830, !tbaa !2286
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12832, !ctir !1021
  %11 = load i8*, i8** %data7, align 8, !dbg !12832, !tbaa !11688, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !12833, !tbaa !2286
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12834, !tbaa !2286
  %13 = load i8*, i8** %data2, align 8, !dbg !12835, !tbaa !2286
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12836
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12837, !tbaa !2286
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12838, !tbaa !2286
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12839, !ctir !1021
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12839, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12840, !tbaa !2286
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12841, !tbaa !2286
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12843, !ctir !1021
  %17 = load i8*, i8** %data9, align 8, !dbg !12843, !tbaa !11688, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !12841
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12844

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12845, !tbaa !2286
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12847, !ctir !1021
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12847, !tbaa !11700, !ctir !1020
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12848, !tbaa !2286
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12849, !ctir !1021
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12850, !tbaa !11700, !ctir !1020
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12851, !tbaa !2286
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12852, !tbaa !2286
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12853, !ctir !1021
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12854, !tbaa !11700, !ctir !1020
  br label %if.end, !dbg !12855

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12856, !tbaa !2286
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12858, !tbaa !2286
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12859, !ctir !1021
  store i8* %23, i8** %data15, align 8, !dbg !12860, !tbaa !11688, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12861, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12862, !ctir !1015
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12863, !tbaa !11655, !ctir !55
  %inc = add i64 %26, 1, !dbg !12863
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12863, !tbaa !11655, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12864, !tbaa !2286
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12865, !tbaa !2286
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12866
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12867

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12868, !tbaa !2286
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12869, !tbaa !2286
  br label %for.cond4, !dbg !12870, !llvm.loop !12871

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12873, !tbaa !2286
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12874, !ctir !1021
  %31 = load i8*, i8** %data16, align 8, !dbg !12874, !tbaa !11688, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !12875, !tbaa !2286
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12876, !tbaa !2286
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12877, !ctir !1021
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12878, !tbaa !11700, !ctir !1020
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12879, !tbaa !2430
  %tobool18 = trunc i8 %33 to i1, !dbg !12879
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12881

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12882

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12883, !tbaa !2286
  %35 = load i8*, i8** %data2, align 8, !dbg !12884, !tbaa !2286
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12885
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12886, !tbaa !2286
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12887, !tbaa !2286
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12889, !ctir !1021
  %37 = load i8*, i8** %data22, align 8, !dbg !12889, !tbaa !11688, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !12887
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12890

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12891, metadata !DIExpression()), !dbg !12893
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12894, !tbaa !2286
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12895
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12893, !tbaa !2286
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12896, !tbaa !2286
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12898
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12899

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12900
  br label %return, !dbg !12900

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12901, !tbaa !2286
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12902, !tbaa !2286
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12903, !ctir !1021
  store i8* %40, i8** %data29, align 8, !dbg !12904, !tbaa !11688, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12905, !tbaa !2286
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12906, !ctir !1021
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12906, !tbaa !11700, !ctir !1020
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12907, !tbaa !2286
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12908, !ctir !1021
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12909, !tbaa !11700, !ctir !1020
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12910, !tbaa !2286
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12911, !tbaa !2286
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12912, !ctir !1021
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12913, !tbaa !11700, !ctir !1020
  br label %if.end37, !dbg !12914

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12915, !tbaa !2286
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12917, !tbaa !2286
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12918, !ctir !1021
  store i8* %47, i8** %data34, align 8, !dbg !12919, !tbaa !11688, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12920, !tbaa !2286
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12921, !ctir !1015
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12922, !tbaa !11655, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !12922
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12922, !tbaa !11655, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12923, !tbaa !2286
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12924, !ctir !1021
  store i8* null, i8** %data38, align 8, !dbg !12925, !tbaa !11688, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12926, !tbaa !2286
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12927, !ctir !1015
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12928, !tbaa !11655, !ctir !55
  %dec = add i64 %53, -1, !dbg !12928
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12928, !tbaa !11655, !ctir !55
  br label %if.end40, !dbg !12929

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12815

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12930, !tbaa !2286
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12930
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12930, !tbaa !2286
  br label %for.cond, !dbg !12931, !llvm.loop !12932

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12934
  br label %return, !dbg !12934

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12935
  ret i1 %55, !dbg !12935
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12936 !ctir !1135 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12937, metadata !DIExpression()), !dbg !12938
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12939, metadata !DIExpression()), !dbg !12940
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12941, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12942, !ctir !1021
  store i8* null, i8** %data, align 8, !dbg !12943, !tbaa !11688, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12944, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12945, !ctir !1015
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12945, !tbaa !12252, !ctir !1020
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12946, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12947, !ctir !1021
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12948, !tbaa !11700, !ctir !1020
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12949, !tbaa !2286
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12950, !tbaa !2286
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12951, !ctir !1015
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12952, !tbaa !12252, !ctir !1020
  ret void, !dbg !12953
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12954 !ctir !1140 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12955, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12957, metadata !DIExpression()), !dbg !12958
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12959, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12961, !ctir !1015
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12961, !tbaa !12252, !ctir !1020
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12959
  br i1 %tobool, label %if.then, label %if.else, !dbg !12962

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12963, !tbaa !2286
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12965, !ctir !1015
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12965, !tbaa !12252, !ctir !1020
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12966, !tbaa !2286
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12967, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12968, !ctir !1021
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12968, !tbaa !11700, !ctir !1020
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12969, !tbaa !2286
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12970, !ctir !1015
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12971, !tbaa !12252, !ctir !1020
  br label %if.end, !dbg !12972

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #12, !dbg !12973
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12973
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12975, !tbaa !2286
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12976, !tbaa !2286
  ret %struct.hash_entry* %8, !dbg !12977
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12978 !ctir !1118 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !1032
  %candidate = alloca float, align 4, !ctir !1038
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12979, metadata !DIExpression()), !dbg !12980
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12981, metadata !DIExpression()), !dbg !12982
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12985, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12987, metadata !DIExpression()), !dbg !12988
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12989, !tbaa !2286
  %tobool = icmp ne i8* %0, null, !dbg !12989
  br i1 %tobool, label %if.end, label %if.then, !dbg !12991

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12992
  unreachable, !dbg !12992

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12993, !tbaa !2286
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12995, !tbaa !2286
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12996
  store i8* %call, i8** %data, align 8, !dbg !12997, !tbaa !2286
  %cmp = icmp ne i8* %call, null, !dbg !12998
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12999

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !13000, !tbaa !2286
  %tobool3 = icmp ne i8** %3, null, !dbg !13000
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13003

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !13004, !tbaa !2286
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !13005, !tbaa !2286
  store i8* %4, i8** %5, align 8, !dbg !13006, !tbaa !2286, !ctir !339
  br label %if.end5, !dbg !13007

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !13008
  br label %return, !dbg !13008

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13009, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !13011, !ctir !1015
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !13011, !tbaa !11655, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !13009
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13012, !tbaa !2286
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !13013, !ctir !1015
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13013, !tbaa !12192, !ctir !1032
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !13014, !ctir !1033
  %10 = load float, float* %growth_threshold, align 4, !dbg !13014, !tbaa !12303, !ctir !1038
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13015, !tbaa !2286
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !13016, !ctir !1015
  %12 = load i64, i64* %n_buckets, align 8, !dbg !13016, !tbaa !11647, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !13015
  %mul = fmul float %10, %conv7, !dbg !13017
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !13018
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !13019

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13020, !tbaa !2286
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !13022
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13023, !tbaa !2286
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !13025, !ctir !1015
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !13025, !tbaa !11655, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !13023
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13026, !tbaa !2286
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !13027, !ctir !1015
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !13027, !tbaa !12192, !ctir !1032
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !13028, !ctir !1033
  %18 = load float, float* %growth_threshold15, align 4, !dbg !13028, !tbaa !12303, !ctir !1038
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13029, !tbaa !2286
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !13030, !ctir !1015
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !13030, !tbaa !11647, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !13029
  %mul18 = fmul float %18, %conv17, !dbg !13031
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !13032
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !13033

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !13034, metadata !DIExpression()), !dbg !13036
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13037, !tbaa !2286
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !13038, !ctir !1015
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !13038, !tbaa !12192, !ctir !1032
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !13036, !tbaa !2286
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !13039, metadata !DIExpression()), !dbg !13040
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13041, !tbaa !2286
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !13042, !ctir !1033
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !13042, !tbaa !12360
  %tobool24 = trunc i8 %24 to i1, !dbg !13042, !ctir !103
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !13041

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13043, !tbaa !2286
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !13044, !ctir !1015
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !13044, !tbaa !11647, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !13043
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13045, !tbaa !2286
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !13046, !ctir !1033
  %28 = load float, float* %growth_factor, align 4, !dbg !13046, !tbaa !12317, !ctir !1038
  %mul28 = fmul float %conv27, %28, !dbg !13047
  br label %cond.end, !dbg !13041

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13048, !tbaa !2286
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !13049, !ctir !1015
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !13049, !tbaa !11647, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !13048
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13050, !tbaa !2286
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !13051, !ctir !1033
  %32 = load float, float* %growth_factor31, align 4, !dbg !13051, !tbaa !12317, !ctir !1038
  %mul32 = fmul float %conv30, %32, !dbg !13052
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13053, !tbaa !2286
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !13054, !ctir !1033
  %34 = load float, float* %growth_threshold33, align 4, !dbg !13054, !tbaa !12303, !ctir !1038
  %mul34 = fmul float %mul32, %34, !dbg !13055
  br label %cond.end, !dbg !13041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !13041
  store float %cond, float* %candidate, align 4, !dbg !13040, !tbaa !12148
  %35 = load float, float* %candidate, align 4, !dbg !13056, !tbaa !12148
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !13058
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13059

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !13060
  br label %return, !dbg !13060

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13061, !tbaa !2286
  %37 = load float, float* %candidate, align 4, !dbg !13063, !tbaa !12148
  %conv39 = fptoui float %37 to i64, !dbg !13063
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !13064
  br i1 %call40, label %if.end42, label %if.then41, !dbg !13065

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !13066
  br label %return, !dbg !13066

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13067, !tbaa !2286
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !13069, !tbaa !2286
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13070
  %cmp44 = icmp ne i8* %call43, null, !dbg !13071
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13072

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !13073
  unreachable, !dbg !13073

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !13074

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !13075

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13076, !tbaa !2286
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13078, !ctir !1021
  %41 = load i8*, i8** %data50, align 8, !dbg !13078, !tbaa !11688, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !13076
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !13079

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !13080, metadata !DIExpression()), !dbg !13082
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13083, !tbaa !2286
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !13084
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !13082, !tbaa !2286
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13085, !tbaa !2286
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !13087
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13088

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !13089
  br label %return, !dbg !13089

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !13090, !tbaa !2286
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13091, !tbaa !2286
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !13092, !ctir !1021
  store i8* %44, i8** %data58, align 8, !dbg !13093, !tbaa !11688, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13094, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13095, !ctir !1021
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13095, !tbaa !11700, !ctir !1020
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13096, !tbaa !2286
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13097, !ctir !1021
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13098, !tbaa !11700, !ctir !1020
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13099, !tbaa !2286
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13100, !tbaa !2286
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13101, !ctir !1021
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13102, !tbaa !11700, !ctir !1020
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13103, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13104, !ctir !1015
  %52 = load i64, i64* %n_entries, align 8, !dbg !13105, !tbaa !11662, !ctir !55
  %inc = add i64 %52, 1, !dbg !13105
  store i64 %inc, i64* %n_entries, align 8, !dbg !13105, !tbaa !11662, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !13106
  br label %return, !dbg !13106

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13107, !tbaa !2286
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13108, !tbaa !2286
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13109, !ctir !1021
  store i8* %53, i8** %data62, align 8, !dbg !13110, !tbaa !11688, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13111, !tbaa !2286
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13112, !ctir !1015
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13113, !tbaa !11662, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !13113
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13113, !tbaa !11662, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13114, !tbaa !2286
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13115, !ctir !1015
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13116, !tbaa !11655, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !13116
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13116, !tbaa !11655, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !13117
  br label %return, !dbg !13117

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13118
  ret i32 %59, !dbg !13118
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !13119 !ctir !1137 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1020
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !1020
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13120, metadata !DIExpression()), !dbg !13121
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13122, metadata !DIExpression()), !dbg !13123
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13124, metadata !DIExpression()), !dbg !13125
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13126, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13128, metadata !DIExpression()), !dbg !13129
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13130, !tbaa !2286
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13131, !tbaa !2286
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13132
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13129, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13133, metadata !DIExpression()), !dbg !13134
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13135, !tbaa !2286
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13136, !tbaa !2286
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13137, !tbaa !2286, !ctir !1020
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13138, !tbaa !2286
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13140, !ctir !1021
  %5 = load i8*, i8** %data, align 8, !dbg !13140, !tbaa !11688, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !13141
  br i1 %cmp, label %if.then, label %if.end, !dbg !13142

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13143
  br label %return, !dbg !13143

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13144, !tbaa !2286
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13146, !tbaa !2286
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13147, !ctir !1021
  %8 = load i8*, i8** %data2, align 8, !dbg !13147, !tbaa !11688, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !13148
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13149

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13150, !tbaa !2286
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13151, !ctir !1015
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13151, !tbaa !11850, !ctir !1047
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13152, !tbaa !2286
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13153, !tbaa !2286
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13154, !ctir !1021
  %13 = load i8*, i8** %data4, align 8, !dbg !13154, !tbaa !11688, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13150
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13155

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13156, metadata !DIExpression()), !dbg !13158
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13159, !tbaa !2286
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13160, !ctir !1021
  %15 = load i8*, i8** %data8, align 8, !dbg !13160, !tbaa !11688, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !13158, !tbaa !2286
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13161, !tbaa !2430
  %tobool = trunc i8 %16 to i1, !dbg !13161
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13163

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13164, !tbaa !2286
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13167, !ctir !1021
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13167, !tbaa !11700, !ctir !1020
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13164
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13168

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13169, metadata !DIExpression()), !dbg !13171
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13172, !tbaa !2286
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13173, !ctir !1021
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13173, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13171, !tbaa !2286
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13174, !tbaa !2286
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13175, !tbaa !2286
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13176
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13176, !tbaa.struct !9496
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13177, !tbaa !2286
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13178, !tbaa !2286
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13179
  br label %if.end15, !dbg !13180

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13181, !tbaa !2286
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13183, !ctir !1021
  store i8* null, i8** %data14, align 8, !dbg !13184, !tbaa !11688, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13185

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13186, !tbaa !2286
  store i8* %28, i8** %retval, align 8, !dbg !13187
  br label %return, !dbg !13187

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13188, !tbaa !2286
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13190, !tbaa !2286
  br label %for.cond, !dbg !13191

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13192, !tbaa !2286
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13194, !ctir !1021
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13194, !tbaa !11700, !ctir !1020
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13195
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13195

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13196, !tbaa !2286
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13199, !tbaa !2286
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13200, !ctir !1021
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13200, !tbaa !11700, !ctir !1020
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13201, !ctir !1021
  %35 = load i8*, i8** %data21, align 8, !dbg !13201, !tbaa !11688, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !13202
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13203

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13204, !tbaa !2286
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13205, !ctir !1015
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13205, !tbaa !11850, !ctir !1047
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13206, !tbaa !2286
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13207, !tbaa !2286
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13208, !ctir !1021
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13208, !tbaa !11700, !ctir !1020
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13209, !ctir !1021
  %41 = load i8*, i8** %data26, align 8, !dbg !13209, !tbaa !11688, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13204
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13210

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13211, metadata !DIExpression()), !dbg !13213
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13214, !tbaa !2286
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13215, !ctir !1021
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13215, !tbaa !11700, !ctir !1020
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13216, !ctir !1021
  %44 = load i8*, i8** %data31, align 8, !dbg !13216, !tbaa !11688, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !13213, !tbaa !2286
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13217, !tbaa !2430
  %tobool32 = trunc i8 %45 to i1, !dbg !13217
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13219

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13220, metadata !DIExpression()), !dbg !13222
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13223, !tbaa !2286
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13224, !ctir !1021
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13224, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13222, !tbaa !2286
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13225, !tbaa !2286
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13226, !ctir !1021
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13226, !tbaa !11700, !ctir !1020
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13227, !tbaa !2286
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13228, !ctir !1021
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13229, !tbaa !11700, !ctir !1020
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13230, !tbaa !2286
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13231, !tbaa !2286
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13232
  br label %if.end38, !dbg !13233

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13234, !tbaa !2286
  store i8* %53, i8** %retval, align 8, !dbg !13235
  br label %return, !dbg !13235

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13236

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13237, !tbaa !2286
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13238, !ctir !1021
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13238, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13239, !tbaa !2286
  br label %for.cond, !dbg !13240, !llvm.loop !13241

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13243
  br label %return, !dbg !13243

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13244
  ret i8* %56, !dbg !13244
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13245 !ctir !1121 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !339
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13246, metadata !DIExpression()), !dbg !13247
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13248, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13250, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13252, metadata !DIExpression()), !dbg !13253
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13254, !tbaa !2286
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13255, !tbaa !2286
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13256
  store i32 %call, i32* %err, align 4, !dbg !13253, !tbaa !2273
  %2 = load i32, i32* %err, align 4, !dbg !13257, !tbaa !2273
  %cmp = icmp eq i32 %2, -1, !dbg !13258
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13257

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13257

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13259, !tbaa !2273
  %cmp2 = icmp eq i32 %3, 0, !dbg !13260
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13259

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13261, !tbaa !2286
  br label %cond.end, !dbg !13259

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13262, !tbaa !2286
  br label %cond.end, !dbg !13259

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13259
  br label %cond.end5, !dbg !13257

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13257
  ret i8* %cond6, !dbg !13263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13264 !ctir !1121 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1020
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !1032
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1020
  %next = alloca %struct.hash_entry*, align 8, !ctir !1020
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13265, metadata !DIExpression()), !dbg !13266
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13267, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13269, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13271, metadata !DIExpression()), !dbg !13272
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13273, !tbaa !2286
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13274, !tbaa !2286
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13275
  store i8* %call, i8** %data, align 8, !dbg !13276, !tbaa !2286
  %2 = load i8*, i8** %data, align 8, !dbg !13277, !tbaa !2286
  %tobool = icmp ne i8* %2, null, !dbg !13277
  br i1 %tobool, label %if.end, label %if.then, !dbg !13279

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13280
  br label %return, !dbg !13280

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13281, !tbaa !2286
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13282, !ctir !1015
  %4 = load i64, i64* %n_entries, align 8, !dbg !13283, !tbaa !11662, !ctir !55
  %dec = add i64 %4, -1, !dbg !13283
  store i64 %dec, i64* %n_entries, align 8, !dbg !13283, !tbaa !11662, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13284, !tbaa !2286
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13286, !ctir !1021
  %6 = load i8*, i8** %data2, align 8, !dbg !13286, !tbaa !11688, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !13284
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13287

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13288, !tbaa !2286
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13290, !ctir !1015
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13291, !tbaa !11655, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !13291
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13291, !tbaa !11655, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13292, !tbaa !2286
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13294, !ctir !1015
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13294, !tbaa !11655, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !13292
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13295, !tbaa !2286
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13296, !ctir !1015
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13296, !tbaa !12192, !ctir !1032
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13297, !ctir !1033
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13297, !tbaa !12322, !ctir !1038
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13298, !tbaa !2286
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13299, !ctir !1015
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13299, !tbaa !11647, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !13298
  %mul = fmul float %13, %conv7, !dbg !13300
  %cmp = fcmp olt float %conv, %mul, !dbg !13301
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13302

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13303, !tbaa !2286
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13305
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13306, !tbaa !2286
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13308, !ctir !1015
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13308, !tbaa !11655, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !13306
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13309, !tbaa !2286
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13310, !ctir !1015
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13310, !tbaa !12192, !ctir !1032
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13311, !ctir !1033
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13311, !tbaa !12322, !ctir !1038
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13312, !tbaa !2286
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13313, !ctir !1015
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13313, !tbaa !11647, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !13312
  %mul17 = fmul float %21, %conv16, !dbg !13314
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13315
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13316

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13317, metadata !DIExpression()), !dbg !13319
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13320, !tbaa !2286
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13321, !ctir !1015
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13321, !tbaa !12192, !ctir !1032
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13319, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13322, metadata !DIExpression()), !dbg !13323
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13324, !tbaa !2286
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13325, !ctir !1033
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13325, !tbaa !12360
  %tobool23 = trunc i8 %27 to i1, !dbg !13325, !ctir !103
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13324

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13326, !tbaa !2286
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13327, !ctir !1015
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13327, !tbaa !11647, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !13326
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13328, !tbaa !2286
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13329, !ctir !1033
  %31 = load float, float* %shrink_factor, align 4, !dbg !13329, !tbaa !12331, !ctir !1038
  %mul27 = fmul float %conv26, %31, !dbg !13330
  br label %cond.end, !dbg !13324

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13331, !tbaa !2286
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13332, !ctir !1015
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13332, !tbaa !11647, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !13331
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13333, !tbaa !2286
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13334, !ctir !1033
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13334, !tbaa !12331, !ctir !1038
  %mul31 = fmul float %conv29, %35, !dbg !13335
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13336, !tbaa !2286
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13337, !ctir !1033
  %37 = load float, float* %growth_threshold, align 4, !dbg !13337, !tbaa !12303, !ctir !1038
  %mul32 = fmul float %mul31, %37, !dbg !13338
  br label %cond.end, !dbg !13324

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13324
  %conv33 = fptoui float %cond to i64, !dbg !13339
  store i64 %conv33, i64* %candidate, align 8, !dbg !13323, !tbaa !2447
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13340, !tbaa !2286
  %39 = load i64, i64* %candidate, align 8, !dbg !13342, !tbaa !2447
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13343
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13344

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13345, metadata !DIExpression()), !dbg !13347
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13348, !tbaa !2286
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13349, !ctir !1015
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13349, !tbaa !12252, !ctir !1020
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13347, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13350, metadata !DIExpression()), !dbg !13351
  br label %while.cond, !dbg !13352

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13353, !tbaa !2286
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13352
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13352

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13354, !tbaa !2286
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13356, !ctir !1021
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13356, !tbaa !11700, !ctir !1020
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13357, !tbaa !2286
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13358, !tbaa !2286
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13358
  call void @free(i8* %46) #12, !dbg !13359
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13360, !tbaa !2286
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13361, !tbaa !2286
  br label %while.cond, !dbg !13352, !llvm.loop !13362

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13364, !tbaa !2286
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13365, !ctir !1015
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13366, !tbaa !12252, !ctir !1020
  br label %if.end39, !dbg !13367

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13368

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13369

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13370

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13371, !tbaa !2286
  store i8* %49, i8** %retval, align 8, !dbg !13372
  br label %return, !dbg !13372

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13373
  ret i8* %50, !dbg !13373
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.heap* @heap_alloc(i32 (i8*, i8*)* %compare, i64 %n_reserve) #4 !dbg !13374 !ctir !1529 {
entry:
  %compare.addr = alloca i32 (i8*, i8*)*, align 8
  %n_reserve.addr = alloca i64, align 8
  %heap = alloca %struct.heap*, align 8, !ctir !1531
  store i32 (i8*, i8*)* %compare, i32 (i8*, i8*)** %compare.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare.addr, metadata !13375, metadata !DIExpression()), !dbg !13376
  store i64 %n_reserve, i64* %n_reserve.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n_reserve.addr, metadata !13377, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.declare(metadata %struct.heap** %heap, metadata !13379, metadata !DIExpression()), !dbg !13380
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13381
  %0 = bitcast i8* %call to %struct.heap*, !dbg !13381
  store %struct.heap* %0, %struct.heap** %heap, align 8, !dbg !13380, !tbaa !2286
  %1 = load i64, i64* %n_reserve.addr, align 8, !dbg !13382, !tbaa !2447
  %cmp = icmp eq i64 %1, 0, !dbg !13384
  br i1 %cmp, label %if.then, label %if.end, !dbg !13385

if.then:                                          ; preds = %entry
  store i64 1, i64* %n_reserve.addr, align 8, !dbg !13386, !tbaa !2447
  br label %if.end, !dbg !13387

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, i64* %n_reserve.addr, align 8, !dbg !13388, !tbaa !2447
  %call1 = call noalias i8* @xnmalloc(i64 %2, i64 8), !dbg !13389
  %3 = bitcast i8* %call1 to i8**, !dbg !13389
  %4 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13390, !tbaa !2286
  %array = getelementptr inbounds %struct.heap, %struct.heap* %4, i32 0, i32 0, !dbg !13391, !ctir !1532
  store i8** %3, i8*** %array, align 8, !dbg !13392, !tbaa !13393, !ctir !1099
  %5 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13395, !tbaa !2286
  %array2 = getelementptr inbounds %struct.heap, %struct.heap* %5, i32 0, i32 0, !dbg !13396, !ctir !1532
  %6 = load i8**, i8*** %array2, align 8, !dbg !13396, !tbaa !13393, !ctir !1099
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 0, !dbg !13395, !ctir !1099
  store i8* null, i8** %arrayidx, align 8, !dbg !13397, !tbaa !2286
  %7 = load i64, i64* %n_reserve.addr, align 8, !dbg !13398, !tbaa !2447
  %8 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13399, !tbaa !2286
  %capacity = getelementptr inbounds %struct.heap, %struct.heap* %8, i32 0, i32 1, !dbg !13400, !ctir !1532
  store i64 %7, i64* %capacity, align 8, !dbg !13401, !tbaa !13402, !ctir !55
  %9 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13403, !tbaa !2286
  %count = getelementptr inbounds %struct.heap, %struct.heap* %9, i32 0, i32 2, !dbg !13404, !ctir !1532
  store i64 0, i64* %count, align 8, !dbg !13405, !tbaa !13406, !ctir !55
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13407, !tbaa !2286
  %tobool = icmp ne i32 (i8*, i8*)* %10, null, !dbg !13407
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13407

cond.true:                                        ; preds = %if.end
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13408, !tbaa !2286
  br label %cond.end, !dbg !13407

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %11, %cond.true ], [ @heap_default_compare, %cond.false ], !dbg !13407
  %12 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13409, !tbaa !2286
  %compare3 = getelementptr inbounds %struct.heap, %struct.heap* %12, i32 0, i32 3, !dbg !13410, !ctir !1532
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare3, align 8, !dbg !13411, !tbaa !13412, !ctir !1539
  %13 = load %struct.heap*, %struct.heap** %heap, align 8, !dbg !13413, !tbaa !2286
  ret %struct.heap* %13, !dbg !13414
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @heap_default_compare(i8* %a, i8* %b) #4 !dbg !13415 !ctir !337 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13416, metadata !DIExpression()), !dbg !13417
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  ret i32 0, !dbg !13420
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @heap_free(%struct.heap* %heap) #4 !dbg !13421 !ctir !1540 {
entry:
  %heap.addr = alloca %struct.heap*, align 8
  store %struct.heap* %heap, %struct.heap** %heap.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.heap** %heap.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  %0 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13424, !tbaa !2286
  %array = getelementptr inbounds %struct.heap, %struct.heap* %0, i32 0, i32 0, !dbg !13425, !ctir !1532
  %1 = load i8**, i8*** %array, align 8, !dbg !13425, !tbaa !13393, !ctir !1099
  %2 = bitcast i8** %1 to i8*, !dbg !13424
  call void @free(i8* %2) #12, !dbg !13426
  %3 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13427, !tbaa !2286
  %4 = bitcast %struct.heap* %3 to i8*, !dbg !13427
  call void @free(i8* %4) #12, !dbg !13428
  ret void, !dbg !13429
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @heap_insert(%struct.heap* %heap, i8* %item) #4 !dbg !13430 !ctir !1542 {
entry:
  %heap.addr = alloca %struct.heap*, align 8
  %item.addr = alloca i8*, align 8
  store %struct.heap* %heap, %struct.heap** %heap.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.heap** %heap.addr, metadata !13431, metadata !DIExpression()), !dbg !13432
  store i8* %item, i8** %item.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %item.addr, metadata !13433, metadata !DIExpression()), !dbg !13434
  %0 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13435, !tbaa !2286
  %capacity = getelementptr inbounds %struct.heap, %struct.heap* %0, i32 0, i32 1, !dbg !13437, !ctir !1532
  %1 = load i64, i64* %capacity, align 8, !dbg !13437, !tbaa !13402, !ctir !55
  %sub = sub i64 %1, 1, !dbg !13438
  %2 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13439, !tbaa !2286
  %count = getelementptr inbounds %struct.heap, %struct.heap* %2, i32 0, i32 2, !dbg !13440, !ctir !1532
  %3 = load i64, i64* %count, align 8, !dbg !13440, !tbaa !13406, !ctir !55
  %cmp = icmp ule i64 %sub, %3, !dbg !13441
  br i1 %cmp, label %if.then, label %if.end, !dbg !13442

if.then:                                          ; preds = %entry
  %4 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13443, !tbaa !2286
  %array = getelementptr inbounds %struct.heap, %struct.heap* %4, i32 0, i32 0, !dbg !13444, !ctir !1532
  %5 = load i8**, i8*** %array, align 8, !dbg !13444, !tbaa !13393, !ctir !1099
  %6 = bitcast i8** %5 to i8*, !dbg !13443
  %7 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13445, !tbaa !2286
  %capacity1 = getelementptr inbounds %struct.heap, %struct.heap* %7, i32 0, i32 1, !dbg !13446, !ctir !1532
  %call = call i8* @x2nrealloc(i8* %6, i64* %capacity1, i64 8), !dbg !13447
  %8 = bitcast i8* %call to i8**, !dbg !13447
  %9 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13448, !tbaa !2286
  %array2 = getelementptr inbounds %struct.heap, %struct.heap* %9, i32 0, i32 0, !dbg !13449, !ctir !1532
  store i8** %8, i8*** %array2, align 8, !dbg !13450, !tbaa !13393, !ctir !1099
  br label %if.end, !dbg !13448

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8*, i8** %item.addr, align 8, !dbg !13451, !tbaa !2286
  %11 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13452, !tbaa !2286
  %array3 = getelementptr inbounds %struct.heap, %struct.heap* %11, i32 0, i32 0, !dbg !13453, !ctir !1532
  %12 = load i8**, i8*** %array3, align 8, !dbg !13453, !tbaa !13393, !ctir !1099
  %13 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13454, !tbaa !2286
  %count4 = getelementptr inbounds %struct.heap, %struct.heap* %13, i32 0, i32 2, !dbg !13455, !ctir !1532
  %14 = load i64, i64* %count4, align 8, !dbg !13456, !tbaa !13406, !ctir !55
  %inc = add i64 %14, 1, !dbg !13456
  store i64 %inc, i64* %count4, align 8, !dbg !13456, !tbaa !13406, !ctir !55
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 %inc, !dbg !13452, !ctir !1099
  store i8* %10, i8** %arrayidx, align 8, !dbg !13457, !tbaa !2286
  %15 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13458, !tbaa !2286
  %array5 = getelementptr inbounds %struct.heap, %struct.heap* %15, i32 0, i32 0, !dbg !13459, !ctir !1532
  %16 = load i8**, i8*** %array5, align 8, !dbg !13459, !tbaa !13393, !ctir !1099
  %17 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13460, !tbaa !2286
  %count6 = getelementptr inbounds %struct.heap, %struct.heap* %17, i32 0, i32 2, !dbg !13461, !ctir !1532
  %18 = load i64, i64* %count6, align 8, !dbg !13461, !tbaa !13406, !ctir !55
  %19 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13462, !tbaa !2286
  %compare = getelementptr inbounds %struct.heap, %struct.heap* %19, i32 0, i32 3, !dbg !13463, !ctir !1532
  %20 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !13463, !tbaa !13412, !ctir !1539
  call void @heapify_up(i8** %16, i64 %18, i32 (i8*, i8*)* %20), !dbg !13464
  ret i32 0, !dbg !13465
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @heapify_up(i8** %array, i64 %count, i32 (i8*, i8*)* %compare) #4 !dbg !13466 !ctir !1548 {
entry:
  %array.addr = alloca i8**, align 8
  %count.addr = alloca i64, align 8
  %compare.addr = alloca i32 (i8*, i8*)*, align 8
  %k = alloca i64, align 8, !ctir !55
  %new_element = alloca i8*, align 8, !ctir !53
  store i8** %array, i8*** %array.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %array.addr, metadata !13467, metadata !DIExpression()), !dbg !13468
  store i64 %count, i64* %count.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  store i32 (i8*, i8*)* %compare, i32 (i8*, i8*)** %compare.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare.addr, metadata !13471, metadata !DIExpression()), !dbg !13472
  call void @llvm.dbg.declare(metadata i64* %k, metadata !13473, metadata !DIExpression()), !dbg !13474
  %0 = load i64, i64* %count.addr, align 8, !dbg !13475, !tbaa !2447
  store i64 %0, i64* %k, align 8, !dbg !13474, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %new_element, metadata !13476, metadata !DIExpression()), !dbg !13477
  %1 = load i8**, i8*** %array.addr, align 8, !dbg !13478, !tbaa !2286
  %2 = load i64, i64* %k, align 8, !dbg !13479, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !13478, !ctir !1099
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !13478, !tbaa !2286
  store i8* %3, i8** %new_element, align 8, !dbg !13477, !tbaa !2286
  br label %while.cond, !dbg !13480

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i64, i64* %k, align 8, !dbg !13481, !tbaa !2447
  %cmp = icmp ne i64 %4, 1, !dbg !13482
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13483

land.rhs:                                         ; preds = %while.cond
  %5 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13484, !tbaa !2286
  %6 = load i8**, i8*** %array.addr, align 8, !dbg !13485, !tbaa !2286
  %7 = load i64, i64* %k, align 8, !dbg !13486, !tbaa !2447
  %div = udiv i64 %7, 2, !dbg !13487
  %arrayidx1 = getelementptr inbounds i8*, i8** %6, i64 %div, !dbg !13485, !ctir !1099
  %8 = load i8*, i8** %arrayidx1, align 8, !dbg !13485, !tbaa !2286
  %9 = load i8*, i8** %new_element, align 8, !dbg !13488, !tbaa !2286
  %call = call i32 %5(i8* %8, i8* %9), !dbg !13484
  %cmp2 = icmp sle i32 %call, 0, !dbg !13489
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !13490
  br i1 %10, label %while.body, label %while.end, !dbg !13480

while.body:                                       ; preds = %land.end
  %11 = load i8**, i8*** %array.addr, align 8, !dbg !13491, !tbaa !2286
  %12 = load i64, i64* %k, align 8, !dbg !13493, !tbaa !2447
  %div3 = udiv i64 %12, 2, !dbg !13494
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %div3, !dbg !13491, !ctir !1099
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !13491, !tbaa !2286
  %14 = load i8**, i8*** %array.addr, align 8, !dbg !13495, !tbaa !2286
  %15 = load i64, i64* %k, align 8, !dbg !13496, !tbaa !2447
  %arrayidx5 = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !13495, !ctir !1099
  store i8* %13, i8** %arrayidx5, align 8, !dbg !13497, !tbaa !2286
  %16 = load i64, i64* %k, align 8, !dbg !13498, !tbaa !2447
  %div6 = udiv i64 %16, 2, !dbg !13498
  store i64 %div6, i64* %k, align 8, !dbg !13498, !tbaa !2447
  br label %while.cond, !dbg !13480, !llvm.loop !13499

while.end:                                        ; preds = %land.end
  %17 = load i8*, i8** %new_element, align 8, !dbg !13501, !tbaa !2286
  %18 = load i8**, i8*** %array.addr, align 8, !dbg !13502, !tbaa !2286
  %19 = load i64, i64* %k, align 8, !dbg !13503, !tbaa !2447
  %arrayidx7 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !13502, !ctir !1099
  store i8* %17, i8** %arrayidx7, align 8, !dbg !13504, !tbaa !2286
  ret void, !dbg !13505
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @heap_remove_top(%struct.heap* %heap) #4 !dbg !13506 !ctir !1544 {
entry:
  %retval = alloca i8*, align 8
  %heap.addr = alloca %struct.heap*, align 8
  %top = alloca i8*, align 8, !ctir !53
  store %struct.heap* %heap, %struct.heap** %heap.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.heap** %heap.addr, metadata !13507, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.declare(metadata i8** %top, metadata !13509, metadata !DIExpression()), !dbg !13510
  %0 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13511, !tbaa !2286
  %count = getelementptr inbounds %struct.heap, %struct.heap* %0, i32 0, i32 2, !dbg !13513, !ctir !1532
  %1 = load i64, i64* %count, align 8, !dbg !13513, !tbaa !13406, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !13514
  br i1 %cmp, label %if.then, label %if.end, !dbg !13515

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13516
  br label %return, !dbg !13516

if.end:                                           ; preds = %entry
  %2 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13517, !tbaa !2286
  %array = getelementptr inbounds %struct.heap, %struct.heap* %2, i32 0, i32 0, !dbg !13518, !ctir !1532
  %3 = load i8**, i8*** %array, align 8, !dbg !13518, !tbaa !13393, !ctir !1099
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !13517, !ctir !1099
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !13517, !tbaa !2286
  store i8* %4, i8** %top, align 8, !dbg !13519, !tbaa !2286
  %5 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13520, !tbaa !2286
  %array1 = getelementptr inbounds %struct.heap, %struct.heap* %5, i32 0, i32 0, !dbg !13521, !ctir !1532
  %6 = load i8**, i8*** %array1, align 8, !dbg !13521, !tbaa !13393, !ctir !1099
  %7 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13522, !tbaa !2286
  %count2 = getelementptr inbounds %struct.heap, %struct.heap* %7, i32 0, i32 2, !dbg !13523, !ctir !1532
  %8 = load i64, i64* %count2, align 8, !dbg !13524, !tbaa !13406, !ctir !55
  %dec = add i64 %8, -1, !dbg !13524
  store i64 %dec, i64* %count2, align 8, !dbg !13524, !tbaa !13406, !ctir !55
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %8, !dbg !13520, !ctir !1099
  %9 = load i8*, i8** %arrayidx3, align 8, !dbg !13520, !tbaa !2286
  %10 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13525, !tbaa !2286
  %array4 = getelementptr inbounds %struct.heap, %struct.heap* %10, i32 0, i32 0, !dbg !13526, !ctir !1532
  %11 = load i8**, i8*** %array4, align 8, !dbg !13526, !tbaa !13393, !ctir !1099
  %arrayidx5 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !13525, !ctir !1099
  store i8* %9, i8** %arrayidx5, align 8, !dbg !13527, !tbaa !2286
  %12 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13528, !tbaa !2286
  %array6 = getelementptr inbounds %struct.heap, %struct.heap* %12, i32 0, i32 0, !dbg !13529, !ctir !1532
  %13 = load i8**, i8*** %array6, align 8, !dbg !13529, !tbaa !13393, !ctir !1099
  %14 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13530, !tbaa !2286
  %count7 = getelementptr inbounds %struct.heap, %struct.heap* %14, i32 0, i32 2, !dbg !13531, !ctir !1532
  %15 = load i64, i64* %count7, align 8, !dbg !13531, !tbaa !13406, !ctir !55
  %16 = load %struct.heap*, %struct.heap** %heap.addr, align 8, !dbg !13532, !tbaa !2286
  %compare = getelementptr inbounds %struct.heap, %struct.heap* %16, i32 0, i32 3, !dbg !13533, !ctir !1532
  %17 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !13533, !tbaa !13412, !ctir !1539
  %call = call i64 @heapify_down(i8** %13, i64 %15, i64 1, i32 (i8*, i8*)* %17), !dbg !13534
  %18 = load i8*, i8** %top, align 8, !dbg !13535, !tbaa !2286
  store i8* %18, i8** %retval, align 8, !dbg !13536
  br label %return, !dbg !13536

return:                                           ; preds = %if.end, %if.then
  %19 = load i8*, i8** %retval, align 8, !dbg !13537
  ret i8* %19, !dbg !13537
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @heapify_down(i8** %array, i64 %count, i64 %initial, i32 (i8*, i8*)* %compare) #4 !dbg !13538 !ctir !1546 {
entry:
  %array.addr = alloca i8**, align 8
  %count.addr = alloca i64, align 8
  %initial.addr = alloca i64, align 8
  %compare.addr = alloca i32 (i8*, i8*)*, align 8
  %element = alloca i8*, align 8, !ctir !53
  %parent = alloca i64, align 8, !ctir !55
  %child = alloca i64, align 8, !ctir !55
  store i8** %array, i8*** %array.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %array.addr, metadata !13539, metadata !DIExpression()), !dbg !13540
  store i64 %count, i64* %count.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13541, metadata !DIExpression()), !dbg !13542
  store i64 %initial, i64* %initial.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %initial.addr, metadata !13543, metadata !DIExpression()), !dbg !13544
  store i32 (i8*, i8*)* %compare, i32 (i8*, i8*)** %compare.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare.addr, metadata !13545, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.declare(metadata i8** %element, metadata !13547, metadata !DIExpression()), !dbg !13548
  %0 = load i8**, i8*** %array.addr, align 8, !dbg !13549, !tbaa !2286
  %1 = load i64, i64* %initial.addr, align 8, !dbg !13550, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !13549, !ctir !1099
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !13549, !tbaa !2286
  store i8* %2, i8** %element, align 8, !dbg !13548, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %parent, metadata !13551, metadata !DIExpression()), !dbg !13552
  %3 = load i64, i64* %initial.addr, align 8, !dbg !13553, !tbaa !2447
  store i64 %3, i64* %parent, align 8, !dbg !13552, !tbaa !2447
  br label %while.cond, !dbg !13554

while.cond:                                       ; preds = %if.end9, %entry
  %4 = load i64, i64* %parent, align 8, !dbg !13555, !tbaa !2447
  %5 = load i64, i64* %count.addr, align 8, !dbg !13556, !tbaa !2447
  %div = udiv i64 %5, 2, !dbg !13557
  %cmp = icmp ule i64 %4, %div, !dbg !13558
  br i1 %cmp, label %while.body, label %while.end, !dbg !13554

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %child, metadata !13559, metadata !DIExpression()), !dbg !13561
  %6 = load i64, i64* %parent, align 8, !dbg !13562, !tbaa !2447
  %mul = mul i64 2, %6, !dbg !13563
  store i64 %mul, i64* %child, align 8, !dbg !13561, !tbaa !2447
  %7 = load i64, i64* %child, align 8, !dbg !13564, !tbaa !2447
  %8 = load i64, i64* %count.addr, align 8, !dbg !13566, !tbaa !2447
  %cmp1 = icmp ult i64 %7, %8, !dbg !13567
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !13568

land.lhs.true:                                    ; preds = %while.body
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13569, !tbaa !2286
  %10 = load i8**, i8*** %array.addr, align 8, !dbg !13570, !tbaa !2286
  %11 = load i64, i64* %child, align 8, !dbg !13571, !tbaa !2447
  %arrayidx2 = getelementptr inbounds i8*, i8** %10, i64 %11, !dbg !13570, !ctir !1099
  %12 = load i8*, i8** %arrayidx2, align 8, !dbg !13570, !tbaa !2286
  %13 = load i8**, i8*** %array.addr, align 8, !dbg !13572, !tbaa !2286
  %14 = load i64, i64* %child, align 8, !dbg !13573, !tbaa !2447
  %add = add i64 %14, 1, !dbg !13574
  %arrayidx3 = getelementptr inbounds i8*, i8** %13, i64 %add, !dbg !13572, !ctir !1099
  %15 = load i8*, i8** %arrayidx3, align 8, !dbg !13572, !tbaa !2286
  %call = call i32 %9(i8* %12, i8* %15), !dbg !13569
  %cmp4 = icmp slt i32 %call, 0, !dbg !13575
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13576

if.then:                                          ; preds = %land.lhs.true
  %16 = load i64, i64* %child, align 8, !dbg !13577, !tbaa !2447
  %inc = add i64 %16, 1, !dbg !13577
  store i64 %inc, i64* %child, align 8, !dbg !13577, !tbaa !2447
  br label %if.end, !dbg !13578

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body
  %17 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare.addr, align 8, !dbg !13579, !tbaa !2286
  %18 = load i8**, i8*** %array.addr, align 8, !dbg !13581, !tbaa !2286
  %19 = load i64, i64* %child, align 8, !dbg !13582, !tbaa !2447
  %arrayidx5 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !13581, !ctir !1099
  %20 = load i8*, i8** %arrayidx5, align 8, !dbg !13581, !tbaa !2286
  %21 = load i8*, i8** %element, align 8, !dbg !13583, !tbaa !2286
  %call6 = call i32 %17(i8* %20, i8* %21), !dbg !13579
  %cmp7 = icmp sle i32 %call6, 0, !dbg !13584
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !13585

if.then8:                                         ; preds = %if.end
  br label %while.end, !dbg !13586

if.end9:                                          ; preds = %if.end
  %22 = load i8**, i8*** %array.addr, align 8, !dbg !13587, !tbaa !2286
  %23 = load i64, i64* %child, align 8, !dbg !13588, !tbaa !2447
  %arrayidx10 = getelementptr inbounds i8*, i8** %22, i64 %23, !dbg !13587, !ctir !1099
  %24 = load i8*, i8** %arrayidx10, align 8, !dbg !13587, !tbaa !2286
  %25 = load i8**, i8*** %array.addr, align 8, !dbg !13589, !tbaa !2286
  %26 = load i64, i64* %parent, align 8, !dbg !13590, !tbaa !2447
  %arrayidx11 = getelementptr inbounds i8*, i8** %25, i64 %26, !dbg !13589, !ctir !1099
  store i8* %24, i8** %arrayidx11, align 8, !dbg !13591, !tbaa !2286
  %27 = load i64, i64* %child, align 8, !dbg !13592, !tbaa !2447
  store i64 %27, i64* %parent, align 8, !dbg !13593, !tbaa !2447
  br label %while.cond, !dbg !13554, !llvm.loop !13594

while.end:                                        ; preds = %if.then8, %while.cond
  %28 = load i8*, i8** %element, align 8, !dbg !13596, !tbaa !2286
  %29 = load i8**, i8*** %array.addr, align 8, !dbg !13597, !tbaa !2286
  %30 = load i64, i64* %parent, align 8, !dbg !13598, !tbaa !2447
  %arrayidx12 = getelementptr inbounds i8*, i8** %29, i64 %30, !dbg !13597, !ctir !1099
  store i8* %28, i8** %arrayidx12, align 8, !dbg !13599, !tbaa !2286
  %31 = load i64, i64* %parent, align 8, !dbg !13600, !tbaa !2447
  ret i64 %31, !dbg !13601
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @inttostr(i32 %i, i8* %buf) #4 !dbg !13602 !ctir !1553 {
entry:
  %i.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i32 %i, i32* %i.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13604, metadata !DIExpression()), !dbg !13605
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13608, metadata !DIExpression()), !dbg !13609
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13610, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 11, !dbg !13611
  store i8* %add.ptr, i8** %p, align 8, !dbg !13609, !tbaa !2286
  %1 = load i8*, i8** %p, align 8, !dbg !13612, !tbaa !2286
  store i8 0, i8* %1, align 1, !dbg !13613, !tbaa !2438, !ctir !10
  %2 = load i32, i32* %i.addr, align 4, !dbg !13614, !tbaa !2273
  %cmp = icmp slt i32 %2, 0, !dbg !13616
  br i1 %cmp, label %if.then, label %if.else, !dbg !13617

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13618

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i32, i32* %i.addr, align 4, !dbg !13620, !tbaa !2273
  %rem = srem i32 %3, 10, !dbg !13621
  %sub = sub nsw i32 48, %rem, !dbg !13622
  %conv = trunc i32 %sub to i8, !dbg !13623
  %4 = load i8*, i8** %p, align 8, !dbg !13624, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !13624
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13624, !tbaa !2286
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !13625, !tbaa !2438, !ctir !10
  br label %do.cond, !dbg !13626

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %i.addr, align 4, !dbg !13627, !tbaa !2273
  %div = sdiv i32 %5, 10, !dbg !13627
  store i32 %div, i32* %i.addr, align 4, !dbg !13627, !tbaa !2273
  %cmp1 = icmp ne i32 %div, 0, !dbg !13628
  br i1 %cmp1, label %do.body, label %do.end, !dbg !13626, !llvm.loop !13629

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !13631, !tbaa !2286
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !13631
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !13631, !tbaa !2286
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !13632, !tbaa !2438, !ctir !10
  br label %if.end, !dbg !13633

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !13634

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i32, i32* %i.addr, align 4, !dbg !13636, !tbaa !2273
  %rem5 = srem i32 %7, 10, !dbg !13637
  %add = add nsw i32 48, %rem5, !dbg !13638
  %conv6 = trunc i32 %add to i8, !dbg !13639
  %8 = load i8*, i8** %p, align 8, !dbg !13640, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !13640
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13640, !tbaa !2286
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !13641, !tbaa !2438, !ctir !10
  br label %do.cond8, !dbg !13642

do.cond8:                                         ; preds = %do.body4
  %9 = load i32, i32* %i.addr, align 4, !dbg !13643, !tbaa !2273
  %div9 = sdiv i32 %9, 10, !dbg !13643
  store i32 %div9, i32* %i.addr, align 4, !dbg !13643, !tbaa !2273
  %cmp10 = icmp ne i32 %div9, 0, !dbg !13644
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !13642, !llvm.loop !13645

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !13647, !tbaa !2286
  ret i8* %10, !dbg !13648
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @uinttostr(i32 %i, i8* %buf) #4 !dbg !13649 !ctir !1558 {
entry:
  %i.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i32 %i, i32* %i.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13650, metadata !DIExpression()), !dbg !13651
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13654, metadata !DIExpression()), !dbg !13655
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13656, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 10, !dbg !13657
  store i8* %add.ptr, i8** %p, align 8, !dbg !13655, !tbaa !2286
  %1 = load i8*, i8** %p, align 8, !dbg !13658, !tbaa !2286
  store i8 0, i8* %1, align 1, !dbg !13659, !tbaa !2438, !ctir !10
  %2 = load i32, i32* %i.addr, align 4, !dbg !13660, !tbaa !2273
  %cmp = icmp ult i32 %2, 0, !dbg !13662
  br i1 %cmp, label %if.then, label %if.else, !dbg !13663

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13664

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i32, i32* %i.addr, align 4, !dbg !13666, !tbaa !2273
  %rem = urem i32 %3, 10, !dbg !13667
  %sub = sub i32 48, %rem, !dbg !13668
  %conv = trunc i32 %sub to i8, !dbg !13669
  %4 = load i8*, i8** %p, align 8, !dbg !13670, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !13670
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13670, !tbaa !2286
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !13671, !tbaa !2438, !ctir !10
  br label %do.cond, !dbg !13672

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %i.addr, align 4, !dbg !13673, !tbaa !2273
  %div = udiv i32 %5, 10, !dbg !13673
  store i32 %div, i32* %i.addr, align 4, !dbg !13673, !tbaa !2273
  %cmp1 = icmp ne i32 %div, 0, !dbg !13674
  br i1 %cmp1, label %do.body, label %do.end, !dbg !13672, !llvm.loop !13675

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !13677, !tbaa !2286
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !13677
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !13677, !tbaa !2286
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !13678, !tbaa !2438, !ctir !10
  br label %if.end, !dbg !13679

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !13680

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i32, i32* %i.addr, align 4, !dbg !13682, !tbaa !2273
  %rem5 = urem i32 %7, 10, !dbg !13683
  %add = add i32 48, %rem5, !dbg !13684
  %conv6 = trunc i32 %add to i8, !dbg !13685
  %8 = load i8*, i8** %p, align 8, !dbg !13686, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !13686
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13686, !tbaa !2286
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !13687, !tbaa !2438, !ctir !10
  br label %do.cond8, !dbg !13688

do.cond8:                                         ; preds = %do.body4
  %9 = load i32, i32* %i.addr, align 4, !dbg !13689, !tbaa !2273
  %div9 = udiv i32 %9, 10, !dbg !13689
  store i32 %div9, i32* %i.addr, align 4, !dbg !13689, !tbaa !2273
  %cmp10 = icmp ne i32 %div9, 0, !dbg !13690
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !13688, !llvm.loop !13691

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !13693, !tbaa !2286
  ret i8* %10, !dbg !13694
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %i, i8* %buf) #4 !dbg !13695 !ctir !1563 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i64 %i, i64* %i.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !13696, metadata !DIExpression()), !dbg !13697
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13698, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13700, metadata !DIExpression()), !dbg !13701
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13702, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !13703
  store i8* %add.ptr, i8** %p, align 8, !dbg !13701, !tbaa !2286
  %1 = load i8*, i8** %p, align 8, !dbg !13704, !tbaa !2286
  store i8 0, i8* %1, align 1, !dbg !13705, !tbaa !2438, !ctir !10
  %2 = load i64, i64* %i.addr, align 8, !dbg !13706, !tbaa !2447
  %cmp = icmp ult i64 %2, 0, !dbg !13708
  br i1 %cmp, label %if.then, label %if.else, !dbg !13709

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13710

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !13712, !tbaa !2447
  %rem = urem i64 %3, 10, !dbg !13713
  %sub = sub i64 48, %rem, !dbg !13714
  %conv = trunc i64 %sub to i8, !dbg !13715
  %4 = load i8*, i8** %p, align 8, !dbg !13716, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !13716
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13716, !tbaa !2286
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !13717, !tbaa !2438, !ctir !10
  br label %do.cond, !dbg !13718

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !13719, !tbaa !2447
  %div = udiv i64 %5, 10, !dbg !13719
  store i64 %div, i64* %i.addr, align 8, !dbg !13719, !tbaa !2447
  %cmp1 = icmp ne i64 %div, 0, !dbg !13720
  br i1 %cmp1, label %do.body, label %do.end, !dbg !13718, !llvm.loop !13721

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !13723, !tbaa !2286
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !13723
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !13723, !tbaa !2286
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !13724, !tbaa !2438, !ctir !10
  br label %if.end, !dbg !13725

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !13726

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !13728, !tbaa !2447
  %rem5 = urem i64 %7, 10, !dbg !13729
  %add = add i64 48, %rem5, !dbg !13730
  %conv6 = trunc i64 %add to i8, !dbg !13731
  %8 = load i8*, i8** %p, align 8, !dbg !13732, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !13732
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13732, !tbaa !2286
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !13733, !tbaa !2438, !ctir !10
  br label %do.cond8, !dbg !13734

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !13735, !tbaa !2447
  %div9 = udiv i64 %9, 10, !dbg !13735
  store i64 %div9, i64* %i.addr, align 8, !dbg !13735, !tbaa !2447
  %cmp10 = icmp ne i64 %div9, 0, !dbg !13736
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !13734, !llvm.loop !13737

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !13739, !tbaa !2286
  ret i8* %10, !dbg !13740
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gnu_mbswidth(i8* %string, i32 %flags) #4 !dbg !13741 !ctir !1568 {
entry:
  %string.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !13743, metadata !DIExpression()), !dbg !13744
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13745, metadata !DIExpression()), !dbg !13746
  %0 = load i8*, i8** %string.addr, align 8, !dbg !13747, !tbaa !2286
  %1 = load i8*, i8** %string.addr, align 8, !dbg !13748, !tbaa !2286
  %call = call i64 @strlen(i8* %1) #14, !dbg !13749
  %2 = load i32, i32* %flags.addr, align 4, !dbg !13750, !tbaa !2273
  %call1 = call i32 @mbsnwidth(i8* %0, i64 %call, i32 %2), !dbg !13751
  ret i32 %call1, !dbg !13752
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) #4 !dbg !13753 !ctir !1570 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %p = alloca i8*, align 8, !ctir !88
  %plimit = alloca i8*, align 8, !ctir !88
  %width = alloca i32, align 4, !ctir !7
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1572
  %wc = alloca i32, align 4, !ctir !1308
  %bytes = alloca i64, align 8, !ctir !55
  %w = alloca i32, align 4, !ctir !7
  %c = alloca i8, align 1, !ctir !321
  store i8* %string, i8** %string.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !13754, metadata !DIExpression()), !dbg !13755
  store i64 %nbytes, i64* %nbytes.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !13756, metadata !DIExpression()), !dbg !13757
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13758, metadata !DIExpression()), !dbg !13759
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13760, metadata !DIExpression()), !dbg !13761
  %0 = load i8*, i8** %string.addr, align 8, !dbg !13762, !tbaa !2286
  store i8* %0, i8** %p, align 8, !dbg !13761, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !13763, metadata !DIExpression()), !dbg !13764
  %1 = load i8*, i8** %p, align 8, !dbg !13765, !tbaa !2286
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !13766, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !13767
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !13764, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %width, metadata !13768, metadata !DIExpression()), !dbg !13769
  store i32 0, i32* %width, align 4, !dbg !13770, !tbaa !2273
  %call = call i64 @__ctype_get_mb_cur_max() #12, !dbg !13771
  %cmp = icmp ugt i64 %call, 1, !dbg !13773
  br i1 %cmp, label %if.then, label %if.end49, !dbg !13774

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !13775

while.cond:                                       ; preds = %sw.epilog, %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !13777, !tbaa !2286
  %4 = load i8*, i8** %plimit, align 8, !dbg !13778, !tbaa !2286
  %cmp1 = icmp ult i8* %3, %4, !dbg !13779
  br i1 %cmp1, label %while.body, label %while.end, !dbg !13775

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8, !dbg !13780, !tbaa !2286
  %6 = load i8, i8* %5, align 1, !dbg !13781, !tbaa !2438, !ctir !89
  %conv = sext i8 %6 to i32, !dbg !13781
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !13782

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !13783, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13783
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13783, !tbaa !2286
  %8 = load i32, i32* %width, align 4, !dbg !13785, !tbaa !2273
  %inc = add nsw i32 %8, 1, !dbg !13785
  store i32 %inc, i32* %width, align 4, !dbg !13785, !tbaa !2273
  br label %sw.epilog, !dbg !13786

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !13787, metadata !DIExpression()), !dbg !13789
  %9 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !13790
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !13790
  br label %do.body, !dbg !13791

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !13792, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13795, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.declare(metadata i32* %w, metadata !13797, metadata !DIExpression()), !dbg !13798
  %10 = load i8*, i8** %p, align 8, !dbg !13799, !tbaa !2286
  %11 = load i8*, i8** %plimit, align 8, !dbg !13800, !tbaa !2286
  %12 = load i8*, i8** %p, align 8, !dbg !13801, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !13802
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !13802
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13802
  %call2 = call i64 @rpl_mbrtowc(i32* %wc, i8* %10, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !13803
  store i64 %call2, i64* %bytes, align 8, !dbg !13804, !tbaa !2447
  %13 = load i64, i64* %bytes, align 8, !dbg !13805, !tbaa !2447
  %cmp3 = icmp eq i64 %13, -1, !dbg !13807
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !13808

if.then5:                                         ; preds = %do.body
  %14 = load i32, i32* %flags.addr, align 4, !dbg !13809, !tbaa !2273
  %and = and i32 %14, 1, !dbg !13812
  %tobool = icmp ne i32 %and, 0, !dbg !13812
  br i1 %tobool, label %if.else, label %if.then6, !dbg !13813

if.then6:                                         ; preds = %if.then5
  %15 = load i8*, i8** %p, align 8, !dbg !13814, !tbaa !2286
  %incdec.ptr7 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !13814
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !13814, !tbaa !2286
  %16 = load i32, i32* %width, align 4, !dbg !13816, !tbaa !2273
  %inc8 = add nsw i32 %16, 1, !dbg !13816
  store i32 %inc8, i32* %width, align 4, !dbg !13816, !tbaa !2273
  br label %do.end, !dbg !13817

if.else:                                          ; preds = %if.then5
  store i32 -1, i32* %retval, align 4, !dbg !13818
  br label %return, !dbg !13818

if.end:                                           ; preds = %do.body
  %17 = load i64, i64* %bytes, align 8, !dbg !13819, !tbaa !2447
  %cmp9 = icmp eq i64 %17, -2, !dbg !13821
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !13822

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !13823, !tbaa !2273
  %and12 = and i32 %18, 1, !dbg !13826
  %tobool13 = icmp ne i32 %and12, 0, !dbg !13826
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !13827

if.then14:                                        ; preds = %if.then11
  %19 = load i8*, i8** %plimit, align 8, !dbg !13828, !tbaa !2286
  store i8* %19, i8** %p, align 8, !dbg !13830, !tbaa !2286
  %20 = load i32, i32* %width, align 4, !dbg !13831, !tbaa !2273
  %inc15 = add nsw i32 %20, 1, !dbg !13831
  store i32 %inc15, i32* %width, align 4, !dbg !13831, !tbaa !2273
  br label %do.end, !dbg !13832

if.else16:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !13833
  br label %return, !dbg !13833

if.end17:                                         ; preds = %if.end
  %21 = load i64, i64* %bytes, align 8, !dbg !13834, !tbaa !2447
  %cmp18 = icmp eq i64 %21, 0, !dbg !13836
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !13837

if.then20:                                        ; preds = %if.end17
  store i64 1, i64* %bytes, align 8, !dbg !13838, !tbaa !2447
  br label %if.end21, !dbg !13839

if.end21:                                         ; preds = %if.then20, %if.end17
  %22 = load i32, i32* %wc, align 4, !dbg !13840, !tbaa !2273
  %call22 = call i32 @wcwidth(i32 %22) #12, !dbg !13841
  store i32 %call22, i32* %w, align 4, !dbg !13842, !tbaa !2273
  %23 = load i32, i32* %w, align 4, !dbg !13843, !tbaa !2273
  %cmp23 = icmp sge i32 %23, 0, !dbg !13845
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !13846

if.then25:                                        ; preds = %if.end21
  %24 = load i32, i32* %w, align 4, !dbg !13847, !tbaa !2273
  %25 = load i32, i32* %width, align 4, !dbg !13850, !tbaa !2273
  %sub = sub nsw i32 2147483647, %25, !dbg !13851
  %cmp26 = icmp sgt i32 %24, %sub, !dbg !13852
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !13853

if.then28:                                        ; preds = %if.then25
  br label %overflow, !dbg !13854

if.end29:                                         ; preds = %if.then25
  %26 = load i32, i32* %w, align 4, !dbg !13855, !tbaa !2273
  %27 = load i32, i32* %width, align 4, !dbg !13856, !tbaa !2273
  %add = add nsw i32 %27, %26, !dbg !13856
  store i32 %add, i32* %width, align 4, !dbg !13856, !tbaa !2273
  br label %if.end45, !dbg !13857

if.else30:                                        ; preds = %if.end21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !13858, !tbaa !2273
  %and31 = and i32 %28, 2, !dbg !13860
  %tobool32 = icmp ne i32 %and31, 0, !dbg !13860
  br i1 %tobool32, label %if.else43, label %if.then33, !dbg !13861

if.then33:                                        ; preds = %if.else30
  %29 = load i32, i32* %wc, align 4, !dbg !13862, !tbaa !2273
  %call34 = call i32 @iswcntrl(i32 %29) #12, !dbg !13865
  %tobool35 = icmp ne i32 %call34, 0, !dbg !13865
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !13866

if.then36:                                        ; preds = %if.then33
  %30 = load i32, i32* %width, align 4, !dbg !13867, !tbaa !2273
  %cmp37 = icmp eq i32 %30, 2147483647, !dbg !13870
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !13871

if.then39:                                        ; preds = %if.then36
  br label %overflow, !dbg !13872

if.end40:                                         ; preds = %if.then36
  %31 = load i32, i32* %width, align 4, !dbg !13873, !tbaa !2273
  %inc41 = add nsw i32 %31, 1, !dbg !13873
  store i32 %inc41, i32* %width, align 4, !dbg !13873, !tbaa !2273
  br label %if.end42, !dbg !13874

if.end42:                                         ; preds = %if.end40, %if.then33
  br label %if.end44, !dbg !13875

if.else43:                                        ; preds = %if.else30
  store i32 -1, i32* %retval, align 4, !dbg !13876
  br label %return, !dbg !13876

if.end44:                                         ; preds = %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end29
  %32 = load i64, i64* %bytes, align 8, !dbg !13877, !tbaa !2447
  %33 = load i8*, i8** %p, align 8, !dbg !13878, !tbaa !2286
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !13878
  store i8* %add.ptr46, i8** %p, align 8, !dbg !13878, !tbaa !2286
  br label %do.cond, !dbg !13879

do.cond:                                          ; preds = %if.end45
  %call47 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !13880
  %tobool48 = icmp ne i32 %call47, 0, !dbg !13881
  %lnot = xor i1 %tobool48, true, !dbg !13881
  br i1 %lnot, label %do.body, label %do.end, !dbg !13879, !llvm.loop !13882

do.end:                                           ; preds = %do.cond, %if.then14, %if.then6
  br label %sw.epilog, !dbg !13884

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !13775, !llvm.loop !13885

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %width, align 4, !dbg !13887, !tbaa !2273
  store i32 %34, i32* %retval, align 4, !dbg !13888
  br label %return, !dbg !13888

if.end49:                                         ; preds = %entry
  br label %while.cond50, !dbg !13889

while.cond50:                                     ; preds = %if.end86, %if.end49
  %35 = load i8*, i8** %p, align 8, !dbg !13890, !tbaa !2286
  %36 = load i8*, i8** %plimit, align 8, !dbg !13891, !tbaa !2286
  %cmp51 = icmp ult i8* %35, %36, !dbg !13892
  br i1 %cmp51, label %while.body53, label %while.end87, !dbg !13889

while.body53:                                     ; preds = %while.cond50
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13893, metadata !DIExpression()), !dbg !13895
  %37 = load i8*, i8** %p, align 8, !dbg !13896, !tbaa !2286
  %incdec.ptr54 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !13896
  store i8* %incdec.ptr54, i8** %p, align 8, !dbg !13896, !tbaa !2286
  %38 = load i8, i8* %37, align 1, !dbg !13897, !tbaa !2438, !ctir !89
  store i8 %38, i8* %c, align 1, !dbg !13895, !tbaa !2438
  %call55 = call i16** @__ctype_b_loc() #16, !dbg !13898
  %39 = load i16*, i16** %call55, align 8, !dbg !13898, !tbaa !2286, !ctir !325
  %40 = load i8, i8* %c, align 1, !dbg !13898, !tbaa !2438
  %conv56 = zext i8 %40 to i32, !dbg !13898
  %idxprom = sext i32 %conv56 to i64, !dbg !13898
  %arrayidx = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !13898, !ctir !325
  %41 = load i16, i16* %arrayidx, align 2, !dbg !13898, !tbaa !3423
  %conv57 = zext i16 %41 to i32, !dbg !13898
  %and58 = and i32 %conv57, 16384, !dbg !13898
  %tobool59 = icmp ne i32 %and58, 0, !dbg !13898
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !13900

if.then60:                                        ; preds = %while.body53
  %42 = load i32, i32* %width, align 4, !dbg !13901, !tbaa !2273
  %cmp61 = icmp eq i32 %42, 2147483647, !dbg !13904
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13905

if.then63:                                        ; preds = %if.then60
  br label %overflow, !dbg !13906

if.end64:                                         ; preds = %if.then60
  %43 = load i32, i32* %width, align 4, !dbg !13907, !tbaa !2273
  %inc65 = add nsw i32 %43, 1, !dbg !13907
  store i32 %inc65, i32* %width, align 4, !dbg !13907, !tbaa !2273
  br label %if.end86, !dbg !13908

if.else66:                                        ; preds = %while.body53
  %44 = load i32, i32* %flags.addr, align 4, !dbg !13909, !tbaa !2273
  %and67 = and i32 %44, 2, !dbg !13911
  %tobool68 = icmp ne i32 %and67, 0, !dbg !13911
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !13912

if.then69:                                        ; preds = %if.else66
  %call70 = call i16** @__ctype_b_loc() #16, !dbg !13913
  %45 = load i16*, i16** %call70, align 8, !dbg !13913, !tbaa !2286, !ctir !325
  %46 = load i8, i8* %c, align 1, !dbg !13913, !tbaa !2438
  %conv71 = zext i8 %46 to i32, !dbg !13913
  %idxprom72 = sext i32 %conv71 to i64, !dbg !13913
  %arrayidx73 = getelementptr inbounds i16, i16* %45, i64 %idxprom72, !dbg !13913, !ctir !325
  %47 = load i16, i16* %arrayidx73, align 2, !dbg !13913, !tbaa !3423
  %conv74 = zext i16 %47 to i32, !dbg !13913
  %and75 = and i32 %conv74, 2, !dbg !13913
  %tobool76 = icmp ne i32 %and75, 0, !dbg !13913
  br i1 %tobool76, label %if.end83, label %if.then77, !dbg !13916

if.then77:                                        ; preds = %if.then69
  %48 = load i32, i32* %width, align 4, !dbg !13917, !tbaa !2273
  %cmp78 = icmp eq i32 %48, 2147483647, !dbg !13920
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !13921

if.then80:                                        ; preds = %if.then77
  br label %overflow, !dbg !13922

if.end81:                                         ; preds = %if.then77
  %49 = load i32, i32* %width, align 4, !dbg !13923, !tbaa !2273
  %inc82 = add nsw i32 %49, 1, !dbg !13923
  store i32 %inc82, i32* %width, align 4, !dbg !13923, !tbaa !2273
  br label %if.end83, !dbg !13924

if.end83:                                         ; preds = %if.end81, %if.then69
  br label %if.end85, !dbg !13925

if.else84:                                        ; preds = %if.else66
  store i32 -1, i32* %retval, align 4, !dbg !13926
  br label %return, !dbg !13926

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end64
  br label %while.cond50, !dbg !13889, !llvm.loop !13927

while.end87:                                      ; preds = %while.cond50
  %50 = load i32, i32* %width, align 4, !dbg !13929, !tbaa !2273
  store i32 %50, i32* %retval, align 4, !dbg !13930
  br label %return, !dbg !13930

overflow:                                         ; preds = %if.then80, %if.then63, %if.then39, %if.then28
  call void @llvm.dbg.label(metadata !13931), !dbg !13932
  store i32 2147483647, i32* %retval, align 4, !dbg !13933
  br label %return, !dbg !13933

return:                                           ; preds = %overflow, %while.end87, %if.else84, %while.end, %if.else43, %if.else16, %if.else
  %51 = load i32, i32* %retval, align 4, !dbg !13934
  ret i32 %51, !dbg !13934
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @num_processors(i32 %query) #4 !dbg !13935 !ctir !1592 {
entry:
  %retval = alloca i64, align 8
  %query.addr = alloca i32, align 4
  %omp_env_limit = alloca i64, align 8, !ctir !57
  %omp_env_threads = alloca i64, align 8, !ctir !57
  %nprocs = alloca i64, align 8, !ctir !57
  store i32 %query, i32* %query.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %query.addr, metadata !13937, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.declare(metadata i64* %omp_env_limit, metadata !13939, metadata !DIExpression()), !dbg !13940
  store i64 -1, i64* %omp_env_limit, align 8, !dbg !13940, !tbaa !2447
  %0 = load i32, i32* %query.addr, align 4, !dbg !13941, !tbaa !2438
  %cmp = icmp eq i32 %0, 2, !dbg !13943
  br i1 %cmp, label %if.then, label %if.end9, !dbg !13944

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %omp_env_threads, metadata !13945, metadata !DIExpression()), !dbg !13947
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.231, i64 0, i64 0)) #12, !dbg !13948
  %call1 = call i64 @parse_omp_threads(i8* %call), !dbg !13949
  store i64 %call1, i64* %omp_env_threads, align 8, !dbg !13950, !tbaa !2447
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.232, i64 0, i64 0)) #12, !dbg !13951
  %call3 = call i64 @parse_omp_threads(i8* %call2), !dbg !13952
  store i64 %call3, i64* %omp_env_limit, align 8, !dbg !13953, !tbaa !2447
  %1 = load i64, i64* %omp_env_limit, align 8, !dbg !13954, !tbaa !2447
  %tobool = icmp ne i64 %1, 0, !dbg !13954
  br i1 %tobool, label %if.end, label %if.then4, !dbg !13956

if.then4:                                         ; preds = %if.then
  store i64 -1, i64* %omp_env_limit, align 8, !dbg !13957, !tbaa !2447
  br label %if.end, !dbg !13958

if.end:                                           ; preds = %if.then4, %if.then
  %2 = load i64, i64* %omp_env_threads, align 8, !dbg !13959, !tbaa !2447
  %tobool5 = icmp ne i64 %2, 0, !dbg !13959
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !13961

if.then6:                                         ; preds = %if.end
  %3 = load i64, i64* %omp_env_threads, align 8, !dbg !13962, !tbaa !2447
  %4 = load i64, i64* %omp_env_limit, align 8, !dbg !13962, !tbaa !2447
  %cmp7 = icmp ult i64 %3, %4, !dbg !13962
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !13962

cond.true:                                        ; preds = %if.then6
  %5 = load i64, i64* %omp_env_threads, align 8, !dbg !13962, !tbaa !2447
  br label %cond.end, !dbg !13962

cond.false:                                       ; preds = %if.then6
  %6 = load i64, i64* %omp_env_limit, align 8, !dbg !13962, !tbaa !2447
  br label %cond.end, !dbg !13962

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !13962
  store i64 %cond, i64* %retval, align 8, !dbg !13963
  br label %return, !dbg !13963

if.end8:                                          ; preds = %if.end
  store i32 1, i32* %query.addr, align 4, !dbg !13964, !tbaa !2438
  br label %if.end9, !dbg !13965

if.end9:                                          ; preds = %if.end8, %entry
  call void @llvm.dbg.declare(metadata i64* %nprocs, metadata !13966, metadata !DIExpression()), !dbg !13968
  %7 = load i32, i32* %query.addr, align 4, !dbg !13969, !tbaa !2438
  %call10 = call i64 @num_processors_ignoring_omp(i32 %7), !dbg !13970
  store i64 %call10, i64* %nprocs, align 8, !dbg !13968, !tbaa !2447
  %8 = load i64, i64* %nprocs, align 8, !dbg !13971, !tbaa !2447
  %9 = load i64, i64* %omp_env_limit, align 8, !dbg !13971, !tbaa !2447
  %cmp11 = icmp ult i64 %8, %9, !dbg !13971
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !13971

cond.true12:                                      ; preds = %if.end9
  %10 = load i64, i64* %nprocs, align 8, !dbg !13971, !tbaa !2447
  br label %cond.end14, !dbg !13971

cond.false13:                                     ; preds = %if.end9
  %11 = load i64, i64* %omp_env_limit, align 8, !dbg !13971, !tbaa !2447
  br label %cond.end14, !dbg !13971

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i64 [ %10, %cond.true12 ], [ %11, %cond.false13 ], !dbg !13971
  store i64 %cond15, i64* %retval, align 8, !dbg !13972
  br label %return, !dbg !13972

return:                                           ; preds = %cond.end14, %cond.end
  %12 = load i64, i64* %retval, align 8, !dbg !13973
  ret i64 %12, !dbg !13973
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @parse_omp_threads(i8* %threads) #4 !dbg !13974 !ctir !1594 {
entry:
  %retval = alloca i64, align 8
  %threads.addr = alloca i8*, align 8
  %ret = alloca i64, align 8, !ctir !57
  %endptr = alloca i8*, align 8, !ctir !9
  %value = alloca i64, align 8, !ctir !57
  store i8* %threads, i8** %threads.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %threads.addr, metadata !13975, metadata !DIExpression()), !dbg !13976
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !13977, metadata !DIExpression()), !dbg !13978
  store i64 0, i64* %ret, align 8, !dbg !13978, !tbaa !2447
  %0 = load i8*, i8** %threads.addr, align 8, !dbg !13979, !tbaa !2286
  %cmp = icmp eq i8* %0, null, !dbg !13981
  br i1 %cmp, label %if.then, label %if.end, !dbg !13982

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %ret, align 8, !dbg !13983, !tbaa !2447
  store i64 %1, i64* %retval, align 8, !dbg !13984
  br label %return, !dbg !13984

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !13985

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i8*, i8** %threads.addr, align 8, !dbg !13986, !tbaa !2286
  %3 = load i8, i8* %2, align 1, !dbg !13987, !tbaa !2438, !ctir !89
  %conv = sext i8 %3 to i32, !dbg !13987
  %cmp1 = icmp ne i32 %conv, 0, !dbg !13988
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !13989

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %threads.addr, align 8, !dbg !13990, !tbaa !2286
  %5 = load i8, i8* %4, align 1, !dbg !13991, !tbaa !2438, !ctir !89
  %conv3 = sext i8 %5 to i32, !dbg !13991
  %call = call zeroext i1 @c_isspace(i32 %conv3), !dbg !13992
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %call, %land.rhs ], !dbg !13993
  br i1 %6, label %while.body, label %while.end, !dbg !13985

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %threads.addr, align 8, !dbg !13994, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13994
  store i8* %incdec.ptr, i8** %threads.addr, align 8, !dbg !13994, !tbaa !2286
  br label %while.cond, !dbg !13985, !llvm.loop !13995

while.end:                                        ; preds = %land.end
  %8 = load i8*, i8** %threads.addr, align 8, !dbg !13996, !tbaa !2286
  %9 = load i8, i8* %8, align 1, !dbg !13998, !tbaa !2438, !ctir !89
  %conv5 = sext i8 %9 to i32, !dbg !13998
  %call6 = call zeroext i1 @c_isdigit(i32 %conv5), !dbg !13999
  br i1 %call6, label %if.then7, label %if.end35, !dbg !14000

if.then7:                                         ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !14001, metadata !DIExpression()), !dbg !14003
  store i8* null, i8** %endptr, align 8, !dbg !14003, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %value, metadata !14004, metadata !DIExpression()), !dbg !14005
  %10 = load i8*, i8** %threads.addr, align 8, !dbg !14006, !tbaa !2286
  %call8 = call i64 @strtoul(i8* %10, i8** %endptr, i32 10) #12, !dbg !14007
  store i64 %call8, i64* %value, align 8, !dbg !14005, !tbaa !2447
  %11 = load i8*, i8** %endptr, align 8, !dbg !14008, !tbaa !2286
  %cmp9 = icmp ne i8* %11, null, !dbg !14010
  br i1 %cmp9, label %if.then11, label %if.end34, !dbg !14011

if.then11:                                        ; preds = %if.then7
  br label %while.cond12, !dbg !14012

while.cond12:                                     ; preds = %while.body21, %if.then11
  %12 = load i8*, i8** %endptr, align 8, !dbg !14014, !tbaa !2286
  %13 = load i8, i8* %12, align 1, !dbg !14015, !tbaa !2438, !ctir !10
  %conv13 = sext i8 %13 to i32, !dbg !14015
  %cmp14 = icmp ne i32 %conv13, 0, !dbg !14016
  br i1 %cmp14, label %land.rhs16, label %land.end20, !dbg !14017

land.rhs16:                                       ; preds = %while.cond12
  %14 = load i8*, i8** %endptr, align 8, !dbg !14018, !tbaa !2286
  %15 = load i8, i8* %14, align 1, !dbg !14019, !tbaa !2438, !ctir !10
  %conv17 = sext i8 %15 to i32, !dbg !14019
  %call18 = call zeroext i1 @c_isspace(i32 %conv17), !dbg !14020
  br label %land.end20

land.end20:                                       ; preds = %land.rhs16, %while.cond12
  %16 = phi i1 [ false, %while.cond12 ], [ %call18, %land.rhs16 ], !dbg !14021
  br i1 %16, label %while.body21, label %while.end23, !dbg !14012

while.body21:                                     ; preds = %land.end20
  %17 = load i8*, i8** %endptr, align 8, !dbg !14022, !tbaa !2286
  %incdec.ptr22 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !14022
  store i8* %incdec.ptr22, i8** %endptr, align 8, !dbg !14022, !tbaa !2286
  br label %while.cond12, !dbg !14012, !llvm.loop !14023

while.end23:                                      ; preds = %land.end20
  %18 = load i8*, i8** %endptr, align 8, !dbg !14024, !tbaa !2286
  %19 = load i8, i8* %18, align 1, !dbg !14026, !tbaa !2438, !ctir !10
  %conv24 = sext i8 %19 to i32, !dbg !14026
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !14027
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !14028

if.then27:                                        ; preds = %while.end23
  %20 = load i64, i64* %value, align 8, !dbg !14029, !tbaa !2447
  store i64 %20, i64* %retval, align 8, !dbg !14030
  br label %return, !dbg !14030

if.else:                                          ; preds = %while.end23
  %21 = load i8*, i8** %endptr, align 8, !dbg !14031, !tbaa !2286
  %22 = load i8, i8* %21, align 1, !dbg !14033, !tbaa !2438, !ctir !10
  %conv28 = sext i8 %22 to i32, !dbg !14033
  %cmp29 = icmp eq i32 %conv28, 44, !dbg !14034
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14035

if.then31:                                        ; preds = %if.else
  %23 = load i64, i64* %value, align 8, !dbg !14036, !tbaa !2447
  store i64 %23, i64* %retval, align 8, !dbg !14037
  br label %return, !dbg !14037

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %if.end34, !dbg !14038

if.end34:                                         ; preds = %if.end33, %if.then7
  br label %if.end35, !dbg !14039

if.end35:                                         ; preds = %if.end34, %while.end
  %24 = load i64, i64* %ret, align 8, !dbg !14040, !tbaa !2447
  store i64 %24, i64* %retval, align 8, !dbg !14041
  br label %return, !dbg !14041

return:                                           ; preds = %if.end35, %if.then31, %if.then27, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !14042
  ret i64 %25, !dbg !14042
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @num_processors_ignoring_omp(i32 %query) #4 !dbg !14043 !ctir !1592 {
entry:
  %retval = alloca i64, align 8
  %query.addr = alloca i32, align 4
  %nprocs = alloca i64, align 8, !ctir !57
  %nprocs3 = alloca i64, align 8, !ctir !31
  %nprocs8 = alloca i64, align 8, !ctir !31
  %nprocs_current = alloca i64, align 8, !ctir !57
  store i32 %query, i32* %query.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %query.addr, metadata !14044, metadata !DIExpression()), !dbg !14045
  %0 = load i32, i32* %query.addr, align 4, !dbg !14046, !tbaa !2438
  %cmp = icmp eq i32 %0, 1, !dbg !14048
  br i1 %cmp, label %if.then, label %if.else, !dbg !14049

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %nprocs, metadata !14050, metadata !DIExpression()), !dbg !14053
  %call = call i64 @num_processors_via_affinity_mask(), !dbg !14054
  store i64 %call, i64* %nprocs, align 8, !dbg !14053, !tbaa !2447
  %1 = load i64, i64* %nprocs, align 8, !dbg !14055, !tbaa !2447
  %cmp1 = icmp ugt i64 %1, 0, !dbg !14057
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14058

if.then2:                                         ; preds = %if.then
  %2 = load i64, i64* %nprocs, align 8, !dbg !14059, !tbaa !2447
  store i64 %2, i64* %retval, align 8, !dbg !14060
  br label %return, !dbg !14060

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %nprocs3, metadata !14061, metadata !DIExpression()), !dbg !14063
  %call4 = call i64 @sysconf(i32 84) #12, !dbg !14064
  store i64 %call4, i64* %nprocs3, align 8, !dbg !14063, !tbaa !2447
  %3 = load i64, i64* %nprocs3, align 8, !dbg !14065, !tbaa !2447
  %cmp5 = icmp sgt i64 %3, 0, !dbg !14067
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !14068

if.then6:                                         ; preds = %if.end
  %4 = load i64, i64* %nprocs3, align 8, !dbg !14069, !tbaa !2447
  store i64 %4, i64* %retval, align 8, !dbg !14070
  br label %return, !dbg !14070

if.end7:                                          ; preds = %if.end
  br label %if.end20, !dbg !14071

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %nprocs8, metadata !14072, metadata !DIExpression()), !dbg !14075
  %call9 = call i64 @sysconf(i32 83) #12, !dbg !14076
  store i64 %call9, i64* %nprocs8, align 8, !dbg !14075, !tbaa !2447
  %5 = load i64, i64* %nprocs8, align 8, !dbg !14077, !tbaa !2447
  %cmp10 = icmp eq i64 %5, 1, !dbg !14079
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !14080

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %nprocs_current, metadata !14081, metadata !DIExpression()), !dbg !14083
  %call12 = call i64 @num_processors_via_affinity_mask(), !dbg !14084
  store i64 %call12, i64* %nprocs_current, align 8, !dbg !14083, !tbaa !2447
  %6 = load i64, i64* %nprocs_current, align 8, !dbg !14085, !tbaa !2447
  %cmp13 = icmp ugt i64 %6, 0, !dbg !14087
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !14088

if.then14:                                        ; preds = %if.then11
  %7 = load i64, i64* %nprocs_current, align 8, !dbg !14089, !tbaa !2447
  store i64 %7, i64* %nprocs8, align 8, !dbg !14090, !tbaa !2447
  br label %if.end15, !dbg !14091

if.end15:                                         ; preds = %if.then14, %if.then11
  br label %if.end16, !dbg !14092

if.end16:                                         ; preds = %if.end15, %if.else
  %8 = load i64, i64* %nprocs8, align 8, !dbg !14093, !tbaa !2447
  %cmp17 = icmp sgt i64 %8, 0, !dbg !14095
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !14096

if.then18:                                        ; preds = %if.end16
  %9 = load i64, i64* %nprocs8, align 8, !dbg !14097, !tbaa !2447
  store i64 %9, i64* %retval, align 8, !dbg !14098
  br label %return, !dbg !14098

if.end19:                                         ; preds = %if.end16
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end7
  store i64 1, i64* %retval, align 8, !dbg !14099
  br label %return, !dbg !14099

return:                                           ; preds = %if.end20, %if.then18, %if.then6, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !14100
  ret i64 %10, !dbg !14100
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @num_processors_via_affinity_mask() #4 !dbg !14101 !ctir !1596 {
entry:
  %retval = alloca i64, align 8
  %set = alloca %struct.__sigset_t, align 8, !ctir !1598
  %count = alloca i64, align 8, !ctir !57
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %set, metadata !14102, metadata !DIExpression()), !dbg !14104
  %call = call i32 @sched_getaffinity(i32 0, i64 128, %struct.__sigset_t* %set) #12, !dbg !14105
  %cmp = icmp eq i32 %call, 0, !dbg !14107
  br i1 %cmp, label %if.then, label %if.end5, !dbg !14108

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %count, metadata !14109, metadata !DIExpression()), !dbg !14111
  %call1 = call i32 @__sched_cpucount(i64 128, %struct.__sigset_t* %set) #12, !dbg !14112
  %conv = sext i32 %call1 to i64, !dbg !14112
  store i64 %conv, i64* %count, align 8, !dbg !14113, !tbaa !2447
  %0 = load i64, i64* %count, align 8, !dbg !14114, !tbaa !2447
  %cmp2 = icmp ugt i64 %0, 0, !dbg !14116
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !14117

if.then4:                                         ; preds = %if.then
  %1 = load i64, i64* %count, align 8, !dbg !14118, !tbaa !2447
  store i64 %1, i64* %retval, align 8, !dbg !14119
  br label %return, !dbg !14119

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !14120

if.end5:                                          ; preds = %if.end, %entry
  store i64 0, i64* %retval, align 8, !dbg !14121
  br label %return, !dbg !14121

return:                                           ; preds = %if.end5, %if.then4
  %2 = load i64, i64* %retval, align 8, !dbg !14122
  ret i64 %2, !dbg !14122
}

; Function Attrs: nounwind
declare dso_local i64 @sysconf(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @sched_getaffinity(i32, i64, %struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @__sched_cpucount(i64, %struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @physmem_total() #4 !dbg !14123 !ctir !1608 {
entry:
  %retval = alloca double, align 8
  %pages = alloca double, align 8, !ctir !377
  %pagesize = alloca double, align 8, !ctir !377
  %si = alloca %struct.sysinfo, align 8, !ctir !14125
  call void @llvm.dbg.declare(metadata double* %pages, metadata !14148, metadata !DIExpression()), !dbg !14150
  %call = call i64 @sysconf(i32 85) #12, !dbg !14151
  %conv = sitofp i64 %call to double, !dbg !14151
  store double %conv, double* %pages, align 8, !dbg !14150, !tbaa !3865
  call void @llvm.dbg.declare(metadata double* %pagesize, metadata !14152, metadata !DIExpression()), !dbg !14153
  %call1 = call i64 @sysconf(i32 30) #12, !dbg !14154
  %conv2 = sitofp i64 %call1 to double, !dbg !14154
  store double %conv2, double* %pagesize, align 8, !dbg !14153, !tbaa !3865
  %0 = load double, double* %pages, align 8, !dbg !14155, !tbaa !3865
  %cmp = fcmp ole double 0.000000e+00, %0, !dbg !14157
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14158

land.lhs.true:                                    ; preds = %entry
  %1 = load double, double* %pagesize, align 8, !dbg !14159, !tbaa !3865
  %cmp4 = fcmp ole double 0.000000e+00, %1, !dbg !14160
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14161

if.then:                                          ; preds = %land.lhs.true
  %2 = load double, double* %pages, align 8, !dbg !14162, !tbaa !3865
  %3 = load double, double* %pagesize, align 8, !dbg !14163, !tbaa !3865
  %mul = fmul double %2, %3, !dbg !14164
  store double %mul, double* %retval, align 8, !dbg !14165
  br label %return, !dbg !14165

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.sysinfo* %si, metadata !14166, metadata !DIExpression()), !dbg !14168
  %call6 = call i32 @sysinfo(%struct.sysinfo* %si) #12, !dbg !14169
  %cmp7 = icmp eq i32 %call6, 0, !dbg !14171
  br i1 %cmp7, label %if.then9, label %if.end13, !dbg !14172

if.then9:                                         ; preds = %if.end
  %totalram = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 2, !dbg !14173, !ctir !14125
  %4 = load i64, i64* %totalram, align 8, !dbg !14173, !tbaa !14174, !ctir !1610
  %conv10 = uitofp i64 %4 to double, !dbg !14176
  %mem_unit = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 12, !dbg !14177, !ctir !14125
  %5 = load i32, i32* %mem_unit, align 8, !dbg !14177, !tbaa !14178, !ctir !1612
  %conv11 = uitofp i32 %5 to double, !dbg !14179
  %mul12 = fmul double %conv10, %conv11, !dbg !14180
  store double %mul12, double* %retval, align 8, !dbg !14181
  br label %return, !dbg !14181

if.end13:                                         ; preds = %if.end
  store double 0x4190000000000000, double* %retval, align 8, !dbg !14182
  br label %return, !dbg !14182

return:                                           ; preds = %if.end13, %if.then9, %if.then
  %6 = load double, double* %retval, align 8, !dbg !14183
  ret double %6, !dbg !14183
}

; Function Attrs: nounwind
declare dso_local i32 @sysinfo(%struct.sysinfo*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @physmem_available() #4 !dbg !14184 !ctir !1608 {
entry:
  %retval = alloca double, align 8
  %pages = alloca double, align 8, !ctir !377
  %pagesize = alloca double, align 8, !ctir !377
  %si = alloca %struct.sysinfo, align 8, !ctir !14125
  call void @llvm.dbg.declare(metadata double* %pages, metadata !14185, metadata !DIExpression()), !dbg !14187
  %call = call i64 @sysconf(i32 86) #12, !dbg !14188
  %conv = sitofp i64 %call to double, !dbg !14188
  store double %conv, double* %pages, align 8, !dbg !14187, !tbaa !3865
  call void @llvm.dbg.declare(metadata double* %pagesize, metadata !14189, metadata !DIExpression()), !dbg !14190
  %call1 = call i64 @sysconf(i32 30) #12, !dbg !14191
  %conv2 = sitofp i64 %call1 to double, !dbg !14191
  store double %conv2, double* %pagesize, align 8, !dbg !14190, !tbaa !3865
  %0 = load double, double* %pages, align 8, !dbg !14192, !tbaa !3865
  %cmp = fcmp ole double 0.000000e+00, %0, !dbg !14194
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14195

land.lhs.true:                                    ; preds = %entry
  %1 = load double, double* %pagesize, align 8, !dbg !14196, !tbaa !3865
  %cmp4 = fcmp ole double 0.000000e+00, %1, !dbg !14197
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14198

if.then:                                          ; preds = %land.lhs.true
  %2 = load double, double* %pages, align 8, !dbg !14199, !tbaa !3865
  %3 = load double, double* %pagesize, align 8, !dbg !14200, !tbaa !3865
  %mul = fmul double %2, %3, !dbg !14201
  store double %mul, double* %retval, align 8, !dbg !14202
  br label %return, !dbg !14202

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.sysinfo* %si, metadata !14203, metadata !DIExpression()), !dbg !14205
  %call6 = call i32 @sysinfo(%struct.sysinfo* %si) #12, !dbg !14206
  %cmp7 = icmp eq i32 %call6, 0, !dbg !14208
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !14209

if.then9:                                         ; preds = %if.end
  %freeram = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 3, !dbg !14210, !ctir !14125
  %4 = load i64, i64* %freeram, align 8, !dbg !14210, !tbaa !14211, !ctir !1610
  %conv10 = uitofp i64 %4 to double, !dbg !14212
  %bufferram = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 5, !dbg !14213, !ctir !14125
  %5 = load i64, i64* %bufferram, align 8, !dbg !14213, !tbaa !14214, !ctir !1610
  %conv11 = uitofp i64 %5 to double, !dbg !14215
  %add = fadd double %conv10, %conv11, !dbg !14216
  %mem_unit = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %si, i32 0, i32 12, !dbg !14217, !ctir !14125
  %6 = load i32, i32* %mem_unit, align 8, !dbg !14217, !tbaa !14178, !ctir !1612
  %conv12 = uitofp i32 %6 to double, !dbg !14218
  %mul13 = fmul double %add, %conv12, !dbg !14219
  store double %mul13, double* %retval, align 8, !dbg !14220
  br label %return, !dbg !14220

if.end14:                                         ; preds = %if.end
  %call15 = call double @physmem_total(), !dbg !14221
  %div = fdiv double %call15, 4.000000e+00, !dbg !14222
  store double %div, double* %retval, align 8, !dbg !14223
  br label %return, !dbg !14223

return:                                           ; preds = %if.end14, %if.then9, %if.then
  %7 = load double, double* %retval, align 8, !dbg !14224
  ret double %7, !dbg !14224
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_pipe2(i32* nonnull %fd, i32 %flags) #4 !dbg !1145 !ctir !1147 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32*, align 8
  %flags.addr = alloca i32, align 4
  %tmp = alloca [2 x i32], align 4, !ctir !544
  %result = alloca i32, align 4, !ctir !7
  %fcntl_flags = alloca i32, align 4, !ctir !7
  %fcntl_flags40 = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32* %fd, i32** %fd.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32** %fd.addr, metadata !14225, metadata !DIExpression()), !dbg !14226
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14227, metadata !DIExpression()), !dbg !14228
  call void @llvm.dbg.declare(metadata [2 x i32]* %tmp, metadata !14229, metadata !DIExpression()), !dbg !14230
  %0 = load i32*, i32** %fd.addr, align 8, !dbg !14231, !tbaa !2286
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !14231, !ctir !264
  %1 = load i32, i32* %arrayidx, align 4, !dbg !14231, !tbaa !2273
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 0, !dbg !14232, !ctir !544
  store i32 %1, i32* %arrayidx1, align 4, !dbg !14233, !tbaa !2273
  %2 = load i32*, i32** %fd.addr, align 8, !dbg !14234, !tbaa !2286
  %arrayidx2 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !14234, !ctir !264
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !14234, !tbaa !2273
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 1, !dbg !14235, !ctir !544
  store i32 %3, i32* %arrayidx3, align 4, !dbg !14236, !tbaa !2273
  %4 = load i32, i32* @rpl_pipe2.have_pipe2_really, align 4, !dbg !14237, !tbaa !2273
  %cmp = icmp sge i32 %4, 0, !dbg !14240
  br i1 %cmp, label %if.then, label %if.end8, !dbg !14241

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %result, metadata !14242, metadata !DIExpression()), !dbg !14244
  %5 = load i32*, i32** %fd.addr, align 8, !dbg !14245, !tbaa !2286
  %6 = load i32, i32* %flags.addr, align 4, !dbg !14246, !tbaa !2273
  %call = call i32 @pipe2(i32* %5, i32 %6) #12, !dbg !14247
  store i32 %call, i32* %result, align 4, !dbg !14244, !tbaa !2273
  %7 = load i32, i32* %result, align 4, !dbg !14248, !tbaa !2273
  %cmp4 = icmp slt i32 %7, 0, !dbg !14250
  br i1 %cmp4, label %land.lhs.true, label %if.then7, !dbg !14251

land.lhs.true:                                    ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !14252
  %8 = load i32, i32* %call5, align 4, !dbg !14252, !tbaa !2273, !ctir !7
  %cmp6 = icmp eq i32 %8, 38, !dbg !14253
  br i1 %cmp6, label %if.end, label %if.then7, !dbg !14254

if.then7:                                         ; preds = %land.lhs.true, %if.then
  store i32 1, i32* @rpl_pipe2.have_pipe2_really, align 4, !dbg !14255, !tbaa !2273
  %9 = load i32, i32* %result, align 4, !dbg !14257, !tbaa !2273
  store i32 %9, i32* %retval, align 4, !dbg !14258
  br label %return, !dbg !14258

if.end:                                           ; preds = %land.lhs.true
  store i32 -1, i32* @rpl_pipe2.have_pipe2_really, align 4, !dbg !14259, !tbaa !2273
  br label %if.end8, !dbg !14260

if.end8:                                          ; preds = %if.end, %entry
  %10 = load i32, i32* %flags.addr, align 4, !dbg !14261, !tbaa !2273
  %and = and i32 %10, -526337, !dbg !14263
  %cmp9 = icmp ne i32 %and, 0, !dbg !14264
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !14265

if.then10:                                        ; preds = %if.end8
  %call11 = call i32* @__errno_location() #16, !dbg !14266
  store i32 22, i32* %call11, align 4, !dbg !14268, !tbaa !2273, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !14269
  br label %return, !dbg !14269

if.end12:                                         ; preds = %if.end8
  %11 = load i32*, i32** %fd.addr, align 8, !dbg !14270, !tbaa !2286
  %call13 = call i32 @pipe(i32* %11) #12, !dbg !14272
  %cmp14 = icmp slt i32 %call13, 0, !dbg !14273
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14274

if.then15:                                        ; preds = %if.end12
  store i32 -1, i32* %retval, align 4, !dbg !14275
  br label %return, !dbg !14275

if.end16:                                         ; preds = %if.end12
  %12 = load i32, i32* %flags.addr, align 4, !dbg !14276, !tbaa !2273
  %and17 = and i32 %12, 2048, !dbg !14278
  %tobool = icmp ne i32 %and17, 0, !dbg !14278
  br i1 %tobool, label %if.then18, label %if.end36, !dbg !14279

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %fcntl_flags, metadata !14280, metadata !DIExpression()), !dbg !14282
  %13 = load i32*, i32** %fd.addr, align 8, !dbg !14283, !tbaa !2286
  %arrayidx19 = getelementptr inbounds i32, i32* %13, i64 1, !dbg !14283, !ctir !264
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !14283, !tbaa !2273
  %call20 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %14, i32 3, i32 0), !dbg !14285
  store i32 %call20, i32* %fcntl_flags, align 4, !dbg !14286, !tbaa !2273
  %cmp21 = icmp slt i32 %call20, 0, !dbg !14287
  br i1 %cmp21, label %if.then34, label %lor.lhs.false, !dbg !14288

lor.lhs.false:                                    ; preds = %if.then18
  %15 = load i32*, i32** %fd.addr, align 8, !dbg !14289, !tbaa !2286
  %arrayidx22 = getelementptr inbounds i32, i32* %15, i64 1, !dbg !14289, !ctir !264
  %16 = load i32, i32* %arrayidx22, align 4, !dbg !14289, !tbaa !2273
  %17 = load i32, i32* %fcntl_flags, align 4, !dbg !14290, !tbaa !2273
  %or = or i32 %17, 2048, !dbg !14291
  %call23 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %16, i32 4, i32 %or), !dbg !14292
  %cmp24 = icmp eq i32 %call23, -1, !dbg !14293
  br i1 %cmp24, label %if.then34, label %lor.lhs.false25, !dbg !14294

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %18 = load i32*, i32** %fd.addr, align 8, !dbg !14295, !tbaa !2286
  %arrayidx26 = getelementptr inbounds i32, i32* %18, i64 0, !dbg !14295, !ctir !264
  %19 = load i32, i32* %arrayidx26, align 4, !dbg !14295, !tbaa !2273
  %call27 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %19, i32 3, i32 0), !dbg !14296
  store i32 %call27, i32* %fcntl_flags, align 4, !dbg !14297, !tbaa !2273
  %cmp28 = icmp slt i32 %call27, 0, !dbg !14298
  br i1 %cmp28, label %if.then34, label %lor.lhs.false29, !dbg !14299

lor.lhs.false29:                                  ; preds = %lor.lhs.false25
  %20 = load i32*, i32** %fd.addr, align 8, !dbg !14300, !tbaa !2286
  %arrayidx30 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !14300, !ctir !264
  %21 = load i32, i32* %arrayidx30, align 4, !dbg !14300, !tbaa !2273
  %22 = load i32, i32* %fcntl_flags, align 4, !dbg !14301, !tbaa !2273
  %or31 = or i32 %22, 2048, !dbg !14302
  %call32 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %21, i32 4, i32 %or31), !dbg !14303
  %cmp33 = icmp eq i32 %call32, -1, !dbg !14304
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !14305

if.then34:                                        ; preds = %lor.lhs.false29, %lor.lhs.false25, %lor.lhs.false, %if.then18
  br label %fail, !dbg !14306

if.end35:                                         ; preds = %lor.lhs.false29
  br label %if.end36, !dbg !14307

if.end36:                                         ; preds = %if.end35, %if.end16
  %23 = load i32, i32* %flags.addr, align 4, !dbg !14308, !tbaa !2273
  %and37 = and i32 %23, 524288, !dbg !14310
  %tobool38 = icmp ne i32 %and37, 0, !dbg !14310
  br i1 %tobool38, label %if.then39, label %if.end60, !dbg !14311

if.then39:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i32* %fcntl_flags40, metadata !14312, metadata !DIExpression()), !dbg !14314
  %24 = load i32*, i32** %fd.addr, align 8, !dbg !14315, !tbaa !2286
  %arrayidx41 = getelementptr inbounds i32, i32* %24, i64 1, !dbg !14315, !ctir !264
  %25 = load i32, i32* %arrayidx41, align 4, !dbg !14315, !tbaa !2273
  %call42 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %25, i32 1, i32 0), !dbg !14317
  store i32 %call42, i32* %fcntl_flags40, align 4, !dbg !14318, !tbaa !2273
  %cmp43 = icmp slt i32 %call42, 0, !dbg !14319
  br i1 %cmp43, label %if.then58, label %lor.lhs.false44, !dbg !14320

lor.lhs.false44:                                  ; preds = %if.then39
  %26 = load i32*, i32** %fd.addr, align 8, !dbg !14321, !tbaa !2286
  %arrayidx45 = getelementptr inbounds i32, i32* %26, i64 1, !dbg !14321, !ctir !264
  %27 = load i32, i32* %arrayidx45, align 4, !dbg !14321, !tbaa !2273
  %28 = load i32, i32* %fcntl_flags40, align 4, !dbg !14322, !tbaa !2273
  %or46 = or i32 %28, 1, !dbg !14323
  %call47 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %27, i32 2, i32 %or46), !dbg !14324
  %cmp48 = icmp eq i32 %call47, -1, !dbg !14325
  br i1 %cmp48, label %if.then58, label %lor.lhs.false49, !dbg !14326

lor.lhs.false49:                                  ; preds = %lor.lhs.false44
  %29 = load i32*, i32** %fd.addr, align 8, !dbg !14327, !tbaa !2286
  %arrayidx50 = getelementptr inbounds i32, i32* %29, i64 0, !dbg !14327, !ctir !264
  %30 = load i32, i32* %arrayidx50, align 4, !dbg !14327, !tbaa !2273
  %call51 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %30, i32 1, i32 0), !dbg !14328
  store i32 %call51, i32* %fcntl_flags40, align 4, !dbg !14329, !tbaa !2273
  %cmp52 = icmp slt i32 %call51, 0, !dbg !14330
  br i1 %cmp52, label %if.then58, label %lor.lhs.false53, !dbg !14331

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %31 = load i32*, i32** %fd.addr, align 8, !dbg !14332, !tbaa !2286
  %arrayidx54 = getelementptr inbounds i32, i32* %31, i64 0, !dbg !14332, !ctir !264
  %32 = load i32, i32* %arrayidx54, align 4, !dbg !14332, !tbaa !2273
  %33 = load i32, i32* %fcntl_flags40, align 4, !dbg !14333, !tbaa !2273
  %or55 = or i32 %33, 1, !dbg !14334
  %call56 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %32, i32 2, i32 %or55), !dbg !14335
  %cmp57 = icmp eq i32 %call56, -1, !dbg !14336
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !14337

if.then58:                                        ; preds = %lor.lhs.false53, %lor.lhs.false49, %lor.lhs.false44, %if.then39
  br label %fail, !dbg !14338

if.end59:                                         ; preds = %lor.lhs.false53
  br label %if.end60, !dbg !14339

if.end60:                                         ; preds = %if.end59, %if.end36
  store i32 0, i32* %retval, align 4, !dbg !14340
  br label %return, !dbg !14340

fail:                                             ; preds = %if.then58, %if.then34
  call void @llvm.dbg.label(metadata !14341), !dbg !14342
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !14343, metadata !DIExpression()), !dbg !14345
  %call61 = call i32* @__errno_location() #16, !dbg !14346
  %34 = load i32, i32* %call61, align 4, !dbg !14346, !tbaa !2273, !ctir !7
  store i32 %34, i32* %saved_errno, align 4, !dbg !14345, !tbaa !2273
  %35 = load i32*, i32** %fd.addr, align 8, !dbg !14347, !tbaa !2286
  %arrayidx62 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !14347, !ctir !264
  %36 = load i32, i32* %arrayidx62, align 4, !dbg !14347, !tbaa !2273
  %call63 = call i32 @close(i32 %36), !dbg !14348
  %37 = load i32*, i32** %fd.addr, align 8, !dbg !14349, !tbaa !2286
  %arrayidx64 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !14349, !ctir !264
  %38 = load i32, i32* %arrayidx64, align 4, !dbg !14349, !tbaa !2273
  %call65 = call i32 @close(i32 %38), !dbg !14350
  %arrayidx66 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 0, !dbg !14351, !ctir !544
  %39 = load i32, i32* %arrayidx66, align 4, !dbg !14351, !tbaa !2273
  %40 = load i32*, i32** %fd.addr, align 8, !dbg !14352, !tbaa !2286
  %arrayidx67 = getelementptr inbounds i32, i32* %40, i64 0, !dbg !14352, !ctir !264
  store i32 %39, i32* %arrayidx67, align 4, !dbg !14353, !tbaa !2273
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* %tmp, i64 0, i64 1, !dbg !14354, !ctir !544
  %41 = load i32, i32* %arrayidx68, align 4, !dbg !14354, !tbaa !2273
  %42 = load i32*, i32** %fd.addr, align 8, !dbg !14355, !tbaa !2286
  %arrayidx69 = getelementptr inbounds i32, i32* %42, i64 1, !dbg !14355, !ctir !264
  store i32 %41, i32* %arrayidx69, align 4, !dbg !14356, !tbaa !2273
  %43 = load i32, i32* %saved_errno, align 4, !dbg !14357, !tbaa !2273
  %call70 = call i32* @__errno_location() #16, !dbg !14358
  store i32 %43, i32* %call70, align 4, !dbg !14359, !tbaa !2273, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !14360
  br label %return, !dbg !14360

return:                                           ; preds = %fail, %if.end60, %if.then15, %if.then10, %if.then7
  %44 = load i32, i32* %retval, align 4, !dbg !14361
  ret i32 %44, !dbg !14361
}

; Function Attrs: nounwind
declare dso_local i32 @pipe2(i32*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @pipe(i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @posix2_version() #4 !dbg !14362 !ctir !1617 {
entry:
  %v = alloca i64, align 8, !ctir !31
  %s = alloca i8*, align 8, !ctir !88
  %e = alloca i8*, align 8, !ctir !9
  %i = alloca i64, align 8, !ctir !31
  call void @llvm.dbg.declare(metadata i64* %v, metadata !14364, metadata !DIExpression()), !dbg !14365
  store i64 200809, i64* %v, align 8, !dbg !14365, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %s, metadata !14366, metadata !DIExpression()), !dbg !14367
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.241, i64 0, i64 0)) #12, !dbg !14368
  store i8* %call, i8** %s, align 8, !dbg !14367, !tbaa !2286
  %0 = load i8*, i8** %s, align 8, !dbg !14369, !tbaa !2286
  %tobool = icmp ne i8* %0, null, !dbg !14369
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !14371

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %s, align 8, !dbg !14372, !tbaa !2286
  %2 = load i8, i8* %1, align 1, !dbg !14373, !tbaa !2438, !ctir !89
  %conv = sext i8 %2 to i32, !dbg !14373
  %tobool1 = icmp ne i32 %conv, 0, !dbg !14373
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !14374

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %e, metadata !14375, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14378, metadata !DIExpression()), !dbg !14379
  %3 = load i8*, i8** %s, align 8, !dbg !14380, !tbaa !2286
  %call2 = call i64 @strtol(i8* %3, i8** %e, i32 10) #12, !dbg !14381
  store i64 %call2, i64* %i, align 8, !dbg !14379, !tbaa !2447
  %4 = load i8*, i8** %e, align 8, !dbg !14382, !tbaa !2286
  %5 = load i8, i8* %4, align 1, !dbg !14384, !tbaa !2438, !ctir !10
  %tobool3 = icmp ne i8 %5, 0, !dbg !14384
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !14385

if.then4:                                         ; preds = %if.then
  %6 = load i64, i64* %i, align 8, !dbg !14386, !tbaa !2447
  store i64 %6, i64* %v, align 8, !dbg !14387, !tbaa !2447
  br label %if.end, !dbg !14388

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !14389

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %7 = load i64, i64* %v, align 8, !dbg !14390, !tbaa !2447
  %cmp = icmp slt i64 %7, -2147483648, !dbg !14391
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14390

cond.true:                                        ; preds = %if.end5
  br label %cond.end11, !dbg !14390

cond.false:                                       ; preds = %if.end5
  %8 = load i64, i64* %v, align 8, !dbg !14392, !tbaa !2447
  %cmp7 = icmp slt i64 %8, 2147483647, !dbg !14393
  br i1 %cmp7, label %cond.true9, label %cond.false10, !dbg !14392

cond.true9:                                       ; preds = %cond.false
  %9 = load i64, i64* %v, align 8, !dbg !14394, !tbaa !2447
  br label %cond.end, !dbg !14392

cond.false10:                                     ; preds = %cond.false
  br label %cond.end, !dbg !14392

cond.end:                                         ; preds = %cond.false10, %cond.true9
  %cond = phi i64 [ %9, %cond.true9 ], [ 2147483647, %cond.false10 ], !dbg !14392
  br label %cond.end11, !dbg !14390

cond.end11:                                       ; preds = %cond.end, %cond.true
  %cond12 = phi i64 [ -2147483648, %cond.true ], [ %cond, %cond.end ], !dbg !14390
  %conv13 = trunc i64 %cond12 to i32, !dbg !14390
  ret i32 %conv13, !dbg !14395
}

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !14396 !ctir !306 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !88
  %base = alloca i8*, align 8, !ctir !88
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !14397, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !14399, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.declare(metadata i8** %base, metadata !14401, metadata !DIExpression()), !dbg !14402
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !14403, !tbaa !2286
  %cmp = icmp eq i8* %0, null, !dbg !14405
  br i1 %cmp, label %if.then, label %if.end, !dbg !14406

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14407, !tbaa !2286
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.246, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !14409
  call void @abort() #13, !dbg !14410
  unreachable, !dbg !14410

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !14411, !tbaa !2286
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !14412
  store i8* %call1, i8** %slash, align 8, !dbg !14413, !tbaa !2286
  %3 = load i8*, i8** %slash, align 8, !dbg !14414, !tbaa !2286
  %cmp2 = icmp ne i8* %3, null, !dbg !14415
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !14414

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !14416, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !14417
  br label %cond.end, !dbg !14414

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !14418, !tbaa !2286
  br label %cond.end, !dbg !14414

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !14414
  store i8* %cond, i8** %base, align 8, !dbg !14419, !tbaa !2286
  %6 = load i8*, i8** %base, align 8, !dbg !14420, !tbaa !2286
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !14422, !tbaa !2286
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !14423
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !14423
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14423
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !14424
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !14425

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !14426, !tbaa !2286
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !14427
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.247, i64 0, i64 0), i64 7) #14, !dbg !14428
  %cmp6 = icmp eq i32 %call5, 0, !dbg !14429
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !14430

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !14431, !tbaa !2286
  store i8* %9, i8** %argv0.addr, align 8, !dbg !14433, !tbaa !2286
  %10 = load i8*, i8** %base, align 8, !dbg !14434, !tbaa !2286
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.248, i64 0, i64 0), i64 3) #14, !dbg !14436
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14437
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !14438

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !14439, !tbaa !2286
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !14441
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !14442, !tbaa !2286
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !14443, !tbaa !2286
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !14444, !tbaa !2286
  br label %if.end12, !dbg !14445

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !14446

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !14447, !tbaa !2286
  store i8* %13, i8** @program_name, align 8, !dbg !14448, !tbaa !2286
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !14449, !tbaa !2286
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !14450, !tbaa !2286
  ret void, !dbg !14451
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !14452 !ctir !1217 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !1219
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14453, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14455, metadata !DIExpression()), !dbg !14456
  %call = call i32* @__errno_location() #16, !dbg !14457
  %0 = load i32, i32* %call, align 4, !dbg !14457, !tbaa !2273, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14456, !tbaa !2273
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14458, metadata !DIExpression()), !dbg !14459
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14460, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14460
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14460

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14461, !tbaa !2286
  br label %cond.end, !dbg !14460

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14460

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14460
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !14460
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !14462
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !14462
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !14459, !tbaa !2286
  %5 = load i32, i32* %e, align 4, !dbg !14463, !tbaa !2273
  %call2 = call i32* @__errno_location() #16, !dbg !14464
  store i32 %5, i32* %call2, align 4, !dbg !14465, !tbaa !2273, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14466, !tbaa !2286
  ret %struct.quoting_options* %6, !dbg !14467
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !14468 !ctir !1231 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14469, metadata !DIExpression()), !dbg !14470
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14471, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14471
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14471

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14472, !tbaa !2286
  br label %cond.end, !dbg !14471

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14471

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14471
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14473, !ctir !1234
  %2 = load i32, i32* %style, align 8, !dbg !14473, !tbaa !14474, !ctir !1199
  ret i32 %2, !dbg !14476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !14477 !ctir !1235 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14478, metadata !DIExpression()), !dbg !14479
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  %0 = load i32, i32* %s.addr, align 4, !dbg !14482, !tbaa !2438
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14483, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14483
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14483

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14484, !tbaa !2286
  br label %cond.end, !dbg !14483

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14483
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14485, !ctir !1220
  store i32 %0, i32* %style, align 8, !dbg !14486, !tbaa !14474, !ctir !1199
  ret void, !dbg !14487
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !14488 !ctir !1237 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !321
  %p = alloca i32*, align 8, !ctir !1239
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14489, metadata !DIExpression()), !dbg !14490
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !14491, metadata !DIExpression()), !dbg !14492
  store i32 %i, i32* %i.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14493, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !14495, metadata !DIExpression()), !dbg !14496
  %0 = load i8, i8* %c.addr, align 1, !dbg !14497, !tbaa !2438
  store i8 %0, i8* %uc, align 1, !dbg !14496, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32** %p, metadata !14498, metadata !DIExpression()), !dbg !14499
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14500, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14500
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14500

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14501, !tbaa !2286
  br label %cond.end, !dbg !14500

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14500

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14500
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !14502, !ctir !1220
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14503
  %3 = load i8, i8* %uc, align 1, !dbg !14504, !tbaa !2438
  %conv = zext i8 %3 to i64, !dbg !14504
  %div = udiv i64 %conv, 32, !dbg !14505
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !14506
  store i32* %add.ptr, i32** %p, align 8, !dbg !14499, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !14507, metadata !DIExpression()), !dbg !14508
  %4 = load i8, i8* %uc, align 1, !dbg !14509, !tbaa !2438
  %conv1 = zext i8 %4 to i64, !dbg !14509
  %rem = urem i64 %conv1, 32, !dbg !14510
  %conv2 = trunc i64 %rem to i32, !dbg !14509
  store i32 %conv2, i32* %shift, align 4, !dbg !14508, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14511, metadata !DIExpression()), !dbg !14512
  %5 = load i32*, i32** %p, align 8, !dbg !14513, !tbaa !2286
  %6 = load i32, i32* %5, align 4, !dbg !14514, !tbaa !2273, !ctir !69
  %7 = load i32, i32* %shift, align 4, !dbg !14515, !tbaa !2273
  %shr = lshr i32 %6, %7, !dbg !14516
  %and = and i32 %shr, 1, !dbg !14517
  store i32 %and, i32* %r, align 4, !dbg !14512, !tbaa !2273
  %8 = load i32, i32* %i.addr, align 4, !dbg !14518, !tbaa !2273
  %and3 = and i32 %8, 1, !dbg !14519
  %9 = load i32, i32* %r, align 4, !dbg !14520, !tbaa !2273
  %xor = xor i32 %and3, %9, !dbg !14521
  %10 = load i32, i32* %shift, align 4, !dbg !14522, !tbaa !2273
  %shl = shl i32 %xor, %10, !dbg !14523
  %11 = load i32*, i32** %p, align 8, !dbg !14524, !tbaa !2286
  %12 = load i32, i32* %11, align 4, !dbg !14525, !tbaa !2273, !ctir !69
  %xor4 = xor i32 %12, %shl, !dbg !14525
  store i32 %xor4, i32* %11, align 4, !dbg !14525, !tbaa !2273, !ctir !69
  %13 = load i32, i32* %r, align 4, !dbg !14526, !tbaa !2273
  ret i32 %13, !dbg !14527
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !14528 !ctir !1240 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14529, metadata !DIExpression()), !dbg !14530
  store i32 %i, i32* %i.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14531, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14533, metadata !DIExpression()), !dbg !14534
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14535, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14535
  br i1 %tobool, label %if.end, label %if.then, !dbg !14537

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14538, !tbaa !2286
  br label %if.end, !dbg !14539

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14540, !tbaa !2286
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !14541, !ctir !1220
  %2 = load i32, i32* %flags, align 4, !dbg !14541, !tbaa !14542, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !14543, !tbaa !2273
  %3 = load i32, i32* %i.addr, align 4, !dbg !14544, !tbaa !2273
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14545, !tbaa !2286
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !14546, !ctir !1220
  store i32 %3, i32* %flags1, align 4, !dbg !14547, !tbaa !14542, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !14548, !tbaa !2273
  ret i32 %5, !dbg !14549
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !14550 !ctir !1242 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14551, metadata !DIExpression()), !dbg !14552
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14553, metadata !DIExpression()), !dbg !14554
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14555, metadata !DIExpression()), !dbg !14556
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14557, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14557
  br i1 %tobool, label %if.end, label %if.then, !dbg !14559

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14560, !tbaa !2286
  br label %if.end, !dbg !14561

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14562, !tbaa !2286
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !14563, !ctir !1220
  store i32 10, i32* %style, align 8, !dbg !14564, !tbaa !14474, !ctir !1199
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !14565, !tbaa !2286
  %tobool1 = icmp ne i8* %2, null, !dbg !14565
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !14567

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !14568, !tbaa !2286
  %tobool2 = icmp ne i8* %3, null, !dbg !14568
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !14569

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !14570
  unreachable, !dbg !14570

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !14571, !tbaa !2286
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14572, !tbaa !2286
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !14573, !ctir !1220
  store i8* %4, i8** %left_quote5, align 8, !dbg !14574, !tbaa !14575, !ctir !88
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !14576, !tbaa !2286
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14577, !tbaa !2286
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !14578, !ctir !1220
  store i8* %6, i8** %right_quote6, align 8, !dbg !14579, !tbaa !14580, !ctir !88
  ret void, !dbg !14581
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14582 !ctir !1244 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1233
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14583, metadata !DIExpression()), !dbg !14584
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14585, metadata !DIExpression()), !dbg !14586
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14587, metadata !DIExpression()), !dbg !14588
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14589, metadata !DIExpression()), !dbg !14590
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14591, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14593, metadata !DIExpression()), !dbg !14594
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14595, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14595
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14595

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14596, !tbaa !2286
  br label %cond.end, !dbg !14595

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14595
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14594, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14597, metadata !DIExpression()), !dbg !14598
  %call = call i32* @__errno_location() #16, !dbg !14599
  %2 = load i32, i32* %call, align 4, !dbg !14599, !tbaa !2273, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14598, !tbaa !2273
  call void @llvm.dbg.declare(metadata i64* %r, metadata !14600, metadata !DIExpression()), !dbg !14601
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !14602, !tbaa !2286
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14603, !tbaa !2447
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !14604, !tbaa !2286
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !14605, !tbaa !2447
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14606, !tbaa !2286
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !14607, !ctir !1234
  %8 = load i32, i32* %style, align 8, !dbg !14607, !tbaa !14474, !ctir !1199
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14608, !tbaa !2286
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !14609, !ctir !1234
  %10 = load i32, i32* %flags, align 4, !dbg !14609, !tbaa !14542, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14610, !tbaa !2286
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !14611, !ctir !1234
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14610
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14612, !tbaa !2286
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !14613, !ctir !1234
  %13 = load i8*, i8** %left_quote, align 8, !dbg !14613, !tbaa !14575, !ctir !88
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14614, !tbaa !2286
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !14615, !ctir !1234
  %15 = load i8*, i8** %right_quote, align 8, !dbg !14615, !tbaa !14580, !ctir !88
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !14616
  store i64 %call1, i64* %r, align 8, !dbg !14601, !tbaa !2447
  %16 = load i32, i32* %e, align 4, !dbg !14617, !tbaa !2273
  %call2 = call i32* @__errno_location() #16, !dbg !14618
  store i32 %16, i32* %call2, align 4, !dbg !14619, !tbaa !2273, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !14620, !tbaa !2447
  ret i64 %17, !dbg !14621
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !14622 !ctir !1291 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !88
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !103
  %unibyte_locale = alloca i8, align 1, !ctir !103
  %elide_outer_quotes = alloca i8, align 1, !ctir !103
  %pending_shell_escape_end = alloca i8, align 1, !ctir !103
  %encountered_single_quote = alloca i8, align 1, !ctir !103
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !103
  %c = alloca i8, align 1, !ctir !321
  %esc = alloca i8, align 1, !ctir !321
  %is_right_quote = alloca i8, align 1, !ctir !103
  %escaping = alloca i8, align 1, !ctir !103
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !103
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !103
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1295
  %w = alloca i32, align 4, !ctir !1308
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14627, metadata !DIExpression()), !dbg !14628
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14629, metadata !DIExpression()), !dbg !14630
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !14631, metadata !DIExpression()), !dbg !14632
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14633, metadata !DIExpression()), !dbg !14634
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !14635, metadata !DIExpression()), !dbg !14636
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14637, metadata !DIExpression()), !dbg !14638
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14639, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14641, metadata !DIExpression()), !dbg !14642
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14643, metadata !DIExpression()), !dbg !14644
  store i64 0, i64* %len, align 8, !dbg !14644, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !14645, metadata !DIExpression()), !dbg !14646
  store i64 0, i64* %orig_buffersize, align 8, !dbg !14646, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !14647, metadata !DIExpression()), !dbg !14648
  store i8* null, i8** %quote_string, align 8, !dbg !14648, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !14649, metadata !DIExpression()), !dbg !14650
  store i64 0, i64* %quote_string_len, align 8, !dbg !14650, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !14651, metadata !DIExpression()), !dbg !14652
  store i8 0, i8* %backslash_escapes, align 1, !dbg !14652, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !14653, metadata !DIExpression()), !dbg !14654
  %call = call i64 @__ctype_get_mb_cur_max() #12, !dbg !14655
  %cmp = icmp eq i64 %call, 1, !dbg !14656
  %frombool = zext i1 %cmp to i8, !dbg !14654
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !14654, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !14657, metadata !DIExpression()), !dbg !14658
  %0 = load i32, i32* %flags.addr, align 4, !dbg !14659, !tbaa !2273
  %and = and i32 %0, 2, !dbg !14660
  %cmp1 = icmp ne i32 %and, 0, !dbg !14661
  %frombool2 = zext i1 %cmp1 to i8, !dbg !14658
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !14658, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !14662, metadata !DIExpression()), !dbg !14663
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14663, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !14664, metadata !DIExpression()), !dbg !14665
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !14665, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !14666, metadata !DIExpression()), !dbg !14667
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14667, !tbaa !2430
  br label %process_input, !dbg !14668

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !14669), !dbg !14670
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !14671, !tbaa !2438
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !14672

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !14673, !tbaa !2438
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14675, !tbaa !2430
  br label %sw.bb3, !dbg !14676

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14677, !tbaa !2430
  %tobool = trunc i8 %2 to i1, !dbg !14677
  br i1 %tobool, label %if.end6, label %if.then, !dbg !14679

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !14680

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !14681, !tbaa !2447
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14681, !tbaa !2447
  %cmp4 = icmp ult i64 %3, %4, !dbg !14681
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !14684

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !14681, !tbaa !2286
  %6 = load i64, i64* %len, align 8, !dbg !14681, !tbaa !2447
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !14681, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !14681, !tbaa !2438
  br label %if.end, !dbg !14681

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !14684, !tbaa !2447
  %inc = add i64 %7, 1, !dbg !14684
  store i64 %inc, i64* %len, align 8, !dbg !14684, !tbaa !2447
  br label %do.end, !dbg !14684

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !14684

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14685, !tbaa !2430
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.259, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14686, !tbaa !2286
  store i64 1, i64* %quote_string_len, align 8, !dbg !14687, !tbaa !2447
  br label %sw.epilog, !dbg !14688

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14689, !tbaa !2430
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14690, !tbaa !2430
  br label %sw.epilog, !dbg !14691

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !14692, !tbaa !2438
  %cmp9 = icmp ne i32 %8, 10, !dbg !14695
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !14696

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !14697, !tbaa !2438
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.260, i64 0, i64 0), i32 %9), !dbg !14699
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !14700, !tbaa !2286
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !14701, !tbaa !2438
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.261, i64 0, i64 0), i32 %10), !dbg !14702
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !14703, !tbaa !2286
  br label %if.end13, !dbg !14704

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14705, !tbaa !2430
  %tobool14 = trunc i8 %11 to i1, !dbg !14705
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !14707

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !14708, !tbaa !2286
  store i8* %12, i8** %quote_string, align 8, !dbg !14710, !tbaa !2286
  br label %for.cond, !dbg !14711

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !14712, !tbaa !2286
  %14 = load i8, i8* %13, align 1, !dbg !14714, !tbaa !2438, !ctir !89
  %tobool16 = icmp ne i8 %14, 0, !dbg !14715
  br i1 %tobool16, label %for.body, label %for.end, !dbg !14715

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !14716

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !14717, !tbaa !2447
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !14717, !tbaa !2447
  %cmp18 = icmp ult i64 %15, %16, !dbg !14717
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !14720

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !14717, !tbaa !2286
  %18 = load i8, i8* %17, align 1, !dbg !14717, !tbaa !2438, !ctir !89
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !14717, !tbaa !2286
  %20 = load i64, i64* %len, align 8, !dbg !14717, !tbaa !2447
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !14717, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !14717, !tbaa !2438
  br label %if.end21, !dbg !14717

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !14720, !tbaa !2447
  %inc22 = add i64 %21, 1, !dbg !14720
  store i64 %inc22, i64* %len, align 8, !dbg !14720, !tbaa !2447
  br label %do.end23, !dbg !14720

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !14720

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !14721, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !14721
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !14721, !tbaa !2286
  br label %for.cond, !dbg !14722, !llvm.loop !14723

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !14724

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14725, !tbaa !2430
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !14726, !tbaa !2286
  store i8* %23, i8** %quote_string, align 8, !dbg !14727, !tbaa !2286
  %24 = load i8*, i8** %quote_string, align 8, !dbg !14728, !tbaa !2286
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !14729
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !14730, !tbaa !2447
  br label %sw.epilog, !dbg !14731

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14732, !tbaa !2430
  br label %sw.bb27, !dbg !14733

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14734, !tbaa !2430
  br label %sw.bb28, !dbg !14735

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14736, !tbaa !2430
  %tobool29 = trunc i8 %25 to i1, !dbg !14736
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !14738

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14739, !tbaa !2430
  br label %if.end31, !dbg !14740

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !14741

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !14742, !tbaa !2438
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14743, !tbaa !2430
  %tobool33 = trunc i8 %26 to i1, !dbg !14743
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !14745

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !14746

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !14747, !tbaa !2447
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !14747, !tbaa !2447
  %cmp36 = icmp ult i64 %27, %28, !dbg !14747
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !14750

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !14747, !tbaa !2286
  %30 = load i64, i64* %len, align 8, !dbg !14747, !tbaa !2447
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !14747, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !14747, !tbaa !2438
  br label %if.end39, !dbg !14747

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !14750, !tbaa !2447
  %inc40 = add i64 %31, 1, !dbg !14750
  store i64 %inc40, i64* %len, align 8, !dbg !14750, !tbaa !2447
  br label %do.end41, !dbg !14750

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !14750

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.261, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14751, !tbaa !2286
  store i64 1, i64* %quote_string_len, align 8, !dbg !14752, !tbaa !2447
  br label %sw.epilog, !dbg !14753

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14754, !tbaa !2430
  br label %sw.epilog, !dbg !14755

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !14756
  unreachable, !dbg !14756

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !14757, !tbaa !2447
  br label %for.cond44, !dbg !14759

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !14760, !tbaa !2447
  %cmp45 = icmp eq i64 %32, -1, !dbg !14762
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !14760

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !14763, !tbaa !2286
  %34 = load i64, i64* %i, align 8, !dbg !14764, !tbaa !2447
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !14763, !ctir !88
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !14763, !tbaa !2438
  %conv = sext i8 %35 to i32, !dbg !14763
  %cmp47 = icmp eq i32 %conv, 0, !dbg !14765
  %conv48 = zext i1 %cmp47 to i32, !dbg !14765
  br label %cond.end, !dbg !14760

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !14766, !tbaa !2447
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !14767, !tbaa !2447
  %cmp49 = icmp eq i64 %36, %37, !dbg !14768
  %conv50 = zext i1 %cmp49 to i32, !dbg !14768
  br label %cond.end, !dbg !14760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !14760
  %tobool51 = icmp ne i32 %cond, 0, !dbg !14769
  %lnot = xor i1 %tobool51, true, !dbg !14769
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !14770

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14771, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !14774, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !14776, metadata !DIExpression()), !dbg !14777
  store i8 0, i8* %is_right_quote, align 1, !dbg !14777, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !14778, metadata !DIExpression()), !dbg !14779
  store i8 0, i8* %escaping, align 1, !dbg !14779, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !14780, metadata !DIExpression()), !dbg !14781
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !14781, !tbaa !2430
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !14782, !tbaa !2430
  %tobool53 = trunc i8 %38 to i1, !dbg !14782
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !14784

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !14785, !tbaa !2438
  %cmp55 = icmp ne i32 %39, 2, !dbg !14786
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !14787

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !14788, !tbaa !2447
  %tobool58 = icmp ne i64 %40, 0, !dbg !14788
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !14789

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !14790, !tbaa !2447
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !14791, !tbaa !2447
  %add = add i64 %41, %42, !dbg !14792
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !14793, !tbaa !2447
  %cmp60 = icmp eq i64 %43, -1, !dbg !14794
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !14795

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !14796, !tbaa !2447
  %cmp63 = icmp ult i64 1, %44, !dbg !14797
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !14793

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !14798, !tbaa !2286
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !14799
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !14800, !tbaa !2447
  br label %cond.end68, !dbg !14793

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !14801, !tbaa !2447
  br label %cond.end68, !dbg !14793

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !14793
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !14802
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !14803

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !14804, !tbaa !2286
  %48 = load i64, i64* %i, align 8, !dbg !14805, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !14806
  %49 = load i8*, i8** %quote_string, align 8, !dbg !14807, !tbaa !2286
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !14808, !tbaa !2447
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !14809
  %cmp74 = icmp eq i32 %call73, 0, !dbg !14810
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !14811

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14812, !tbaa !2430
  %tobool77 = trunc i8 %51 to i1, !dbg !14812
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !14815

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !14816

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !14817, !tbaa !2430
  br label %if.end80, !dbg !14818

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !14819, !tbaa !2286
  %53 = load i64, i64* %i, align 8, !dbg !14820, !tbaa !2447
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !14819, !ctir !88
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !14819, !tbaa !2438
  store i8 %54, i8* %c, align 1, !dbg !14821, !tbaa !2438
  %55 = load i8, i8* %c, align 1, !dbg !14822, !tbaa !2438
  %conv82 = zext i8 %55 to i32, !dbg !14822
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !14823

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !14824, !tbaa !2430
  %tobool84 = trunc i8 %56 to i1, !dbg !14824
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !14827

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !14828

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14830, !tbaa !2430
  %tobool87 = trunc i8 %57 to i1, !dbg !14830
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !14833

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !14830

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !14833, !tbaa !2430
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !14834, !tbaa !2438
  %cmp90 = icmp eq i32 %58, 2, !dbg !14834
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !14834

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14834, !tbaa !2430
  %tobool93 = trunc i8 %59 to i1, !dbg !14834
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !14833

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !14836

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !14838, !tbaa !2447
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !14838, !tbaa !2447
  %cmp96 = icmp ult i64 %60, %61, !dbg !14838
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14841

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !14838, !tbaa !2286
  %63 = load i64, i64* %len, align 8, !dbg !14838, !tbaa !2447
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !14838, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !14838, !tbaa !2438
  br label %if.end100, !dbg !14838

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !14841, !tbaa !2447
  %inc101 = add i64 %64, 1, !dbg !14841
  store i64 %inc101, i64* %len, align 8, !dbg !14841, !tbaa !2447
  br label %do.end102, !dbg !14841

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !14836

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !14842, !tbaa !2447
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !14842, !tbaa !2447
  %cmp104 = icmp ult i64 %65, %66, !dbg !14842
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !14845

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !14842, !tbaa !2286
  %68 = load i64, i64* %len, align 8, !dbg !14842, !tbaa !2447
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !14842, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !14842, !tbaa !2438
  br label %if.end108, !dbg !14842

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !14845, !tbaa !2447
  %inc109 = add i64 %69, 1, !dbg !14845
  store i64 %inc109, i64* %len, align 8, !dbg !14845, !tbaa !2447
  br label %do.end110, !dbg !14845

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !14836

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !14846, !tbaa !2447
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !14846, !tbaa !2447
  %cmp112 = icmp ult i64 %70, %71, !dbg !14846
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14849

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !14846, !tbaa !2286
  %73 = load i64, i64* %len, align 8, !dbg !14846, !tbaa !2447
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !14846, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !14846, !tbaa !2438
  br label %if.end116, !dbg !14846

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !14849, !tbaa !2447
  %inc117 = add i64 %74, 1, !dbg !14849
  store i64 %inc117, i64* %len, align 8, !dbg !14849, !tbaa !2447
  br label %do.end118, !dbg !14849

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14836, !tbaa !2430
  br label %if.end119, !dbg !14836

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !14833

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !14850, !tbaa !2447
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !14850, !tbaa !2447
  %cmp121 = icmp ult i64 %75, %76, !dbg !14850
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !14853

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !14850, !tbaa !2286
  %78 = load i64, i64* %len, align 8, !dbg !14850, !tbaa !2447
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !14850, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !14850, !tbaa !2438
  br label %if.end125, !dbg !14850

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !14853, !tbaa !2447
  %inc126 = add i64 %79, 1, !dbg !14853
  store i64 %inc126, i64* %len, align 8, !dbg !14853, !tbaa !2447
  br label %do.end127, !dbg !14853

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !14833

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !14854, !tbaa !2438
  %cmp129 = icmp ne i32 %80, 2, !dbg !14856
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !14857

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !14858, !tbaa !2447
  %add132 = add i64 %81, 1, !dbg !14859
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !14860, !tbaa !2447
  %cmp133 = icmp ult i64 %add132, %82, !dbg !14861
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !14862

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !14863, !tbaa !2286
  %84 = load i64, i64* %i, align 8, !dbg !14864, !tbaa !2447
  %add136 = add i64 %84, 1, !dbg !14865
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !14863, !ctir !88
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !14863, !tbaa !2438
  %conv138 = sext i8 %85 to i32, !dbg !14863
  %cmp139 = icmp sle i32 48, %conv138, !dbg !14866
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !14867

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !14868, !tbaa !2286
  %87 = load i64, i64* %i, align 8, !dbg !14869, !tbaa !2447
  %add142 = add i64 %87, 1, !dbg !14870
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !14868, !ctir !88
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !14868, !tbaa !2438
  %conv144 = sext i8 %88 to i32, !dbg !14868
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !14871
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !14872

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !14873

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !14875, !tbaa !2447
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !14875, !tbaa !2447
  %cmp149 = icmp ult i64 %89, %90, !dbg !14875
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !14878

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !14875, !tbaa !2286
  %92 = load i64, i64* %len, align 8, !dbg !14875, !tbaa !2447
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !14875, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !14875, !tbaa !2438
  br label %if.end153, !dbg !14875

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !14878, !tbaa !2447
  %inc154 = add i64 %93, 1, !dbg !14878
  store i64 %inc154, i64* %len, align 8, !dbg !14878, !tbaa !2447
  br label %do.end155, !dbg !14878

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !14879

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !14880, !tbaa !2447
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !14880, !tbaa !2447
  %cmp157 = icmp ult i64 %94, %95, !dbg !14880
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !14883

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !14880, !tbaa !2286
  %97 = load i64, i64* %len, align 8, !dbg !14880, !tbaa !2447
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !14880, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !14880, !tbaa !2438
  br label %if.end161, !dbg !14880

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !14883, !tbaa !2447
  %inc162 = add i64 %98, 1, !dbg !14883
  store i64 %inc162, i64* %len, align 8, !dbg !14883, !tbaa !2447
  br label %do.end163, !dbg !14883

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !14884

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !14885, !tbaa !2438
  br label %if.end169, !dbg !14886

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14887, !tbaa !2273
  %and165 = and i32 %99, 1, !dbg !14889
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14889
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14890

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14891

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14892

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14893, !tbaa !2438
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14894

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14895, !tbaa !2430
  %tobool172 = trunc i8 %101 to i1, !dbg !14895
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14898

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14899

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14900

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14901, !tbaa !2273
  %and176 = and i32 %102, 4, !dbg !14903
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14903
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14904

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14905, !tbaa !2447
  %add179 = add i64 %103, 2, !dbg !14906
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14907, !tbaa !2447
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14908
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14909

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14910, !tbaa !2286
  %106 = load i64, i64* %i, align 8, !dbg !14911, !tbaa !2447
  %add183 = add i64 %106, 1, !dbg !14912
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14910, !ctir !88
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14910, !tbaa !2438
  %conv185 = sext i8 %107 to i32, !dbg !14910
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14913
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14914

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14915, !tbaa !2286
  %109 = load i64, i64* %i, align 8, !dbg !14916, !tbaa !2447
  %add189 = add i64 %109, 2, !dbg !14917
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14915, !ctir !88
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14915, !tbaa !2438
  %conv191 = sext i8 %110 to i32, !dbg !14915
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14918

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14919, !tbaa !2430
  %tobool193 = trunc i8 %111 to i1, !dbg !14919
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14922

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14923

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14924, !tbaa !2286
  %113 = load i64, i64* %i, align 8, !dbg !14925, !tbaa !2447
  %add196 = add i64 %113, 2, !dbg !14926
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14924, !ctir !88
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14924, !tbaa !2438
  store i8 %114, i8* %c, align 1, !dbg !14927, !tbaa !2438
  %115 = load i64, i64* %i, align 8, !dbg !14928, !tbaa !2447
  %add198 = add i64 %115, 2, !dbg !14928
  store i64 %add198, i64* %i, align 8, !dbg !14928, !tbaa !2447
  br label %do.body199, !dbg !14929

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14930, !tbaa !2447
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14930, !tbaa !2447
  %cmp200 = icmp ult i64 %116, %117, !dbg !14930
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14933

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14930, !tbaa !2286
  %119 = load i64, i64* %len, align 8, !dbg !14930, !tbaa !2447
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14930, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !14930, !tbaa !2438
  br label %if.end204, !dbg !14930

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14933, !tbaa !2447
  %inc205 = add i64 %120, 1, !dbg !14933
  store i64 %inc205, i64* %len, align 8, !dbg !14933, !tbaa !2447
  br label %do.end206, !dbg !14933

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14934

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14935, !tbaa !2447
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14935, !tbaa !2447
  %cmp208 = icmp ult i64 %121, %122, !dbg !14935
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14938

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14935, !tbaa !2286
  %124 = load i64, i64* %len, align 8, !dbg !14935, !tbaa !2447
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14935, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !14935, !tbaa !2438
  br label %if.end212, !dbg !14935

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14938, !tbaa !2447
  %inc213 = add i64 %125, 1, !dbg !14938
  store i64 %inc213, i64* %len, align 8, !dbg !14938, !tbaa !2447
  br label %do.end214, !dbg !14938

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14939

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14940, !tbaa !2447
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14940, !tbaa !2447
  %cmp216 = icmp ult i64 %126, %127, !dbg !14940
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14943

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14940, !tbaa !2286
  %129 = load i64, i64* %len, align 8, !dbg !14940, !tbaa !2447
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14940, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !14940, !tbaa !2438
  br label %if.end220, !dbg !14940

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14943, !tbaa !2447
  %inc221 = add i64 %130, 1, !dbg !14943
  store i64 %inc221, i64* %len, align 8, !dbg !14943, !tbaa !2447
  br label %do.end222, !dbg !14943

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14944

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14945, !tbaa !2447
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14945, !tbaa !2447
  %cmp224 = icmp ult i64 %131, %132, !dbg !14945
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14948

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14945, !tbaa !2286
  %134 = load i64, i64* %len, align 8, !dbg !14945, !tbaa !2447
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14945, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !14945, !tbaa !2438
  br label %if.end228, !dbg !14945

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14948, !tbaa !2447
  %inc229 = add i64 %135, 1, !dbg !14948
  store i64 %inc229, i64* %len, align 8, !dbg !14948, !tbaa !2447
  br label %do.end230, !dbg !14948

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14949

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14950

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14951

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14952

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14953

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14954

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14955, !tbaa !2438
  br label %c_escape, !dbg !14956

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14957, !tbaa !2438
  br label %c_escape, !dbg !14958

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14959, !tbaa !2438
  br label %c_escape, !dbg !14960

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14961, !tbaa !2438
  br label %c_and_shell_escape, !dbg !14962

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14963, !tbaa !2438
  br label %c_and_shell_escape, !dbg !14964

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14965, !tbaa !2438
  br label %c_and_shell_escape, !dbg !14966

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14967, !tbaa !2438
  br label %c_escape, !dbg !14968

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14969, !tbaa !2438
  store i8 %136, i8* %esc, align 1, !dbg !14970, !tbaa !2438
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14971, !tbaa !2438
  %cmp244 = icmp eq i32 %137, 2, !dbg !14973
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14974

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14975, !tbaa !2430
  %tobool247 = trunc i8 %138 to i1, !dbg !14975
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14978

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14979

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14980

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14981, !tbaa !2430
  %tobool251 = trunc i8 %139 to i1, !dbg !14981
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14983

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14984, !tbaa !2430
  %tobool254 = trunc i8 %140 to i1, !dbg !14984
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14985

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14986, !tbaa !2447
  %tobool257 = icmp ne i64 %141, 0, !dbg !14986
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14987

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14988

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14986

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14989), !dbg !14990
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14991, !tbaa !2438
  %cmp260 = icmp eq i32 %142, 2, !dbg !14993
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14994

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14995, !tbaa !2430
  %tobool263 = trunc i8 %143 to i1, !dbg !14995
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14996

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14997

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14995

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14998), !dbg !14999
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !15000, !tbaa !2430
  %tobool267 = trunc i8 %144 to i1, !dbg !15000
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !15002

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !15003, !tbaa !2438
  store i8 %145, i8* %c, align 1, !dbg !15005, !tbaa !2438
  br label %store_escape, !dbg !15006

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !15007

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !15008, !tbaa !2447
  %cmp271 = icmp eq i64 %146, -1, !dbg !15010
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !15011

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !15012, !tbaa !2286
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !15012, !ctir !88
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !15012, !tbaa !2438
  %conv275 = sext i8 %148 to i32, !dbg !15012
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !15013
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !15008

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !15014, !tbaa !2447
  %cmp279 = icmp eq i64 %149, 1, !dbg !15015
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !15011

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !15016

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !15017

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !15018, !tbaa !2447
  %cmp284 = icmp ne i64 %150, 0, !dbg !15020
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !15021

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !15022

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !15023

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !15024, !tbaa !2430
  br label %sw.bb289, !dbg !15025

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !15026, !tbaa !2438
  %cmp290 = icmp eq i32 %151, 2, !dbg !15028
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !15029

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15030, !tbaa !2430
  %tobool293 = trunc i8 %152 to i1, !dbg !15030
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !15031

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !15032

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !15033

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !15034, !tbaa !2430
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !15035, !tbaa !2430
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !15036, !tbaa !2438
  %cmp298 = icmp eq i32 %153, 2, !dbg !15038
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !15039

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15040, !tbaa !2430
  %tobool301 = trunc i8 %154 to i1, !dbg !15040
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !15043

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !15044

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !15045, !tbaa !2447
  %tobool304 = icmp ne i64 %155, 0, !dbg !15045
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !15047

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !15048, !tbaa !2447
  %tobool306 = icmp ne i64 %156, 0, !dbg !15048
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !15049

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !15050, !tbaa !2447
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !15052, !tbaa !2447
  store i64 0, i64* %buffersize.addr, align 8, !dbg !15053, !tbaa !2447
  br label %if.end308, !dbg !15054

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !15055

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !15056, !tbaa !2447
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !15056, !tbaa !2447
  %cmp310 = icmp ult i64 %158, %159, !dbg !15056
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !15059

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !15056, !tbaa !2286
  %161 = load i64, i64* %len, align 8, !dbg !15056, !tbaa !2447
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !15056, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !15056, !tbaa !2438
  br label %if.end314, !dbg !15056

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !15059, !tbaa !2447
  %inc315 = add i64 %162, 1, !dbg !15059
  store i64 %inc315, i64* %len, align 8, !dbg !15059, !tbaa !2447
  br label %do.end316, !dbg !15059

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !15060

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !15061, !tbaa !2447
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !15061, !tbaa !2447
  %cmp318 = icmp ult i64 %163, %164, !dbg !15061
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !15064

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !15061, !tbaa !2286
  %166 = load i64, i64* %len, align 8, !dbg !15061, !tbaa !2447
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !15061, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !15061, !tbaa !2438
  br label %if.end322, !dbg !15061

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !15064, !tbaa !2447
  %inc323 = add i64 %167, 1, !dbg !15064
  store i64 %inc323, i64* %len, align 8, !dbg !15064, !tbaa !2447
  br label %do.end324, !dbg !15064

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !15065

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !15066, !tbaa !2447
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !15066, !tbaa !2447
  %cmp326 = icmp ult i64 %168, %169, !dbg !15066
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !15069

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !15066, !tbaa !2286
  %171 = load i64, i64* %len, align 8, !dbg !15066, !tbaa !2447
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !15066, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !15066, !tbaa !2438
  br label %if.end330, !dbg !15066

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !15069, !tbaa !2447
  %inc331 = add i64 %172, 1, !dbg !15069
  store i64 %inc331, i64* %len, align 8, !dbg !15069, !tbaa !2447
  br label %do.end332, !dbg !15069

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15070, !tbaa !2430
  br label %if.end333, !dbg !15071

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !15072

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !15073, !tbaa !2430
  br label %sw.epilog564, !dbg !15074

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !15075, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !15078, metadata !DIExpression()), !dbg !15079
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !15080, !tbaa !2430
  %tobool336 = trunc i8 %173 to i1, !dbg !15080
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !15082

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !15083, !tbaa !2447
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !15085
  %174 = load i16*, i16** %call338, align 8, !dbg !15085, !tbaa !2286, !ctir !325
  %175 = load i8, i8* %c, align 1, !dbg !15085, !tbaa !2438
  %conv339 = zext i8 %175 to i32, !dbg !15085
  %idxprom = sext i32 %conv339 to i64, !dbg !15085
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !15085, !ctir !325
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !15085, !tbaa !3423
  %conv341 = zext i16 %176 to i32, !dbg !15085
  %and342 = and i32 %conv341, 16384, !dbg !15085
  %cmp343 = icmp ne i32 %and342, 0, !dbg !15086
  %frombool345 = zext i1 %cmp343 to i8, !dbg !15087
  store i8 %frombool345, i8* %printable, align 1, !dbg !15087, !tbaa !2430
  br label %if.end410, !dbg !15088

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !15089, metadata !DIExpression()), !dbg !15091
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !15092
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !15092
  store i64 0, i64* %m, align 8, !dbg !15093, !tbaa !2447
  store i8 1, i8* %printable, align 1, !dbg !15094, !tbaa !2430
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !15095, !tbaa !2447
  %cmp347 = icmp eq i64 %178, -1, !dbg !15097
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !15098

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !15099, !tbaa !2286
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !15100
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !15101, !tbaa !2447
  br label %if.end351, !dbg !15102

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !15103

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !15104, metadata !DIExpression()), !dbg !15106
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15107, metadata !DIExpression()), !dbg !15108
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !15109, !tbaa !2286
  %181 = load i64, i64* %i, align 8, !dbg !15110, !tbaa !2447
  %182 = load i64, i64* %m, align 8, !dbg !15111, !tbaa !2447
  %add353 = add i64 %181, %182, !dbg !15112
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !15109, !ctir !88
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !15113, !tbaa !2447
  %184 = load i64, i64* %i, align 8, !dbg !15114, !tbaa !2447
  %185 = load i64, i64* %m, align 8, !dbg !15115, !tbaa !2447
  %add355 = add i64 %184, %185, !dbg !15116
  %sub = sub i64 %183, %add355, !dbg !15117
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !15118
  store i64 %call356, i64* %bytes, align 8, !dbg !15108, !tbaa !2447
  %186 = load i64, i64* %bytes, align 8, !dbg !15119, !tbaa !2447
  %cmp357 = icmp eq i64 %186, 0, !dbg !15121
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !15122

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !15123

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !15124, !tbaa !2447
  %cmp361 = icmp eq i64 %187, -1, !dbg !15126
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !15127

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !15128, !tbaa !2430
  br label %do.end409, !dbg !15130

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !15131, !tbaa !2447
  %cmp365 = icmp eq i64 %188, -2, !dbg !15133
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !15134

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !15135, !tbaa !2430
  br label %while.cond, !dbg !15137

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !15138, !tbaa !2447
  %190 = load i64, i64* %m, align 8, !dbg !15139, !tbaa !2447
  %add368 = add i64 %189, %190, !dbg !15140
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !15141, !tbaa !2447
  %cmp369 = icmp ult i64 %add368, %191, !dbg !15142
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !15143

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !15144, !tbaa !2286
  %193 = load i64, i64* %i, align 8, !dbg !15145, !tbaa !2447
  %194 = load i64, i64* %m, align 8, !dbg !15146, !tbaa !2447
  %add371 = add i64 %193, %194, !dbg !15147
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !15144, !ctir !88
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !15144, !tbaa !2438
  %conv373 = sext i8 %195 to i32, !dbg !15144
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !15143
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !15148
  br i1 %196, label %while.body, label %while.end, !dbg !15137

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !15149, !tbaa !2447
  %inc375 = add i64 %197, 1, !dbg !15149
  store i64 %inc375, i64* %m, align 8, !dbg !15149, !tbaa !2447
  br label %while.cond, !dbg !15137, !llvm.loop !15150

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !15151

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15152, !tbaa !2430
  %tobool377 = trunc i8 %198 to i1, !dbg !15152
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !15155

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !15156, !tbaa !2438
  %cmp380 = icmp eq i32 %199, 2, !dbg !15157
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !15158

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !15159, metadata !DIExpression()), !dbg !15161
  store i64 1, i64* %j, align 8, !dbg !15162, !tbaa !2447
  br label %for.cond383, !dbg !15164

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !15165, !tbaa !2447
  %201 = load i64, i64* %bytes, align 8, !dbg !15167, !tbaa !2447
  %cmp384 = icmp ult i64 %200, %201, !dbg !15168
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !15169

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !15170, !tbaa !2286
  %203 = load i64, i64* %i, align 8, !dbg !15171, !tbaa !2447
  %204 = load i64, i64* %m, align 8, !dbg !15172, !tbaa !2447
  %add387 = add i64 %203, %204, !dbg !15173
  %205 = load i64, i64* %j, align 8, !dbg !15174, !tbaa !2447
  %add388 = add i64 %add387, %205, !dbg !15175
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !15170, !ctir !88
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !15170, !tbaa !2438
  %conv390 = sext i8 %206 to i32, !dbg !15170
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !15176

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !15177

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !15179

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !15180

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !15181, !tbaa !2447
  %inc395 = add i64 %207, 1, !dbg !15181
  store i64 %inc395, i64* %j, align 8, !dbg !15181, !tbaa !2447
  br label %for.cond383, !dbg !15182, !llvm.loop !15183

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !15185

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !15186, !tbaa !2273
  %call398 = call i32 @iswprint(i32 %208) #12, !dbg !15188
  %tobool399 = icmp ne i32 %call398, 0, !dbg !15188
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !15189

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !15190, !tbaa !2430
  br label %if.end401, !dbg !15191

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !15192, !tbaa !2447
  %210 = load i64, i64* %m, align 8, !dbg !15193, !tbaa !2447
  %add402 = add i64 %210, %209, !dbg !15193
  store i64 %add402, i64* %m, align 8, !dbg !15193, !tbaa !2447
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !15194

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !15195
  %tobool407 = icmp ne i32 %call406, 0, !dbg !15196
  %lnot408 = xor i1 %tobool407, true, !dbg !15196
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !15194, !llvm.loop !15197

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !15199, !tbaa !2430
  %tobool411 = trunc i8 %211 to i1, !dbg !15199
  %frombool412 = zext i1 %tobool411 to i8, !dbg !15200
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !15200, !tbaa !2430
  %212 = load i64, i64* %m, align 8, !dbg !15201, !tbaa !2447
  %cmp413 = icmp ult i64 1, %212, !dbg !15203
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !15204

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !15205, !tbaa !2430
  %tobool415 = trunc i8 %213 to i1, !dbg !15205
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !15206

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !15207, !tbaa !2430
  %tobool418 = trunc i8 %214 to i1, !dbg !15207
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !15208

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !15209, metadata !DIExpression()), !dbg !15211
  %215 = load i64, i64* %i, align 8, !dbg !15212, !tbaa !2447
  %216 = load i64, i64* %m, align 8, !dbg !15213, !tbaa !2447
  %add420 = add i64 %215, %216, !dbg !15214
  store i64 %add420, i64* %ilim, align 8, !dbg !15211, !tbaa !2447
  br label %for.cond421, !dbg !15215

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !15216, !tbaa !2430
  %tobool422 = trunc i8 %217 to i1, !dbg !15216
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !15221

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !15222, !tbaa !2430
  %tobool425 = trunc i8 %218 to i1, !dbg !15222
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !15223

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !15224

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15226, !tbaa !2430
  %tobool428 = trunc i8 %219 to i1, !dbg !15226
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !15229

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !15226

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !15229, !tbaa !2430
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !15230, !tbaa !2438
  %cmp431 = icmp eq i32 %220, 2, !dbg !15230
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !15230

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15230, !tbaa !2430
  %tobool434 = trunc i8 %221 to i1, !dbg !15230
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !15229

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !15232

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !15234, !tbaa !2447
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !15234, !tbaa !2447
  %cmp437 = icmp ult i64 %222, %223, !dbg !15234
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !15237

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !15234, !tbaa !2286
  %225 = load i64, i64* %len, align 8, !dbg !15234, !tbaa !2447
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !15234, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !15234, !tbaa !2438
  br label %if.end441, !dbg !15234

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !15237, !tbaa !2447
  %inc442 = add i64 %226, 1, !dbg !15237
  store i64 %inc442, i64* %len, align 8, !dbg !15237, !tbaa !2447
  br label %do.end444, !dbg !15237

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !15232

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !15238, !tbaa !2447
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !15238, !tbaa !2447
  %cmp446 = icmp ult i64 %227, %228, !dbg !15238
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !15241

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !15238, !tbaa !2286
  %230 = load i64, i64* %len, align 8, !dbg !15238, !tbaa !2447
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !15238, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !15238, !tbaa !2438
  br label %if.end450, !dbg !15238

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !15241, !tbaa !2447
  %inc451 = add i64 %231, 1, !dbg !15241
  store i64 %inc451, i64* %len, align 8, !dbg !15241, !tbaa !2447
  br label %do.end453, !dbg !15241

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !15232

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !15242, !tbaa !2447
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !15242, !tbaa !2447
  %cmp455 = icmp ult i64 %232, %233, !dbg !15242
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !15245

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !15242, !tbaa !2286
  %235 = load i64, i64* %len, align 8, !dbg !15242, !tbaa !2447
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !15242, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !15242, !tbaa !2438
  br label %if.end459, !dbg !15242

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !15245, !tbaa !2447
  %inc460 = add i64 %236, 1, !dbg !15245
  store i64 %inc460, i64* %len, align 8, !dbg !15245, !tbaa !2447
  br label %do.end462, !dbg !15245

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !15232, !tbaa !2430
  br label %if.end463, !dbg !15232

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !15229

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !15246, !tbaa !2447
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !15246, !tbaa !2447
  %cmp465 = icmp ult i64 %237, %238, !dbg !15246
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !15249

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !15246, !tbaa !2286
  %240 = load i64, i64* %len, align 8, !dbg !15246, !tbaa !2447
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !15246, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !15246, !tbaa !2438
  br label %if.end469, !dbg !15246

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !15249, !tbaa !2447
  %inc470 = add i64 %241, 1, !dbg !15249
  store i64 %inc470, i64* %len, align 8, !dbg !15249, !tbaa !2447
  br label %do.end472, !dbg !15249

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !15229

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !15250

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !15251, !tbaa !2447
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !15251, !tbaa !2447
  %cmp476 = icmp ult i64 %242, %243, !dbg !15251
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !15254

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !15251, !tbaa !2438
  %conv479 = zext i8 %244 to i32, !dbg !15251
  %shr = ashr i32 %conv479, 6, !dbg !15251
  %add480 = add nsw i32 48, %shr, !dbg !15251
  %conv481 = trunc i32 %add480 to i8, !dbg !15251
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !15251, !tbaa !2286
  %246 = load i64, i64* %len, align 8, !dbg !15251, !tbaa !2447
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !15251, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !15251, !tbaa !2438
  br label %if.end483, !dbg !15251

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !15254, !tbaa !2447
  %inc484 = add i64 %247, 1, !dbg !15254
  store i64 %inc484, i64* %len, align 8, !dbg !15254, !tbaa !2447
  br label %do.end486, !dbg !15254

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !15255

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !15256, !tbaa !2447
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !15256, !tbaa !2447
  %cmp488 = icmp ult i64 %248, %249, !dbg !15256
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !15259

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !15256, !tbaa !2438
  %conv491 = zext i8 %250 to i32, !dbg !15256
  %shr492 = ashr i32 %conv491, 3, !dbg !15256
  %and493 = and i32 %shr492, 7, !dbg !15256
  %add494 = add nsw i32 48, %and493, !dbg !15256
  %conv495 = trunc i32 %add494 to i8, !dbg !15256
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !15256, !tbaa !2286
  %252 = load i64, i64* %len, align 8, !dbg !15256, !tbaa !2447
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !15256, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !15256, !tbaa !2438
  br label %if.end497, !dbg !15256

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !15259, !tbaa !2447
  %inc498 = add i64 %253, 1, !dbg !15259
  store i64 %inc498, i64* %len, align 8, !dbg !15259, !tbaa !2447
  br label %do.end500, !dbg !15259

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !15260, !tbaa !2438
  %conv501 = zext i8 %254 to i32, !dbg !15260
  %and502 = and i32 %conv501, 7, !dbg !15261
  %add503 = add nsw i32 48, %and502, !dbg !15262
  %conv504 = trunc i32 %add503 to i8, !dbg !15263
  store i8 %conv504, i8* %c, align 1, !dbg !15264, !tbaa !2438
  br label %if.end518, !dbg !15265

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !15266, !tbaa !2430
  %tobool506 = trunc i8 %255 to i1, !dbg !15266
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !15268

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !15269

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !15271, !tbaa !2447
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !15271, !tbaa !2447
  %cmp509 = icmp ult i64 %256, %257, !dbg !15271
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !15274

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !15271, !tbaa !2286
  %259 = load i64, i64* %len, align 8, !dbg !15271, !tbaa !2447
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !15271, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !15271, !tbaa !2438
  br label %if.end513, !dbg !15271

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !15274, !tbaa !2447
  %inc514 = add i64 %260, 1, !dbg !15274
  store i64 %inc514, i64* %len, align 8, !dbg !15274, !tbaa !2447
  br label %do.end516, !dbg !15274

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !15275, !tbaa !2430
  br label %if.end517, !dbg !15276

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !15277, !tbaa !2447
  %262 = load i64, i64* %i, align 8, !dbg !15279, !tbaa !2447
  %add519 = add i64 %262, 1, !dbg !15280
  %cmp520 = icmp ule i64 %261, %add519, !dbg !15281
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !15282

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !15283

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !15284

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15285, !tbaa !2430
  %tobool525 = trunc i8 %263 to i1, !dbg !15285
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !15285

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !15285, !tbaa !2430
  %tobool528 = trunc i8 %264 to i1, !dbg !15285
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !15288

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !15289

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !15291, !tbaa !2447
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !15291, !tbaa !2447
  %cmp531 = icmp ult i64 %265, %266, !dbg !15291
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !15294

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !15291, !tbaa !2286
  %268 = load i64, i64* %len, align 8, !dbg !15291, !tbaa !2447
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !15291, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !15291, !tbaa !2438
  br label %if.end535, !dbg !15291

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !15294, !tbaa !2447
  %inc536 = add i64 %269, 1, !dbg !15294
  store i64 %inc536, i64* %len, align 8, !dbg !15294, !tbaa !2447
  br label %do.end538, !dbg !15294

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !15289

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !15295, !tbaa !2447
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !15295, !tbaa !2447
  %cmp540 = icmp ult i64 %270, %271, !dbg !15295
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !15298

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !15295, !tbaa !2286
  %273 = load i64, i64* %len, align 8, !dbg !15295, !tbaa !2447
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !15295, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !15295, !tbaa !2438
  br label %if.end544, !dbg !15295

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !15298, !tbaa !2447
  %inc545 = add i64 %274, 1, !dbg !15298
  store i64 %inc545, i64* %len, align 8, !dbg !15298, !tbaa !2447
  br label %do.end547, !dbg !15298

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15289, !tbaa !2430
  br label %if.end548, !dbg !15289

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !15288

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !15299

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !15300, !tbaa !2447
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !15300, !tbaa !2447
  %cmp552 = icmp ult i64 %275, %276, !dbg !15300
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !15303

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !15300, !tbaa !2438
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !15300, !tbaa !2286
  %279 = load i64, i64* %len, align 8, !dbg !15300, !tbaa !2447
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !15300, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !15300, !tbaa !2438
  br label %if.end556, !dbg !15300

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !15303, !tbaa !2447
  %inc557 = add i64 %280, 1, !dbg !15303
  store i64 %inc557, i64* %len, align 8, !dbg !15303, !tbaa !2447
  br label %do.end559, !dbg !15303

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !15304, !tbaa !2286
  %282 = load i64, i64* %i, align 8, !dbg !15305, !tbaa !2447
  %inc560 = add i64 %282, 1, !dbg !15305
  store i64 %inc560, i64* %i, align 8, !dbg !15305, !tbaa !2447
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !15304, !ctir !88
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !15304, !tbaa !2438
  store i8 %283, i8* %c, align 1, !dbg !15306, !tbaa !2438
  br label %for.cond421, !dbg !15307, !llvm.loop !15308

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !15311

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !15312

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !15313, !tbaa !2430
  %tobool565 = trunc i8 %284 to i1, !dbg !15313
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !15315

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !15316, !tbaa !2438
  %cmp568 = icmp ne i32 %285, 2, !dbg !15317
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !15318

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15319, !tbaa !2430
  %tobool571 = trunc i8 %286 to i1, !dbg !15319
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !15320

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15321, !tbaa !2286
  %tobool574 = icmp ne i32* %287, null, !dbg !15321
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !15322

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15323, !tbaa !2286
  %289 = load i8, i8* %c, align 1, !dbg !15324, !tbaa !2438
  %conv576 = zext i8 %289 to i64, !dbg !15324
  %div = udiv i64 %conv576, 32, !dbg !15325
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !15323, !ctir !1293
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !15323, !tbaa !2273
  %291 = load i8, i8* %c, align 1, !dbg !15326, !tbaa !2438
  %conv578 = zext i8 %291 to i64, !dbg !15326
  %rem = urem i64 %conv578, 32, !dbg !15327
  %sh_prom = trunc i64 %rem to i32, !dbg !15328
  %shr579 = lshr i32 %290, %sh_prom, !dbg !15328
  %and580 = and i32 %shr579, 1, !dbg !15329
  %tobool581 = icmp ne i32 %and580, 0, !dbg !15329
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !15330

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !15331, !tbaa !2430
  %tobool583 = trunc i8 %292 to i1, !dbg !15331
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !15332

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !15333

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !15331

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !15334), !dbg !15335
  br label %do.body586, !dbg !15336

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15337, !tbaa !2430
  %tobool587 = trunc i8 %293 to i1, !dbg !15337
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !15340

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !15337

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !15340, !tbaa !2430
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !15341, !tbaa !2438
  %cmp590 = icmp eq i32 %294, 2, !dbg !15341
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !15341

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15341, !tbaa !2430
  %tobool593 = trunc i8 %295 to i1, !dbg !15341
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !15340

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !15343

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !15345, !tbaa !2447
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !15345, !tbaa !2447
  %cmp596 = icmp ult i64 %296, %297, !dbg !15345
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !15348

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !15345, !tbaa !2286
  %299 = load i64, i64* %len, align 8, !dbg !15345, !tbaa !2447
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !15345, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !15345, !tbaa !2438
  br label %if.end600, !dbg !15345

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !15348, !tbaa !2447
  %inc601 = add i64 %300, 1, !dbg !15348
  store i64 %inc601, i64* %len, align 8, !dbg !15348, !tbaa !2447
  br label %do.end603, !dbg !15348

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !15343

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !15349, !tbaa !2447
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !15349, !tbaa !2447
  %cmp605 = icmp ult i64 %301, %302, !dbg !15349
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !15352

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !15349, !tbaa !2286
  %304 = load i64, i64* %len, align 8, !dbg !15349, !tbaa !2447
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !15349, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !15349, !tbaa !2438
  br label %if.end609, !dbg !15349

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !15352, !tbaa !2447
  %inc610 = add i64 %305, 1, !dbg !15352
  store i64 %inc610, i64* %len, align 8, !dbg !15352, !tbaa !2447
  br label %do.end612, !dbg !15352

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !15343

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !15353, !tbaa !2447
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !15353, !tbaa !2447
  %cmp614 = icmp ult i64 %306, %307, !dbg !15353
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !15356

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !15353, !tbaa !2286
  %309 = load i64, i64* %len, align 8, !dbg !15353, !tbaa !2447
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !15353, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !15353, !tbaa !2438
  br label %if.end618, !dbg !15353

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !15356, !tbaa !2447
  %inc619 = add i64 %310, 1, !dbg !15356
  store i64 %inc619, i64* %len, align 8, !dbg !15356, !tbaa !2447
  br label %do.end621, !dbg !15356

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !15343, !tbaa !2430
  br label %if.end622, !dbg !15343

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !15340

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !15357, !tbaa !2447
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !15357, !tbaa !2447
  %cmp624 = icmp ult i64 %311, %312, !dbg !15357
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !15360

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !15357, !tbaa !2286
  %314 = load i64, i64* %len, align 8, !dbg !15357, !tbaa !2447
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !15357, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !15357, !tbaa !2438
  br label %if.end628, !dbg !15357

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !15360, !tbaa !2447
  %inc629 = add i64 %315, 1, !dbg !15360
  store i64 %inc629, i64* %len, align 8, !dbg !15360, !tbaa !2447
  br label %do.end631, !dbg !15360

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !15340

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !15340

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !15361), !dbg !15362
  br label %do.body634, !dbg !15363

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !15364, !tbaa !2430
  %tobool635 = trunc i8 %316 to i1, !dbg !15364
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !15364

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !15364, !tbaa !2430
  %tobool638 = trunc i8 %317 to i1, !dbg !15364
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !15367

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !15368

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !15370, !tbaa !2447
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !15370, !tbaa !2447
  %cmp641 = icmp ult i64 %318, %319, !dbg !15370
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !15373

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !15370, !tbaa !2286
  %321 = load i64, i64* %len, align 8, !dbg !15370, !tbaa !2447
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !15370, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !15370, !tbaa !2438
  br label %if.end645, !dbg !15370

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !15373, !tbaa !2447
  %inc646 = add i64 %322, 1, !dbg !15373
  store i64 %inc646, i64* %len, align 8, !dbg !15373, !tbaa !2447
  br label %do.end648, !dbg !15373

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !15368

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !15374, !tbaa !2447
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !15374, !tbaa !2447
  %cmp650 = icmp ult i64 %323, %324, !dbg !15374
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !15377

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !15374, !tbaa !2286
  %326 = load i64, i64* %len, align 8, !dbg !15374, !tbaa !2447
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !15374, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !15374, !tbaa !2438
  br label %if.end654, !dbg !15374

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !15377, !tbaa !2447
  %inc655 = add i64 %327, 1, !dbg !15377
  store i64 %inc655, i64* %len, align 8, !dbg !15377, !tbaa !2447
  br label %do.end657, !dbg !15377

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15368, !tbaa !2430
  br label %if.end658, !dbg !15368

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !15367

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !15378

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !15379, !tbaa !2447
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !15379, !tbaa !2447
  %cmp662 = icmp ult i64 %328, %329, !dbg !15379
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !15382

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !15379, !tbaa !2438
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !15379, !tbaa !2286
  %332 = load i64, i64* %len, align 8, !dbg !15379, !tbaa !2447
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !15379, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !15379, !tbaa !2438
  br label %if.end666, !dbg !15379

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !15382, !tbaa !2447
  %inc667 = add i64 %333, 1, !dbg !15382
  store i64 %inc667, i64* %len, align 8, !dbg !15382, !tbaa !2447
  br label %do.end669, !dbg !15382

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !15383, !tbaa !2430
  %tobool670 = trunc i8 %334 to i1, !dbg !15383
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !15385

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !15386, !tbaa !2430
  br label %if.end672, !dbg !15387

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !15388

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !15389, !tbaa !2447
  %inc674 = add i64 %335, 1, !dbg !15389
  store i64 %inc674, i64* %i, align 8, !dbg !15389, !tbaa !2447
  br label %for.cond44, !dbg !15390, !llvm.loop !15391

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !15393, !tbaa !2447
  %cmp676 = icmp eq i64 %336, 0, !dbg !15395
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !15396

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !15397, !tbaa !2438
  %cmp679 = icmp eq i32 %337, 2, !dbg !15398
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !15399

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15400, !tbaa !2430
  %tobool682 = trunc i8 %338 to i1, !dbg !15400
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !15401

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !15402

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !15403, !tbaa !2438
  %cmp686 = icmp eq i32 %339, 2, !dbg !15405
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !15406

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15407, !tbaa !2430
  %tobool689 = trunc i8 %340 to i1, !dbg !15407
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !15408

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !15409, !tbaa !2430
  %tobool691 = trunc i8 %341 to i1, !dbg !15409
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !15410

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !15411, !tbaa !2430
  %tobool694 = trunc i8 %342 to i1, !dbg !15411
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !15414

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !15415, !tbaa !2286
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !15416, !tbaa !2447
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !15417, !tbaa !2286
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !15418, !tbaa !2447
  %347 = load i32, i32* %flags.addr, align 4, !dbg !15419, !tbaa !2273
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15420, !tbaa !2286
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !15421, !tbaa !2286
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !15422, !tbaa !2286
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !15423
  store i64 %call696, i64* %retval, align 8, !dbg !15424
  br label %return, !dbg !15424

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !15425, !tbaa !2447
  %tobool698 = icmp ne i64 %351, 0, !dbg !15425
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !15427

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !15428, !tbaa !2447
  %tobool700 = icmp ne i64 %352, 0, !dbg !15428
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !15429

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !15430, !tbaa !2447
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !15432, !tbaa !2447
  store i64 0, i64* %len, align 8, !dbg !15433, !tbaa !2447
  br label %process_input, !dbg !15434

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !15435

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !15436, !tbaa !2286
  %tobool705 = icmp ne i8* %354, null, !dbg !15436
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !15438

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15439, !tbaa !2430
  %tobool707 = trunc i8 %355 to i1, !dbg !15439
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !15440

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !15441

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !15442, !tbaa !2286
  %357 = load i8, i8* %356, align 1, !dbg !15445, !tbaa !2438, !ctir !89
  %tobool710 = icmp ne i8 %357, 0, !dbg !15446
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !15446

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !15447

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !15448, !tbaa !2447
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !15448, !tbaa !2447
  %cmp713 = icmp ult i64 %358, %359, !dbg !15448
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !15451

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !15448, !tbaa !2286
  %361 = load i8, i8* %360, align 1, !dbg !15448, !tbaa !2438, !ctir !89
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !15448, !tbaa !2286
  %363 = load i64, i64* %len, align 8, !dbg !15448, !tbaa !2447
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !15448, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !15448, !tbaa !2438
  br label %if.end717, !dbg !15448

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !15451, !tbaa !2447
  %inc718 = add i64 %364, 1, !dbg !15451
  store i64 %inc718, i64* %len, align 8, !dbg !15451, !tbaa !2447
  br label %do.end720, !dbg !15451

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !15451

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !15452, !tbaa !2286
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !15452
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !15452, !tbaa !2286
  br label %for.cond709, !dbg !15453, !llvm.loop !15454

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !15455

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !15456, !tbaa !2447
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !15458, !tbaa !2447
  %cmp725 = icmp ult i64 %366, %367, !dbg !15459
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !15460

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !15461, !tbaa !2286
  %369 = load i64, i64* %len, align 8, !dbg !15462, !tbaa !2447
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !15461, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !15463, !tbaa !2438
  br label %if.end729, !dbg !15461

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !15464, !tbaa !2447
  store i64 %370, i64* %retval, align 8, !dbg !15465
  br label %return, !dbg !15465

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !15466), !dbg !15467
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !15468, !tbaa !2438
  %cmp730 = icmp eq i32 %371, 2, !dbg !15470
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !15471

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !15472, !tbaa !2430
  %tobool733 = trunc i8 %372 to i1, !dbg !15472
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !15473

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !15474, !tbaa !2438
  br label %if.end736, !dbg !15475

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !15476, !tbaa !2286
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !15477, !tbaa !2447
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !15478, !tbaa !2286
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !15479, !tbaa !2447
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !15480, !tbaa !2438
  %378 = load i32, i32* %flags.addr, align 4, !dbg !15481, !tbaa !2273
  %and737 = and i32 %378, -3, !dbg !15482
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !15483, !tbaa !2286
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !15484, !tbaa !2286
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !15485
  store i64 %call738, i64* %retval, align 8, !dbg !15486
  br label %return, !dbg !15486

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !15487
  ret i64 %381, !dbg !15487
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !15488 !ctir !1309 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !88
  %locale_code = alloca i8*, align 8, !ctir !88
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !15489, metadata !DIExpression()), !dbg !15490
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15491, metadata !DIExpression()), !dbg !15492
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !15493, metadata !DIExpression()), !dbg !15494
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !15495, !tbaa !2286
  %call = call i8* @gettext(i8* %0) #12, !dbg !15495
  store i8* %call, i8** %translation, align 8, !dbg !15494, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !15496, metadata !DIExpression()), !dbg !15497
  %1 = load i8*, i8** %translation, align 8, !dbg !15498, !tbaa !2286
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !15500, !tbaa !2286
  %cmp = icmp ne i8* %1, %2, !dbg !15501
  br i1 %cmp, label %if.then, label %if.end, !dbg !15502

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !15503, !tbaa !2286
  store i8* %3, i8** %retval, align 8, !dbg !15504
  br label %return, !dbg !15504

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !15505
  store i8* %call1, i8** %locale_code, align 8, !dbg !15506, !tbaa !2286
  %4 = load i8*, i8** %locale_code, align 8, !dbg !15507, !tbaa !2286
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.262, i64 0, i64 0)) #14, !dbg !15507
  %cmp3 = icmp eq i32 %call2, 0, !dbg !15507
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !15509

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !15510, !tbaa !2286
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !15510, !ctir !88
  %6 = load i8, i8* %arrayidx, align 1, !dbg !15510, !tbaa !2438
  %conv = sext i8 %6 to i32, !dbg !15510
  %cmp5 = icmp eq i32 %conv, 96, !dbg !15511
  %7 = zext i1 %cmp5 to i64, !dbg !15510
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.263, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.264, i64 0, i64 0), !dbg !15510
  store i8* %cond, i8** %retval, align 8, !dbg !15512
  br label %return, !dbg !15512

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !15513, !tbaa !2286
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.265, i64 0, i64 0)) #14, !dbg !15513
  %cmp9 = icmp eq i32 %call8, 0, !dbg !15513
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15515

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !15516, !tbaa !2286
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !15516, !ctir !88
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !15516, !tbaa !2438
  %conv13 = sext i8 %10 to i32, !dbg !15516
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !15517
  %11 = zext i1 %cmp14 to i64, !dbg !15516
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.266, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.267, i64 0, i64 0), !dbg !15516
  store i8* %cond16, i8** %retval, align 8, !dbg !15518
  br label %return, !dbg !15518

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !15519, !tbaa !2438
  %cmp18 = icmp eq i32 %12, 9, !dbg !15520
  %13 = zext i1 %cmp18 to i64, !dbg !15519
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.259, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.261, i64 0, i64 0), !dbg !15519
  store i8* %cond20, i8** %retval, align 8, !dbg !15521
  br label %return, !dbg !15521

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !15522
  ret i8* %14, !dbg !15522
}

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !15523 !ctir !1246 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15524, metadata !DIExpression()), !dbg !15525
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15526, metadata !DIExpression()), !dbg !15527
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15528, metadata !DIExpression()), !dbg !15529
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15530, !tbaa !2286
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15531, !tbaa !2447
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15532, !tbaa !2286
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !15533
  ret i8* %call, !dbg !15534
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !15535 !ctir !1248 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1233
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15536, metadata !DIExpression()), !dbg !15537
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15538, metadata !DIExpression()), !dbg !15539
  store i64* %size, i64** %size.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !15540, metadata !DIExpression()), !dbg !15541
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15542, metadata !DIExpression()), !dbg !15543
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !15544, metadata !DIExpression()), !dbg !15545
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15546, !tbaa !2286
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !15546
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15546

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15547, !tbaa !2286
  br label %cond.end, !dbg !15546

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !15546
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !15545, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15548, metadata !DIExpression()), !dbg !15549
  %call = call i32* @__errno_location() #16, !dbg !15550
  %2 = load i32, i32* %call, align 4, !dbg !15550, !tbaa !2273, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !15549, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15551, metadata !DIExpression()), !dbg !15552
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15553, !tbaa !2286
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !15554, !ctir !1234
  %4 = load i32, i32* %flags1, align 4, !dbg !15554, !tbaa !14542, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !15555, !tbaa !2286
  %tobool2 = icmp ne i64* %5, null, !dbg !15555
  %6 = zext i1 %tobool2 to i64, !dbg !15555
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !15555
  %or = or i32 %4, %cond3, !dbg !15556
  store i32 %or, i32* %flags, align 4, !dbg !15552, !tbaa !2273
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !15557, metadata !DIExpression()), !dbg !15558
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !15559, !tbaa !2286
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !15560, !tbaa !2447
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15561, !tbaa !2286
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !15562, !ctir !1234
  %10 = load i32, i32* %style, align 8, !dbg !15562, !tbaa !14474, !ctir !1199
  %11 = load i32, i32* %flags, align 4, !dbg !15563, !tbaa !2273
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15564, !tbaa !2286
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !15565, !ctir !1234
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15564
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15566, !tbaa !2286
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !15567, !ctir !1234
  %14 = load i8*, i8** %left_quote, align 8, !dbg !15567, !tbaa !14575, !ctir !88
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15568, !tbaa !2286
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !15569, !ctir !1234
  %16 = load i8*, i8** %right_quote, align 8, !dbg !15569, !tbaa !14580, !ctir !88
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !15570
  %add = add i64 %call4, 1, !dbg !15571
  store i64 %add, i64* %bufsize, align 8, !dbg !15558, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15572, metadata !DIExpression()), !dbg !15573
  %17 = load i64, i64* %bufsize, align 8, !dbg !15574, !tbaa !2447
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !15575
  store i8* %call5, i8** %buf, align 8, !dbg !15573, !tbaa !2286
  %18 = load i8*, i8** %buf, align 8, !dbg !15576, !tbaa !2286
  %19 = load i64, i64* %bufsize, align 8, !dbg !15577, !tbaa !2447
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !15578, !tbaa !2286
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !15579, !tbaa !2447
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15580, !tbaa !2286
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !15581, !ctir !1234
  %23 = load i32, i32* %style6, align 8, !dbg !15581, !tbaa !14474, !ctir !1199
  %24 = load i32, i32* %flags, align 4, !dbg !15582, !tbaa !2273
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15583, !tbaa !2286
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !15584, !ctir !1234
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !15583
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15585, !tbaa !2286
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !15586, !ctir !1234
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !15586, !tbaa !14575, !ctir !88
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15587, !tbaa !2286
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !15588, !ctir !1234
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !15588, !tbaa !14580, !ctir !88
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !15589
  %30 = load i32, i32* %e, align 4, !dbg !15590, !tbaa !2273
  %call12 = call i32* @__errno_location() #16, !dbg !15591
  store i32 %30, i32* %call12, align 4, !dbg !15592, !tbaa !2273, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !15593, !tbaa !2286
  %tobool13 = icmp ne i64* %31, null, !dbg !15593
  br i1 %tobool13, label %if.then, label %if.end, !dbg !15595

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !15596, !tbaa !2447
  %sub = sub i64 %32, 1, !dbg !15597
  %33 = load i64*, i64** %size.addr, align 8, !dbg !15598, !tbaa !2286
  store i64 %sub, i64* %33, align 8, !dbg !15599, !tbaa !2447, !ctir !55
  br label %if.end, !dbg !15600

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !15601, !tbaa !2286
  ret i8* %34, !dbg !15602
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !15603 !ctir !168 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !1250
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15604, metadata !DIExpression()), !dbg !15605
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15606, !tbaa !2286
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !15605, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15607, metadata !DIExpression()), !dbg !15608
  store i32 1, i32* %i, align 4, !dbg !15609, !tbaa !2273
  br label %for.cond, !dbg !15611

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !15612, !tbaa !2273
  %2 = load i32, i32* @nslots, align 4, !dbg !15614, !tbaa !2273
  %cmp = icmp slt i32 %1, %2, !dbg !15615
  br i1 %cmp, label %for.body, label %for.end, !dbg !15616

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15617, !tbaa !2286
  %4 = load i32, i32* %i, align 4, !dbg !15618, !tbaa !2273
  %idxprom = sext i32 %4 to i64, !dbg !15617
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !15617, !ctir !1250
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !15619, !ctir !1251
  %5 = load i8*, i8** %val, align 8, !dbg !15619, !tbaa !15620, !ctir !9
  call void @free(i8* %5) #12, !dbg !15622
  br label %for.inc, !dbg !15622

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !15623, !tbaa !2273
  %inc = add nsw i32 %6, 1, !dbg !15623
  store i32 %inc, i32* %i, align 4, !dbg !15623, !tbaa !2273
  br label %for.cond, !dbg !15624, !llvm.loop !15625

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15627, !tbaa !2286
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !15627, !ctir !1250
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !15629, !ctir !1251
  %8 = load i8*, i8** %val2, align 8, !dbg !15629, !tbaa !15620, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15630
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15631

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15632, !tbaa !2286
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !15632, !ctir !1250
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !15634, !ctir !1251
  %10 = load i8*, i8** %val5, align 8, !dbg !15634, !tbaa !15620, !ctir !9
  call void @free(i8* %10) #12, !dbg !15635
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !15636, !tbaa !15637, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !15638, !tbaa !15620, !ctir !9
  br label %if.end, !dbg !15639

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15640, !tbaa !2286
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !15642
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !15643

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15644, !tbaa !2286
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !15644
  call void @free(i8* %13) #12, !dbg !15646
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !15647, !tbaa !2286
  br label %if.end8, !dbg !15648

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !15649, !tbaa !2273
  ret void, !dbg !15650
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !15651 !ctir !1255 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15652, metadata !DIExpression()), !dbg !15653
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15654, metadata !DIExpression()), !dbg !15655
  %0 = load i32, i32* %n.addr, align 4, !dbg !15656, !tbaa !2273
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15657, !tbaa !2286
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !15658
  ret i8* %call, !dbg !15659
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !15660 !ctir !1311 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !1250
  %preallocated = alloca i8, align 1, !ctir !103
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15661, metadata !DIExpression()), !dbg !15662
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15663, metadata !DIExpression()), !dbg !15664
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15665, metadata !DIExpression()), !dbg !15666
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !15667, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15669, metadata !DIExpression()), !dbg !15670
  %call = call i32* @__errno_location() #16, !dbg !15671
  %0 = load i32, i32* %call, align 4, !dbg !15671, !tbaa !2273, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !15670, !tbaa !2273
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15672, metadata !DIExpression()), !dbg !15673
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15674, !tbaa !2286
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !15673, !tbaa !2286
  %2 = load i32, i32* %n.addr, align 4, !dbg !15675, !tbaa !2273
  %cmp = icmp slt i32 %2, 0, !dbg !15677
  br i1 %cmp, label %if.then, label %if.end, !dbg !15678

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15679
  unreachable, !dbg !15679

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !15680, !tbaa !2273
  %4 = load i32, i32* %n.addr, align 4, !dbg !15682, !tbaa !2273
  %cmp1 = icmp sle i32 %3, %4, !dbg !15683
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !15684

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !15685, metadata !DIExpression()), !dbg !15687
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15688, !tbaa !2286
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !15689
  %frombool = zext i1 %cmp3 to i8, !dbg !15687
  store i8 %frombool, i8* %preallocated, align 1, !dbg !15687, !tbaa !2430
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !15690, metadata !DIExpression()), !dbg !15691
  store i32 2147483646, i32* %nmax, align 4, !dbg !15691, !tbaa !2273
  %6 = load i32, i32* %nmax, align 4, !dbg !15692, !tbaa !2273
  %7 = load i32, i32* %n.addr, align 4, !dbg !15694, !tbaa !2273
  %cmp4 = icmp slt i32 %6, %7, !dbg !15695
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15696

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !15697
  unreachable, !dbg !15697

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !15698, !tbaa !2430
  %tobool = trunc i8 %8 to i1, !dbg !15698
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15698

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !15698

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15699, !tbaa !2286
  br label %cond.end, !dbg !15698

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !15698
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !15698
  %11 = load i32, i32* %n.addr, align 4, !dbg !15700, !tbaa !2273
  %add = add nsw i32 %11, 1, !dbg !15701
  %conv = sext i32 %add to i64, !dbg !15702
  %mul = mul i64 %conv, 16, !dbg !15703
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !15704
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !15704
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !15705, !tbaa !2286
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !15706, !tbaa !2286
  %13 = load i8, i8* %preallocated, align 1, !dbg !15707, !tbaa !2430
  %tobool8 = trunc i8 %13 to i1, !dbg !15707
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !15709

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15710, !tbaa !2286
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !15711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !15711, !tbaa.struct !15712
  br label %if.end10, !dbg !15713

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15714, !tbaa !2286
  %17 = load i32, i32* @nslots, align 4, !dbg !15715, !tbaa !2273
  %idx.ext = sext i32 %17 to i64, !dbg !15716
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !15716
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !15717
  %19 = load i32, i32* %n.addr, align 4, !dbg !15718, !tbaa !2273
  %add11 = add nsw i32 %19, 1, !dbg !15719
  %20 = load i32, i32* @nslots, align 4, !dbg !15720, !tbaa !2273
  %sub = sub nsw i32 %add11, %20, !dbg !15721
  %conv12 = sext i32 %sub to i64, !dbg !15722
  %mul13 = mul i64 %conv12, 16, !dbg !15723
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !15717
  %21 = load i32, i32* %n.addr, align 4, !dbg !15724, !tbaa !2273
  %add14 = add nsw i32 %21, 1, !dbg !15725
  store i32 %add14, i32* @nslots, align 4, !dbg !15726, !tbaa !2273
  br label %if.end15, !dbg !15727

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15728, metadata !DIExpression()), !dbg !15730
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15731, !tbaa !2286
  %23 = load i32, i32* %n.addr, align 4, !dbg !15732, !tbaa !2273
  %idxprom = sext i32 %23 to i64, !dbg !15731
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !15731, !ctir !1250
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !15733, !ctir !1251
  %24 = load i64, i64* %size16, align 8, !dbg !15733, !tbaa !15637, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !15730, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %val, metadata !15734, metadata !DIExpression()), !dbg !15735
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15736, !tbaa !2286
  %26 = load i32, i32* %n.addr, align 4, !dbg !15737, !tbaa !2273
  %idxprom17 = sext i32 %26 to i64, !dbg !15736
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !15736, !ctir !1250
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !15738, !ctir !1251
  %27 = load i8*, i8** %val19, align 8, !dbg !15738, !tbaa !15620, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !15735, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15739, metadata !DIExpression()), !dbg !15740
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15741, !tbaa !2286
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !15742, !ctir !1234
  %29 = load i32, i32* %flags20, align 4, !dbg !15742, !tbaa !14542, !ctir !7
  %or = or i32 %29, 1, !dbg !15743
  store i32 %or, i32* %flags, align 4, !dbg !15740, !tbaa !2273
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !15744, metadata !DIExpression()), !dbg !15745
  %30 = load i8*, i8** %val, align 8, !dbg !15746, !tbaa !2286
  %31 = load i64, i64* %size, align 8, !dbg !15747, !tbaa !2447
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !15748, !tbaa !2286
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !15749, !tbaa !2447
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15750, !tbaa !2286
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !15751, !ctir !1234
  %35 = load i32, i32* %style, align 8, !dbg !15751, !tbaa !14474, !ctir !1199
  %36 = load i32, i32* %flags, align 4, !dbg !15752, !tbaa !2273
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15753, !tbaa !2286
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !15754, !ctir !1234
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15753
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15755, !tbaa !2286
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !15756, !ctir !1234
  %39 = load i8*, i8** %left_quote, align 8, !dbg !15756, !tbaa !14575, !ctir !88
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15757, !tbaa !2286
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !15758, !ctir !1234
  %41 = load i8*, i8** %right_quote, align 8, !dbg !15758, !tbaa !14580, !ctir !88
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !15759
  store i64 %call21, i64* %qsize, align 8, !dbg !15745, !tbaa !2447
  %42 = load i64, i64* %size, align 8, !dbg !15760, !tbaa !2447
  %43 = load i64, i64* %qsize, align 8, !dbg !15762, !tbaa !2447
  %cmp22 = icmp ule i64 %42, %43, !dbg !15763
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !15764

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !15765, !tbaa !2447
  %add25 = add i64 %44, 1, !dbg !15767
  store i64 %add25, i64* %size, align 8, !dbg !15768, !tbaa !2447
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15769, !tbaa !2286
  %46 = load i32, i32* %n.addr, align 4, !dbg !15770, !tbaa !2273
  %idxprom26 = sext i32 %46 to i64, !dbg !15769
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !15769, !ctir !1250
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !15771, !ctir !1251
  store i64 %add25, i64* %size28, align 8, !dbg !15772, !tbaa !15637, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !15773, !tbaa !2286
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15775
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15776

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !15777, !tbaa !2286
  call void @free(i8* %48) #12, !dbg !15778
  br label %if.end32, !dbg !15778

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !15779, !tbaa !2447
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !15780
  store i8* %call33, i8** %val, align 8, !dbg !15781, !tbaa !2286
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15782, !tbaa !2286
  %51 = load i32, i32* %n.addr, align 4, !dbg !15783, !tbaa !2273
  %idxprom34 = sext i32 %51 to i64, !dbg !15782
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !15782, !ctir !1250
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !15784, !ctir !1251
  store i8* %call33, i8** %val36, align 8, !dbg !15785, !tbaa !15620, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !15786, !tbaa !2286
  %53 = load i64, i64* %size, align 8, !dbg !15787, !tbaa !2447
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !15788, !tbaa !2286
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !15789, !tbaa !2447
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15790, !tbaa !2286
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !15791, !ctir !1234
  %57 = load i32, i32* %style37, align 8, !dbg !15791, !tbaa !14474, !ctir !1199
  %58 = load i32, i32* %flags, align 4, !dbg !15792, !tbaa !2273
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15793, !tbaa !2286
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !15794, !ctir !1234
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !15793
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15795, !tbaa !2286
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !15796, !ctir !1234
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !15796, !tbaa !14575, !ctir !88
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15797, !tbaa !2286
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !15798, !ctir !1234
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !15798, !tbaa !14580, !ctir !88
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !15799
  br label %if.end43, !dbg !15800

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !15801, !tbaa !2273
  %call44 = call i32* @__errno_location() #16, !dbg !15802
  store i32 %64, i32* %call44, align 4, !dbg !15803, !tbaa !2273, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !15804, !tbaa !2286
  ret i8* %65, !dbg !15805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15806 !ctir !1257 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15807, metadata !DIExpression()), !dbg !15808
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15809, metadata !DIExpression()), !dbg !15810
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15811, metadata !DIExpression()), !dbg !15812
  %0 = load i32, i32* %n.addr, align 4, !dbg !15813, !tbaa !2273
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15814, !tbaa !2286
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15815, !tbaa !2447
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !15816
  ret i8* %call, !dbg !15817
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !15818 !ctir !1259 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15819, metadata !DIExpression()), !dbg !15820
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15821, !tbaa !2286
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !15822
  ret i8* %call, !dbg !15823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !15824 !ctir !1261 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15825, metadata !DIExpression()), !dbg !15826
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15827, metadata !DIExpression()), !dbg !15828
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15829, !tbaa !2286
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15830, !tbaa !2447
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !15831
  ret i8* %call, !dbg !15832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !15833 !ctir !1263 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1234
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15834, metadata !DIExpression()), !dbg !15835
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15836, metadata !DIExpression()), !dbg !15837
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15838, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15840, metadata !DIExpression()), !dbg !15841
  %0 = load i32, i32* %s.addr, align 4, !dbg !15842, !tbaa !2438
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15843
  %1 = load i32, i32* %n.addr, align 4, !dbg !15844, !tbaa !2273
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15845, !tbaa !2286
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !15846
  ret i8* %call, !dbg !15847
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !15848 !ctir !1313 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !15849, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !15851, metadata !DIExpression()), !dbg !15852
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !15852
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15852
  %1 = load i32, i32* %style.addr, align 4, !dbg !15853, !tbaa !2438
  %cmp = icmp eq i32 %1, 10, !dbg !15855
  br i1 %cmp, label %if.then, label %if.end, !dbg !15856

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15857
  unreachable, !dbg !15857

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !15858, !tbaa !2438
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !15859, !ctir !1220
  store i32 %2, i32* %style1, align 8, !dbg !15860, !tbaa !14474, !ctir !1199
  ret void, !dbg !15861
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15862 !ctir !1265 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1234
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15863, metadata !DIExpression()), !dbg !15864
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15865, metadata !DIExpression()), !dbg !15866
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15867, metadata !DIExpression()), !dbg !15868
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15869, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15871, metadata !DIExpression()), !dbg !15872
  %0 = load i32, i32* %s.addr, align 4, !dbg !15873, !tbaa !2438
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15874
  %1 = load i32, i32* %n.addr, align 4, !dbg !15875, !tbaa !2273
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15876, !tbaa !2286
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15877, !tbaa !2447
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15878
  ret i8* %call, !dbg !15879
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15880 !ctir !1267 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15881, metadata !DIExpression()), !dbg !15882
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15883, metadata !DIExpression()), !dbg !15884
  %0 = load i32, i32* %s.addr, align 4, !dbg !15885, !tbaa !2438
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15886, !tbaa !2286
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15887
  ret i8* %call, !dbg !15888
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15889 !ctir !1269 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15890, metadata !DIExpression()), !dbg !15891
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15892, metadata !DIExpression()), !dbg !15893
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15894, metadata !DIExpression()), !dbg !15895
  %0 = load i32, i32* %s.addr, align 4, !dbg !15896, !tbaa !2438
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15897, !tbaa !2286
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15898, !tbaa !2447
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15899
  ret i8* %call, !dbg !15900
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15901 !ctir !1271 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !1220
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15902, metadata !DIExpression()), !dbg !15903
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15904, metadata !DIExpression()), !dbg !15905
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15906, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15908, metadata !DIExpression()), !dbg !15909
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15910, !tbaa.struct !15911
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15912, !tbaa !2438
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15913
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15914, !tbaa !2286
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15915, !tbaa !2447
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15916
  ret i8* %call1, !dbg !15917
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15918 !ctir !1273 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15919, metadata !DIExpression()), !dbg !15920
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15921, metadata !DIExpression()), !dbg !15922
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15923, !tbaa !2286
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15924, !tbaa !2438
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15925
  ret i8* %call, !dbg !15926
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15927 !ctir !1259 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15928, metadata !DIExpression()), !dbg !15929
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15930, !tbaa !2286
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15931
  ret i8* %call, !dbg !15932
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15933 !ctir !1261 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15934, metadata !DIExpression()), !dbg !15935
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15936, metadata !DIExpression()), !dbg !15937
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15938, !tbaa !2286
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15939, !tbaa !2447
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15940
  ret i8* %call, !dbg !15941
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15942 !ctir !1263 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !1220
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15943, metadata !DIExpression()), !dbg !15944
  store i32 %s, i32* %s.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15945, metadata !DIExpression()), !dbg !15946
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15949, metadata !DIExpression()), !dbg !15950
  %0 = load i32, i32* %s.addr, align 4, !dbg !15951, !tbaa !2438
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15952
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15952
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15952
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15952, !tbaa.struct !15911
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15953
  %3 = load i32, i32* %n.addr, align 4, !dbg !15954, !tbaa !2273
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15955, !tbaa !2286
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15956
  ret i8* %call1, !dbg !15957
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15958 !ctir !1275 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15959, metadata !DIExpression()), !dbg !15960
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15963, metadata !DIExpression()), !dbg !15964
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15965, metadata !DIExpression()), !dbg !15966
  %0 = load i32, i32* %n.addr, align 4, !dbg !15967, !tbaa !2273
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15968, !tbaa !2286
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15969, !tbaa !2286
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15970, !tbaa !2286
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15971
  ret i8* %call, !dbg !15972
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15973 !ctir !1277 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1220
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15974, metadata !DIExpression()), !dbg !15975
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15976, metadata !DIExpression()), !dbg !15977
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15978, metadata !DIExpression()), !dbg !15979
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15980, metadata !DIExpression()), !dbg !15981
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15982, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15984, metadata !DIExpression()), !dbg !15985
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15986, !tbaa.struct !15911
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15987, !tbaa !2286
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15988, !tbaa !2286
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15989
  %3 = load i32, i32* %n.addr, align 4, !dbg !15990, !tbaa !2273
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15991, !tbaa !2286
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15992, !tbaa !2447
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15993
  ret i8* %call, !dbg !15994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15995 !ctir !1279 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15996, metadata !DIExpression()), !dbg !15997
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15998, metadata !DIExpression()), !dbg !15999
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16000, metadata !DIExpression()), !dbg !16001
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !16002, !tbaa !2286
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !16003, !tbaa !2286
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !16004, !tbaa !2286
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !16005
  ret i8* %call, !dbg !16006
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !16007 !ctir !1281 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16008, metadata !DIExpression()), !dbg !16009
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16010, metadata !DIExpression()), !dbg !16011
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16012, metadata !DIExpression()), !dbg !16013
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16014, metadata !DIExpression()), !dbg !16015
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !16016, !tbaa !2286
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !16017, !tbaa !2286
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !16018, !tbaa !2286
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !16019, !tbaa !2447
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !16020
  ret i8* %call, !dbg !16021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !16022 !ctir !1283 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16023, metadata !DIExpression()), !dbg !16024
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16025, metadata !DIExpression()), !dbg !16026
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16027, metadata !DIExpression()), !dbg !16028
  %0 = load i32, i32* %n.addr, align 4, !dbg !16029, !tbaa !2273
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !16030, !tbaa !2286
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !16031, !tbaa !2447
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !16032
  ret i8* %call, !dbg !16033
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !16034 !ctir !1285 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16035, metadata !DIExpression()), !dbg !16036
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16037, metadata !DIExpression()), !dbg !16038
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !16039, !tbaa !2286
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !16040, !tbaa !2447
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !16041
  ret i8* %call, !dbg !16042
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !16043 !ctir !1287 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16044, metadata !DIExpression()), !dbg !16045
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16046, metadata !DIExpression()), !dbg !16047
  %0 = load i32, i32* %n.addr, align 4, !dbg !16048, !tbaa !2273
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !16049, !tbaa !2286
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !16050
  ret i8* %call, !dbg !16051
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !16052 !ctir !1289 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16053, metadata !DIExpression()), !dbg !16054
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !16055, !tbaa !2286
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !16056
  ret i8* %call, !dbg !16057
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !16058 !ctir !1622 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1629
  %s = alloca %struct.randread_source*, align 8, !ctir !1624
  store i8* %name, i8** %name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16059, metadata !DIExpression()), !dbg !16060
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !16061, metadata !DIExpression()), !dbg !16062
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16063, !tbaa !2447
  %cmp = icmp eq i64 %0, 0, !dbg !16065
  br i1 %cmp, label %if.then, label %if.else, !dbg !16066

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !16067
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !16068
  br label %return, !dbg !16068

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !16069, metadata !DIExpression()), !dbg !16071
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !16071, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !16072, metadata !DIExpression()), !dbg !16073
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16074, !tbaa !2286
  %tobool = icmp ne i8* %1, null, !dbg !16074
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !16076

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !16077, !tbaa !2286
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.282, i64 0, i64 0)), !dbg !16079
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !16080, !tbaa !2286
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !16080
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !16081

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !16082
  br label %return, !dbg !16082

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !16083

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16084, !tbaa !2286
  %4 = load i8*, i8** %name.addr, align 8, !dbg !16085, !tbaa !2286
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !16086
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !16087, !tbaa !2286
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16088, !tbaa !2286
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !16088
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !16090

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16091, !tbaa !2286
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16092, !tbaa !2286
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !16093, !ctir !1625
  %c = bitcast %union.anon.36* %buf to [4096 x i8]*, !dbg !16094
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !16092
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16095, !tbaa !2447
  %cmp9 = icmp ult i64 4096, %8, !dbg !16095
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !16095

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !16095

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16095, !tbaa !2447
  br label %cond.end, !dbg !16095

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !16095
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #12, !dbg !16096
  br label %if.end19, !dbg !16096

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16097, !tbaa !2286
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !16099, !ctir !1625
  %isaac = bitcast %union.anon.36* %buf12 to %struct.isaac*, !dbg !16100
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !16101, !ctir !1676
  store i64 0, i64* %buffered, align 8, !dbg !16102, !tbaa !2438, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16103, !tbaa !2286
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !16104, !ctir !1625
  %isaac14 = bitcast %union.anon.36* %buf13 to %struct.isaac*, !dbg !16105
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !16106, !ctir !1676
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !16107, !ctir !1680
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !16103
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !16103
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16108, !tbaa !2447
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !16109
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16110, !tbaa !2286
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !16111, !ctir !1625
  %isaac17 = bitcast %union.anon.36* %buf16 to %struct.isaac*, !dbg !16112
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !16113, !ctir !1676
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !16114
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16115, !tbaa !2286
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !16116
  br label %return, !dbg !16116

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !16117
  ret %struct.randread_source* %16, !dbg !16117
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !16118 !ctir !1708 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !1624
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !16119, metadata !DIExpression()), !dbg !16120
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !16121, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !16123, metadata !DIExpression()), !dbg !16124
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !16125
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !16125
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !16124, !tbaa !2286
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !16126, !tbaa !2286
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16127, !tbaa !2286
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !16128, !ctir !1625
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !16129, !tbaa !16130, !ctir !1629
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16132, !tbaa !2286
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !16133, !ctir !1625
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !16134, !tbaa !16135, !ctir !1664
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !16136, !tbaa !2286
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16137, !tbaa !2286
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !16138, !ctir !1625
  store i8* %4, i8** %handler_arg2, align 8, !dbg !16139, !tbaa !16140, !ctir !339
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !16141, !tbaa !2286
  ret %struct.randread_source* %6, !dbg !16142
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !16143 !ctir !1710 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !1712
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !16144
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !1713
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !1713
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !1714
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !1714
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16150, metadata !DIExpression()), !dbg !16151
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !16152, metadata !DIExpression()), !dbg !16153
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !16154, metadata !DIExpression()), !dbg !16155
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !16156, metadata !DIExpression()), !dbg !16157
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !16158, !tbaa !2286
  store i8* %0, i8** %buf, align 8, !dbg !16157, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !16159, metadata !DIExpression()), !dbg !16160
  store i64 0, i64* %seeded, align 8, !dbg !16160, !tbaa !2447
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16161, metadata !DIExpression()), !dbg !16162
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.283, i64 0, i64 0), i32 0), !dbg !16163
  store i32 %call, i32* %fd, align 4, !dbg !16162, !tbaa !2273
  %1 = load i32, i32* %fd, align 4, !dbg !16164, !tbaa !2273
  %cmp = icmp sle i32 0, %1, !dbg !16166
  br i1 %cmp, label %if.then, label %if.end6, !dbg !16167

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !16168, !tbaa !2273
  %3 = load i8*, i8** %buf, align 8, !dbg !16170, !tbaa !2286
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !16171, !tbaa !2447
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16171, !tbaa !2447
  %cmp1 = icmp ult i64 %4, %5, !dbg !16171
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !16171

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !16171, !tbaa !2447
  br label %cond.end, !dbg !16171

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !16171, !tbaa !2447
  br label %cond.end, !dbg !16171

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !16171
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !16172
  store i64 %call2, i64* %seeded, align 8, !dbg !16173, !tbaa !2447
  %8 = load i64, i64* %seeded, align 8, !dbg !16174, !tbaa !2447
  %cmp3 = icmp slt i64 %8, 0, !dbg !16176
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !16177

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !16178, !tbaa !2447
  br label %if.end, !dbg !16179

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !16180, !tbaa !2273
  %call5 = call i32 @close(i32 %9), !dbg !16181
  br label %if.end6, !dbg !16182

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !16183, !tbaa !2447
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !16183, !tbaa !2447
  %cmp7 = icmp ult i64 %10, %11, !dbg !16183
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !16185

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !16186, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !16189, metadata !DIExpression()), !dbg !16188
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !16188, !tbaa !2447
  %13 = load i64, i64* %seeded, align 8, !dbg !16188, !tbaa !2447
  %sub = sub i64 %12, %13, !dbg !16188
  %cmp9 = icmp ult i64 16, %sub, !dbg !16188
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !16188

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !16188

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !16188, !tbaa !2447
  %15 = load i64, i64* %seeded, align 8, !dbg !16188, !tbaa !2447
  %sub12 = sub i64 %14, %15, !dbg !16188
  br label %cond.end13, !dbg !16188

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !16188
  store i64 %cond14, i64* %nbytes, align 8, !dbg !16188, !tbaa !2447
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #12, !dbg !16188
  %16 = load i8*, i8** %buf, align 8, !dbg !16188, !tbaa !2286
  %17 = load i64, i64* %seeded, align 8, !dbg !16188, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !16188
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !16188
  %19 = load i64, i64* %nbytes, align 8, !dbg !16188, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !16188
  %20 = load i64, i64* %nbytes, align 8, !dbg !16188, !tbaa !2447
  %21 = load i64, i64* %seeded, align 8, !dbg !16188, !tbaa !2447
  %add = add i64 %21, %20, !dbg !16188
  store i64 %add, i64* %seeded, align 8, !dbg !16188, !tbaa !2447
  br label %if.end16, !dbg !16188

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !16190, !tbaa !2447
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !16190, !tbaa !2447
  %cmp17 = icmp ult i64 %22, %23, !dbg !16190
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !16192

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !16193, metadata !DIExpression()), !dbg !16195
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !16196, metadata !DIExpression()), !dbg !16195
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !16195, !tbaa !2447
  %25 = load i64, i64* %seeded, align 8, !dbg !16195, !tbaa !2447
  %sub21 = sub i64 %24, %25, !dbg !16195
  %cmp22 = icmp ult i64 4, %sub21, !dbg !16195
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !16195

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !16195

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !16195, !tbaa !2447
  %27 = load i64, i64* %seeded, align 8, !dbg !16195, !tbaa !2447
  %sub25 = sub i64 %26, %27, !dbg !16195
  br label %cond.end26, !dbg !16195

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !16195
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !16195, !tbaa !2447
  %call28 = call i32 @getpid() #12, !dbg !16195
  store i32 %call28, i32* %v19, align 4, !dbg !16195, !tbaa !2273
  %28 = load i8*, i8** %buf, align 8, !dbg !16195, !tbaa !2286
  %29 = load i64, i64* %seeded, align 8, !dbg !16195, !tbaa !2447
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !16195
  %30 = bitcast i32* %v19 to i8*, !dbg !16195
  %31 = load i64, i64* %nbytes20, align 8, !dbg !16195, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !16195
  %32 = load i64, i64* %nbytes20, align 8, !dbg !16195, !tbaa !2447
  %33 = load i64, i64* %seeded, align 8, !dbg !16195, !tbaa !2447
  %add30 = add i64 %33, %32, !dbg !16195
  store i64 %add30, i64* %seeded, align 8, !dbg !16195, !tbaa !2447
  br label %if.end31, !dbg !16195

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !16197, !tbaa !2447
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !16197, !tbaa !2447
  %cmp32 = icmp ult i64 %34, %35, !dbg !16197
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !16199

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !16200, metadata !DIExpression()), !dbg !16202
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !16203, metadata !DIExpression()), !dbg !16202
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !16202, !tbaa !2447
  %37 = load i64, i64* %seeded, align 8, !dbg !16202, !tbaa !2447
  %sub36 = sub i64 %36, %37, !dbg !16202
  %cmp37 = icmp ult i64 4, %sub36, !dbg !16202
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !16202

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !16202

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !16202, !tbaa !2447
  %39 = load i64, i64* %seeded, align 8, !dbg !16202, !tbaa !2447
  %sub40 = sub i64 %38, %39, !dbg !16202
  br label %cond.end41, !dbg !16202

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !16202
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !16202, !tbaa !2447
  %call43 = call i32 @getppid() #12, !dbg !16202
  store i32 %call43, i32* %v34, align 4, !dbg !16202, !tbaa !2273
  %40 = load i8*, i8** %buf, align 8, !dbg !16202, !tbaa !2286
  %41 = load i64, i64* %seeded, align 8, !dbg !16202, !tbaa !2447
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !16202
  %42 = bitcast i32* %v34 to i8*, !dbg !16202
  %43 = load i64, i64* %nbytes35, align 8, !dbg !16202, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !16202
  %44 = load i64, i64* %nbytes35, align 8, !dbg !16202, !tbaa !2447
  %45 = load i64, i64* %seeded, align 8, !dbg !16202, !tbaa !2447
  %add45 = add i64 %45, %44, !dbg !16202
  store i64 %add45, i64* %seeded, align 8, !dbg !16202, !tbaa !2447
  br label %if.end46, !dbg !16202

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !16204, !tbaa !2447
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !16204, !tbaa !2447
  %cmp47 = icmp ult i64 %46, %47, !dbg !16204
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !16206

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !16207, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !16210, metadata !DIExpression()), !dbg !16209
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !16209, !tbaa !2447
  %49 = load i64, i64* %seeded, align 8, !dbg !16209, !tbaa !2447
  %sub51 = sub i64 %48, %49, !dbg !16209
  %cmp52 = icmp ult i64 4, %sub51, !dbg !16209
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !16209

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !16209

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !16209, !tbaa !2447
  %51 = load i64, i64* %seeded, align 8, !dbg !16209, !tbaa !2447
  %sub55 = sub i64 %50, %51, !dbg !16209
  br label %cond.end56, !dbg !16209

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !16209
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !16209, !tbaa !2447
  %call58 = call i32 @getuid() #12, !dbg !16209
  store i32 %call58, i32* %v49, align 4, !dbg !16209, !tbaa !2273
  %52 = load i8*, i8** %buf, align 8, !dbg !16209, !tbaa !2286
  %53 = load i64, i64* %seeded, align 8, !dbg !16209, !tbaa !2447
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !16209
  %54 = bitcast i32* %v49 to i8*, !dbg !16209
  %55 = load i64, i64* %nbytes50, align 8, !dbg !16209, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !16209
  %56 = load i64, i64* %nbytes50, align 8, !dbg !16209, !tbaa !2447
  %57 = load i64, i64* %seeded, align 8, !dbg !16209, !tbaa !2447
  %add60 = add i64 %57, %56, !dbg !16209
  store i64 %add60, i64* %seeded, align 8, !dbg !16209, !tbaa !2447
  br label %if.end61, !dbg !16209

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !16211, !tbaa !2447
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !16211, !tbaa !2447
  %cmp62 = icmp ult i64 %58, %59, !dbg !16211
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !16213

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !16214, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !16217, metadata !DIExpression()), !dbg !16216
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !16216, !tbaa !2447
  %61 = load i64, i64* %seeded, align 8, !dbg !16216, !tbaa !2447
  %sub66 = sub i64 %60, %61, !dbg !16216
  %cmp67 = icmp ult i64 4, %sub66, !dbg !16216
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !16216

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !16216

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !16216, !tbaa !2447
  %63 = load i64, i64* %seeded, align 8, !dbg !16216, !tbaa !2447
  %sub70 = sub i64 %62, %63, !dbg !16216
  br label %cond.end71, !dbg !16216

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !16216
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !16216, !tbaa !2447
  %call73 = call i32 @getgid() #12, !dbg !16216
  store i32 %call73, i32* %v64, align 4, !dbg !16216, !tbaa !2273
  %64 = load i8*, i8** %buf, align 8, !dbg !16216, !tbaa !2286
  %65 = load i64, i64* %seeded, align 8, !dbg !16216, !tbaa !2447
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !16216
  %66 = bitcast i32* %v64 to i8*, !dbg !16216
  %67 = load i64, i64* %nbytes65, align 8, !dbg !16216, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !16216
  %68 = load i64, i64* %nbytes65, align 8, !dbg !16216, !tbaa !2447
  %69 = load i64, i64* %seeded, align 8, !dbg !16216, !tbaa !2447
  %add75 = add i64 %69, %68, !dbg !16216
  store i64 %add75, i64* %seeded, align 8, !dbg !16216, !tbaa !2447
  br label %if.end76, !dbg !16216

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !16218
}

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !16219 !ctir !1665 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !16220, metadata !DIExpression()), !dbg !16221
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !16222, !tbaa !2286
  %tobool = icmp ne i8* %0, null, !dbg !16222
  br i1 %tobool, label %if.then, label %if.end, !dbg !16224

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !16225, !tbaa !2273
  %call = call i32* @__errno_location() #16, !dbg !16226
  %2 = load i32, i32* %call, align 4, !dbg !16226, !tbaa !2273, !ctir !7
  %call1 = call i32* @__errno_location() #16, !dbg !16227
  %3 = load i32, i32* %call1, align 4, !dbg !16227, !tbaa !2273, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !16228
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16227

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.284, i64 0, i64 0)) #12, !dbg !16229
  br label %cond.end, !dbg !16227

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.285, i64 0, i64 0)) #12, !dbg !16230
  br label %cond.end, !dbg !16227

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !16227
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !16231, !tbaa !2286
  %call4 = call i8* @quote(i8* %4), !dbg !16232
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !16233
  br label %if.end, !dbg !16233

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !16234
  unreachable, !dbg !16234
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !16235 !ctir !1700 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16236, metadata !DIExpression()), !dbg !16237
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !16238, metadata !DIExpression()), !dbg !16239
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !16240, !tbaa !2286
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16241, !tbaa !2286
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !16242, !ctir !1625
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !16243, !tbaa !16135, !ctir !1664
  ret void, !dbg !16244
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !16245 !ctir !1702 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16246, metadata !DIExpression()), !dbg !16247
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !16248, metadata !DIExpression()), !dbg !16249
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !16250, !tbaa !2286
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16251, !tbaa !2286
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !16252, !ctir !1625
  store i8* %0, i8** %handler_arg1, align 8, !dbg !16253, !tbaa !16140, !ctir !339
  ret void, !dbg !16254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !16255 !ctir !1704 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16256, metadata !DIExpression()), !dbg !16257
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16258, metadata !DIExpression()), !dbg !16259
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16260, metadata !DIExpression()), !dbg !16261
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16262, !tbaa !2286
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !16264, !ctir !1625
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16264, !tbaa !16130, !ctir !1629
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !16262
  br i1 %tobool, label %if.then, label %if.else, !dbg !16265

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16266, !tbaa !2286
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !16267, !tbaa !2286
  %4 = load i64, i64* %size.addr, align 8, !dbg !16268, !tbaa !2447
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !16269
  br label %if.end, !dbg !16269

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16270, !tbaa !2286
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !16271, !ctir !1625
  %isaac = bitcast %union.anon.36* %buf1 to %struct.isaac*, !dbg !16272
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !16273, !tbaa !2286
  %7 = load i64, i64* %size.addr, align 8, !dbg !16274, !tbaa !2447
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !16275
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16276
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !16277 !ctir !1715 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16278, metadata !DIExpression()), !dbg !16279
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16280, metadata !DIExpression()), !dbg !16281
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16282, metadata !DIExpression()), !dbg !16283
  br label %while.body, !dbg !16284

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !16285, metadata !DIExpression()), !dbg !16287
  %0 = load i8*, i8** %p.addr, align 8, !dbg !16288, !tbaa !2286
  %1 = load i64, i64* %size.addr, align 8, !dbg !16288, !tbaa !2447
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16288, !tbaa !2286
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !16288, !ctir !1625
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16288, !tbaa !16130, !ctir !1629
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !16288
  store i64 %call, i64* %inbytes, align 8, !dbg !16287, !tbaa !2447
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !16289, metadata !DIExpression()), !dbg !16290
  %call1 = call i32* @__errno_location() #16, !dbg !16291
  %4 = load i32, i32* %call1, align 4, !dbg !16291, !tbaa !2273, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !16290, !tbaa !2273
  %5 = load i64, i64* %inbytes, align 8, !dbg !16292, !tbaa !2447
  %6 = load i8*, i8** %p.addr, align 8, !dbg !16293, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !16293
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !16293, !tbaa !2286
  %7 = load i64, i64* %inbytes, align 8, !dbg !16294, !tbaa !2447
  %8 = load i64, i64* %size.addr, align 8, !dbg !16295, !tbaa !2447
  %sub = sub i64 %8, %7, !dbg !16295
  store i64 %sub, i64* %size.addr, align 8, !dbg !16295, !tbaa !2447
  %9 = load i64, i64* %size.addr, align 8, !dbg !16296, !tbaa !2447
  %cmp = icmp eq i64 %9, 0, !dbg !16298
  br i1 %cmp, label %if.then, label %if.end, !dbg !16299

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !16300

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16301, !tbaa !2286
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !16301, !ctir !1625
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !16301, !tbaa !16130, !ctir !1629
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #12, !dbg !16301
  %tobool = icmp ne i32 %call3, 0, !dbg !16301
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16301

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !16302, !tbaa !2273
  br label %cond.end, !dbg !16301

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !16301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !16301
  %call4 = call i32* @__errno_location() #16, !dbg !16303
  store i32 %cond, i32* %call4, align 4, !dbg !16304, !tbaa !2273, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16305, !tbaa !2286
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !16306, !ctir !1625
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !16306, !tbaa !16135, !ctir !1664
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16307, !tbaa !2286
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !16308, !ctir !1625
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !16308, !tbaa !16140, !ctir !339
  call void %14(i8* %16), !dbg !16305
  br label %while.body, !dbg !16284, !llvm.loop !16309

while.end:                                        ; preds = %if.then
  ret void, !dbg !16311
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !16312 !ctir !1718 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !1721
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !16313, metadata !DIExpression()), !dbg !16314
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16315, metadata !DIExpression()), !dbg !16316
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16317, metadata !DIExpression()), !dbg !16318
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !16319, metadata !DIExpression()), !dbg !16320
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16321, !tbaa !2286
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !16322, !ctir !1676
  %1 = load i64, i64* %buffered, align 8, !dbg !16322, !tbaa !16323, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !16320, !tbaa !2447
  br label %while.body, !dbg !16326

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !16327, metadata !DIExpression()), !dbg !16329
  %2 = load i8*, i8** %p.addr, align 8, !dbg !16330, !tbaa !2286
  store i8* %2, i8** %char_p, align 8, !dbg !16329, !tbaa !2286
  %3 = load i64, i64* %size.addr, align 8, !dbg !16331, !tbaa !2447
  %4 = load i64, i64* %inbytes, align 8, !dbg !16333, !tbaa !2447
  %cmp = icmp ule i64 %3, %4, !dbg !16334
  br i1 %cmp, label %if.then, label %if.end, !dbg !16335

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !16336, !tbaa !2286
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16338, !tbaa !2286
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !16339, !ctir !1676
  %b = bitcast %union.anon.0.35* %data to [2048 x i8]*, !dbg !16340
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !16338
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !16341
  %7 = load i64, i64* %inbytes, align 8, !dbg !16342, !tbaa !2447
  %idx.neg = sub i64 0, %7, !dbg !16343
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !16343
  %8 = load i64, i64* %size.addr, align 8, !dbg !16344, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !16345
  %9 = load i64, i64* %inbytes, align 8, !dbg !16346, !tbaa !2447
  %10 = load i64, i64* %size.addr, align 8, !dbg !16347, !tbaa !2447
  %sub = sub i64 %9, %10, !dbg !16348
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16349, !tbaa !2286
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !16350, !ctir !1676
  store i64 %sub, i64* %buffered2, align 8, !dbg !16351, !tbaa !16323, !ctir !55
  br label %return, !dbg !16352

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !16353, !tbaa !2286
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16354, !tbaa !2286
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !16355, !ctir !1676
  %b4 = bitcast %union.anon.0.35* %data3 to [2048 x i8]*, !dbg !16356
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !16354
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !16357
  %14 = load i64, i64* %inbytes, align 8, !dbg !16358, !tbaa !2447
  %idx.neg7 = sub i64 0, %14, !dbg !16359
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !16359
  %15 = load i64, i64* %inbytes, align 8, !dbg !16360, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !16361
  %16 = load i8*, i8** %char_p, align 8, !dbg !16362, !tbaa !2286
  %17 = load i64, i64* %inbytes, align 8, !dbg !16363, !tbaa !2447
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !16364
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !16365, !tbaa !2286
  %18 = load i64, i64* %inbytes, align 8, !dbg !16366, !tbaa !2447
  %19 = load i64, i64* %size.addr, align 8, !dbg !16367, !tbaa !2447
  %sub10 = sub i64 %19, %18, !dbg !16367
  store i64 %sub10, i64* %size.addr, align 8, !dbg !16367, !tbaa !2447
  %20 = load i8*, i8** %p.addr, align 8, !dbg !16368, !tbaa !2286
  %21 = ptrtoint i8* %20 to i64, !dbg !16368
  %rem = urem i64 %21, 8, !dbg !16368
  %cmp11 = icmp eq i64 %rem, 0, !dbg !16368
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !16370

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !16371, metadata !DIExpression()), !dbg !16373
  %22 = load i8*, i8** %p.addr, align 8, !dbg !16374, !tbaa !2286
  %23 = bitcast i8* %22 to i64*, !dbg !16374
  store i64* %23, i64** %wp, align 8, !dbg !16373, !tbaa !2286
  br label %while.cond13, !dbg !16375

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !16376, !tbaa !2447
  %cmp14 = icmp ule i64 2048, %24, !dbg !16377
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !16375

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16378, !tbaa !2286
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !16380, !ctir !1676
  %26 = load i64*, i64** %wp, align 8, !dbg !16381, !tbaa !2286
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !16382
  %27 = load i64*, i64** %wp, align 8, !dbg !16383, !tbaa !2286
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !16383
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !16383, !tbaa !2286
  %28 = load i64, i64* %size.addr, align 8, !dbg !16384, !tbaa !2447
  %sub17 = sub i64 %28, 2048, !dbg !16384
  store i64 %sub17, i64* %size.addr, align 8, !dbg !16384, !tbaa !2447
  %29 = load i64, i64* %size.addr, align 8, !dbg !16385, !tbaa !2447
  %cmp18 = icmp eq i64 %29, 0, !dbg !16387
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !16388

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16389, !tbaa !2286
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !16391, !ctir !1676
  store i64 0, i64* %buffered20, align 8, !dbg !16392, !tbaa !16323, !ctir !55
  br label %return, !dbg !16393

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !16375, !llvm.loop !16394

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !16396, !tbaa !2286
  %32 = bitcast i64* %31 to i8*, !dbg !16396
  store i8* %32, i8** %p.addr, align 8, !dbg !16397, !tbaa !2286
  br label %if.end22, !dbg !16398

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16399, !tbaa !2286
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !16400, !ctir !1676
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !16401, !tbaa !2286
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !16402, !ctir !1676
  %w = bitcast %union.anon.0.35* %data24 to [256 x i64]*, !dbg !16403
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !16401
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !16404
  store i64 2048, i64* %inbytes, align 8, !dbg !16405, !tbaa !2447
  br label %while.body, !dbg !16326, !llvm.loop !16406

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !16408
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !16409 !ctir !1706 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1629
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !16410, metadata !DIExpression()), !dbg !16411
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !16412, metadata !DIExpression()), !dbg !16413
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16414, !tbaa !2286
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !16415, !ctir !1625
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !16415, !tbaa !16130, !ctir !1629
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !16413, !tbaa !2286
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16416, !tbaa !2286
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !16416
  call void @explicit_bzero(i8* %3, i64 4152) #12, !dbg !16417
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !16418, !tbaa !2286
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !16418
  call void @free(i8* %5) #12, !dbg !16419
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16420, !tbaa !2286
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !16420
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16420

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !16421, !tbaa !2286
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !16422
  br label %cond.end, !dbg !16420

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !16420
  ret i32 %cond, !dbg !16423
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !16424 !ctir !1725 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !1685
  %b = alloca i64, align 8, !ctir !1685
  %m = alloca i64*, align 8, !ctir !1721
  %r = alloca i64*, align 8, !ctir !1721
  %x = alloca i64, align 8, !ctir !1685
  %y = alloca i64, align 8, !ctir !1685
  %x18 = alloca i64, align 8, !ctir !1685
  %y19 = alloca i64, align 8, !ctir !1685
  %x40 = alloca i64, align 8, !ctir !1685
  %y41 = alloca i64, align 8, !ctir !1685
  %x61 = alloca i64, align 8, !ctir !1685
  %y62 = alloca i64, align 8, !ctir !1685
  %x88 = alloca i64, align 8, !ctir !1685
  %y89 = alloca i64, align 8, !ctir !1685
  %x110 = alloca i64, align 8, !ctir !1685
  %y111 = alloca i64, align 8, !ctir !1685
  %x132 = alloca i64, align 8, !ctir !1685
  %y133 = alloca i64, align 8, !ctir !1685
  %x153 = alloca i64, align 8, !ctir !1685
  %y154 = alloca i64, align 8, !ctir !1685
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !16426, metadata !DIExpression()), !dbg !16427
  store i64* %result, i64** %result.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !16428, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.declare(metadata i64* %a, metadata !16430, metadata !DIExpression()), !dbg !16431
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16432, !tbaa !2286
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !16433, !ctir !1728
  %1 = load i64, i64* %a1, align 8, !dbg !16433, !tbaa !16434, !ctir !1685
  store i64 %1, i64* %a, align 8, !dbg !16431, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %b, metadata !16435, metadata !DIExpression()), !dbg !16436
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16437, !tbaa !2286
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !16438, !ctir !1728
  %3 = load i64, i64* %b2, align 8, !dbg !16438, !tbaa !16439, !ctir !1685
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16440, !tbaa !2286
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !16441, !ctir !1728
  %5 = load i64, i64* %c, align 8, !dbg !16442, !tbaa !16443, !ctir !1685
  %inc = add i64 %5, 1, !dbg !16442
  store i64 %inc, i64* %c, align 8, !dbg !16442, !tbaa !16443, !ctir !1685
  %add = add i64 %3, %inc, !dbg !16444
  store i64 %add, i64* %b, align 8, !dbg !16436, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64** %m, metadata !16445, metadata !DIExpression()), !dbg !16446
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16447, !tbaa !2286
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !16448, !ctir !1728
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !16447
  store i64* %arraydecay, i64** %m, align 8, !dbg !16446, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %r, metadata !16449, metadata !DIExpression()), !dbg !16450
  %7 = load i64*, i64** %result.addr, align 8, !dbg !16451, !tbaa !2286
  store i64* %7, i64** %r, align 8, !dbg !16450, !tbaa !2286
  br label %do.body, !dbg !16452

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !16453, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.declare(metadata i64* %y, metadata !16457, metadata !DIExpression()), !dbg !16456
  %8 = load i64, i64* %a, align 8, !dbg !16456, !tbaa !2447
  %9 = load i64, i64* %a, align 8, !dbg !16456, !tbaa !2447
  %shl = shl i64 %9, 21, !dbg !16456
  %xor = xor i64 %8, %shl, !dbg !16456
  %neg = xor i64 %xor, -1, !dbg !16456
  %xor4 = xor i64 0, %neg, !dbg !16456
  %10 = load i64*, i64** %m, align 8, !dbg !16456, !tbaa !2286
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !16456, !ctir !1721
  %11 = load i64, i64* %arrayidx, align 8, !dbg !16456, !tbaa !2447
  %add5 = add i64 %xor4, %11, !dbg !16456
  store i64 %add5, i64* %a, align 8, !dbg !16456, !tbaa !2447
  %12 = load i64*, i64** %m, align 8, !dbg !16456, !tbaa !2286
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !16456, !ctir !1721
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !16456, !tbaa !2447
  store i64 %13, i64* %x, align 8, !dbg !16456, !tbaa !2447
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16456, !tbaa !2286
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !16456, !ctir !1728
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !16456
  %15 = load i64, i64* %x, align 8, !dbg !16456, !tbaa !2447
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !16456
  %16 = load i64, i64* %a, align 8, !dbg !16456, !tbaa !2447
  %add9 = add i64 %call, %16, !dbg !16456
  %17 = load i64, i64* %b, align 8, !dbg !16456, !tbaa !2447
  %add10 = add i64 %add9, %17, !dbg !16456
  store i64 %add10, i64* %y, align 8, !dbg !16456, !tbaa !2447
  %18 = load i64*, i64** %m, align 8, !dbg !16456, !tbaa !2286
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !16456, !ctir !1721
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !16456, !tbaa !2447
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16456, !tbaa !2286
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !16456, !ctir !1728
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !16456
  %20 = load i64, i64* %y, align 8, !dbg !16456, !tbaa !2447
  %shr = lshr i64 %20, 8, !dbg !16456
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !16456
  %21 = load i64, i64* %x, align 8, !dbg !16456, !tbaa !2447
  %add15 = add i64 %call14, %21, !dbg !16456
  %call16 = call i64 @just(i64 %add15), !dbg !16456
  store i64 %call16, i64* %b, align 8, !dbg !16456, !tbaa !2447
  %22 = load i64*, i64** %r, align 8, !dbg !16456, !tbaa !2286
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !16456, !ctir !1721
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !16456, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !16458, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !16461, metadata !DIExpression()), !dbg !16460
  %23 = load i64, i64* %a, align 8, !dbg !16460, !tbaa !2447
  %24 = load i64, i64* %a, align 8, !dbg !16460, !tbaa !2447
  %call20 = call i64 @just(i64 %24), !dbg !16460
  %shr21 = lshr i64 %call20, 5, !dbg !16460
  %xor22 = xor i64 %23, %shr21, !dbg !16460
  %xor23 = xor i64 0, %xor22, !dbg !16460
  %25 = load i64*, i64** %m, align 8, !dbg !16460, !tbaa !2286
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !16460, !ctir !1721
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !16460, !tbaa !2447
  %add25 = add i64 %xor23, %26, !dbg !16460
  store i64 %add25, i64* %a, align 8, !dbg !16460, !tbaa !2447
  %27 = load i64*, i64** %m, align 8, !dbg !16460, !tbaa !2286
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !16460, !ctir !1721
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !16460, !tbaa !2447
  store i64 %28, i64* %x18, align 8, !dbg !16460, !tbaa !2447
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16460, !tbaa !2286
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !16460, !ctir !1728
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !16460
  %30 = load i64, i64* %x18, align 8, !dbg !16460, !tbaa !2447
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !16460
  %31 = load i64, i64* %a, align 8, !dbg !16460, !tbaa !2447
  %add30 = add i64 %call29, %31, !dbg !16460
  %32 = load i64, i64* %b, align 8, !dbg !16460, !tbaa !2447
  %add31 = add i64 %add30, %32, !dbg !16460
  store i64 %add31, i64* %y19, align 8, !dbg !16460, !tbaa !2447
  %33 = load i64*, i64** %m, align 8, !dbg !16460, !tbaa !2286
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !16460, !ctir !1721
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !16460, !tbaa !2447
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16460, !tbaa !2286
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !16460, !ctir !1728
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !16460
  %35 = load i64, i64* %y19, align 8, !dbg !16460, !tbaa !2447
  %shr35 = lshr i64 %35, 8, !dbg !16460
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !16460
  %36 = load i64, i64* %x18, align 8, !dbg !16460, !tbaa !2447
  %add37 = add i64 %call36, %36, !dbg !16460
  %call38 = call i64 @just(i64 %add37), !dbg !16460
  store i64 %call38, i64* %b, align 8, !dbg !16460, !tbaa !2447
  %37 = load i64*, i64** %r, align 8, !dbg !16460, !tbaa !2286
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !16460, !ctir !1721
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !16460, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !16462, metadata !DIExpression()), !dbg !16464
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !16465, metadata !DIExpression()), !dbg !16464
  %38 = load i64, i64* %a, align 8, !dbg !16464, !tbaa !2447
  %39 = load i64, i64* %a, align 8, !dbg !16464, !tbaa !2447
  %shl42 = shl i64 %39, 12, !dbg !16464
  %xor43 = xor i64 %38, %shl42, !dbg !16464
  %xor44 = xor i64 0, %xor43, !dbg !16464
  %40 = load i64*, i64** %m, align 8, !dbg !16464, !tbaa !2286
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !16464, !ctir !1721
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !16464, !tbaa !2447
  %add46 = add i64 %xor44, %41, !dbg !16464
  store i64 %add46, i64* %a, align 8, !dbg !16464, !tbaa !2447
  %42 = load i64*, i64** %m, align 8, !dbg !16464, !tbaa !2286
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !16464, !ctir !1721
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !16464, !tbaa !2447
  store i64 %43, i64* %x40, align 8, !dbg !16464, !tbaa !2447
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16464, !tbaa !2286
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !16464, !ctir !1728
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !16464
  %45 = load i64, i64* %x40, align 8, !dbg !16464, !tbaa !2447
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !16464
  %46 = load i64, i64* %a, align 8, !dbg !16464, !tbaa !2447
  %add51 = add i64 %call50, %46, !dbg !16464
  %47 = load i64, i64* %b, align 8, !dbg !16464, !tbaa !2447
  %add52 = add i64 %add51, %47, !dbg !16464
  store i64 %add52, i64* %y41, align 8, !dbg !16464, !tbaa !2447
  %48 = load i64*, i64** %m, align 8, !dbg !16464, !tbaa !2286
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !16464, !ctir !1721
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !16464, !tbaa !2447
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16464, !tbaa !2286
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !16464, !ctir !1728
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !16464
  %50 = load i64, i64* %y41, align 8, !dbg !16464, !tbaa !2447
  %shr56 = lshr i64 %50, 8, !dbg !16464
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !16464
  %51 = load i64, i64* %x40, align 8, !dbg !16464, !tbaa !2447
  %add58 = add i64 %call57, %51, !dbg !16464
  %call59 = call i64 @just(i64 %add58), !dbg !16464
  store i64 %call59, i64* %b, align 8, !dbg !16464, !tbaa !2447
  %52 = load i64*, i64** %r, align 8, !dbg !16464, !tbaa !2286
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !16464, !ctir !1721
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !16464, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !16466, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !16469, metadata !DIExpression()), !dbg !16468
  %53 = load i64, i64* %a, align 8, !dbg !16468, !tbaa !2447
  %54 = load i64, i64* %a, align 8, !dbg !16468, !tbaa !2447
  %call63 = call i64 @just(i64 %54), !dbg !16468
  %shr64 = lshr i64 %call63, 33, !dbg !16468
  %xor65 = xor i64 %53, %shr64, !dbg !16468
  %xor66 = xor i64 0, %xor65, !dbg !16468
  %55 = load i64*, i64** %m, align 8, !dbg !16468, !tbaa !2286
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !16468, !ctir !1721
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !16468, !tbaa !2447
  %add68 = add i64 %xor66, %56, !dbg !16468
  store i64 %add68, i64* %a, align 8, !dbg !16468, !tbaa !2447
  %57 = load i64*, i64** %m, align 8, !dbg !16468, !tbaa !2286
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !16468, !ctir !1721
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !16468, !tbaa !2447
  store i64 %58, i64* %x61, align 8, !dbg !16468, !tbaa !2447
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16468, !tbaa !2286
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !16468, !ctir !1728
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !16468
  %60 = load i64, i64* %x61, align 8, !dbg !16468, !tbaa !2447
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !16468
  %61 = load i64, i64* %a, align 8, !dbg !16468, !tbaa !2447
  %add73 = add i64 %call72, %61, !dbg !16468
  %62 = load i64, i64* %b, align 8, !dbg !16468, !tbaa !2447
  %add74 = add i64 %add73, %62, !dbg !16468
  store i64 %add74, i64* %y62, align 8, !dbg !16468, !tbaa !2447
  %63 = load i64*, i64** %m, align 8, !dbg !16468, !tbaa !2286
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !16468, !ctir !1721
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !16468, !tbaa !2447
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16468, !tbaa !2286
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !16468, !ctir !1728
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !16468
  %65 = load i64, i64* %y62, align 8, !dbg !16468, !tbaa !2447
  %shr78 = lshr i64 %65, 8, !dbg !16468
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !16468
  %66 = load i64, i64* %x61, align 8, !dbg !16468, !tbaa !2447
  %add80 = add i64 %call79, %66, !dbg !16468
  %call81 = call i64 @just(i64 %add80), !dbg !16468
  store i64 %call81, i64* %b, align 8, !dbg !16468, !tbaa !2447
  %67 = load i64*, i64** %r, align 8, !dbg !16468, !tbaa !2286
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !16468, !ctir !1721
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !16468, !tbaa !2447
  %68 = load i64*, i64** %r, align 8, !dbg !16470, !tbaa !2286
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !16470
  store i64* %add.ptr, i64** %r, align 8, !dbg !16470, !tbaa !2286
  br label %do.cond, !dbg !16471

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !16472, !tbaa !2286
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !16472
  store i64* %add.ptr83, i64** %m, align 8, !dbg !16472, !tbaa !2286
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16473, !tbaa !2286
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !16474, !ctir !1728
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !16473
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !16475
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !16476
  br i1 %cmp, label %do.body, label %do.end, !dbg !16471, !llvm.loop !16477

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !16479

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !16480, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !16484, metadata !DIExpression()), !dbg !16483
  %71 = load i64, i64* %a, align 8, !dbg !16483, !tbaa !2447
  %72 = load i64, i64* %a, align 8, !dbg !16483, !tbaa !2447
  %shl90 = shl i64 %72, 21, !dbg !16483
  %xor91 = xor i64 %71, %shl90, !dbg !16483
  %neg92 = xor i64 %xor91, -1, !dbg !16483
  %xor93 = xor i64 0, %neg92, !dbg !16483
  %73 = load i64*, i64** %m, align 8, !dbg !16483, !tbaa !2286
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !16483, !ctir !1721
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !16483, !tbaa !2447
  %add95 = add i64 %xor93, %74, !dbg !16483
  store i64 %add95, i64* %a, align 8, !dbg !16483, !tbaa !2447
  %75 = load i64*, i64** %m, align 8, !dbg !16483, !tbaa !2286
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !16483, !ctir !1721
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !16483, !tbaa !2447
  store i64 %76, i64* %x88, align 8, !dbg !16483, !tbaa !2447
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16483, !tbaa !2286
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !16483, !ctir !1728
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !16483
  %78 = load i64, i64* %x88, align 8, !dbg !16483, !tbaa !2447
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !16483
  %79 = load i64, i64* %a, align 8, !dbg !16483, !tbaa !2447
  %add100 = add i64 %call99, %79, !dbg !16483
  %80 = load i64, i64* %b, align 8, !dbg !16483, !tbaa !2447
  %add101 = add i64 %add100, %80, !dbg !16483
  store i64 %add101, i64* %y89, align 8, !dbg !16483, !tbaa !2447
  %81 = load i64*, i64** %m, align 8, !dbg !16483, !tbaa !2286
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !16483, !ctir !1721
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !16483, !tbaa !2447
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16483, !tbaa !2286
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !16483, !ctir !1728
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !16483
  %83 = load i64, i64* %y89, align 8, !dbg !16483, !tbaa !2447
  %shr105 = lshr i64 %83, 8, !dbg !16483
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !16483
  %84 = load i64, i64* %x88, align 8, !dbg !16483, !tbaa !2447
  %add107 = add i64 %call106, %84, !dbg !16483
  %call108 = call i64 @just(i64 %add107), !dbg !16483
  store i64 %call108, i64* %b, align 8, !dbg !16483, !tbaa !2447
  %85 = load i64*, i64** %r, align 8, !dbg !16483, !tbaa !2286
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !16483, !ctir !1721
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !16483, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !16485, metadata !DIExpression()), !dbg !16487
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !16488, metadata !DIExpression()), !dbg !16487
  %86 = load i64, i64* %a, align 8, !dbg !16487, !tbaa !2447
  %87 = load i64, i64* %a, align 8, !dbg !16487, !tbaa !2447
  %call112 = call i64 @just(i64 %87), !dbg !16487
  %shr113 = lshr i64 %call112, 5, !dbg !16487
  %xor114 = xor i64 %86, %shr113, !dbg !16487
  %xor115 = xor i64 0, %xor114, !dbg !16487
  %88 = load i64*, i64** %m, align 8, !dbg !16487, !tbaa !2286
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !16487, !ctir !1721
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !16487, !tbaa !2447
  %add117 = add i64 %xor115, %89, !dbg !16487
  store i64 %add117, i64* %a, align 8, !dbg !16487, !tbaa !2447
  %90 = load i64*, i64** %m, align 8, !dbg !16487, !tbaa !2286
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !16487, !ctir !1721
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !16487, !tbaa !2447
  store i64 %91, i64* %x110, align 8, !dbg !16487, !tbaa !2447
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16487, !tbaa !2286
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !16487, !ctir !1728
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !16487
  %93 = load i64, i64* %x110, align 8, !dbg !16487, !tbaa !2447
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !16487
  %94 = load i64, i64* %a, align 8, !dbg !16487, !tbaa !2447
  %add122 = add i64 %call121, %94, !dbg !16487
  %95 = load i64, i64* %b, align 8, !dbg !16487, !tbaa !2447
  %add123 = add i64 %add122, %95, !dbg !16487
  store i64 %add123, i64* %y111, align 8, !dbg !16487, !tbaa !2447
  %96 = load i64*, i64** %m, align 8, !dbg !16487, !tbaa !2286
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !16487, !ctir !1721
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !16487, !tbaa !2447
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16487, !tbaa !2286
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !16487, !ctir !1728
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !16487
  %98 = load i64, i64* %y111, align 8, !dbg !16487, !tbaa !2447
  %shr127 = lshr i64 %98, 8, !dbg !16487
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !16487
  %99 = load i64, i64* %x110, align 8, !dbg !16487, !tbaa !2447
  %add129 = add i64 %call128, %99, !dbg !16487
  %call130 = call i64 @just(i64 %add129), !dbg !16487
  store i64 %call130, i64* %b, align 8, !dbg !16487, !tbaa !2447
  %100 = load i64*, i64** %r, align 8, !dbg !16487, !tbaa !2286
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !16487, !ctir !1721
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !16487, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !16489, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !16492, metadata !DIExpression()), !dbg !16491
  %101 = load i64, i64* %a, align 8, !dbg !16491, !tbaa !2447
  %102 = load i64, i64* %a, align 8, !dbg !16491, !tbaa !2447
  %shl134 = shl i64 %102, 12, !dbg !16491
  %xor135 = xor i64 %101, %shl134, !dbg !16491
  %xor136 = xor i64 0, %xor135, !dbg !16491
  %103 = load i64*, i64** %m, align 8, !dbg !16491, !tbaa !2286
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !16491, !ctir !1721
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !16491, !tbaa !2447
  %add138 = add i64 %xor136, %104, !dbg !16491
  store i64 %add138, i64* %a, align 8, !dbg !16491, !tbaa !2447
  %105 = load i64*, i64** %m, align 8, !dbg !16491, !tbaa !2286
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !16491, !ctir !1721
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !16491, !tbaa !2447
  store i64 %106, i64* %x132, align 8, !dbg !16491, !tbaa !2447
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16491, !tbaa !2286
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !16491, !ctir !1728
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !16491
  %108 = load i64, i64* %x132, align 8, !dbg !16491, !tbaa !2447
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !16491
  %109 = load i64, i64* %a, align 8, !dbg !16491, !tbaa !2447
  %add143 = add i64 %call142, %109, !dbg !16491
  %110 = load i64, i64* %b, align 8, !dbg !16491, !tbaa !2447
  %add144 = add i64 %add143, %110, !dbg !16491
  store i64 %add144, i64* %y133, align 8, !dbg !16491, !tbaa !2447
  %111 = load i64*, i64** %m, align 8, !dbg !16491, !tbaa !2286
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !16491, !ctir !1721
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !16491, !tbaa !2447
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16491, !tbaa !2286
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !16491, !ctir !1728
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !16491
  %113 = load i64, i64* %y133, align 8, !dbg !16491, !tbaa !2447
  %shr148 = lshr i64 %113, 8, !dbg !16491
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !16491
  %114 = load i64, i64* %x132, align 8, !dbg !16491, !tbaa !2447
  %add150 = add i64 %call149, %114, !dbg !16491
  %call151 = call i64 @just(i64 %add150), !dbg !16491
  store i64 %call151, i64* %b, align 8, !dbg !16491, !tbaa !2447
  %115 = load i64*, i64** %r, align 8, !dbg !16491, !tbaa !2286
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !16491, !ctir !1721
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !16491, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !16496, metadata !DIExpression()), !dbg !16495
  %116 = load i64, i64* %a, align 8, !dbg !16495, !tbaa !2447
  %117 = load i64, i64* %a, align 8, !dbg !16495, !tbaa !2447
  %call155 = call i64 @just(i64 %117), !dbg !16495
  %shr156 = lshr i64 %call155, 33, !dbg !16495
  %xor157 = xor i64 %116, %shr156, !dbg !16495
  %xor158 = xor i64 0, %xor157, !dbg !16495
  %118 = load i64*, i64** %m, align 8, !dbg !16495, !tbaa !2286
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !16495, !ctir !1721
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !16495, !tbaa !2447
  %add160 = add i64 %xor158, %119, !dbg !16495
  store i64 %add160, i64* %a, align 8, !dbg !16495, !tbaa !2447
  %120 = load i64*, i64** %m, align 8, !dbg !16495, !tbaa !2286
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !16495, !ctir !1721
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !16495, !tbaa !2447
  store i64 %121, i64* %x153, align 8, !dbg !16495, !tbaa !2447
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16495, !tbaa !2286
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !16495, !ctir !1728
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !16495
  %123 = load i64, i64* %x153, align 8, !dbg !16495, !tbaa !2447
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !16495
  %124 = load i64, i64* %a, align 8, !dbg !16495, !tbaa !2447
  %add165 = add i64 %call164, %124, !dbg !16495
  %125 = load i64, i64* %b, align 8, !dbg !16495, !tbaa !2447
  %add166 = add i64 %add165, %125, !dbg !16495
  store i64 %add166, i64* %y154, align 8, !dbg !16495, !tbaa !2447
  %126 = load i64*, i64** %m, align 8, !dbg !16495, !tbaa !2286
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !16495, !ctir !1721
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !16495, !tbaa !2447
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16495, !tbaa !2286
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !16495, !ctir !1728
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !16495
  %128 = load i64, i64* %y154, align 8, !dbg !16495, !tbaa !2447
  %shr170 = lshr i64 %128, 8, !dbg !16495
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !16495
  %129 = load i64, i64* %x153, align 8, !dbg !16495, !tbaa !2447
  %add172 = add i64 %call171, %129, !dbg !16495
  %call173 = call i64 @just(i64 %add172), !dbg !16495
  store i64 %call173, i64* %b, align 8, !dbg !16495, !tbaa !2447
  %130 = load i64*, i64** %r, align 8, !dbg !16495, !tbaa !2286
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !16495, !ctir !1721
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !16495, !tbaa !2447
  %131 = load i64*, i64** %r, align 8, !dbg !16497, !tbaa !2286
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !16497
  store i64* %add.ptr175, i64** %r, align 8, !dbg !16497, !tbaa !2286
  br label %do.cond176, !dbg !16498

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !16499, !tbaa !2286
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !16499
  store i64* %add.ptr177, i64** %m, align 8, !dbg !16499, !tbaa !2286
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16500, !tbaa !2286
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !16501, !ctir !1728
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !16500
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !16502
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !16503
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !16498, !llvm.loop !16504

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !16506, !tbaa !2447
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16507, !tbaa !2286
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !16508, !ctir !1728
  store i64 %134, i64* %a183, align 8, !dbg !16509, !tbaa !16434, !ctir !1685
  %136 = load i64, i64* %b, align 8, !dbg !16510, !tbaa !2447
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16511, !tbaa !2286
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !16512, !ctir !1728
  store i64 %136, i64* %b184, align 8, !dbg !16513, !tbaa !16439, !ctir !1685
  ret void, !dbg !16514
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !16515 !ctir !1736 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !339
  %base_p = alloca i8*, align 8, !ctir !88
  %word_p = alloca i8*, align 8, !ctir !339
  %p = alloca i64*, align 8, !ctir !1738
  store i64* %m, i64** %m.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !16516, metadata !DIExpression()), !dbg !16517
  store i64 %x, i64* %x.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !16518, metadata !DIExpression()), !dbg !16519
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !16520, metadata !DIExpression()), !dbg !16523
  %0 = load i64*, i64** %m.addr, align 8, !dbg !16524, !tbaa !2286
  %1 = bitcast i64* %0 to i8*, !dbg !16524
  store i8* %1, i8** %void_m, align 8, !dbg !16523, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !16525, metadata !DIExpression()), !dbg !16526
  %2 = load i8*, i8** %void_m, align 8, !dbg !16527, !tbaa !2286
  store i8* %2, i8** %base_p, align 8, !dbg !16526, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !16528, metadata !DIExpression()), !dbg !16529
  %3 = load i8*, i8** %base_p, align 8, !dbg !16530, !tbaa !2286
  %4 = load i64, i64* %x.addr, align 8, !dbg !16531, !tbaa !2447
  %and = and i64 %4, 2040, !dbg !16532
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !16533
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !16529, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %p, metadata !16534, metadata !DIExpression()), !dbg !16535
  %5 = load i8*, i8** %word_p, align 8, !dbg !16536, !tbaa !2286
  %6 = bitcast i8* %5 to i64*, !dbg !16536
  store i64* %6, i64** %p, align 8, !dbg !16535, !tbaa !2286
  %7 = load i64*, i64** %p, align 8, !dbg !16537, !tbaa !2286
  %8 = load i64, i64* %7, align 8, !dbg !16538, !tbaa !2447, !ctir !1739
  ret i64 %8, !dbg !16539
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !16540 !ctir !1740 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !1685
  store i64 %a, i64* %a.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !16541, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !16543, metadata !DIExpression()), !dbg !16544
  store i64 -1, i64* %desired_bits, align 8, !dbg !16544, !tbaa !2447
  %0 = load i64, i64* %a.addr, align 8, !dbg !16545, !tbaa !2447
  %1 = load i64, i64* %desired_bits, align 8, !dbg !16546, !tbaa !2447
  %and = and i64 %0, %1, !dbg !16547
  ret i64 %and, !dbg !16548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !16549 !ctir !1734 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !1685
  %b = alloca i64, align 8, !ctir !1685
  %c = alloca i64, align 8, !ctir !1685
  %d = alloca i64, align 8, !ctir !1685
  %e = alloca i64, align 8, !ctir !1685
  %f = alloca i64, align 8, !ctir !1685
  %g = alloca i64, align 8, !ctir !1685
  %h = alloca i64, align 8, !ctir !1685
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !16550, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.declare(metadata i64* %a, metadata !16552, metadata !DIExpression()), !dbg !16553
  store i64 7240739780546808700, i64* %a, align 8, !dbg !16553, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %b, metadata !16554, metadata !DIExpression()), !dbg !16555
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !16555, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %c, metadata !16556, metadata !DIExpression()), !dbg !16557
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !16557, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %d, metadata !16558, metadata !DIExpression()), !dbg !16559
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !16559, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %e, metadata !16560, metadata !DIExpression()), !dbg !16561
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !16561, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %f, metadata !16562, metadata !DIExpression()), !dbg !16563
  store i64 5259722845879046933, i64* %f, align 8, !dbg !16563, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %g, metadata !16564, metadata !DIExpression()), !dbg !16565
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !16565, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %h, metadata !16566, metadata !DIExpression()), !dbg !16567
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !16567, !tbaa !2447
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16568, metadata !DIExpression()), !dbg !16570
  store i32 0, i32* %i, align 4, !dbg !16571, !tbaa !2273
  br label %for.cond, !dbg !16571

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16573, !tbaa !2273
  %cmp = icmp slt i32 %0, 256, !dbg !16573
  br i1 %cmp, label %for.body, label %for.end, !dbg !16571

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !16575, !ctir !1728
  %2 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %idxprom = sext i32 %2 to i64, !dbg !16575
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !16575, !ctir !1684
  %3 = load i64, i64* %arrayidx, align 8, !dbg !16575, !tbaa !2447
  %4 = load i64, i64* %a, align 8, !dbg !16575, !tbaa !2447
  %add = add i64 %4, %3, !dbg !16575
  store i64 %add, i64* %a, align 8, !dbg !16575, !tbaa !2447
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !16575, !ctir !1728
  %6 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add2 = add nsw i32 %6, 1, !dbg !16575
  %idxprom3 = sext i32 %add2 to i64, !dbg !16575
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !16575, !ctir !1684
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !16575, !tbaa !2447
  %8 = load i64, i64* %b, align 8, !dbg !16575, !tbaa !2447
  %add5 = add i64 %8, %7, !dbg !16575
  store i64 %add5, i64* %b, align 8, !dbg !16575, !tbaa !2447
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !16575, !ctir !1728
  %10 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add7 = add nsw i32 %10, 2, !dbg !16575
  %idxprom8 = sext i32 %add7 to i64, !dbg !16575
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !16575, !ctir !1684
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !16575, !tbaa !2447
  %12 = load i64, i64* %c, align 8, !dbg !16575, !tbaa !2447
  %add10 = add i64 %12, %11, !dbg !16575
  store i64 %add10, i64* %c, align 8, !dbg !16575, !tbaa !2447
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !16575, !ctir !1728
  %14 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add12 = add nsw i32 %14, 3, !dbg !16575
  %idxprom13 = sext i32 %add12 to i64, !dbg !16575
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !16575, !ctir !1684
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !16575, !tbaa !2447
  %16 = load i64, i64* %d, align 8, !dbg !16575, !tbaa !2447
  %add15 = add i64 %16, %15, !dbg !16575
  store i64 %add15, i64* %d, align 8, !dbg !16575, !tbaa !2447
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !16575, !ctir !1728
  %18 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add17 = add nsw i32 %18, 4, !dbg !16575
  %idxprom18 = sext i32 %add17 to i64, !dbg !16575
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !16575, !ctir !1684
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !16575, !tbaa !2447
  %20 = load i64, i64* %e, align 8, !dbg !16575, !tbaa !2447
  %add20 = add i64 %20, %19, !dbg !16575
  store i64 %add20, i64* %e, align 8, !dbg !16575, !tbaa !2447
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !16575, !ctir !1728
  %22 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add22 = add nsw i32 %22, 5, !dbg !16575
  %idxprom23 = sext i32 %add22 to i64, !dbg !16575
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !16575, !ctir !1684
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !16575, !tbaa !2447
  %24 = load i64, i64* %f, align 8, !dbg !16575, !tbaa !2447
  %add25 = add i64 %24, %23, !dbg !16575
  store i64 %add25, i64* %f, align 8, !dbg !16575, !tbaa !2447
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !16575, !ctir !1728
  %26 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add27 = add nsw i32 %26, 6, !dbg !16575
  %idxprom28 = sext i32 %add27 to i64, !dbg !16575
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !16575, !ctir !1684
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !16575, !tbaa !2447
  %28 = load i64, i64* %g, align 8, !dbg !16575, !tbaa !2447
  %add30 = add i64 %28, %27, !dbg !16575
  store i64 %add30, i64* %g, align 8, !dbg !16575, !tbaa !2447
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !16575, !ctir !1728
  %30 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add32 = add nsw i32 %30, 7, !dbg !16575
  %idxprom33 = sext i32 %add32 to i64, !dbg !16575
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !16575, !ctir !1684
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !16575, !tbaa !2447
  %32 = load i64, i64* %h, align 8, !dbg !16575, !tbaa !2447
  %add35 = add i64 %32, %31, !dbg !16575
  store i64 %add35, i64* %h, align 8, !dbg !16575, !tbaa !2447
  %33 = load i64, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %34 = load i64, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %sub = sub i64 %34, %33, !dbg !16577
  store i64 %sub, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %35 = load i64, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %call = call i64 @just(i64 %35), !dbg !16577
  %shr = lshr i64 %call, 9, !dbg !16577
  %36 = load i64, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %xor = xor i64 %36, %shr, !dbg !16577
  store i64 %xor, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %37 = load i64, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %38 = load i64, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %add36 = add i64 %38, %37, !dbg !16577
  store i64 %add36, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %39 = load i64, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %40 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %sub37 = sub i64 %40, %39, !dbg !16577
  store i64 %sub37, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %41 = load i64, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %shl = shl i64 %41, 9, !dbg !16577
  %42 = load i64, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %xor38 = xor i64 %42, %shl, !dbg !16577
  store i64 %xor38, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %43 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %44 = load i64, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %add39 = add i64 %44, %43, !dbg !16577
  store i64 %add39, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %45 = load i64, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %46 = load i64, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %sub40 = sub i64 %46, %45, !dbg !16577
  store i64 %sub40, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %47 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %call41 = call i64 @just(i64 %47), !dbg !16577
  %shr42 = lshr i64 %call41, 23, !dbg !16577
  %48 = load i64, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %xor43 = xor i64 %48, %shr42, !dbg !16577
  store i64 %xor43, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %49 = load i64, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %50 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %add44 = add i64 %50, %49, !dbg !16577
  store i64 %add44, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %51 = load i64, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %52 = load i64, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %sub45 = sub i64 %52, %51, !dbg !16577
  store i64 %sub45, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %53 = load i64, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %shl46 = shl i64 %53, 15, !dbg !16577
  %54 = load i64, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %xor47 = xor i64 %54, %shl46, !dbg !16577
  store i64 %xor47, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %55 = load i64, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %56 = load i64, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %add48 = add i64 %56, %55, !dbg !16577
  store i64 %add48, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %57 = load i64, i64* %a, align 8, !dbg !16577, !tbaa !2447
  %58 = load i64, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %sub49 = sub i64 %58, %57, !dbg !16577
  store i64 %sub49, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %59 = load i64, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %call50 = call i64 @just(i64 %59), !dbg !16577
  %shr51 = lshr i64 %call50, 14, !dbg !16577
  %60 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %xor52 = xor i64 %60, %shr51, !dbg !16577
  store i64 %xor52, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %61 = load i64, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %62 = load i64, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %add53 = add i64 %62, %61, !dbg !16577
  store i64 %add53, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %63 = load i64, i64* %b, align 8, !dbg !16577, !tbaa !2447
  %64 = load i64, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %sub54 = sub i64 %64, %63, !dbg !16577
  store i64 %sub54, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %65 = load i64, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %shl55 = shl i64 %65, 20, !dbg !16577
  %66 = load i64, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %xor56 = xor i64 %66, %shl55, !dbg !16577
  store i64 %xor56, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %67 = load i64, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %68 = load i64, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %add57 = add i64 %68, %67, !dbg !16577
  store i64 %add57, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %69 = load i64, i64* %c, align 8, !dbg !16577, !tbaa !2447
  %70 = load i64, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %sub58 = sub i64 %70, %69, !dbg !16577
  store i64 %sub58, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %71 = load i64, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %call59 = call i64 @just(i64 %71), !dbg !16577
  %shr60 = lshr i64 %call59, 17, !dbg !16577
  %72 = load i64, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %xor61 = xor i64 %72, %shr60, !dbg !16577
  store i64 %xor61, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %73 = load i64, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %74 = load i64, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %add62 = add i64 %74, %73, !dbg !16577
  store i64 %add62, i64* %f, align 8, !dbg !16577, !tbaa !2447
  %75 = load i64, i64* %d, align 8, !dbg !16577, !tbaa !2447
  %76 = load i64, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %sub63 = sub i64 %76, %75, !dbg !16577
  store i64 %sub63, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %77 = load i64, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %shl64 = shl i64 %77, 14, !dbg !16577
  %78 = load i64, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %xor65 = xor i64 %78, %shl64, !dbg !16577
  store i64 %xor65, i64* %e, align 8, !dbg !16577, !tbaa !2447
  %79 = load i64, i64* %h, align 8, !dbg !16577, !tbaa !2447
  %80 = load i64, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %add66 = add i64 %80, %79, !dbg !16577
  store i64 %add66, i64* %g, align 8, !dbg !16577, !tbaa !2447
  %81 = load i64, i64* %a, align 8, !dbg !16575, !tbaa !2447
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !16575, !ctir !1728
  %83 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %idxprom68 = sext i32 %83 to i64, !dbg !16575
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !16575, !ctir !1684
  store i64 %81, i64* %arrayidx69, align 8, !dbg !16575, !tbaa !2447
  %84 = load i64, i64* %b, align 8, !dbg !16575, !tbaa !2447
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !16575, !ctir !1728
  %86 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add71 = add nsw i32 %86, 1, !dbg !16575
  %idxprom72 = sext i32 %add71 to i64, !dbg !16575
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !16575, !ctir !1684
  store i64 %84, i64* %arrayidx73, align 8, !dbg !16575, !tbaa !2447
  %87 = load i64, i64* %c, align 8, !dbg !16575, !tbaa !2447
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !16575, !ctir !1728
  %89 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add75 = add nsw i32 %89, 2, !dbg !16575
  %idxprom76 = sext i32 %add75 to i64, !dbg !16575
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !16575, !ctir !1684
  store i64 %87, i64* %arrayidx77, align 8, !dbg !16575, !tbaa !2447
  %90 = load i64, i64* %d, align 8, !dbg !16575, !tbaa !2447
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !16575, !ctir !1728
  %92 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add79 = add nsw i32 %92, 3, !dbg !16575
  %idxprom80 = sext i32 %add79 to i64, !dbg !16575
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !16575, !ctir !1684
  store i64 %90, i64* %arrayidx81, align 8, !dbg !16575, !tbaa !2447
  %93 = load i64, i64* %e, align 8, !dbg !16575, !tbaa !2447
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !16575, !ctir !1728
  %95 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add83 = add nsw i32 %95, 4, !dbg !16575
  %idxprom84 = sext i32 %add83 to i64, !dbg !16575
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !16575, !ctir !1684
  store i64 %93, i64* %arrayidx85, align 8, !dbg !16575, !tbaa !2447
  %96 = load i64, i64* %f, align 8, !dbg !16575, !tbaa !2447
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !16575, !ctir !1728
  %98 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add87 = add nsw i32 %98, 5, !dbg !16575
  %idxprom88 = sext i32 %add87 to i64, !dbg !16575
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !16575, !ctir !1684
  store i64 %96, i64* %arrayidx89, align 8, !dbg !16575, !tbaa !2447
  %99 = load i64, i64* %g, align 8, !dbg !16575, !tbaa !2447
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !16575, !ctir !1728
  %101 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add91 = add nsw i32 %101, 6, !dbg !16575
  %idxprom92 = sext i32 %add91 to i64, !dbg !16575
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !16575, !ctir !1684
  store i64 %99, i64* %arrayidx93, align 8, !dbg !16575, !tbaa !2447
  %102 = load i64, i64* %h, align 8, !dbg !16575, !tbaa !2447
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16575, !tbaa !2286
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !16575, !ctir !1728
  %104 = load i32, i32* %i, align 4, !dbg !16575, !tbaa !2273
  %add95 = add nsw i32 %104, 7, !dbg !16575
  %idxprom96 = sext i32 %add95 to i64, !dbg !16575
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !16575, !ctir !1684
  store i64 %102, i64* %arrayidx97, align 8, !dbg !16575, !tbaa !2447
  br label %for.inc, !dbg !16575

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !16573, !tbaa !2273
  %add98 = add nsw i32 %105, 8, !dbg !16573
  store i32 %add98, i32* %i, align 4, !dbg !16573, !tbaa !2273
  br label %for.cond, !dbg !16573, !llvm.loop !16579

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !16580, metadata !DIExpression()), !dbg !16582
  store i32 0, i32* %i99, align 4, !dbg !16583, !tbaa !2273
  br label %for.cond100, !dbg !16583

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !16585, !tbaa !2273
  %cmp101 = icmp slt i32 %106, 256, !dbg !16585
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !16583

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !16587, !ctir !1728
  %108 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %idxprom104 = sext i32 %108 to i64, !dbg !16587
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !16587, !ctir !1684
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !16587, !tbaa !2447
  %110 = load i64, i64* %a, align 8, !dbg !16587, !tbaa !2447
  %add106 = add i64 %110, %109, !dbg !16587
  store i64 %add106, i64* %a, align 8, !dbg !16587, !tbaa !2447
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !16587, !ctir !1728
  %112 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add108 = add nsw i32 %112, 1, !dbg !16587
  %idxprom109 = sext i32 %add108 to i64, !dbg !16587
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !16587, !ctir !1684
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !16587, !tbaa !2447
  %114 = load i64, i64* %b, align 8, !dbg !16587, !tbaa !2447
  %add111 = add i64 %114, %113, !dbg !16587
  store i64 %add111, i64* %b, align 8, !dbg !16587, !tbaa !2447
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !16587, !ctir !1728
  %116 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add113 = add nsw i32 %116, 2, !dbg !16587
  %idxprom114 = sext i32 %add113 to i64, !dbg !16587
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !16587, !ctir !1684
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !16587, !tbaa !2447
  %118 = load i64, i64* %c, align 8, !dbg !16587, !tbaa !2447
  %add116 = add i64 %118, %117, !dbg !16587
  store i64 %add116, i64* %c, align 8, !dbg !16587, !tbaa !2447
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !16587, !ctir !1728
  %120 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add118 = add nsw i32 %120, 3, !dbg !16587
  %idxprom119 = sext i32 %add118 to i64, !dbg !16587
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !16587, !ctir !1684
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !16587, !tbaa !2447
  %122 = load i64, i64* %d, align 8, !dbg !16587, !tbaa !2447
  %add121 = add i64 %122, %121, !dbg !16587
  store i64 %add121, i64* %d, align 8, !dbg !16587, !tbaa !2447
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !16587, !ctir !1728
  %124 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add123 = add nsw i32 %124, 4, !dbg !16587
  %idxprom124 = sext i32 %add123 to i64, !dbg !16587
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !16587, !ctir !1684
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !16587, !tbaa !2447
  %126 = load i64, i64* %e, align 8, !dbg !16587, !tbaa !2447
  %add126 = add i64 %126, %125, !dbg !16587
  store i64 %add126, i64* %e, align 8, !dbg !16587, !tbaa !2447
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !16587, !ctir !1728
  %128 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add128 = add nsw i32 %128, 5, !dbg !16587
  %idxprom129 = sext i32 %add128 to i64, !dbg !16587
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !16587, !ctir !1684
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !16587, !tbaa !2447
  %130 = load i64, i64* %f, align 8, !dbg !16587, !tbaa !2447
  %add131 = add i64 %130, %129, !dbg !16587
  store i64 %add131, i64* %f, align 8, !dbg !16587, !tbaa !2447
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !16587, !ctir !1728
  %132 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add133 = add nsw i32 %132, 6, !dbg !16587
  %idxprom134 = sext i32 %add133 to i64, !dbg !16587
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !16587, !ctir !1684
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !16587, !tbaa !2447
  %134 = load i64, i64* %g, align 8, !dbg !16587, !tbaa !2447
  %add136 = add i64 %134, %133, !dbg !16587
  store i64 %add136, i64* %g, align 8, !dbg !16587, !tbaa !2447
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !16587, !ctir !1728
  %136 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add138 = add nsw i32 %136, 7, !dbg !16587
  %idxprom139 = sext i32 %add138 to i64, !dbg !16587
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !16587, !ctir !1684
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !16587, !tbaa !2447
  %138 = load i64, i64* %h, align 8, !dbg !16587, !tbaa !2447
  %add141 = add i64 %138, %137, !dbg !16587
  store i64 %add141, i64* %h, align 8, !dbg !16587, !tbaa !2447
  %139 = load i64, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %140 = load i64, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %sub142 = sub i64 %140, %139, !dbg !16589
  store i64 %sub142, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %141 = load i64, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %call143 = call i64 @just(i64 %141), !dbg !16589
  %shr144 = lshr i64 %call143, 9, !dbg !16589
  %142 = load i64, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %xor145 = xor i64 %142, %shr144, !dbg !16589
  store i64 %xor145, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %143 = load i64, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %144 = load i64, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %add146 = add i64 %144, %143, !dbg !16589
  store i64 %add146, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %145 = load i64, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %146 = load i64, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %sub147 = sub i64 %146, %145, !dbg !16589
  store i64 %sub147, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %147 = load i64, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %shl148 = shl i64 %147, 9, !dbg !16589
  %148 = load i64, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %xor149 = xor i64 %148, %shl148, !dbg !16589
  store i64 %xor149, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %149 = load i64, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %150 = load i64, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %add150 = add i64 %150, %149, !dbg !16589
  store i64 %add150, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %151 = load i64, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %152 = load i64, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %sub151 = sub i64 %152, %151, !dbg !16589
  store i64 %sub151, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %153 = load i64, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %call152 = call i64 @just(i64 %153), !dbg !16589
  %shr153 = lshr i64 %call152, 23, !dbg !16589
  %154 = load i64, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %xor154 = xor i64 %154, %shr153, !dbg !16589
  store i64 %xor154, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %155 = load i64, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %156 = load i64, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %add155 = add i64 %156, %155, !dbg !16589
  store i64 %add155, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %157 = load i64, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %158 = load i64, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %sub156 = sub i64 %158, %157, !dbg !16589
  store i64 %sub156, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %159 = load i64, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %shl157 = shl i64 %159, 15, !dbg !16589
  %160 = load i64, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %xor158 = xor i64 %160, %shl157, !dbg !16589
  store i64 %xor158, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %161 = load i64, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %162 = load i64, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %add159 = add i64 %162, %161, !dbg !16589
  store i64 %add159, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %163 = load i64, i64* %a, align 8, !dbg !16589, !tbaa !2447
  %164 = load i64, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %sub160 = sub i64 %164, %163, !dbg !16589
  store i64 %sub160, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %165 = load i64, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %call161 = call i64 @just(i64 %165), !dbg !16589
  %shr162 = lshr i64 %call161, 14, !dbg !16589
  %166 = load i64, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %xor163 = xor i64 %166, %shr162, !dbg !16589
  store i64 %xor163, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %167 = load i64, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %168 = load i64, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %add164 = add i64 %168, %167, !dbg !16589
  store i64 %add164, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %169 = load i64, i64* %b, align 8, !dbg !16589, !tbaa !2447
  %170 = load i64, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %sub165 = sub i64 %170, %169, !dbg !16589
  store i64 %sub165, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %171 = load i64, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %shl166 = shl i64 %171, 20, !dbg !16589
  %172 = load i64, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %xor167 = xor i64 %172, %shl166, !dbg !16589
  store i64 %xor167, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %173 = load i64, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %174 = load i64, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %add168 = add i64 %174, %173, !dbg !16589
  store i64 %add168, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %175 = load i64, i64* %c, align 8, !dbg !16589, !tbaa !2447
  %176 = load i64, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %sub169 = sub i64 %176, %175, !dbg !16589
  store i64 %sub169, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %177 = load i64, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %call170 = call i64 @just(i64 %177), !dbg !16589
  %shr171 = lshr i64 %call170, 17, !dbg !16589
  %178 = load i64, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %xor172 = xor i64 %178, %shr171, !dbg !16589
  store i64 %xor172, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %179 = load i64, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %180 = load i64, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %add173 = add i64 %180, %179, !dbg !16589
  store i64 %add173, i64* %f, align 8, !dbg !16589, !tbaa !2447
  %181 = load i64, i64* %d, align 8, !dbg !16589, !tbaa !2447
  %182 = load i64, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %sub174 = sub i64 %182, %181, !dbg !16589
  store i64 %sub174, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %183 = load i64, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %shl175 = shl i64 %183, 14, !dbg !16589
  %184 = load i64, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %xor176 = xor i64 %184, %shl175, !dbg !16589
  store i64 %xor176, i64* %e, align 8, !dbg !16589, !tbaa !2447
  %185 = load i64, i64* %h, align 8, !dbg !16589, !tbaa !2447
  %186 = load i64, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %add177 = add i64 %186, %185, !dbg !16589
  store i64 %add177, i64* %g, align 8, !dbg !16589, !tbaa !2447
  %187 = load i64, i64* %a, align 8, !dbg !16587, !tbaa !2447
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !16587, !ctir !1728
  %189 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %idxprom179 = sext i32 %189 to i64, !dbg !16587
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !16587, !ctir !1684
  store i64 %187, i64* %arrayidx180, align 8, !dbg !16587, !tbaa !2447
  %190 = load i64, i64* %b, align 8, !dbg !16587, !tbaa !2447
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !16587, !ctir !1728
  %192 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add182 = add nsw i32 %192, 1, !dbg !16587
  %idxprom183 = sext i32 %add182 to i64, !dbg !16587
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !16587, !ctir !1684
  store i64 %190, i64* %arrayidx184, align 8, !dbg !16587, !tbaa !2447
  %193 = load i64, i64* %c, align 8, !dbg !16587, !tbaa !2447
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !16587, !ctir !1728
  %195 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add186 = add nsw i32 %195, 2, !dbg !16587
  %idxprom187 = sext i32 %add186 to i64, !dbg !16587
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !16587, !ctir !1684
  store i64 %193, i64* %arrayidx188, align 8, !dbg !16587, !tbaa !2447
  %196 = load i64, i64* %d, align 8, !dbg !16587, !tbaa !2447
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !16587, !ctir !1728
  %198 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add190 = add nsw i32 %198, 3, !dbg !16587
  %idxprom191 = sext i32 %add190 to i64, !dbg !16587
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !16587, !ctir !1684
  store i64 %196, i64* %arrayidx192, align 8, !dbg !16587, !tbaa !2447
  %199 = load i64, i64* %e, align 8, !dbg !16587, !tbaa !2447
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !16587, !ctir !1728
  %201 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add194 = add nsw i32 %201, 4, !dbg !16587
  %idxprom195 = sext i32 %add194 to i64, !dbg !16587
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !16587, !ctir !1684
  store i64 %199, i64* %arrayidx196, align 8, !dbg !16587, !tbaa !2447
  %202 = load i64, i64* %f, align 8, !dbg !16587, !tbaa !2447
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !16587, !ctir !1728
  %204 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add198 = add nsw i32 %204, 5, !dbg !16587
  %idxprom199 = sext i32 %add198 to i64, !dbg !16587
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !16587, !ctir !1684
  store i64 %202, i64* %arrayidx200, align 8, !dbg !16587, !tbaa !2447
  %205 = load i64, i64* %g, align 8, !dbg !16587, !tbaa !2447
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !16587, !ctir !1728
  %207 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add202 = add nsw i32 %207, 6, !dbg !16587
  %idxprom203 = sext i32 %add202 to i64, !dbg !16587
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !16587, !ctir !1684
  store i64 %205, i64* %arrayidx204, align 8, !dbg !16587, !tbaa !2447
  %208 = load i64, i64* %h, align 8, !dbg !16587, !tbaa !2447
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16587, !tbaa !2286
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !16587, !ctir !1728
  %210 = load i32, i32* %i99, align 4, !dbg !16587, !tbaa !2273
  %add206 = add nsw i32 %210, 7, !dbg !16587
  %idxprom207 = sext i32 %add206 to i64, !dbg !16587
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !16587, !ctir !1684
  store i64 %208, i64* %arrayidx208, align 8, !dbg !16587, !tbaa !2447
  br label %for.inc209, !dbg !16587

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !16585, !tbaa !2273
  %add210 = add nsw i32 %211, 8, !dbg !16585
  store i32 %add210, i32* %i99, align 4, !dbg !16585, !tbaa !2273
  br label %for.cond100, !dbg !16585, !llvm.loop !16591

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16592, !tbaa !2286
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !16593, !ctir !1728
  store i64 0, i64* %c212, align 8, !dbg !16594, !tbaa !16443, !ctir !1685
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16595, !tbaa !2286
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !16596, !ctir !1728
  store i64 0, i64* %b213, align 8, !dbg !16597, !tbaa !16439, !ctir !1685
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !16598, !tbaa !2286
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !16599, !ctir !1728
  store i64 0, i64* %a214, align 8, !dbg !16600, !tbaa !16434, !ctir !1685
  ret void, !dbg !16601
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readtokens0_init(%struct.Tokens* %t) #4 !dbg !16602 !ctir !1745 {
entry:
  %t.addr = alloca %struct.Tokens*, align 8
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16604, metadata !DIExpression()), !dbg !16605
  %0 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16606, !tbaa !2286
  %n_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %0, i32 0, i32 0, !dbg !16607, !ctir !1748
  store i64 0, i64* %n_tok, align 8, !dbg !16608, !tbaa !3079, !ctir !55
  %1 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16609, !tbaa !2286
  %tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %1, i32 0, i32 1, !dbg !16610, !ctir !1748
  store i8** null, i8*** %tok, align 8, !dbg !16611, !tbaa !3088, !ctir !92
  %2 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16612, !tbaa !2286
  %tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %2, i32 0, i32 2, !dbg !16613, !ctir !1748
  store i64* null, i64** %tok_len, align 8, !dbg !16614, !tbaa !16615, !ctir !360
  %3 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16616, !tbaa !2286
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %3, i32 0, i32 3, !dbg !16616, !ctir !1748
  %call = call i32 @_obstack_begin(%struct.obstack* %o_data, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !16616
  %4 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16617, !tbaa !2286
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %4, i32 0, i32 4, !dbg !16617, !ctir !1748
  %call1 = call i32 @_obstack_begin(%struct.obstack* %o_tok, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !16617
  %5 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16618, !tbaa !2286
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %5, i32 0, i32 5, !dbg !16618, !ctir !1748
  %call2 = call i32 @_obstack_begin(%struct.obstack* %o_tok_len, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !16618
  ret void, !dbg !16619
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readtokens0_free(%struct.Tokens* %t) #4 !dbg !16620 !ctir !1745 {
entry:
  %t.addr = alloca %struct.Tokens*, align 8
  %__o = alloca %struct.obstack*, align 8, !ctir !1790
  %__obj = alloca i8*, align 8, !ctir !53
  %__o2 = alloca %struct.obstack*, align 8, !ctir !1790
  %__obj3 = alloca i8*, align 8, !ctir !53
  %__o14 = alloca %struct.obstack*, align 8, !ctir !1790
  %__obj15 = alloca i8*, align 8, !ctir !53
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16621, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !16623, metadata !DIExpression()), !dbg !16625
  %0 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16625, !tbaa !2286
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %0, i32 0, i32 3, !dbg !16625, !ctir !1748
  store %struct.obstack* %o_data, %struct.obstack** %__o, align 8, !dbg !16625, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__obj, metadata !16626, metadata !DIExpression()), !dbg !16625
  store i8* null, i8** %__obj, align 8, !dbg !16625, !tbaa !2286
  %1 = load i8*, i8** %__obj, align 8, !dbg !16627, !tbaa !2286
  %2 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16627, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 1, !dbg !16627, !ctir !1755
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !16627, !tbaa !16629, !ctir !1759
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !16627
  %cmp = icmp ugt i8* %1, %4, !dbg !16627
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !16627

land.lhs.true:                                    ; preds = %entry
  %5 = load i8*, i8** %__obj, align 8, !dbg !16627, !tbaa !2286
  %6 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16627, !tbaa !2286
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 4, !dbg !16627, !ctir !1755
  %7 = load i8*, i8** %chunk_limit, align 8, !dbg !16627, !tbaa !16630, !ctir !9
  %cmp1 = icmp ult i8* %5, %7, !dbg !16627
  br i1 %cmp1, label %if.then, label %if.else, !dbg !16625

if.then:                                          ; preds = %land.lhs.true
  %8 = load i8*, i8** %__obj, align 8, !dbg !16627, !tbaa !2286
  %9 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16627, !tbaa !2286
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 2, !dbg !16627, !ctir !1755
  store i8* %8, i8** %object_base, align 8, !dbg !16627, !tbaa !16631, !ctir !9
  %10 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16627, !tbaa !2286
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3, !dbg !16627, !ctir !1755
  store i8* %8, i8** %next_free, align 8, !dbg !16627, !tbaa !16632, !ctir !9
  br label %if.end, !dbg !16627

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16627, !tbaa !2286
  %12 = load i8*, i8** %__obj, align 8, !dbg !16627, !tbaa !2286
  call void @_obstack_free(%struct.obstack* %11, i8* %12), !dbg !16627
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o2, metadata !16633, metadata !DIExpression()), !dbg !16635
  %13 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16635, !tbaa !2286
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %13, i32 0, i32 4, !dbg !16635, !ctir !1748
  store %struct.obstack* %o_tok, %struct.obstack** %__o2, align 8, !dbg !16635, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__obj3, metadata !16636, metadata !DIExpression()), !dbg !16635
  store i8* null, i8** %__obj3, align 8, !dbg !16635, !tbaa !2286
  %14 = load i8*, i8** %__obj3, align 8, !dbg !16637, !tbaa !2286
  %15 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16637, !tbaa !2286
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 1, !dbg !16637, !ctir !1755
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk4, align 8, !dbg !16637, !tbaa !16629, !ctir !1759
  %17 = bitcast %struct._obstack_chunk* %16 to i8*, !dbg !16637
  %cmp5 = icmp ugt i8* %14, %17, !dbg !16637
  br i1 %cmp5, label %land.lhs.true6, label %if.else12, !dbg !16637

land.lhs.true6:                                   ; preds = %if.end
  %18 = load i8*, i8** %__obj3, align 8, !dbg !16637, !tbaa !2286
  %19 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16637, !tbaa !2286
  %chunk_limit7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 4, !dbg !16637, !ctir !1755
  %20 = load i8*, i8** %chunk_limit7, align 8, !dbg !16637, !tbaa !16630, !ctir !9
  %cmp8 = icmp ult i8* %18, %20, !dbg !16637
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !16635

if.then9:                                         ; preds = %land.lhs.true6
  %21 = load i8*, i8** %__obj3, align 8, !dbg !16637, !tbaa !2286
  %22 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16637, !tbaa !2286
  %object_base10 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 2, !dbg !16637, !ctir !1755
  store i8* %21, i8** %object_base10, align 8, !dbg !16637, !tbaa !16631, !ctir !9
  %23 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16637, !tbaa !2286
  %next_free11 = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 3, !dbg !16637, !ctir !1755
  store i8* %21, i8** %next_free11, align 8, !dbg !16637, !tbaa !16632, !ctir !9
  br label %if.end13, !dbg !16637

if.else12:                                        ; preds = %land.lhs.true6, %if.end
  %24 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16637, !tbaa !2286
  %25 = load i8*, i8** %__obj3, align 8, !dbg !16637, !tbaa !2286
  call void @_obstack_free(%struct.obstack* %24, i8* %25), !dbg !16637
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then9
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o14, metadata !16639, metadata !DIExpression()), !dbg !16641
  %26 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16641, !tbaa !2286
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %26, i32 0, i32 5, !dbg !16641, !ctir !1748
  store %struct.obstack* %o_tok_len, %struct.obstack** %__o14, align 8, !dbg !16641, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__obj15, metadata !16642, metadata !DIExpression()), !dbg !16641
  store i8* null, i8** %__obj15, align 8, !dbg !16641, !tbaa !2286
  %27 = load i8*, i8** %__obj15, align 8, !dbg !16643, !tbaa !2286
  %28 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16643, !tbaa !2286
  %chunk16 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1, !dbg !16643, !ctir !1755
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk16, align 8, !dbg !16643, !tbaa !16629, !ctir !1759
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !16643
  %cmp17 = icmp ugt i8* %27, %30, !dbg !16643
  br i1 %cmp17, label %land.lhs.true18, label %if.else24, !dbg !16643

land.lhs.true18:                                  ; preds = %if.end13
  %31 = load i8*, i8** %__obj15, align 8, !dbg !16643, !tbaa !2286
  %32 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16643, !tbaa !2286
  %chunk_limit19 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 4, !dbg !16643, !ctir !1755
  %33 = load i8*, i8** %chunk_limit19, align 8, !dbg !16643, !tbaa !16630, !ctir !9
  %cmp20 = icmp ult i8* %31, %33, !dbg !16643
  br i1 %cmp20, label %if.then21, label %if.else24, !dbg !16641

if.then21:                                        ; preds = %land.lhs.true18
  %34 = load i8*, i8** %__obj15, align 8, !dbg !16643, !tbaa !2286
  %35 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16643, !tbaa !2286
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 2, !dbg !16643, !ctir !1755
  store i8* %34, i8** %object_base22, align 8, !dbg !16643, !tbaa !16631, !ctir !9
  %36 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16643, !tbaa !2286
  %next_free23 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 3, !dbg !16643, !ctir !1755
  store i8* %34, i8** %next_free23, align 8, !dbg !16643, !tbaa !16632, !ctir !9
  br label %if.end25, !dbg !16643

if.else24:                                        ; preds = %land.lhs.true18, %if.end13
  %37 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16643, !tbaa !2286
  %38 = load i8*, i8** %__obj15, align 8, !dbg !16643, !tbaa !2286
  call void @_obstack_free(%struct.obstack* %37, i8* %38), !dbg !16643
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then21
  ret void, !dbg !16645
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @readtokens0(%struct._IO_FILE* %in, %struct.Tokens* %t) #4 !dbg !16646 !ctir !1791 {
entry:
  %in.addr = alloca %struct._IO_FILE*, align 8
  %t.addr = alloca %struct.Tokens*, align 8
  %c = alloca i32, align 4, !ctir !7
  %len = alloca i64, align 8, !ctir !55
  %__o = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp = alloca i64, align 8
  %__o2 = alloca %struct.obstack*, align 8, !ctir !1790
  %__o1 = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp4 = alloca i64, align 8
  %__o14 = alloca %struct.obstack*, align 8, !ctir !1790
  %__o116 = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp17 = alloca i64, align 8
  %__o32 = alloca %struct.obstack*, align 8, !ctir !1790
  %__o133 = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp34 = alloca i64, align 8
  %__o144 = alloca %struct.obstack*, align 8, !ctir !1790
  %__p1 = alloca i8*, align 8, !ctir !53
  %__o147 = alloca %struct.obstack*, align 8, !ctir !1790
  %__value = alloca i8*, align 8, !ctir !53
  %tmp78 = alloca i8*, align 8
  %__o179 = alloca %struct.obstack*, align 8, !ctir !1790
  %__value80 = alloca i8*, align 8, !ctir !53
  %tmp119 = alloca i8*, align 8
  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in.addr, metadata !16647, metadata !DIExpression()), !dbg !16648
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16649, metadata !DIExpression()), !dbg !16650
  br label %while.body, !dbg !16651

while.body:                                       ; preds = %entry, %if.end31
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16652, metadata !DIExpression()), !dbg !16654
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !16655, !tbaa !2286
  %call = call i32 @fgetc(%struct._IO_FILE* %0), !dbg !16656
  store i32 %call, i32* %c, align 4, !dbg !16654, !tbaa !2273
  %1 = load i32, i32* %c, align 4, !dbg !16657, !tbaa !2273
  %cmp = icmp eq i32 %1, -1, !dbg !16659
  br i1 %cmp, label %if.then, label %if.end13, !dbg !16660

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16661, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !16664, metadata !DIExpression()), !dbg !16666
  %2 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16666, !tbaa !2286
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %2, i32 0, i32 3, !dbg !16666, !ctir !1748
  store %struct.obstack* %o_data, %struct.obstack** %__o, align 8, !dbg !16666, !tbaa !2286
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16666, !tbaa !2286
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 3, !dbg !16666, !ctir !1828
  %4 = load i8*, i8** %next_free, align 8, !dbg !16666, !tbaa !16632, !ctir !9
  %5 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16666, !tbaa !2286
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 2, !dbg !16666, !ctir !1828
  %6 = load i8*, i8** %object_base, align 8, !dbg !16666, !tbaa !16631, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !16666
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !16666
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16666
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !16666, !tbaa !2447
  %7 = load i64, i64* %tmp, align 8, !dbg !16666, !tbaa !2447
  store i64 %7, i64* %len, align 8, !dbg !16663, !tbaa !2447
  %8 = load i64, i64* %len, align 8, !dbg !16667, !tbaa !2447
  %tobool = icmp ne i64 %8, 0, !dbg !16667
  br i1 %tobool, label %if.then1, label %if.end12, !dbg !16669

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o2, metadata !16670, metadata !DIExpression()), !dbg !16673
  %9 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16673, !tbaa !2286
  %o_data3 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %9, i32 0, i32 3, !dbg !16673, !ctir !1748
  store %struct.obstack* %o_data3, %struct.obstack** %__o2, align 8, !dbg !16673, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !16674, metadata !DIExpression()), !dbg !16677
  %10 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16677, !tbaa !2286
  store %struct.obstack* %10, %struct.obstack** %__o1, align 8, !dbg !16677, !tbaa !2286
  %11 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16677, !tbaa !2286
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 4, !dbg !16677, !ctir !1828
  %12 = load i8*, i8** %chunk_limit, align 8, !dbg !16677, !tbaa !16630, !ctir !9
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16677, !tbaa !2286
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 3, !dbg !16677, !ctir !1828
  %14 = load i8*, i8** %next_free5, align 8, !dbg !16677, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast6 = ptrtoint i8* %12 to i64, !dbg !16677
  %sub.ptr.rhs.cast7 = ptrtoint i8* %14 to i64, !dbg !16677
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7, !dbg !16677
  store i64 %sub.ptr.sub8, i64* %tmp4, align 8, !dbg !16677, !tbaa !2447
  %15 = load i64, i64* %tmp4, align 8, !dbg !16677, !tbaa !2447
  %cmp9 = icmp ult i64 %15, 1, !dbg !16678
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !16673

if.then10:                                        ; preds = %if.then1
  %16 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16678, !tbaa !2286
  call void @_obstack_newchunk(%struct.obstack* %16, i64 1), !dbg !16678
  br label %if.end, !dbg !16678

if.end:                                           ; preds = %if.then10, %if.then1
  %17 = load %struct.obstack*, %struct.obstack** %__o2, align 8, !dbg !16673, !tbaa !2286
  %next_free11 = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 3, !dbg !16673, !ctir !1755
  %18 = load i8*, i8** %next_free11, align 8, !dbg !16673, !tbaa !16632, !ctir !9
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1, !dbg !16673
  store i8* %incdec.ptr, i8** %next_free11, align 8, !dbg !16673, !tbaa !16632, !ctir !9
  store i8 0, i8* %18, align 1, !dbg !16673, !tbaa !2438, !ctir !10
  %19 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16679, !tbaa !2286
  call void @save_token(%struct.Tokens* %19), !dbg !16680
  br label %if.end12, !dbg !16681

if.end12:                                         ; preds = %if.end, %if.then
  br label %while.end, !dbg !16682

if.end13:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o14, metadata !16683, metadata !DIExpression()), !dbg !16685
  %20 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16685, !tbaa !2286
  %o_data15 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %20, i32 0, i32 3, !dbg !16685, !ctir !1748
  store %struct.obstack* %o_data15, %struct.obstack** %__o14, align 8, !dbg !16685, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o116, metadata !16686, metadata !DIExpression()), !dbg !16689
  %21 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16689, !tbaa !2286
  store %struct.obstack* %21, %struct.obstack** %__o116, align 8, !dbg !16689, !tbaa !2286
  %22 = load %struct.obstack*, %struct.obstack** %__o116, align 8, !dbg !16689, !tbaa !2286
  %chunk_limit18 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 4, !dbg !16689, !ctir !1828
  %23 = load i8*, i8** %chunk_limit18, align 8, !dbg !16689, !tbaa !16630, !ctir !9
  %24 = load %struct.obstack*, %struct.obstack** %__o116, align 8, !dbg !16689, !tbaa !2286
  %next_free19 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 3, !dbg !16689, !ctir !1828
  %25 = load i8*, i8** %next_free19, align 8, !dbg !16689, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast20 = ptrtoint i8* %23 to i64, !dbg !16689
  %sub.ptr.rhs.cast21 = ptrtoint i8* %25 to i64, !dbg !16689
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !16689
  store i64 %sub.ptr.sub22, i64* %tmp17, align 8, !dbg !16689, !tbaa !2447
  %26 = load i64, i64* %tmp17, align 8, !dbg !16689, !tbaa !2447
  %cmp23 = icmp ult i64 %26, 1, !dbg !16690
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !16685

if.then24:                                        ; preds = %if.end13
  %27 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16690, !tbaa !2286
  call void @_obstack_newchunk(%struct.obstack* %27, i64 1), !dbg !16690
  br label %if.end25, !dbg !16690

if.end25:                                         ; preds = %if.then24, %if.end13
  %28 = load i32, i32* %c, align 4, !dbg !16685, !tbaa !2273
  %conv = trunc i32 %28 to i8, !dbg !16685
  %29 = load %struct.obstack*, %struct.obstack** %__o14, align 8, !dbg !16685, !tbaa !2286
  %next_free26 = getelementptr inbounds %struct.obstack, %struct.obstack* %29, i32 0, i32 3, !dbg !16685, !ctir !1755
  %30 = load i8*, i8** %next_free26, align 8, !dbg !16685, !tbaa !16632, !ctir !9
  %incdec.ptr27 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !16685
  store i8* %incdec.ptr27, i8** %next_free26, align 8, !dbg !16685, !tbaa !16632, !ctir !9
  store i8 %conv, i8* %30, align 1, !dbg !16685, !tbaa !2438, !ctir !10
  %31 = load i32, i32* %c, align 4, !dbg !16691, !tbaa !2273
  %cmp28 = icmp eq i32 %31, 0, !dbg !16693
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !16694

if.then30:                                        ; preds = %if.end25
  %32 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16695, !tbaa !2286
  call void @save_token(%struct.Tokens* %32), !dbg !16696
  br label %if.end31, !dbg !16696

if.end31:                                         ; preds = %if.then30, %if.end25
  br label %while.body, !dbg !16651, !llvm.loop !16697

while.end:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o32, metadata !16699, metadata !DIExpression()), !dbg !16701
  %33 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16701, !tbaa !2286
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %33, i32 0, i32 4, !dbg !16701, !ctir !1748
  store %struct.obstack* %o_tok, %struct.obstack** %__o32, align 8, !dbg !16701, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o133, metadata !16702, metadata !DIExpression()), !dbg !16705
  %34 = load %struct.obstack*, %struct.obstack** %__o32, align 8, !dbg !16705, !tbaa !2286
  store %struct.obstack* %34, %struct.obstack** %__o133, align 8, !dbg !16705, !tbaa !2286
  %35 = load %struct.obstack*, %struct.obstack** %__o133, align 8, !dbg !16705, !tbaa !2286
  %chunk_limit35 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 4, !dbg !16705, !ctir !1828
  %36 = load i8*, i8** %chunk_limit35, align 8, !dbg !16705, !tbaa !16630, !ctir !9
  %37 = load %struct.obstack*, %struct.obstack** %__o133, align 8, !dbg !16705, !tbaa !2286
  %next_free36 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 3, !dbg !16705, !ctir !1828
  %38 = load i8*, i8** %next_free36, align 8, !dbg !16705, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast37 = ptrtoint i8* %36 to i64, !dbg !16705
  %sub.ptr.rhs.cast38 = ptrtoint i8* %38 to i64, !dbg !16705
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38, !dbg !16705
  store i64 %sub.ptr.sub39, i64* %tmp34, align 8, !dbg !16705, !tbaa !2447
  %39 = load i64, i64* %tmp34, align 8, !dbg !16705, !tbaa !2447
  %cmp40 = icmp ult i64 %39, 8, !dbg !16706
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16701

if.then42:                                        ; preds = %while.end
  %40 = load %struct.obstack*, %struct.obstack** %__o32, align 8, !dbg !16706, !tbaa !2286
  call void @_obstack_newchunk(%struct.obstack* %40, i64 8), !dbg !16706
  br label %if.end43, !dbg !16706

if.end43:                                         ; preds = %if.then42, %while.end
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o144, metadata !16707, metadata !DIExpression()), !dbg !16709
  %41 = load %struct.obstack*, %struct.obstack** %__o32, align 8, !dbg !16709, !tbaa !2286
  store %struct.obstack* %41, %struct.obstack** %__o144, align 8, !dbg !16709, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__p1, metadata !16710, metadata !DIExpression()), !dbg !16709
  %42 = load %struct.obstack*, %struct.obstack** %__o144, align 8, !dbg !16709, !tbaa !2286
  %next_free45 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 3, !dbg !16709, !ctir !1755
  %43 = load i8*, i8** %next_free45, align 8, !dbg !16709, !tbaa !16632, !ctir !9
  store i8* %43, i8** %__p1, align 8, !dbg !16709, !tbaa !2286
  %44 = load i8*, i8** %__p1, align 8, !dbg !16709, !tbaa !2286
  %45 = bitcast i8* %44 to i8**, !dbg !16709
  store i8* null, i8** %45, align 8, !dbg !16709, !tbaa !2286, !ctir !339
  %46 = load %struct.obstack*, %struct.obstack** %__o144, align 8, !dbg !16709, !tbaa !2286
  %next_free46 = getelementptr inbounds %struct.obstack, %struct.obstack* %46, i32 0, i32 3, !dbg !16709, !ctir !1755
  %47 = load i8*, i8** %next_free46, align 8, !dbg !16709, !tbaa !16632, !ctir !9
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 8, !dbg !16709
  store i8* %add.ptr, i8** %next_free46, align 8, !dbg !16709, !tbaa !16632, !ctir !9
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o147, metadata !16711, metadata !DIExpression()), !dbg !16713
  %48 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16713, !tbaa !2286
  %o_tok48 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %48, i32 0, i32 4, !dbg !16713, !ctir !1748
  store %struct.obstack* %o_tok48, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !16714, metadata !DIExpression()), !dbg !16713
  %49 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %object_base49 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !16713, !ctir !1755
  %50 = load i8*, i8** %object_base49, align 8, !dbg !16713, !tbaa !16631, !ctir !9
  store i8* %50, i8** %__value, align 8, !dbg !16713, !tbaa !2286
  %51 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16715, !tbaa !2286
  %next_free50 = getelementptr inbounds %struct.obstack, %struct.obstack* %51, i32 0, i32 3, !dbg !16715, !ctir !1755
  %52 = load i8*, i8** %next_free50, align 8, !dbg !16715, !tbaa !16632, !ctir !9
  %53 = load i8*, i8** %__value, align 8, !dbg !16715, !tbaa !2286
  %cmp51 = icmp eq i8* %52, %53, !dbg !16715
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !16713

if.then53:                                        ; preds = %if.end43
  %54 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16715, !tbaa !2286
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 10, !dbg !16715, !ctir !1755
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !16715
  %bf.clear = and i8 %bf.load, -3, !dbg !16715
  %bf.set = or i8 %bf.clear, 2, !dbg !16715
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !16715
  br label %if.end54, !dbg !16715

if.end54:                                         ; preds = %if.then53, %if.end43
  %55 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %next_free55 = getelementptr inbounds %struct.obstack, %struct.obstack* %55, i32 0, i32 3, !dbg !16713, !ctir !1755
  %56 = load i8*, i8** %next_free55, align 8, !dbg !16713, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast56 = ptrtoint i8* %56 to i64, !dbg !16713
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast56, 0, !dbg !16713
  %57 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %57, i32 0, i32 6, !dbg !16713, !ctir !1755
  %58 = load i64, i64* %alignment_mask, align 8, !dbg !16713, !tbaa !16717, !ctir !55
  %add = add i64 %sub.ptr.sub57, %58, !dbg !16713
  %59 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %alignment_mask58 = getelementptr inbounds %struct.obstack, %struct.obstack* %59, i32 0, i32 6, !dbg !16713, !ctir !1755
  %60 = load i64, i64* %alignment_mask58, align 8, !dbg !16713, !tbaa !16717, !ctir !55
  %neg = xor i64 %60, -1, !dbg !16713
  %and = and i64 %add, %neg, !dbg !16713
  %add.ptr59 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !16713
  %61 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %next_free60 = getelementptr inbounds %struct.obstack, %struct.obstack* %61, i32 0, i32 3, !dbg !16713, !ctir !1755
  store i8* %add.ptr59, i8** %next_free60, align 8, !dbg !16713, !tbaa !16632, !ctir !9
  %62 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16718, !tbaa !2286
  %next_free61 = getelementptr inbounds %struct.obstack, %struct.obstack* %62, i32 0, i32 3, !dbg !16718, !ctir !1755
  %63 = load i8*, i8** %next_free61, align 8, !dbg !16718, !tbaa !16632, !ctir !9
  %64 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16718, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 1, !dbg !16718, !ctir !1755
  %65 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !16718, !tbaa !16629, !ctir !1759
  %66 = bitcast %struct._obstack_chunk* %65 to i8*, !dbg !16718
  %sub.ptr.lhs.cast62 = ptrtoint i8* %63 to i64, !dbg !16718
  %sub.ptr.rhs.cast63 = ptrtoint i8* %66 to i64, !dbg !16718
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !16718
  %67 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16718, !tbaa !2286
  %chunk_limit65 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 4, !dbg !16718, !ctir !1755
  %68 = load i8*, i8** %chunk_limit65, align 8, !dbg !16718, !tbaa !16630, !ctir !9
  %69 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16718, !tbaa !2286
  %chunk66 = getelementptr inbounds %struct.obstack, %struct.obstack* %69, i32 0, i32 1, !dbg !16718, !ctir !1755
  %70 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk66, align 8, !dbg !16718, !tbaa !16629, !ctir !1759
  %71 = bitcast %struct._obstack_chunk* %70 to i8*, !dbg !16718
  %sub.ptr.lhs.cast67 = ptrtoint i8* %68 to i64, !dbg !16718
  %sub.ptr.rhs.cast68 = ptrtoint i8* %71 to i64, !dbg !16718
  %sub.ptr.sub69 = sub i64 %sub.ptr.lhs.cast67, %sub.ptr.rhs.cast68, !dbg !16718
  %cmp70 = icmp ugt i64 %sub.ptr.sub64, %sub.ptr.sub69, !dbg !16718
  br i1 %cmp70, label %if.then72, label %if.end75, !dbg !16713

if.then72:                                        ; preds = %if.end54
  %72 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16718, !tbaa !2286
  %chunk_limit73 = getelementptr inbounds %struct.obstack, %struct.obstack* %72, i32 0, i32 4, !dbg !16718, !ctir !1755
  %73 = load i8*, i8** %chunk_limit73, align 8, !dbg !16718, !tbaa !16630, !ctir !9
  %74 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16718, !tbaa !2286
  %next_free74 = getelementptr inbounds %struct.obstack, %struct.obstack* %74, i32 0, i32 3, !dbg !16718, !ctir !1755
  store i8* %73, i8** %next_free74, align 8, !dbg !16718, !tbaa !16632, !ctir !9
  br label %if.end75, !dbg !16718

if.end75:                                         ; preds = %if.then72, %if.end54
  %75 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %next_free76 = getelementptr inbounds %struct.obstack, %struct.obstack* %75, i32 0, i32 3, !dbg !16713, !ctir !1755
  %76 = load i8*, i8** %next_free76, align 8, !dbg !16713, !tbaa !16632, !ctir !9
  %77 = load %struct.obstack*, %struct.obstack** %__o147, align 8, !dbg !16713, !tbaa !2286
  %object_base77 = getelementptr inbounds %struct.obstack, %struct.obstack* %77, i32 0, i32 2, !dbg !16713, !ctir !1755
  store i8* %76, i8** %object_base77, align 8, !dbg !16713, !tbaa !16631, !ctir !9
  %78 = load i8*, i8** %__value, align 8, !dbg !16713, !tbaa !2286
  store i8* %78, i8** %tmp78, align 8, !dbg !16713, !tbaa !2286
  %79 = load i8*, i8** %tmp78, align 8, !dbg !16713, !tbaa !2286
  %80 = bitcast i8* %79 to i8**, !dbg !16720
  %81 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16721, !tbaa !2286
  %tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %81, i32 0, i32 1, !dbg !16722, !ctir !1748
  store i8** %80, i8*** %tok, align 8, !dbg !16723, !tbaa !3088, !ctir !92
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o179, metadata !16724, metadata !DIExpression()), !dbg !16726
  %82 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16726, !tbaa !2286
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %82, i32 0, i32 5, !dbg !16726, !ctir !1748
  store %struct.obstack* %o_tok_len, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__value80, metadata !16727, metadata !DIExpression()), !dbg !16726
  %83 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %object_base81 = getelementptr inbounds %struct.obstack, %struct.obstack* %83, i32 0, i32 2, !dbg !16726, !ctir !1755
  %84 = load i8*, i8** %object_base81, align 8, !dbg !16726, !tbaa !16631, !ctir !9
  store i8* %84, i8** %__value80, align 8, !dbg !16726, !tbaa !2286
  %85 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16728, !tbaa !2286
  %next_free82 = getelementptr inbounds %struct.obstack, %struct.obstack* %85, i32 0, i32 3, !dbg !16728, !ctir !1755
  %86 = load i8*, i8** %next_free82, align 8, !dbg !16728, !tbaa !16632, !ctir !9
  %87 = load i8*, i8** %__value80, align 8, !dbg !16728, !tbaa !2286
  %cmp83 = icmp eq i8* %86, %87, !dbg !16728
  br i1 %cmp83, label %if.then85, label %if.end90, !dbg !16726

if.then85:                                        ; preds = %if.end75
  %88 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16728, !tbaa !2286
  %maybe_empty_object86 = getelementptr inbounds %struct.obstack, %struct.obstack* %88, i32 0, i32 10, !dbg !16728, !ctir !1755
  %bf.load87 = load i8, i8* %maybe_empty_object86, align 8, !dbg !16728
  %bf.clear88 = and i8 %bf.load87, -3, !dbg !16728
  %bf.set89 = or i8 %bf.clear88, 2, !dbg !16728
  store i8 %bf.set89, i8* %maybe_empty_object86, align 8, !dbg !16728
  br label %if.end90, !dbg !16728

if.end90:                                         ; preds = %if.then85, %if.end75
  %89 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %next_free91 = getelementptr inbounds %struct.obstack, %struct.obstack* %89, i32 0, i32 3, !dbg !16726, !ctir !1755
  %90 = load i8*, i8** %next_free91, align 8, !dbg !16726, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast92 = ptrtoint i8* %90 to i64, !dbg !16726
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast92, 0, !dbg !16726
  %91 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %alignment_mask94 = getelementptr inbounds %struct.obstack, %struct.obstack* %91, i32 0, i32 6, !dbg !16726, !ctir !1755
  %92 = load i64, i64* %alignment_mask94, align 8, !dbg !16726, !tbaa !16717, !ctir !55
  %add95 = add i64 %sub.ptr.sub93, %92, !dbg !16726
  %93 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %alignment_mask96 = getelementptr inbounds %struct.obstack, %struct.obstack* %93, i32 0, i32 6, !dbg !16726, !ctir !1755
  %94 = load i64, i64* %alignment_mask96, align 8, !dbg !16726, !tbaa !16717, !ctir !55
  %neg97 = xor i64 %94, -1, !dbg !16726
  %and98 = and i64 %add95, %neg97, !dbg !16726
  %add.ptr99 = getelementptr inbounds i8, i8* null, i64 %and98, !dbg !16726
  %95 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %next_free100 = getelementptr inbounds %struct.obstack, %struct.obstack* %95, i32 0, i32 3, !dbg !16726, !ctir !1755
  store i8* %add.ptr99, i8** %next_free100, align 8, !dbg !16726, !tbaa !16632, !ctir !9
  %96 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16730, !tbaa !2286
  %next_free101 = getelementptr inbounds %struct.obstack, %struct.obstack* %96, i32 0, i32 3, !dbg !16730, !ctir !1755
  %97 = load i8*, i8** %next_free101, align 8, !dbg !16730, !tbaa !16632, !ctir !9
  %98 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16730, !tbaa !2286
  %chunk102 = getelementptr inbounds %struct.obstack, %struct.obstack* %98, i32 0, i32 1, !dbg !16730, !ctir !1755
  %99 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk102, align 8, !dbg !16730, !tbaa !16629, !ctir !1759
  %100 = bitcast %struct._obstack_chunk* %99 to i8*, !dbg !16730
  %sub.ptr.lhs.cast103 = ptrtoint i8* %97 to i64, !dbg !16730
  %sub.ptr.rhs.cast104 = ptrtoint i8* %100 to i64, !dbg !16730
  %sub.ptr.sub105 = sub i64 %sub.ptr.lhs.cast103, %sub.ptr.rhs.cast104, !dbg !16730
  %101 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16730, !tbaa !2286
  %chunk_limit106 = getelementptr inbounds %struct.obstack, %struct.obstack* %101, i32 0, i32 4, !dbg !16730, !ctir !1755
  %102 = load i8*, i8** %chunk_limit106, align 8, !dbg !16730, !tbaa !16630, !ctir !9
  %103 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16730, !tbaa !2286
  %chunk107 = getelementptr inbounds %struct.obstack, %struct.obstack* %103, i32 0, i32 1, !dbg !16730, !ctir !1755
  %104 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk107, align 8, !dbg !16730, !tbaa !16629, !ctir !1759
  %105 = bitcast %struct._obstack_chunk* %104 to i8*, !dbg !16730
  %sub.ptr.lhs.cast108 = ptrtoint i8* %102 to i64, !dbg !16730
  %sub.ptr.rhs.cast109 = ptrtoint i8* %105 to i64, !dbg !16730
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109, !dbg !16730
  %cmp111 = icmp ugt i64 %sub.ptr.sub105, %sub.ptr.sub110, !dbg !16730
  br i1 %cmp111, label %if.then113, label %if.end116, !dbg !16726

if.then113:                                       ; preds = %if.end90
  %106 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16730, !tbaa !2286
  %chunk_limit114 = getelementptr inbounds %struct.obstack, %struct.obstack* %106, i32 0, i32 4, !dbg !16730, !ctir !1755
  %107 = load i8*, i8** %chunk_limit114, align 8, !dbg !16730, !tbaa !16630, !ctir !9
  %108 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16730, !tbaa !2286
  %next_free115 = getelementptr inbounds %struct.obstack, %struct.obstack* %108, i32 0, i32 3, !dbg !16730, !ctir !1755
  store i8* %107, i8** %next_free115, align 8, !dbg !16730, !tbaa !16632, !ctir !9
  br label %if.end116, !dbg !16730

if.end116:                                        ; preds = %if.then113, %if.end90
  %109 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %next_free117 = getelementptr inbounds %struct.obstack, %struct.obstack* %109, i32 0, i32 3, !dbg !16726, !ctir !1755
  %110 = load i8*, i8** %next_free117, align 8, !dbg !16726, !tbaa !16632, !ctir !9
  %111 = load %struct.obstack*, %struct.obstack** %__o179, align 8, !dbg !16726, !tbaa !2286
  %object_base118 = getelementptr inbounds %struct.obstack, %struct.obstack* %111, i32 0, i32 2, !dbg !16726, !ctir !1755
  store i8* %110, i8** %object_base118, align 8, !dbg !16726, !tbaa !16631, !ctir !9
  %112 = load i8*, i8** %__value80, align 8, !dbg !16726, !tbaa !2286
  store i8* %112, i8** %tmp119, align 8, !dbg !16726, !tbaa !2286
  %113 = load i8*, i8** %tmp119, align 8, !dbg !16726, !tbaa !2286
  %114 = bitcast i8* %113 to i64*, !dbg !16732
  %115 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16733, !tbaa !2286
  %tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %115, i32 0, i32 2, !dbg !16734, !ctir !1748
  store i64* %114, i64** %tok_len, align 8, !dbg !16735, !tbaa !16615, !ctir !360
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !16736, !tbaa !2286
  %call120 = call i32 @ferror(%struct._IO_FILE* %116) #12, !dbg !16737
  %tobool121 = icmp ne i32 %call120, 0, !dbg !16738
  %lnot = xor i1 %tobool121, true, !dbg !16738
  ret i1 %lnot, !dbg !16739
}

declare dso_local i32 @fgetc(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @save_token(%struct.Tokens* %t) #4 !dbg !16740 !ctir !1745 {
entry:
  %t.addr = alloca %struct.Tokens*, align 8
  %len = alloca i64, align 8, !ctir !55
  %__o = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !88
  %__o1 = alloca %struct.obstack*, align 8, !ctir !1790
  %__value = alloca i8*, align 8, !ctir !53
  %tmp24 = alloca i8*, align 8
  %__o25 = alloca %struct.obstack*, align 8, !ctir !1790
  %__o126 = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp27 = alloca i64, align 8
  %__o136 = alloca %struct.obstack*, align 8, !ctir !1790
  %__p1 = alloca i8*, align 8, !ctir !53
  %__o40 = alloca %struct.obstack*, align 8, !ctir !1790
  %__len = alloca i64, align 8, !ctir !55
  %__o141 = alloca %struct.obstack*, align 8, !ctir !1827
  %tmp42 = alloca i64, align 8
  store %struct.Tokens* %t, %struct.Tokens** %t.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.Tokens** %t.addr, metadata !16741, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16743, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !16745, metadata !DIExpression()), !dbg !16747
  %0 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16747, !tbaa !2286
  %o_data = getelementptr inbounds %struct.Tokens, %struct.Tokens* %0, i32 0, i32 3, !dbg !16747, !ctir !1748
  store %struct.obstack* %o_data, %struct.obstack** %__o, align 8, !dbg !16747, !tbaa !2286
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16747, !tbaa !2286
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !16747, !ctir !1828
  %2 = load i8*, i8** %next_free, align 8, !dbg !16747, !tbaa !16632, !ctir !9
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !16747, !tbaa !2286
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !16747, !ctir !1828
  %4 = load i8*, i8** %object_base, align 8, !dbg !16747, !tbaa !16631, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !16747
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !16747
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16747
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !16747, !tbaa !2447
  %5 = load i64, i64* %tmp, align 8, !dbg !16747, !tbaa !2447
  %sub = sub i64 %5, 1, !dbg !16748
  store i64 %sub, i64* %len, align 8, !dbg !16744, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %s, metadata !16749, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !16751, metadata !DIExpression()), !dbg !16753
  %6 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16753, !tbaa !2286
  %o_data1 = getelementptr inbounds %struct.Tokens, %struct.Tokens* %6, i32 0, i32 3, !dbg !16753, !ctir !1748
  store %struct.obstack* %o_data1, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !16754, metadata !DIExpression()), !dbg !16753
  %7 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %object_base2 = getelementptr inbounds %struct.obstack, %struct.obstack* %7, i32 0, i32 2, !dbg !16753, !ctir !1755
  %8 = load i8*, i8** %object_base2, align 8, !dbg !16753, !tbaa !16631, !ctir !9
  store i8* %8, i8** %__value, align 8, !dbg !16753, !tbaa !2286
  %9 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16755, !tbaa !2286
  %next_free3 = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 3, !dbg !16755, !ctir !1755
  %10 = load i8*, i8** %next_free3, align 8, !dbg !16755, !tbaa !16632, !ctir !9
  %11 = load i8*, i8** %__value, align 8, !dbg !16755, !tbaa !2286
  %cmp = icmp eq i8* %10, %11, !dbg !16755
  br i1 %cmp, label %if.then, label %if.end, !dbg !16753

if.then:                                          ; preds = %entry
  %12 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16755, !tbaa !2286
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 10, !dbg !16755, !ctir !1755
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !16755
  %bf.clear = and i8 %bf.load, -3, !dbg !16755
  %bf.set = or i8 %bf.clear, 2, !dbg !16755
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !16755
  br label %if.end, !dbg !16755

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %next_free4 = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 3, !dbg !16753, !ctir !1755
  %14 = load i8*, i8** %next_free4, align 8, !dbg !16753, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast5 = ptrtoint i8* %14 to i64, !dbg !16753
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast5, 0, !dbg !16753
  %15 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 6, !dbg !16753, !ctir !1755
  %16 = load i64, i64* %alignment_mask, align 8, !dbg !16753, !tbaa !16717, !ctir !55
  %add = add i64 %sub.ptr.sub6, %16, !dbg !16753
  %17 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %alignment_mask7 = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 6, !dbg !16753, !ctir !1755
  %18 = load i64, i64* %alignment_mask7, align 8, !dbg !16753, !tbaa !16717, !ctir !55
  %neg = xor i64 %18, -1, !dbg !16753
  %and = and i64 %add, %neg, !dbg !16753
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !16753
  %19 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %next_free8 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 3, !dbg !16753, !ctir !1755
  store i8* %add.ptr, i8** %next_free8, align 8, !dbg !16753, !tbaa !16632, !ctir !9
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16757, !tbaa !2286
  %next_free9 = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !16757, !ctir !1755
  %21 = load i8*, i8** %next_free9, align 8, !dbg !16757, !tbaa !16632, !ctir !9
  %22 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16757, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 1, !dbg !16757, !ctir !1755
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !16757, !tbaa !16629, !ctir !1759
  %24 = bitcast %struct._obstack_chunk* %23 to i8*, !dbg !16757
  %sub.ptr.lhs.cast10 = ptrtoint i8* %21 to i64, !dbg !16757
  %sub.ptr.rhs.cast11 = ptrtoint i8* %24 to i64, !dbg !16757
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !16757
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16757, !tbaa !2286
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 4, !dbg !16757, !ctir !1755
  %26 = load i8*, i8** %chunk_limit, align 8, !dbg !16757, !tbaa !16630, !ctir !9
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16757, !tbaa !2286
  %chunk13 = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 1, !dbg !16757, !ctir !1755
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk13, align 8, !dbg !16757, !tbaa !16629, !ctir !1759
  %29 = bitcast %struct._obstack_chunk* %28 to i8*, !dbg !16757
  %sub.ptr.lhs.cast14 = ptrtoint i8* %26 to i64, !dbg !16757
  %sub.ptr.rhs.cast15 = ptrtoint i8* %29 to i64, !dbg !16757
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !16757
  %cmp17 = icmp ugt i64 %sub.ptr.sub12, %sub.ptr.sub16, !dbg !16757
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !16753

if.then18:                                        ; preds = %if.end
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16757, !tbaa !2286
  %chunk_limit19 = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 4, !dbg !16757, !ctir !1755
  %31 = load i8*, i8** %chunk_limit19, align 8, !dbg !16757, !tbaa !16630, !ctir !9
  %32 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16757, !tbaa !2286
  %next_free20 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 3, !dbg !16757, !ctir !1755
  store i8* %31, i8** %next_free20, align 8, !dbg !16757, !tbaa !16632, !ctir !9
  br label %if.end21, !dbg !16757

if.end21:                                         ; preds = %if.then18, %if.end
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %next_free22 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 3, !dbg !16753, !ctir !1755
  %34 = load i8*, i8** %next_free22, align 8, !dbg !16753, !tbaa !16632, !ctir !9
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !16753, !tbaa !2286
  %object_base23 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 2, !dbg !16753, !ctir !1755
  store i8* %34, i8** %object_base23, align 8, !dbg !16753, !tbaa !16631, !ctir !9
  %36 = load i8*, i8** %__value, align 8, !dbg !16753, !tbaa !2286
  store i8* %36, i8** %tmp24, align 8, !dbg !16753, !tbaa !2286
  %37 = load i8*, i8** %tmp24, align 8, !dbg !16753, !tbaa !2286
  store i8* %37, i8** %s, align 8, !dbg !16750, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o25, metadata !16759, metadata !DIExpression()), !dbg !16761
  %38 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16761, !tbaa !2286
  %o_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %38, i32 0, i32 4, !dbg !16761, !ctir !1748
  store %struct.obstack* %o_tok, %struct.obstack** %__o25, align 8, !dbg !16761, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o126, metadata !16762, metadata !DIExpression()), !dbg !16765
  %39 = load %struct.obstack*, %struct.obstack** %__o25, align 8, !dbg !16765, !tbaa !2286
  store %struct.obstack* %39, %struct.obstack** %__o126, align 8, !dbg !16765, !tbaa !2286
  %40 = load %struct.obstack*, %struct.obstack** %__o126, align 8, !dbg !16765, !tbaa !2286
  %chunk_limit28 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 4, !dbg !16765, !ctir !1828
  %41 = load i8*, i8** %chunk_limit28, align 8, !dbg !16765, !tbaa !16630, !ctir !9
  %42 = load %struct.obstack*, %struct.obstack** %__o126, align 8, !dbg !16765, !tbaa !2286
  %next_free29 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 3, !dbg !16765, !ctir !1828
  %43 = load i8*, i8** %next_free29, align 8, !dbg !16765, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast30 = ptrtoint i8* %41 to i64, !dbg !16765
  %sub.ptr.rhs.cast31 = ptrtoint i8* %43 to i64, !dbg !16765
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !16765
  store i64 %sub.ptr.sub32, i64* %tmp27, align 8, !dbg !16765, !tbaa !2447
  %44 = load i64, i64* %tmp27, align 8, !dbg !16765, !tbaa !2447
  %cmp33 = icmp ult i64 %44, 8, !dbg !16766
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !16761

if.then34:                                        ; preds = %if.end21
  %45 = load %struct.obstack*, %struct.obstack** %__o25, align 8, !dbg !16766, !tbaa !2286
  call void @_obstack_newchunk(%struct.obstack* %45, i64 8), !dbg !16766
  br label %if.end35, !dbg !16766

if.end35:                                         ; preds = %if.then34, %if.end21
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o136, metadata !16767, metadata !DIExpression()), !dbg !16769
  %46 = load %struct.obstack*, %struct.obstack** %__o25, align 8, !dbg !16769, !tbaa !2286
  store %struct.obstack* %46, %struct.obstack** %__o136, align 8, !dbg !16769, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %__p1, metadata !16770, metadata !DIExpression()), !dbg !16769
  %47 = load %struct.obstack*, %struct.obstack** %__o136, align 8, !dbg !16769, !tbaa !2286
  %next_free37 = getelementptr inbounds %struct.obstack, %struct.obstack* %47, i32 0, i32 3, !dbg !16769, !ctir !1755
  %48 = load i8*, i8** %next_free37, align 8, !dbg !16769, !tbaa !16632, !ctir !9
  store i8* %48, i8** %__p1, align 8, !dbg !16769, !tbaa !2286
  %49 = load i8*, i8** %s, align 8, !dbg !16769, !tbaa !2286
  %50 = load i8*, i8** %__p1, align 8, !dbg !16769, !tbaa !2286
  %51 = bitcast i8* %50 to i8**, !dbg !16769
  store i8* %49, i8** %51, align 8, !dbg !16769, !tbaa !2286, !ctir !339
  %52 = load %struct.obstack*, %struct.obstack** %__o136, align 8, !dbg !16769, !tbaa !2286
  %next_free38 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 3, !dbg !16769, !ctir !1755
  %53 = load i8*, i8** %next_free38, align 8, !dbg !16769, !tbaa !16632, !ctir !9
  %add.ptr39 = getelementptr inbounds i8, i8* %53, i64 8, !dbg !16769
  store i8* %add.ptr39, i8** %next_free38, align 8, !dbg !16769, !tbaa !16632, !ctir !9
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o40, metadata !16771, metadata !DIExpression()), !dbg !16773
  %54 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16773, !tbaa !2286
  %o_tok_len = getelementptr inbounds %struct.Tokens, %struct.Tokens* %54, i32 0, i32 5, !dbg !16773, !ctir !1748
  store %struct.obstack* %o_tok_len, %struct.obstack** %__o40, align 8, !dbg !16773, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !16774, metadata !DIExpression()), !dbg !16773
  store i64 8, i64* %__len, align 8, !dbg !16773, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o141, metadata !16775, metadata !DIExpression()), !dbg !16778
  %55 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16778, !tbaa !2286
  store %struct.obstack* %55, %struct.obstack** %__o141, align 8, !dbg !16778, !tbaa !2286
  %56 = load %struct.obstack*, %struct.obstack** %__o141, align 8, !dbg !16778, !tbaa !2286
  %chunk_limit43 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0, i32 4, !dbg !16778, !ctir !1828
  %57 = load i8*, i8** %chunk_limit43, align 8, !dbg !16778, !tbaa !16630, !ctir !9
  %58 = load %struct.obstack*, %struct.obstack** %__o141, align 8, !dbg !16778, !tbaa !2286
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %58, i32 0, i32 3, !dbg !16778, !ctir !1828
  %59 = load i8*, i8** %next_free44, align 8, !dbg !16778, !tbaa !16632, !ctir !9
  %sub.ptr.lhs.cast45 = ptrtoint i8* %57 to i64, !dbg !16778
  %sub.ptr.rhs.cast46 = ptrtoint i8* %59 to i64, !dbg !16778
  %sub.ptr.sub47 = sub i64 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46, !dbg !16778
  store i64 %sub.ptr.sub47, i64* %tmp42, align 8, !dbg !16778, !tbaa !2447
  %60 = load i64, i64* %tmp42, align 8, !dbg !16778, !tbaa !2447
  %61 = load i64, i64* %__len, align 8, !dbg !16779, !tbaa !2447
  %cmp48 = icmp ult i64 %60, %61, !dbg !16779
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !16773

if.then49:                                        ; preds = %if.end35
  %62 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16779, !tbaa !2286
  %63 = load i64, i64* %__len, align 8, !dbg !16779, !tbaa !2447
  call void @_obstack_newchunk(%struct.obstack* %62, i64 %63), !dbg !16779
  br label %if.end50, !dbg !16779

if.end50:                                         ; preds = %if.then49, %if.end35
  %64 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16773, !tbaa !2286
  %next_free51 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !16773, !ctir !1755
  %65 = load i8*, i8** %next_free51, align 8, !dbg !16773, !tbaa !16632, !ctir !9
  %66 = bitcast i64* %len to i8*, !dbg !16773
  %67 = load i64, i64* %__len, align 8, !dbg !16773, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 8 %66, i64 %67, i1 false), !dbg !16773
  %68 = load i64, i64* %__len, align 8, !dbg !16773, !tbaa !2447
  %69 = load %struct.obstack*, %struct.obstack** %__o40, align 8, !dbg !16773, !tbaa !2286
  %next_free52 = getelementptr inbounds %struct.obstack, %struct.obstack* %69, i32 0, i32 3, !dbg !16773, !ctir !1755
  %70 = load i8*, i8** %next_free52, align 8, !dbg !16773, !tbaa !16632, !ctir !9
  %add.ptr53 = getelementptr inbounds i8, i8* %70, i64 %68, !dbg !16773
  store i8* %add.ptr53, i8** %next_free52, align 8, !dbg !16773, !tbaa !16632, !ctir !9
  %71 = load %struct.Tokens*, %struct.Tokens** %t.addr, align 8, !dbg !16780, !tbaa !2286
  %n_tok = getelementptr inbounds %struct.Tokens, %struct.Tokens* %71, i32 0, i32 0, !dbg !16781, !ctir !1748
  %72 = load i64, i64* %n_tok, align 8, !dbg !16782, !tbaa !3079, !ctir !55
  %inc = add i64 %72, 1, !dbg !16782
  store i64 %inc, i64* %n_tok, align 8, !dbg !16782, !tbaa !3079, !ctir !55
  ret void, !dbg !16783
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mkstemp_safer(i8* %templ) #4 !dbg !16784 !ctir !1832 {
entry:
  %templ.addr = alloca i8*, align 8
  store i8* %templ, i8** %templ.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %templ.addr, metadata !16786, metadata !DIExpression()), !dbg !16787
  %0 = load i8*, i8** %templ.addr, align 8, !dbg !16788, !tbaa !2286
  %call = call i32 @mkstemp(i8* %0), !dbg !16789
  %call1 = call i32 @fd_safer(i32 %call), !dbg !16790
  ret i32 %call1, !dbg !16791
}

declare dso_local i32 @mkstemp(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mkostemp_safer(i8* %templ, i32 %flags) #4 !dbg !16792 !ctir !1834 {
entry:
  %templ.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %templ, i8** %templ.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %templ.addr, metadata !16793, metadata !DIExpression()), !dbg !16794
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16795, metadata !DIExpression()), !dbg !16796
  %0 = load i8*, i8** %templ.addr, align 8, !dbg !16797, !tbaa !2286
  %1 = load i32, i32* %flags.addr, align 4, !dbg !16798, !tbaa !2273
  %call = call i32 @mkostemp(i8* %0, i32 %1), !dbg !16799
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16800, !tbaa !2273
  %call1 = call i32 @fd_safer_flag(i32 %call, i32 %2), !dbg !16801
  ret i32 %call1, !dbg !16802
}

declare dso_local i32 @mkostemp(i8*, i32) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @strnumcmp(i8* %a, i8* %b, i32 %decimal_point, i32 %thousands_sep) #9 !dbg !16803 !ctir !1839 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %decimal_point.addr = alloca i32, align 4
  %thousands_sep.addr = alloca i32, align 4
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16805, metadata !DIExpression()), !dbg !16806
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16807, metadata !DIExpression()), !dbg !16808
  store i32 %decimal_point, i32* %decimal_point.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %decimal_point.addr, metadata !16809, metadata !DIExpression()), !dbg !16810
  store i32 %thousands_sep, i32* %thousands_sep.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %thousands_sep.addr, metadata !16811, metadata !DIExpression()), !dbg !16812
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16813, !tbaa !2286
  %1 = load i8*, i8** %b.addr, align 8, !dbg !16814, !tbaa !2286
  %2 = load i32, i32* %decimal_point.addr, align 4, !dbg !16815, !tbaa !2273
  %3 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16816, !tbaa !2273
  %call = call i32 @numcompare.302(i8* %0, i8* %1, i32 %2, i32 %3) #14, !dbg !16817
  ret i32 %call, !dbg !16818
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @numcompare.302(i8* %a, i8* %b, i32 %decimal_point, i32 %thousands_sep) #9 !dbg !16819 !ctir !1839 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %decimal_point.addr = alloca i32, align 4
  %thousands_sep.addr = alloca i32, align 4
  %tmpa = alloca i8, align 1, !ctir !321
  %tmpb = alloca i8, align 1, !ctir !321
  %tmp = alloca i32, align 4, !ctir !7
  %log_a = alloca i64, align 8, !ctir !55
  %log_b = alloca i64, align 8, !ctir !55
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16821, metadata !DIExpression()), !dbg !16822
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16823, metadata !DIExpression()), !dbg !16824
  store i32 %decimal_point, i32* %decimal_point.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %decimal_point.addr, metadata !16825, metadata !DIExpression()), !dbg !16826
  store i32 %thousands_sep, i32* %thousands_sep.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %thousands_sep.addr, metadata !16827, metadata !DIExpression()), !dbg !16828
  call void @llvm.dbg.declare(metadata i8* %tmpa, metadata !16829, metadata !DIExpression()), !dbg !16830
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16831, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !16832, !tbaa !2438, !ctir !89
  store i8 %1, i8* %tmpa, align 1, !dbg !16830, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %tmpb, metadata !16833, metadata !DIExpression()), !dbg !16834
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16835, !tbaa !2286
  %3 = load i8, i8* %2, align 1, !dbg !16836, !tbaa !2438, !ctir !89
  store i8 %3, i8* %tmpb, align 1, !dbg !16834, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !16837, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.declare(metadata i64* %log_a, metadata !16839, metadata !DIExpression()), !dbg !16840
  call void @llvm.dbg.declare(metadata i64* %log_b, metadata !16841, metadata !DIExpression()), !dbg !16842
  %4 = load i8, i8* %tmpa, align 1, !dbg !16843, !tbaa !2438
  %conv = zext i8 %4 to i32, !dbg !16843
  %cmp = icmp eq i32 %conv, 45, !dbg !16845
  br i1 %cmp, label %if.then, label %if.else, !dbg !16846

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !16847

do.body:                                          ; preds = %lor.end, %if.then
  %5 = load i8*, i8** %a.addr, align 8, !dbg !16849, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !16849
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !16849, !tbaa !2286
  %6 = load i8, i8* %incdec.ptr, align 1, !dbg !16850, !tbaa !2438, !ctir !89
  store i8 %6, i8* %tmpa, align 1, !dbg !16851, !tbaa !2438
  br label %do.cond, !dbg !16852

do.cond:                                          ; preds = %do.body
  %7 = load i8, i8* %tmpa, align 1, !dbg !16853, !tbaa !2438
  %conv2 = zext i8 %7 to i32, !dbg !16853
  %cmp3 = icmp eq i32 %conv2, 48, !dbg !16854
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !16855

lor.rhs:                                          ; preds = %do.cond
  %8 = load i8, i8* %tmpa, align 1, !dbg !16856, !tbaa !2438
  %conv5 = zext i8 %8 to i32, !dbg !16856
  %9 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16857, !tbaa !2273
  %cmp6 = icmp eq i32 %conv5, %9, !dbg !16858
  br label %lor.end, !dbg !16855

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %10 = phi i1 [ true, %do.cond ], [ %cmp6, %lor.rhs ]
  br i1 %10, label %do.body, label %do.end, !dbg !16852, !llvm.loop !16859

do.end:                                           ; preds = %lor.end
  %11 = load i8, i8* %tmpb, align 1, !dbg !16861, !tbaa !2438
  %conv8 = zext i8 %11 to i32, !dbg !16861
  %cmp9 = icmp ne i32 %conv8, 45, !dbg !16863
  br i1 %cmp9, label %if.then11, label %if.end54, !dbg !16864

if.then11:                                        ; preds = %do.end
  %12 = load i8, i8* %tmpa, align 1, !dbg !16865, !tbaa !2438
  %conv12 = zext i8 %12 to i32, !dbg !16865
  %13 = load i32, i32* %decimal_point.addr, align 4, !dbg !16868, !tbaa !2273
  %cmp13 = icmp eq i32 %conv12, %13, !dbg !16869
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !16870

if.then15:                                        ; preds = %if.then11
  br label %do.body16, !dbg !16871

do.body16:                                        ; preds = %do.cond18, %if.then15
  %14 = load i8*, i8** %a.addr, align 8, !dbg !16872, !tbaa !2286
  %incdec.ptr17 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !16872
  store i8* %incdec.ptr17, i8** %a.addr, align 8, !dbg !16872, !tbaa !2286
  %15 = load i8, i8* %incdec.ptr17, align 1, !dbg !16873, !tbaa !2438, !ctir !89
  store i8 %15, i8* %tmpa, align 1, !dbg !16874, !tbaa !2438
  br label %do.cond18, !dbg !16875

do.cond18:                                        ; preds = %do.body16
  %16 = load i8, i8* %tmpa, align 1, !dbg !16876, !tbaa !2438
  %conv19 = zext i8 %16 to i32, !dbg !16876
  %cmp20 = icmp eq i32 %conv19, 48, !dbg !16877
  br i1 %cmp20, label %do.body16, label %do.end22, !dbg !16875, !llvm.loop !16878

do.end22:                                         ; preds = %do.cond18
  br label %if.end, !dbg !16875

if.end:                                           ; preds = %do.end22, %if.then11
  %17 = load i8, i8* %tmpa, align 1, !dbg !16880, !tbaa !2438
  %conv23 = zext i8 %17 to i32, !dbg !16880
  %sub = sub i32 %conv23, 48, !dbg !16880
  %cmp24 = icmp ule i32 %sub, 9, !dbg !16880
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !16882

if.then26:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16883
  br label %return, !dbg !16883

if.end27:                                         ; preds = %if.end
  br label %while.cond, !dbg !16884

while.cond:                                       ; preds = %while.body, %if.end27
  %18 = load i8, i8* %tmpb, align 1, !dbg !16885, !tbaa !2438
  %conv28 = zext i8 %18 to i32, !dbg !16885
  %cmp29 = icmp eq i32 %conv28, 48, !dbg !16886
  br i1 %cmp29, label %lor.end35, label %lor.rhs31, !dbg !16887

lor.rhs31:                                        ; preds = %while.cond
  %19 = load i8, i8* %tmpb, align 1, !dbg !16888, !tbaa !2438
  %conv32 = zext i8 %19 to i32, !dbg !16888
  %20 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16889, !tbaa !2273
  %cmp33 = icmp eq i32 %conv32, %20, !dbg !16890
  br label %lor.end35, !dbg !16887

lor.end35:                                        ; preds = %lor.rhs31, %while.cond
  %21 = phi i1 [ true, %while.cond ], [ %cmp33, %lor.rhs31 ]
  br i1 %21, label %while.body, label %while.end, !dbg !16884

while.body:                                       ; preds = %lor.end35
  %22 = load i8*, i8** %b.addr, align 8, !dbg !16891, !tbaa !2286
  %incdec.ptr36 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !16891
  store i8* %incdec.ptr36, i8** %b.addr, align 8, !dbg !16891, !tbaa !2286
  %23 = load i8, i8* %incdec.ptr36, align 1, !dbg !16892, !tbaa !2438, !ctir !89
  store i8 %23, i8* %tmpb, align 1, !dbg !16893, !tbaa !2438
  br label %while.cond, !dbg !16884, !llvm.loop !16894

while.end:                                        ; preds = %lor.end35
  %24 = load i8, i8* %tmpb, align 1, !dbg !16896, !tbaa !2438
  %conv37 = zext i8 %24 to i32, !dbg !16896
  %25 = load i32, i32* %decimal_point.addr, align 4, !dbg !16898, !tbaa !2273
  %cmp38 = icmp eq i32 %conv37, %25, !dbg !16899
  br i1 %cmp38, label %if.then40, label %if.end48, !dbg !16900

if.then40:                                        ; preds = %while.end
  br label %do.body41, !dbg !16901

do.body41:                                        ; preds = %do.cond43, %if.then40
  %26 = load i8*, i8** %b.addr, align 8, !dbg !16902, !tbaa !2286
  %incdec.ptr42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !16902
  store i8* %incdec.ptr42, i8** %b.addr, align 8, !dbg !16902, !tbaa !2286
  %27 = load i8, i8* %incdec.ptr42, align 1, !dbg !16903, !tbaa !2438, !ctir !89
  store i8 %27, i8* %tmpb, align 1, !dbg !16904, !tbaa !2438
  br label %do.cond43, !dbg !16905

do.cond43:                                        ; preds = %do.body41
  %28 = load i8, i8* %tmpb, align 1, !dbg !16906, !tbaa !2438
  %conv44 = zext i8 %28 to i32, !dbg !16906
  %cmp45 = icmp eq i32 %conv44, 48, !dbg !16907
  br i1 %cmp45, label %do.body41, label %do.end47, !dbg !16905, !llvm.loop !16908

do.end47:                                         ; preds = %do.cond43
  br label %if.end48, !dbg !16905

if.end48:                                         ; preds = %do.end47, %while.end
  %29 = load i8, i8* %tmpb, align 1, !dbg !16910, !tbaa !2438
  %conv49 = zext i8 %29 to i32, !dbg !16910
  %sub50 = sub i32 %conv49, 48, !dbg !16910
  %cmp51 = icmp ule i32 %sub50, 9, !dbg !16910
  %conv52 = zext i1 %cmp51 to i32, !dbg !16910
  %sub53 = sub nsw i32 0, %conv52, !dbg !16911
  store i32 %sub53, i32* %retval, align 4, !dbg !16912
  br label %return, !dbg !16912

if.end54:                                         ; preds = %do.end
  br label %do.body55, !dbg !16913

do.body55:                                        ; preds = %lor.end65, %if.end54
  %30 = load i8*, i8** %b.addr, align 8, !dbg !16914, !tbaa !2286
  %incdec.ptr56 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !16914
  store i8* %incdec.ptr56, i8** %b.addr, align 8, !dbg !16914, !tbaa !2286
  %31 = load i8, i8* %incdec.ptr56, align 1, !dbg !16915, !tbaa !2438, !ctir !89
  store i8 %31, i8* %tmpb, align 1, !dbg !16916, !tbaa !2438
  br label %do.cond57, !dbg !16917

do.cond57:                                        ; preds = %do.body55
  %32 = load i8, i8* %tmpb, align 1, !dbg !16918, !tbaa !2438
  %conv58 = zext i8 %32 to i32, !dbg !16918
  %cmp59 = icmp eq i32 %conv58, 48, !dbg !16919
  br i1 %cmp59, label %lor.end65, label %lor.rhs61, !dbg !16920

lor.rhs61:                                        ; preds = %do.cond57
  %33 = load i8, i8* %tmpb, align 1, !dbg !16921, !tbaa !2438
  %conv62 = zext i8 %33 to i32, !dbg !16921
  %34 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16922, !tbaa !2273
  %cmp63 = icmp eq i32 %conv62, %34, !dbg !16923
  br label %lor.end65, !dbg !16920

lor.end65:                                        ; preds = %lor.rhs61, %do.cond57
  %35 = phi i1 [ true, %do.cond57 ], [ %cmp63, %lor.rhs61 ]
  br i1 %35, label %do.body55, label %do.end66, !dbg !16917, !llvm.loop !16924

do.end66:                                         ; preds = %lor.end65
  br label %while.cond67, !dbg !16926

while.cond67:                                     ; preds = %do.end90, %do.end66
  %36 = load i8, i8* %tmpa, align 1, !dbg !16927, !tbaa !2438
  %conv68 = zext i8 %36 to i32, !dbg !16927
  %37 = load i8, i8* %tmpb, align 1, !dbg !16928, !tbaa !2438
  %conv69 = zext i8 %37 to i32, !dbg !16928
  %cmp70 = icmp eq i32 %conv68, %conv69, !dbg !16929
  br i1 %cmp70, label %land.rhs, label %land.end, !dbg !16930

land.rhs:                                         ; preds = %while.cond67
  %38 = load i8, i8* %tmpa, align 1, !dbg !16931, !tbaa !2438
  %conv72 = zext i8 %38 to i32, !dbg !16931
  %sub73 = sub i32 %conv72, 48, !dbg !16931
  %cmp74 = icmp ule i32 %sub73, 9, !dbg !16931
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond67
  %39 = phi i1 [ false, %while.cond67 ], [ %cmp74, %land.rhs ], !dbg !16932
  br i1 %39, label %while.body76, label %while.end91, !dbg !16926

while.body76:                                     ; preds = %land.end
  br label %do.body77, !dbg !16933

do.body77:                                        ; preds = %do.cond79, %while.body76
  %40 = load i8*, i8** %a.addr, align 8, !dbg !16935, !tbaa !2286
  %incdec.ptr78 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !16935
  store i8* %incdec.ptr78, i8** %a.addr, align 8, !dbg !16935, !tbaa !2286
  %41 = load i8, i8* %incdec.ptr78, align 1, !dbg !16936, !tbaa !2438, !ctir !89
  store i8 %41, i8* %tmpa, align 1, !dbg !16937, !tbaa !2438
  br label %do.cond79, !dbg !16938

do.cond79:                                        ; preds = %do.body77
  %42 = load i8, i8* %tmpa, align 1, !dbg !16939, !tbaa !2438
  %conv80 = zext i8 %42 to i32, !dbg !16939
  %43 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16940, !tbaa !2273
  %cmp81 = icmp eq i32 %conv80, %43, !dbg !16941
  br i1 %cmp81, label %do.body77, label %do.end83, !dbg !16938, !llvm.loop !16942

do.end83:                                         ; preds = %do.cond79
  br label %do.body84, !dbg !16944

do.body84:                                        ; preds = %do.cond86, %do.end83
  %44 = load i8*, i8** %b.addr, align 8, !dbg !16945, !tbaa !2286
  %incdec.ptr85 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !16945
  store i8* %incdec.ptr85, i8** %b.addr, align 8, !dbg !16945, !tbaa !2286
  %45 = load i8, i8* %incdec.ptr85, align 1, !dbg !16946, !tbaa !2438, !ctir !89
  store i8 %45, i8* %tmpb, align 1, !dbg !16947, !tbaa !2438
  br label %do.cond86, !dbg !16948

do.cond86:                                        ; preds = %do.body84
  %46 = load i8, i8* %tmpb, align 1, !dbg !16949, !tbaa !2438
  %conv87 = zext i8 %46 to i32, !dbg !16949
  %47 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16950, !tbaa !2273
  %cmp88 = icmp eq i32 %conv87, %47, !dbg !16951
  br i1 %cmp88, label %do.body84, label %do.end90, !dbg !16948, !llvm.loop !16952

do.end90:                                         ; preds = %do.cond86
  br label %while.cond67, !dbg !16926, !llvm.loop !16954

while.end91:                                      ; preds = %land.end
  %48 = load i8, i8* %tmpa, align 1, !dbg !16956, !tbaa !2438
  %conv92 = zext i8 %48 to i32, !dbg !16956
  %49 = load i32, i32* %decimal_point.addr, align 4, !dbg !16958, !tbaa !2273
  %cmp93 = icmp eq i32 %conv92, %49, !dbg !16959
  br i1 %cmp93, label %land.lhs.true, label %lor.lhs.false, !dbg !16960

land.lhs.true:                                    ; preds = %while.end91
  %50 = load i8, i8* %tmpb, align 1, !dbg !16961, !tbaa !2438
  %conv95 = zext i8 %50 to i32, !dbg !16961
  %sub96 = sub i32 %conv95, 48, !dbg !16961
  %cmp97 = icmp ule i32 %sub96, 9, !dbg !16961
  br i1 %cmp97, label %lor.lhs.false, label %if.then107, !dbg !16962

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.end91
  %51 = load i8, i8* %tmpb, align 1, !dbg !16963, !tbaa !2438
  %conv99 = zext i8 %51 to i32, !dbg !16963
  %52 = load i32, i32* %decimal_point.addr, align 4, !dbg !16964, !tbaa !2273
  %cmp100 = icmp eq i32 %conv99, %52, !dbg !16965
  br i1 %cmp100, label %land.lhs.true102, label %if.end109, !dbg !16966

land.lhs.true102:                                 ; preds = %lor.lhs.false
  %53 = load i8, i8* %tmpa, align 1, !dbg !16967, !tbaa !2438
  %conv103 = zext i8 %53 to i32, !dbg !16967
  %sub104 = sub i32 %conv103, 48, !dbg !16967
  %cmp105 = icmp ule i32 %sub104, 9, !dbg !16967
  br i1 %cmp105, label %if.end109, label %if.then107, !dbg !16968

if.then107:                                       ; preds = %land.lhs.true102, %land.lhs.true
  %54 = load i8*, i8** %b.addr, align 8, !dbg !16969, !tbaa !2286
  %55 = load i8*, i8** %a.addr, align 8, !dbg !16970, !tbaa !2286
  %56 = load i32, i32* %decimal_point.addr, align 4, !dbg !16971, !tbaa !2273
  %conv108 = trunc i32 %56 to i8, !dbg !16971
  %call = call i32 @fraccompare(i8* %54, i8* %55, i8 signext %conv108) #14, !dbg !16972
  store i32 %call, i32* %retval, align 4, !dbg !16973
  br label %return, !dbg !16973

if.end109:                                        ; preds = %land.lhs.true102, %lor.lhs.false
  %57 = load i8, i8* %tmpb, align 1, !dbg !16974, !tbaa !2438
  %conv110 = zext i8 %57 to i32, !dbg !16974
  %58 = load i8, i8* %tmpa, align 1, !dbg !16975, !tbaa !2438
  %conv111 = zext i8 %58 to i32, !dbg !16975
  %sub112 = sub nsw i32 %conv110, %conv111, !dbg !16976
  store i32 %sub112, i32* %tmp, align 4, !dbg !16977, !tbaa !2273
  store i64 0, i64* %log_a, align 8, !dbg !16978, !tbaa !2447
  br label %for.cond, !dbg !16980

for.cond:                                         ; preds = %for.inc, %if.end109
  %59 = load i8, i8* %tmpa, align 1, !dbg !16981, !tbaa !2438
  %conv113 = zext i8 %59 to i32, !dbg !16981
  %sub114 = sub i32 %conv113, 48, !dbg !16981
  %cmp115 = icmp ule i32 %sub114, 9, !dbg !16981
  br i1 %cmp115, label %for.body, label %for.end, !dbg !16983

for.body:                                         ; preds = %for.cond
  br label %do.body117, !dbg !16984

do.body117:                                       ; preds = %do.cond119, %for.body
  %60 = load i8*, i8** %a.addr, align 8, !dbg !16985, !tbaa !2286
  %incdec.ptr118 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !16985
  store i8* %incdec.ptr118, i8** %a.addr, align 8, !dbg !16985, !tbaa !2286
  %61 = load i8, i8* %incdec.ptr118, align 1, !dbg !16986, !tbaa !2438, !ctir !89
  store i8 %61, i8* %tmpa, align 1, !dbg !16987, !tbaa !2438
  br label %do.cond119, !dbg !16988

do.cond119:                                       ; preds = %do.body117
  %62 = load i8, i8* %tmpa, align 1, !dbg !16989, !tbaa !2438
  %conv120 = zext i8 %62 to i32, !dbg !16989
  %63 = load i32, i32* %thousands_sep.addr, align 4, !dbg !16990, !tbaa !2273
  %cmp121 = icmp eq i32 %conv120, %63, !dbg !16991
  br i1 %cmp121, label %do.body117, label %do.end123, !dbg !16988, !llvm.loop !16992

do.end123:                                        ; preds = %do.cond119
  br label %for.inc, !dbg !16988

for.inc:                                          ; preds = %do.end123
  %64 = load i64, i64* %log_a, align 8, !dbg !16994, !tbaa !2447
  %inc = add i64 %64, 1, !dbg !16994
  store i64 %inc, i64* %log_a, align 8, !dbg !16994, !tbaa !2447
  br label %for.cond, !dbg !16995, !llvm.loop !16996

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %log_b, align 8, !dbg !16998, !tbaa !2447
  br label %for.cond124, !dbg !17000

for.cond124:                                      ; preds = %for.inc137, %for.end
  %65 = load i8, i8* %tmpb, align 1, !dbg !17001, !tbaa !2438
  %conv125 = zext i8 %65 to i32, !dbg !17001
  %sub126 = sub i32 %conv125, 48, !dbg !17001
  %cmp127 = icmp ule i32 %sub126, 9, !dbg !17001
  br i1 %cmp127, label %for.body129, label %for.end139, !dbg !17003

for.body129:                                      ; preds = %for.cond124
  br label %do.body130, !dbg !17004

do.body130:                                       ; preds = %do.cond132, %for.body129
  %66 = load i8*, i8** %b.addr, align 8, !dbg !17005, !tbaa !2286
  %incdec.ptr131 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !17005
  store i8* %incdec.ptr131, i8** %b.addr, align 8, !dbg !17005, !tbaa !2286
  %67 = load i8, i8* %incdec.ptr131, align 1, !dbg !17006, !tbaa !2438, !ctir !89
  store i8 %67, i8* %tmpb, align 1, !dbg !17007, !tbaa !2438
  br label %do.cond132, !dbg !17008

do.cond132:                                       ; preds = %do.body130
  %68 = load i8, i8* %tmpb, align 1, !dbg !17009, !tbaa !2438
  %conv133 = zext i8 %68 to i32, !dbg !17009
  %69 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17010, !tbaa !2273
  %cmp134 = icmp eq i32 %conv133, %69, !dbg !17011
  br i1 %cmp134, label %do.body130, label %do.end136, !dbg !17008, !llvm.loop !17012

do.end136:                                        ; preds = %do.cond132
  br label %for.inc137, !dbg !17008

for.inc137:                                       ; preds = %do.end136
  %70 = load i64, i64* %log_b, align 8, !dbg !17014, !tbaa !2447
  %inc138 = add i64 %70, 1, !dbg !17014
  store i64 %inc138, i64* %log_b, align 8, !dbg !17014, !tbaa !2447
  br label %for.cond124, !dbg !17015, !llvm.loop !17016

for.end139:                                       ; preds = %for.cond124
  %71 = load i64, i64* %log_a, align 8, !dbg !17018, !tbaa !2447
  %72 = load i64, i64* %log_b, align 8, !dbg !17020, !tbaa !2447
  %cmp140 = icmp ne i64 %71, %72, !dbg !17021
  br i1 %cmp140, label %if.then142, label %if.end145, !dbg !17022

if.then142:                                       ; preds = %for.end139
  %73 = load i64, i64* %log_a, align 8, !dbg !17023, !tbaa !2447
  %74 = load i64, i64* %log_b, align 8, !dbg !17024, !tbaa !2447
  %cmp143 = icmp ult i64 %73, %74, !dbg !17025
  %75 = zext i1 %cmp143 to i64, !dbg !17023
  %cond = select i1 %cmp143, i32 1, i32 -1, !dbg !17023
  store i32 %cond, i32* %retval, align 4, !dbg !17026
  br label %return, !dbg !17026

if.end145:                                        ; preds = %for.end139
  %76 = load i64, i64* %log_a, align 8, !dbg !17027, !tbaa !2447
  %tobool = icmp ne i64 %76, 0, !dbg !17027
  br i1 %tobool, label %if.end147, label %if.then146, !dbg !17029

if.then146:                                       ; preds = %if.end145
  store i32 0, i32* %retval, align 4, !dbg !17030
  br label %return, !dbg !17030

if.end147:                                        ; preds = %if.end145
  %77 = load i32, i32* %tmp, align 4, !dbg !17031, !tbaa !2273
  store i32 %77, i32* %retval, align 4, !dbg !17032
  br label %return, !dbg !17032

if.else:                                          ; preds = %entry
  %78 = load i8, i8* %tmpb, align 1, !dbg !17033, !tbaa !2438
  %conv148 = zext i8 %78 to i32, !dbg !17033
  %cmp149 = icmp eq i32 %conv148, 45, !dbg !17035
  br i1 %cmp149, label %if.then151, label %if.else210, !dbg !17036

if.then151:                                       ; preds = %if.else
  br label %do.body152, !dbg !17037

do.body152:                                       ; preds = %lor.end162, %if.then151
  %79 = load i8*, i8** %b.addr, align 8, !dbg !17039, !tbaa !2286
  %incdec.ptr153 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !17039
  store i8* %incdec.ptr153, i8** %b.addr, align 8, !dbg !17039, !tbaa !2286
  %80 = load i8, i8* %incdec.ptr153, align 1, !dbg !17040, !tbaa !2438, !ctir !89
  store i8 %80, i8* %tmpb, align 1, !dbg !17041, !tbaa !2438
  br label %do.cond154, !dbg !17042

do.cond154:                                       ; preds = %do.body152
  %81 = load i8, i8* %tmpb, align 1, !dbg !17043, !tbaa !2438
  %conv155 = zext i8 %81 to i32, !dbg !17043
  %cmp156 = icmp eq i32 %conv155, 48, !dbg !17044
  br i1 %cmp156, label %lor.end162, label %lor.rhs158, !dbg !17045

lor.rhs158:                                       ; preds = %do.cond154
  %82 = load i8, i8* %tmpb, align 1, !dbg !17046, !tbaa !2438
  %conv159 = zext i8 %82 to i32, !dbg !17046
  %83 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17047, !tbaa !2273
  %cmp160 = icmp eq i32 %conv159, %83, !dbg !17048
  br label %lor.end162, !dbg !17045

lor.end162:                                       ; preds = %lor.rhs158, %do.cond154
  %84 = phi i1 [ true, %do.cond154 ], [ %cmp160, %lor.rhs158 ]
  br i1 %84, label %do.body152, label %do.end163, !dbg !17042, !llvm.loop !17049

do.end163:                                        ; preds = %lor.end162
  %85 = load i8, i8* %tmpb, align 1, !dbg !17051, !tbaa !2438
  %conv164 = zext i8 %85 to i32, !dbg !17051
  %86 = load i32, i32* %decimal_point.addr, align 4, !dbg !17053, !tbaa !2273
  %cmp165 = icmp eq i32 %conv164, %86, !dbg !17054
  br i1 %cmp165, label %if.then167, label %if.end175, !dbg !17055

if.then167:                                       ; preds = %do.end163
  br label %do.body168, !dbg !17056

do.body168:                                       ; preds = %do.cond170, %if.then167
  %87 = load i8*, i8** %b.addr, align 8, !dbg !17057, !tbaa !2286
  %incdec.ptr169 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !17057
  store i8* %incdec.ptr169, i8** %b.addr, align 8, !dbg !17057, !tbaa !2286
  %88 = load i8, i8* %incdec.ptr169, align 1, !dbg !17058, !tbaa !2438, !ctir !89
  store i8 %88, i8* %tmpb, align 1, !dbg !17059, !tbaa !2438
  br label %do.cond170, !dbg !17060

do.cond170:                                       ; preds = %do.body168
  %89 = load i8, i8* %tmpb, align 1, !dbg !17061, !tbaa !2438
  %conv171 = zext i8 %89 to i32, !dbg !17061
  %cmp172 = icmp eq i32 %conv171, 48, !dbg !17062
  br i1 %cmp172, label %do.body168, label %do.end174, !dbg !17060, !llvm.loop !17063

do.end174:                                        ; preds = %do.cond170
  br label %if.end175, !dbg !17060

if.end175:                                        ; preds = %do.end174, %do.end163
  %90 = load i8, i8* %tmpb, align 1, !dbg !17065, !tbaa !2438
  %conv176 = zext i8 %90 to i32, !dbg !17065
  %sub177 = sub i32 %conv176, 48, !dbg !17065
  %cmp178 = icmp ule i32 %sub177, 9, !dbg !17065
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !17067

if.then180:                                       ; preds = %if.end175
  store i32 1, i32* %retval, align 4, !dbg !17068
  br label %return, !dbg !17068

if.end181:                                        ; preds = %if.end175
  br label %while.cond182, !dbg !17069

while.cond182:                                    ; preds = %while.body191, %if.end181
  %91 = load i8, i8* %tmpa, align 1, !dbg !17070, !tbaa !2438
  %conv183 = zext i8 %91 to i32, !dbg !17070
  %cmp184 = icmp eq i32 %conv183, 48, !dbg !17071
  br i1 %cmp184, label %lor.end190, label %lor.rhs186, !dbg !17072

lor.rhs186:                                       ; preds = %while.cond182
  %92 = load i8, i8* %tmpa, align 1, !dbg !17073, !tbaa !2438
  %conv187 = zext i8 %92 to i32, !dbg !17073
  %93 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17074, !tbaa !2273
  %cmp188 = icmp eq i32 %conv187, %93, !dbg !17075
  br label %lor.end190, !dbg !17072

lor.end190:                                       ; preds = %lor.rhs186, %while.cond182
  %94 = phi i1 [ true, %while.cond182 ], [ %cmp188, %lor.rhs186 ]
  br i1 %94, label %while.body191, label %while.end193, !dbg !17069

while.body191:                                    ; preds = %lor.end190
  %95 = load i8*, i8** %a.addr, align 8, !dbg !17076, !tbaa !2286
  %incdec.ptr192 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !17076
  store i8* %incdec.ptr192, i8** %a.addr, align 8, !dbg !17076, !tbaa !2286
  %96 = load i8, i8* %incdec.ptr192, align 1, !dbg !17077, !tbaa !2438, !ctir !89
  store i8 %96, i8* %tmpa, align 1, !dbg !17078, !tbaa !2438
  br label %while.cond182, !dbg !17069, !llvm.loop !17079

while.end193:                                     ; preds = %lor.end190
  %97 = load i8, i8* %tmpa, align 1, !dbg !17081, !tbaa !2438
  %conv194 = zext i8 %97 to i32, !dbg !17081
  %98 = load i32, i32* %decimal_point.addr, align 4, !dbg !17083, !tbaa !2273
  %cmp195 = icmp eq i32 %conv194, %98, !dbg !17084
  br i1 %cmp195, label %if.then197, label %if.end205, !dbg !17085

if.then197:                                       ; preds = %while.end193
  br label %do.body198, !dbg !17086

do.body198:                                       ; preds = %do.cond200, %if.then197
  %99 = load i8*, i8** %a.addr, align 8, !dbg !17087, !tbaa !2286
  %incdec.ptr199 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !17087
  store i8* %incdec.ptr199, i8** %a.addr, align 8, !dbg !17087, !tbaa !2286
  %100 = load i8, i8* %incdec.ptr199, align 1, !dbg !17088, !tbaa !2438, !ctir !89
  store i8 %100, i8* %tmpa, align 1, !dbg !17089, !tbaa !2438
  br label %do.cond200, !dbg !17090

do.cond200:                                       ; preds = %do.body198
  %101 = load i8, i8* %tmpa, align 1, !dbg !17091, !tbaa !2438
  %conv201 = zext i8 %101 to i32, !dbg !17091
  %cmp202 = icmp eq i32 %conv201, 48, !dbg !17092
  br i1 %cmp202, label %do.body198, label %do.end204, !dbg !17090, !llvm.loop !17093

do.end204:                                        ; preds = %do.cond200
  br label %if.end205, !dbg !17090

if.end205:                                        ; preds = %do.end204, %while.end193
  %102 = load i8, i8* %tmpa, align 1, !dbg !17095, !tbaa !2438
  %conv206 = zext i8 %102 to i32, !dbg !17095
  %sub207 = sub i32 %conv206, 48, !dbg !17095
  %cmp208 = icmp ule i32 %sub207, 9, !dbg !17095
  %conv209 = zext i1 %cmp208 to i32, !dbg !17095
  store i32 %conv209, i32* %retval, align 4, !dbg !17096
  br label %return, !dbg !17096

if.else210:                                       ; preds = %if.else
  br label %while.cond211, !dbg !17097

while.cond211:                                    ; preds = %while.body220, %if.else210
  %103 = load i8, i8* %tmpa, align 1, !dbg !17099, !tbaa !2438
  %conv212 = zext i8 %103 to i32, !dbg !17099
  %cmp213 = icmp eq i32 %conv212, 48, !dbg !17100
  br i1 %cmp213, label %lor.end219, label %lor.rhs215, !dbg !17101

lor.rhs215:                                       ; preds = %while.cond211
  %104 = load i8, i8* %tmpa, align 1, !dbg !17102, !tbaa !2438
  %conv216 = zext i8 %104 to i32, !dbg !17102
  %105 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17103, !tbaa !2273
  %cmp217 = icmp eq i32 %conv216, %105, !dbg !17104
  br label %lor.end219, !dbg !17101

lor.end219:                                       ; preds = %lor.rhs215, %while.cond211
  %106 = phi i1 [ true, %while.cond211 ], [ %cmp217, %lor.rhs215 ]
  br i1 %106, label %while.body220, label %while.end222, !dbg !17097

while.body220:                                    ; preds = %lor.end219
  %107 = load i8*, i8** %a.addr, align 8, !dbg !17105, !tbaa !2286
  %incdec.ptr221 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !17105
  store i8* %incdec.ptr221, i8** %a.addr, align 8, !dbg !17105, !tbaa !2286
  %108 = load i8, i8* %incdec.ptr221, align 1, !dbg !17106, !tbaa !2438, !ctir !89
  store i8 %108, i8* %tmpa, align 1, !dbg !17107, !tbaa !2438
  br label %while.cond211, !dbg !17097, !llvm.loop !17108

while.end222:                                     ; preds = %lor.end219
  br label %while.cond223, !dbg !17110

while.cond223:                                    ; preds = %while.body232, %while.end222
  %109 = load i8, i8* %tmpb, align 1, !dbg !17111, !tbaa !2438
  %conv224 = zext i8 %109 to i32, !dbg !17111
  %cmp225 = icmp eq i32 %conv224, 48, !dbg !17112
  br i1 %cmp225, label %lor.end231, label %lor.rhs227, !dbg !17113

lor.rhs227:                                       ; preds = %while.cond223
  %110 = load i8, i8* %tmpb, align 1, !dbg !17114, !tbaa !2438
  %conv228 = zext i8 %110 to i32, !dbg !17114
  %111 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17115, !tbaa !2273
  %cmp229 = icmp eq i32 %conv228, %111, !dbg !17116
  br label %lor.end231, !dbg !17113

lor.end231:                                       ; preds = %lor.rhs227, %while.cond223
  %112 = phi i1 [ true, %while.cond223 ], [ %cmp229, %lor.rhs227 ]
  br i1 %112, label %while.body232, label %while.end234, !dbg !17110

while.body232:                                    ; preds = %lor.end231
  %113 = load i8*, i8** %b.addr, align 8, !dbg !17117, !tbaa !2286
  %incdec.ptr233 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !17117
  store i8* %incdec.ptr233, i8** %b.addr, align 8, !dbg !17117, !tbaa !2286
  %114 = load i8, i8* %incdec.ptr233, align 1, !dbg !17118, !tbaa !2438, !ctir !89
  store i8 %114, i8* %tmpb, align 1, !dbg !17119, !tbaa !2438
  br label %while.cond223, !dbg !17110, !llvm.loop !17120

while.end234:                                     ; preds = %lor.end231
  br label %while.cond235, !dbg !17122

while.cond235:                                    ; preds = %do.end260, %while.end234
  %115 = load i8, i8* %tmpa, align 1, !dbg !17123, !tbaa !2438
  %conv236 = zext i8 %115 to i32, !dbg !17123
  %116 = load i8, i8* %tmpb, align 1, !dbg !17124, !tbaa !2438
  %conv237 = zext i8 %116 to i32, !dbg !17124
  %cmp238 = icmp eq i32 %conv236, %conv237, !dbg !17125
  br i1 %cmp238, label %land.rhs240, label %land.end245, !dbg !17126

land.rhs240:                                      ; preds = %while.cond235
  %117 = load i8, i8* %tmpa, align 1, !dbg !17127, !tbaa !2438
  %conv241 = zext i8 %117 to i32, !dbg !17127
  %sub242 = sub i32 %conv241, 48, !dbg !17127
  %cmp243 = icmp ule i32 %sub242, 9, !dbg !17127
  br label %land.end245

land.end245:                                      ; preds = %land.rhs240, %while.cond235
  %118 = phi i1 [ false, %while.cond235 ], [ %cmp243, %land.rhs240 ], !dbg !17128
  br i1 %118, label %while.body246, label %while.end261, !dbg !17122

while.body246:                                    ; preds = %land.end245
  br label %do.body247, !dbg !17129

do.body247:                                       ; preds = %do.cond249, %while.body246
  %119 = load i8*, i8** %a.addr, align 8, !dbg !17131, !tbaa !2286
  %incdec.ptr248 = getelementptr inbounds i8, i8* %119, i32 1, !dbg !17131
  store i8* %incdec.ptr248, i8** %a.addr, align 8, !dbg !17131, !tbaa !2286
  %120 = load i8, i8* %incdec.ptr248, align 1, !dbg !17132, !tbaa !2438, !ctir !89
  store i8 %120, i8* %tmpa, align 1, !dbg !17133, !tbaa !2438
  br label %do.cond249, !dbg !17134

do.cond249:                                       ; preds = %do.body247
  %121 = load i8, i8* %tmpa, align 1, !dbg !17135, !tbaa !2438
  %conv250 = zext i8 %121 to i32, !dbg !17135
  %122 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17136, !tbaa !2273
  %cmp251 = icmp eq i32 %conv250, %122, !dbg !17137
  br i1 %cmp251, label %do.body247, label %do.end253, !dbg !17134, !llvm.loop !17138

do.end253:                                        ; preds = %do.cond249
  br label %do.body254, !dbg !17140

do.body254:                                       ; preds = %do.cond256, %do.end253
  %123 = load i8*, i8** %b.addr, align 8, !dbg !17141, !tbaa !2286
  %incdec.ptr255 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !17141
  store i8* %incdec.ptr255, i8** %b.addr, align 8, !dbg !17141, !tbaa !2286
  %124 = load i8, i8* %incdec.ptr255, align 1, !dbg !17142, !tbaa !2438, !ctir !89
  store i8 %124, i8* %tmpb, align 1, !dbg !17143, !tbaa !2438
  br label %do.cond256, !dbg !17144

do.cond256:                                       ; preds = %do.body254
  %125 = load i8, i8* %tmpb, align 1, !dbg !17145, !tbaa !2438
  %conv257 = zext i8 %125 to i32, !dbg !17145
  %126 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17146, !tbaa !2273
  %cmp258 = icmp eq i32 %conv257, %126, !dbg !17147
  br i1 %cmp258, label %do.body254, label %do.end260, !dbg !17144, !llvm.loop !17148

do.end260:                                        ; preds = %do.cond256
  br label %while.cond235, !dbg !17122, !llvm.loop !17150

while.end261:                                     ; preds = %land.end245
  %127 = load i8, i8* %tmpa, align 1, !dbg !17152, !tbaa !2438
  %conv262 = zext i8 %127 to i32, !dbg !17152
  %128 = load i32, i32* %decimal_point.addr, align 4, !dbg !17154, !tbaa !2273
  %cmp263 = icmp eq i32 %conv262, %128, !dbg !17155
  br i1 %cmp263, label %land.lhs.true265, label %lor.lhs.false270, !dbg !17156

land.lhs.true265:                                 ; preds = %while.end261
  %129 = load i8, i8* %tmpb, align 1, !dbg !17157, !tbaa !2438
  %conv266 = zext i8 %129 to i32, !dbg !17157
  %sub267 = sub i32 %conv266, 48, !dbg !17157
  %cmp268 = icmp ule i32 %sub267, 9, !dbg !17157
  br i1 %cmp268, label %lor.lhs.false270, label %if.then279, !dbg !17158

lor.lhs.false270:                                 ; preds = %land.lhs.true265, %while.end261
  %130 = load i8, i8* %tmpb, align 1, !dbg !17159, !tbaa !2438
  %conv271 = zext i8 %130 to i32, !dbg !17159
  %131 = load i32, i32* %decimal_point.addr, align 4, !dbg !17160, !tbaa !2273
  %cmp272 = icmp eq i32 %conv271, %131, !dbg !17161
  br i1 %cmp272, label %land.lhs.true274, label %if.end282, !dbg !17162

land.lhs.true274:                                 ; preds = %lor.lhs.false270
  %132 = load i8, i8* %tmpa, align 1, !dbg !17163, !tbaa !2438
  %conv275 = zext i8 %132 to i32, !dbg !17163
  %sub276 = sub i32 %conv275, 48, !dbg !17163
  %cmp277 = icmp ule i32 %sub276, 9, !dbg !17163
  br i1 %cmp277, label %if.end282, label %if.then279, !dbg !17164

if.then279:                                       ; preds = %land.lhs.true274, %land.lhs.true265
  %133 = load i8*, i8** %a.addr, align 8, !dbg !17165, !tbaa !2286
  %134 = load i8*, i8** %b.addr, align 8, !dbg !17166, !tbaa !2286
  %135 = load i32, i32* %decimal_point.addr, align 4, !dbg !17167, !tbaa !2273
  %conv280 = trunc i32 %135 to i8, !dbg !17167
  %call281 = call i32 @fraccompare(i8* %133, i8* %134, i8 signext %conv280) #14, !dbg !17168
  store i32 %call281, i32* %retval, align 4, !dbg !17169
  br label %return, !dbg !17169

if.end282:                                        ; preds = %land.lhs.true274, %lor.lhs.false270
  %136 = load i8, i8* %tmpa, align 1, !dbg !17170, !tbaa !2438
  %conv283 = zext i8 %136 to i32, !dbg !17170
  %137 = load i8, i8* %tmpb, align 1, !dbg !17171, !tbaa !2438
  %conv284 = zext i8 %137 to i32, !dbg !17171
  %sub285 = sub nsw i32 %conv283, %conv284, !dbg !17172
  store i32 %sub285, i32* %tmp, align 4, !dbg !17173, !tbaa !2273
  store i64 0, i64* %log_a, align 8, !dbg !17174, !tbaa !2447
  br label %for.cond286, !dbg !17176

for.cond286:                                      ; preds = %for.inc299, %if.end282
  %138 = load i8, i8* %tmpa, align 1, !dbg !17177, !tbaa !2438
  %conv287 = zext i8 %138 to i32, !dbg !17177
  %sub288 = sub i32 %conv287, 48, !dbg !17177
  %cmp289 = icmp ule i32 %sub288, 9, !dbg !17177
  br i1 %cmp289, label %for.body291, label %for.end301, !dbg !17179

for.body291:                                      ; preds = %for.cond286
  br label %do.body292, !dbg !17180

do.body292:                                       ; preds = %do.cond294, %for.body291
  %139 = load i8*, i8** %a.addr, align 8, !dbg !17181, !tbaa !2286
  %incdec.ptr293 = getelementptr inbounds i8, i8* %139, i32 1, !dbg !17181
  store i8* %incdec.ptr293, i8** %a.addr, align 8, !dbg !17181, !tbaa !2286
  %140 = load i8, i8* %incdec.ptr293, align 1, !dbg !17182, !tbaa !2438, !ctir !89
  store i8 %140, i8* %tmpa, align 1, !dbg !17183, !tbaa !2438
  br label %do.cond294, !dbg !17184

do.cond294:                                       ; preds = %do.body292
  %141 = load i8, i8* %tmpa, align 1, !dbg !17185, !tbaa !2438
  %conv295 = zext i8 %141 to i32, !dbg !17185
  %142 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17186, !tbaa !2273
  %cmp296 = icmp eq i32 %conv295, %142, !dbg !17187
  br i1 %cmp296, label %do.body292, label %do.end298, !dbg !17184, !llvm.loop !17188

do.end298:                                        ; preds = %do.cond294
  br label %for.inc299, !dbg !17184

for.inc299:                                       ; preds = %do.end298
  %143 = load i64, i64* %log_a, align 8, !dbg !17190, !tbaa !2447
  %inc300 = add i64 %143, 1, !dbg !17190
  store i64 %inc300, i64* %log_a, align 8, !dbg !17190, !tbaa !2447
  br label %for.cond286, !dbg !17191, !llvm.loop !17192

for.end301:                                       ; preds = %for.cond286
  store i64 0, i64* %log_b, align 8, !dbg !17194, !tbaa !2447
  br label %for.cond302, !dbg !17196

for.cond302:                                      ; preds = %for.inc315, %for.end301
  %144 = load i8, i8* %tmpb, align 1, !dbg !17197, !tbaa !2438
  %conv303 = zext i8 %144 to i32, !dbg !17197
  %sub304 = sub i32 %conv303, 48, !dbg !17197
  %cmp305 = icmp ule i32 %sub304, 9, !dbg !17197
  br i1 %cmp305, label %for.body307, label %for.end317, !dbg !17199

for.body307:                                      ; preds = %for.cond302
  br label %do.body308, !dbg !17200

do.body308:                                       ; preds = %do.cond310, %for.body307
  %145 = load i8*, i8** %b.addr, align 8, !dbg !17201, !tbaa !2286
  %incdec.ptr309 = getelementptr inbounds i8, i8* %145, i32 1, !dbg !17201
  store i8* %incdec.ptr309, i8** %b.addr, align 8, !dbg !17201, !tbaa !2286
  %146 = load i8, i8* %incdec.ptr309, align 1, !dbg !17202, !tbaa !2438, !ctir !89
  store i8 %146, i8* %tmpb, align 1, !dbg !17203, !tbaa !2438
  br label %do.cond310, !dbg !17204

do.cond310:                                       ; preds = %do.body308
  %147 = load i8, i8* %tmpb, align 1, !dbg !17205, !tbaa !2438
  %conv311 = zext i8 %147 to i32, !dbg !17205
  %148 = load i32, i32* %thousands_sep.addr, align 4, !dbg !17206, !tbaa !2273
  %cmp312 = icmp eq i32 %conv311, %148, !dbg !17207
  br i1 %cmp312, label %do.body308, label %do.end314, !dbg !17204, !llvm.loop !17208

do.end314:                                        ; preds = %do.cond310
  br label %for.inc315, !dbg !17204

for.inc315:                                       ; preds = %do.end314
  %149 = load i64, i64* %log_b, align 8, !dbg !17210, !tbaa !2447
  %inc316 = add i64 %149, 1, !dbg !17210
  store i64 %inc316, i64* %log_b, align 8, !dbg !17210, !tbaa !2447
  br label %for.cond302, !dbg !17211, !llvm.loop !17212

for.end317:                                       ; preds = %for.cond302
  %150 = load i64, i64* %log_a, align 8, !dbg !17214, !tbaa !2447
  %151 = load i64, i64* %log_b, align 8, !dbg !17216, !tbaa !2447
  %cmp318 = icmp ne i64 %150, %151, !dbg !17217
  br i1 %cmp318, label %if.then320, label %if.end324, !dbg !17218

if.then320:                                       ; preds = %for.end317
  %152 = load i64, i64* %log_a, align 8, !dbg !17219, !tbaa !2447
  %153 = load i64, i64* %log_b, align 8, !dbg !17220, !tbaa !2447
  %cmp321 = icmp ult i64 %152, %153, !dbg !17221
  %154 = zext i1 %cmp321 to i64, !dbg !17219
  %cond323 = select i1 %cmp321, i32 -1, i32 1, !dbg !17219
  store i32 %cond323, i32* %retval, align 4, !dbg !17222
  br label %return, !dbg !17222

if.end324:                                        ; preds = %for.end317
  %155 = load i64, i64* %log_a, align 8, !dbg !17223, !tbaa !2447
  %tobool325 = icmp ne i64 %155, 0, !dbg !17223
  br i1 %tobool325, label %if.end327, label %if.then326, !dbg !17225

if.then326:                                       ; preds = %if.end324
  store i32 0, i32* %retval, align 4, !dbg !17226
  br label %return, !dbg !17226

if.end327:                                        ; preds = %if.end324
  %156 = load i32, i32* %tmp, align 4, !dbg !17227, !tbaa !2273
  store i32 %156, i32* %retval, align 4, !dbg !17228
  br label %return, !dbg !17228

return:                                           ; preds = %if.end327, %if.then326, %if.then320, %if.then279, %if.end205, %if.then180, %if.end147, %if.then146, %if.then142, %if.then107, %if.end48, %if.then26
  %157 = load i32, i32* %retval, align 4, !dbg !17229
  ret i32 %157, !dbg !17229
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @fraccompare(i8* %a, i8* %b, i8 signext %decimal_point) #9 !dbg !17230 !ctir !1841 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %decimal_point.addr = alloca i8, align 1
  store i8* %a, i8** %a.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !17231, metadata !DIExpression()), !dbg !17232
  store i8* %b, i8** %b.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !17233, metadata !DIExpression()), !dbg !17234
  store i8 %decimal_point, i8* %decimal_point.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %decimal_point.addr, metadata !17235, metadata !DIExpression()), !dbg !17236
  %0 = load i8*, i8** %a.addr, align 8, !dbg !17237, !tbaa !2286
  %1 = load i8, i8* %0, align 1, !dbg !17239, !tbaa !2438, !ctir !89
  %conv = sext i8 %1 to i32, !dbg !17239
  %2 = load i8, i8* %decimal_point.addr, align 1, !dbg !17240, !tbaa !2438
  %conv1 = sext i8 %2 to i32, !dbg !17240
  %cmp = icmp eq i32 %conv, %conv1, !dbg !17241
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !17242

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %b.addr, align 8, !dbg !17243, !tbaa !2286
  %4 = load i8, i8* %3, align 1, !dbg !17244, !tbaa !2438, !ctir !89
  %conv3 = sext i8 %4 to i32, !dbg !17244
  %5 = load i8, i8* %decimal_point.addr, align 1, !dbg !17245, !tbaa !2438
  %conv4 = sext i8 %5 to i32, !dbg !17245
  %cmp5 = icmp eq i32 %conv3, %conv4, !dbg !17246
  br i1 %cmp5, label %if.then, label %if.else, !dbg !17247

if.then:                                          ; preds = %land.lhs.true
  br label %while.cond, !dbg !17248

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load i8*, i8** %a.addr, align 8, !dbg !17250, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !17250
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !17250, !tbaa !2286
  %7 = load i8, i8* %incdec.ptr, align 1, !dbg !17251, !tbaa !2438, !ctir !89
  %conv7 = sext i8 %7 to i32, !dbg !17251
  %8 = load i8*, i8** %b.addr, align 8, !dbg !17252, !tbaa !2286
  %incdec.ptr8 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !17252
  store i8* %incdec.ptr8, i8** %b.addr, align 8, !dbg !17252, !tbaa !2286
  %9 = load i8, i8* %incdec.ptr8, align 1, !dbg !17253, !tbaa !2438, !ctir !89
  %conv9 = sext i8 %9 to i32, !dbg !17253
  %cmp10 = icmp eq i32 %conv7, %conv9, !dbg !17254
  br i1 %cmp10, label %while.body, label %while.end, !dbg !17248

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %a.addr, align 8, !dbg !17255, !tbaa !2286
  %11 = load i8, i8* %10, align 1, !dbg !17255, !tbaa !2438, !ctir !89
  %conv12 = sext i8 %11 to i32, !dbg !17255
  %sub = sub i32 %conv12, 48, !dbg !17255
  %cmp13 = icmp ule i32 %sub, 9, !dbg !17255
  br i1 %cmp13, label %if.end, label %if.then15, !dbg !17257

if.then15:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !17258
  br label %return, !dbg !17258

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !17248, !llvm.loop !17259

while.end:                                        ; preds = %while.cond
  %12 = load i8*, i8** %a.addr, align 8, !dbg !17261, !tbaa !2286
  %13 = load i8, i8* %12, align 1, !dbg !17261, !tbaa !2438, !ctir !89
  %conv16 = sext i8 %13 to i32, !dbg !17261
  %sub17 = sub i32 %conv16, 48, !dbg !17261
  %cmp18 = icmp ule i32 %sub17, 9, !dbg !17261
  br i1 %cmp18, label %land.lhs.true20, label %if.end29, !dbg !17263

land.lhs.true20:                                  ; preds = %while.end
  %14 = load i8*, i8** %b.addr, align 8, !dbg !17264, !tbaa !2286
  %15 = load i8, i8* %14, align 1, !dbg !17264, !tbaa !2438, !ctir !89
  %conv21 = sext i8 %15 to i32, !dbg !17264
  %sub22 = sub i32 %conv21, 48, !dbg !17264
  %cmp23 = icmp ule i32 %sub22, 9, !dbg !17264
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !17265

if.then25:                                        ; preds = %land.lhs.true20
  %16 = load i8*, i8** %a.addr, align 8, !dbg !17266, !tbaa !2286
  %17 = load i8, i8* %16, align 1, !dbg !17267, !tbaa !2438, !ctir !89
  %conv26 = sext i8 %17 to i32, !dbg !17267
  %18 = load i8*, i8** %b.addr, align 8, !dbg !17268, !tbaa !2286
  %19 = load i8, i8* %18, align 1, !dbg !17269, !tbaa !2438, !ctir !89
  %conv27 = sext i8 %19 to i32, !dbg !17269
  %sub28 = sub nsw i32 %conv26, %conv27, !dbg !17270
  store i32 %sub28, i32* %retval, align 4, !dbg !17271
  br label %return, !dbg !17271

if.end29:                                         ; preds = %land.lhs.true20, %while.end
  %20 = load i8*, i8** %a.addr, align 8, !dbg !17272, !tbaa !2286
  %21 = load i8, i8* %20, align 1, !dbg !17272, !tbaa !2438, !ctir !89
  %conv30 = sext i8 %21 to i32, !dbg !17272
  %sub31 = sub i32 %conv30, 48, !dbg !17272
  %cmp32 = icmp ule i32 %sub31, 9, !dbg !17272
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !17274

if.then34:                                        ; preds = %if.end29
  br label %a_trailing_nonzero, !dbg !17275

if.end35:                                         ; preds = %if.end29
  %22 = load i8*, i8** %b.addr, align 8, !dbg !17276, !tbaa !2286
  %23 = load i8, i8* %22, align 1, !dbg !17276, !tbaa !2438, !ctir !89
  %conv36 = sext i8 %23 to i32, !dbg !17276
  %sub37 = sub i32 %conv36, 48, !dbg !17276
  %cmp38 = icmp ule i32 %sub37, 9, !dbg !17276
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !17278

if.then40:                                        ; preds = %if.end35
  br label %b_trailing_nonzero, !dbg !17279

if.end41:                                         ; preds = %if.end35
  store i32 0, i32* %retval, align 4, !dbg !17280
  br label %return, !dbg !17280

if.else:                                          ; preds = %land.lhs.true, %entry
  %24 = load i8*, i8** %a.addr, align 8, !dbg !17281, !tbaa !2286
  %incdec.ptr42 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !17281
  store i8* %incdec.ptr42, i8** %a.addr, align 8, !dbg !17281, !tbaa !2286
  %25 = load i8, i8* %24, align 1, !dbg !17283, !tbaa !2438, !ctir !89
  %conv43 = sext i8 %25 to i32, !dbg !17283
  %26 = load i8, i8* %decimal_point.addr, align 1, !dbg !17284, !tbaa !2438
  %conv44 = sext i8 %26 to i32, !dbg !17284
  %cmp45 = icmp eq i32 %conv43, %conv44, !dbg !17285
  br i1 %cmp45, label %if.then47, label %if.else59, !dbg !17286

if.then47:                                        ; preds = %if.else
  br label %a_trailing_nonzero, !dbg !17287

a_trailing_nonzero:                               ; preds = %if.then47, %if.then34
  call void @llvm.dbg.label(metadata !17288), !dbg !17290
  br label %while.cond48, !dbg !17291

while.cond48:                                     ; preds = %while.body52, %a_trailing_nonzero
  %27 = load i8*, i8** %a.addr, align 8, !dbg !17292, !tbaa !2286
  %28 = load i8, i8* %27, align 1, !dbg !17293, !tbaa !2438, !ctir !89
  %conv49 = sext i8 %28 to i32, !dbg !17293
  %cmp50 = icmp eq i32 %conv49, 48, !dbg !17294
  br i1 %cmp50, label %while.body52, label %while.end54, !dbg !17291

while.body52:                                     ; preds = %while.cond48
  %29 = load i8*, i8** %a.addr, align 8, !dbg !17295, !tbaa !2286
  %incdec.ptr53 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !17295
  store i8* %incdec.ptr53, i8** %a.addr, align 8, !dbg !17295, !tbaa !2286
  br label %while.cond48, !dbg !17291, !llvm.loop !17296

while.end54:                                      ; preds = %while.cond48
  %30 = load i8*, i8** %a.addr, align 8, !dbg !17297, !tbaa !2286
  %31 = load i8, i8* %30, align 1, !dbg !17297, !tbaa !2438, !ctir !89
  %conv55 = sext i8 %31 to i32, !dbg !17297
  %sub56 = sub i32 %conv55, 48, !dbg !17297
  %cmp57 = icmp ule i32 %sub56, 9, !dbg !17297
  %conv58 = zext i1 %cmp57 to i32, !dbg !17297
  store i32 %conv58, i32* %retval, align 4, !dbg !17298
  br label %return, !dbg !17298

if.else59:                                        ; preds = %if.else
  %32 = load i8*, i8** %b.addr, align 8, !dbg !17299, !tbaa !2286
  %incdec.ptr60 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !17299
  store i8* %incdec.ptr60, i8** %b.addr, align 8, !dbg !17299, !tbaa !2286
  %33 = load i8, i8* %32, align 1, !dbg !17301, !tbaa !2438, !ctir !89
  %conv61 = sext i8 %33 to i32, !dbg !17301
  %34 = load i8, i8* %decimal_point.addr, align 1, !dbg !17302, !tbaa !2438
  %conv62 = sext i8 %34 to i32, !dbg !17302
  %cmp63 = icmp eq i32 %conv61, %conv62, !dbg !17303
  br i1 %cmp63, label %if.then65, label %if.end78, !dbg !17304

if.then65:                                        ; preds = %if.else59
  br label %b_trailing_nonzero, !dbg !17305

b_trailing_nonzero:                               ; preds = %if.then65, %if.then40
  call void @llvm.dbg.label(metadata !17306), !dbg !17308
  br label %while.cond66, !dbg !17309

while.cond66:                                     ; preds = %while.body70, %b_trailing_nonzero
  %35 = load i8*, i8** %b.addr, align 8, !dbg !17310, !tbaa !2286
  %36 = load i8, i8* %35, align 1, !dbg !17311, !tbaa !2438, !ctir !89
  %conv67 = sext i8 %36 to i32, !dbg !17311
  %cmp68 = icmp eq i32 %conv67, 48, !dbg !17312
  br i1 %cmp68, label %while.body70, label %while.end72, !dbg !17309

while.body70:                                     ; preds = %while.cond66
  %37 = load i8*, i8** %b.addr, align 8, !dbg !17313, !tbaa !2286
  %incdec.ptr71 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !17313
  store i8* %incdec.ptr71, i8** %b.addr, align 8, !dbg !17313, !tbaa !2286
  br label %while.cond66, !dbg !17309, !llvm.loop !17314

while.end72:                                      ; preds = %while.cond66
  %38 = load i8*, i8** %b.addr, align 8, !dbg !17315, !tbaa !2286
  %39 = load i8, i8* %38, align 1, !dbg !17315, !tbaa !2438, !ctir !89
  %conv73 = sext i8 %39 to i32, !dbg !17315
  %sub74 = sub i32 %conv73, 48, !dbg !17315
  %cmp75 = icmp ule i32 %sub74, 9, !dbg !17315
  %conv76 = zext i1 %cmp75 to i32, !dbg !17315
  %sub77 = sub nsw i32 0, %conv76, !dbg !17316
  store i32 %sub77, i32* %retval, align 4, !dbg !17317
  br label %return, !dbg !17317

if.end78:                                         ; preds = %if.else59
  br label %if.end79

if.end79:                                         ; preds = %if.end78
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  store i32 0, i32* %retval, align 4, !dbg !17318
  br label %return, !dbg !17318

return:                                           ; preds = %if.end80, %while.end72, %while.end54, %if.end41, %if.then25, %if.then15
  %40 = load i32, i32* %retval, align 4, !dbg !17319
  ret i32 %40, !dbg !17319
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !17320 !ctir !1846 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17322, metadata !DIExpression()), !dbg !17323
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17324, !tbaa !2273
  %cmp = icmp sle i32 0, %0, !dbg !17326
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17327

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !17328, !tbaa !2273
  %cmp1 = icmp sle i32 %1, 2, !dbg !17329
  br i1 %cmp1, label %if.then, label %if.end, !dbg !17330

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17331, metadata !DIExpression()), !dbg !17333
  %2 = load i32, i32* %fd.addr, align 4, !dbg !17334, !tbaa !2273
  %call = call i32 @dup_safer(i32 %2), !dbg !17335
  store i32 %call, i32* %f, align 4, !dbg !17333, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17336, metadata !DIExpression()), !dbg !17337
  %call2 = call i32* @__errno_location() #16, !dbg !17338
  %3 = load i32, i32* %call2, align 4, !dbg !17338, !tbaa !2273, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !17337, !tbaa !2273
  %4 = load i32, i32* %fd.addr, align 4, !dbg !17339, !tbaa !2273
  %call3 = call i32 @close(i32 %4), !dbg !17340
  %5 = load i32, i32* %e, align 4, !dbg !17341, !tbaa !2273
  %call4 = call i32* @__errno_location() #16, !dbg !17342
  store i32 %5, i32* %call4, align 4, !dbg !17343, !tbaa !2273, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !17344, !tbaa !2273
  store i32 %6, i32* %fd.addr, align 4, !dbg !17345, !tbaa !2273
  br label %if.end, !dbg !17346

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !17347, !tbaa !2273
  ret i32 %7, !dbg !17348
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17349 !ctir !1851 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17351, metadata !DIExpression()), !dbg !17352
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17353, metadata !DIExpression()), !dbg !17354
  store i8* %package, i8** %package.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17355, metadata !DIExpression()), !dbg !17356
  store i8* %version, i8** %version.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17357, metadata !DIExpression()), !dbg !17358
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17359, metadata !DIExpression()), !dbg !17360
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17361, metadata !DIExpression()), !dbg !17362
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17363, !tbaa !2286
  %tobool = icmp ne i8* %0, null, !dbg !17363
  br i1 %tobool, label %if.then, label %if.else, !dbg !17365

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17366, !tbaa !2286
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17367, !tbaa !2286
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17368, !tbaa !2286
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17369, !tbaa !2286
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.305, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17370
  br label %if.end, !dbg !17370

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17371, !tbaa !2286
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17372, !tbaa !2286
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17373, !tbaa !2286
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.306, i64 0, i64 0), i8* %6, i8* %7), !dbg !17374
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17375, !tbaa !2286
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.307, i64 0, i64 0)) #12, !dbg !17376
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17377
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.308, i64 0, i64 0)) #12, !dbg !17378
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17378, !tbaa !2286
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !17378
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !17379, !tbaa !2447
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb6
    i64 2, label %sw.bb9
    i64 3, label %sw.bb14
    i64 4, label %sw.bb20
    i64 5, label %sw.bb27
    i64 6, label %sw.bb35
    i64 7, label %sw.bb44
    i64 8, label %sw.bb54
    i64 9, label %sw.bb65
  ], !dbg !17380

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17381

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17383, !tbaa !2286
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.309, i64 0, i64 0)) #12, !dbg !17384
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !17385, !tbaa !2286
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !17385, !ctir !828
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !17385, !tbaa !2286
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !17386
  br label %sw.epilog, !dbg !17387

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17388, !tbaa !2286
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.310, i64 0, i64 0)) #12, !dbg !17389
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !17390, !tbaa !2286
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !17390, !ctir !828
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !17390, !tbaa !2286
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17391, !tbaa !2286
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !17391, !ctir !828
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !17391, !tbaa !2286
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !17392
  br label %sw.epilog, !dbg !17393

sw.bb14:                                          ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17394, !tbaa !2286
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.311, i64 0, i64 0)) #12, !dbg !17395
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !17396, !tbaa !2286
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !17396, !ctir !828
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !17396, !tbaa !2286
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17397, !tbaa !2286
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !17397, !ctir !828
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !17397, !tbaa !2286
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17398, !tbaa !2286
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !17398, !ctir !828
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !17398, !tbaa !2286
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !17399
  br label %sw.epilog, !dbg !17400

sw.bb20:                                          ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17401, !tbaa !2286
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.312, i64 0, i64 0)) #12, !dbg !17402
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !17403, !tbaa !2286
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !17403, !ctir !828
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !17403, !tbaa !2286
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17404, !tbaa !2286
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !17404, !ctir !828
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !17404, !tbaa !2286
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17405, !tbaa !2286
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !17405, !ctir !828
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !17405, !tbaa !2286
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17406, !tbaa !2286
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !17406, !ctir !828
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !17406, !tbaa !2286
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !17407
  br label %sw.epilog, !dbg !17408

sw.bb27:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17409, !tbaa !2286
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.313, i64 0, i64 0)) #12, !dbg !17410
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !17411, !tbaa !2286
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !17411, !ctir !828
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !17411, !tbaa !2286
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17412, !tbaa !2286
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !17412, !ctir !828
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !17412, !tbaa !2286
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17413, !tbaa !2286
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !17413, !ctir !828
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !17413, !tbaa !2286
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17414, !tbaa !2286
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !17414, !ctir !828
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !17414, !tbaa !2286
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17415, !tbaa !2286
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !17415, !ctir !828
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !17415, !tbaa !2286
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !17416
  br label %sw.epilog, !dbg !17417

sw.bb35:                                          ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17418, !tbaa !2286
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.314, i64 0, i64 0)) #12, !dbg !17419
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !17420, !tbaa !2286
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !17420, !ctir !828
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !17420, !tbaa !2286
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17421, !tbaa !2286
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !17421, !ctir !828
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !17421, !tbaa !2286
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17422, !tbaa !2286
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !17422, !ctir !828
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !17422, !tbaa !2286
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17423, !tbaa !2286
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !17423, !ctir !828
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !17423, !tbaa !2286
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17424, !tbaa !2286
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !17424, !ctir !828
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !17424, !tbaa !2286
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17425, !tbaa !2286
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !17425, !ctir !828
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !17425, !tbaa !2286
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !17426
  br label %sw.epilog, !dbg !17427

sw.bb44:                                          ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17428, !tbaa !2286
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.315, i64 0, i64 0)) #12, !dbg !17429
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !17430, !tbaa !2286
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !17430, !ctir !828
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !17430, !tbaa !2286
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17431, !tbaa !2286
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !17431, !ctir !828
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !17431, !tbaa !2286
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17432, !tbaa !2286
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !17432, !ctir !828
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !17432, !tbaa !2286
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17433, !tbaa !2286
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !17433, !ctir !828
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !17433, !tbaa !2286
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17434, !tbaa !2286
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !17434, !ctir !828
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !17434, !tbaa !2286
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17435, !tbaa !2286
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !17435, !ctir !828
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !17435, !tbaa !2286
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17436, !tbaa !2286
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !17436, !ctir !828
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !17436, !tbaa !2286
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !17437
  br label %sw.epilog, !dbg !17438

sw.bb54:                                          ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17439, !tbaa !2286
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.316, i64 0, i64 0)) #12, !dbg !17440
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !17441, !tbaa !2286
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !17441, !ctir !828
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !17441, !tbaa !2286
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17442, !tbaa !2286
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !17442, !ctir !828
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !17442, !tbaa !2286
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17443, !tbaa !2286
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !17443, !ctir !828
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !17443, !tbaa !2286
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17444, !tbaa !2286
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !17444, !ctir !828
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !17444, !tbaa !2286
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17445, !tbaa !2286
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !17445, !ctir !828
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !17445, !tbaa !2286
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17446, !tbaa !2286
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !17446, !ctir !828
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !17446, !tbaa !2286
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17447, !tbaa !2286
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !17447, !ctir !828
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !17447, !tbaa !2286
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17448, !tbaa !2286
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !17448, !ctir !828
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !17448, !tbaa !2286
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !17449
  br label %sw.epilog, !dbg !17450

sw.bb65:                                          ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17451, !tbaa !2286
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.317, i64 0, i64 0)) #12, !dbg !17452
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !17453, !tbaa !2286
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !17453, !ctir !828
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !17453, !tbaa !2286
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17454, !tbaa !2286
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !17454, !ctir !828
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !17454, !tbaa !2286
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17455, !tbaa !2286
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !17455, !ctir !828
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !17455, !tbaa !2286
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17456, !tbaa !2286
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !17456, !ctir !828
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !17456, !tbaa !2286
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17457, !tbaa !2286
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !17457, !ctir !828
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !17457, !tbaa !2286
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17458, !tbaa !2286
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !17458, !ctir !828
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !17458, !tbaa !2286
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17459, !tbaa !2286
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !17459, !ctir !828
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !17459, !tbaa !2286
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17460, !tbaa !2286
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !17460, !ctir !828
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !17460, !tbaa !2286
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17461, !tbaa !2286
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !17461, !ctir !828
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !17461, !tbaa !2286
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !17462
  br label %sw.epilog, !dbg !17463

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17464, !tbaa !2286
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.318, i64 0, i64 0)) #12, !dbg !17465
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !17466, !tbaa !2286
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !17466, !ctir !828
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !17466, !tbaa !2286
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17467, !tbaa !2286
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !17467, !ctir !828
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !17467, !tbaa !2286
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17468, !tbaa !2286
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !17468, !ctir !828
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !17468, !tbaa !2286
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17469, !tbaa !2286
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !17469, !ctir !828
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !17469, !tbaa !2286
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17470, !tbaa !2286
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !17470, !ctir !828
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !17470, !tbaa !2286
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17471, !tbaa !2286
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !17471, !ctir !828
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !17471, !tbaa !2286
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17472, !tbaa !2286
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !17472, !ctir !828
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !17472, !tbaa !2286
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17473, !tbaa !2286
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !17473, !ctir !828
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !17473, !tbaa !2286
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17474, !tbaa !2286
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !17474, !ctir !828
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !17474, !tbaa !2286
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !17475
  br label %sw.epilog, !dbg !17476

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb54, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb20, %sw.bb14, %sw.bb9, %sw.bb6, %sw.bb
  ret void, !dbg !17477
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17478 !ctir !1888 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17479, metadata !DIExpression()), !dbg !17480
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17481, metadata !DIExpression()), !dbg !17482
  store i8* %package, i8** %package.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17483, metadata !DIExpression()), !dbg !17484
  store i8* %version, i8** %version.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17485, metadata !DIExpression()), !dbg !17486
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17487, metadata !DIExpression()), !dbg !17488
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17489, metadata !DIExpression()), !dbg !17490
  store i64 0, i64* %n_authors, align 8, !dbg !17491, !tbaa !2447
  br label %for.cond, !dbg !17493

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17494, !tbaa !2286
  %1 = load i64, i64* %n_authors, align 8, !dbg !17496, !tbaa !2447
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17494, !ctir !828
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17494, !tbaa !2286
  %tobool = icmp ne i8* %2, null, !dbg !17497
  br i1 %tobool, label %for.body, label %for.end, !dbg !17497

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17497

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17498, !tbaa !2447
  %inc = add i64 %3, 1, !dbg !17498
  store i64 %inc, i64* %n_authors, align 8, !dbg !17498, !tbaa !2447
  br label %for.cond, !dbg !17499, !llvm.loop !17500

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17502, !tbaa !2286
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17503, !tbaa !2286
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17504, !tbaa !2286
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17505, !tbaa !2286
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17506, !tbaa !2286
  %9 = load i64, i64* %n_authors, align 8, !dbg !17507, !tbaa !2447
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17508
  ret void, !dbg !17509
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17510 !ctir !1890 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !1899
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17511, metadata !DIExpression()), !dbg !17512
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17513, metadata !DIExpression()), !dbg !17514
  store i8* %package, i8** %package.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17515, metadata !DIExpression()), !dbg !17516
  store i8* %version, i8** %version.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17517, metadata !DIExpression()), !dbg !17518
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17519, metadata !DIExpression()), !dbg !17520
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17521, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17523, metadata !DIExpression()), !dbg !17524
  store i64 0, i64* %n_authors, align 8, !dbg !17525, !tbaa !2447
  br label %for.cond, !dbg !17527

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17528, !tbaa !2447
  %cmp = icmp ult i64 %0, 10, !dbg !17530
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17531

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17532, !tbaa !2286
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17532
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17532
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17532
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17532

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17532
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17532
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17532
  %4 = bitcast i8* %3 to i8**, !dbg !17532
  %5 = add i32 %gp_offset, 8, !dbg !17532
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17532
  br label %vaarg.end, !dbg !17532

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17532
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17532
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17532
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17532
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17532
  br label %vaarg.end, !dbg !17532

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17532
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17532
  %8 = load i64, i64* %n_authors, align 8, !dbg !17533, !tbaa !2447
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17534, !ctir !1899
  store i8* %7, i8** %arrayidx, align 8, !dbg !17535, !tbaa !2286
  %cmp1 = icmp ne i8* %7, null, !dbg !17536
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17537
  br i1 %9, label %for.body, label %for.end, !dbg !17538

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17538

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17539, !tbaa !2447
  %inc = add i64 %10, 1, !dbg !17539
  store i64 %inc, i64* %n_authors, align 8, !dbg !17539, !tbaa !2447
  br label %for.cond, !dbg !17540, !llvm.loop !17541

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17543, !tbaa !2286
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17544, !tbaa !2286
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17545, !tbaa !2286
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17546, !tbaa !2286
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17547
  %15 = load i64, i64* %n_authors, align 8, !dbg !17548, !tbaa !2447
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17549
  ret void, !dbg !17550
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17551 !ctir !1900 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1902
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17554, metadata !DIExpression()), !dbg !17555
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17556, metadata !DIExpression()), !dbg !17557
  store i8* %package, i8** %package.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17558, metadata !DIExpression()), !dbg !17559
  store i8* %version, i8** %version.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17560, metadata !DIExpression()), !dbg !17561
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17562, metadata !DIExpression()), !dbg !17563
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17564
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17564
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17564
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17565, !tbaa !2286
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17566, !tbaa !2286
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17567, !tbaa !2286
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17568, !tbaa !2286
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17569
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17570
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17571
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17571
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17571
  ret void, !dbg !17572
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17573 !ctir !168 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i64 0, i64 0)) #12, !dbg !17574
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.322, i64 0, i64 0)), !dbg !17575
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.323, i64 0, i64 0)) #12, !dbg !17576
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.324, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.325, i64 0, i64 0)), !dbg !17577
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19.326, i64 0, i64 0)) #12, !dbg !17578
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17578, !tbaa !2286
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !17578
  ret void, !dbg !17579
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17580 !ctir !1909 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17582, metadata !DIExpression()), !dbg !17583
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17584, metadata !DIExpression()), !dbg !17585
  %0 = load i64, i64* %s.addr, align 8, !dbg !17586, !tbaa !2447
  %div = udiv i64 9223372036854775807, %0, !dbg !17586
  %1 = load i64, i64* %n.addr, align 8, !dbg !17586, !tbaa !2447
  %cmp = icmp ult i64 %div, %1, !dbg !17586
  br i1 %cmp, label %if.then, label %if.end, !dbg !17588

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !17589
  unreachable, !dbg !17589

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17590, !tbaa !2447
  %3 = load i64, i64* %s.addr, align 8, !dbg !17591, !tbaa !2447
  %mul = mul i64 %2, %3, !dbg !17592
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17593
  ret i8* %call, !dbg !17594
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17595 !ctir !1391 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17597, metadata !DIExpression()), !dbg !17598
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17599, metadata !DIExpression()), !dbg !17600
  %0 = load i64, i64* %n.addr, align 8, !dbg !17601, !tbaa !2447
  %call = call noalias i8* @malloc(i64 %0) #12, !dbg !17602
  store i8* %call, i8** %p, align 8, !dbg !17600, !tbaa !2286
  %1 = load i8*, i8** %p, align 8, !dbg !17603, !tbaa !2286
  %tobool = icmp ne i8* %1, null, !dbg !17603
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17605

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17606, !tbaa !2447
  %cmp = icmp ne i64 %2, 0, !dbg !17607
  br i1 %cmp, label %if.then, label %if.end, !dbg !17608

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !17609
  unreachable, !dbg !17609

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17610, !tbaa !2286
  ret i8* %3, !dbg !17611
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17612 !ctir !1911 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17613, metadata !DIExpression()), !dbg !17614
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17615, metadata !DIExpression()), !dbg !17616
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17617, metadata !DIExpression()), !dbg !17618
  %0 = load i64, i64* %s.addr, align 8, !dbg !17619, !tbaa !2447
  %div = udiv i64 9223372036854775807, %0, !dbg !17619
  %1 = load i64, i64* %n.addr, align 8, !dbg !17619, !tbaa !2447
  %cmp = icmp ult i64 %div, %1, !dbg !17619
  br i1 %cmp, label %if.then, label %if.end, !dbg !17621

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !17622
  unreachable, !dbg !17622

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17623, !tbaa !2286
  %3 = load i64, i64* %n.addr, align 8, !dbg !17624, !tbaa !2447
  %4 = load i64, i64* %s.addr, align 8, !dbg !17625, !tbaa !2447
  %mul = mul i64 %3, %4, !dbg !17626
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17627
  ret i8* %call, !dbg !17628
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17629 !ctir !1395 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17630, metadata !DIExpression()), !dbg !17631
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17632, metadata !DIExpression()), !dbg !17633
  %0 = load i64, i64* %n.addr, align 8, !dbg !17634, !tbaa !2447
  %tobool = icmp ne i64 %0, 0, !dbg !17634
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17636

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17637, !tbaa !2286
  %tobool1 = icmp ne i8* %1, null, !dbg !17637
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17638

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17639, !tbaa !2286
  call void @free(i8* %2) #12, !dbg !17641
  store i8* null, i8** %retval, align 8, !dbg !17642
  br label %return, !dbg !17642

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17643, !tbaa !2286
  %4 = load i64, i64* %n.addr, align 8, !dbg !17644, !tbaa !2447
  %call = call i8* @realloc(i8* %3, i64 %4) #12, !dbg !17645
  store i8* %call, i8** %p.addr, align 8, !dbg !17646, !tbaa !2286
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17647, !tbaa !2286
  %tobool2 = icmp ne i8* %5, null, !dbg !17647
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17649

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17650, !tbaa !2447
  %tobool4 = icmp ne i64 %6, 0, !dbg !17650
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17651

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !17652
  unreachable, !dbg !17652

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17653, !tbaa !2286
  store i8* %7, i8** %retval, align 8, !dbg !17654
  br label %return, !dbg !17654

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17655
  ret i8* %8, !dbg !17655
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17656 !ctir !1913 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17657, metadata !DIExpression()), !dbg !17658
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17659, metadata !DIExpression()), !dbg !17660
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17661, metadata !DIExpression()), !dbg !17662
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17663, metadata !DIExpression()), !dbg !17664
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17665, !tbaa !2286
  %1 = load i64, i64* %0, align 8, !dbg !17666, !tbaa !2447, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !17664, !tbaa !2447
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17667, !tbaa !2286
  %tobool = icmp ne i8* %2, null, !dbg !17667
  br i1 %tobool, label %if.else, label %if.then, !dbg !17669

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17670, !tbaa !2447
  %tobool1 = icmp ne i64 %3, 0, !dbg !17670
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17673

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17674, !tbaa !2447
  %div = udiv i64 128, %4, !dbg !17676
  store i64 %div, i64* %n, align 8, !dbg !17677, !tbaa !2447
  %5 = load i64, i64* %n, align 8, !dbg !17678, !tbaa !2447
  %tobool3 = icmp ne i64 %5, 0, !dbg !17679
  %lnot = xor i1 %tobool3, true, !dbg !17679
  %lnot.ext = zext i1 %lnot to i32, !dbg !17679
  %conv = sext i32 %lnot.ext to i64, !dbg !17679
  %6 = load i64, i64* %n, align 8, !dbg !17680, !tbaa !2447
  %add = add i64 %6, %conv, !dbg !17680
  store i64 %add, i64* %n, align 8, !dbg !17680, !tbaa !2447
  br label %if.end, !dbg !17681

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !17682, !tbaa !2447
  %div4 = udiv i64 9223372036854775807, %7, !dbg !17682
  %8 = load i64, i64* %n, align 8, !dbg !17682, !tbaa !2447
  %cmp = icmp ult i64 %div4, %8, !dbg !17682
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !17684

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !17685
  unreachable, !dbg !17685

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !17686

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !17687, !tbaa !2447
  %div8 = udiv i64 6148914691236517204, %9, !dbg !17690
  %10 = load i64, i64* %n, align 8, !dbg !17691, !tbaa !2447
  %cmp9 = icmp ule i64 %div8, %10, !dbg !17692
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17693

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !17694
  unreachable, !dbg !17694

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !17695, !tbaa !2447
  %div13 = udiv i64 %11, 2, !dbg !17696
  %add14 = add i64 %div13, 1, !dbg !17697
  %12 = load i64, i64* %n, align 8, !dbg !17698, !tbaa !2447
  %add15 = add i64 %12, %add14, !dbg !17698
  store i64 %add15, i64* %n, align 8, !dbg !17698, !tbaa !2447
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !17699, !tbaa !2447
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !17700, !tbaa !2286
  store i64 %13, i64* %14, align 8, !dbg !17701, !tbaa !2447, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !17702, !tbaa !2286
  %16 = load i64, i64* %n, align 8, !dbg !17703, !tbaa !2447
  %17 = load i64, i64* %s.addr, align 8, !dbg !17704, !tbaa !2447
  %mul = mul i64 %16, %17, !dbg !17705
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !17706
  ret i8* %call, !dbg !17707
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !17708 !ctir !1915 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17709, metadata !DIExpression()), !dbg !17710
  %0 = load i64, i64* %n.addr, align 8, !dbg !17711, !tbaa !2447
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17711
  ret i8* %call, !dbg !17712
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !17713 !ctir !1917 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17714, metadata !DIExpression()), !dbg !17715
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17716, metadata !DIExpression()), !dbg !17717
  %0 = load i8*, i8** %p.addr, align 8, !dbg !17718, !tbaa !2286
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !17719, !tbaa !2286
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !17720
  ret i8* %call, !dbg !17721
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !17722 !ctir !1391 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17723, metadata !DIExpression()), !dbg !17724
  %0 = load i64, i64* %s.addr, align 8, !dbg !17725, !tbaa !2447
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17726
  %1 = load i64, i64* %s.addr, align 8, !dbg !17727, !tbaa !2447
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !17728
  ret i8* %call, !dbg !17729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !17730 !ctir !1909 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17731, metadata !DIExpression()), !dbg !17732
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17733, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17735, metadata !DIExpression()), !dbg !17736
  %0 = load i64, i64* %s.addr, align 8, !dbg !17737, !tbaa !2447
  %div = udiv i64 9223372036854775807, %0, !dbg !17737
  %1 = load i64, i64* %n.addr, align 8, !dbg !17737, !tbaa !2447
  %cmp = icmp ult i64 %div, %1, !dbg !17737
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17739

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17740, !tbaa !2447
  %3 = load i64, i64* %s.addr, align 8, !dbg !17741, !tbaa !2447
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #12, !dbg !17742
  store i8* %call, i8** %p, align 8, !dbg !17743, !tbaa !2286
  %tobool = icmp ne i8* %call, null, !dbg !17743
  br i1 %tobool, label %if.end, label %if.then, !dbg !17744

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !17745
  unreachable, !dbg !17745

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !17746, !tbaa !2286
  ret i8* %4, !dbg !17747
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !17748 !ctir !1919 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17749, metadata !DIExpression()), !dbg !17750
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17751, metadata !DIExpression()), !dbg !17752
  %0 = load i64, i64* %s.addr, align 8, !dbg !17753, !tbaa !2447
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17754
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17755, !tbaa !2286
  %2 = load i64, i64* %s.addr, align 8, !dbg !17756, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !17757
  ret i8* %call, !dbg !17758
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !17759 !ctir !1259 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !17760, metadata !DIExpression()), !dbg !17761
  %0 = load i8*, i8** %string.addr, align 8, !dbg !17762, !tbaa !2286
  %1 = load i8*, i8** %string.addr, align 8, !dbg !17763, !tbaa !2286
  %call = call i64 @strlen(i8* %1) #14, !dbg !17764
  %add = add i64 %call, 1, !dbg !17765
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !17766
  ret i8* %call1, !dbg !17767
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !17768 !ctir !168 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !17770, !tbaa !2273
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.345, i64 0, i64 0)) #12, !dbg !17771
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.346, i64 0, i64 0), i8* %call), !dbg !17772
  call void @abort() #13, !dbg !17773
  unreachable, !dbg !17773
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xmemcoll(i8* %s1, i64 %s1len, i8* %s2, i64 %s2len) #4 !dbg !17774 !ctir !1927 {
entry:
  %s1.addr = alloca i8*, align 8
  %s1len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2len.addr = alloca i64, align 8
  %diff = alloca i32, align 4, !ctir !7
  %collation_errno = alloca i32, align 4, !ctir !7
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !17776, metadata !DIExpression()), !dbg !17777
  store i64 %s1len, i64* %s1len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1len.addr, metadata !17778, metadata !DIExpression()), !dbg !17779
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !17780, metadata !DIExpression()), !dbg !17781
  store i64 %s2len, i64* %s2len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2len.addr, metadata !17782, metadata !DIExpression()), !dbg !17783
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !17784, metadata !DIExpression()), !dbg !17785
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !17786, !tbaa !2286
  %1 = load i64, i64* %s1len.addr, align 8, !dbg !17787, !tbaa !2447
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !17788, !tbaa !2286
  %3 = load i64, i64* %s2len.addr, align 8, !dbg !17789, !tbaa !2447
  %call = call i32 @memcoll(i8* %0, i64 %1, i8* %2, i64 %3), !dbg !17790
  store i32 %call, i32* %diff, align 4, !dbg !17785, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %collation_errno, metadata !17791, metadata !DIExpression()), !dbg !17792
  %call1 = call i32* @__errno_location() #16, !dbg !17793
  %4 = load i32, i32* %call1, align 4, !dbg !17793, !tbaa !2273, !ctir !7
  store i32 %4, i32* %collation_errno, align 4, !dbg !17792, !tbaa !2273
  %5 = load i32, i32* %collation_errno, align 4, !dbg !17794, !tbaa !2273
  %tobool = icmp ne i32 %5, 0, !dbg !17794
  br i1 %tobool, label %if.then, label %if.end, !dbg !17796

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %collation_errno, align 4, !dbg !17797, !tbaa !2273
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !17798, !tbaa !2286
  %8 = load i64, i64* %s1len.addr, align 8, !dbg !17799, !tbaa !2447
  %9 = load i8*, i8** %s2.addr, align 8, !dbg !17800, !tbaa !2286
  %10 = load i64, i64* %s2len.addr, align 8, !dbg !17801, !tbaa !2447
  call void @collate_error(i32 %6, i8* %7, i64 %8, i8* %9, i64 %10), !dbg !17802
  br label %if.end, !dbg !17802

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %diff, align 4, !dbg !17803, !tbaa !2273
  ret i32 %11, !dbg !17804
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @collate_error(i32 %collation_errno, i8* %s1, i64 %s1len, i8* %s2, i64 %s2len) #4 !dbg !17805 !ctir !1929 {
entry:
  %collation_errno.addr = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2len.addr = alloca i64, align 8
  store i32 %collation_errno, i32* %collation_errno.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %collation_errno.addr, metadata !17806, metadata !DIExpression()), !dbg !17807
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !17808, metadata !DIExpression()), !dbg !17809
  store i64 %s1len, i64* %s1len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1len.addr, metadata !17810, metadata !DIExpression()), !dbg !17811
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !17812, metadata !DIExpression()), !dbg !17813
  store i64 %s2len, i64* %s2len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2len.addr, metadata !17814, metadata !DIExpression()), !dbg !17815
  %0 = load i32, i32* %collation_errno.addr, align 4, !dbg !17816, !tbaa !2273
  %call = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.347, i64 0, i64 0)) #12, !dbg !17817
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %0, i8* %call), !dbg !17818
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.348, i64 0, i64 0)) #12, !dbg !17819
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call1), !dbg !17820
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !17821, !tbaa !2273
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.349, i64 0, i64 0)) #12, !dbg !17822
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !17823, !tbaa !2286
  %3 = load i64, i64* %s1len.addr, align 8, !dbg !17824, !tbaa !2447
  %call3 = call i8* @quotearg_n_style_mem(i32 0, i32 8, i8* %2, i64 %3), !dbg !17825
  %4 = load i8*, i8** %s2.addr, align 8, !dbg !17826, !tbaa !2286
  %5 = load i64, i64* %s2len.addr, align 8, !dbg !17827, !tbaa !2447
  %call4 = call i8* @quotearg_n_style_mem(i32 1, i32 8, i8* %4, i64 %5), !dbg !17828
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* %call2, i8* %call3, i8* %call4), !dbg !17829
  ret void, !dbg !17830
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xmemcoll0(i8* %s1, i64 %s1size, i8* %s2, i64 %s2size) #4 !dbg !17831 !ctir !1517 {
entry:
  %s1.addr = alloca i8*, align 8
  %s1size.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2size.addr = alloca i64, align 8
  %diff = alloca i32, align 4, !ctir !7
  %collation_errno = alloca i32, align 4, !ctir !7
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !17832, metadata !DIExpression()), !dbg !17833
  store i64 %s1size, i64* %s1size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1size.addr, metadata !17834, metadata !DIExpression()), !dbg !17835
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !17836, metadata !DIExpression()), !dbg !17837
  store i64 %s2size, i64* %s2size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2size.addr, metadata !17838, metadata !DIExpression()), !dbg !17839
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !17840, metadata !DIExpression()), !dbg !17841
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !17842, !tbaa !2286
  %1 = load i64, i64* %s1size.addr, align 8, !dbg !17843, !tbaa !2447
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !17844, !tbaa !2286
  %3 = load i64, i64* %s2size.addr, align 8, !dbg !17845, !tbaa !2447
  %call = call i32 @memcoll0(i8* %0, i64 %1, i8* %2, i64 %3), !dbg !17846
  store i32 %call, i32* %diff, align 4, !dbg !17841, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %collation_errno, metadata !17847, metadata !DIExpression()), !dbg !17848
  %call1 = call i32* @__errno_location() #16, !dbg !17849
  %4 = load i32, i32* %call1, align 4, !dbg !17849, !tbaa !2273, !ctir !7
  store i32 %4, i32* %collation_errno, align 4, !dbg !17848, !tbaa !2273
  %5 = load i32, i32* %collation_errno, align 4, !dbg !17850, !tbaa !2273
  %tobool = icmp ne i32 %5, 0, !dbg !17850
  br i1 %tobool, label %if.then, label %if.end, !dbg !17852

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %collation_errno, align 4, !dbg !17853, !tbaa !2273
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !17854, !tbaa !2286
  %8 = load i64, i64* %s1size.addr, align 8, !dbg !17855, !tbaa !2447
  %sub = sub i64 %8, 1, !dbg !17856
  %9 = load i8*, i8** %s2.addr, align 8, !dbg !17857, !tbaa !2286
  %10 = load i64, i64* %s2size.addr, align 8, !dbg !17858, !tbaa !2447
  %sub2 = sub i64 %10, 1, !dbg !17859
  call void @collate_error(i32 %6, i8* %7, i64 %sub, i8* %9, i64 %sub2), !dbg !17860
  br label %if.end, !dbg !17860

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %diff, align 4, !dbg !17861, !tbaa !2273
  ret i32 %11, !dbg !17862
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xnanosleep(double %seconds) #4 !dbg !17863 !ctir !1934 {
entry:
  %retval = alloca i32, align 4
  %seconds.addr = alloca double, align 8
  %ts_sleep = alloca %struct.timespec, align 8, !ctir !17865
  store double %seconds, double* %seconds.addr, align 8, !tbaa !3865
  call void @llvm.dbg.declare(metadata double* %seconds.addr, metadata !17869, metadata !DIExpression()), !dbg !17870
  call void @llvm.dbg.declare(metadata %struct.timespec* %ts_sleep, metadata !17871, metadata !DIExpression()), !dbg !17872
  %0 = load double, double* %seconds.addr, align 8, !dbg !17873, !tbaa !3865
  %call = call { i64, i64 } @dtotimespec(double %0) #16, !dbg !17874
  %1 = bitcast %struct.timespec* %ts_sleep to { i64, i64 }*, !dbg !17874
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !17874
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !17874
  store i64 %3, i64* %2, align 8, !dbg !17874
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !17874
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !17874
  store i64 %5, i64* %4, align 8, !dbg !17874
  br label %for.cond, !dbg !17875

for.cond:                                         ; preds = %if.end8, %entry
  %call1 = call i32* @__errno_location() #16, !dbg !17876
  store i32 0, i32* %call1, align 4, !dbg !17880, !tbaa !2273, !ctir !7
  %call2 = call i32 @rpl_nanosleep(%struct.timespec* %ts_sleep, %struct.timespec* null), !dbg !17881
  %cmp = icmp eq i32 %call2, 0, !dbg !17883
  br i1 %cmp, label %if.then, label %if.end, !dbg !17884

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !17885

if.end:                                           ; preds = %for.cond
  %call3 = call i32* @__errno_location() #16, !dbg !17886
  %6 = load i32, i32* %call3, align 4, !dbg !17886, !tbaa !2273, !ctir !7
  %cmp4 = icmp ne i32 %6, 4, !dbg !17888
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !17889

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !17890
  %7 = load i32, i32* %call5, align 4, !dbg !17890, !tbaa !2273, !ctir !7
  %cmp6 = icmp ne i32 %7, 0, !dbg !17891
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !17892

if.then7:                                         ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17893
  br label %return, !dbg !17893

if.end8:                                          ; preds = %land.lhs.true, %if.end
  br label %for.cond, !dbg !17894, !llvm.loop !17895

for.end:                                          ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !17898
  br label %return, !dbg !17898

return:                                           ; preds = %for.end, %if.then7
  %8 = load i32, i32* %retval, align 4, !dbg !17899
  ret i32 %8, !dbg !17899
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !17900 !ctir !1940 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !9
  %p = alloca i8**, align 8, !ctir !92
  %tmp = alloca i64, align 8, !ctir !57
  %err = alloca i32, align 4, !ctir !1942
  %q = alloca i8*, align 8, !ctir !88
  %ch = alloca i8, align 1, !ctir !321
  %base = alloca i32, align 4, !ctir !7
  %suffixes = alloca i32, align 4, !ctir !7
  %overflow = alloca i32, align 4, !ctir !1942
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !17902, metadata !DIExpression()), !dbg !17903
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !17904, metadata !DIExpression()), !dbg !17905
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !17906, metadata !DIExpression()), !dbg !17907
  store i64* %val, i64** %val.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !17908, metadata !DIExpression()), !dbg !17909
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !17910, metadata !DIExpression()), !dbg !17911
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !17912, metadata !DIExpression()), !dbg !17913
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !17914, metadata !DIExpression()), !dbg !17915
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !17916, metadata !DIExpression()), !dbg !17917
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17918, metadata !DIExpression()), !dbg !17919
  store i32 0, i32* %err, align 4, !dbg !17919, !tbaa !2438
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !17920, !tbaa !2273
  %cmp = icmp sle i32 0, %0, !dbg !17920
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !17920

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !17920, !tbaa !2273
  %cmp1 = icmp sle i32 %1, 36, !dbg !17920
  br i1 %cmp1, label %if.then, label %if.else, !dbg !17923

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !17923

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.356, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.357, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !17920
  unreachable, !dbg !17920

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !17924, !tbaa !2286
  %tobool = icmp ne i8** %2, null, !dbg !17924
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17924

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !17925, !tbaa !2286
  br label %cond.end, !dbg !17924

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !17924

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !17924
  store i8** %cond, i8*** %p, align 8, !dbg !17926, !tbaa !2286
  %call = call i32* @__errno_location() #16, !dbg !17927
  store i32 0, i32* %call, align 4, !dbg !17928, !tbaa !2273, !ctir !7
  call void @llvm.dbg.declare(metadata i8** %q, metadata !17929, metadata !DIExpression()), !dbg !17932
  %4 = load i8*, i8** %s.addr, align 8, !dbg !17933, !tbaa !2286
  store i8* %4, i8** %q, align 8, !dbg !17932, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !17934, metadata !DIExpression()), !dbg !17935
  %5 = load i8*, i8** %q, align 8, !dbg !17936, !tbaa !2286
  %6 = load i8, i8* %5, align 1, !dbg !17937, !tbaa !2438, !ctir !89
  store i8 %6, i8* %ch, align 1, !dbg !17935, !tbaa !2438
  br label %while.cond, !dbg !17938

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #16, !dbg !17939
  %7 = load i16*, i16** %call2, align 8, !dbg !17939, !tbaa !2286, !ctir !325
  %8 = load i8, i8* %ch, align 1, !dbg !17939, !tbaa !2438
  %conv = zext i8 %8 to i32, !dbg !17939
  %idxprom = sext i32 %conv to i64, !dbg !17939
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !17939, !ctir !325
  %9 = load i16, i16* %arrayidx, align 2, !dbg !17939, !tbaa !3423
  %conv3 = zext i16 %9 to i32, !dbg !17939
  %and = and i32 %conv3, 8192, !dbg !17939
  %tobool4 = icmp ne i32 %and, 0, !dbg !17938
  br i1 %tobool4, label %while.body, label %while.end, !dbg !17938

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !17940, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !17940
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !17940, !tbaa !2286
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !17941, !tbaa !2438, !ctir !89
  store i8 %11, i8* %ch, align 1, !dbg !17942, !tbaa !2438
  br label %while.cond, !dbg !17938, !llvm.loop !17943

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !17945, !tbaa !2438
  %conv5 = zext i8 %12 to i32, !dbg !17945
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !17947
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !17948

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !17949
  br label %return, !dbg !17949

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !17950, !tbaa !2286
  %14 = load i8**, i8*** %p, align 8, !dbg !17951, !tbaa !2286
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !17952, !tbaa !2273
  %call10 = call i64 @strtoul(i8* %13, i8** %14, i32 %15) #12, !dbg !17953
  store i64 %call10, i64* %tmp, align 8, !dbg !17954, !tbaa !2447
  %16 = load i8**, i8*** %p, align 8, !dbg !17955, !tbaa !2286
  %17 = load i8*, i8** %16, align 8, !dbg !17957, !tbaa !2286, !ctir !9
  %18 = load i8*, i8** %s.addr, align 8, !dbg !17958, !tbaa !2286
  %cmp11 = icmp eq i8* %17, %18, !dbg !17959
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !17960

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !17961, !tbaa !2286
  %tobool14 = icmp ne i8* %19, null, !dbg !17961
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !17964

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !17965, !tbaa !2286
  %21 = load i8*, i8** %20, align 8, !dbg !17966, !tbaa !2286, !ctir !9
  %22 = load i8, i8* %21, align 1, !dbg !17967, !tbaa !2438, !ctir !10
  %conv16 = sext i8 %22 to i32, !dbg !17967
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !17967
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !17968

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !17969, !tbaa !2286
  %24 = load i8**, i8*** %p, align 8, !dbg !17970, !tbaa !2286
  %25 = load i8*, i8** %24, align 8, !dbg !17971, !tbaa !2286, !ctir !9
  %26 = load i8, i8* %25, align 1, !dbg !17972, !tbaa !2438, !ctir !10
  %conv19 = sext i8 %26 to i32, !dbg !17972
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #14, !dbg !17973
  %tobool21 = icmp ne i8* %call20, null, !dbg !17973
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !17974

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !17975, !tbaa !2447
  br label %if.end24, !dbg !17976

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !17977
  br label %return, !dbg !17977

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !17978

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #16, !dbg !17979
  %27 = load i32, i32* %call26, align 4, !dbg !17979, !tbaa !2273, !ctir !7
  %cmp27 = icmp ne i32 %27, 0, !dbg !17981
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !17982

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !17983
  %28 = load i32, i32* %call30, align 4, !dbg !17983, !tbaa !2273, !ctir !7
  %cmp31 = icmp ne i32 %28, 34, !dbg !17986
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !17987

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !17988
  br label %return, !dbg !17988

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !17989, !tbaa !2438
  br label %if.end35, !dbg !17990

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !17991, !tbaa !2286
  %tobool37 = icmp ne i8* %29, null, !dbg !17991
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !17993

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !17994, !tbaa !2447
  %31 = load i64*, i64** %val.addr, align 8, !dbg !17996, !tbaa !2286
  store i64 %30, i64* %31, align 8, !dbg !17997, !tbaa !2447, !ctir !57
  %32 = load i32, i32* %err, align 4, !dbg !17998, !tbaa !2438
  store i32 %32, i32* %retval, align 4, !dbg !17999
  br label %return, !dbg !17999

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !18000, !tbaa !2286
  %34 = load i8*, i8** %33, align 8, !dbg !18002, !tbaa !2286, !ctir !9
  %35 = load i8, i8* %34, align 1, !dbg !18003, !tbaa !2438, !ctir !10
  %conv40 = sext i8 %35 to i32, !dbg !18003
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18004
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18005

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18006, metadata !DIExpression()), !dbg !18008
  store i32 1024, i32* %base, align 4, !dbg !18008, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18009, metadata !DIExpression()), !dbg !18010
  store i32 1, i32* %suffixes, align 4, !dbg !18010, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18011, metadata !DIExpression()), !dbg !18012
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18013, !tbaa !2286
  %37 = load i8**, i8*** %p, align 8, !dbg !18015, !tbaa !2286
  %38 = load i8*, i8** %37, align 8, !dbg !18016, !tbaa !2286, !ctir !9
  %39 = load i8, i8* %38, align 1, !dbg !18017, !tbaa !2438, !ctir !10
  %conv44 = sext i8 %39 to i32, !dbg !18017
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #14, !dbg !18018
  %tobool46 = icmp ne i8* %call45, null, !dbg !18018
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18019

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !18020, !tbaa !2447
  %41 = load i64*, i64** %val.addr, align 8, !dbg !18022, !tbaa !2286
  store i64 %40, i64* %41, align 8, !dbg !18023, !tbaa !2447, !ctir !57
  %42 = load i32, i32* %err, align 4, !dbg !18024, !tbaa !2438
  %or = or i32 %42, 2, !dbg !18025
  store i32 %or, i32* %retval, align 4, !dbg !18026
  br label %return, !dbg !18026

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !18027, !tbaa !2286
  %44 = load i8*, i8** %43, align 8, !dbg !18028, !tbaa !2286, !ctir !9
  %45 = load i8, i8* %44, align 1, !dbg !18029, !tbaa !2438, !ctir !10
  %conv49 = sext i8 %45 to i32, !dbg !18029
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18030

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18031, !tbaa !2286
  %call50 = call i8* @strchr(i8* %46, i32 48) #14, !dbg !18034
  %tobool51 = icmp ne i8* %call50, null, !dbg !18034
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18035

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !18036, !tbaa !2286
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !18036, !ctir !92
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !18036, !tbaa !2286
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !18036, !ctir !9
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !18036, !tbaa !2438
  %conv55 = sext i8 %49 to i32, !dbg !18036
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18037

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !18038, !tbaa !2286
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !18038, !ctir !92
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !18038, !tbaa !2286
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !18038, !ctir !9
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !18038, !tbaa !2438
  %conv59 = sext i8 %52 to i32, !dbg !18038
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18041
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18042

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !18043, !tbaa !2273
  %add = add nsw i32 %53, 2, !dbg !18043
  store i32 %add, i32* %suffixes, align 4, !dbg !18043, !tbaa !2273
  br label %if.end63, !dbg !18044

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18045

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18046, !tbaa !2273
  %54 = load i32, i32* %suffixes, align 4, !dbg !18047, !tbaa !2273
  %inc = add nsw i32 %54, 1, !dbg !18047
  store i32 %inc, i32* %suffixes, align 4, !dbg !18047, !tbaa !2273
  br label %sw.epilog, !dbg !18048

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18049

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18050

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !18051, !tbaa !2286
  %56 = load i8*, i8** %55, align 8, !dbg !18052, !tbaa !2286, !ctir !9
  %57 = load i8, i8* %56, align 1, !dbg !18053, !tbaa !2438, !ctir !10
  %conv67 = sext i8 %57 to i32, !dbg !18053
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18054

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !18055
  store i32 %call69, i32* %overflow, align 4, !dbg !18057, !tbaa !2438
  br label %sw.epilog92, !dbg !18058

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !18059
  store i32 %call71, i32* %overflow, align 4, !dbg !18060, !tbaa !2438
  br label %sw.epilog92, !dbg !18061

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18062, !tbaa !2438
  br label %sw.epilog92, !dbg !18063

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !18064, !tbaa !2273
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %58, i32 6), !dbg !18065
  store i32 %call74, i32* %overflow, align 4, !dbg !18066, !tbaa !2438
  br label %sw.epilog92, !dbg !18067

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18068, !tbaa !2273
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 3), !dbg !18069
  store i32 %call76, i32* %overflow, align 4, !dbg !18070, !tbaa !2438
  br label %sw.epilog92, !dbg !18071

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18072, !tbaa !2273
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 1), !dbg !18073
  store i32 %call78, i32* %overflow, align 4, !dbg !18074, !tbaa !2438
  br label %sw.epilog92, !dbg !18075

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18076, !tbaa !2273
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 2), !dbg !18077
  store i32 %call80, i32* %overflow, align 4, !dbg !18078, !tbaa !2438
  br label %sw.epilog92, !dbg !18079

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18080, !tbaa !2273
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 5), !dbg !18081
  store i32 %call82, i32* %overflow, align 4, !dbg !18082, !tbaa !2438
  br label %sw.epilog92, !dbg !18083

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18084, !tbaa !2273
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 4), !dbg !18085
  store i32 %call84, i32* %overflow, align 4, !dbg !18086, !tbaa !2438
  br label %sw.epilog92, !dbg !18087

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !18088
  store i32 %call86, i32* %overflow, align 4, !dbg !18089, !tbaa !2438
  br label %sw.epilog92, !dbg !18090

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18091, !tbaa !2273
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 8), !dbg !18092
  store i32 %call88, i32* %overflow, align 4, !dbg !18093, !tbaa !2438
  br label %sw.epilog92, !dbg !18094

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !18095, !tbaa !2273
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 7), !dbg !18096
  store i32 %call90, i32* %overflow, align 4, !dbg !18097, !tbaa !2438
  br label %sw.epilog92, !dbg !18098

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !18099, !tbaa !2447
  %67 = load i64*, i64** %val.addr, align 8, !dbg !18100, !tbaa !2286
  store i64 %66, i64* %67, align 8, !dbg !18101, !tbaa !2447, !ctir !57
  %68 = load i32, i32* %err, align 4, !dbg !18102, !tbaa !2438
  %or91 = or i32 %68, 2, !dbg !18103
  store i32 %or91, i32* %retval, align 4, !dbg !18104
  br label %return, !dbg !18104

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !18105, !tbaa !2438
  %70 = load i32, i32* %err, align 4, !dbg !18106, !tbaa !2438
  %or93 = or i32 %70, %69, !dbg !18106
  store i32 %or93, i32* %err, align 4, !dbg !18106, !tbaa !2438
  %71 = load i32, i32* %suffixes, align 4, !dbg !18107, !tbaa !2273
  %72 = load i8**, i8*** %p, align 8, !dbg !18108, !tbaa !2286
  %73 = load i8*, i8** %72, align 8, !dbg !18109, !tbaa !2286, !ctir !9
  %idx.ext = sext i32 %71 to i64, !dbg !18109
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !18109
  store i8* %add.ptr, i8** %72, align 8, !dbg !18109, !tbaa !2286, !ctir !9
  %74 = load i8**, i8*** %p, align 8, !dbg !18110, !tbaa !2286
  %75 = load i8*, i8** %74, align 8, !dbg !18112, !tbaa !2286, !ctir !9
  %76 = load i8, i8* %75, align 1, !dbg !18113, !tbaa !2438, !ctir !10
  %tobool94 = icmp ne i8 %76, 0, !dbg !18113
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !18114

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !18115, !tbaa !2438
  %or96 = or i32 %77, 2, !dbg !18115
  store i32 %or96, i32* %err, align 4, !dbg !18115, !tbaa !2438
  br label %if.end97, !dbg !18116

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !18117

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !18118, !tbaa !2447
  %79 = load i64*, i64** %val.addr, align 8, !dbg !18119, !tbaa !2286
  store i64 %78, i64* %79, align 8, !dbg !18120, !tbaa !2447, !ctir !57
  %80 = load i32, i32* %err, align 4, !dbg !18121, !tbaa !2438
  store i32 %80, i32* %retval, align 4, !dbg !18122
  br label %return, !dbg !18122

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !18123
  ret i32 %81, !dbg !18123
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !18124 !ctir !1944 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18125, metadata !DIExpression()), !dbg !18126
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !18127, metadata !DIExpression()), !dbg !18128
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !18129, !tbaa !2273
  %conv = sext i32 %0 to i64, !dbg !18129
  %div = udiv i64 -1, %conv, !dbg !18131
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18132, !tbaa !2286
  %2 = load i64, i64* %1, align 8, !dbg !18133, !tbaa !2447, !ctir !57
  %cmp = icmp ult i64 %div, %2, !dbg !18134
  br i1 %cmp, label %if.then, label %if.end, !dbg !18135

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !18136, !tbaa !2286
  store i64 -1, i64* %3, align 8, !dbg !18138, !tbaa !2447, !ctir !57
  store i32 1, i32* %retval, align 4, !dbg !18139
  br label %return, !dbg !18139

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !18140, !tbaa !2273
  %conv2 = sext i32 %4 to i64, !dbg !18140
  %5 = load i64*, i64** %x.addr, align 8, !dbg !18141, !tbaa !2286
  %6 = load i64, i64* %5, align 8, !dbg !18142, !tbaa !2447, !ctir !57
  %mul = mul i64 %6, %conv2, !dbg !18142
  store i64 %mul, i64* %5, align 8, !dbg !18142, !tbaa !2447, !ctir !57
  store i32 0, i32* %retval, align 4, !dbg !18143
  br label %return, !dbg !18143

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18144
  ret i32 %7, !dbg !18144
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !18145 !ctir !1946 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1942
  store i64* %x, i64** %x.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18146, metadata !DIExpression()), !dbg !18147
  store i32 %base, i32* %base.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !18148, metadata !DIExpression()), !dbg !18149
  store i32 %power, i32* %power.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !18150, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18152, metadata !DIExpression()), !dbg !18153
  store i32 0, i32* %err, align 4, !dbg !18153, !tbaa !2438
  br label %while.cond, !dbg !18154

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !18155, !tbaa !2273
  %dec = add nsw i32 %0, -1, !dbg !18155
  store i32 %dec, i32* %power.addr, align 4, !dbg !18155, !tbaa !2273
  %tobool = icmp ne i32 %0, 0, !dbg !18154
  br i1 %tobool, label %while.body, label %while.end, !dbg !18154

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18156, !tbaa !2286
  %2 = load i32, i32* %base.addr, align 4, !dbg !18157, !tbaa !2273
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !18158
  %3 = load i32, i32* %err, align 4, !dbg !18159, !tbaa !2438
  %or = or i32 %3, %call, !dbg !18159
  store i32 %or, i32* %err, align 4, !dbg !18159, !tbaa !2438
  br label %while.cond, !dbg !18154, !llvm.loop !18160

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !18162, !tbaa !2438
  ret i32 %4, !dbg !18163
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) #0 !dbg !18164 !ctir !1951 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %err, i32* %err.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !18166, metadata !DIExpression()), !dbg !18167
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !18168, metadata !DIExpression()), !dbg !18169
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !18170, metadata !DIExpression()), !dbg !18171
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !18172, metadata !DIExpression()), !dbg !18173
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18174, metadata !DIExpression()), !dbg !18175
  %0 = load i32, i32* %err.addr, align 4, !dbg !18176, !tbaa !2438
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !18177, !tbaa !2273
  %2 = load i8, i8* %c.addr, align 1, !dbg !18178, !tbaa !2438
  %3 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !18179, !tbaa !2286
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18180, !tbaa !2286
  %5 = load volatile i32, i32* @exit_failure, align 4, !dbg !18181, !tbaa !2273
  call void @xstrtol_error(i32 %0, i32 %1, i8 signext %2, %struct.option* %3, i8* %4, i32 %5), !dbg !18182
  call void @abort() #13, !dbg !18183
  unreachable, !dbg !18183
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) #4 !dbg !18184 !ctir !1961 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  %exit_status.addr = alloca i32, align 4
  %hyphens = alloca i8*, align 8, !ctir !88
  %msgid = alloca i8*, align 8, !ctir !88
  %option = alloca i8*, align 8, !ctir !88
  %option_buffer = alloca [2 x i8], align 1, !ctir !275
  store i32 %err, i32* %err.addr, align 4, !tbaa !2438
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !18185, metadata !DIExpression()), !dbg !18186
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !18187, metadata !DIExpression()), !dbg !18188
  store i8 %c, i8* %c.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !18189, metadata !DIExpression()), !dbg !18190
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !18191, metadata !DIExpression()), !dbg !18192
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18193, metadata !DIExpression()), !dbg !18194
  store i32 %exit_status, i32* %exit_status.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !18195, metadata !DIExpression()), !dbg !18196
  call void @llvm.dbg.declare(metadata i8** %hyphens, metadata !18197, metadata !DIExpression()), !dbg !18198
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i64 0, i64 0), i8** %hyphens, align 8, !dbg !18198, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %msgid, metadata !18199, metadata !DIExpression()), !dbg !18200
  call void @llvm.dbg.declare(metadata i8** %option, metadata !18201, metadata !DIExpression()), !dbg !18202
  call void @llvm.dbg.declare(metadata [2 x i8]* %option_buffer, metadata !18203, metadata !DIExpression()), !dbg !18204
  %0 = load i32, i32* %err.addr, align 4, !dbg !18205, !tbaa !2438
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !18206

sw.default:                                       ; preds = %entry
  call void @abort() #13, !dbg !18207
  unreachable, !dbg !18207

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.361, i64 0, i64 0), i8** %msgid, align 8, !dbg !18209, !tbaa !2286
  br label %sw.epilog, !dbg !18210

sw.bb1:                                           ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.362, i64 0, i64 0), i8** %msgid, align 8, !dbg !18211, !tbaa !2286
  br label %sw.epilog, !dbg !18212

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.363, i64 0, i64 0), i8** %msgid, align 8, !dbg !18213, !tbaa !2286
  br label %sw.epilog, !dbg !18214

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !18215, !tbaa !2273
  %cmp = icmp slt i32 %1, 0, !dbg !18217
  br i1 %cmp, label %if.then, label %if.else, !dbg !18218

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %opt_idx.addr, align 4, !dbg !18219, !tbaa !2273
  %3 = load i8*, i8** %hyphens, align 8, !dbg !18221, !tbaa !2286
  %idx.ext = sext i32 %2 to i64, !dbg !18221
  %idx.neg = sub i64 0, %idx.ext, !dbg !18221
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !18221
  store i8* %add.ptr, i8** %hyphens, align 8, !dbg !18221, !tbaa !2286
  %4 = load i8, i8* %c.addr, align 1, !dbg !18222, !tbaa !2438
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !18223, !ctir !275
  store i8 %4, i8* %arrayidx, align 1, !dbg !18224, !tbaa !2438
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 1, !dbg !18225, !ctir !275
  store i8 0, i8* %arrayidx3, align 1, !dbg !18226, !tbaa !2438
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !18227
  store i8* %arraydecay, i8** %option, align 8, !dbg !18228, !tbaa !2286
  br label %if.end, !dbg !18229

if.else:                                          ; preds = %sw.epilog
  %5 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !18230, !tbaa !2286
  %6 = load i32, i32* %opt_idx.addr, align 4, !dbg !18231, !tbaa !2273
  %idxprom = sext i32 %6 to i64, !dbg !18230
  %arrayidx4 = getelementptr inbounds %struct.option, %struct.option* %5, i64 %idxprom, !dbg !18230, !ctir !1953
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx4, i32 0, i32 0, !dbg !18232, !ctir !1954
  %7 = load i8*, i8** %name, align 8, !dbg !18232, !tbaa !3779, !ctir !88
  store i8* %7, i8** %option, align 8, !dbg !18233, !tbaa !2286
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %exit_status.addr, align 4, !dbg !18234, !tbaa !2273
  %9 = load i8*, i8** %msgid, align 8, !dbg !18235, !tbaa !2286
  %call = call i8* @gettext(i8* %9) #12, !dbg !18236
  %10 = load i8*, i8** %hyphens, align 8, !dbg !18237, !tbaa !2286
  %11 = load i8*, i8** %option, align 8, !dbg !18238, !tbaa !2286
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !18239, !tbaa !2286
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 0, i8* %call, i8* %10, i8* %11, i8* %12), !dbg !18240
  ret void, !dbg !18241
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !18242 !ctir !1966 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !9
  %p = alloca i8**, align 8, !ctir !92
  %tmp = alloca i64, align 8, !ctir !361
  %err = alloca i32, align 4, !ctir !1942
  %q = alloca i8*, align 8, !ctir !88
  %ch = alloca i8, align 1, !ctir !321
  %base = alloca i32, align 4, !ctir !7
  %suffixes = alloca i32, align 4, !ctir !7
  %overflow = alloca i32, align 4, !ctir !1942
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18243, metadata !DIExpression()), !dbg !18244
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18245, metadata !DIExpression()), !dbg !18246
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !18247, metadata !DIExpression()), !dbg !18248
  store i64* %val, i64** %val.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !18249, metadata !DIExpression()), !dbg !18250
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !18251, metadata !DIExpression()), !dbg !18252
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !18253, metadata !DIExpression()), !dbg !18254
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !18255, metadata !DIExpression()), !dbg !18256
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !18257, metadata !DIExpression()), !dbg !18258
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18259, metadata !DIExpression()), !dbg !18260
  store i32 0, i32* %err, align 4, !dbg !18260, !tbaa !2438
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !18261, !tbaa !2273
  %cmp = icmp sle i32 0, %0, !dbg !18261
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !18261

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !18261, !tbaa !2273
  %cmp1 = icmp sle i32 %1, 36, !dbg !18261
  br i1 %cmp1, label %if.then, label %if.else, !dbg !18264

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !18264

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.367, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.xstrtoumax, i64 0, i64 0)) #13, !dbg !18261
  unreachable, !dbg !18261

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !18265, !tbaa !2286
  %tobool = icmp ne i8** %2, null, !dbg !18265
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18265

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !18266, !tbaa !2286
  br label %cond.end, !dbg !18265

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !18265
  store i8** %cond, i8*** %p, align 8, !dbg !18267, !tbaa !2286
  %call = call i32* @__errno_location() #16, !dbg !18268
  store i32 0, i32* %call, align 4, !dbg !18269, !tbaa !2273, !ctir !7
  call void @llvm.dbg.declare(metadata i8** %q, metadata !18270, metadata !DIExpression()), !dbg !18273
  %4 = load i8*, i8** %s.addr, align 8, !dbg !18274, !tbaa !2286
  store i8* %4, i8** %q, align 8, !dbg !18273, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18275, metadata !DIExpression()), !dbg !18276
  %5 = load i8*, i8** %q, align 8, !dbg !18277, !tbaa !2286
  %6 = load i8, i8* %5, align 1, !dbg !18278, !tbaa !2438, !ctir !89
  store i8 %6, i8* %ch, align 1, !dbg !18276, !tbaa !2438
  br label %while.cond, !dbg !18279

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #16, !dbg !18280
  %7 = load i16*, i16** %call2, align 8, !dbg !18280, !tbaa !2286, !ctir !325
  %8 = load i8, i8* %ch, align 1, !dbg !18280, !tbaa !2438
  %conv = zext i8 %8 to i32, !dbg !18280
  %idxprom = sext i32 %conv to i64, !dbg !18280
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !18280, !ctir !325
  %9 = load i16, i16* %arrayidx, align 2, !dbg !18280, !tbaa !3423
  %conv3 = zext i16 %9 to i32, !dbg !18280
  %and = and i32 %conv3, 8192, !dbg !18280
  %tobool4 = icmp ne i32 %and, 0, !dbg !18279
  br i1 %tobool4, label %while.body, label %while.end, !dbg !18279

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !18281, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !18281
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18281, !tbaa !2286
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !18282, !tbaa !2438, !ctir !89
  store i8 %11, i8* %ch, align 1, !dbg !18283, !tbaa !2438
  br label %while.cond, !dbg !18279, !llvm.loop !18284

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !18286, !tbaa !2438
  %conv5 = zext i8 %12 to i32, !dbg !18286
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !18288
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !18289

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18290
  br label %return, !dbg !18290

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !18291, !tbaa !2286
  %14 = load i8**, i8*** %p, align 8, !dbg !18292, !tbaa !2286
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !18293, !tbaa !2273
  %call10 = call i64 @strtoumax(i8* %13, i8** %14, i32 %15) #12, !dbg !18294
  store i64 %call10, i64* %tmp, align 8, !dbg !18295, !tbaa !2447
  %16 = load i8**, i8*** %p, align 8, !dbg !18296, !tbaa !2286
  %17 = load i8*, i8** %16, align 8, !dbg !18298, !tbaa !2286, !ctir !9
  %18 = load i8*, i8** %s.addr, align 8, !dbg !18299, !tbaa !2286
  %cmp11 = icmp eq i8* %17, %18, !dbg !18300
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !18301

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18302, !tbaa !2286
  %tobool14 = icmp ne i8* %19, null, !dbg !18302
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !18305

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !18306, !tbaa !2286
  %21 = load i8*, i8** %20, align 8, !dbg !18307, !tbaa !2286, !ctir !9
  %22 = load i8, i8* %21, align 1, !dbg !18308, !tbaa !2438, !ctir !10
  %conv16 = sext i8 %22 to i32, !dbg !18308
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !18308
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !18309

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18310, !tbaa !2286
  %24 = load i8**, i8*** %p, align 8, !dbg !18311, !tbaa !2286
  %25 = load i8*, i8** %24, align 8, !dbg !18312, !tbaa !2286, !ctir !9
  %26 = load i8, i8* %25, align 1, !dbg !18313, !tbaa !2438, !ctir !10
  %conv19 = sext i8 %26 to i32, !dbg !18313
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #14, !dbg !18314
  %tobool21 = icmp ne i8* %call20, null, !dbg !18314
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !18315

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !18316, !tbaa !2447
  br label %if.end24, !dbg !18317

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !18318
  br label %return, !dbg !18318

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !18319

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #16, !dbg !18320
  %27 = load i32, i32* %call26, align 4, !dbg !18320, !tbaa !2273, !ctir !7
  %cmp27 = icmp ne i32 %27, 0, !dbg !18322
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !18323

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !18324
  %28 = load i32, i32* %call30, align 4, !dbg !18324, !tbaa !2273, !ctir !7
  %cmp31 = icmp ne i32 %28, 34, !dbg !18327
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !18328

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !18329
  br label %return, !dbg !18329

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !18330, !tbaa !2438
  br label %if.end35, !dbg !18331

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18332, !tbaa !2286
  %tobool37 = icmp ne i8* %29, null, !dbg !18332
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !18334

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !18335, !tbaa !2447
  %31 = load i64*, i64** %val.addr, align 8, !dbg !18337, !tbaa !2286
  store i64 %30, i64* %31, align 8, !dbg !18338, !tbaa !2447, !ctir !361
  %32 = load i32, i32* %err, align 4, !dbg !18339, !tbaa !2438
  store i32 %32, i32* %retval, align 4, !dbg !18340
  br label %return, !dbg !18340

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !18341, !tbaa !2286
  %34 = load i8*, i8** %33, align 8, !dbg !18343, !tbaa !2286, !ctir !9
  %35 = load i8, i8* %34, align 1, !dbg !18344, !tbaa !2438, !ctir !10
  %conv40 = sext i8 %35 to i32, !dbg !18344
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18345
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18346

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18347, metadata !DIExpression()), !dbg !18349
  store i32 1024, i32* %base, align 4, !dbg !18349, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18350, metadata !DIExpression()), !dbg !18351
  store i32 1, i32* %suffixes, align 4, !dbg !18351, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18352, metadata !DIExpression()), !dbg !18353
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18354, !tbaa !2286
  %37 = load i8**, i8*** %p, align 8, !dbg !18356, !tbaa !2286
  %38 = load i8*, i8** %37, align 8, !dbg !18357, !tbaa !2286, !ctir !9
  %39 = load i8, i8* %38, align 1, !dbg !18358, !tbaa !2438, !ctir !10
  %conv44 = sext i8 %39 to i32, !dbg !18358
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #14, !dbg !18359
  %tobool46 = icmp ne i8* %call45, null, !dbg !18359
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18360

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !18361, !tbaa !2447
  %41 = load i64*, i64** %val.addr, align 8, !dbg !18363, !tbaa !2286
  store i64 %40, i64* %41, align 8, !dbg !18364, !tbaa !2447, !ctir !361
  %42 = load i32, i32* %err, align 4, !dbg !18365, !tbaa !2438
  %or = or i32 %42, 2, !dbg !18366
  store i32 %or, i32* %retval, align 4, !dbg !18367
  br label %return, !dbg !18367

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !18368, !tbaa !2286
  %44 = load i8*, i8** %43, align 8, !dbg !18369, !tbaa !2286, !ctir !9
  %45 = load i8, i8* %44, align 1, !dbg !18370, !tbaa !2438, !ctir !10
  %conv49 = sext i8 %45 to i32, !dbg !18370
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18371

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18372, !tbaa !2286
  %call50 = call i8* @strchr(i8* %46, i32 48) #14, !dbg !18375
  %tobool51 = icmp ne i8* %call50, null, !dbg !18375
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18376

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !18377, !tbaa !2286
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !18377, !ctir !92
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !18377, !tbaa !2286
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !18377, !ctir !9
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !18377, !tbaa !2438
  %conv55 = sext i8 %49 to i32, !dbg !18377
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18378

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !18379, !tbaa !2286
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !18379, !ctir !92
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !18379, !tbaa !2286
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !18379, !ctir !9
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !18379, !tbaa !2438
  %conv59 = sext i8 %52 to i32, !dbg !18379
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18382
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18383

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !18384, !tbaa !2273
  %add = add nsw i32 %53, 2, !dbg !18384
  store i32 %add, i32* %suffixes, align 4, !dbg !18384, !tbaa !2273
  br label %if.end63, !dbg !18385

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18386

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18387, !tbaa !2273
  %54 = load i32, i32* %suffixes, align 4, !dbg !18388, !tbaa !2273
  %inc = add nsw i32 %54, 1, !dbg !18388
  store i32 %inc, i32* %suffixes, align 4, !dbg !18388, !tbaa !2273
  br label %sw.epilog, !dbg !18389

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18390

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18391

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !18392, !tbaa !2286
  %56 = load i8*, i8** %55, align 8, !dbg !18393, !tbaa !2286, !ctir !9
  %57 = load i8, i8* %56, align 1, !dbg !18394, !tbaa !2438, !ctir !10
  %conv67 = sext i8 %57 to i32, !dbg !18394
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18395

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale.368(i64* %tmp, i32 512), !dbg !18396
  store i32 %call69, i32* %overflow, align 4, !dbg !18398, !tbaa !2438
  br label %sw.epilog92, !dbg !18399

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale.368(i64* %tmp, i32 1024), !dbg !18400
  store i32 %call71, i32* %overflow, align 4, !dbg !18401, !tbaa !2438
  br label %sw.epilog92, !dbg !18402

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18403, !tbaa !2438
  br label %sw.epilog92, !dbg !18404

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !18405, !tbaa !2273
  %call74 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %58, i32 6), !dbg !18406
  store i32 %call74, i32* %overflow, align 4, !dbg !18407, !tbaa !2438
  br label %sw.epilog92, !dbg !18408

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18409, !tbaa !2273
  %call76 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %59, i32 3), !dbg !18410
  store i32 %call76, i32* %overflow, align 4, !dbg !18411, !tbaa !2438
  br label %sw.epilog92, !dbg !18412

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18413, !tbaa !2273
  %call78 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %60, i32 1), !dbg !18414
  store i32 %call78, i32* %overflow, align 4, !dbg !18415, !tbaa !2438
  br label %sw.epilog92, !dbg !18416

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18417, !tbaa !2273
  %call80 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %61, i32 2), !dbg !18418
  store i32 %call80, i32* %overflow, align 4, !dbg !18419, !tbaa !2438
  br label %sw.epilog92, !dbg !18420

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18421, !tbaa !2273
  %call82 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %62, i32 5), !dbg !18422
  store i32 %call82, i32* %overflow, align 4, !dbg !18423, !tbaa !2438
  br label %sw.epilog92, !dbg !18424

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18425, !tbaa !2273
  %call84 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %63, i32 4), !dbg !18426
  store i32 %call84, i32* %overflow, align 4, !dbg !18427, !tbaa !2438
  br label %sw.epilog92, !dbg !18428

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale.368(i64* %tmp, i32 2), !dbg !18429
  store i32 %call86, i32* %overflow, align 4, !dbg !18430, !tbaa !2438
  br label %sw.epilog92, !dbg !18431

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18432, !tbaa !2273
  %call88 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %64, i32 8), !dbg !18433
  store i32 %call88, i32* %overflow, align 4, !dbg !18434, !tbaa !2438
  br label %sw.epilog92, !dbg !18435

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !18436, !tbaa !2273
  %call90 = call i32 @bkm_scale_by_power.369(i64* %tmp, i32 %65, i32 7), !dbg !18437
  store i32 %call90, i32* %overflow, align 4, !dbg !18438, !tbaa !2438
  br label %sw.epilog92, !dbg !18439

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !18440, !tbaa !2447
  %67 = load i64*, i64** %val.addr, align 8, !dbg !18441, !tbaa !2286
  store i64 %66, i64* %67, align 8, !dbg !18442, !tbaa !2447, !ctir !361
  %68 = load i32, i32* %err, align 4, !dbg !18443, !tbaa !2438
  %or91 = or i32 %68, 2, !dbg !18444
  store i32 %or91, i32* %retval, align 4, !dbg !18445
  br label %return, !dbg !18445

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !18446, !tbaa !2438
  %70 = load i32, i32* %err, align 4, !dbg !18447, !tbaa !2438
  %or93 = or i32 %70, %69, !dbg !18447
  store i32 %or93, i32* %err, align 4, !dbg !18447, !tbaa !2438
  %71 = load i32, i32* %suffixes, align 4, !dbg !18448, !tbaa !2273
  %72 = load i8**, i8*** %p, align 8, !dbg !18449, !tbaa !2286
  %73 = load i8*, i8** %72, align 8, !dbg !18450, !tbaa !2286, !ctir !9
  %idx.ext = sext i32 %71 to i64, !dbg !18450
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !18450
  store i8* %add.ptr, i8** %72, align 8, !dbg !18450, !tbaa !2286, !ctir !9
  %74 = load i8**, i8*** %p, align 8, !dbg !18451, !tbaa !2286
  %75 = load i8*, i8** %74, align 8, !dbg !18453, !tbaa !2286, !ctir !9
  %76 = load i8, i8* %75, align 1, !dbg !18454, !tbaa !2438, !ctir !10
  %tobool94 = icmp ne i8 %76, 0, !dbg !18454
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !18455

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !18456, !tbaa !2438
  %or96 = or i32 %77, 2, !dbg !18456
  store i32 %or96, i32* %err, align 4, !dbg !18456, !tbaa !2438
  br label %if.end97, !dbg !18457

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !18458

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !18459, !tbaa !2447
  %79 = load i64*, i64** %val.addr, align 8, !dbg !18460, !tbaa !2286
  store i64 %78, i64* %79, align 8, !dbg !18461, !tbaa !2447, !ctir !361
  %80 = load i32, i32* %err, align 4, !dbg !18462, !tbaa !2438
  store i32 %80, i32* %retval, align 4, !dbg !18463
  br label %return, !dbg !18463

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !18464
  ret i32 %81, !dbg !18464
}

; Function Attrs: nounwind
declare dso_local i64 @strtoumax(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale.368(i64* %x, i32 %scale_factor) #4 !dbg !18465 !ctir !1969 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18466, metadata !DIExpression()), !dbg !18467
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !18468, metadata !DIExpression()), !dbg !18469
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !18470, !tbaa !2273
  %conv = sext i32 %0 to i64, !dbg !18470
  %div = udiv i64 -1, %conv, !dbg !18472
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18473, !tbaa !2286
  %2 = load i64, i64* %1, align 8, !dbg !18474, !tbaa !2447, !ctir !361
  %cmp = icmp ult i64 %div, %2, !dbg !18475
  br i1 %cmp, label %if.then, label %if.end, !dbg !18476

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !18477, !tbaa !2286
  store i64 -1, i64* %3, align 8, !dbg !18479, !tbaa !2447, !ctir !361
  store i32 1, i32* %retval, align 4, !dbg !18480
  br label %return, !dbg !18480

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !18481, !tbaa !2273
  %conv2 = sext i32 %4 to i64, !dbg !18481
  %5 = load i64*, i64** %x.addr, align 8, !dbg !18482, !tbaa !2286
  %6 = load i64, i64* %5, align 8, !dbg !18483, !tbaa !2447, !ctir !361
  %mul = mul i64 %6, %conv2, !dbg !18483
  store i64 %mul, i64* %5, align 8, !dbg !18483, !tbaa !2447, !ctir !361
  store i32 0, i32* %retval, align 4, !dbg !18484
  br label %return, !dbg !18484

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18485
  ret i32 %7, !dbg !18485
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power.369(i64* %x, i32 %base, i32 %power) #4 !dbg !18486 !ctir !1971 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1942
  store i64* %x, i64** %x.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18487, metadata !DIExpression()), !dbg !18488
  store i32 %base, i32* %base.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !18489, metadata !DIExpression()), !dbg !18490
  store i32 %power, i32* %power.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !18491, metadata !DIExpression()), !dbg !18492
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18493, metadata !DIExpression()), !dbg !18494
  store i32 0, i32* %err, align 4, !dbg !18494, !tbaa !2438
  br label %while.cond, !dbg !18495

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !18496, !tbaa !2273
  %dec = add nsw i32 %0, -1, !dbg !18496
  store i32 %dec, i32* %power.addr, align 4, !dbg !18496, !tbaa !2273
  %tobool = icmp ne i32 %0, 0, !dbg !18495
  br i1 %tobool, label %while.body, label %while.end, !dbg !18495

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18497, !tbaa !2286
  %2 = load i32, i32* %base.addr, align 4, !dbg !18498, !tbaa !2273
  %call = call i32 @bkm_scale.368(i64* %1, i32 %2), !dbg !18499
  %3 = load i32, i32* %err, align 4, !dbg !18500, !tbaa !2438
  %or = or i32 %3, %call, !dbg !18500
  store i32 %or, i32* %err, align 4, !dbg !18500, !tbaa !2438
  br label %while.cond, !dbg !18495, !llvm.loop !18501

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !18503, !tbaa !2438
  ret i32 %4, !dbg !18504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !18505 !ctir !1976 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18507, metadata !DIExpression()), !dbg !18508
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18509, metadata !DIExpression()), !dbg !18510
  store i32 0, i32* %saved_errno, align 4, !dbg !18510, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18511, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18513, metadata !DIExpression()), !dbg !18514
  store i32 0, i32* %result, align 4, !dbg !18514, !tbaa !2273
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18515, !tbaa !2286
  %call = call i32 @fileno(%struct._IO_FILE* %0) #12, !dbg !18516
  store i32 %call, i32* %fd, align 4, !dbg !18517, !tbaa !2273
  %1 = load i32, i32* %fd, align 4, !dbg !18518, !tbaa !2273
  %cmp = icmp slt i32 %1, 0, !dbg !18520
  br i1 %cmp, label %if.then, label %if.end, !dbg !18521

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18522, !tbaa !2286
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !18523
  store i32 %call1, i32* %retval, align 4, !dbg !18524
  br label %return, !dbg !18524

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18525, !tbaa !2286
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #12, !dbg !18525
  %cmp3 = icmp ne i32 %call2, 0, !dbg !18525
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !18527

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18528, !tbaa !2286
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #12, !dbg !18529
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #12, !dbg !18530
  %cmp6 = icmp ne i64 %call5, -1, !dbg !18531
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !18532

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18533, !tbaa !2286
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !18534
  %tobool = icmp ne i32 %call7, 0, !dbg !18534
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !18535

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !18536
  %6 = load i32, i32* %call9, align 4, !dbg !18536, !tbaa !2273, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !18537, !tbaa !2273
  br label %if.end10, !dbg !18538

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18539, !tbaa !2286
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !18540
  store i32 %call11, i32* %result, align 4, !dbg !18541, !tbaa !2273
  %8 = load i32, i32* %saved_errno, align 4, !dbg !18542, !tbaa !2273
  %cmp12 = icmp ne i32 %8, 0, !dbg !18544
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !18545

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !18546, !tbaa !2273
  %call14 = call i32* @__errno_location() #16, !dbg !18548
  store i32 %9, i32* %call14, align 4, !dbg !18549, !tbaa !2273, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !18550, !tbaa !2273
  br label %if.end15, !dbg !18551

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !18552, !tbaa !2273
  store i32 %10, i32* %retval, align 4, !dbg !18553
  br label %return, !dbg !18553

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !18554
  ret i32 %11, !dbg !18554
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !18555 !ctir !1342 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1347
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18558, metadata !DIExpression()), !dbg !18559
  store i32 %action, i32* %action.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !18560, metadata !DIExpression()), !dbg !18561
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !18562, metadata !DIExpression()), !dbg !18563
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18564, metadata !DIExpression()), !dbg !18565
  store i32 -1, i32* %result, align 4, !dbg !18565, !tbaa !2273
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18566
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18566
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18566
  %0 = load i32, i32* %action.addr, align 4, !dbg !18567, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !18568

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !18569, metadata !DIExpression()), !dbg !18572
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18573
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !18573
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !18573
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18573
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18573

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !18573
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !18573
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18573
  %3 = bitcast i8* %2 to i32*, !dbg !18573
  %4 = add i32 %gp_offset, 8, !dbg !18573
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !18573
  br label %vaarg.end, !dbg !18573

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !18573
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18573
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !18573
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18573
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18573
  br label %vaarg.end, !dbg !18573

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !18573
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !18573
  store i32 %6, i32* %target, align 4, !dbg !18572, !tbaa !2273
  %7 = load i32, i32* %fd.addr, align 4, !dbg !18574, !tbaa !2273
  %8 = load i32, i32* %target, align 4, !dbg !18575, !tbaa !2273
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !18576
  store i32 %call, i32* %result, align 4, !dbg !18577, !tbaa !2273
  br label %sw.epilog48, !dbg !18578

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !18579, metadata !DIExpression()), !dbg !18581
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18582
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !18582
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !18582
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !18582
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !18582

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !18582
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !18582
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !18582
  %11 = bitcast i8* %10 to i32*, !dbg !18582
  %12 = add i32 %gp_offset7, 8, !dbg !18582
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !18582
  br label %vaarg.end15, !dbg !18582

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !18582
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !18582
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !18582
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !18582
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !18582
  br label %vaarg.end15, !dbg !18582

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !18582
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !18582
  store i32 %14, i32* %target4, align 4, !dbg !18581, !tbaa !2273
  %15 = load i32, i32* %fd.addr, align 4, !dbg !18583, !tbaa !2273
  %16 = load i32, i32* %target4, align 4, !dbg !18584, !tbaa !2273
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !18585
  store i32 %call17, i32* %result, align 4, !dbg !18586, !tbaa !2273
  br label %sw.epilog48, !dbg !18587

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !18588, !tbaa !2273
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !18590

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !18591, !tbaa !2273
  %19 = load i32, i32* %action.addr, align 4, !dbg !18593, !tbaa !2273
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !18594
  store i32 %call19, i32* %result, align 4, !dbg !18595, !tbaa !2273
  br label %sw.epilog, !dbg !18596

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18597, metadata !DIExpression()), !dbg !18599
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18600
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !18600
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !18600
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !18600
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !18600

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !18600
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !18600
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !18600
  %22 = bitcast i8* %21 to i32*, !dbg !18600
  %23 = add i32 %gp_offset23, 8, !dbg !18600
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !18600
  br label %vaarg.end31, !dbg !18600

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !18600
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !18600
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !18600
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !18600
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !18600
  br label %vaarg.end31, !dbg !18600

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !18600
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !18600
  store i32 %25, i32* %x, align 4, !dbg !18599, !tbaa !2273
  %26 = load i32, i32* %fd.addr, align 4, !dbg !18601, !tbaa !2273
  %27 = load i32, i32* %action.addr, align 4, !dbg !18602, !tbaa !2273
  %28 = load i32, i32* %x, align 4, !dbg !18603, !tbaa !2273
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !18604
  store i32 %call33, i32* %result, align 4, !dbg !18605, !tbaa !2273
  br label %sw.epilog, !dbg !18606

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18607, metadata !DIExpression()), !dbg !18609
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18610
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !18610
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !18610
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !18610
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !18610

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !18610
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !18610
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !18610
  %31 = bitcast i8* %30 to i8**, !dbg !18610
  %32 = add i32 %gp_offset37, 8, !dbg !18610
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !18610
  br label %vaarg.end45, !dbg !18610

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !18610
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !18610
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !18610
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !18610
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !18610
  br label %vaarg.end45, !dbg !18610

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !18610
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !18610
  store i8* %34, i8** %p, align 8, !dbg !18609, !tbaa !2286
  %35 = load i32, i32* %fd.addr, align 4, !dbg !18611, !tbaa !2273
  %36 = load i32, i32* %action.addr, align 4, !dbg !18612, !tbaa !2273
  %37 = load i8*, i8** %p, align 8, !dbg !18613, !tbaa !2286
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !18614
  store i32 %call47, i32* %result, align 4, !dbg !18615, !tbaa !2273
  br label %sw.epilog, !dbg !18616

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !18617

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !18618
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !18618
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !18618
  %38 = load i32, i32* %result, align 4, !dbg !18619, !tbaa !2273
  ret i32 %38, !dbg !18620
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !18621 !ctir !1342 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18622, metadata !DIExpression()), !dbg !18623
  store i32 %target, i32* %target.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !18624, metadata !DIExpression()), !dbg !18625
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18626, metadata !DIExpression()), !dbg !18627
  %0 = load i32, i32* %fd.addr, align 4, !dbg !18628, !tbaa !2273
  %1 = load i32, i32* %target.addr, align 4, !dbg !18629, !tbaa !2273
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !18630
  store i32 %call, i32* %result, align 4, !dbg !18631, !tbaa !2273
  %2 = load i32, i32* %result, align 4, !dbg !18632, !tbaa !2273
  ret i32 %2, !dbg !18633
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1340 !ctir !1342 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18634, metadata !DIExpression()), !dbg !18635
  store i32 %target, i32* %target.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !18636, metadata !DIExpression()), !dbg !18637
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18638, metadata !DIExpression()), !dbg !18639
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18640, !tbaa !2273
  %cmp = icmp sle i32 0, %0, !dbg !18642
  br i1 %cmp, label %if.then, label %if.else9, !dbg !18643

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !18644, !tbaa !2273
  %2 = load i32, i32* %target.addr, align 4, !dbg !18646, !tbaa !2273
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !18647
  store i32 %call, i32* %result, align 4, !dbg !18648, !tbaa !2273
  %3 = load i32, i32* %result, align 4, !dbg !18649, !tbaa !2273
  %cmp1 = icmp sle i32 0, %3, !dbg !18651
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !18652

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !18653
  %4 = load i32, i32* %call2, align 4, !dbg !18653, !tbaa !2273, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !18654
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !18655

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18656, !tbaa !2273
  br label %if.end8, !dbg !18658

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !18659, !tbaa !2273
  %6 = load i32, i32* %target.addr, align 4, !dbg !18661, !tbaa !2273
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !18662
  store i32 %call5, i32* %result, align 4, !dbg !18663, !tbaa !2273
  %7 = load i32, i32* %result, align 4, !dbg !18664, !tbaa !2273
  %cmp6 = icmp sge i32 %7, 0, !dbg !18666
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !18667

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18668, !tbaa !2273
  br label %if.end, !dbg !18669

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !18670

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !18671, !tbaa !2273
  %9 = load i32, i32* %target.addr, align 4, !dbg !18672, !tbaa !2273
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !18673
  store i32 %call10, i32* %result, align 4, !dbg !18674, !tbaa !2273
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !18675, !tbaa !2273
  %cmp12 = icmp sle i32 0, %10, !dbg !18677
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !18678

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !18679, !tbaa !2273
  %cmp13 = icmp eq i32 %11, -1, !dbg !18680
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !18681

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18682, metadata !DIExpression()), !dbg !18684
  %12 = load i32, i32* %result, align 4, !dbg !18685, !tbaa !2273
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !18686
  store i32 %call15, i32* %flags, align 4, !dbg !18684, !tbaa !2273
  %13 = load i32, i32* %flags, align 4, !dbg !18687, !tbaa !2273
  %cmp16 = icmp slt i32 %13, 0, !dbg !18689
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !18690

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !18691, !tbaa !2273
  %15 = load i32, i32* %flags, align 4, !dbg !18692, !tbaa !2273
  %or = or i32 %15, 1, !dbg !18693
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !18694
  %cmp19 = icmp eq i32 %call18, -1, !dbg !18695
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !18696

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18697, metadata !DIExpression()), !dbg !18699
  %call21 = call i32* @__errno_location() #16, !dbg !18700
  %16 = load i32, i32* %call21, align 4, !dbg !18700, !tbaa !2273, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !18699, !tbaa !2273
  %17 = load i32, i32* %result, align 4, !dbg !18701, !tbaa !2273
  %call22 = call i32 @close(i32 %17), !dbg !18702
  %18 = load i32, i32* %saved_errno, align 4, !dbg !18703, !tbaa !2273
  %call23 = call i32* @__errno_location() #16, !dbg !18704
  store i32 %18, i32* %call23, align 4, !dbg !18705, !tbaa !2273, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !18706, !tbaa !2273
  br label %if.end24, !dbg !18707

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !18708

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !18709, !tbaa !2273
  ret i32 %19, !dbg !18710
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !18711 !ctir !2015 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18713, metadata !DIExpression()), !dbg !18714
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18715, !tbaa !2286
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !18717
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18718

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18719, !tbaa !2286
  %call = call i32 @__freading(%struct._IO_FILE* %1) #12, !dbg !18719
  %cmp1 = icmp ne i32 %call, 0, !dbg !18719
  br i1 %cmp1, label %if.end, label %if.then, !dbg !18720

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18721, !tbaa !2286
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !18722
  store i32 %call2, i32* %retval, align 4, !dbg !18723
  br label %return, !dbg !18723

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18724, !tbaa !2286
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !18725
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18726, !tbaa !2286
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !18727
  store i32 %call3, i32* %retval, align 4, !dbg !18728
  br label %return, !dbg !18728

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !18729
  ret i32 %5, !dbg !18729
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !18730 !ctir !2051 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18731, metadata !DIExpression()), !dbg !18732
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18733, !tbaa !2286
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !18735, !ctir !2018
  %1 = load i32, i32* %_flags, align 8, !dbg !18735, !tbaa !18736, !ctir !7
  %and = and i32 %1, 256, !dbg !18738
  %tobool = icmp ne i32 %and, 0, !dbg !18738
  br i1 %tobool, label %if.then, label %if.end, !dbg !18739

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18740, !tbaa !2286
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !18741
  br label %if.end, !dbg !18741

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18742
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !18743 !ctir !2056 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !1474
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18745, metadata !DIExpression()), !dbg !18746
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !18747, metadata !DIExpression()), !dbg !18748
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !18749, metadata !DIExpression()), !dbg !18750
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18751, !tbaa !2286
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !18753, !ctir !2059
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !18753, !tbaa !18754, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18755, !tbaa !2286
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !18756, !ctir !2059
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18756, !tbaa !18757, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !18758
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !18759

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18760, !tbaa !2286
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !18761, !ctir !2059
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18761, !tbaa !18762, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18763, !tbaa !2286
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !18764, !ctir !2059
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !18764, !tbaa !18765, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !18766
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !18767

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18768, !tbaa !2286
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18769, !ctir !2059
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18769, !tbaa !18770, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !18771
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18772

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18773, metadata !DIExpression()), !dbg !18775
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18776, !tbaa !2286
  %call = call i32 @fileno(%struct._IO_FILE* %10) #12, !dbg !18777
  %11 = load i64, i64* %offset.addr, align 8, !dbg !18778, !tbaa !2447
  %12 = load i32, i32* %whence.addr, align 4, !dbg !18779, !tbaa !2273
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #12, !dbg !18780
  store i64 %call4, i64* %pos, align 8, !dbg !18775, !tbaa !2447
  %13 = load i64, i64* %pos, align 8, !dbg !18781, !tbaa !2447
  %cmp5 = icmp eq i64 %13, -1, !dbg !18783
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !18784

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !18785
  br label %return, !dbg !18785

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18787, !tbaa !2286
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !18788, !ctir !2059
  %15 = load i32, i32* %_flags, align 8, !dbg !18789, !tbaa !18736, !ctir !7
  %and = and i32 %15, -17, !dbg !18789
  store i32 %and, i32* %_flags, align 8, !dbg !18789, !tbaa !18736, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !18790, !tbaa !2447
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18791, !tbaa !2286
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !18792, !ctir !2059
  store i64 %16, i64* %_offset, align 8, !dbg !18793, !tbaa !18794, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !18795
  br label %return, !dbg !18795

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18796, !tbaa !2286
  %19 = load i64, i64* %offset.addr, align 8, !dbg !18797, !tbaa !2447
  %20 = load i32, i32* %whence.addr, align 4, !dbg !18798, !tbaa !2273
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !18799
  store i32 %call8, i32* %retval, align 4, !dbg !18800
  br label %return, !dbg !18800

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !18801
  ret i32 %21, !dbg !18801
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !18802 !ctir !2095 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !1308
  %uc = alloca i8, align 1, !ctir !321
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !18804, metadata !DIExpression()), !dbg !18805
  store i8* %s, i8** %s.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18806, metadata !DIExpression()), !dbg !18807
  store i64 %n, i64* %n.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18808, metadata !DIExpression()), !dbg !18809
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !18810, metadata !DIExpression()), !dbg !18811
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !18812, metadata !DIExpression()), !dbg !18813
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !18814, metadata !DIExpression()), !dbg !18815
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !18816, !tbaa !2286
  %tobool = icmp ne i32* %0, null, !dbg !18816
  br i1 %tobool, label %if.end, label %if.then, !dbg !18818

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !18819, !tbaa !2286
  br label %if.end, !dbg !18820

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !18821, !tbaa !2286
  %2 = load i8*, i8** %s.addr, align 8, !dbg !18822, !tbaa !2286
  %3 = load i64, i64* %n.addr, align 8, !dbg !18823, !tbaa !2447
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !18824, !tbaa !2286
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #12, !dbg !18825
  store i64 %call, i64* %ret, align 8, !dbg !18826, !tbaa !2447
  %5 = load i64, i64* %ret, align 8, !dbg !18827, !tbaa !2447
  %cmp = icmp ule i64 -2, %5, !dbg !18829
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !18830

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18831, !tbaa !2447
  %cmp1 = icmp ne i64 %6, 0, !dbg !18832
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !18833

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !18834
  br i1 %call3, label %if.end5, label %if.then4, !dbg !18835

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !18836, metadata !DIExpression()), !dbg !18838
  %7 = load i8*, i8** %s.addr, align 8, !dbg !18839, !tbaa !2286
  %8 = load i8, i8* %7, align 1, !dbg !18840, !tbaa !2438, !ctir !89
  store i8 %8, i8* %uc, align 1, !dbg !18838, !tbaa !2438
  %9 = load i8, i8* %uc, align 1, !dbg !18841, !tbaa !2438
  %conv = zext i8 %9 to i32, !dbg !18841
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !18842, !tbaa !2286
  store i32 %conv, i32* %10, align 4, !dbg !18843, !tbaa !2273, !ctir !1308
  store i64 1, i64* %retval, align 8, !dbg !18844
  br label %return, !dbg !18844

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !18845, !tbaa !2447
  store i64 %11, i64* %retval, align 8, !dbg !18846
  br label %return, !dbg !18846

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !18847
  ret i64 %12, !dbg !18847
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_nanosleep(%struct.timespec* nonnull %requested_delay, %struct.timespec* %remaining_delay) #4 !dbg !18848 !ctir !2112 {
entry:
  %retval = alloca i32, align 4
  %requested_delay.addr = alloca %struct.timespec*, align 8
  %remaining_delay.addr = alloca %struct.timespec*, align 8
  %limit = alloca i64, align 8, !ctir !2121
  %seconds = alloca i64, align 8, !ctir !2122
  %intermediate = alloca %struct.timespec, align 8, !ctir !2116
  %result = alloca i32, align 4, !ctir !7
  store %struct.timespec* %requested_delay, %struct.timespec** %requested_delay.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.timespec** %requested_delay.addr, metadata !18850, metadata !DIExpression()), !dbg !18851
  store %struct.timespec* %remaining_delay, %struct.timespec** %remaining_delay.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.timespec** %remaining_delay.addr, metadata !18852, metadata !DIExpression()), !dbg !18853
  %0 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18854, !tbaa !2286
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i32 0, i32 1, !dbg !18856, !ctir !2115
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18856, !tbaa !18857, !ctir !412
  %cmp = icmp slt i64 %1, 0, !dbg !18858
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18859

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18860, !tbaa !2286
  %tv_nsec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1, !dbg !18861, !ctir !2115
  %3 = load i64, i64* %tv_nsec1, align 8, !dbg !18861, !tbaa !18857, !ctir !412
  %cmp2 = icmp sle i64 1000000000, %3, !dbg !18862
  br i1 %cmp2, label %if.then, label %if.end, !dbg !18863

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32* @__errno_location() #16, !dbg !18864
  store i32 22, i32* %call, align 4, !dbg !18866, !tbaa !2273, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !18867
  br label %return, !dbg !18867

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !18868, metadata !DIExpression()), !dbg !18870
  store i64 2073600, i64* %limit, align 8, !dbg !18870, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %seconds, metadata !18871, metadata !DIExpression()), !dbg !18872
  %4 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18873, !tbaa !2286
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !18874, !ctir !2115
  %5 = load i64, i64* %tv_sec, align 8, !dbg !18874, !tbaa !18875, !ctir !410
  store i64 %5, i64* %seconds, align 8, !dbg !18872, !tbaa !2447
  call void @llvm.dbg.declare(metadata %struct.timespec* %intermediate, metadata !18876, metadata !DIExpression()), !dbg !18877
  %6 = load %struct.timespec*, %struct.timespec** %requested_delay.addr, align 8, !dbg !18878, !tbaa !2286
  %tv_nsec3 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 1, !dbg !18879, !ctir !2115
  %7 = load i64, i64* %tv_nsec3, align 8, !dbg !18879, !tbaa !18857, !ctir !412
  %tv_nsec4 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 1, !dbg !18880, !ctir !2116
  store i64 %7, i64* %tv_nsec4, align 8, !dbg !18881, !tbaa !18857, !ctir !412
  br label %while.cond, !dbg !18882

while.cond:                                       ; preds = %if.end13, %if.end
  %8 = load i64, i64* %seconds, align 8, !dbg !18883, !tbaa !2447
  %cmp5 = icmp slt i64 2073600, %8, !dbg !18884
  br i1 %cmp5, label %while.body, label %while.end, !dbg !18882

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18885, metadata !DIExpression()), !dbg !18887
  %tv_sec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 0, !dbg !18888, !ctir !2116
  store i64 2073600, i64* %tv_sec6, align 8, !dbg !18889, !tbaa !18875, !ctir !410
  %9 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18890, !tbaa !2286
  %call7 = call i32 @nanosleep(%struct.timespec* %intermediate, %struct.timespec* %9), !dbg !18891
  store i32 %call7, i32* %result, align 4, !dbg !18892, !tbaa !2273
  %10 = load i64, i64* %seconds, align 8, !dbg !18893, !tbaa !2447
  %sub = sub nsw i64 %10, 2073600, !dbg !18893
  store i64 %sub, i64* %seconds, align 8, !dbg !18893, !tbaa !2447
  %11 = load i32, i32* %result, align 4, !dbg !18894, !tbaa !2273
  %tobool = icmp ne i32 %11, 0, !dbg !18894
  br i1 %tobool, label %if.then8, label %if.end13, !dbg !18896

if.then8:                                         ; preds = %while.body
  %12 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18897, !tbaa !2286
  %tobool9 = icmp ne %struct.timespec* %12, null, !dbg !18897
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !18900

if.then10:                                        ; preds = %if.then8
  %13 = load i64, i64* %seconds, align 8, !dbg !18901, !tbaa !2447
  %14 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18902, !tbaa !2286
  %tv_sec11 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i32 0, i32 0, !dbg !18903, !ctir !2116
  %15 = load i64, i64* %tv_sec11, align 8, !dbg !18904, !tbaa !18875, !ctir !410
  %add = add nsw i64 %15, %13, !dbg !18904
  store i64 %add, i64* %tv_sec11, align 8, !dbg !18904, !tbaa !18875, !ctir !410
  br label %if.end12, !dbg !18902

if.end12:                                         ; preds = %if.then10, %if.then8
  %16 = load i32, i32* %result, align 4, !dbg !18905, !tbaa !2273
  store i32 %16, i32* %retval, align 4, !dbg !18906
  br label %return, !dbg !18906

if.end13:                                         ; preds = %while.body
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 1, !dbg !18907, !ctir !2116
  store i64 0, i64* %tv_nsec14, align 8, !dbg !18908, !tbaa !18857, !ctir !412
  br label %while.cond, !dbg !18882, !llvm.loop !18909

while.end:                                        ; preds = %while.cond
  %17 = load i64, i64* %seconds, align 8, !dbg !18911, !tbaa !2447
  %tv_sec15 = getelementptr inbounds %struct.timespec, %struct.timespec* %intermediate, i32 0, i32 0, !dbg !18912, !ctir !2116
  store i64 %17, i64* %tv_sec15, align 8, !dbg !18913, !tbaa !18875, !ctir !410
  %18 = load %struct.timespec*, %struct.timespec** %remaining_delay.addr, align 8, !dbg !18914, !tbaa !2286
  %call16 = call i32 @nanosleep(%struct.timespec* %intermediate, %struct.timespec* %18), !dbg !18915
  store i32 %call16, i32* %retval, align 4, !dbg !18916
  br label %return, !dbg !18916

return:                                           ; preds = %while.end, %if.end12, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !18917
  ret i32 %19, !dbg !18917
}

declare dso_local i32 @nanosleep(%struct.timespec*, %struct.timespec*) #3

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #0 !dbg !18918 !ctir !168 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !18919, !tbaa !2286
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.382, i64 0, i64 0)) #12, !dbg !18920
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.383, i64 0, i64 0), i8* %call), !dbg !18921
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !18922, !tbaa !2273
  call void @exit(i32 %1) #13, !dbg !18923
  unreachable, !dbg !18923
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i64)* %chunkfun, void (i8*)* %freefun) #4 !dbg !18924 !ctir !1363 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i64)*, align 8
  %freefun.addr = alloca void (i8*)*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !18925, metadata !DIExpression()), !dbg !18926
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18927, metadata !DIExpression()), !dbg !18928
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !18929, metadata !DIExpression()), !dbg !18930
  store i8* (i64)* %chunkfun, i8* (i64)** %chunkfun.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* (i64)** %chunkfun.addr, metadata !18931, metadata !DIExpression()), !dbg !18932
  store void (i8*)* %freefun, void (i8*)** %freefun.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata void (i8*)** %freefun.addr, metadata !18933, metadata !DIExpression()), !dbg !18934
  %0 = load i8* (i64)*, i8* (i64)** %chunkfun.addr, align 8, !dbg !18935, !tbaa !2286
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18936, !tbaa !2286
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !18937, !ctir !1366
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !18938
  store i8* (i64)* %0, i8* (i64)** %plain, align 8, !dbg !18939, !tbaa !2438, !ctir !1387
  %2 = load void (i8*)*, void (i8*)** %freefun.addr, align 8, !dbg !18940, !tbaa !2286
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18941, !tbaa !2286
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !18942, !ctir !1366
  %plain3 = bitcast %union.anon.1* %freefun2 to void (i8*)**, !dbg !18943
  store void (i8*)* %2, void (i8*)** %plain3, align 8, !dbg !18944, !tbaa !2438, !ctir !1398
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18945, !tbaa !2286
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 10, !dbg !18946, !ctir !1366
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !18947
  %bf.clear = and i8 %bf.load, -2, !dbg !18947
  store i8 %bf.clear, i8* %use_extra_arg, align 8, !dbg !18947
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18948, !tbaa !2286
  %6 = load i64, i64* %size.addr, align 8, !dbg !18949, !tbaa !2447
  %7 = load i64, i64* %alignment.addr, align 8, !dbg !18950, !tbaa !2447
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %5, i64 %6, i64 %7), !dbg !18951
  ret i32 %call, !dbg !18952
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %h, i64 %size, i64 %alignment) #4 !dbg !18953 !ctir !1419 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  %extra = alloca i32, align 4, !ctir !7
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !18954, metadata !DIExpression()), !dbg !18955
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18956, metadata !DIExpression()), !dbg !18957
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !18958, metadata !DIExpression()), !dbg !18959
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %chunk, metadata !18960, metadata !DIExpression()), !dbg !18961
  %0 = load i64, i64* %alignment.addr, align 8, !dbg !18962, !tbaa !2447
  %cmp = icmp eq i64 %0, 0, !dbg !18964
  br i1 %cmp, label %if.then, label %if.end, !dbg !18965

if.then:                                          ; preds = %entry
  store i64 16, i64* %alignment.addr, align 8, !dbg !18966, !tbaa !2447
  br label %if.end, !dbg !18967

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !18968, !tbaa !2447
  %cmp1 = icmp eq i64 %1, 0, !dbg !18970
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !18971

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !18972, metadata !DIExpression()), !dbg !18974
  store i32 32, i32* %extra, align 4, !dbg !18974, !tbaa !2273
  %2 = load i32, i32* %extra, align 4, !dbg !18975, !tbaa !2273
  %sub = sub nsw i32 4096, %2, !dbg !18976
  %conv = sext i32 %sub to i64, !dbg !18977
  store i64 %conv, i64* %size.addr, align 8, !dbg !18978, !tbaa !2447
  br label %if.end3, !dbg !18979

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, i64* %size.addr, align 8, !dbg !18980, !tbaa !2447
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18981, !tbaa !2286
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 0, !dbg !18982, !ctir !1366
  store i64 %3, i64* %chunk_size, align 8, !dbg !18983, !tbaa !18984, !ctir !55
  %5 = load i64, i64* %alignment.addr, align 8, !dbg !18985, !tbaa !2447
  %sub4 = sub i64 %5, 1, !dbg !18986
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18987, !tbaa !2286
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 6, !dbg !18988, !ctir !1366
  store i64 %sub4, i64* %alignment_mask, align 8, !dbg !18989, !tbaa !16717, !ctir !55
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18990, !tbaa !2286
  %8 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18991, !tbaa !2286
  %chunk_size5 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 0, !dbg !18992, !ctir !1366
  %9 = load i64, i64* %chunk_size5, align 8, !dbg !18992, !tbaa !18984, !ctir !55
  %call = call i8* @call_chunkfun(%struct.obstack* %7, i64 %9), !dbg !18993
  %10 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !18993
  %11 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !18994, !tbaa !2286
  %chunk6 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 1, !dbg !18995, !ctir !1366
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk6, align 8, !dbg !18996, !tbaa !16629, !ctir !1371
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk, align 8, !dbg !18997, !tbaa !2286
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !18998, !tbaa !2286
  %tobool = icmp ne %struct._obstack_chunk* %12, null, !dbg !18998
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !19000

if.then7:                                         ; preds = %if.end3
  %13 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !19001, !tbaa !2286
  call void %13() #15, !dbg !19002
  unreachable, !dbg !19002

if.end8:                                          ; preds = %if.end3
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19003, !tbaa !2286
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %14, i32 0, i32 2, !dbg !19003, !ctir !1372
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !19003
  %sub.ptr.lhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !19003
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !19003
  %15 = load i64, i64* %alignment.addr, align 8, !dbg !19003, !tbaa !2447
  %sub9 = sub i64 %15, 1, !dbg !19003
  %add = add i64 %sub.ptr.sub, %sub9, !dbg !19003
  %16 = load i64, i64* %alignment.addr, align 8, !dbg !19003, !tbaa !2447
  %sub10 = sub i64 %16, 1, !dbg !19003
  %neg = xor i64 %sub10, -1, !dbg !19003
  %and = and i64 %add, %neg, !dbg !19003
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !19003
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19004, !tbaa !2286
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 2, !dbg !19005, !ctir !1366
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !19006, !tbaa !16631, !ctir !9
  %18 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19007, !tbaa !2286
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3, !dbg !19008, !ctir !1366
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !19009, !tbaa !16632, !ctir !9
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19010, !tbaa !2286
  %20 = bitcast %struct._obstack_chunk* %19 to i8*, !dbg !19011
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19012, !tbaa !2286
  %chunk_size11 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !19013, !ctir !1366
  %22 = load i64, i64* %chunk_size11, align 8, !dbg !19013, !tbaa !18984, !ctir !55
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !19014
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19015, !tbaa !2286
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 0, !dbg !19016, !ctir !1372
  store i8* %add.ptr12, i8** %limit, align 8, !dbg !19017, !tbaa !2286, !ctir !9
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19018, !tbaa !2286
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !19019, !ctir !1366
  store i8* %add.ptr12, i8** %chunk_limit, align 8, !dbg !19020, !tbaa !16630, !ctir !9
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19021, !tbaa !2286
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %25, i32 0, i32 1, !dbg !19022, !ctir !1372
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %prev, align 8, !dbg !19023, !tbaa !2286, !ctir !1371
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19024, !tbaa !2286
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 10, !dbg !19025, !ctir !1366
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !19026
  %bf.clear = and i8 %bf.load, -3, !dbg !19026
  store i8 %bf.clear, i8* %maybe_empty_object, align 8, !dbg !19026
  %27 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19027, !tbaa !2286
  %alloc_failed = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 10, !dbg !19028, !ctir !1366
  %bf.load13 = load i8, i8* %alloc_failed, align 8, !dbg !19029
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !19029
  store i8 %bf.clear14, i8* %alloc_failed, align 8, !dbg !19029
  ret i32 1, !dbg !19030
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %h, i64 %size) #4 !dbg !19031 !ctir !1421 {
entry:
  %retval = alloca i8*, align 8
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19032, metadata !DIExpression()), !dbg !19033
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19034, metadata !DIExpression()), !dbg !19035
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19036, !tbaa !2286
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !19038, !ctir !1366
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19038
  %bf.clear = and i8 %bf.load, 1, !dbg !19038
  %bf.cast = zext i8 %bf.clear to i32, !dbg !19038
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !19036
  br i1 %tobool, label %if.then, label %if.else, !dbg !19039

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19040, !tbaa !2286
  %chunkfun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !19041, !ctir !1366
  %extra = bitcast %union.anon.0* %chunkfun to i8* (i8*, i64)**, !dbg !19042
  %2 = load i8* (i8*, i64)*, i8* (i8*, i64)** %extra, align 8, !dbg !19042, !tbaa !2438, !ctir !1387
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19043, !tbaa !2286
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !19044, !ctir !1366
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !19044, !tbaa !19045, !ctir !53
  %5 = load i64, i64* %size.addr, align 8, !dbg !19046, !tbaa !2447
  %call = call i8* %2(i8* %4, i64 %5), !dbg !19040
  store i8* %call, i8** %retval, align 8, !dbg !19047
  br label %return, !dbg !19047

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19048, !tbaa !2286
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 7, !dbg !19049, !ctir !1366
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !19050
  %7 = load i8* (i64)*, i8* (i64)** %plain, align 8, !dbg !19050, !tbaa !2438, !ctir !1387
  %8 = load i64, i64* %size.addr, align 8, !dbg !19051, !tbaa !2447
  %call2 = call i8* %7(i64 %8), !dbg !19048
  store i8* %call2, i8** %retval, align 8, !dbg !19052
  br label %return, !dbg !19052

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !19053
  ret i8* %9, !dbg !19053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i8*, i64)* %chunkfun, void (i8*, i8*)* %freefun, i8* %arg) #4 !dbg !19054 !ctir !1409 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i8*, i64)*, align 8
  %freefun.addr = alloca void (i8*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19055, metadata !DIExpression()), !dbg !19056
  store i64 %size, i64* %size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19057, metadata !DIExpression()), !dbg !19058
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !19059, metadata !DIExpression()), !dbg !19060
  store i8* (i8*, i64)* %chunkfun, i8* (i8*, i64)** %chunkfun.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %chunkfun.addr, metadata !19061, metadata !DIExpression()), !dbg !19062
  store void (i8*, i8*)* %freefun, void (i8*, i8*)** %freefun.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %freefun.addr, metadata !19063, metadata !DIExpression()), !dbg !19064
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19065, metadata !DIExpression()), !dbg !19066
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** %chunkfun.addr, align 8, !dbg !19067, !tbaa !2286
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19068, !tbaa !2286
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !19069, !ctir !1366
  %extra = bitcast %union.anon.0* %chunkfun1 to i8* (i8*, i64)**, !dbg !19070
  store i8* (i8*, i64)* %0, i8* (i8*, i64)** %extra, align 8, !dbg !19071, !tbaa !2438, !ctir !1387
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %freefun.addr, align 8, !dbg !19072, !tbaa !2286
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19073, !tbaa !2286
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !19074, !ctir !1366
  %extra3 = bitcast %union.anon.1* %freefun2 to void (i8*, i8*)**, !dbg !19075
  store void (i8*, i8*)* %2, void (i8*, i8*)** %extra3, align 8, !dbg !19076, !tbaa !2438, !ctir !1398
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !19077, !tbaa !2286
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19078, !tbaa !2286
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 9, !dbg !19079, !ctir !1366
  store i8* %4, i8** %extra_arg, align 8, !dbg !19080, !tbaa !19045, !ctir !53
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19081, !tbaa !2286
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !19082, !ctir !1366
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19083
  %bf.clear = and i8 %bf.load, -2, !dbg !19083
  %bf.set = or i8 %bf.clear, 1, !dbg !19083
  store i8 %bf.set, i8* %use_extra_arg, align 8, !dbg !19083
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19084, !tbaa !2286
  %8 = load i64, i64* %size.addr, align 8, !dbg !19085, !tbaa !2447
  %9 = load i64, i64* %alignment.addr, align 8, !dbg !19086, !tbaa !2447
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %7, i64 %8, i64 %9), !dbg !19087
  ret i32 %call, !dbg !19088
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %h, i64 %length) #4 !dbg !19089 !ctir !1411 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %length.addr = alloca i64, align 8
  %old_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  %new_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  %obj_size = alloca i64, align 8, !ctir !55
  %object_base1 = alloca i8*, align 8, !ctir !9
  %sum1 = alloca i64, align 8, !ctir !55
  %sum2 = alloca i64, align 8, !ctir !55
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19090, metadata !DIExpression()), !dbg !19091
  store i64 %length, i64* %length.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !19092, metadata !DIExpression()), !dbg !19093
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %old_chunk, metadata !19094, metadata !DIExpression()), !dbg !19095
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19096, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19097, !ctir !1366
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19097, !tbaa !16629, !ctir !1371
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19095, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %new_chunk, metadata !19098, metadata !DIExpression()), !dbg !19099
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19099, !tbaa !2286
  call void @llvm.dbg.declare(metadata i64* %obj_size, metadata !19100, metadata !DIExpression()), !dbg !19101
  %2 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19102, !tbaa !2286
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 3, !dbg !19103, !ctir !1366
  %3 = load i8*, i8** %next_free, align 8, !dbg !19103, !tbaa !16632, !ctir !9
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19104, !tbaa !2286
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 2, !dbg !19105, !ctir !1366
  %5 = load i8*, i8** %object_base, align 8, !dbg !19105, !tbaa !16631, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !19106
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !19106
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19106
  store i64 %sub.ptr.sub, i64* %obj_size, align 8, !dbg !19101, !tbaa !2447
  call void @llvm.dbg.declare(metadata i8** %object_base1, metadata !19107, metadata !DIExpression()), !dbg !19108
  call void @llvm.dbg.declare(metadata i64* %sum1, metadata !19109, metadata !DIExpression()), !dbg !19110
  %6 = load i64, i64* %obj_size, align 8, !dbg !19111, !tbaa !2447
  %7 = load i64, i64* %length.addr, align 8, !dbg !19112, !tbaa !2447
  %add = add i64 %6, %7, !dbg !19113
  store i64 %add, i64* %sum1, align 8, !dbg !19110, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !19114, metadata !DIExpression()), !dbg !19115
  %8 = load i64, i64* %sum1, align 8, !dbg !19116, !tbaa !2447
  %9 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19117, !tbaa !2286
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 6, !dbg !19118, !ctir !1366
  %10 = load i64, i64* %alignment_mask, align 8, !dbg !19118, !tbaa !16717, !ctir !55
  %add2 = add i64 %8, %10, !dbg !19119
  store i64 %add2, i64* %sum2, align 8, !dbg !19115, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !19120, metadata !DIExpression()), !dbg !19121
  %11 = load i64, i64* %sum2, align 8, !dbg !19122, !tbaa !2447
  %12 = load i64, i64* %obj_size, align 8, !dbg !19123, !tbaa !2447
  %shr = lshr i64 %12, 3, !dbg !19124
  %add3 = add i64 %11, %shr, !dbg !19125
  %add4 = add i64 %add3, 100, !dbg !19126
  store i64 %add4, i64* %new_size, align 8, !dbg !19121, !tbaa !2447
  %13 = load i64, i64* %new_size, align 8, !dbg !19127, !tbaa !2447
  %14 = load i64, i64* %sum2, align 8, !dbg !19129, !tbaa !2447
  %cmp = icmp ult i64 %13, %14, !dbg !19130
  br i1 %cmp, label %if.then, label %if.end, !dbg !19131

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %sum2, align 8, !dbg !19132, !tbaa !2447
  store i64 %15, i64* %new_size, align 8, !dbg !19133, !tbaa !2447
  br label %if.end, !dbg !19134

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %new_size, align 8, !dbg !19135, !tbaa !2447
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19137, !tbaa !2286
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 0, !dbg !19138, !ctir !1366
  %18 = load i64, i64* %chunk_size, align 8, !dbg !19138, !tbaa !18984, !ctir !55
  %cmp5 = icmp ult i64 %16, %18, !dbg !19139
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !19140

if.then6:                                         ; preds = %if.end
  %19 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19141, !tbaa !2286
  %chunk_size7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 0, !dbg !19142, !ctir !1366
  %20 = load i64, i64* %chunk_size7, align 8, !dbg !19142, !tbaa !18984, !ctir !55
  store i64 %20, i64* %new_size, align 8, !dbg !19143, !tbaa !2447
  br label %if.end8, !dbg !19144

if.end8:                                          ; preds = %if.then6, %if.end
  %21 = load i64, i64* %obj_size, align 8, !dbg !19145, !tbaa !2447
  %22 = load i64, i64* %sum1, align 8, !dbg !19147, !tbaa !2447
  %cmp9 = icmp ule i64 %21, %22, !dbg !19148
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !19149

land.lhs.true:                                    ; preds = %if.end8
  %23 = load i64, i64* %sum1, align 8, !dbg !19150, !tbaa !2447
  %24 = load i64, i64* %sum2, align 8, !dbg !19151, !tbaa !2447
  %cmp10 = icmp ule i64 %23, %24, !dbg !19152
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !19153

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19154, !tbaa !2286
  %26 = load i64, i64* %new_size, align 8, !dbg !19155, !tbaa !2447
  %call = call i8* @call_chunkfun(%struct.obstack* %25, i64 %26), !dbg !19156
  %27 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !19156
  store %struct._obstack_chunk* %27, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19157, !tbaa !2286
  br label %if.end12, !dbg !19158

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19159, !tbaa !2286
  %tobool = icmp ne %struct._obstack_chunk* %28, null, !dbg !19159
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !19161

if.then13:                                        ; preds = %if.end12
  %29 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !19162, !tbaa !2286
  call void %29() #15, !dbg !19163
  unreachable, !dbg !19163

if.end14:                                         ; preds = %if.end12
  %30 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19164, !tbaa !2286
  %31 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19165, !tbaa !2286
  %chunk15 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 1, !dbg !19166, !ctir !1366
  store %struct._obstack_chunk* %30, %struct._obstack_chunk** %chunk15, align 8, !dbg !19167, !tbaa !16629, !ctir !1371
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19168, !tbaa !2286
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19169, !tbaa !2286
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %33, i32 0, i32 1, !dbg !19170, !ctir !1372
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %prev, align 8, !dbg !19171, !tbaa !2286, !ctir !1371
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19172, !tbaa !2286
  %35 = bitcast %struct._obstack_chunk* %34 to i8*, !dbg !19173
  %36 = load i64, i64* %new_size, align 8, !dbg !19174, !tbaa !2447
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !19175
  %37 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19176, !tbaa !2286
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 4, !dbg !19177, !ctir !1366
  store i8* %add.ptr, i8** %chunk_limit, align 8, !dbg !19178, !tbaa !16630, !ctir !9
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19179, !tbaa !2286
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %38, i32 0, i32 0, !dbg !19180, !ctir !1372
  store i8* %add.ptr, i8** %limit, align 8, !dbg !19181, !tbaa !2286, !ctir !9
  %39 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19182, !tbaa !2286
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %39, i32 0, i32 2, !dbg !19182, !ctir !1372
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !19182
  %sub.ptr.lhs.cast16 = ptrtoint i8* %arraydecay to i64, !dbg !19182
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast16, 0, !dbg !19182
  %40 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19182, !tbaa !2286
  %alignment_mask18 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6, !dbg !19182, !ctir !1366
  %41 = load i64, i64* %alignment_mask18, align 8, !dbg !19182, !tbaa !16717, !ctir !55
  %add19 = add i64 %sub.ptr.sub17, %41, !dbg !19182
  %42 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19182, !tbaa !2286
  %alignment_mask20 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 6, !dbg !19182, !ctir !1366
  %43 = load i64, i64* %alignment_mask20, align 8, !dbg !19182, !tbaa !16717, !ctir !55
  %neg = xor i64 %43, -1, !dbg !19182
  %and = and i64 %add19, %neg, !dbg !19182
  %add.ptr21 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !19182
  store i8* %add.ptr21, i8** %object_base1, align 8, !dbg !19183, !tbaa !2286
  %44 = load i8*, i8** %object_base1, align 8, !dbg !19184, !tbaa !2286
  %45 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19185, !tbaa !2286
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 2, !dbg !19186, !ctir !1366
  %46 = load i8*, i8** %object_base22, align 8, !dbg !19186, !tbaa !16631, !ctir !9
  %47 = load i64, i64* %obj_size, align 8, !dbg !19187, !tbaa !2447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %46, i64 %47, i1 false), !dbg !19188
  %48 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19189, !tbaa !2286
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 10, !dbg !19191, !ctir !1366
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !19191
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !19191
  %bf.clear = and i8 %bf.lshr, 1, !dbg !19191
  %bf.cast = zext i8 %bf.clear to i32, !dbg !19191
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !19189
  br i1 %tobool23, label %if.end40, label %land.lhs.true24, !dbg !19192

land.lhs.true24:                                  ; preds = %if.end14
  %49 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19193, !tbaa !2286
  %object_base25 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !19194, !ctir !1366
  %50 = load i8*, i8** %object_base25, align 8, !dbg !19194, !tbaa !16631, !ctir !9
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19195, !tbaa !2286
  %contents26 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %51, i32 0, i32 2, !dbg !19195, !ctir !1372
  %arraydecay27 = getelementptr inbounds [0 x i8], [0 x i8]* %contents26, i64 0, i64 0, !dbg !19195
  %sub.ptr.lhs.cast28 = ptrtoint i8* %arraydecay27 to i64, !dbg !19195
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast28, 0, !dbg !19195
  %52 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19195, !tbaa !2286
  %alignment_mask30 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 6, !dbg !19195, !ctir !1366
  %53 = load i64, i64* %alignment_mask30, align 8, !dbg !19195, !tbaa !16717, !ctir !55
  %add31 = add i64 %sub.ptr.sub29, %53, !dbg !19195
  %54 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19195, !tbaa !2286
  %alignment_mask32 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !19195, !ctir !1366
  %55 = load i64, i64* %alignment_mask32, align 8, !dbg !19195, !tbaa !16717, !ctir !55
  %neg33 = xor i64 %55, -1, !dbg !19195
  %and34 = and i64 %add31, %neg33, !dbg !19195
  %add.ptr35 = getelementptr inbounds i8, i8* null, i64 %and34, !dbg !19195
  %cmp36 = icmp eq i8* %50, %add.ptr35, !dbg !19196
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !19197

if.then37:                                        ; preds = %land.lhs.true24
  %56 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19198, !tbaa !2286
  %prev38 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %56, i32 0, i32 1, !dbg !19200, !ctir !1372
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev38, align 8, !dbg !19200, !tbaa !2286, !ctir !1371
  %58 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !19201, !tbaa !2286
  %prev39 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %58, i32 0, i32 1, !dbg !19202, !ctir !1372
  store %struct._obstack_chunk* %57, %struct._obstack_chunk** %prev39, align 8, !dbg !19203, !tbaa !2286, !ctir !1371
  %59 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19204, !tbaa !2286
  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !19205, !tbaa !2286
  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !19205
  call void @call_freefun(%struct.obstack* %59, i8* %61), !dbg !19206
  br label %if.end40, !dbg !19207

if.end40:                                         ; preds = %if.then37, %land.lhs.true24, %if.end14
  %62 = load i8*, i8** %object_base1, align 8, !dbg !19208, !tbaa !2286
  %63 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19209, !tbaa !2286
  %object_base41 = getelementptr inbounds %struct.obstack, %struct.obstack* %63, i32 0, i32 2, !dbg !19210, !ctir !1366
  store i8* %62, i8** %object_base41, align 8, !dbg !19211, !tbaa !16631, !ctir !9
  %64 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19212, !tbaa !2286
  %object_base42 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 2, !dbg !19213, !ctir !1366
  %65 = load i8*, i8** %object_base42, align 8, !dbg !19213, !tbaa !16631, !ctir !9
  %66 = load i64, i64* %obj_size, align 8, !dbg !19214, !tbaa !2447
  %add.ptr43 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !19215
  %67 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19216, !tbaa !2286
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3, !dbg !19217, !ctir !1366
  store i8* %add.ptr43, i8** %next_free44, align 8, !dbg !19218, !tbaa !16632, !ctir !9
  %68 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19219, !tbaa !2286
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0, i32 10, !dbg !19220, !ctir !1366
  %bf.load46 = load i8, i8* %maybe_empty_object45, align 8, !dbg !19221
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !19221
  store i8 %bf.clear47, i8* %maybe_empty_object45, align 8, !dbg !19221
  ret void, !dbg !19222
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %h, i8* %old_chunk) #4 !dbg !19223 !ctir !1415 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %old_chunk.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19224, metadata !DIExpression()), !dbg !19225
  store i8* %old_chunk, i8** %old_chunk.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %old_chunk.addr, metadata !19226, metadata !DIExpression()), !dbg !19227
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19228, !tbaa !2286
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !19230, !ctir !1366
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !19230
  %bf.clear = and i8 %bf.load, 1, !dbg !19230
  %bf.cast = zext i8 %bf.clear to i32, !dbg !19230
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !19228
  br i1 %tobool, label %if.then, label %if.else, !dbg !19231

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19232, !tbaa !2286
  %freefun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 8, !dbg !19233, !ctir !1366
  %extra = bitcast %union.anon.1* %freefun to void (i8*, i8*)**, !dbg !19234
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %extra, align 8, !dbg !19234, !tbaa !2438, !ctir !1398
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19235, !tbaa !2286
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !19236, !ctir !1366
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !19236, !tbaa !19045, !ctir !53
  %5 = load i8*, i8** %old_chunk.addr, align 8, !dbg !19237, !tbaa !2286
  call void %2(i8* %4, i8* %5), !dbg !19232
  br label %if.end, !dbg !19232

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19238, !tbaa !2286
  %freefun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 8, !dbg !19239, !ctir !1366
  %plain = bitcast %union.anon.1* %freefun1 to void (i8*)**, !dbg !19240
  %7 = load void (i8*)*, void (i8*)** %plain, align 8, !dbg !19240, !tbaa !2438, !ctir !1398
  %8 = load i8*, i8** %old_chunk.addr, align 8, !dbg !19241, !tbaa !2286
  call void %7(i8* %8), !dbg !19238
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !19242
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %h, i8* %obj) #9 !dbg !19243 !ctir !1413 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19244, metadata !DIExpression()), !dbg !19245
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !19246, metadata !DIExpression()), !dbg !19247
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !19248, metadata !DIExpression()), !dbg !19249
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !19250, metadata !DIExpression()), !dbg !19251
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19252, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19253, !ctir !1366
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19253, !tbaa !16629, !ctir !1371
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !19254, !tbaa !2286
  br label %while.cond, !dbg !19255

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19256, !tbaa !2286
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !19257
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19258

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19259, !tbaa !2286
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !19260
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !19261, !tbaa !2286
  %cmp1 = icmp uge i8* %4, %5, !dbg !19262
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !19263

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19264, !tbaa !2286
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !19265, !ctir !1372
  %7 = load i8*, i8** %limit, align 8, !dbg !19265, !tbaa !2286, !ctir !9
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !19266, !tbaa !2286
  %cmp2 = icmp ult i8* %7, %8, !dbg !19267
  br label %lor.end, !dbg !19263

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !19268
  br i1 %10, label %while.body, label %while.end, !dbg !19255

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19269, !tbaa !2286
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !19271, !ctir !1372
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !19271, !tbaa !2286, !ctir !1371
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !19272, !tbaa !2286
  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !19273, !tbaa !2286
  store %struct._obstack_chunk* %13, %struct._obstack_chunk** %lp, align 8, !dbg !19274, !tbaa !2286
  br label %while.cond, !dbg !19255, !llvm.loop !19275

while.end:                                        ; preds = %land.end
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19277, !tbaa !2286
  %cmp3 = icmp ne %struct._obstack_chunk* %14, null, !dbg !19278
  %conv = zext i1 %cmp3 to i32, !dbg !19278
  ret i32 %conv, !dbg !19279
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %h, i8* %obj) #4 !dbg !19280 !ctir !1415 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19281, metadata !DIExpression()), !dbg !19282
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !19283, metadata !DIExpression()), !dbg !19284
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !19285, metadata !DIExpression()), !dbg !19286
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !19287, metadata !DIExpression()), !dbg !19288
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19289, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19290, !ctir !1366
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19290, !tbaa !16629, !ctir !1371
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !19291, !tbaa !2286
  br label %while.cond, !dbg !19292

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19293, !tbaa !2286
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !19294
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19295

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19296, !tbaa !2286
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !19297
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !19298, !tbaa !2286
  %cmp1 = icmp uge i8* %4, %5, !dbg !19299
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !19300

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19301, !tbaa !2286
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !19302, !ctir !1372
  %7 = load i8*, i8** %limit, align 8, !dbg !19302, !tbaa !2286, !ctir !9
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !19303, !tbaa !2286
  %cmp2 = icmp ult i8* %7, %8, !dbg !19304
  br label %lor.end, !dbg !19300

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !19305
  br i1 %10, label %while.body, label %while.end, !dbg !19292

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19306, !tbaa !2286
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !19308, !ctir !1372
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !19308, !tbaa !2286, !ctir !1371
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !19309, !tbaa !2286
  %13 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19310, !tbaa !2286
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19311, !tbaa !2286
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !19311
  call void @call_freefun(%struct.obstack* %13, i8* %15), !dbg !19312
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !19313, !tbaa !2286
  store %struct._obstack_chunk* %16, %struct._obstack_chunk** %lp, align 8, !dbg !19314, !tbaa !2286
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19315, !tbaa !2286
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10, !dbg !19316, !ctir !1366
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !19317
  %bf.clear = and i8 %bf.load, -3, !dbg !19317
  %bf.set = or i8 %bf.clear, 2, !dbg !19317
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !19317
  br label %while.cond, !dbg !19292, !llvm.loop !19318

while.end:                                        ; preds = %land.end
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19320, !tbaa !2286
  %tobool = icmp ne %struct._obstack_chunk* %18, null, !dbg !19320
  br i1 %tobool, label %if.then, label %if.else, !dbg !19322

if.then:                                          ; preds = %while.end
  %19 = load i8*, i8** %obj.addr, align 8, !dbg !19323, !tbaa !2286
  %20 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19325, !tbaa !2286
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !19326, !ctir !1366
  store i8* %19, i8** %next_free, align 8, !dbg !19327, !tbaa !16632, !ctir !9
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19328, !tbaa !2286
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 2, !dbg !19329, !ctir !1366
  store i8* %19, i8** %object_base, align 8, !dbg !19330, !tbaa !16631, !ctir !9
  %22 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19331, !tbaa !2286
  %limit3 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %22, i32 0, i32 0, !dbg !19332, !ctir !1372
  %23 = load i8*, i8** %limit3, align 8, !dbg !19332, !tbaa !2286, !ctir !9
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19333, !tbaa !2286
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !19334, !ctir !1366
  store i8* %23, i8** %chunk_limit, align 8, !dbg !19335, !tbaa !16630, !ctir !9
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19336, !tbaa !2286
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19337, !tbaa !2286
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 1, !dbg !19338, !ctir !1366
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %chunk4, align 8, !dbg !19339, !tbaa !16629, !ctir !1371
  br label %if.end7, !dbg !19340

if.else:                                          ; preds = %while.end
  %27 = load i8*, i8** %obj.addr, align 8, !dbg !19341, !tbaa !2286
  %cmp5 = icmp ne i8* %27, null, !dbg !19343
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19344

if.then6:                                         ; preds = %if.else
  call void @abort() #13, !dbg !19345
  unreachable, !dbg !19345

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !19346
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @_obstack_memory_used(%struct.obstack* %h) #9 !dbg !19347 !ctir !1417 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1371
  %nbytes = alloca i64, align 8, !ctir !55
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !19348, metadata !DIExpression()), !dbg !19349
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !19350, metadata !DIExpression()), !dbg !19351
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !19352, metadata !DIExpression()), !dbg !19353
  store i64 0, i64* %nbytes, align 8, !dbg !19353, !tbaa !2447
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !19354, !tbaa !2286
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !19356, !ctir !1366
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !19356, !tbaa !16629, !ctir !1371
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !19357, !tbaa !2286
  br label %for.cond, !dbg !19358

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19359, !tbaa !2286
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !19361
  br i1 %cmp, label %for.body, label %for.end, !dbg !19362

for.body:                                         ; preds = %for.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19363, !tbaa !2286
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %3, i32 0, i32 0, !dbg !19365, !ctir !1372
  %4 = load i8*, i8** %limit, align 8, !dbg !19365, !tbaa !2286, !ctir !9
  %5 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19366, !tbaa !2286
  %6 = bitcast %struct._obstack_chunk* %5 to i8*, !dbg !19367
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !19368
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !19368
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19368
  %7 = load i64, i64* %nbytes, align 8, !dbg !19369, !tbaa !2447
  %add = add i64 %7, %sub.ptr.sub, !dbg !19369
  store i64 %add, i64* %nbytes, align 8, !dbg !19369, !tbaa !2447
  br label %for.inc, !dbg !19370

for.inc:                                          ; preds = %for.body
  %8 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !19371, !tbaa !2286
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %8, i32 0, i32 1, !dbg !19372, !ctir !1372
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !19372, !tbaa !2286, !ctir !1371
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %lp, align 8, !dbg !19373, !tbaa !2286
  br label %for.cond, !dbg !19374, !llvm.loop !19375

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %nbytes, align 8, !dbg !19377, !tbaa !2447
  ret i64 %10, !dbg !19378
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !19379 !ctir !2127 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19381, metadata !DIExpression()), !dbg !19382
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19383, metadata !DIExpression()), !dbg !19384
  %0 = load i64, i64* %x.addr, align 8, !dbg !19385, !tbaa !2447
  %1 = load i32, i32* %n.addr, align 4, !dbg !19386, !tbaa !2273
  %sh_prom = zext i32 %1 to i64, !dbg !19387
  %shl = shl i64 %0, %sh_prom, !dbg !19387
  %2 = load i64, i64* %x.addr, align 8, !dbg !19388, !tbaa !2447
  %3 = load i32, i32* %n.addr, align 4, !dbg !19389, !tbaa !2273
  %sub = sub nsw i32 64, %3, !dbg !19390
  %sh_prom1 = zext i32 %sub to i64, !dbg !19391
  %shr = lshr i64 %2, %sh_prom1, !dbg !19391
  %or = or i64 %shl, %shr, !dbg !19392
  ret i64 %or, !dbg !19393
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !19394 !ctir !2127 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19395, metadata !DIExpression()), !dbg !19396
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19397, metadata !DIExpression()), !dbg !19398
  %0 = load i64, i64* %x.addr, align 8, !dbg !19399, !tbaa !2447
  %1 = load i32, i32* %n.addr, align 4, !dbg !19400, !tbaa !2273
  %sh_prom = zext i32 %1 to i64, !dbg !19401
  %shr = lshr i64 %0, %sh_prom, !dbg !19401
  %2 = load i64, i64* %x.addr, align 8, !dbg !19402, !tbaa !2447
  %3 = load i32, i32* %n.addr, align 4, !dbg !19403, !tbaa !2273
  %sub = sub nsw i32 64, %3, !dbg !19404
  %sh_prom1 = zext i32 %sub to i64, !dbg !19405
  %shl = shl i64 %2, %sh_prom1, !dbg !19405
  %or = or i64 %shr, %shl, !dbg !19406
  ret i64 %or, !dbg !19407
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !19408 !ctir !2130 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19409, metadata !DIExpression()), !dbg !19410
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19411, metadata !DIExpression()), !dbg !19412
  %0 = load i32, i32* %x.addr, align 4, !dbg !19413, !tbaa !2273
  %1 = load i32, i32* %n.addr, align 4, !dbg !19414, !tbaa !2273
  %shl = shl i32 %0, %1, !dbg !19415
  %2 = load i32, i32* %x.addr, align 4, !dbg !19416, !tbaa !2273
  %3 = load i32, i32* %n.addr, align 4, !dbg !19417, !tbaa !2273
  %sub = sub nsw i32 32, %3, !dbg !19418
  %shr = lshr i32 %2, %sub, !dbg !19419
  %or = or i32 %shl, %shr, !dbg !19420
  ret i32 %or, !dbg !19421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !19422 !ctir !2130 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19423, metadata !DIExpression()), !dbg !19424
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19425, metadata !DIExpression()), !dbg !19426
  %0 = load i32, i32* %x.addr, align 4, !dbg !19427, !tbaa !2273
  %1 = load i32, i32* %n.addr, align 4, !dbg !19428, !tbaa !2273
  %shr = lshr i32 %0, %1, !dbg !19429
  %2 = load i32, i32* %x.addr, align 4, !dbg !19430, !tbaa !2273
  %3 = load i32, i32* %n.addr, align 4, !dbg !19431, !tbaa !2273
  %sub = sub nsw i32 32, %3, !dbg !19432
  %shl = shl i32 %2, %sub, !dbg !19433
  %or = or i32 %shr, %shl, !dbg !19434
  ret i32 %or, !dbg !19435
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !19436 !ctir !2132 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19437, metadata !DIExpression()), !dbg !19438
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19439, metadata !DIExpression()), !dbg !19440
  %0 = load i64, i64* %x.addr, align 8, !dbg !19441, !tbaa !2447
  %1 = load i32, i32* %n.addr, align 4, !dbg !19442, !tbaa !2273
  %sh_prom = zext i32 %1 to i64, !dbg !19443
  %shl = shl i64 %0, %sh_prom, !dbg !19443
  %2 = load i64, i64* %x.addr, align 8, !dbg !19444, !tbaa !2447
  %3 = load i32, i32* %n.addr, align 4, !dbg !19445, !tbaa !2273
  %conv = sext i32 %3 to i64, !dbg !19445
  %sub = sub i64 64, %conv, !dbg !19446
  %shr = lshr i64 %2, %sub, !dbg !19447
  %or = or i64 %shl, %shr, !dbg !19448
  ret i64 %or, !dbg !19449
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !19450 !ctir !2132 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19451, metadata !DIExpression()), !dbg !19452
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19453, metadata !DIExpression()), !dbg !19454
  %0 = load i64, i64* %x.addr, align 8, !dbg !19455, !tbaa !2447
  %1 = load i32, i32* %n.addr, align 4, !dbg !19456, !tbaa !2273
  %sh_prom = zext i32 %1 to i64, !dbg !19457
  %shr = lshr i64 %0, %sh_prom, !dbg !19457
  %2 = load i64, i64* %x.addr, align 8, !dbg !19458, !tbaa !2447
  %3 = load i32, i32* %n.addr, align 4, !dbg !19459, !tbaa !2273
  %conv = sext i32 %3 to i64, !dbg !19459
  %sub = sub i64 64, %conv, !dbg !19460
  %shl = shl i64 %2, %sub, !dbg !19461
  %or = or i64 %shr, %shl, !dbg !19462
  ret i64 %or, !dbg !19463
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !19464 !ctir !2134 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !3423
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19465, metadata !DIExpression()), !dbg !19466
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19467, metadata !DIExpression()), !dbg !19468
  %0 = load i16, i16* %x.addr, align 2, !dbg !19469, !tbaa !3423
  %conv = zext i16 %0 to i32, !dbg !19469
  %1 = load i32, i32* %n.addr, align 4, !dbg !19470, !tbaa !2273
  %shl = shl i32 %conv, %1, !dbg !19471
  %2 = load i16, i16* %x.addr, align 2, !dbg !19472, !tbaa !3423
  %conv1 = zext i16 %2 to i32, !dbg !19472
  %3 = load i32, i32* %n.addr, align 4, !dbg !19473, !tbaa !2273
  %sub = sub nsw i32 16, %3, !dbg !19474
  %shr = ashr i32 %conv1, %sub, !dbg !19475
  %or = or i32 %shl, %shr, !dbg !19476
  %and = and i32 %or, 65535, !dbg !19477
  %conv2 = trunc i32 %and to i16, !dbg !19478
  ret i16 %conv2, !dbg !19479
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !19480 !ctir !2134 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !3423
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19481, metadata !DIExpression()), !dbg !19482
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19483, metadata !DIExpression()), !dbg !19484
  %0 = load i16, i16* %x.addr, align 2, !dbg !19485, !tbaa !3423
  %conv = zext i16 %0 to i32, !dbg !19485
  %1 = load i32, i32* %n.addr, align 4, !dbg !19486, !tbaa !2273
  %shr = ashr i32 %conv, %1, !dbg !19487
  %2 = load i16, i16* %x.addr, align 2, !dbg !19488, !tbaa !3423
  %conv1 = zext i16 %2 to i32, !dbg !19488
  %3 = load i32, i32* %n.addr, align 4, !dbg !19489, !tbaa !2273
  %sub = sub nsw i32 16, %3, !dbg !19490
  %shl = shl i32 %conv1, %sub, !dbg !19491
  %or = or i32 %shr, %shl, !dbg !19492
  %and = and i32 %or, 65535, !dbg !19493
  %conv2 = trunc i32 %and to i16, !dbg !19494
  ret i16 %conv2, !dbg !19495
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !19496 !ctir !2138 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19497, metadata !DIExpression()), !dbg !19498
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19499, metadata !DIExpression()), !dbg !19500
  %0 = load i8, i8* %x.addr, align 1, !dbg !19501, !tbaa !2438
  %conv = zext i8 %0 to i32, !dbg !19501
  %1 = load i32, i32* %n.addr, align 4, !dbg !19502, !tbaa !2273
  %shl = shl i32 %conv, %1, !dbg !19503
  %2 = load i8, i8* %x.addr, align 1, !dbg !19504, !tbaa !2438
  %conv1 = zext i8 %2 to i32, !dbg !19504
  %3 = load i32, i32* %n.addr, align 4, !dbg !19505, !tbaa !2273
  %sub = sub nsw i32 8, %3, !dbg !19506
  %shr = ashr i32 %conv1, %sub, !dbg !19507
  %or = or i32 %shl, %shr, !dbg !19508
  %and = and i32 %or, 255, !dbg !19509
  %conv2 = trunc i32 %and to i8, !dbg !19510
  ret i8 %conv2, !dbg !19511
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !19512 !ctir !2138 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19513, metadata !DIExpression()), !dbg !19514
  store i32 %n, i32* %n.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19515, metadata !DIExpression()), !dbg !19516
  %0 = load i8, i8* %x.addr, align 1, !dbg !19517, !tbaa !2438
  %conv = zext i8 %0 to i32, !dbg !19517
  %1 = load i32, i32* %n.addr, align 4, !dbg !19518, !tbaa !2273
  %shr = ashr i32 %conv, %1, !dbg !19519
  %2 = load i8, i8* %x.addr, align 1, !dbg !19520, !tbaa !2438
  %conv1 = zext i8 %2 to i32, !dbg !19520
  %3 = load i32, i32* %n.addr, align 4, !dbg !19521, !tbaa !2273
  %sub = sub nsw i32 8, %3, !dbg !19522
  %shl = shl i32 %conv1, %sub, !dbg !19523
  %or = or i32 %shr, %shl, !dbg !19524
  %and = and i32 %or, 255, !dbg !19525
  %conv2 = trunc i32 %and to i8, !dbg !19526
  ret i8 %conv2, !dbg !19527
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !19528 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19530, metadata !DIExpression()), !dbg !19531
  %0 = load i32, i32* %c.addr, align 4, !dbg !19532, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19533

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19534
  br label %return, !dbg !19534

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19536
  br label %return, !dbg !19536

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19537
  ret i1 %1, !dbg !19537
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !19538 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19539, metadata !DIExpression()), !dbg !19540
  %0 = load i32, i32* %c.addr, align 4, !dbg !19541, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19542

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19543
  br label %return, !dbg !19543

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19545
  br label %return, !dbg !19545

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19546
  ret i1 %1, !dbg !19546
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !19547 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19548, metadata !DIExpression()), !dbg !19549
  %0 = load i32, i32* %c.addr, align 4, !dbg !19550, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19551

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19552
  br label %return, !dbg !19552

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19554
  br label %return, !dbg !19554

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19555
  ret i1 %1, !dbg !19555
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !19556 !ctir !1524 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19557, metadata !DIExpression()), !dbg !19558
  %0 = load i32, i32* %c.addr, align 4, !dbg !19559, !tbaa !2273
  %cmp = icmp eq i32 %0, 32, !dbg !19560
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !19561

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !19562, !tbaa !2273
  %cmp1 = icmp eq i32 %1, 9, !dbg !19563
  br label %lor.end, !dbg !19561

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !19564
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !19565 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19566, metadata !DIExpression()), !dbg !19567
  %0 = load i32, i32* %c.addr, align 4, !dbg !19568, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !19569

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19570
  br label %return, !dbg !19570

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19572
  br label %return, !dbg !19572

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19573
  ret i1 %1, !dbg !19573
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !19574 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19575, metadata !DIExpression()), !dbg !19576
  %0 = load i32, i32* %c.addr, align 4, !dbg !19577, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !19578

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19579
  br label %return, !dbg !19579

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19581
  br label %return, !dbg !19581

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19582
  ret i1 %1, !dbg !19582
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !19583 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19584, metadata !DIExpression()), !dbg !19585
  %0 = load i32, i32* %c.addr, align 4, !dbg !19586, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19587

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19588
  br label %return, !dbg !19588

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19590
  br label %return, !dbg !19590

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19591
  ret i1 %1, !dbg !19591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !19592 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19593, metadata !DIExpression()), !dbg !19594
  %0 = load i32, i32* %c.addr, align 4, !dbg !19595, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !19596

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19597
  br label %return, !dbg !19597

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19599
  br label %return, !dbg !19599

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19600
  ret i1 %1, !dbg !19600
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !19601 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19602, metadata !DIExpression()), !dbg !19603
  %0 = load i32, i32* %c.addr, align 4, !dbg !19604, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19605

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19606
  br label %return, !dbg !19606

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19608
  br label %return, !dbg !19608

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19609
  ret i1 %1, !dbg !19609
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !19610 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19611, metadata !DIExpression()), !dbg !19612
  %0 = load i32, i32* %c.addr, align 4, !dbg !19613, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !19614

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19615
  br label %return, !dbg !19615

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19617
  br label %return, !dbg !19617

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19618
  ret i1 %1, !dbg !19618
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !19619 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19620, metadata !DIExpression()), !dbg !19621
  %0 = load i32, i32* %c.addr, align 4, !dbg !19622, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !19623

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19624
  br label %return, !dbg !19624

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19626
  br label %return, !dbg !19626

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19627
  ret i1 %1, !dbg !19627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !19628 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19629, metadata !DIExpression()), !dbg !19630
  %0 = load i32, i32* %c.addr, align 4, !dbg !19631, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19632

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19633
  br label %return, !dbg !19633

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19635
  br label %return, !dbg !19635

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19636
  ret i1 %1, !dbg !19636
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !19637 !ctir !1524 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19638, metadata !DIExpression()), !dbg !19639
  %0 = load i32, i32* %c.addr, align 4, !dbg !19640, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !19641

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !19642
  br label %return, !dbg !19642

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !19644
  br label %return, !dbg !19644

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !19645
  ret i1 %1, !dbg !19645
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !19646 !ctir !1846 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19647, metadata !DIExpression()), !dbg !19648
  %0 = load i32, i32* %c.addr, align 4, !dbg !19649, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19650

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !19651, !tbaa !2273
  %sub = sub nsw i32 %1, 65, !dbg !19653
  %add = add nsw i32 %sub, 97, !dbg !19654
  store i32 %add, i32* %retval, align 4, !dbg !19655
  br label %return, !dbg !19655

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !19656, !tbaa !2273
  store i32 %2, i32* %retval, align 4, !dbg !19657
  br label %return, !dbg !19657

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !19658
  ret i32 %3, !dbg !19658
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !19659 !ctir !1846 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !19660, metadata !DIExpression()), !dbg !19661
  %0 = load i32, i32* %c.addr, align 4, !dbg !19662, !tbaa !2273
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !19663

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !19664, !tbaa !2273
  %sub = sub nsw i32 %1, 97, !dbg !19666
  %add = add nsw i32 %sub, 65, !dbg !19667
  store i32 %add, i32* %retval, align 4, !dbg !19668
  br label %return, !dbg !19668

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !19669, !tbaa !2273
  store i32 %2, i32* %retval, align 4, !dbg !19670
  br label %return, !dbg !19670

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !19671
  ret i32 %3, !dbg !19671
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !19672 !ctir !481 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !2148
  %p2 = alloca i8*, align 8, !ctir !2148
  %c1 = alloca i8, align 1, !ctir !321
  %c2 = alloca i8, align 1, !ctir !321
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !19674, metadata !DIExpression()), !dbg !19675
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !19676, metadata !DIExpression()), !dbg !19677
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !19678, metadata !DIExpression()), !dbg !19679
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !19680, !tbaa !2286
  store i8* %0, i8** %p1, align 8, !dbg !19679, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !19681, metadata !DIExpression()), !dbg !19682
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !19683, !tbaa !2286
  store i8* %1, i8** %p2, align 8, !dbg !19682, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !19684, metadata !DIExpression()), !dbg !19685
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !19686, metadata !DIExpression()), !dbg !19687
  %2 = load i8*, i8** %p1, align 8, !dbg !19688, !tbaa !2286
  %3 = load i8*, i8** %p2, align 8, !dbg !19690, !tbaa !2286
  %cmp = icmp eq i8* %2, %3, !dbg !19691
  br i1 %cmp, label %if.then, label %if.end, !dbg !19692

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19693
  br label %return, !dbg !19693

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !19694

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !19695, !tbaa !2286
  %5 = load i8, i8* %4, align 1, !dbg !19697, !tbaa !2438, !ctir !943
  %conv = zext i8 %5 to i32, !dbg !19697
  %call = call i32 @c_tolower(i32 %conv), !dbg !19698
  %conv1 = trunc i32 %call to i8, !dbg !19698
  store i8 %conv1, i8* %c1, align 1, !dbg !19699, !tbaa !2438
  %6 = load i8*, i8** %p2, align 8, !dbg !19700, !tbaa !2286
  %7 = load i8, i8* %6, align 1, !dbg !19701, !tbaa !2438, !ctir !943
  %conv2 = zext i8 %7 to i32, !dbg !19701
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !19702
  %conv4 = trunc i32 %call3 to i8, !dbg !19702
  store i8 %conv4, i8* %c2, align 1, !dbg !19703, !tbaa !2438
  %8 = load i8, i8* %c1, align 1, !dbg !19704, !tbaa !2438
  %conv5 = zext i8 %8 to i32, !dbg !19704
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !19706
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19707

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !19708

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !19709, !tbaa !2286
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !19709
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !19709, !tbaa !2286
  %10 = load i8*, i8** %p2, align 8, !dbg !19710, !tbaa !2286
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19710
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !19710, !tbaa !2286
  br label %do.cond, !dbg !19711

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !19712, !tbaa !2438
  %conv11 = zext i8 %11 to i32, !dbg !19712
  %12 = load i8, i8* %c2, align 1, !dbg !19713, !tbaa !2438
  %conv12 = zext i8 %12 to i32, !dbg !19713
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !19714
  br i1 %cmp13, label %do.body, label %do.end, !dbg !19711, !llvm.loop !19715

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !19717, !tbaa !2438
  %conv15 = zext i8 %13 to i32, !dbg !19717
  %14 = load i8, i8* %c2, align 1, !dbg !19719, !tbaa !2438
  %conv16 = zext i8 %14 to i32, !dbg !19719
  %sub = sub nsw i32 %conv15, %conv16, !dbg !19720
  store i32 %sub, i32* %retval, align 4, !dbg !19721
  br label %return, !dbg !19721

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !19722
  ret i32 %15, !dbg !19722
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !19723 !ctir !2152 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !102
  %prev_fail = alloca i8, align 1, !ctir !102
  %fclose_fail = alloca i8, align 1, !ctir !102
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19725, metadata !DIExpression()), !dbg !19726
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !19727, metadata !DIExpression()), !dbg !19728
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19729, !tbaa !2286
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #12, !dbg !19730
  %cmp = icmp ne i64 %call, 0, !dbg !19731
  %frombool = zext i1 %cmp to i8, !dbg !19728
  store i8 %frombool, i8* %some_pending, align 1, !dbg !19728, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !19732, metadata !DIExpression()), !dbg !19733
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19734, !tbaa !2286
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #12, !dbg !19734
  %cmp2 = icmp ne i32 %call1, 0, !dbg !19735
  %frombool3 = zext i1 %cmp2 to i8, !dbg !19733
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !19733, !tbaa !2430
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !19736, metadata !DIExpression()), !dbg !19737
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19738, !tbaa !2286
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !19739
  %cmp5 = icmp ne i32 %call4, 0, !dbg !19740
  %frombool6 = zext i1 %cmp5 to i8, !dbg !19737
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !19737, !tbaa !2430
  %3 = load i8, i8* %prev_fail, align 1, !dbg !19741, !tbaa !2430
  %tobool = trunc i8 %3 to i1, !dbg !19741
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19743

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !19744, !tbaa !2430
  %tobool7 = trunc i8 %4 to i1, !dbg !19744
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !19745

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !19746, !tbaa !2430
  %tobool8 = trunc i8 %5 to i1, !dbg !19746
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !19747

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !19748
  %6 = load i32, i32* %call10, align 4, !dbg !19748, !tbaa !2273, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !19749
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !19750

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !19751, !tbaa !2430
  %tobool12 = trunc i8 %7 to i1, !dbg !19751
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !19754

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !19755
  store i32 0, i32* %call14, align 4, !dbg !19756, !tbaa !2273, !ctir !7
  br label %if.end, !dbg !19755

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19757
  br label %return, !dbg !19757

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !19758
  br label %return, !dbg !19758

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !19759
  ret i32 %8, !dbg !19759
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local { i64, i64 } @dtotimespec(double %sec) #11 !dbg !19760 !ctir !2191 {
entry:
  %retval = alloca %struct.timespec, align 8
  %sec.addr = alloca double, align 8
  %s = alloca i64, align 8, !ctir !2122
  %frac = alloca double, align 8, !ctir !377
  %ns = alloca i64, align 8, !ctir !31
  store double %sec, double* %sec.addr, align 8, !tbaa !3865
  call void @llvm.dbg.declare(metadata double* %sec.addr, metadata !19762, metadata !DIExpression()), !dbg !19763
  %0 = load double, double* %sec.addr, align 8, !dbg !19764, !tbaa !3865
  %cmp = fcmp olt double 0xC3E0000000000000, %0, !dbg !19766
  br i1 %cmp, label %if.else, label %if.then, !dbg !19767

if.then:                                          ; preds = %entry
  %call = call { i64, i64 } @make_timespec(i64 -9223372036854775808, i64 0), !dbg !19768
  %1 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19768
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !19768
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !19768
  store i64 %3, i64* %2, align 8, !dbg !19768
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !19768
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !19768
  store i64 %5, i64* %4, align 8, !dbg !19768
  br label %return, !dbg !19769

if.else:                                          ; preds = %entry
  %6 = load double, double* %sec.addr, align 8, !dbg !19770, !tbaa !3865
  %cmp1 = fcmp olt double %6, 0x43E0000000000000, !dbg !19772
  br i1 %cmp1, label %if.else4, label %if.then2, !dbg !19773

if.then2:                                         ; preds = %if.else
  %call3 = call { i64, i64 } @make_timespec(i64 9223372036854775807, i64 999999999), !dbg !19774
  %7 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19774
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !19774
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !19774
  store i64 %9, i64* %8, align 8, !dbg !19774
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !19774
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !19774
  store i64 %11, i64* %10, align 8, !dbg !19774
  br label %return, !dbg !19775

if.else4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %s, metadata !19776, metadata !DIExpression()), !dbg !19778
  %12 = load double, double* %sec.addr, align 8, !dbg !19779, !tbaa !3865
  %conv = fptosi double %12 to i64, !dbg !19779
  store i64 %conv, i64* %s, align 8, !dbg !19778, !tbaa !2447
  call void @llvm.dbg.declare(metadata double* %frac, metadata !19780, metadata !DIExpression()), !dbg !19781
  %13 = load double, double* %sec.addr, align 8, !dbg !19782, !tbaa !3865
  %14 = load i64, i64* %s, align 8, !dbg !19783, !tbaa !2447
  %conv5 = sitofp i64 %14 to double, !dbg !19783
  %sub = fsub double %13, %conv5, !dbg !19784
  %mul = fmul double 1.000000e+09, %sub, !dbg !19785
  store double %mul, double* %frac, align 8, !dbg !19781, !tbaa !3865
  call void @llvm.dbg.declare(metadata i64* %ns, metadata !19786, metadata !DIExpression()), !dbg !19787
  %15 = load double, double* %frac, align 8, !dbg !19788, !tbaa !3865
  %conv6 = fptosi double %15 to i64, !dbg !19788
  store i64 %conv6, i64* %ns, align 8, !dbg !19787, !tbaa !2447
  %16 = load i64, i64* %ns, align 8, !dbg !19789, !tbaa !2447
  %conv7 = sitofp i64 %16 to double, !dbg !19789
  %17 = load double, double* %frac, align 8, !dbg !19790, !tbaa !3865
  %cmp8 = fcmp olt double %conv7, %17, !dbg !19791
  %conv9 = zext i1 %cmp8 to i32, !dbg !19791
  %conv10 = sext i32 %conv9 to i64, !dbg !19789
  %18 = load i64, i64* %ns, align 8, !dbg !19792, !tbaa !2447
  %add = add nsw i64 %18, %conv10, !dbg !19792
  store i64 %add, i64* %ns, align 8, !dbg !19792, !tbaa !2447
  %19 = load i64, i64* %ns, align 8, !dbg !19793, !tbaa !2447
  %div = sdiv i64 %19, 1000000000, !dbg !19794
  %20 = load i64, i64* %s, align 8, !dbg !19795, !tbaa !2447
  %add11 = add nsw i64 %20, %div, !dbg !19795
  store i64 %add11, i64* %s, align 8, !dbg !19795, !tbaa !2447
  %21 = load i64, i64* %ns, align 8, !dbg !19796, !tbaa !2447
  %rem = srem i64 %21, 1000000000, !dbg !19796
  store i64 %rem, i64* %ns, align 8, !dbg !19796, !tbaa !2447
  %22 = load i64, i64* %ns, align 8, !dbg !19797, !tbaa !2447
  %cmp12 = icmp slt i64 %22, 0, !dbg !19799
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !19800

if.then14:                                        ; preds = %if.else4
  %23 = load i64, i64* %s, align 8, !dbg !19801, !tbaa !2447
  %dec = add nsw i64 %23, -1, !dbg !19801
  store i64 %dec, i64* %s, align 8, !dbg !19801, !tbaa !2447
  %24 = load i64, i64* %ns, align 8, !dbg !19803, !tbaa !2447
  %add15 = add nsw i64 %24, 1000000000, !dbg !19803
  store i64 %add15, i64* %ns, align 8, !dbg !19803, !tbaa !2447
  br label %if.end, !dbg !19804

if.end:                                           ; preds = %if.then14, %if.else4
  %25 = load i64, i64* %s, align 8, !dbg !19805, !tbaa !2447
  %26 = load i64, i64* %ns, align 8, !dbg !19806, !tbaa !2447
  %call16 = call { i64, i64 } @make_timespec(i64 %25, i64 %26), !dbg !19807
  %27 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19807
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i32 0, i32 0, !dbg !19807
  %29 = extractvalue { i64, i64 } %call16, 0, !dbg !19807
  store i64 %29, i64* %28, align 8, !dbg !19807
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i32 0, i32 1, !dbg !19807
  %31 = extractvalue { i64, i64 } %call16, 1, !dbg !19807
  store i64 %31, i64* %30, align 8, !dbg !19807
  br label %return, !dbg !19808

return:                                           ; preds = %if.end, %if.then2, %if.then
  %32 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19809
  %33 = load { i64, i64 }, { i64, i64 }* %32, align 8, !dbg !19809
  ret { i64, i64 } %33, !dbg !19809
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer_flag(i32 %fd, i32 %flag) #4 !dbg !19810 !ctir !1342 {
entry:
  %fd.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19812, metadata !DIExpression()), !dbg !19813
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !19814, metadata !DIExpression()), !dbg !19815
  %0 = load i32, i32* %fd.addr, align 4, !dbg !19816, !tbaa !2273
  %cmp = icmp sle i32 0, %0, !dbg !19818
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19819

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !19820, !tbaa !2273
  %cmp1 = icmp sle i32 %1, 2, !dbg !19821
  br i1 %cmp1, label %if.then, label %if.end, !dbg !19822

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !19823, metadata !DIExpression()), !dbg !19825
  %2 = load i32, i32* %fd.addr, align 4, !dbg !19826, !tbaa !2273
  %3 = load i32, i32* %flag.addr, align 4, !dbg !19827, !tbaa !2273
  %call = call i32 @dup_safer_flag(i32 %2, i32 %3), !dbg !19828
  store i32 %call, i32* %f, align 4, !dbg !19825, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %e, metadata !19829, metadata !DIExpression()), !dbg !19830
  %call2 = call i32* @__errno_location() #16, !dbg !19831
  %4 = load i32, i32* %call2, align 4, !dbg !19831, !tbaa !2273, !ctir !7
  store i32 %4, i32* %e, align 4, !dbg !19830, !tbaa !2273
  %5 = load i32, i32* %fd.addr, align 4, !dbg !19832, !tbaa !2273
  %call3 = call i32 @close(i32 %5), !dbg !19833
  %6 = load i32, i32* %e, align 4, !dbg !19834, !tbaa !2273
  %call4 = call i32* @__errno_location() #16, !dbg !19835
  store i32 %6, i32* %call4, align 4, !dbg !19836, !tbaa !2273, !ctir !7
  %7 = load i32, i32* %f, align 4, !dbg !19837, !tbaa !2273
  store i32 %7, i32* %fd.addr, align 4, !dbg !19838, !tbaa !2273
  br label %if.end, !dbg !19839

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !19840, !tbaa !2273
  ret i32 %8, !dbg !19841
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer_flag(i32 %fd, i32 %flag) #4 !dbg !19842 !ctir !1342 {
entry:
  %fd.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19844, metadata !DIExpression()), !dbg !19845
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !19846, metadata !DIExpression()), !dbg !19847
  %0 = load i32, i32* %fd.addr, align 4, !dbg !19848, !tbaa !2273
  %1 = load i32, i32* %flag.addr, align 4, !dbg !19849, !tbaa !2273
  %and = and i32 %1, 524288, !dbg !19850
  %tobool = icmp ne i32 %and, 0, !dbg !19851
  %2 = zext i1 %tobool to i64, !dbg !19851
  %cond = select i1 %tobool, i32 1030, i32 0, !dbg !19851
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 %cond, i32 3), !dbg !19852
  ret i32 %call, !dbg !19853
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !19854 !ctir !2206 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2208
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !19856, metadata !DIExpression()), !dbg !19857
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !19858, metadata !DIExpression()), !dbg !19859
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !19860, metadata !DIExpression()), !dbg !19861
  %0 = load i8*, i8** %file.addr, align 8, !dbg !19862, !tbaa !2286
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !19863, !tbaa !2286
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !19864
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !19861, !tbaa !2286
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19865, !tbaa !2286
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !19865
  br i1 %tobool, label %if.then, label %if.end21, !dbg !19867

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19868, metadata !DIExpression()), !dbg !19870
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19871, !tbaa !2286
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #12, !dbg !19872
  store i32 %call1, i32* %fd, align 4, !dbg !19870, !tbaa !2273
  %4 = load i32, i32* %fd, align 4, !dbg !19873, !tbaa !2273
  %cmp = icmp sle i32 0, %4, !dbg !19875
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !19876

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !19877, !tbaa !2273
  %cmp2 = icmp sle i32 %5, 2, !dbg !19878
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !19879

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !19880, metadata !DIExpression()), !dbg !19882
  %6 = load i32, i32* %fd, align 4, !dbg !19883, !tbaa !2273
  %call4 = call i32 @dup_safer(i32 %6), !dbg !19884
  store i32 %call4, i32* %f, align 4, !dbg !19882, !tbaa !2273
  %7 = load i32, i32* %f, align 4, !dbg !19885, !tbaa !2273
  %cmp5 = icmp slt i32 %7, 0, !dbg !19887
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19888

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !19889, metadata !DIExpression()), !dbg !19891
  %call7 = call i32* @__errno_location() #16, !dbg !19892
  %8 = load i32, i32* %call7, align 4, !dbg !19892, !tbaa !2273, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !19891, !tbaa !2273
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19893, !tbaa !2286
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !19894
  %10 = load i32, i32* %e, align 4, !dbg !19895, !tbaa !2273
  %call9 = call i32* @__errno_location() #16, !dbg !19896
  store i32 %10, i32* %call9, align 4, !dbg !19897, !tbaa !2273, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !19898
  br label %return, !dbg !19898

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19899, !tbaa !2286
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !19901
  %cmp11 = icmp ne i32 %call10, 0, !dbg !19902
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !19903

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !19904, !tbaa !2273
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !19905, !tbaa !2286
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #12, !dbg !19906
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !19907, !tbaa !2286
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !19907
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !19908

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !19909, metadata !DIExpression()), !dbg !19911
  %call16 = call i32* @__errno_location() #16, !dbg !19912
  %14 = load i32, i32* %call16, align 4, !dbg !19912, !tbaa !2273, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !19911, !tbaa !2273
  %15 = load i32, i32* %f, align 4, !dbg !19913, !tbaa !2273
  %call17 = call i32 @close(i32 %15), !dbg !19914
  %16 = load i32, i32* %e15, align 4, !dbg !19915, !tbaa !2273
  %call18 = call i32* @__errno_location() #16, !dbg !19916
  store i32 %16, i32* %call18, align 4, !dbg !19917, !tbaa !2273, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !19918
  br label %return, !dbg !19918

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !19919

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !19920

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !19921, !tbaa !2286
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !19922
  br label %return, !dbg !19922

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !19923
  ret %struct._IO_FILE* %18, !dbg !19923
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !19924 !ctir !2245 {
entry:
  %codeset = alloca i8*, align 8, !ctir !88
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !19926, metadata !DIExpression()), !dbg !19927
  %call = call i8* @nl_langinfo(i32 14) #12, !dbg !19928
  store i8* %call, i8** %codeset, align 8, !dbg !19929, !tbaa !2286
  %0 = load i8*, i8** %codeset, align 8, !dbg !19930, !tbaa !2286
  %cmp = icmp eq i8* %0, null, !dbg !19932
  br i1 %cmp, label %if.then, label %if.end, !dbg !19933

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.414, i64 0, i64 0), i8** %codeset, align 8, !dbg !19934, !tbaa !2286
  br label %if.end, !dbg !19935

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !19936, !tbaa !2286
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !19936, !ctir !88
  %2 = load i8, i8* %arrayidx, align 1, !dbg !19936, !tbaa !2438
  %conv = sext i8 %2 to i32, !dbg !19936
  %cmp1 = icmp eq i32 %conv, 0, !dbg !19940
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !19941

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.415, i64 0, i64 0), i8** %codeset, align 8, !dbg !19942, !tbaa !2286
  br label %if.end4, !dbg !19943

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !19944, !tbaa !2286
  ret i8* %3, !dbg !19945
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @memcoll(i8* %s1, i64 %s1len, i8* %s2, i64 %s2len) #4 !dbg !19946 !ctir !1927 {
entry:
  %s1.addr = alloca i8*, align 8
  %s1len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2len.addr = alloca i64, align 8
  %diff = alloca i32, align 4, !ctir !7
  %n1 = alloca i8, align 1, !ctir !10
  %n2 = alloca i8, align 1, !ctir !10
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !19948, metadata !DIExpression()), !dbg !19949
  store i64 %s1len, i64* %s1len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1len.addr, metadata !19950, metadata !DIExpression()), !dbg !19951
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !19952, metadata !DIExpression()), !dbg !19953
  store i64 %s2len, i64* %s2len.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2len.addr, metadata !19954, metadata !DIExpression()), !dbg !19955
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !19956, metadata !DIExpression()), !dbg !19957
  %0 = load i64, i64* %s1len.addr, align 8, !dbg !19958, !tbaa !2447
  %1 = load i64, i64* %s2len.addr, align 8, !dbg !19960, !tbaa !2447
  %cmp = icmp eq i64 %0, %1, !dbg !19961
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19962

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !19963, !tbaa !2286
  %3 = load i8*, i8** %s2.addr, align 8, !dbg !19964, !tbaa !2286
  %4 = load i64, i64* %s1len.addr, align 8, !dbg !19965, !tbaa !2447
  %call = call i32 @memcmp(i8* %2, i8* %3, i64 %4) #14, !dbg !19966
  %cmp1 = icmp eq i32 %call, 0, !dbg !19967
  br i1 %cmp1, label %if.then, label %if.else, !dbg !19968

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !19969
  store i32 0, i32* %call2, align 4, !dbg !19971, !tbaa !2273, !ctir !7
  store i32 0, i32* %diff, align 4, !dbg !19972, !tbaa !2273
  br label %if.end, !dbg !19973

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8* %n1, metadata !19974, metadata !DIExpression()), !dbg !19976
  %5 = load i8*, i8** %s1.addr, align 8, !dbg !19977, !tbaa !2286
  %6 = load i64, i64* %s1len.addr, align 8, !dbg !19978, !tbaa !2447
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !19977, !ctir !9
  %7 = load i8, i8* %arrayidx, align 1, !dbg !19977, !tbaa !2438
  store i8 %7, i8* %n1, align 1, !dbg !19976, !tbaa !2438
  call void @llvm.dbg.declare(metadata i8* %n2, metadata !19979, metadata !DIExpression()), !dbg !19980
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !19981, !tbaa !2286
  %9 = load i64, i64* %s2len.addr, align 8, !dbg !19982, !tbaa !2447
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !19981, !ctir !9
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !19981, !tbaa !2438
  store i8 %10, i8* %n2, align 1, !dbg !19980, !tbaa !2438
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !19983, !tbaa !2286
  %12 = load i64, i64* %s1len.addr, align 8, !dbg !19984, !tbaa !2447
  %arrayidx4 = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !19983, !ctir !9
  store i8 0, i8* %arrayidx4, align 1, !dbg !19985, !tbaa !2438
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !19986, !tbaa !2286
  %14 = load i64, i64* %s2len.addr, align 8, !dbg !19987, !tbaa !2447
  %arrayidx5 = getelementptr inbounds i8, i8* %13, i64 %14, !dbg !19986, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !19988, !tbaa !2438
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !19989, !tbaa !2286
  %16 = load i64, i64* %s1len.addr, align 8, !dbg !19990, !tbaa !2447
  %add = add i64 %16, 1, !dbg !19991
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !19992, !tbaa !2286
  %18 = load i64, i64* %s2len.addr, align 8, !dbg !19993, !tbaa !2447
  %add6 = add i64 %18, 1, !dbg !19994
  %call7 = call i32 @strcoll_loop(i8* %15, i64 %add, i8* %17, i64 %add6), !dbg !19995
  store i32 %call7, i32* %diff, align 4, !dbg !19996, !tbaa !2273
  %19 = load i8, i8* %n1, align 1, !dbg !19997, !tbaa !2438
  %20 = load i8*, i8** %s1.addr, align 8, !dbg !19998, !tbaa !2286
  %21 = load i64, i64* %s1len.addr, align 8, !dbg !19999, !tbaa !2447
  %arrayidx8 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !19998, !ctir !9
  store i8 %19, i8* %arrayidx8, align 1, !dbg !20000, !tbaa !2438
  %22 = load i8, i8* %n2, align 1, !dbg !20001, !tbaa !2438
  %23 = load i8*, i8** %s2.addr, align 8, !dbg !20002, !tbaa !2286
  %24 = load i64, i64* %s2len.addr, align 8, !dbg !20003, !tbaa !2447
  %arrayidx9 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !20002, !ctir !9
  store i8 %22, i8* %arrayidx9, align 1, !dbg !20004, !tbaa !2438
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %diff, align 4, !dbg !20005, !tbaa !2273
  ret i32 %25, !dbg !20006
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @strcoll_loop(i8* %s1, i64 %s1size, i8* %s2, i64 %s2size) #4 !dbg !20007 !ctir !1517 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1size.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2size.addr = alloca i64, align 8
  %diff = alloca i32, align 4, !ctir !7
  %size1 = alloca i64, align 8, !ctir !55
  %size2 = alloca i64, align 8, !ctir !55
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20008, metadata !DIExpression()), !dbg !20009
  store i64 %s1size, i64* %s1size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1size.addr, metadata !20010, metadata !DIExpression()), !dbg !20011
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20012, metadata !DIExpression()), !dbg !20013
  store i64 %s2size, i64* %s2size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2size.addr, metadata !20014, metadata !DIExpression()), !dbg !20015
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !20016, metadata !DIExpression()), !dbg !20017
  br label %while.cond, !dbg !20018

while.cond:                                       ; preds = %if.end14, %entry
  %call = call i32* @__errno_location() #16, !dbg !20019
  store i32 0, i32* %call, align 4, !dbg !20020, !tbaa !2273, !ctir !7
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !20021, !tbaa !2286
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !20022, !tbaa !2286
  %call1 = call i32 @strcoll(i8* %0, i8* %1) #14, !dbg !20023
  store i32 %call1, i32* %diff, align 4, !dbg !20024, !tbaa !2273
  %tobool = icmp ne i32 %call1, 0, !dbg !20024
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !20025

lor.rhs:                                          ; preds = %while.cond
  %call2 = call i32* @__errno_location() #16, !dbg !20026
  %2 = load i32, i32* %call2, align 4, !dbg !20026, !tbaa !2273, !ctir !7
  %tobool3 = icmp ne i32 %2, 0, !dbg !20025
  br label %lor.end, !dbg !20025

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %3 = phi i1 [ true, %while.cond ], [ %tobool3, %lor.rhs ]
  %lnot = xor i1 %3, true, !dbg !20027
  br i1 %lnot, label %while.body, label %while.end, !dbg !20018

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %size1, metadata !20028, metadata !DIExpression()), !dbg !20030
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !20031, !tbaa !2286
  %call4 = call i64 @strlen(i8* %4) #14, !dbg !20032
  %add = add i64 %call4, 1, !dbg !20033
  store i64 %add, i64* %size1, align 8, !dbg !20030, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %size2, metadata !20034, metadata !DIExpression()), !dbg !20035
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !20036, !tbaa !2286
  %call5 = call i64 @strlen(i8* %5) #14, !dbg !20037
  %add6 = add i64 %call5, 1, !dbg !20038
  store i64 %add6, i64* %size2, align 8, !dbg !20035, !tbaa !2447
  %6 = load i64, i64* %size1, align 8, !dbg !20039, !tbaa !2447
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !20040, !tbaa !2286
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %6, !dbg !20040
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !20040, !tbaa !2286
  %8 = load i64, i64* %size2, align 8, !dbg !20041, !tbaa !2447
  %9 = load i8*, i8** %s2.addr, align 8, !dbg !20042, !tbaa !2286
  %add.ptr7 = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !20042
  store i8* %add.ptr7, i8** %s2.addr, align 8, !dbg !20042, !tbaa !2286
  %10 = load i64, i64* %size1, align 8, !dbg !20043, !tbaa !2447
  %11 = load i64, i64* %s1size.addr, align 8, !dbg !20044, !tbaa !2447
  %sub = sub i64 %11, %10, !dbg !20044
  store i64 %sub, i64* %s1size.addr, align 8, !dbg !20044, !tbaa !2447
  %12 = load i64, i64* %size2, align 8, !dbg !20045, !tbaa !2447
  %13 = load i64, i64* %s2size.addr, align 8, !dbg !20046, !tbaa !2447
  %sub8 = sub i64 %13, %12, !dbg !20046
  store i64 %sub8, i64* %s2size.addr, align 8, !dbg !20046, !tbaa !2447
  %14 = load i64, i64* %s1size.addr, align 8, !dbg !20047, !tbaa !2447
  %cmp = icmp eq i64 %14, 0, !dbg !20049
  br i1 %cmp, label %if.then, label %if.end, !dbg !20050

if.then:                                          ; preds = %while.body
  %15 = load i64, i64* %s2size.addr, align 8, !dbg !20051, !tbaa !2447
  %cmp9 = icmp ne i64 %15, 0, !dbg !20052
  %conv = zext i1 %cmp9 to i32, !dbg !20052
  %sub10 = sub nsw i32 0, %conv, !dbg !20053
  store i32 %sub10, i32* %retval, align 4, !dbg !20054
  br label %return, !dbg !20054

if.end:                                           ; preds = %while.body
  %16 = load i64, i64* %s2size.addr, align 8, !dbg !20055, !tbaa !2447
  %cmp11 = icmp eq i64 %16, 0, !dbg !20057
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !20058

if.then13:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !20059
  br label %return, !dbg !20059

if.end14:                                         ; preds = %if.end
  br label %while.cond, !dbg !20018, !llvm.loop !20060

while.end:                                        ; preds = %lor.end
  %17 = load i32, i32* %diff, align 4, !dbg !20062, !tbaa !2273
  store i32 %17, i32* %retval, align 4, !dbg !20063
  br label %return, !dbg !20063

return:                                           ; preds = %while.end, %if.then13, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !20064
  ret i32 %18, !dbg !20064
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @memcoll0(i8* %s1, i64 %s1size, i8* %s2, i64 %s2size) #4 !dbg !20065 !ctir !1517 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1size.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2size.addr = alloca i64, align 8
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20066, metadata !DIExpression()), !dbg !20067
  store i64 %s1size, i64* %s1size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s1size.addr, metadata !20068, metadata !DIExpression()), !dbg !20069
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2286
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20070, metadata !DIExpression()), !dbg !20071
  store i64 %s2size, i64* %s2size.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s2size.addr, metadata !20072, metadata !DIExpression()), !dbg !20073
  %0 = load i64, i64* %s1size.addr, align 8, !dbg !20074, !tbaa !2447
  %1 = load i64, i64* %s2size.addr, align 8, !dbg !20076, !tbaa !2447
  %cmp = icmp eq i64 %0, %1, !dbg !20077
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !20078

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !20079, !tbaa !2286
  %3 = load i8*, i8** %s2.addr, align 8, !dbg !20080, !tbaa !2286
  %4 = load i64, i64* %s1size.addr, align 8, !dbg !20081, !tbaa !2447
  %call = call i32 @memcmp(i8* %2, i8* %3, i64 %4) #14, !dbg !20082
  %cmp1 = icmp eq i32 %call, 0, !dbg !20083
  br i1 %cmp1, label %if.then, label %if.else, !dbg !20084

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !20085
  store i32 0, i32* %call2, align 4, !dbg !20087, !tbaa !2273, !ctir !7
  store i32 0, i32* %retval, align 4, !dbg !20088
  br label %return, !dbg !20088

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %s1.addr, align 8, !dbg !20089, !tbaa !2286
  %6 = load i64, i64* %s1size.addr, align 8, !dbg !20090, !tbaa !2447
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !20091, !tbaa !2286
  %8 = load i64, i64* %s2size.addr, align 8, !dbg !20092, !tbaa !2447
  %call3 = call i32 @strcoll_loop(i8* %5, i64 %6, i8* %7, i64 %8), !dbg !20093
  store i32 %call3, i32* %retval, align 4, !dbg !20094
  br label %return, !dbg !20094

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !20095
  ret i32 %9, !dbg !20095
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @make_timespec(i64 %s, i64 %ns) #4 !dbg !20096 !ctir !2252 {
entry:
  %retval = alloca %struct.timespec, align 8
  %s.addr = alloca i64, align 8
  %ns.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !20098, metadata !DIExpression()), !dbg !20099
  store i64 %ns, i64* %ns.addr, align 8, !tbaa !2447
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !20100, metadata !DIExpression()), !dbg !20101
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !20102, metadata !DIExpression()), !dbg !20103
  %0 = load i64, i64* %s.addr, align 8, !dbg !20104, !tbaa !2447
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !20105, !ctir !2254
  store i64 %0, i64* %tv_sec, align 8, !dbg !20106, !tbaa !18875, !ctir !410
  %1 = load i64, i64* %ns.addr, align 8, !dbg !20107, !tbaa !2447
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !20108, !ctir !2254
  store i64 %1, i64* %tv_nsec, align 8, !dbg !20109, !tbaa !18857, !ctir !412
  %2 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !20110
  %3 = load { i64, i64 }, { i64, i64 }* %2, align 8, !dbg !20110
  ret { i64, i64 } %3, !dbg !20110
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_cmp(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) #9 !dbg !20111 !ctir !2258 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.timespec, align 8
  %b = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  %3 = bitcast %struct.timespec* %b to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %b.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %b.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %a, metadata !20112, metadata !DIExpression()), !dbg !20113
  call void @llvm.dbg.declare(metadata %struct.timespec* %b, metadata !20114, metadata !DIExpression()), !dbg !20115
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20116, !ctir !2254
  %6 = load i64, i64* %tv_sec, align 8, !dbg !20116, !tbaa !18875, !ctir !410
  %tv_sec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 0, !dbg !20118, !ctir !2254
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !20118, !tbaa !18875, !ctir !410
  %cmp = icmp slt i64 %6, %7, !dbg !20119
  br i1 %cmp, label %if.then, label %if.end, !dbg !20120

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !20121
  br label %return, !dbg !20121

if.end:                                           ; preds = %entry
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20122, !ctir !2254
  %8 = load i64, i64* %tv_sec2, align 8, !dbg !20122, !tbaa !18875, !ctir !410
  %tv_sec3 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 0, !dbg !20124, !ctir !2254
  %9 = load i64, i64* %tv_sec3, align 8, !dbg !20124, !tbaa !18875, !ctir !410
  %cmp4 = icmp sgt i64 %8, %9, !dbg !20125
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !20126

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !20127
  br label %return, !dbg !20127

if.end6:                                          ; preds = %if.end
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20128, !ctir !2254
  %10 = load i64, i64* %tv_nsec, align 8, !dbg !20128, !tbaa !18857, !ctir !412
  %cmp7 = icmp sle i64 -1, %10, !dbg !20128
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !20128

land.lhs.true:                                    ; preds = %if.end6
  %tv_nsec8 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20128, !ctir !2254
  %11 = load i64, i64* %tv_nsec8, align 8, !dbg !20128, !tbaa !18857, !ctir !412
  %cmp9 = icmp sle i64 %11, 2000000000, !dbg !20128
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !20128

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !20128

cond.false:                                       ; preds = %land.lhs.true, %if.end6
  unreachable, !dbg !20128

unreachable.cont:                                 ; No predecessors!
  br label %cond.end, !dbg !20128

cond.end:                                         ; preds = %unreachable.cont, %cond.true
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 1, !dbg !20129, !ctir !2254
  %12 = load i64, i64* %tv_nsec10, align 8, !dbg !20129, !tbaa !18857, !ctir !412
  %cmp11 = icmp sle i64 -1, %12, !dbg !20129
  br i1 %cmp11, label %land.lhs.true12, label %cond.false16, !dbg !20129

land.lhs.true12:                                  ; preds = %cond.end
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 1, !dbg !20129, !ctir !2254
  %13 = load i64, i64* %tv_nsec13, align 8, !dbg !20129, !tbaa !18857, !ctir !412
  %cmp14 = icmp sle i64 %13, 2000000000, !dbg !20129
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !20129

cond.true15:                                      ; preds = %land.lhs.true12
  br label %cond.end18, !dbg !20129

cond.false16:                                     ; preds = %land.lhs.true12, %cond.end
  unreachable, !dbg !20129

unreachable.cont17:                               ; No predecessors!
  br label %cond.end18, !dbg !20129

cond.end18:                                       ; preds = %unreachable.cont17, %cond.true15
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20130, !ctir !2254
  %14 = load i64, i64* %tv_nsec19, align 8, !dbg !20130, !tbaa !18857, !ctir !412
  %tv_nsec20 = getelementptr inbounds %struct.timespec, %struct.timespec* %b, i32 0, i32 1, !dbg !20131, !ctir !2254
  %15 = load i64, i64* %tv_nsec20, align 8, !dbg !20131, !tbaa !18857, !ctir !412
  %sub = sub nsw i64 %14, %15, !dbg !20132
  %conv = trunc i64 %sub to i32, !dbg !20133
  store i32 %conv, i32* %retval, align 4, !dbg !20134
  br label %return, !dbg !20134

return:                                           ; preds = %cond.end18, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !20135
  ret i32 %16, !dbg !20135
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_sign(i64 %a.coerce0, i64 %a.coerce1) #9 !dbg !20136 !ctir !2260 {
entry:
  %a = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %a, metadata !20137, metadata !DIExpression()), !dbg !20138
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20139, !ctir !2254
  %3 = load i64, i64* %tv_sec, align 8, !dbg !20139, !tbaa !18875, !ctir !410
  %cmp = icmp slt i64 %3, 0, !dbg !20140
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20141

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !20141

cond.false:                                       ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20142, !ctir !2254
  %4 = load i64, i64* %tv_sec1, align 8, !dbg !20142, !tbaa !18875, !ctir !410
  %tobool = icmp ne i64 %4, 0, !dbg !20143
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !20144

lor.rhs:                                          ; preds = %cond.false
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20145, !ctir !2254
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !20145, !tbaa !18857, !ctir !412
  %tobool2 = icmp ne i64 %5, 0, !dbg !20144
  br label %lor.end, !dbg !20144

lor.end:                                          ; preds = %lor.rhs, %cond.false
  %6 = phi i1 [ true, %cond.false ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !20144
  br label %cond.end, !dbg !20141

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %lor.ext, %lor.end ], !dbg !20141
  ret i32 %cond, !dbg !20146
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timespectod(i64 %a.coerce0, i64 %a.coerce1) #4 !dbg !20147 !ctir !2262 {
entry:
  %a = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %a, metadata !20148, metadata !DIExpression()), !dbg !20149
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 0, !dbg !20150, !ctir !2254
  %3 = load i64, i64* %tv_sec, align 8, !dbg !20150, !tbaa !18875, !ctir !410
  %conv = sitofp i64 %3 to double, !dbg !20151
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %a, i32 0, i32 1, !dbg !20152, !ctir !2254
  %4 = load i64, i64* %tv_nsec, align 8, !dbg !20152, !tbaa !18857, !ctir !412
  %conv1 = sitofp i64 %4 to double, !dbg !20153
  %div = fdiv double %conv1, 1.000000e+09, !dbg !20154
  %add = fadd double %conv, %div, !dbg !20155
  ret double %add, !dbg !20156
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !20157 !ctir !1846 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2273
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20159, metadata !DIExpression()), !dbg !20160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20161, !tbaa !2273
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !20162
  ret i32 %call, !dbg !20163
}

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!65, !816, !822, !875, !920, !1001, !1459, !1512, !1521, !1008, !1526, !1550, !1555, !1560, !1565, !1582, !1605, !1149, !1614, !1155, !1196, !1619, !1722, !1742, !1829, !1836, !1843, !1848, !1332, !1906, !1921, !1924, !1931, !1936, !1948, !1963, !1973, !1344, !2012, !2053, !2092, !2109, !1360, !2124, !2142, !2145, !2149, !2188, !2197, !2200, !2203, !2242, !2246, !2249, !2264}
!llvm.ident = !{!2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267, !2267}
!llvm.module.flags = !{!2268, !2269, !2270, !2271}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar/software")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "hard_LC_COLLATE", scope: !65, file: !66, line: 165, type: !103, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !82, globals: !718, nameTableKind: None)
!66 = !DIFile(filename: "src/sort.c", directory: "/home/mbarbar/software/coreutils-8.31")
!67 = !{!68, !74}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blanktype", file: !66, line: 173, baseType: !69, size: 32, elements: !70)
!69 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!70 = !{!71, !72, !73}
!71 = !DIEnumerator(name: "bl_start", value: 0, isUnsigned: true)
!72 = !DIEnumerator(name: "bl_end", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "bl_both", value: 2, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !75, line: 26, baseType: !69, size: 32, elements: !76)
!75 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mbarbar/software/coreutils-8.31")
!76 = !{!77, !78, !79, !80, !81}
!77 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!80 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!81 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!82 = !{!53, !83, !69, !88, !9, !7, !33, !86, !0, !90, !93, !103, !10, !55, !92, !116, !145, !155, !159, !253, !256, !89, !266, !269, !273, !275, !278, !281, !57, !101, !284, !287, !288, !168, !306, !308, !317, !318, !319, !322, !325, !327, !328, !335, !337, !341, !343, !297, !345, !352, !356, !358, !361, !364, !366, !368, !370, !371, !373, !376, !377, !378, !379, !381, !383, !394, !417, !419, !421, !425, !426, !428, !423, !430, !433, !436, !439, !441, !442, !445, !447, !455, !467, !469, !470, !472, !476, !478, !481, !483, !484, !321, !486, !487, !489, !491, !494, !498, !513, !516, !518, !520, !522, !524, !526, !528, !530, !532, !293, !534, !535, !537, !390, !388, !539, !542, !544, !299, !545, !547, !549, !553, !555, !557, !559, !560, !562, !564, !566, !457, !568, !360, !569, !570, !572, !574, !529, !576, !620, !624, !622, !29, !626, !628, !634, !676, !678, !584, !680, !683, !686, !687, !689, !696, !698, !700, !703, !705, !708, !710, !712, !714, !716}
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !84, line: 72, baseType: !85)
!84 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DISubroutineType(types: !87)
!87 = !{null, !7}
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!90 = !DISubroutineType(types: !91)
!91 = !{!7, !7, !92}
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyfield", file: !66, line: 204, size: 576, elements: !95)
!95 = !{!96, !97, !98, !99, !100, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "sword", scope: !94, file: !66, line: 206, baseType: !55, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "schar", scope: !94, file: !66, line: 207, baseType: !55, size: 64, offset: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "eword", scope: !94, file: !66, line: 208, baseType: !55, size: 64, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "echar", scope: !94, file: !66, line: 209, baseType: !55, size: 64, offset: 192)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "ignore", scope: !94, file: !66, line: 210, baseType: !101, size: 64, offset: 256)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!103 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !94, file: !66, line: 211, baseType: !88, size: 64, offset: 320)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "skipsblanks", scope: !94, file: !66, line: 212, baseType: !103, size: 8, offset: 384)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "skipeblanks", scope: !94, file: !66, line: 213, baseType: !103, size: 8, offset: 392)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "numeric", scope: !94, file: !66, line: 214, baseType: !103, size: 8, offset: 400)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !94, file: !66, line: 217, baseType: !103, size: 8, offset: 408)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "general_numeric", scope: !94, file: !66, line: 218, baseType: !103, size: 8, offset: 416)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "human_numeric", scope: !94, file: !66, line: 220, baseType: !103, size: 8, offset: 424)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !94, file: !66, line: 222, baseType: !103, size: 8, offset: 432)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !94, file: !66, line: 223, baseType: !103, size: 8, offset: 440)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !94, file: !66, line: 224, baseType: !103, size: 8, offset: 448)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "traditional_used", scope: !94, file: !66, line: 225, baseType: !103, size: 8, offset: 456)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !94, file: !66, line: 226, baseType: !93, size: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !119, line: 51, size: 768, elements: !120)
!119 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !118, file: !119, line: 55, baseType: !9, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "thousands_sep", scope: !118, file: !119, line: 56, baseType: !9, size: 64, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !118, file: !119, line: 62, baseType: !9, size: 64, offset: 128)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "int_curr_symbol", scope: !118, file: !119, line: 68, baseType: !9, size: 64, offset: 192)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "currency_symbol", scope: !118, file: !119, line: 69, baseType: !9, size: 64, offset: 256)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "mon_decimal_point", scope: !118, file: !119, line: 70, baseType: !9, size: 64, offset: 320)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "mon_thousands_sep", scope: !118, file: !119, line: 71, baseType: !9, size: 64, offset: 384)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "mon_grouping", scope: !118, file: !119, line: 72, baseType: !9, size: 64, offset: 448)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "positive_sign", scope: !118, file: !119, line: 73, baseType: !9, size: 64, offset: 512)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sign", scope: !118, file: !119, line: 74, baseType: !9, size: 64, offset: 576)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "int_frac_digits", scope: !118, file: !119, line: 75, baseType: !10, size: 8, offset: 640)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "frac_digits", scope: !118, file: !119, line: 76, baseType: !10, size: 8, offset: 648)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "p_cs_precedes", scope: !118, file: !119, line: 78, baseType: !10, size: 8, offset: 656)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "p_sep_by_space", scope: !118, file: !119, line: 80, baseType: !10, size: 8, offset: 664)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "n_cs_precedes", scope: !118, file: !119, line: 82, baseType: !10, size: 8, offset: 672)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "n_sep_by_space", scope: !118, file: !119, line: 84, baseType: !10, size: 8, offset: 680)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "p_sign_posn", scope: !118, file: !119, line: 91, baseType: !10, size: 8, offset: 688)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "n_sign_posn", scope: !118, file: !119, line: 92, baseType: !10, size: 8, offset: 696)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_cs_precedes", scope: !118, file: !119, line: 95, baseType: !10, size: 8, offset: 704)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sep_by_space", scope: !118, file: !119, line: 97, baseType: !10, size: 8, offset: 712)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_cs_precedes", scope: !118, file: !119, line: 99, baseType: !10, size: 8, offset: 720)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sep_by_space", scope: !118, file: !119, line: 101, baseType: !10, size: 8, offset: 728)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sign_posn", scope: !118, file: !119, line: 108, baseType: !10, size: 8, offset: 736)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sign_posn", scope: !118, file: !119, line: 109, baseType: !10, size: 8, offset: 744)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !146, line: 7, baseType: !147)
!146 = !DIFile(filename: "/usr/include/bits/types/sigset_t.h", directory: "")
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !148, line: 8, baseType: !149)
!148 = !DIFile(filename: "/usr/include/bits/types/__sigset_t.h", directory: "")
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 5, size: 1024, elements: !150)
!150 = !{!151}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !149, file: !148, line: 7, baseType: !152, size: 1024)
!152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 1024, elements: !153)
!153 = !{!154}
!154 = !DISubrange(count: 16)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 352, elements: !157)
!156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!157 = !{!158}
!158 = !DISubrange(count: 11)
!159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !160, line: 31, size: 64, elements: !170)
!160 = !DIFile(filename: "/usr/include/bits/sigaction.h", directory: "")
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !160, line: 27, size: 1216, elements: !162)
!162 = !{!163, !164, !165, !166}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !161, file: !160, line: 38, baseType: !159, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !161, file: !160, line: 46, baseType: !147, size: 1024, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !161, file: !160, line: 49, baseType: !7, size: 32, offset: 1088)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !161, file: !160, line: 52, baseType: !167, size: 64, offset: 1152)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = !DISubroutineType(types: !169)
!169 = !{null}
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !159, file: !160, line: 34, baseType: !83, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !159, file: !160, line: 36, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !7, !176, !53}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !178, line: 124, baseType: !179)
!178 = !DIFile(filename: "/usr/include/bits/types/siginfo_t.h", directory: "")
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !178, line: 36, size: 1024, elements: !180)
!180 = !{!181, !182, !183, !184, !185}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !179, file: !178, line: 38, baseType: !7, size: 32)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !179, file: !178, line: 40, baseType: !7, size: 32, offset: 32)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !179, file: !178, line: 42, baseType: !7, size: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !179, file: !178, line: 48, baseType: !7, size: 32, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !179, file: !178, line: 123, baseType: !186, size: 896, offset: 128)
!186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !179, file: !178, line: 51, size: 896, elements: !187)
!187 = !{!188, !192, !199, !211, !217, !226, !242, !247}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !186, file: !178, line: 53, baseType: !189, size: 896)
!189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 896, elements: !190)
!190 = !{!191}
!191 = !DISubrange(count: 28)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !186, file: !178, line: 60, baseType: !193, size: 64)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 56, size: 64, elements: !194)
!194 = !{!195, !197}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !193, file: !178, line: 58, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !193, file: !178, line: 59, baseType: !198, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !69)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !186, file: !178, line: 68, baseType: !200, size: 128)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 63, size: 128, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !200, file: !178, line: 65, baseType: !7, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !200, file: !178, line: 66, baseType: !7, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !200, file: !178, line: 67, baseType: !205, size: 64, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !206, line: 30, baseType: !207)
!206 = !DIFile(filename: "/usr/include/bits/types/__sigval_t.h", directory: "")
!207 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !206, line: 24, size: 64, elements: !208)
!208 = !{!209, !210}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !207, file: !206, line: 26, baseType: !7, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !207, file: !206, line: 27, baseType: !53, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !186, file: !178, line: 76, baseType: !212, size: 128)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 71, size: 128, elements: !213)
!213 = !{!214, !215, !216}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !212, file: !178, line: 73, baseType: !196, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !212, file: !178, line: 74, baseType: !198, size: 32, offset: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !212, file: !178, line: 75, baseType: !205, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !186, file: !178, line: 86, baseType: !218, size: 256)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 79, size: 256, elements: !219)
!219 = !{!220, !221, !222, !223, !225}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !218, file: !178, line: 81, baseType: !196, size: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !218, file: !178, line: 82, baseType: !198, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !218, file: !178, line: 83, baseType: !7, size: 32, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !218, file: !178, line: 84, baseType: !224, size: 64, offset: 128)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !30, line: 156, baseType: !31)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !218, file: !178, line: 85, baseType: !224, size: 64, offset: 192)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !186, file: !178, line: 105, baseType: !227, size: 256)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 89, size: 256, elements: !228)
!228 = !{!229, !230, !232}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !227, file: !178, line: 91, baseType: !53, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !227, file: !178, line: 93, baseType: !231, size: 16, offset: 64)
!231 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !227, file: !178, line: 104, baseType: !233, size: 128, offset: 128)
!233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !227, file: !178, line: 94, size: 128, elements: !234)
!234 = !{!235, !240}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !233, file: !178, line: 101, baseType: !236, size: 128)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !233, file: !178, line: 97, size: 128, elements: !237)
!237 = !{!238, !239}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !236, file: !178, line: 99, baseType: !53, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !236, file: !178, line: 100, baseType: !53, size: 64, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !233, file: !178, line: 103, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !69)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !186, file: !178, line: 112, baseType: !243, size: 128)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 108, size: 128, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !243, file: !178, line: 110, baseType: !31, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !243, file: !178, line: 111, baseType: !7, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !186, file: !178, line: 121, baseType: !248, size: 128)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !186, file: !178, line: 116, size: 128, elements: !249)
!249 = !{!250, !251, !252}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !248, file: !178, line: 118, baseType: !53, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !248, file: !178, line: 119, baseType: !7, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !248, file: !178, line: 120, baseType: !69, size: 32, offset: 96)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 248, elements: !254)
!254 = !{!255}
!255 = !DISubrange(count: 31)
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 7936, elements: !254)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !259, line: 50, size: 256, elements: !260)
!259 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!260 = !{!261, !262, !263, !265}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !258, file: !259, line: 52, baseType: !88, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !258, file: !259, line: 55, baseType: !7, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !258, file: !259, line: 56, baseType: !264, size: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !258, file: !259, line: 57, baseType: !7, size: 32, offset: 192)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 48, elements: !267)
!267 = !{!268}
!268 = !DISubrange(count: 6)
!269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 448, elements: !271)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !88)
!271 = !{!272}
!272 = !DISubrange(count: 7)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !274, line: 55, baseType: !167)
!274 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/software/coreutils-8.31")
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 2)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 24, elements: !279)
!279 = !{!280}
!280 = !DISubrange(count: 3)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 256, elements: !282)
!282 = !{!283}
!283 = !DISubrange(count: 4)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 80, elements: !285)
!285 = !{!286}
!286 = !DISubrange(count: 10)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 24, elements: !279)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sortfile", file: !66, line: 672, size: 128, elements: !290)
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !289, file: !66, line: 675, baseType: !88, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !289, file: !66, line: 678, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tempnode", file: !66, line: 661, size: 128, elements: !295)
!295 = !{!296, !298, !301, !302}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !294, file: !66, line: 663, baseType: !297, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !293)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !294, file: !66, line: 664, baseType: !299, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !300, line: 38, baseType: !196)
!300 = !DIFile(filename: "/usr/include/sched.h", directory: "")
!301 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !294, file: !66, line: 665, baseType: !10, size: 8, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !294, file: !66, line: 666, baseType: !303, offset: 104)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: -1)
!306 = !DISubroutineType(types: !307)
!307 = !{null, !88}
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 896, elements: !271)
!309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !312, file: !311, line: 633, size: 128, elements: !314)
!311 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/software/coreutils-8.31")
!312 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !311, file: !311, line: 631, type: !306, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!313 = !{}
!314 = !{!315, !316}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !310, file: !311, line: 633, baseType: !88, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !310, file: !311, line: 633, baseType: !88, size: 64, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!319 = !DISubroutineType(types: !320)
!320 = !{!321, !10}
!321 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 2048, elements: !323)
!323 = !{!324}
!324 = !DISubrange(count: 256)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !323)
!328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 1536, elements: !333)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "month", file: !66, line: 229, size: 128, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !329, file: !66, line: 231, baseType: !88, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !329, file: !66, line: 232, baseType: !7, size: 32, offset: 64)
!333 = !{!334}
!334 = !DISubrange(count: 12)
!335 = !DISubroutineType(types: !336)
!336 = !{!103, !321}
!337 = !DISubroutineType(types: !338)
!338 = !{!7, !339, !339}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!345 = !DISubroutineType(types: !346)
!346 = !{null, !347}
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cs_status", file: !66, line: 630, size: 1088, elements: !349)
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !348, file: !66, line: 632, baseType: !103, size: 8)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "sigs", scope: !348, file: !66, line: 633, baseType: !145, size: 1024, offset: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{null, !354}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!356 = !DISubroutineType(types: !357)
!357 = !{!93, !93}
!358 = !DISubroutineType(types: !359)
!359 = !{!88, !88, !360, !88}
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !362, line: 102, baseType: !363)
!362 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!364 = !DISubroutineType(types: !365)
!365 = !{!9, !88, !93, !68}
!366 = !DISubroutineType(types: !367)
!367 = !{null, !88, !88}
!368 = !DISubroutineType(types: !369)
!369 = !{null, !93}
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !7, !10, !88}
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !374, line: 131, baseType: !375)
!374 = !DIFile(filename: "/usr/include/bits/resource.h", directory: "")
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !30, line: 157, baseType: !57)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 88, elements: !157)
!377 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{!55, !7, !10, !88}
!381 = !DISubroutineType(types: !382)
!382 = !{!0, !88, !88}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !385, line: 46, size: 1152, elements: !386)
!385 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!386 = !{!387, !389, !391, !393, !395, !396, !398, !399, !400, !401, !403, !405, !413, !414, !415}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !384, file: !385, line: 48, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !384, file: !385, line: 53, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !384, file: !385, line: 61, baseType: !392, size: 64, offset: 128)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !384, file: !385, line: 62, baseType: !394, size: 32, offset: 192)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !69)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !384, file: !385, line: 64, baseType: !198, size: 32, offset: 224)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !384, file: !385, line: 65, baseType: !397, size: 32, offset: 256)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !69)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !384, file: !385, line: 67, baseType: !7, size: 32, offset: 288)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !384, file: !385, line: 69, baseType: !388, size: 64, offset: 320)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !384, file: !385, line: 74, baseType: !29, size: 64, offset: 384)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !384, file: !385, line: 78, baseType: !402, size: 64, offset: 448)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !384, file: !385, line: 80, baseType: !404, size: 64, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !384, file: !385, line: 91, baseType: !406, size: 128, offset: 576)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !407, line: 9, size: 128, elements: !408)
!407 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!408 = !{!409, !411}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !406, file: !407, line: 11, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !406, file: !407, line: 12, baseType: !412, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !384, file: !385, line: 92, baseType: !406, size: 128, offset: 704)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !384, file: !385, line: 93, baseType: !406, size: 128, offset: 832)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !384, file: !385, line: 106, baseType: !416, size: 192, offset: 960)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 192, elements: !279)
!417 = !DISubroutineType(types: !418)
!418 = !{!383}
!419 = !DISubroutineType(types: !420)
!420 = !{null, !0, !88}
!421 = !DISubroutineType(types: !422)
!422 = !{!103, !423}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !94)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 248, elements: !254)
!426 = !DISubroutineType(types: !427)
!427 = !{null, !423, !9}
!428 = !DISubroutineType(types: !429)
!429 = !{null, !423, !103}
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 168, elements: !431)
!431 = !{!432}
!432 = !DISubrange(count: 21)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 368, elements: !434)
!434 = !{!435}
!435 = !DISubrange(count: 46)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 376, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 47)
!439 = !DISubroutineType(types: !440)
!440 = !{!57, !361}
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 128, elements: !153)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !444, line: 25, flags: DIFlagFwdDecl)
!444 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/software/coreutils-8.31")
!445 = !DISubroutineType(types: !446)
!446 = !{!103, !88, !10}
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !449)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "line", file: !66, line: 179, size: 256, elements: !450)
!450 = !{!451, !452, !453, !454}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !449, file: !66, line: 181, baseType: !9, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !449, file: !66, line: 182, baseType: !55, size: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "keybeg", scope: !449, file: !66, line: 183, baseType: !9, size: 64, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "keylim", scope: !449, file: !66, line: 184, baseType: !9, size: 64, offset: 192)
!455 = !DISubroutineType(types: !456)
!456 = !{null, !457, !55, !55}
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buffer", file: !66, line: 188, size: 448, elements: !459)
!459 = !{!460, !461, !462, !463, !464, !465, !466}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !458, file: !66, line: 190, baseType: !9, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !458, file: !66, line: 195, baseType: !55, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !458, file: !66, line: 196, baseType: !55, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !458, file: !66, line: 197, baseType: !55, size: 64, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !458, file: !66, line: 198, baseType: !55, size: 64, offset: 256)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "line_bytes", scope: !458, file: !66, line: 199, baseType: !55, size: 64, offset: 320)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !458, file: !66, line: 200, baseType: !103, size: 8, offset: 384)
!467 = !DISubroutineType(types: !468)
!468 = !{!103, !457, !0, !88}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!9, !447, !423}
!472 = !DISubroutineType(types: !473)
!473 = !{!469, !474}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!476 = !DISubroutineType(types: !477)
!477 = !{!7, !447, !447}
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32000, elements: !479)
!479 = !{!480}
!480 = !DISubrange(count: 4000)
!481 = !DISubroutineType(types: !482)
!482 = !{!7, !88, !88}
!483 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!484 = !DISubroutineType(types: !485)
!485 = !{!7, !88}
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 2048, elements: !323)
!487 = !DISubroutineType(types: !488)
!488 = !{!321, !378}
!489 = !DISubroutineType(types: !490)
!490 = !{!7, !88, !92}
!491 = !DISubroutineType(types: !492)
!492 = !{!7, !493, !55, !493, !55}
!493 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !9)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 256, elements: !497)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !496, line: 26, baseType: !241)
!496 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!497 = !{!277, !283}
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 2496, elements: !276)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "md5_ctx", file: !500, line: 69, size: 1248, elements: !501)
!500 = !DIFile(filename: "./lib/md5.h", directory: "/home/mbarbar/software/coreutils-8.31")
!501 = !{!502, !503, !504, !505, !506, !508, !509}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !499, file: !500, line: 71, baseType: !495, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !499, file: !500, line: 72, baseType: !495, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !499, file: !500, line: 73, baseType: !495, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !499, file: !500, line: 74, baseType: !495, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !499, file: !500, line: 76, baseType: !507, size: 64, offset: 128)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 64, elements: !276)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !499, file: !500, line: 77, baseType: !495, size: 32, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !499, file: !500, line: 78, baseType: !510, size: 1024, offset: 224)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 1024, elements: !511)
!511 = !{!512}
!512 = !DISubrange(count: 32)
!513 = !DISubroutineType(types: !514)
!514 = !{!55, !493, !515, !55}
!515 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !88)
!516 = !DISubroutineType(types: !517)
!517 = !{null, !447, !0, !88}
!518 = !DISubroutineType(types: !519)
!519 = !{null, !447}
!520 = !DISubroutineType(types: !521)
!521 = !{null, !447, !423}
!522 = !DISubroutineType(types: !523)
!523 = !{!55, !88, !88}
!524 = !DISubroutineType(types: !525)
!525 = !{null, !55, !55}
!526 = !DISubroutineType(types: !527)
!527 = !{null, !528, !55}
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!530 = !DISubroutineType(types: !531)
!531 = !{null, !7, !7}
!532 = !DISubroutineType(types: !533)
!533 = !{null, !288, !55, !55, !88}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !0, size: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{!293, !534}
!537 = !DISubroutineType(types: !538)
!538 = !{!55, !288, !55, !55, !0, !88}
!539 = !DISubroutineType(types: !540)
!540 = !{!55, !288, !55, !541}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{!0, !293}
!544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !276)
!545 = !DISubroutineType(types: !546)
!546 = !{null, !299}
!547 = !DISubroutineType(types: !548)
!548 = !{!103, !299}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !551, line: 69, baseType: !552)
!551 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/software/coreutils-8.31")
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !551, line: 67, flags: DIFlagFwdDecl)
!553 = !DISubroutineType(types: !554)
!554 = !{!299, !299}
!555 = !DISubroutineType(types: !556)
!556 = !{!299, !264, !55}
!557 = !DISubroutineType(types: !558)
!558 = !{null, !7, !88}
!559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !333)
!560 = !DISubroutineType(types: !561)
!561 = !{null, !293}
!562 = !DISubroutineType(types: !563)
!563 = !{!55, !339, !55}
!564 = !DISubroutineType(types: !565)
!565 = !{!103, !339, !339}
!566 = !DISubroutineType(types: !567)
!567 = !{null, !288, !55, !55, !0, !88, !534}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!293, !534, !103}
!572 = !DISubroutineType(types: !573)
!573 = !{!293, !264, !103}
!574 = !DISubroutineType(types: !575)
!575 = !{null, !528, !55, !88, !55}
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "merge_node", file: !66, line: 236, size: 1024, elements: !578)
!578 = !{!579, !580, !581, !582, !583, !585, !586, !587, !588, !589, !590, !591, !592}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !577, file: !66, line: 238, baseType: !469, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "hi", scope: !577, file: !66, line: 239, baseType: !469, size: 64, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "end_lo", scope: !577, file: !66, line: 240, baseType: !469, size: 64, offset: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "end_hi", scope: !577, file: !66, line: 241, baseType: !469, size: 64, offset: 192)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !577, file: !66, line: 242, baseType: !584, size: 64, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "nlo", scope: !577, file: !66, line: 243, baseType: !55, size: 64, offset: 320)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "nhi", scope: !577, file: !66, line: 244, baseType: !55, size: 64, offset: 384)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !577, file: !66, line: 245, baseType: !576, size: 64, offset: 448)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "lo_child", scope: !577, file: !66, line: 246, baseType: !576, size: 64, offset: 512)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "hi_child", scope: !577, file: !66, line: 247, baseType: !576, size: 64, offset: 576)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !577, file: !66, line: 248, baseType: !69, size: 32, offset: 640)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !577, file: !66, line: 249, baseType: !103, size: 8, offset: 672)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !577, file: !66, line: 250, baseType: !593, size: 320, offset: 704)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !594, line: 72, baseType: !595)
!594 = !DIFile(filename: "/usr/include/bits/pthreadtypes.h", directory: "")
!595 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !594, line: 67, size: 320, elements: !596)
!596 = !{!597, !615, !619}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !595, file: !594, line: 69, baseType: !598, size: 320)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !599, line: 118, size: 320, elements: !600)
!599 = !DIFile(filename: "/usr/include/bits/thread-shared-types.h", directory: "")
!600 = !{!601, !602, !603, !604, !605, !606, !607, !608}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !598, file: !599, line: 120, baseType: !7, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !598, file: !599, line: 121, baseType: !69, size: 32, offset: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !598, file: !599, line: 122, baseType: !7, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !598, file: !599, line: 124, baseType: !69, size: 32, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !598, file: !599, line: 148, baseType: !7, size: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !598, file: !599, line: 154, baseType: !231, size: 16, offset: 160)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !598, file: !599, line: 154, baseType: !231, size: 16, offset: 176)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !598, file: !599, line: 155, baseType: !609, size: 128, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !599, line: 86, baseType: !610)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !599, line: 82, size: 128, elements: !611)
!611 = !{!612, !614}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !610, file: !599, line: 84, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !610, file: !599, line: 85, baseType: !613, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !595, file: !594, line: 70, baseType: !616, size: 320)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 320, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 40)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !595, file: !594, line: 71, baseType: !31, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!55, !622, !55, !528, !55, !55}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !0)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !625, line: 85, baseType: !29)
!625 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!626 = !DISubroutineType(types: !627)
!627 = !{!55}
!628 = !DISubroutineType(types: !629)
!629 = !{null, !630, !55}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "merge_node_queue", file: !66, line: 254, size: 768, elements: !632)
!632 = !{!633, !637, !638}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "priority_queue", scope: !631, file: !66, line: 256, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "heap", file: !636, line: 23, flags: DIFlagFwdDecl)
!636 = !DIFile(filename: "./lib/heap.h", directory: "/home/mbarbar/software/coreutils-8.31")
!637 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !631, file: !66, line: 257, baseType: !593, size: 320, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !631, file: !66, line: 258, baseType: !639, size: 384, offset: 384)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !594, line: 80, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !594, line: 75, size: 384, elements: !641)
!641 = !{!642, !670, !674}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !640, file: !594, line: 77, baseType: !643, size: 384)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_cond_s", file: !599, line: 171, size: 384, elements: !644)
!644 = !{!645, !655, !664, !666, !667, !668, !669}
!645 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !599, line: 173, baseType: !646, size: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !599, line: 173, size: 64, elements: !647)
!647 = !{!648, !650}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "__wseq", scope: !646, file: !599, line: 175, baseType: !649, size: 64)
!649 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "__wseq32", scope: !646, file: !599, line: 180, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !646, file: !599, line: 176, size: 64, elements: !652)
!652 = !{!653, !654}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "__low", scope: !651, file: !599, line: 178, baseType: !69, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "__high", scope: !651, file: !599, line: 179, baseType: !69, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !599, line: 182, baseType: !656, size: 64, offset: 64)
!656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !599, line: 182, size: 64, elements: !657)
!657 = !{!658, !659}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_start", scope: !656, file: !599, line: 184, baseType: !649, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_start32", scope: !656, file: !599, line: 189, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !656, file: !599, line: 185, size: 64, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "__low", scope: !660, file: !599, line: 187, baseType: !69, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "__high", scope: !660, file: !599, line: 188, baseType: !69, size: 32, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "__g_refs", scope: !643, file: !599, line: 191, baseType: !665, size: 64, offset: 128)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 64, elements: !276)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "__g_size", scope: !643, file: !599, line: 192, baseType: !665, size: 64, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_orig_size", scope: !643, file: !599, line: 193, baseType: !69, size: 32, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "__wrefs", scope: !643, file: !599, line: 194, baseType: !69, size: 32, offset: 288)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "__g_signals", scope: !643, file: !599, line: 195, baseType: !665, size: 64, offset: 320)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !640, file: !594, line: 78, baseType: !671, size: 384)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 384, elements: !672)
!672 = !{!673}
!673 = !DISubrange(count: 48)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !640, file: !594, line: 79, baseType: !675, size: 64)
!675 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!678 = !DISubroutineType(types: !679)
!679 = !{!576, !55, !55, !469}
!680 = !DISubroutineType(types: !681)
!681 = !{!576, !682, !682, !469, !55, !55, !103}
!682 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !576)
!683 = !DISubroutineType(types: !684)
!684 = !{null, !685, !55, !55, !576, !630, !0, !88}
!685 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !469)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !594, line: 27, baseType: !57)
!687 = !DISubroutineType(types: !688)
!688 = !{!53, !53}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_args", file: !66, line: 3585, size: 448, elements: !692)
!692 = !{!693, !694, !695, !697, !699, !701, !702}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !691, file: !66, line: 3589, baseType: !469, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "nthreads", scope: !691, file: !66, line: 3592, baseType: !55, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "total_lines", scope: !691, file: !66, line: 3595, baseType: !696, size: 64, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !691, file: !66, line: 3599, baseType: !698, size: 64, offset: 192)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !576)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !691, file: !66, line: 3603, baseType: !700, size: 64, offset: 256)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "tfp", scope: !691, file: !66, line: 3607, baseType: !0, size: 64, offset: 320)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "output_temp", scope: !691, file: !66, line: 3608, baseType: !88, size: 64, offset: 384)
!703 = !DISubroutineType(types: !704)
!704 = !{null, !685, !55, !685, !103}
!705 = !DISubroutineType(types: !706)
!706 = !{null, !685, !55, !707}
!707 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !447)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !630, !576}
!710 = !DISubroutineType(types: !711)
!711 = !{null, !630, !55, !0, !88}
!712 = !DISubroutineType(types: !713)
!713 = !{!576, !630}
!714 = !DISubroutineType(types: !715)
!715 = !{null, !576}
!716 = !DISubroutineType(types: !717)
!717 = !{null, !682, !55, !0, !88}
!718 = !{!719, !722, !724, !726, !728, !63, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778, !780, !782, !784, !787, !789, !791, !793, !795, !797, !799, !801, !803, !807, !809, !812}
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "sig", scope: !721, file: !66, line: 4257, type: !155, isLocal: true, isDefinition: true)
!721 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 4199, type: !90, scopeLine: 4200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !313)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "opts", scope: !721, file: !66, line: 4677, type: !284, isLocal: true, isDefinition: true)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "opts", scope: !721, file: !66, line: 4733, type: !287, isLocal: true, isDefinition: true)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "decimal_point", scope: !65, file: !66, line: 159, type: !7, isLocal: true, isDefinition: true)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "thousands_sep", scope: !65, file: !66, line: 162, type: !7, isLocal: true, isDefinition: true)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "hard_LC_TIME", scope: !65, file: !66, line: 167, type: !103, isLocal: true, isDefinition: true)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "sort_size", scope: !65, file: !66, line: 319, type: !55, isLocal: true, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "temp_dir_count", scope: !65, file: !66, line: 332, type: !55, isLocal: true, isDefinition: true)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "reverse", scope: !65, file: !66, line: 338, type: !103, isLocal: true, isDefinition: true)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "stable", scope: !65, file: !66, line: 343, type: !103, isLocal: true, isDefinition: true)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "unique", scope: !65, file: !66, line: 355, type: !103, isLocal: true, isDefinition: true)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "have_read_stdin", scope: !65, file: !66, line: 358, type: !103, isLocal: true, isDefinition: true)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "keylist", scope: !65, file: !66, line: 361, type: !93, isLocal: true, isDefinition: true)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "compress_program", scope: !65, file: !66, line: 364, type: !88, isLocal: true, isDefinition: true)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "debug", scope: !65, file: !66, line: 367, type: !103, isLocal: true, isDefinition: true)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "caught_signals", scope: !65, file: !66, line: 627, type: !145, isLocal: true, isDefinition: true)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "blanks", scope: !65, file: !66, line: 272, type: !322, isLocal: true, isDefinition: true)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "nonprinting", scope: !65, file: !66, line: 275, type: !322, isLocal: true, isDefinition: true)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "nondictionary", scope: !65, file: !66, line: 278, type: !322, isLocal: true, isDefinition: true)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "fold_toupper", scope: !65, file: !66, line: 281, type: !327, isLocal: true, isDefinition: true)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "monthtab", scope: !65, file: !66, line: 287, type: !328, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "temphead", scope: !65, file: !66, line: 668, type: !297, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "short_options", scope: !65, file: !66, line: 550, type: !253, isLocal: true, isDefinition: true)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 552, type: !256, isLocal: true, isDefinition: true)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "sort_types", scope: !65, file: !66, line: 619, type: !266, isLocal: true, isDefinition: true)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "sort_args", scope: !65, file: !66, line: 613, type: !269, isLocal: true, isDefinition: true)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "check_types", scope: !65, file: !66, line: 598, type: !278, isLocal: true, isDefinition: true)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "check_args", scope: !65, file: !66, line: 592, type: !281, isLocal: true, isDefinition: true)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "tab", scope: !65, file: !66, line: 351, type: !7, isLocal: true, isDefinition: true)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "temp_dir_alloc", scope: !65, file: !66, line: 335, type: !55, isLocal: true, isDefinition: true)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "temp_dirs", scope: !65, file: !66, line: 329, type: !378, isLocal: true, isDefinition: true)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "eolchar", scope: !65, file: !66, line: 176, type: !10, isLocal: true, isDefinition: true)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "outstat_errno", scope: !786, file: !66, line: 895, type: !7, isLocal: true, isDefinition: true)
!786 = distinct !DISubprogram(name: "get_outstatus", scope: !66, file: !66, line: 893, type: !417, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "outstat", scope: !786, file: !66, line: 896, type: !384, isLocal: true, isDefinition: true)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "random_md5_state", scope: !65, file: !66, line: 2094, type: !499, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "nmerge", scope: !65, file: !66, line: 371, type: !69, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "merge_buffer_size", scope: !65, file: !66, line: 315, type: !55, isLocal: true, isDefinition: true)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "unit_order", scope: !65, file: !66, line: 1878, type: !486, isLocal: true, isDefinition: true)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "proctab", scope: !65, file: !66, line: 682, type: !549, isLocal: true, isDefinition: true)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "nprocs", scope: !65, file: !66, line: 702, type: !299, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "temptail", scope: !65, file: !66, line: 669, type: !569, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "slashbase", scope: !805, file: !66, line: 848, type: !806, isLocal: true, isDefinition: true)
!805 = distinct !DISubprogram(name: "create_temp_file", scope: !66, file: !66, line: 846, type: !572, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 96, elements: !333)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "temp_dir_index", scope: !805, file: !66, line: 849, type: !55, isLocal: true, isDefinition: true)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "size_bound", scope: !811, file: !66, line: 1524, type: !55, isLocal: true, isDefinition: true)
!811 = distinct !DISubprogram(name: "sort_buffer_size", scope: !66, file: !66, line: 1518, type: !620, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "saved_line", scope: !65, file: !66, line: 263, type: !449, isLocal: true, isDefinition: true)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "Version", scope: !816, file: !817, line: 2, type: !88, isLocal: false, isDefinition: true)
!816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !817, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !818, globals: !819, nameTableKind: None)
!817 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/software/coreutils-8.31")
!818 = !{!88}
!819 = !{!814}
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !822, file: !872, line: 69, type: !273, isLocal: false, isDefinition: true)
!822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !823, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !824, globals: !871, nameTableKind: None)
!823 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!824 = !{!53, !273, !825, !55, !827, !103, !828, !829, !88, !831, !833, !867, !869, !168}
!825 = !DISubroutineType(types: !826)
!826 = !{!827, !88, !828, !88, !55}
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !88, !88, !827}
!831 = !DISubroutineType(types: !832)
!832 = !{null, !828, !88, !55}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !835, file: !4, line: 51, baseType: !7, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !835, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !835, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !835, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !835, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !835, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !835, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !835, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !835, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !835, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !835, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !835, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !835, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !835, file: !4, line: 70, baseType: !851, size: 64, offset: 832)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !835, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !835, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !835, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !835, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !835, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !835, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !835, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !835, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !835, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !835, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !835, file: !4, line: 93, baseType: !851, size: 64, offset: 1344)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !835, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !835, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !835, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !835, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!867 = !DISubroutineType(types: !868)
!868 = !{!827, !88, !88, !828, !88, !55, !273}
!869 = !DISubroutineType(types: !870)
!870 = !{!88, !88, !828, !88, !55}
!871 = !{!820}
!872 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "file_name", scope: !875, file: !917, line: 46, type: !88, isLocal: true, isDefinition: true)
!875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !876, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !877, globals: !914, nameTableKind: None)
!876 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!877 = !{!306, !88, !878, !103, !168, !880, !7, !318}
!878 = !DISubroutineType(types: !879)
!879 = !{null, !103}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !882, file: !4, line: 51, baseType: !7, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !882, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !882, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !882, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !882, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !882, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !882, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !882, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !882, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !882, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !882, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !882, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !882, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !882, file: !4, line: 70, baseType: !898, size: 64, offset: 832)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !882, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !882, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !882, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !882, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !882, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !882, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !882, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !882, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !882, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !882, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !882, file: !4, line: 93, baseType: !898, size: 64, offset: 1344)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !882, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !882, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !882, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !882, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!914 = !{!873, !915}
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !875, file: !917, line: 56, type: !103, isLocal: true, isDefinition: true)
!917 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "fillbuf", scope: !920, file: !998, line: 70, type: !942, isLocal: true, isDefinition: true)
!920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !921, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !922, globals: !997, nameTableKind: None)
!921 = !DIFile(filename: "./lib/md5.c", directory: "/home/mbarbar/software/coreutils-8.31")
!922 = !{!9, !88, !923, !924, !495, !507, !936, !940, !55, !510, !942, !946, !982, !984, !986, !987, !989, !988, !990, !992}
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !362, line: 90, baseType: !57)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !926}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "md5_ctx", file: !500, line: 69, size: 1248, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !927, file: !500, line: 71, baseType: !495, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !927, file: !500, line: 72, baseType: !495, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !927, file: !500, line: 73, baseType: !495, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !927, file: !500, line: 74, baseType: !495, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !927, file: !500, line: 76, baseType: !507, size: 64, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !927, file: !500, line: 77, baseType: !495, size: 32, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !927, file: !500, line: 78, baseType: !510, size: 1024, offset: 224)
!936 = !DISubroutineType(types: !937)
!937 = !{!53, !938, !53}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!940 = !DISubroutineType(types: !941)
!941 = !{!53, !926, !53}
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 512, elements: !944)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !321)
!944 = !{!945}
!945 = !DISubrange(count: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!7, !948, !53}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !950)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !950, file: !4, line: 51, baseType: !7, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !950, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !950, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !950, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !950, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !950, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !950, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !950, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !950, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !950, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !950, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !950, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !950, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !950, file: !4, line: 70, baseType: !966, size: 64, offset: 832)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !950, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !950, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !950, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !950, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !950, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !950, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !950, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !950, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !950, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !950, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !950, file: !4, line: 93, baseType: !966, size: 64, offset: 1344)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !950, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !950, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !950, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !950, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!982 = !DISubroutineType(types: !983)
!983 = !{!53, !88, !55, !53}
!984 = !DISubroutineType(types: !985)
!985 = !{null, !339, !55, !926}
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 512, elements: !153)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !495)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !9, !495}
!992 = !DISubroutineType(types: !993)
!993 = !{!7, !948, !88, !53, !994}
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !995, line: 77, baseType: !996)
!995 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!997 = !{!918}
!998 = !DIFile(filename: "lib/md5.c", directory: "/home/mbarbar/software/coreutils-8.31")
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "exit_failure", scope: !1001, file: !1005, line: 24, type: !318, isLocal: false, isDefinition: true)
!1001 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1002, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1003, globals: !1004, nameTableKind: None)
!1002 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1003 = !{!318}
!1004 = !{!999}
!1005 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "default_tuning", scope: !1008, file: !1017, line: 130, type: !1033, isLocal: true, isDefinition: true)
!1008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1009, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1010, globals: !1142, nameTableKind: None)
!1009 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1010 = !{!57, !53, !55, !1011, !1014, !1026, !1020, !1055, !1057, !1093, !1047, !1095, !1097, !1099, !1100, !1106, !321, !89, !1108, !1033, !1111, !1113, !1015, !1032, !1044, !1050, !1114, !1116, !1118, !339, !1038, !103, !1121, !7, !1123, !562, !564, !1125, !1127, !1129, !1131, !1133, !1135, !1137, !1140}
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!55, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !551, line: 69, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1017, line: 52, size: 640, elements: !1018)
!1017 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1018 = !{!1019, !1025, !1028, !1029, !1030, !1031, !1043, !1046, !1049, !1054}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !1016, file: !1017, line: 57, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !1017, line: 46, size: 128, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1021, file: !1017, line: 48, baseType: !53, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1021, file: !1017, line: 49, baseType: !1020, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !1016, file: !1017, line: 58, baseType: !1026, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1021)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !1016, file: !1017, line: 59, baseType: !55, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !1016, file: !1017, line: 60, baseType: !55, size: 64, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !1016, file: !1017, line: 61, baseType: !55, size: 64, offset: 256)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !1016, file: !1017, line: 64, baseType: !1032, size: 64, offset: 320)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !551, line: 65, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !551, line: 53, size: 160, elements: !1036)
!1036 = !{!1037, !1039, !1040, !1041, !1042}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !1035, file: !551, line: 58, baseType: !1038, size: 32)
!1038 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !1035, file: !551, line: 59, baseType: !1038, size: 32, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !1035, file: !551, line: 60, baseType: !1038, size: 32, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !1035, file: !551, line: 61, baseType: !1038, size: 32, offset: 96)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !1035, file: !551, line: 62, baseType: !103, size: 8, offset: 128)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !1016, file: !1017, line: 71, baseType: !1044, size: 64, offset: 384)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !551, line: 48, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !1016, file: !1017, line: 72, baseType: !1047, size: 64, offset: 448)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !551, line: 49, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !1016, file: !1017, line: 73, baseType: !1050, size: 64, offset: 512)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !551, line: 50, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !53}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !1016, file: !1017, line: 76, baseType: !1020, size: 64, offset: 576)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!103, !1013}
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1013, !1059}
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1061, file: !4, line: 51, baseType: !7, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1061, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1061, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1061, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1061, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1061, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1061, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1061, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1061, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1061, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1061, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1061, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1061, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1061, file: !4, line: 70, baseType: !1077, size: 64, offset: 832)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1061, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1061, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1061, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1061, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1061, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1061, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1061, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1061, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1061, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1061, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1061, file: !4, line: 93, baseType: !1077, size: 64, offset: 1344)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1061, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1061, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1061, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1061, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!53, !1013, !339}
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!53, !1013}
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!55, !1013, !1099, !55}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!55, !1013, !1102, !53}
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !551, line: 51, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!103, !53, !53}
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!55, !88, !55}
!1108 = !DISubroutineType(types: !1109)
!1109 = !{null, !1110}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!1113, !55, !1032, !1044, !1047, !1050}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{null, !1113}
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!103, !1113, !55}
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!7, !1113, !339, !1120}
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!53, !1113, !339}
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!1020, !1013, !339}
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!103, !1113}
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!55, !55, !1032}
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!55, !55}
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!103, !55}
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!103, !1113, !1113, !103}
!1135 = !DISubroutineType(types: !1136)
!1136 = !{null, !1113, !1020}
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!53, !1113, !339, !1139, !103}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!1020, !1113}
!1142 = !{!1006}
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "have_pipe2_really", scope: !1145, file: !1146, line: 55, type: !7, isLocal: true, isDefinition: true)
!1145 = distinct !DISubprogram(name: "rpl_pipe2", scope: !1146, file: !1146, line: 40, type: !1147, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1149, retainedNodes: !313)
!1146 = !DIFile(filename: "lib/pipe2.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!7, !264, !7}
!1149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1150, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1151, globals: !1152, nameTableKind: None)
!1150 = !DIFile(filename: "./lib/pipe2.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1151 = !{!1147, !544, !7}
!1152 = !{!1143}
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "program_name", scope: !1155, file: !1193, line: 33, type: !88, isLocal: false, isDefinition: true)
!1155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1156, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1157, globals: !1192, nameTableKind: None)
!1156 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1157 = !{!53, !9, !88, !306, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1160, file: !4, line: 51, baseType: !7, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1160, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1160, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1160, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1160, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1160, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1160, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1160, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1160, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1160, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1160, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1160, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1160, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1160, file: !4, line: 70, baseType: !1176, size: 64, offset: 832)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1160, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1160, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1160, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1160, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1160, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1160, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1160, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1160, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1160, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1160, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1160, file: !4, line: 93, baseType: !1176, size: 64, offset: 1344)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1160, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1160, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1160, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1160, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1192 = !{!1153}
!1193 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1196, file: !1221, line: 85, type: !1214, isLocal: false, isDefinition: true)
!1196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1197, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1198, retainedTypes: !1213, globals: !1315, nameTableKind: None)
!1197 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1198 = !{!1199}
!1199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !1200, line: 32, baseType: !69, size: 32, elements: !1201)
!1200 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212}
!1202 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!1203 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!1204 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!1205 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!1206 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!1207 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!1208 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!1209 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!1210 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!1211 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!1212 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!1213 = !{!7, !33, !55, !1214, !1215, !1217, !1219, !1231, !1235, !1237, !321, !1239, !69, !1240, !1242, !88, !1244, !1233, !1246, !1248, !9, !168, !1250, !327, !1255, !1257, !1259, !1261, !1263, !1265, !1267, !1269, !1271, !1273, !1275, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !103, !89, !325, !1295, !1308, !1293, !1309, !1311, !1313}
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 704, elements: !157)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 320, elements: !285)
!1216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!1219, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1221, line: 65, size: 448, elements: !1222)
!1221 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1222 = !{!1223, !1224, !1225, !1229, !1230}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1220, file: !1221, line: 68, baseType: !1199, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1220, file: !1221, line: 71, baseType: !7, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1220, file: !1221, line: 75, baseType: !1226, size: 256, offset: 64)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 256, elements: !1227)
!1227 = !{!1228}
!1228 = !DISubrange(count: 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1220, file: !1221, line: 78, baseType: !88, size: 64, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1220, file: !1221, line: 81, baseType: !88, size: 64, offset: 384)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!1199, !1233}
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1220)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{null, !1219, !1199}
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!7, !1219, !10, !7}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!7, !1219, !7}
!1242 = !DISubroutineType(types: !1243)
!1243 = !{null, !1219, !88, !88}
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!55, !9, !55, !88, !55, !1233}
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!9, !88, !55, !1233}
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!9, !88, !55, !360, !1233}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1221, line: 834, size: 128, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1251, file: !1221, line: 836, baseType: !55, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1251, file: !1221, line: 837, baseType: !9, size: 64, offset: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!9, !7, !88}
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!9, !7, !88, !55}
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!9, !88}
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!9, !88, !55}
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!9, !7, !1199, !88}
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!9, !7, !1199, !88, !55}
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!9, !1199, !88}
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!9, !1199, !88, !55}
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!9, !88, !55, !10}
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!9, !88, !10}
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!9, !7, !88, !88, !88}
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!9, !7, !88, !88, !88, !55}
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!9, !88, !88, !88}
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!9, !88, !88, !88, !55}
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!88, !7, !88, !55}
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!88, !88, !55}
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!88, !7, !88}
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!88, !88}
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!55, !9, !55, !88, !55, !1199, !7, !1293, !88, !88}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1296, line: 6, baseType: !1297)
!1296 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1298, line: 21, baseType: !1299)
!1298 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1298, line: 13, size: 64, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1299, file: !1298, line: 15, baseType: !7, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1299, file: !1298, line: 20, baseType: !1303, size: 32, offset: 32)
!1303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1299, file: !1298, line: 16, size: 32, elements: !1304)
!1304 = !{!1305, !1306}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1303, file: !1298, line: 18, baseType: !69, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1303, file: !1298, line: 19, baseType: !1307, size: 32)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !282)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!88, !88, !1199}
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!9, !7, !88, !55, !1233}
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!1220, !1199}
!1315 = !{!1194, !1316, !1318, !1320, !1322, !1324, !1326, !1328}
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1196, file: !1221, line: 101, type: !1215, isLocal: false, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1196, file: !1221, line: 1052, type: !1220, isLocal: false, isDefinition: true)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1196, file: !1221, line: 116, type: !1220, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "slot0", scope: !1196, file: !1221, line: 842, type: !327, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "slotvec", scope: !1196, file: !1221, line: 845, type: !1250, isLocal: true, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "nslots", scope: !1196, file: !1221, line: 843, type: !7, isLocal: true, isDefinition: true)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1196, file: !1221, line: 844, type: !1251, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1332, file: !1337, line: 26, type: !1335, isLocal: false, isDefinition: true)
!1332 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1333, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1334, globals: !1336, nameTableKind: None)
!1333 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1334 = !{!1335}
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 376, elements: !437)
!1336 = !{!1330}
!1337 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1340, file: !1341, line: 506, type: !7, isLocal: true, isDefinition: true)
!1340 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1341, file: !1341, line: 487, type: !1342, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1344, retainedNodes: !313)
!1341 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!7, !7, !7}
!1344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1345, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1346, globals: !1357, nameTableKind: None)
!1345 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1346 = !{!1342, !1347, !7, !53}
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1348, line: 14, baseType: !1349)
!1348 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar/software")
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1345, line: 207, baseType: !1350)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1351, size: 192, elements: !38)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1345, line: 207, size: 192, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1351, file: !1345, line: 207, baseType: !69, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1351, file: !1345, line: 207, baseType: !69, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1351, file: !1345, line: 207, baseType: !53, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1351, file: !1345, line: 207, baseType: !53, size: 64, offset: 128)
!1357 = !{!1338}
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !1360, file: !1458, line: 351, type: !167, isLocal: false, isDefinition: true)
!1360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1361, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1362, globals: !1457, nameTableKind: None)
!1361 = !DIFile(filename: "./lib/obstack.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1362 = !{!9, !53, !1363, !1387, !1398, !1409, !1411, !1371, !55, !167, !1413, !1415, !1417, !1419, !7, !1421, !168, !1423, !318}
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!7, !1365, !55, !55, !1390, !1051}
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1367, line: 174, size: 704, elements: !1368)
!1367 = !DIFile(filename: "./lib/obstack.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1368 = !{!1369, !1370, !1377, !1378, !1379, !1380, !1385, !1386, !1397, !1405, !1406, !1407, !1408}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1366, file: !1367, line: 176, baseType: !55, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1366, file: !1367, line: 177, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1367, line: 167, size: 128, elements: !1373)
!1373 = !{!1374, !1375, !1376}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1372, file: !1367, line: 169, baseType: !9, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1372, file: !1367, line: 170, baseType: !1371, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1372, file: !1367, line: 171, baseType: !303, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1366, file: !1367, line: 178, baseType: !9, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1366, file: !1367, line: 179, baseType: !9, size: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1366, file: !1367, line: 180, baseType: !9, size: 64, offset: 256)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1366, file: !1367, line: 185, baseType: !1381, size: 64, offset: 320)
!1381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1366, file: !1367, line: 181, size: 64, elements: !1382)
!1382 = !{!1383, !1384}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1381, file: !1367, line: 183, baseType: !55, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1381, file: !1367, line: 184, baseType: !53, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1366, file: !1367, line: 186, baseType: !55, size: 64, offset: 384)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1366, file: !1367, line: 193, baseType: !1387, size: 64, offset: 448)
!1387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1366, file: !1367, line: 189, size: 64, elements: !1388)
!1388 = !{!1389, !1393}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1387, file: !1367, line: 191, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!53, !55}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1387, file: !1367, line: 192, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!53, !53, !55}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1366, file: !1367, line: 198, baseType: !1398, size: 64, offset: 512)
!1398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1366, file: !1367, line: 194, size: 64, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1398, file: !1367, line: 196, baseType: !1051, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1398, file: !1367, line: 197, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{null, !53, !53}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1366, file: !1367, line: 200, baseType: !53, size: 64, offset: 576)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1366, file: !1367, line: 201, baseType: !69, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1366, file: !1367, line: 202, baseType: !69, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1366, file: !1367, line: 206, baseType: !69, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!7, !1365, !55, !55, !1394, !1402, !53}
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !1365, !55}
!1413 = !DISubroutineType(types: !1414)
!1414 = !{!7, !1365, !53}
!1415 = !DISubroutineType(types: !1416)
!1416 = !{null, !1365, !53}
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!55, !1365}
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!7, !1365, !55, !55}
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!53, !1365, !55}
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1425, file: !4, line: 51, baseType: !7, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1425, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1425, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1425, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1425, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1425, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1425, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1425, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1425, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1425, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1425, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1425, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1425, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1425, file: !4, line: 70, baseType: !1441, size: 64, offset: 832)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1425, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1425, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1425, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1425, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1425, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1425, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1425, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1425, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1425, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1425, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1425, file: !4, line: 93, baseType: !1441, size: 64, offset: 1344)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1425, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1425, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1425, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1425, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1457 = !{!1358}
!1458 = !DIFile(filename: "lib/obstack.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1460, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1461, retainedTypes: !1471, nameTableKind: None)
!1460 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1461 = !{!1462}
!1462 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1463, line: 45, baseType: !69, size: 32, elements: !1464)
!1463 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470}
!1465 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1466 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1467 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1468 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1469 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1470 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1471 = !{!1472, !1476}
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !7, !1474, !1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !995, line: 63, baseType: !29)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1463, line: 52, baseType: !1462)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{null, !1478, !1475}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1480, file: !4, line: 51, baseType: !7, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1480, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1480, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1480, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1480, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1480, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1480, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1480, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1480, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1480, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1480, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1480, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1480, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1480, file: !4, line: 70, baseType: !1496, size: 64, offset: 832)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1480, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1480, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1480, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1480, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1480, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1480, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1480, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1480, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1480, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1480, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1480, file: !4, line: 93, baseType: !1496, size: 64, offset: 1344)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1480, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1480, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1480, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1480, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1513, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1514, nameTableKind: None)
!1513 = !DIFile(filename: "./lib/filevercmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1514 = !{!7, !481, !88, !55, !89, !1515, !103, !1517, !1519}
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!88, !378}
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!7, !88, !55, !88, !55}
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!7, !321}
!1521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1522, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1523, nameTableKind: None)
!1522 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1523 = !{!1524, !103, !88}
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!103, !7}
!1526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1527, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1528, nameTableKind: None)
!1527 = !DIFile(filename: "./lib/heap.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1528 = !{!53, !1529, !1531, !1099, !55, !1539, !1540, !1542, !1544, !337, !1546, !1548}
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1531, !1539, !55}
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "heap", file: !1533, line: 33, size: 256, elements: !1534)
!1533 = !DIFile(filename: "lib/heap.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1534 = !{!1535, !1536, !1537, !1538}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1532, file: !1533, line: 35, baseType: !1099, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1532, file: !1533, line: 36, baseType: !55, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1532, file: !1533, line: 37, baseType: !55, size: 64, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "compare", scope: !1532, file: !1533, line: 38, baseType: !1539, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1531}
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!7, !1531, !53}
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!53, !1531}
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!55, !1099, !55, !55, !1539}
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1099, !55, !1539}
!1550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1551, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1552, nameTableKind: None)
!1551 = !DIFile(filename: "./lib/inttostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1552 = !{!7, !1553, !9, !10}
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!9, !7, !9}
!1555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1556, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1557, nameTableKind: None)
!1556 = !DIFile(filename: "./lib/uinttostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1557 = !{!69, !1558, !9, !10}
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!9, !69, !9}
!1560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1561, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1562, nameTableKind: None)
!1561 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1562 = !{!361, !1563, !9, !10}
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!9, !361, !9}
!1565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1566, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1567, nameTableKind: None)
!1566 = !DIFile(filename: "./lib/mbswidth.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1567 = !{!55, !321, !7, !33, !1568, !1570, !88, !89, !1572, !1308, !325}
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!7, !88, !7}
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!7, !88, !55, !7}
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1296, line: 6, baseType: !1573)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1298, line: 21, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1298, line: 13, size: 64, elements: !1575)
!1575 = !{!1576, !1577}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1574, file: !1298, line: 15, baseType: !7, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1574, file: !1298, line: 20, baseType: !1578, size: 32, offset: 32)
!1578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1574, file: !1298, line: 16, size: 32, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1578, file: !1298, line: 18, baseType: !69, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1578, file: !1298, line: 19, baseType: !1307, size: 32)
!1582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1583, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1584, retainedTypes: !1591, nameTableKind: None)
!1583 = !DIFile(filename: "./lib/nproc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1584 = !{!1585}
!1585 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "nproc_query", file: !1586, line: 32, baseType: !69, size: 32, elements: !1587)
!1586 = !DIFile(filename: "./lib/nproc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1587 = !{!1588, !1589, !1590}
!1588 = !DIEnumerator(name: "NPROC_ALL", value: 0, isUnsigned: true)
!1589 = !DIEnumerator(name: "NPROC_CURRENT", value: 1, isUnsigned: true)
!1590 = !DIEnumerator(name: "NPROC_CURRENT_OVERRIDABLE", value: 2, isUnsigned: true)
!1591 = !{!53, !1592, !57, !1594, !89, !9, !10, !31, !1596, !1598}
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!57, !1585}
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!57, !88}
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!57}
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpu_set_t", file: !1599, line: 42, baseType: !1600)
!1599 = !DIFile(filename: "/usr/include/bits/cpu-set.h", directory: "")
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1599, line: 39, size: 1024, elements: !1601)
!1601 = !{!1602}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "__bits", scope: !1600, file: !1599, line: 41, baseType: !1603, size: 1024)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1604, size: 1024, elements: !153)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cpu_mask", file: !1599, line: 32, baseType: !57)
!1605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1606, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1607, nameTableKind: None)
!1606 = !DIFile(filename: "./lib/physmem.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1607 = !{!377, !1608, !1610, !1612}
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!377}
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1611, line: 16, baseType: !57)
!1611 = !DIFile(filename: "/usr/include/asm-generic/posix_types.h", directory: "")
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !1613, line: 27, baseType: !69)
!1613 = !DIFile(filename: "/usr/include/asm-generic/int-ll64.h", directory: "")
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1616, nameTableKind: None)
!1615 = !DIFile(filename: "./lib/posixver.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1616 = !{!1617, !31, !88, !89, !9, !10}
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!7}
!1619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1620, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1621, nameTableKind: None)
!1620 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1621 = !{!55, !1622, !1629, !1624, !1700, !1664, !1702, !339, !1704, !1706, !1708, !1665, !318, !7, !1710, !9, !1712, !1713, !1714, !1715, !1718, !1721}
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!1624, !88, !55}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1626, line: 79, size: 33216, elements: !1627)
!1626 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1627 = !{!1628, !1663, !1667, !1668}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1625, file: !1626, line: 83, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1631, file: !4, line: 51, baseType: !7, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1631, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1631, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1631, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1631, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1631, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1631, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1631, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1631, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1631, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1631, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1631, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1631, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1631, file: !4, line: 70, baseType: !1647, size: 64, offset: 832)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1631, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1631, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1631, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1631, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1631, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1631, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1631, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1631, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1631, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1631, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1631, file: !4, line: 93, baseType: !1647, size: 64, offset: 1344)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1631, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1631, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1631, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1631, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1625, file: !1626, line: 90, baseType: !1664, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{null, !339}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !1625, file: !1626, line: 91, baseType: !339, size: 64, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1625, file: !1626, line: 117, baseType: !1669, size: 33024, offset: 192)
!1669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1625, file: !1626, line: 96, size: 33024, elements: !1670)
!1670 = !{!1671, !1675}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1669, file: !1626, line: 99, baseType: !1672, size: 32768)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !1673)
!1673 = !{!1674}
!1674 = !DISubrange(count: 4096)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !1669, file: !1626, line: 116, baseType: !1676, size: 33024)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !1626, line: 102, size: 33024, elements: !1677)
!1677 = !{!1678, !1679, !1692}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !1676, file: !1626, line: 105, baseType: !55, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1676, file: !1626, line: 108, baseType: !1680, size: 16576, offset: 64)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1681, line: 56, size: 16576, elements: !1682)
!1681 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1682 = !{!1683, !1689, !1690, !1691}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1680, file: !1681, line: 58, baseType: !1684, size: 16384)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1685, size: 16384, elements: !323)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !1681, line: 44, baseType: !1686)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !362, line: 52, baseType: !1687)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1688)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1680, file: !1681, line: 59, baseType: !1685, size: 64, offset: 16384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1680, file: !1681, line: 59, baseType: !1685, size: 64, offset: 16448)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1680, file: !1681, line: 59, baseType: !1685, size: 64, offset: 16512)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1676, file: !1626, line: 115, baseType: !1693, size: 16384, offset: 16640)
!1693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !1626, line: 111, size: 16384, elements: !1694)
!1694 = !{!1695, !1696}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1693, file: !1626, line: 113, baseType: !1684, size: 16384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1693, file: !1626, line: 114, baseType: !1697, size: 16384)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 16384, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 2048)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{null, !1624, !1664}
!1702 = !DISubroutineType(types: !1703)
!1703 = !{null, !1624, !339}
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !1624, !53, !55}
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!7, !1624}
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!1624, !1629, !339}
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !53, !55, !55}
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !625, line: 108, baseType: !996)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !625, line: 97, baseType: !196)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !625, line: 79, baseType: !198)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{null, !1624, !1717, !55}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{null, !1720, !53, !55}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1723, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1724, nameTableKind: None)
!1723 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1724 = !{!1685, !1725, !1721, !1734, !7, !1684, !1736, !339, !88, !1738, !1739, !1740}
!1725 = !DISubroutineType(types: !1726)
!1726 = !{null, !1727, !1721}
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1681, line: 56, size: 16576, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1728, file: !1681, line: 58, baseType: !1684, size: 16384)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1728, file: !1681, line: 59, baseType: !1685, size: 64, offset: 16384)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1728, file: !1681, line: 59, baseType: !1685, size: 64, offset: 16448)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1728, file: !1681, line: 59, baseType: !1685, size: 64, offset: 16512)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !1727}
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!1685, !1738, !1685}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!1685, !1685}
!1742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1743, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1744, nameTableKind: None)
!1743 = !DIFile(filename: "./lib/readtokens0.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1744 = !{!53, !9, !55, !1120, !1745, !92, !360, !1790, !1759, !1791, !7, !1827, !10, !339, !88}
!1745 = !DISubroutineType(types: !1746)
!1746 = !{null, !1747}
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tokens", file: !1749, line: 28, size: 2304, elements: !1750)
!1749 = !DIFile(filename: "./lib/readtokens0.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1750 = !{!1751, !1752, !1753, !1754, !1788, !1789}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "n_tok", scope: !1748, file: !1749, line: 30, baseType: !55, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !1748, file: !1749, line: 31, baseType: !92, size: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tok_len", scope: !1748, file: !1749, line: 32, baseType: !360, size: 64, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "o_data", scope: !1748, file: !1749, line: 33, baseType: !1755, size: 704, offset: 192)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1367, line: 174, size: 704, elements: !1756)
!1756 = !{!1757, !1758, !1765, !1766, !1767, !1768, !1773, !1774, !1779, !1784, !1785, !1786, !1787}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1755, file: !1367, line: 176, baseType: !55, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1755, file: !1367, line: 177, baseType: !1759, size: 64, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1367, line: 167, size: 128, elements: !1761)
!1761 = !{!1762, !1763, !1764}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1760, file: !1367, line: 169, baseType: !9, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1760, file: !1367, line: 170, baseType: !1759, size: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1760, file: !1367, line: 171, baseType: !303, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1755, file: !1367, line: 178, baseType: !9, size: 64, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1755, file: !1367, line: 179, baseType: !9, size: 64, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1755, file: !1367, line: 180, baseType: !9, size: 64, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1755, file: !1367, line: 185, baseType: !1769, size: 64, offset: 320)
!1769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1367, line: 181, size: 64, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1769, file: !1367, line: 183, baseType: !55, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1769, file: !1367, line: 184, baseType: !53, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1755, file: !1367, line: 186, baseType: !55, size: 64, offset: 384)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1755, file: !1367, line: 193, baseType: !1775, size: 64, offset: 448)
!1775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1367, line: 189, size: 64, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1775, file: !1367, line: 191, baseType: !1390, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1775, file: !1367, line: 192, baseType: !1394, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1755, file: !1367, line: 198, baseType: !1780, size: 64, offset: 512)
!1780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1367, line: 194, size: 64, elements: !1781)
!1781 = !{!1782, !1783}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1780, file: !1367, line: 196, baseType: !1051, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1780, file: !1367, line: 197, baseType: !1402, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1755, file: !1367, line: 200, baseType: !53, size: 64, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1755, file: !1367, line: 201, baseType: !69, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1755, file: !1367, line: 202, baseType: !69, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1755, file: !1367, line: 206, baseType: !69, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok", scope: !1748, file: !1749, line: 34, baseType: !1755, size: 704, offset: 896)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok_len", scope: !1748, file: !1749, line: 35, baseType: !1755, size: 704, offset: 1600)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!103, !1793, !1747}
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1795, file: !4, line: 51, baseType: !7, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1795, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1795, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1795, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1795, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1795, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1795, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1795, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1795, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1795, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1795, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1795, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1795, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1795, file: !4, line: 70, baseType: !1811, size: 64, offset: 832)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1795, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1795, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1795, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1795, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1795, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1795, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1795, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1795, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1795, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1795, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1795, file: !4, line: 93, baseType: !1811, size: 64, offset: 1344)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1795, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1795, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1795, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1795, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1755)
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1830, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1831, nameTableKind: None)
!1830 = !DIFile(filename: "./lib/mkstemp-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1831 = !{!1832, !1834}
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!7, !9}
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!7, !9, !7}
!1836 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1837, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1838, nameTableKind: None)
!1837 = !DIFile(filename: "./lib/strnumcmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1838 = !{!69, !1839, !321, !89, !7, !55, !1841}
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!7, !88, !88, !7, !7}
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!7, !88, !88, !10}
!1843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1844, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1845, nameTableKind: None)
!1844 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1845 = !{!1846, !7}
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!7, !7}
!1848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1849, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1850, nameTableKind: None)
!1849 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1850 = !{!53, !1851, !1887, !828, !1888, !55, !1890, !1899, !1900, !1902, !168, !1853}
!1851 = !DISubroutineType(types: !1852)
!1852 = !{null, !1853, !88, !88, !88, !828, !55}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1855, file: !4, line: 51, baseType: !7, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1855, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1855, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1855, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1855, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1855, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1855, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1855, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1855, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1855, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1855, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1855, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1855, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1855, file: !4, line: 70, baseType: !1871, size: 64, offset: 832)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1855, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1855, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1855, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1855, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1855, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1855, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1855, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1855, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1855, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1855, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1855, file: !4, line: 93, baseType: !1871, size: 64, offset: 1344)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1855, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1855, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1855, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1855, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, elements: !304)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{null, !1853, !88, !88, !88, !828}
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !1853, !88, !88, !88, !1892}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1849, line: 189, size: 192, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1893, file: !1849, line: 189, baseType: !69, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1893, file: !1849, line: 189, baseType: !69, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1893, file: !1849, line: 189, baseType: !53, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1893, file: !1849, line: 189, baseType: !53, size: 64, offset: 128)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 640, elements: !285)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{null, !1853, !88, !88, !88}
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !995, line: 52, baseType: !1903)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1348, line: 32, baseType: !1904)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1849, line: 231, baseType: !1905)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 192, elements: !38)
!1906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1907, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1908, nameTableKind: None)
!1907 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1908 = !{!55, !9, !53, !1909, !1911, !1913, !1915, !1391, !1395, !1917, !1919, !1259}
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!53, !55, !55}
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!53, !53, !55, !55}
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!53, !53, !360, !55}
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!9, !55}
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!53, !53, !360}
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!53, !339, !55}
!1921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1922, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1923, nameTableKind: None)
!1922 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1923 = !{!168, !318}
!1924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1925, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1926, nameTableKind: None)
!1925 = !DIFile(filename: "./lib/xmemcoll.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1926 = !{!1927, !7, !1517, !1929, !318}
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!7, !9, !55, !9, !55}
!1929 = !DISubroutineType(types: !1930)
!1930 = !{null, !7, !88, !55, !88, !55}
!1931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1932, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1933, nameTableKind: None)
!1932 = !DIFile(filename: "./lib/xnanosleep.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1933 = !{!1934, !7}
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!7, !377}
!1936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1937, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1938, retainedTypes: !1939, nameTableKind: None)
!1937 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1938 = !{!74}
!1939 = !{!7, !33, !1940, !9, !92, !57, !1942, !88, !321, !89, !325, !10, !1944, !1946}
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!1942, !88, !92, !7, !1943, !88}
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !75, line: 39, baseType: !74)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!1942, !1943, !7}
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!1942, !1943, !7, !7}
!1948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1949, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1938, retainedTypes: !1950, nameTableKind: None)
!1949 = !DIFile(filename: "./lib/xstrtol-error.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1950 = !{!1951, !318, !1961, !88, !275, !1953}
!1951 = !DISubroutineType(types: !1952)
!1952 = !{null, !74, !7, !10, !1953, !88}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !259, line: 50, size: 256, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1955, file: !259, line: 52, baseType: !88, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1955, file: !259, line: 55, baseType: !7, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1955, file: !259, line: 56, baseType: !264, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1955, file: !259, line: 57, baseType: !7, size: 32, offset: 192)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{null, !74, !7, !10, !1953, !88, !7}
!1963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1964, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1938, retainedTypes: !1965, nameTableKind: None)
!1964 = !DIFile(filename: "./lib/xstrtoumax.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1965 = !{!7, !33, !1966, !9, !92, !361, !1942, !88, !321, !89, !325, !10, !1969, !1971}
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!1942, !88, !92, !7, !1968, !88}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!1942, !1968, !7}
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!1942, !1968, !7, !7}
!1973 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1974, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !1975, nameTableKind: None)
!1974 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1975 = !{!1976, !7}
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!7, !1978}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1981)
!1981 = !{!1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1980, file: !4, line: 51, baseType: !7, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1980, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1980, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1980, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1980, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1980, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1980, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1980, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1980, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1980, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1980, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1980, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1980, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1980, file: !4, line: 70, baseType: !1996, size: 64, offset: 832)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1980, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1980, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1980, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1980, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1980, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1980, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1980, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1980, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1980, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1980, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1980, file: !4, line: 93, baseType: !1996, size: 64, offset: 1344)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1980, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1980, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1980, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1980, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2012 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2013, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2014, nameTableKind: None)
!2013 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2014 = !{!53, !2015, !2051, !2018, !7}
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!7, !2017}
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2019, file: !4, line: 51, baseType: !7, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2019, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2019, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2019, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2019, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2019, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2019, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2019, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2019, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2019, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2019, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2019, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2019, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2019, file: !4, line: 70, baseType: !2035, size: 64, offset: 832)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2019, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2019, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2019, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2019, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2019, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2019, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2019, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2019, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2019, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2019, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2019, file: !4, line: 93, baseType: !2035, size: 64, offset: 1344)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2019, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2019, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2019, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2019, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{null, !2017}
!2053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2054, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2055, nameTableKind: None)
!2054 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2055 = !{!53, !2056, !2059, !9, !1474, !7, !44}
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!7, !2058, !1474, !7}
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2060, file: !4, line: 51, baseType: !7, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2060, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2060, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2060, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2060, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2060, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2060, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2060, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2060, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2060, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2060, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2060, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2060, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2060, file: !4, line: 70, baseType: !2076, size: 64, offset: 832)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2060, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2060, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2060, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2060, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2060, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2060, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2060, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2060, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2060, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2060, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2060, file: !4, line: 93, baseType: !2076, size: 64, offset: 1344)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2060, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2060, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2060, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2060, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2093, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2094, nameTableKind: None)
!2093 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2094 = !{!55, !2095, !1308, !321, !89}
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!55, !2097, !88, !55, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1296, line: 6, baseType: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1298, line: 21, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1298, line: 13, size: 64, elements: !2102)
!2102 = !{!2103, !2104}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2101, file: !1298, line: 15, baseType: !7, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2101, file: !1298, line: 20, baseType: !2105, size: 32, offset: 32)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2101, file: !1298, line: 16, size: 32, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2105, file: !1298, line: 18, baseType: !69, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2105, file: !1298, line: 19, baseType: !1307, size: 32)
!2109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2110, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2111, nameTableKind: None)
!2110 = !DIFile(filename: "./lib/nanosleep.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2111 = !{!2112, !412, !7, !2121, !2122, !410}
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!7, !2114, !2120}
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !407, line: 9, size: 128, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2116, file: !407, line: 11, baseType: !410, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2116, file: !407, line: 12, baseType: !412, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !2123, line: 7, baseType: !410)
!2123 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!2124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2125, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2126, nameTableKind: None)
!2125 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2126 = !{!2127, !2130, !2132, !2134, !2138}
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!2129, !2129, !7}
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !496, line: 27, baseType: !1688)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{!495, !495, !7}
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!55, !55, !7}
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!2136, !2136, !7}
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !496, line: 25, baseType: !2137)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!2140, !2140, !7}
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !496, line: 24, baseType: !2141)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !321)
!2142 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2143, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2144, nameTableKind: None)
!2143 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2144 = !{!1524, !1846}
!2145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2146, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2147, nameTableKind: None)
!2146 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2147 = !{!2148, !481, !321, !943}
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!2149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2150, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2151, nameTableKind: None)
!2150 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2151 = !{!2152, !102, !7}
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!7, !2154}
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2156, file: !4, line: 51, baseType: !7, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2156, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2156, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2156, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2156, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2156, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2156, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2156, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2156, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2156, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2156, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2156, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2156, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2156, file: !4, line: 70, baseType: !2172, size: 64, offset: 832)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2156, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2156, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2156, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2156, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2156, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2156, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2156, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2156, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2156, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2156, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2156, file: !4, line: 93, baseType: !2172, size: 64, offset: 1344)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2156, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2156, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2156, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2156, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2188 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2189, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2190, nameTableKind: None)
!2189 = !DIFile(filename: "./lib/dtotimespec.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2190 = !{!2122, !2191, !377, !31}
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!2193, !377}
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !407, line: 9, size: 128, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2193, file: !407, line: 11, baseType: !410, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2193, file: !407, line: 12, baseType: !412, size: 64, offset: 64)
!2197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2198, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2199, nameTableKind: None)
!2198 = !DIFile(filename: "./lib/fd-safer-flag.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2199 = !{!1342, !7}
!2200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2201, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2202, nameTableKind: None)
!2201 = !DIFile(filename: "./lib/dup-safer-flag.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2202 = !{!1342}
!2203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2204, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2205, nameTableKind: None)
!2204 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2205 = !{!2206, !2208, !7}
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!2208, !88, !88}
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2210)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2210, file: !4, line: 51, baseType: !7, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2210, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2210, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2210, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2210, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2210, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2210, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2210, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2210, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2210, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2210, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2210, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2210, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2210, file: !4, line: 70, baseType: !2226, size: 64, offset: 832)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2210, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2210, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2210, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2210, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2210, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2210, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2210, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2210, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2210, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2210, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2210, file: !4, line: 93, baseType: !2226, size: 64, offset: 1344)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2210, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2210, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2210, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2210, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2243, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2244, nameTableKind: None)
!2243 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2244 = !{!53, !2245, !88}
!2245 = !DISubroutineType(types: !818)
!2246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2247, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2248, nameTableKind: None)
!2247 = !DIFile(filename: "./lib/memcoll.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2248 = !{!1927, !7, !10, !9, !1517, !55}
!2249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2250, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2251, nameTableKind: None)
!2250 = !DIFile(filename: "./lib/timespec.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2251 = !{!2252, !410, !412, !2258, !2260, !2262}
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!2254, !2122, !31}
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !407, line: 9, size: 128, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2254, file: !407, line: 11, baseType: !410, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2254, file: !407, line: 12, baseType: !412, size: 64, offset: 64)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{!7, !2254, !2254}
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!7, !2254}
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!377, !2254}
!2264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2265, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !313, retainedTypes: !2266, nameTableKind: None)
!2265 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2266 = !{!1846}
!2267 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2268 = !{i32 2, !"ctir", i32 1}
!2269 = !{i32 2, !"Dwarf Version", i32 4}
!2270 = !{i32 2, !"Debug Info Version", i32 3}
!2271 = !{i32 1, !"wchar_size", i32 4}
!2272 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 413, type: !86, scopeLine: 414, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !313)
!2273 = !{!2274, !2274, i64 0}
!2274 = !{!"int", !2275, i64 0}
!2275 = !{!"omnipotent char", !2276, i64 0}
!2276 = !{!"Simple C/C++ TBAA"}
!2277 = !DILocalVariable(name: "status", arg: 1, scope: !2272, file: !66, line: 413, type: !7)
!2278 = !DILocation(line: 413, column: 12, scope: !2272)
!2279 = !DILocation(line: 415, column: 7, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2272, file: !66, line: 415, column: 7)
!2281 = !DILocation(line: 415, column: 14, scope: !2280)
!2282 = !DILocation(line: 415, column: 7, scope: !2272)
!2283 = !DILocation(line: 416, column: 5, scope: !2280)
!2284 = !DILocation(line: 416, column: 5, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2280, file: !66, line: 416, column: 5)
!2286 = !{!2287, !2287, i64 0}
!2287 = !{!"any pointer", !2275, i64 0}
!2288 = !DILocation(line: 419, column: 15, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2280, file: !66, line: 418, column: 5)
!2290 = !DILocation(line: 423, column: 15, scope: !2289)
!2291 = !DILocation(line: 423, column: 29, scope: !2289)
!2292 = !DILocation(line: 419, column: 7, scope: !2289)
!2293 = !DILocation(line: 424, column: 7, scope: !2289)
!2294 = !DILocation(line: 428, column: 7, scope: !2289)
!2295 = !DILocation(line: 429, column: 7, scope: !2289)
!2296 = !DILocation(line: 431, column: 7, scope: !2289)
!2297 = !DILocation(line: 435, column: 7, scope: !2289)
!2298 = !DILocation(line: 441, column: 7, scope: !2289)
!2299 = !DILocation(line: 446, column: 7, scope: !2289)
!2300 = !DILocation(line: 449, column: 7, scope: !2289)
!2301 = !DILocation(line: 455, column: 7, scope: !2289)
!2302 = !DILocation(line: 463, column: 7, scope: !2289)
!2303 = !DILocation(line: 467, column: 7, scope: !2289)
!2304 = !DILocation(line: 471, column: 7, scope: !2289)
!2305 = !DILocation(line: 478, column: 7, scope: !2289)
!2306 = !DILocation(line: 485, column: 7, scope: !2289)
!2307 = !DILocation(line: 489, column: 7, scope: !2289)
!2308 = !DILocation(line: 495, column: 15, scope: !2289)
!2309 = !DILocation(line: 495, column: 7, scope: !2289)
!2310 = !DILocation(line: 504, column: 7, scope: !2289)
!2311 = !DILocation(line: 507, column: 7, scope: !2289)
!2312 = !DILocation(line: 508, column: 7, scope: !2289)
!2313 = !DILocation(line: 509, column: 7, scope: !2289)
!2314 = !DILocation(line: 522, column: 7, scope: !2289)
!2315 = !DILocation(line: 530, column: 7, scope: !2289)
!2316 = !DILocation(line: 533, column: 9, scope: !2272)
!2317 = !DILocation(line: 533, column: 3, scope: !2272)
!2318 = distinct !DISubprogram(name: "emit_stdin_note", scope: !311, file: !311, line: 578, type: !168, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!2319 = !DILocation(line: 580, column: 3, scope: !2318)
!2320 = !DILocation(line: 583, column: 1, scope: !2318)
!2321 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !311, file: !311, line: 585, type: !168, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!2322 = !DILocation(line: 587, column: 3, scope: !2321)
!2323 = !DILocation(line: 590, column: 1, scope: !2321)
!2324 = !DILocalVariable(name: "program", arg: 1, scope: !312, file: !311, line: 631, type: !88)
!2325 = !DILocation(line: 631, column: 34, scope: !312)
!2326 = !DILocalVariable(name: "infomap", scope: !312, file: !311, line: 633, type: !308)
!2327 = !DILocation(line: 633, column: 67, scope: !312)
!2328 = !DILocalVariable(name: "node", scope: !312, file: !311, line: 643, type: !88)
!2329 = !DILocation(line: 643, column: 15, scope: !312)
!2330 = !DILocation(line: 643, column: 22, scope: !312)
!2331 = !DILocalVariable(name: "map_prog", scope: !312, file: !311, line: 644, type: !317)
!2332 = !DILocation(line: 644, column: 25, scope: !312)
!2333 = !DILocation(line: 644, column: 36, scope: !312)
!2334 = !DILocation(line: 646, column: 3, scope: !312)
!2335 = !DILocation(line: 646, column: 10, scope: !312)
!2336 = !DILocation(line: 646, column: 20, scope: !312)
!2337 = !{!2338, !2287, i64 0}
!2338 = !{!"infomap", !2287, i64 0, !2287, i64 8}
!2339 = !DILocation(line: 646, column: 28, scope: !312)
!2340 = !DILocation(line: 646, column: 33, scope: !312)
!2341 = !DILocation(line: 646, column: 31, scope: !312)
!2342 = !DILocation(line: 0, scope: !312)
!2343 = !DILocation(line: 647, column: 13, scope: !312)
!2344 = distinct !{!2344, !2334, !2343}
!2345 = !DILocation(line: 649, column: 7, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !312, file: !311, line: 649, column: 7)
!2347 = !DILocation(line: 649, column: 17, scope: !2346)
!2348 = !{!2338, !2287, i64 8}
!2349 = !DILocation(line: 649, column: 7, scope: !312)
!2350 = !DILocation(line: 650, column: 12, scope: !2346)
!2351 = !DILocation(line: 650, column: 22, scope: !2346)
!2352 = !DILocation(line: 650, column: 10, scope: !2346)
!2353 = !DILocation(line: 650, column: 5, scope: !2346)
!2354 = !DILocation(line: 652, column: 11, scope: !312)
!2355 = !DILocation(line: 652, column: 3, scope: !312)
!2356 = !DILocalVariable(name: "lc_messages", scope: !312, file: !311, line: 656, type: !88)
!2357 = !DILocation(line: 656, column: 15, scope: !312)
!2358 = !DILocation(line: 656, column: 29, scope: !312)
!2359 = !DILocation(line: 657, column: 7, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !312, file: !311, line: 657, column: 7)
!2361 = !DILocation(line: 657, column: 19, scope: !2360)
!2362 = !DILocation(line: 657, column: 22, scope: !2360)
!2363 = !DILocation(line: 657, column: 7, scope: !312)
!2364 = !DILocation(line: 663, column: 7, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2360, file: !311, line: 658, column: 5)
!2366 = !DILocation(line: 665, column: 5, scope: !2365)
!2367 = !DILocation(line: 666, column: 11, scope: !312)
!2368 = !DILocation(line: 667, column: 24, scope: !312)
!2369 = !DILocation(line: 666, column: 3, scope: !312)
!2370 = !DILocation(line: 668, column: 11, scope: !312)
!2371 = !DILocation(line: 669, column: 11, scope: !312)
!2372 = !DILocation(line: 669, column: 17, scope: !312)
!2373 = !DILocation(line: 669, column: 25, scope: !312)
!2374 = !DILocation(line: 669, column: 22, scope: !312)
!2375 = !DILocation(line: 668, column: 3, scope: !312)
!2376 = !DILocation(line: 670, column: 1, scope: !312)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tokens", file: !1749, line: 28, size: 2304, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382, !2416, !2417}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "n_tok", scope: !2377, file: !1749, line: 30, baseType: !55, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !2377, file: !1749, line: 31, baseType: !92, size: 64, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "tok_len", scope: !2377, file: !1749, line: 32, baseType: !360, size: 64, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "o_data", scope: !2377, file: !1749, line: 33, baseType: !2383, size: 704, offset: 192)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1367, line: 174, size: 704, elements: !2384)
!2384 = !{!2385, !2386, !2393, !2394, !2395, !2396, !2401, !2402, !2407, !2412, !2413, !2414, !2415}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2383, file: !1367, line: 176, baseType: !55, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2383, file: !1367, line: 177, baseType: !2387, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1367, line: 167, size: 128, elements: !2389)
!2389 = !{!2390, !2391, !2392}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2388, file: !1367, line: 169, baseType: !9, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2388, file: !1367, line: 170, baseType: !2387, size: 64, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2388, file: !1367, line: 171, baseType: !303, offset: 128)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2383, file: !1367, line: 178, baseType: !9, size: 64, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2383, file: !1367, line: 179, baseType: !9, size: 64, offset: 192)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2383, file: !1367, line: 180, baseType: !9, size: 64, offset: 256)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2383, file: !1367, line: 185, baseType: !2397, size: 64, offset: 320)
!2397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !1367, line: 181, size: 64, elements: !2398)
!2398 = !{!2399, !2400}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2397, file: !1367, line: 183, baseType: !55, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2397, file: !1367, line: 184, baseType: !53, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2383, file: !1367, line: 186, baseType: !55, size: 64, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2383, file: !1367, line: 193, baseType: !2403, size: 64, offset: 448)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !1367, line: 189, size: 64, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !2403, file: !1367, line: 191, baseType: !1390, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !2403, file: !1367, line: 192, baseType: !1394, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2383, file: !1367, line: 198, baseType: !2408, size: 64, offset: 512)
!2408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !1367, line: 194, size: 64, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !2408, file: !1367, line: 196, baseType: !1051, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !2408, file: !1367, line: 197, baseType: !1402, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2383, file: !1367, line: 200, baseType: !53, size: 64, offset: 576)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2383, file: !1367, line: 201, baseType: !69, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2383, file: !1367, line: 202, baseType: !69, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2383, file: !1367, line: 206, baseType: !69, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok", scope: !2377, file: !1749, line: 34, baseType: !2383, size: 704, offset: 896)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "o_tok_len", scope: !2377, file: !1749, line: 35, baseType: !2383, size: 704, offset: 1600)
!2418 = !DILocalVariable(name: "argc", arg: 1, scope: !721, file: !66, line: 4199, type: !7)
!2419 = !DILocation(line: 4199, column: 11, scope: !721)
!2420 = !DILocalVariable(name: "argv", arg: 2, scope: !721, file: !66, line: 4199, type: !92)
!2421 = !DILocation(line: 4199, column: 24, scope: !721)
!2422 = !DILocalVariable(name: "key", scope: !721, file: !66, line: 4201, type: !93)
!2423 = !DILocation(line: 4201, column: 20, scope: !721)
!2424 = !DILocalVariable(name: "key_buf", scope: !721, file: !66, line: 4202, type: !94)
!2425 = !DILocation(line: 4202, column: 19, scope: !721)
!2426 = !DILocalVariable(name: "gkey", scope: !721, file: !66, line: 4203, type: !94)
!2427 = !DILocation(line: 4203, column: 19, scope: !721)
!2428 = !DILocalVariable(name: "gkey_only", scope: !721, file: !66, line: 4204, type: !103)
!2429 = !DILocation(line: 4204, column: 8, scope: !721)
!2430 = !{!2431, !2431, i64 0}
!2431 = !{!"_Bool", !2275, i64 0}
!2432 = !DILocalVariable(name: "s", scope: !721, file: !66, line: 4205, type: !88)
!2433 = !DILocation(line: 4205, column: 15, scope: !721)
!2434 = !DILocalVariable(name: "c", scope: !721, file: !66, line: 4206, type: !7)
!2435 = !DILocation(line: 4206, column: 7, scope: !721)
!2436 = !DILocalVariable(name: "checkonly", scope: !721, file: !66, line: 4207, type: !10)
!2437 = !DILocation(line: 4207, column: 8, scope: !721)
!2438 = !{!2275, !2275, i64 0}
!2439 = !DILocalVariable(name: "mergeonly", scope: !721, file: !66, line: 4208, type: !103)
!2440 = !DILocation(line: 4208, column: 8, scope: !721)
!2441 = !DILocalVariable(name: "random_source", scope: !721, file: !66, line: 4209, type: !9)
!2442 = !DILocation(line: 4209, column: 9, scope: !721)
!2443 = !DILocalVariable(name: "need_random", scope: !721, file: !66, line: 4210, type: !103)
!2444 = !DILocation(line: 4210, column: 8, scope: !721)
!2445 = !DILocalVariable(name: "nthreads", scope: !721, file: !66, line: 4211, type: !55)
!2446 = !DILocation(line: 4211, column: 10, scope: !721)
!2447 = !{!2448, !2448, i64 0}
!2448 = !{!"long", !2275, i64 0}
!2449 = !DILocalVariable(name: "nfiles", scope: !721, file: !66, line: 4212, type: !55)
!2450 = !DILocation(line: 4212, column: 10, scope: !721)
!2451 = !DILocalVariable(name: "posixly_correct", scope: !721, file: !66, line: 4213, type: !103)
!2452 = !DILocation(line: 4213, column: 8, scope: !721)
!2453 = !DILocation(line: 4213, column: 27, scope: !721)
!2454 = !DILocation(line: 4213, column: 54, scope: !721)
!2455 = !DILocalVariable(name: "posix_ver", scope: !721, file: !66, line: 4214, type: !7)
!2456 = !DILocation(line: 4214, column: 7, scope: !721)
!2457 = !DILocation(line: 4214, column: 19, scope: !721)
!2458 = !DILocalVariable(name: "traditional_usage", scope: !721, file: !66, line: 4215, type: !103)
!2459 = !DILocation(line: 4215, column: 8, scope: !721)
!2460 = !DILocation(line: 4215, column: 41, scope: !721)
!2461 = !DILocation(line: 4215, column: 38, scope: !721)
!2462 = !DILocation(line: 4215, column: 51, scope: !721)
!2463 = !DILocation(line: 4215, column: 54, scope: !721)
!2464 = !DILocation(line: 4215, column: 64, scope: !721)
!2465 = !DILocation(line: 0, scope: !721)
!2466 = !DILocation(line: 4215, column: 28, scope: !721)
!2467 = !DILocalVariable(name: "files", scope: !721, file: !66, line: 4216, type: !92)
!2468 = !DILocation(line: 4216, column: 10, scope: !721)
!2469 = !DILocalVariable(name: "files_from", scope: !721, file: !66, line: 4217, type: !9)
!2470 = !DILocation(line: 4217, column: 9, scope: !721)
!2471 = !DILocalVariable(name: "tok", scope: !721, file: !66, line: 4218, type: !2377)
!2472 = !DILocation(line: 4218, column: 17, scope: !721)
!2473 = !DILocalVariable(name: "outfile", scope: !721, file: !66, line: 4219, type: !88)
!2474 = !DILocation(line: 4219, column: 15, scope: !721)
!2475 = !DILocalVariable(name: "locale_ok", scope: !721, file: !66, line: 4220, type: !103)
!2476 = !DILocation(line: 4220, column: 8, scope: !721)
!2477 = !DILocation(line: 4223, column: 21, scope: !721)
!2478 = !DILocation(line: 4223, column: 3, scope: !721)
!2479 = !DILocation(line: 4224, column: 18, scope: !721)
!2480 = !DILocation(line: 4224, column: 16, scope: !721)
!2481 = !DILocation(line: 4224, column: 15, scope: !721)
!2482 = !DILocation(line: 4224, column: 13, scope: !721)
!2483 = !DILocation(line: 4225, column: 3, scope: !721)
!2484 = !DILocation(line: 4226, column: 3, scope: !721)
!2485 = !DILocation(line: 4228, column: 3, scope: !721)
!2486 = !DILocation(line: 4230, column: 21, scope: !721)
!2487 = !DILocation(line: 4230, column: 19, scope: !721)
!2488 = !DILocation(line: 4232, column: 18, scope: !721)
!2489 = !DILocation(line: 4232, column: 16, scope: !721)
!2490 = !DILocalVariable(name: "locale", scope: !2491, file: !66, line: 4237, type: !116)
!2491 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4236, column: 3)
!2492 = !DILocation(line: 4237, column: 25, scope: !2491)
!2493 = !DILocation(line: 4237, column: 34, scope: !2491)
!2494 = !DILocation(line: 4242, column: 31, scope: !2491)
!2495 = !DILocation(line: 4242, column: 39, scope: !2491)
!2496 = !{!2497, !2287, i64 0}
!2497 = !{!"lconv", !2287, i64 0, !2287, i64 8, !2287, i64 16, !2287, i64 24, !2287, i64 32, !2287, i64 40, !2287, i64 48, !2287, i64 56, !2287, i64 64, !2287, i64 72, !2275, i64 80, !2275, i64 81, !2275, i64 82, !2275, i64 83, !2275, i64 84, !2275, i64 85, !2275, i64 86, !2275, i64 87, !2275, i64 88, !2275, i64 89, !2275, i64 90, !2275, i64 91, !2275, i64 92, !2275, i64 93}
!2498 = !DILocation(line: 4242, column: 21, scope: !2491)
!2499 = !DILocation(line: 4242, column: 19, scope: !2491)
!2500 = !DILocation(line: 4243, column: 11, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2491, file: !66, line: 4243, column: 9)
!2502 = !DILocation(line: 4243, column: 25, scope: !2501)
!2503 = !DILocation(line: 4243, column: 28, scope: !2501)
!2504 = !DILocation(line: 4243, column: 36, scope: !2501)
!2505 = !DILocation(line: 4243, column: 9, scope: !2491)
!2506 = !DILocation(line: 4244, column: 21, scope: !2501)
!2507 = !DILocation(line: 4244, column: 7, scope: !2501)
!2508 = !DILocation(line: 4247, column: 32, scope: !2491)
!2509 = !DILocation(line: 4247, column: 40, scope: !2491)
!2510 = !{!2497, !2287, i64 8}
!2511 = !DILocation(line: 4247, column: 31, scope: !2491)
!2512 = !DILocation(line: 4247, column: 21, scope: !2491)
!2513 = !DILocation(line: 4247, column: 19, scope: !2491)
!2514 = !DILocation(line: 4248, column: 11, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2491, file: !66, line: 4248, column: 9)
!2516 = !DILocation(line: 4248, column: 25, scope: !2515)
!2517 = !DILocation(line: 4248, column: 28, scope: !2515)
!2518 = !DILocation(line: 4248, column: 36, scope: !2515)
!2519 = !DILocation(line: 4248, column: 9, scope: !2491)
!2520 = !DILocation(line: 4249, column: 21, scope: !2515)
!2521 = !DILocation(line: 4249, column: 7, scope: !2515)
!2522 = !DILocation(line: 4252, column: 19, scope: !721)
!2523 = !DILocation(line: 4253, column: 3, scope: !721)
!2524 = !DILocalVariable(name: "i", scope: !2525, file: !66, line: 4256, type: !55)
!2525 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4255, column: 3)
!2526 = !DILocation(line: 4256, column: 12, scope: !2525)
!2527 = !DILocalVariable(name: "act", scope: !2525, file: !66, line: 4280, type: !161)
!2528 = !DILocation(line: 4280, column: 22, scope: !2525)
!2529 = !DILocation(line: 4282, column: 5, scope: !2525)
!2530 = !DILocation(line: 4283, column: 12, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2525, file: !66, line: 4283, column: 5)
!2532 = !DILocation(line: 4283, column: 10, scope: !2531)
!2533 = !DILocation(line: 4283, column: 17, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2531, file: !66, line: 4283, column: 5)
!2535 = !DILocation(line: 4283, column: 19, scope: !2534)
!2536 = !DILocation(line: 4283, column: 5, scope: !2531)
!2537 = !DILocation(line: 4285, column: 24, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2534, file: !66, line: 4284, column: 7)
!2539 = !DILocation(line: 4285, column: 20, scope: !2538)
!2540 = !DILocation(line: 4285, column: 9, scope: !2538)
!2541 = !DILocation(line: 4286, column: 17, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2538, file: !66, line: 4286, column: 13)
!2543 = !DILocation(line: 4286, column: 28, scope: !2542)
!2544 = !DILocation(line: 4286, column: 13, scope: !2538)
!2545 = !DILocation(line: 4287, column: 43, scope: !2542)
!2546 = !DILocation(line: 4287, column: 39, scope: !2542)
!2547 = !DILocation(line: 4287, column: 11, scope: !2542)
!2548 = !DILocation(line: 4288, column: 7, scope: !2538)
!2549 = !DILocation(line: 4283, column: 29, scope: !2534)
!2550 = !DILocation(line: 4283, column: 5, scope: !2534)
!2551 = distinct !{!2551, !2536, !2552}
!2552 = !DILocation(line: 4288, column: 7, scope: !2531)
!2553 = !DILocation(line: 4290, column: 9, scope: !2525)
!2554 = !DILocation(line: 4290, column: 20, scope: !2525)
!2555 = !DILocation(line: 4291, column: 9, scope: !2525)
!2556 = !DILocation(line: 4291, column: 19, scope: !2525)
!2557 = !{i64 0, i64 128, !2438}
!2558 = !DILocation(line: 4292, column: 9, scope: !2525)
!2559 = !DILocation(line: 4292, column: 18, scope: !2525)
!2560 = !{!2561, !2274, i64 136}
!2561 = !{!"sigaction", !2275, i64 0, !2562, i64 8, !2274, i64 136, !2287, i64 144}
!2562 = !{!"", !2275, i64 0}
!2563 = !DILocation(line: 4294, column: 12, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2525, file: !66, line: 4294, column: 5)
!2565 = !DILocation(line: 4294, column: 10, scope: !2564)
!2566 = !DILocation(line: 4294, column: 17, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2564, file: !66, line: 4294, column: 5)
!2568 = !DILocation(line: 4294, column: 19, scope: !2567)
!2569 = !DILocation(line: 4294, column: 5, scope: !2564)
!2570 = !DILocation(line: 4295, column: 45, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2567, file: !66, line: 4295, column: 11)
!2572 = !DILocation(line: 4295, column: 41, scope: !2571)
!2573 = !DILocation(line: 4295, column: 11, scope: !2571)
!2574 = !DILocation(line: 4295, column: 11, scope: !2567)
!2575 = !DILocation(line: 4296, column: 24, scope: !2571)
!2576 = !DILocation(line: 4296, column: 20, scope: !2571)
!2577 = !DILocation(line: 4296, column: 9, scope: !2571)
!2578 = !DILocation(line: 4295, column: 47, scope: !2571)
!2579 = !DILocation(line: 4294, column: 29, scope: !2567)
!2580 = !DILocation(line: 4294, column: 5, scope: !2567)
!2581 = distinct !{!2581, !2569, !2582}
!2582 = !DILocation(line: 4296, column: 38, scope: !2564)
!2583 = !DILocation(line: 4306, column: 3, scope: !721)
!2584 = !DILocation(line: 4309, column: 3, scope: !721)
!2585 = !DILocation(line: 4311, column: 3, scope: !721)
!2586 = !DILocation(line: 4312, column: 8, scope: !721)
!2587 = !DILocation(line: 4312, column: 14, scope: !721)
!2588 = !{!2589, !2448, i64 0}
!2589 = !{!"keyfield", !2448, i64 0, !2448, i64 8, !2448, i64 16, !2448, i64 24, !2287, i64 32, !2287, i64 40, !2431, i64 48, !2431, i64 49, !2431, i64 50, !2431, i64 51, !2431, i64 52, !2431, i64 53, !2431, i64 54, !2431, i64 55, !2431, i64 56, !2431, i64 57, !2287, i64 64}
!2590 = !DILocation(line: 4314, column: 21, scope: !721)
!2591 = !DILocation(line: 4314, column: 11, scope: !721)
!2592 = !DILocation(line: 4314, column: 9, scope: !721)
!2593 = !DILocation(line: 4316, column: 3, scope: !721)
!2594 = !DILocalVariable(name: "oi", scope: !2595, file: !66, line: 4322, type: !7)
!2595 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4317, column: 5)
!2596 = !DILocation(line: 4322, column: 11, scope: !2595)
!2597 = !DILocation(line: 4324, column: 11, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2595, file: !66, line: 4324, column: 11)
!2599 = !DILocation(line: 4324, column: 13, scope: !2598)
!2600 = !DILocation(line: 4325, column: 11, scope: !2598)
!2601 = !DILocation(line: 4325, column: 15, scope: !2598)
!2602 = !DILocation(line: 4325, column: 31, scope: !2598)
!2603 = !DILocation(line: 4325, column: 34, scope: !2598)
!2604 = !DILocation(line: 4325, column: 41, scope: !2598)
!2605 = !DILocation(line: 4326, column: 15, scope: !2598)
!2606 = !DILocation(line: 4326, column: 21, scope: !2598)
!2607 = !DILocation(line: 4327, column: 21, scope: !2598)
!2608 = !DILocation(line: 4327, column: 26, scope: !2598)
!2609 = !DILocation(line: 4328, column: 21, scope: !2598)
!2610 = !DILocation(line: 4328, column: 24, scope: !2598)
!2611 = !DILocation(line: 4328, column: 34, scope: !2598)
!2612 = !DILocation(line: 4328, column: 31, scope: !2598)
!2613 = !DILocation(line: 4329, column: 21, scope: !2598)
!2614 = !DILocation(line: 4329, column: 24, scope: !2598)
!2615 = !DILocation(line: 4329, column: 29, scope: !2598)
!2616 = !DILocation(line: 4329, column: 40, scope: !2598)
!2617 = !DILocation(line: 4329, column: 47, scope: !2598)
!2618 = !DILocation(line: 4329, column: 50, scope: !2598)
!2619 = !DILocation(line: 4329, column: 55, scope: !2598)
!2620 = !DILocation(line: 4329, column: 66, scope: !2598)
!2621 = !DILocation(line: 4330, column: 21, scope: !2598)
!2622 = !DILocation(line: 4330, column: 25, scope: !2598)
!2623 = !DILocation(line: 4330, column: 30, scope: !2598)
!2624 = !DILocation(line: 4330, column: 41, scope: !2598)
!2625 = !DILocation(line: 4330, column: 44, scope: !2598)
!2626 = !DILocation(line: 4330, column: 51, scope: !2598)
!2627 = !DILocation(line: 4330, column: 58, scope: !2598)
!2628 = !DILocation(line: 4330, column: 55, scope: !2598)
!2629 = !DILocation(line: 4331, column: 11, scope: !2598)
!2630 = !DILocation(line: 4331, column: 33, scope: !2598)
!2631 = !DILocation(line: 4331, column: 39, scope: !2598)
!2632 = !DILocation(line: 4331, column: 20, scope: !2598)
!2633 = !DILocation(line: 4331, column: 18, scope: !2598)
!2634 = !DILocation(line: 4333, column: 15, scope: !2598)
!2635 = !DILocation(line: 4324, column: 11, scope: !2595)
!2636 = !DILocation(line: 4335, column: 15, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2638, file: !66, line: 4335, column: 15)
!2638 = distinct !DILexicalBlock(scope: !2598, file: !66, line: 4334, column: 9)
!2639 = !DILocation(line: 4335, column: 23, scope: !2637)
!2640 = !DILocation(line: 4335, column: 20, scope: !2637)
!2641 = !DILocation(line: 4335, column: 15, scope: !2638)
!2642 = !DILocation(line: 4336, column: 13, scope: !2637)
!2643 = !DILocation(line: 4337, column: 29, scope: !2638)
!2644 = !DILocation(line: 4337, column: 40, scope: !2638)
!2645 = !DILocation(line: 4337, column: 11, scope: !2638)
!2646 = !DILocation(line: 4337, column: 23, scope: !2638)
!2647 = !DILocation(line: 4337, column: 27, scope: !2638)
!2648 = !DILocation(line: 4338, column: 9, scope: !2638)
!2649 = !DILocation(line: 4339, column: 20, scope: !2598)
!2650 = !DILocation(line: 4339, column: 12, scope: !2598)
!2651 = !DILocation(line: 4342, column: 15, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2598, file: !66, line: 4340, column: 9)
!2653 = !DILocation(line: 4343, column: 15, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4343, column: 15)
!2655 = !DILocation(line: 4343, column: 25, scope: !2654)
!2656 = !DILocation(line: 4343, column: 15, scope: !2652)
!2657 = !DILocalVariable(name: "minus_pos_usage", scope: !2658, file: !66, line: 4345, type: !103)
!2658 = distinct !DILexicalBlock(scope: !2654, file: !66, line: 4344, column: 13)
!2659 = !DILocation(line: 4345, column: 20, scope: !2658)
!2660 = !DILocation(line: 4345, column: 39, scope: !2658)
!2661 = !DILocation(line: 4345, column: 49, scope: !2658)
!2662 = !DILocation(line: 4345, column: 46, scope: !2658)
!2663 = !DILocation(line: 4345, column: 54, scope: !2658)
!2664 = !DILocation(line: 4345, column: 57, scope: !2658)
!2665 = !DILocation(line: 4345, column: 62, scope: !2658)
!2666 = !DILocation(line: 4345, column: 73, scope: !2658)
!2667 = !DILocation(line: 4346, column: 39, scope: !2658)
!2668 = !DILocation(line: 4346, column: 42, scope: !2658)
!2669 = !DILocation(line: 0, scope: !2658)
!2670 = !DILocation(line: 4347, column: 36, scope: !2658)
!2671 = !DILocation(line: 4347, column: 52, scope: !2658)
!2672 = !DILocation(line: 4347, column: 56, scope: !2658)
!2673 = !DILocation(line: 4347, column: 55, scope: !2658)
!2674 = !DILocation(line: 4347, column: 33, scope: !2658)
!2675 = !DILocation(line: 4348, column: 19, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2658, file: !66, line: 4348, column: 19)
!2677 = !DILocation(line: 4348, column: 19, scope: !2658)
!2678 = !DILocation(line: 4352, column: 25, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2676, file: !66, line: 4349, column: 17)
!2680 = !DILocation(line: 4352, column: 23, scope: !2679)
!2681 = !DILocation(line: 4353, column: 42, scope: !2679)
!2682 = !DILocation(line: 4353, column: 49, scope: !2679)
!2683 = !DILocation(line: 4353, column: 55, scope: !2679)
!2684 = !DILocation(line: 4353, column: 60, scope: !2679)
!2685 = !DILocation(line: 4353, column: 23, scope: !2679)
!2686 = !DILocation(line: 4353, column: 21, scope: !2679)
!2687 = !DILocation(line: 4354, column: 23, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2679, file: !66, line: 4354, column: 23)
!2689 = !DILocation(line: 4354, column: 25, scope: !2688)
!2690 = !DILocation(line: 4354, column: 29, scope: !2688)
!2691 = !DILocation(line: 4354, column: 28, scope: !2688)
!2692 = !DILocation(line: 4354, column: 31, scope: !2688)
!2693 = !DILocation(line: 4354, column: 23, scope: !2679)
!2694 = !DILocation(line: 4355, column: 44, scope: !2688)
!2695 = !DILocation(line: 4355, column: 46, scope: !2688)
!2696 = !DILocation(line: 4355, column: 52, scope: !2688)
!2697 = !DILocation(line: 4355, column: 57, scope: !2688)
!2698 = !DILocation(line: 4355, column: 25, scope: !2688)
!2699 = !DILocation(line: 4355, column: 23, scope: !2688)
!2700 = !DILocation(line: 4355, column: 21, scope: !2688)
!2701 = !DILocation(line: 4356, column: 26, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2679, file: !66, line: 4356, column: 23)
!2703 = !DILocation(line: 4356, column: 31, scope: !2702)
!2704 = !DILocation(line: 4356, column: 37, scope: !2702)
!2705 = !DILocation(line: 4356, column: 40, scope: !2702)
!2706 = !DILocation(line: 4356, column: 45, scope: !2702)
!2707 = !{!2589, !2448, i64 8}
!2708 = !DILocation(line: 4356, column: 23, scope: !2679)
!2709 = !DILocation(line: 4357, column: 21, scope: !2702)
!2710 = !DILocation(line: 4357, column: 26, scope: !2702)
!2711 = !DILocation(line: 4357, column: 32, scope: !2702)
!2712 = !DILocation(line: 4358, column: 25, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2679, file: !66, line: 4358, column: 23)
!2714 = !DILocation(line: 4358, column: 27, scope: !2713)
!2715 = !DILocation(line: 4358, column: 45, scope: !2713)
!2716 = !DILocation(line: 4358, column: 48, scope: !2713)
!2717 = !DILocation(line: 4358, column: 31, scope: !2713)
!2718 = !DILocation(line: 4358, column: 30, scope: !2713)
!2719 = !DILocation(line: 4358, column: 23, scope: !2679)
!2720 = !DILocation(line: 4359, column: 25, scope: !2713)
!2721 = !DILocation(line: 4359, column: 21, scope: !2713)
!2722 = !DILocation(line: 4362, column: 27, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2724, file: !66, line: 4362, column: 27)
!2724 = distinct !DILexicalBlock(scope: !2713, file: !66, line: 4361, column: 21)
!2725 = !DILocation(line: 4362, column: 27, scope: !2724)
!2726 = !DILocalVariable(name: "optarg1", scope: !2727, file: !66, line: 4364, type: !88)
!2727 = distinct !DILexicalBlock(scope: !2723, file: !66, line: 4363, column: 25)
!2728 = !DILocation(line: 4364, column: 39, scope: !2727)
!2729 = !DILocation(line: 4364, column: 49, scope: !2727)
!2730 = !DILocation(line: 4364, column: 60, scope: !2727)
!2731 = !DILocation(line: 4365, column: 50, scope: !2727)
!2732 = !DILocation(line: 4365, column: 58, scope: !2727)
!2733 = !DILocation(line: 4365, column: 64, scope: !2727)
!2734 = !DILocation(line: 4365, column: 69, scope: !2727)
!2735 = !DILocation(line: 4365, column: 31, scope: !2727)
!2736 = !DILocation(line: 4365, column: 29, scope: !2727)
!2737 = !DILocation(line: 4370, column: 27, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2739, file: !66, line: 4370, column: 27)
!2739 = distinct !DILexicalBlock(scope: !2727, file: !66, line: 4370, column: 27)
!2740 = !DILocation(line: 4370, column: 27, scope: !2739)
!2741 = !DILocation(line: 4371, column: 32, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2727, file: !66, line: 4371, column: 31)
!2743 = !DILocation(line: 4371, column: 31, scope: !2742)
!2744 = !DILocation(line: 4371, column: 34, scope: !2742)
!2745 = !DILocation(line: 4371, column: 31, scope: !2727)
!2746 = !DILocation(line: 4372, column: 52, scope: !2742)
!2747 = !DILocation(line: 4372, column: 54, scope: !2742)
!2748 = !DILocation(line: 4372, column: 60, scope: !2742)
!2749 = !DILocation(line: 4372, column: 65, scope: !2742)
!2750 = !DILocation(line: 4372, column: 33, scope: !2742)
!2751 = !DILocation(line: 4372, column: 31, scope: !2742)
!2752 = !DILocation(line: 4372, column: 29, scope: !2742)
!2753 = !DILocation(line: 4374, column: 32, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2727, file: !66, line: 4374, column: 31)
!2755 = !DILocation(line: 4374, column: 37, scope: !2754)
!2756 = !{!2589, !2448, i64 24}
!2757 = !DILocation(line: 4374, column: 43, scope: !2754)
!2758 = !DILocation(line: 4374, column: 46, scope: !2754)
!2759 = !DILocation(line: 4374, column: 51, scope: !2754)
!2760 = !{!2589, !2448, i64 16}
!2761 = !DILocation(line: 4374, column: 31, scope: !2727)
!2762 = !DILocation(line: 4382, column: 31, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2754, file: !66, line: 4375, column: 29)
!2764 = !DILocation(line: 4382, column: 36, scope: !2763)
!2765 = !DILocation(line: 4382, column: 41, scope: !2763)
!2766 = !DILocation(line: 4383, column: 29, scope: !2763)
!2767 = !DILocation(line: 4384, column: 46, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2727, file: !66, line: 4384, column: 31)
!2769 = !DILocation(line: 4384, column: 49, scope: !2768)
!2770 = !DILocation(line: 4384, column: 32, scope: !2768)
!2771 = !DILocation(line: 4384, column: 31, scope: !2768)
!2772 = !DILocation(line: 4384, column: 31, scope: !2727)
!2773 = !DILocation(line: 4385, column: 43, scope: !2768)
!2774 = !DILocation(line: 4385, column: 29, scope: !2768)
!2775 = !DILocation(line: 4387, column: 25, scope: !2727)
!2776 = !DILocation(line: 4388, column: 23, scope: !2724)
!2777 = !DILocation(line: 4388, column: 28, scope: !2724)
!2778 = !DILocation(line: 4388, column: 45, scope: !2724)
!2779 = !{!2589, !2431, i64 57}
!2780 = !DILocation(line: 4389, column: 34, scope: !2724)
!2781 = !DILocation(line: 4389, column: 23, scope: !2724)
!2782 = !DILocation(line: 4391, column: 17, scope: !2679)
!2783 = !DILocation(line: 4392, column: 13, scope: !2658)
!2784 = !DILocation(line: 4393, column: 17, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4393, column: 15)
!2786 = !DILocation(line: 4393, column: 15, scope: !2652)
!2787 = !DILocation(line: 4394, column: 31, scope: !2785)
!2788 = !DILocation(line: 4394, column: 13, scope: !2785)
!2789 = !DILocation(line: 4394, column: 25, scope: !2785)
!2790 = !DILocation(line: 4394, column: 29, scope: !2785)
!2791 = !DILocation(line: 4395, column: 11, scope: !2652)
!2792 = !DILocation(line: 4398, column: 15, scope: !2652)
!2793 = !DILocation(line: 4398, column: 13, scope: !2652)
!2794 = !DILocation(line: 4399, column: 11, scope: !2652)
!2795 = !DILocalVariable(name: "str", scope: !2796, file: !66, line: 4412, type: !275)
!2796 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4411, column: 11)
!2797 = !DILocation(line: 4412, column: 18, scope: !2796)
!2798 = !DILocation(line: 4413, column: 22, scope: !2796)
!2799 = !DILocation(line: 4413, column: 13, scope: !2796)
!2800 = !DILocation(line: 4413, column: 20, scope: !2796)
!2801 = !DILocation(line: 4414, column: 13, scope: !2796)
!2802 = !DILocation(line: 4414, column: 20, scope: !2796)
!2803 = !DILocation(line: 4415, column: 27, scope: !2796)
!2804 = !DILocation(line: 4415, column: 13, scope: !2796)
!2805 = !DILocation(line: 4417, column: 11, scope: !2652)
!2806 = !DILocation(line: 4420, column: 16, scope: !2652)
!2807 = !DILocation(line: 4421, column: 18, scope: !2652)
!2808 = !DILocation(line: 4420, column: 13, scope: !2652)
!2809 = !DILocation(line: 4423, column: 11, scope: !2652)
!2810 = !DILocation(line: 4426, column: 15, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4426, column: 15)
!2812 = !DILocation(line: 4426, column: 25, scope: !2811)
!2813 = !DILocation(line: 4426, column: 28, scope: !2811)
!2814 = !DILocation(line: 4426, column: 41, scope: !2811)
!2815 = !DILocation(line: 4426, column: 38, scope: !2811)
!2816 = !DILocation(line: 4426, column: 15, scope: !2652)
!2817 = !DILocation(line: 4427, column: 13, scope: !2811)
!2818 = !DILocation(line: 4428, column: 23, scope: !2652)
!2819 = !DILocation(line: 4428, column: 21, scope: !2652)
!2820 = !DILocation(line: 4429, column: 11, scope: !2652)
!2821 = !DILocation(line: 4432, column: 15, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4432, column: 15)
!2823 = !DILocation(line: 4432, column: 32, scope: !2822)
!2824 = !DILocation(line: 4432, column: 36, scope: !2822)
!2825 = !DILocation(line: 4432, column: 15, scope: !2652)
!2826 = !DILocation(line: 4433, column: 13, scope: !2822)
!2827 = !DILocation(line: 4434, column: 30, scope: !2652)
!2828 = !DILocation(line: 4434, column: 28, scope: !2652)
!2829 = !DILocation(line: 4435, column: 11, scope: !2652)
!2830 = !DILocation(line: 4438, column: 17, scope: !2652)
!2831 = !DILocation(line: 4439, column: 11, scope: !2652)
!2832 = !DILocation(line: 4442, column: 24, scope: !2652)
!2833 = !DILocation(line: 4442, column: 22, scope: !2652)
!2834 = !DILocation(line: 4443, column: 11, scope: !2652)
!2835 = !DILocation(line: 4446, column: 17, scope: !2652)
!2836 = !DILocation(line: 4446, column: 15, scope: !2652)
!2837 = !DILocation(line: 4449, column: 34, scope: !2652)
!2838 = !DILocation(line: 4449, column: 43, scope: !2652)
!2839 = !DILocation(line: 4449, column: 48, scope: !2652)
!2840 = !DILocation(line: 4449, column: 15, scope: !2652)
!2841 = !DILocation(line: 4449, column: 13, scope: !2652)
!2842 = !DILocation(line: 4451, column: 17, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4451, column: 15)
!2844 = !DILocation(line: 4451, column: 22, scope: !2843)
!2845 = !DILocation(line: 4451, column: 27, scope: !2843)
!2846 = !DILocation(line: 4451, column: 15, scope: !2652)
!2847 = !DILocation(line: 4454, column: 29, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2843, file: !66, line: 4452, column: 13)
!2849 = !DILocation(line: 4454, column: 15, scope: !2848)
!2850 = !DILocation(line: 4456, column: 16, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4456, column: 15)
!2852 = !DILocation(line: 4456, column: 15, scope: !2851)
!2853 = !DILocation(line: 4456, column: 18, scope: !2851)
!2854 = !DILocation(line: 4456, column: 15, scope: !2652)
!2855 = !DILocation(line: 4458, column: 38, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2851, file: !66, line: 4457, column: 13)
!2857 = !DILocation(line: 4458, column: 40, scope: !2856)
!2858 = !DILocation(line: 4458, column: 46, scope: !2856)
!2859 = !DILocation(line: 4458, column: 51, scope: !2856)
!2860 = !DILocation(line: 4458, column: 19, scope: !2856)
!2861 = !DILocation(line: 4458, column: 17, scope: !2856)
!2862 = !DILocation(line: 4460, column: 21, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2856, file: !66, line: 4460, column: 19)
!2864 = !DILocation(line: 4460, column: 26, scope: !2863)
!2865 = !DILocation(line: 4460, column: 31, scope: !2863)
!2866 = !DILocation(line: 4460, column: 19, scope: !2856)
!2867 = !DILocation(line: 4463, column: 33, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2863, file: !66, line: 4461, column: 17)
!2869 = !DILocation(line: 4463, column: 19, scope: !2868)
!2870 = !DILocation(line: 4465, column: 13, scope: !2856)
!2871 = !DILocation(line: 4466, column: 18, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4466, column: 15)
!2873 = !DILocation(line: 4466, column: 23, scope: !2872)
!2874 = !DILocation(line: 4466, column: 29, scope: !2872)
!2875 = !DILocation(line: 4466, column: 32, scope: !2872)
!2876 = !DILocation(line: 4466, column: 37, scope: !2872)
!2877 = !DILocation(line: 4466, column: 15, scope: !2652)
!2878 = !DILocation(line: 4467, column: 13, scope: !2872)
!2879 = !DILocation(line: 4467, column: 18, scope: !2872)
!2880 = !DILocation(line: 4467, column: 24, scope: !2872)
!2881 = !DILocation(line: 4468, column: 29, scope: !2652)
!2882 = !DILocation(line: 4468, column: 32, scope: !2652)
!2883 = !DILocation(line: 4468, column: 15, scope: !2652)
!2884 = !DILocation(line: 4468, column: 13, scope: !2652)
!2885 = !DILocation(line: 4469, column: 16, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4469, column: 15)
!2887 = !DILocation(line: 4469, column: 15, scope: !2886)
!2888 = !DILocation(line: 4469, column: 18, scope: !2886)
!2889 = !DILocation(line: 4469, column: 15, scope: !2652)
!2890 = !DILocation(line: 4471, column: 15, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2886, file: !66, line: 4470, column: 13)
!2892 = !DILocation(line: 4471, column: 20, scope: !2891)
!2893 = !DILocation(line: 4471, column: 26, scope: !2891)
!2894 = !DILocation(line: 4472, column: 15, scope: !2891)
!2895 = !DILocation(line: 4472, column: 20, scope: !2891)
!2896 = !DILocation(line: 4472, column: 26, scope: !2891)
!2897 = !DILocation(line: 4473, column: 13, scope: !2891)
!2898 = !DILocation(line: 4477, column: 38, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2886, file: !66, line: 4475, column: 13)
!2900 = !DILocation(line: 4477, column: 40, scope: !2899)
!2901 = !DILocation(line: 4477, column: 46, scope: !2899)
!2902 = !DILocation(line: 4477, column: 51, scope: !2899)
!2903 = !DILocation(line: 4477, column: 19, scope: !2899)
!2904 = !DILocation(line: 4477, column: 17, scope: !2899)
!2905 = !DILocation(line: 4479, column: 21, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2899, file: !66, line: 4479, column: 19)
!2907 = !DILocation(line: 4479, column: 26, scope: !2906)
!2908 = !DILocation(line: 4479, column: 31, scope: !2906)
!2909 = !DILocation(line: 4479, column: 19, scope: !2899)
!2910 = !DILocation(line: 4482, column: 33, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2906, file: !66, line: 4480, column: 17)
!2912 = !DILocation(line: 4482, column: 19, scope: !2911)
!2913 = !DILocation(line: 4484, column: 20, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2899, file: !66, line: 4484, column: 19)
!2915 = !DILocation(line: 4484, column: 19, scope: !2914)
!2916 = !DILocation(line: 4484, column: 22, scope: !2914)
!2917 = !DILocation(line: 4484, column: 19, scope: !2899)
!2918 = !DILocation(line: 4486, column: 42, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2914, file: !66, line: 4485, column: 17)
!2920 = !DILocation(line: 4486, column: 44, scope: !2919)
!2921 = !DILocation(line: 4486, column: 50, scope: !2919)
!2922 = !DILocation(line: 4486, column: 55, scope: !2919)
!2923 = !DILocation(line: 4486, column: 23, scope: !2919)
!2924 = !DILocation(line: 4486, column: 21, scope: !2919)
!2925 = !DILocation(line: 4488, column: 17, scope: !2919)
!2926 = !DILocation(line: 4489, column: 33, scope: !2899)
!2927 = !DILocation(line: 4489, column: 36, scope: !2899)
!2928 = !DILocation(line: 4489, column: 19, scope: !2899)
!2929 = !DILocation(line: 4489, column: 17, scope: !2899)
!2930 = !DILocation(line: 4491, column: 16, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4491, column: 15)
!2932 = !DILocation(line: 4491, column: 15, scope: !2931)
!2933 = !DILocation(line: 4491, column: 15, scope: !2652)
!2934 = !DILocation(line: 4492, column: 27, scope: !2931)
!2935 = !DILocation(line: 4492, column: 13, scope: !2931)
!2936 = !DILocation(line: 4493, column: 22, scope: !2652)
!2937 = !DILocation(line: 4493, column: 11, scope: !2652)
!2938 = !DILocation(line: 4494, column: 11, scope: !2652)
!2939 = !DILocation(line: 4497, column: 21, scope: !2652)
!2940 = !DILocation(line: 4498, column: 11, scope: !2652)
!2941 = !DILocation(line: 4501, column: 27, scope: !2652)
!2942 = !DILocation(line: 4501, column: 31, scope: !2652)
!2943 = !DILocation(line: 4501, column: 34, scope: !2652)
!2944 = !DILocation(line: 4501, column: 11, scope: !2652)
!2945 = !DILocation(line: 4502, column: 11, scope: !2652)
!2946 = !DILocation(line: 4505, column: 15, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4505, column: 15)
!2948 = !DILocation(line: 4505, column: 23, scope: !2947)
!2949 = !DILocation(line: 4505, column: 27, scope: !2947)
!2950 = !DILocation(line: 4505, column: 15, scope: !2652)
!2951 = !DILocation(line: 4506, column: 13, scope: !2947)
!2952 = !DILocation(line: 4507, column: 21, scope: !2652)
!2953 = !DILocation(line: 4507, column: 19, scope: !2652)
!2954 = !DILocation(line: 4508, column: 11, scope: !2652)
!2955 = !DILocation(line: 4511, column: 15, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4511, column: 15)
!2957 = !DILocation(line: 4511, column: 29, scope: !2956)
!2958 = !DILocation(line: 4511, column: 33, scope: !2956)
!2959 = !DILocation(line: 4511, column: 15, scope: !2652)
!2960 = !DILocation(line: 4512, column: 13, scope: !2956)
!2961 = !DILocation(line: 4513, column: 27, scope: !2652)
!2962 = !DILocation(line: 4513, column: 25, scope: !2652)
!2963 = !DILocation(line: 4514, column: 11, scope: !2652)
!2964 = !DILocation(line: 4517, column: 18, scope: !2652)
!2965 = !DILocation(line: 4518, column: 11, scope: !2652)
!2966 = !DILocation(line: 4521, column: 30, scope: !2652)
!2967 = !DILocation(line: 4521, column: 34, scope: !2652)
!2968 = !DILocation(line: 4521, column: 37, scope: !2652)
!2969 = !DILocation(line: 4521, column: 11, scope: !2652)
!2970 = !DILocation(line: 4522, column: 11, scope: !2652)
!2971 = !DILocalVariable(name: "newtab", scope: !2972, file: !66, line: 4526, type: !10)
!2972 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4525, column: 11)
!2973 = !DILocation(line: 4526, column: 18, scope: !2972)
!2974 = !DILocation(line: 4526, column: 27, scope: !2972)
!2975 = !DILocation(line: 4527, column: 19, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !66, line: 4527, column: 17)
!2977 = !DILocation(line: 4527, column: 17, scope: !2972)
!2978 = !DILocation(line: 4528, column: 15, scope: !2976)
!2979 = !DILocation(line: 4529, column: 17, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2972, file: !66, line: 4529, column: 17)
!2981 = !DILocation(line: 4529, column: 17, scope: !2972)
!2982 = !DILocation(line: 4531, column: 21, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !66, line: 4531, column: 21)
!2984 = distinct !DILexicalBlock(scope: !2980, file: !66, line: 4530, column: 15)
!2985 = !DILocation(line: 4531, column: 21, scope: !2984)
!2986 = !DILocation(line: 4532, column: 26, scope: !2983)
!2987 = !DILocation(line: 4532, column: 19, scope: !2983)
!2988 = !DILocation(line: 4539, column: 21, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2983, file: !66, line: 4534, column: 19)
!2990 = !DILocation(line: 4542, column: 15, scope: !2984)
!2991 = !DILocation(line: 4543, column: 17, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2972, file: !66, line: 4543, column: 17)
!2993 = !DILocation(line: 4543, column: 21, scope: !2992)
!2994 = !DILocation(line: 4543, column: 36, scope: !2992)
!2995 = !DILocation(line: 4543, column: 39, scope: !2992)
!2996 = !DILocation(line: 4543, column: 46, scope: !2992)
!2997 = !DILocation(line: 4543, column: 43, scope: !2992)
!2998 = !DILocation(line: 4543, column: 17, scope: !2972)
!2999 = !DILocation(line: 4544, column: 15, scope: !2992)
!3000 = !DILocation(line: 4545, column: 19, scope: !2972)
!3001 = !DILocation(line: 4545, column: 17, scope: !2972)
!3002 = !DILocation(line: 4547, column: 11, scope: !2652)
!3003 = !DILocation(line: 4550, column: 25, scope: !2652)
!3004 = !DILocation(line: 4550, column: 11, scope: !2652)
!3005 = !DILocation(line: 4551, column: 11, scope: !2652)
!3006 = !DILocation(line: 4554, column: 40, scope: !2652)
!3007 = !DILocation(line: 4554, column: 44, scope: !2652)
!3008 = !DILocation(line: 4554, column: 47, scope: !2652)
!3009 = !DILocation(line: 4554, column: 22, scope: !2652)
!3010 = !DILocation(line: 4554, column: 20, scope: !2652)
!3011 = !DILocation(line: 4555, column: 11, scope: !2652)
!3012 = !DILocation(line: 4558, column: 18, scope: !2652)
!3013 = !DILocation(line: 4559, column: 11, scope: !2652)
!3014 = !DILocation(line: 4572, column: 15, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2652, file: !66, line: 4572, column: 15)
!3016 = !DILocation(line: 4572, column: 25, scope: !3015)
!3017 = !DILocation(line: 4572, column: 30, scope: !3015)
!3018 = !DILocation(line: 4572, column: 37, scope: !3015)
!3019 = !DILocation(line: 4572, column: 22, scope: !3015)
!3020 = !DILocation(line: 4572, column: 15, scope: !2652)
!3021 = !DILocalVariable(name: "p", scope: !3022, file: !66, line: 4574, type: !88)
!3022 = distinct !DILexicalBlock(scope: !3015, file: !66, line: 4573, column: 13)
!3023 = !DILocation(line: 4574, column: 27, scope: !3022)
!3024 = !DILocation(line: 4575, column: 24, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3022, file: !66, line: 4575, column: 15)
!3026 = !DILocation(line: 4575, column: 22, scope: !3025)
!3027 = !DILocation(line: 4575, column: 20, scope: !3025)
!3028 = !DILocation(line: 4575, column: 32, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3025, file: !66, line: 4575, column: 15)
!3030 = !DILocation(line: 4575, column: 15, scope: !3025)
!3031 = !DILocation(line: 4576, column: 17, scope: !3029)
!3032 = !DILocation(line: 4575, column: 47, scope: !3029)
!3033 = !DILocation(line: 4575, column: 15, scope: !3029)
!3034 = distinct !{!3034, !3030, !3035}
!3035 = !DILocation(line: 4576, column: 17, scope: !3025)
!3036 = !DILocation(line: 4577, column: 27, scope: !3022)
!3037 = !DILocation(line: 4577, column: 26, scope: !3022)
!3038 = !DILocation(line: 4577, column: 29, scope: !3022)
!3039 = !DILocation(line: 4577, column: 22, scope: !3022)
!3040 = !DILocation(line: 4578, column: 13, scope: !3022)
!3041 = !DILocation(line: 4579, column: 11, scope: !2652)
!3042 = !DILocation(line: 4582, column: 19, scope: !2652)
!3043 = !DILocation(line: 4583, column: 11, scope: !2652)
!3044 = !DILocation(line: 4585, column: 9, scope: !2652)
!3045 = !DILocation(line: 4587, column: 9, scope: !2652)
!3046 = !DILocation(line: 4590, column: 11, scope: !2652)
!3047 = distinct !{!3047, !2593, !3048}
!3048 = !DILocation(line: 4592, column: 5, scope: !721)
!3049 = !DILocation(line: 4594, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4594, column: 7)
!3051 = !DILocation(line: 4594, column: 7, scope: !721)
!3052 = !DILocation(line: 4598, column: 11, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !66, line: 4598, column: 11)
!3054 = distinct !DILexicalBlock(scope: !3050, file: !66, line: 4595, column: 5)
!3055 = !DILocation(line: 4598, column: 11, scope: !3054)
!3056 = !DILocation(line: 4600, column: 24, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3053, file: !66, line: 4599, column: 9)
!3058 = !DILocation(line: 4600, column: 47, scope: !3057)
!3059 = !DILocation(line: 4600, column: 11, scope: !3057)
!3060 = !DILocation(line: 4601, column: 20, scope: !3057)
!3061 = !DILocation(line: 4602, column: 20, scope: !3057)
!3062 = !DILocation(line: 4601, column: 11, scope: !3057)
!3063 = !DILocation(line: 4603, column: 11, scope: !3057)
!3064 = !DILocalVariable(name: "stream", scope: !3054, file: !66, line: 4606, type: !0)
!3065 = !DILocation(line: 4606, column: 13, scope: !3054)
!3066 = !DILocation(line: 4606, column: 30, scope: !3054)
!3067 = !DILocation(line: 4606, column: 22, scope: !3054)
!3068 = !DILocation(line: 4608, column: 7, scope: !3054)
!3069 = !DILocation(line: 4610, column: 26, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3054, file: !66, line: 4610, column: 11)
!3071 = !DILocation(line: 4610, column: 13, scope: !3070)
!3072 = !DILocation(line: 4610, column: 11, scope: !3054)
!3073 = !DILocation(line: 4611, column: 9, scope: !3070)
!3074 = !DILocation(line: 4613, column: 16, scope: !3054)
!3075 = !DILocation(line: 4613, column: 24, scope: !3054)
!3076 = !DILocation(line: 4613, column: 7, scope: !3054)
!3077 = !DILocation(line: 4615, column: 15, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3054, file: !66, line: 4615, column: 11)
!3079 = !{!3080, !2448, i64 0}
!3080 = !{!"Tokens", !2448, i64 0, !2287, i64 8, !2287, i64 16, !3081, i64 24, !3081, i64 112, !3081, i64 200}
!3081 = !{!"obstack", !2448, i64 0, !2287, i64 8, !2287, i64 16, !2287, i64 24, !2287, i64 32, !2275, i64 40, !2448, i64 48, !2275, i64 56, !2275, i64 64, !2287, i64 72, !2274, i64 80, !2274, i64 80, !2274, i64 80}
!3082 = !DILocation(line: 4615, column: 11, scope: !3078)
!3083 = !DILocation(line: 4615, column: 11, scope: !3054)
!3084 = !DILocation(line: 4617, column: 17, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3078, file: !66, line: 4616, column: 9)
!3086 = !DILocation(line: 4617, column: 11, scope: !3085)
!3087 = !DILocation(line: 4618, column: 23, scope: !3085)
!3088 = !{!3080, !2287, i64 8}
!3089 = !DILocation(line: 4618, column: 17, scope: !3085)
!3090 = !DILocation(line: 4619, column: 24, scope: !3085)
!3091 = !DILocation(line: 4619, column: 18, scope: !3085)
!3092 = !DILocalVariable(name: "i", scope: !3093, file: !66, line: 4620, type: !55)
!3093 = distinct !DILexicalBlock(scope: !3085, file: !66, line: 4620, column: 11)
!3094 = !DILocation(line: 4620, column: 23, scope: !3093)
!3095 = !DILocation(line: 4620, column: 16, scope: !3093)
!3096 = !DILocation(line: 4620, column: 30, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3093, file: !66, line: 4620, column: 11)
!3098 = !DILocation(line: 4620, column: 34, scope: !3097)
!3099 = !DILocation(line: 4620, column: 32, scope: !3097)
!3100 = !DILocation(line: 4620, column: 11, scope: !3093)
!3101 = !DILocation(line: 4622, column: 19, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !66, line: 4622, column: 19)
!3103 = distinct !DILexicalBlock(scope: !3097, file: !66, line: 4621, column: 13)
!3104 = !DILocation(line: 4622, column: 19, scope: !3103)
!3105 = !DILocation(line: 4623, column: 17, scope: !3102)
!3106 = !DILocation(line: 4626, column: 24, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3102, file: !66, line: 4626, column: 24)
!3108 = !DILocation(line: 4626, column: 30, scope: !3107)
!3109 = !DILocation(line: 4626, column: 36, scope: !3107)
!3110 = !DILocation(line: 4626, column: 24, scope: !3102)
!3111 = !DILocalVariable(name: "file_number", scope: !3112, file: !66, line: 4631, type: !57)
!3112 = distinct !DILexicalBlock(scope: !3107, file: !66, line: 4627, column: 17)
!3113 = !DILocation(line: 4631, column: 37, scope: !3112)
!3114 = !DILocation(line: 4631, column: 51, scope: !3112)
!3115 = !DILocation(line: 4631, column: 53, scope: !3112)
!3116 = !DILocation(line: 4632, column: 19, scope: !3112)
!3117 = !DILocation(line: 4636, column: 13, scope: !3103)
!3118 = !DILocation(line: 4620, column: 43, scope: !3097)
!3119 = !DILocation(line: 4620, column: 11, scope: !3097)
!3120 = distinct !{!3120, !3100, !3121}
!3121 = !DILocation(line: 4636, column: 13, scope: !3093)
!3122 = !DILocation(line: 4637, column: 9, scope: !3085)
!3123 = !DILocation(line: 4639, column: 9, scope: !3078)
!3124 = !DILocation(line: 4641, column: 5, scope: !3054)
!3125 = !DILocation(line: 4644, column: 14, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4644, column: 3)
!3127 = !DILocation(line: 4644, column: 12, scope: !3126)
!3128 = !DILocation(line: 4644, column: 8, scope: !3126)
!3129 = !DILocation(line: 4644, column: 23, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3126, file: !66, line: 4644, column: 3)
!3131 = !DILocation(line: 4644, column: 3, scope: !3126)
!3132 = !DILocation(line: 4646, column: 32, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !66, line: 4646, column: 11)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !66, line: 4645, column: 5)
!3135 = !DILocation(line: 4646, column: 11, scope: !3133)
!3136 = !DILocation(line: 4646, column: 37, scope: !3133)
!3137 = !DILocation(line: 4646, column: 41, scope: !3133)
!3138 = !DILocation(line: 4646, column: 46, scope: !3133)
!3139 = !{!2589, !2431, i64 55}
!3140 = !DILocation(line: 4646, column: 11, scope: !3134)
!3141 = !DILocation(line: 4648, column: 30, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3133, file: !66, line: 4647, column: 9)
!3143 = !{!2589, !2287, i64 32}
!3144 = !DILocation(line: 4648, column: 11, scope: !3142)
!3145 = !DILocation(line: 4648, column: 16, scope: !3142)
!3146 = !DILocation(line: 4648, column: 23, scope: !3142)
!3147 = !DILocation(line: 4649, column: 33, scope: !3142)
!3148 = !{!2589, !2287, i64 40}
!3149 = !DILocation(line: 4649, column: 11, scope: !3142)
!3150 = !DILocation(line: 4649, column: 16, scope: !3142)
!3151 = !DILocation(line: 4649, column: 26, scope: !3142)
!3152 = !DILocation(line: 4650, column: 35, scope: !3142)
!3153 = !{!2589, !2431, i64 48}
!3154 = !DILocation(line: 4650, column: 11, scope: !3142)
!3155 = !DILocation(line: 4650, column: 16, scope: !3142)
!3156 = !DILocation(line: 4650, column: 28, scope: !3142)
!3157 = !DILocation(line: 4651, column: 35, scope: !3142)
!3158 = !{!2589, !2431, i64 49}
!3159 = !DILocation(line: 4651, column: 11, scope: !3142)
!3160 = !DILocation(line: 4651, column: 16, scope: !3142)
!3161 = !DILocation(line: 4651, column: 28, scope: !3142)
!3162 = !DILocation(line: 4652, column: 29, scope: !3142)
!3163 = !{!2589, !2431, i64 54}
!3164 = !DILocation(line: 4652, column: 11, scope: !3142)
!3165 = !DILocation(line: 4652, column: 16, scope: !3142)
!3166 = !DILocation(line: 4652, column: 22, scope: !3142)
!3167 = !DILocation(line: 4653, column: 31, scope: !3142)
!3168 = !{!2589, !2431, i64 50}
!3169 = !DILocation(line: 4653, column: 11, scope: !3142)
!3170 = !DILocation(line: 4653, column: 16, scope: !3142)
!3171 = !DILocation(line: 4653, column: 24, scope: !3142)
!3172 = !DILocation(line: 4654, column: 39, scope: !3142)
!3173 = !{!2589, !2431, i64 52}
!3174 = !DILocation(line: 4654, column: 11, scope: !3142)
!3175 = !DILocation(line: 4654, column: 16, scope: !3142)
!3176 = !DILocation(line: 4654, column: 32, scope: !3142)
!3177 = !DILocation(line: 4655, column: 37, scope: !3142)
!3178 = !{!2589, !2431, i64 53}
!3179 = !DILocation(line: 4655, column: 11, scope: !3142)
!3180 = !DILocation(line: 4655, column: 16, scope: !3142)
!3181 = !DILocation(line: 4655, column: 30, scope: !3142)
!3182 = !DILocation(line: 4656, column: 31, scope: !3142)
!3183 = !{!2589, !2431, i64 56}
!3184 = !DILocation(line: 4656, column: 11, scope: !3142)
!3185 = !DILocation(line: 4656, column: 16, scope: !3142)
!3186 = !DILocation(line: 4656, column: 24, scope: !3142)
!3187 = !DILocation(line: 4657, column: 30, scope: !3142)
!3188 = !{!2589, !2431, i64 51}
!3189 = !DILocation(line: 4657, column: 11, scope: !3142)
!3190 = !DILocation(line: 4657, column: 16, scope: !3142)
!3191 = !DILocation(line: 4657, column: 23, scope: !3142)
!3192 = !DILocation(line: 4658, column: 31, scope: !3142)
!3193 = !DILocation(line: 4658, column: 11, scope: !3142)
!3194 = !DILocation(line: 4658, column: 16, scope: !3142)
!3195 = !DILocation(line: 4658, column: 24, scope: !3142)
!3196 = !DILocation(line: 4659, column: 9, scope: !3142)
!3197 = !DILocation(line: 4661, column: 22, scope: !3134)
!3198 = !DILocation(line: 4661, column: 27, scope: !3134)
!3199 = !DILocation(line: 4661, column: 19, scope: !3134)
!3200 = !DILocation(line: 4662, column: 5, scope: !3134)
!3201 = !DILocation(line: 4644, column: 34, scope: !3130)
!3202 = !DILocation(line: 4644, column: 39, scope: !3130)
!3203 = !{!2589, !2287, i64 64}
!3204 = !DILocation(line: 4644, column: 32, scope: !3130)
!3205 = !DILocation(line: 4644, column: 3, scope: !3130)
!3206 = distinct !{!3206, !3131, !3207}
!3207 = !DILocation(line: 4662, column: 5, scope: !3126)
!3208 = !DILocation(line: 4664, column: 8, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4664, column: 7)
!3210 = !DILocation(line: 4664, column: 16, scope: !3209)
!3211 = !DILocation(line: 4664, column: 20, scope: !3209)
!3212 = !DILocation(line: 4664, column: 7, scope: !721)
!3213 = !DILocation(line: 4666, column: 17, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3209, file: !66, line: 4665, column: 5)
!3215 = !DILocation(line: 4667, column: 7, scope: !3214)
!3216 = !DILocation(line: 4668, column: 27, scope: !3214)
!3217 = !DILocation(line: 4668, column: 22, scope: !3214)
!3218 = !DILocation(line: 4668, column: 19, scope: !3214)
!3219 = !DILocation(line: 4669, column: 5, scope: !3214)
!3220 = !DILocation(line: 4671, column: 3, scope: !721)
!3221 = !DILocation(line: 4673, column: 7, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4673, column: 7)
!3223 = !DILocation(line: 4673, column: 7, scope: !721)
!3224 = !DILocation(line: 4675, column: 11, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !66, line: 4675, column: 11)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !66, line: 4674, column: 5)
!3227 = !DILocation(line: 4675, column: 21, scope: !3225)
!3228 = !DILocation(line: 4675, column: 24, scope: !3225)
!3229 = !DILocation(line: 4675, column: 11, scope: !3226)
!3230 = !DILocation(line: 4678, column: 22, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3225, file: !66, line: 4676, column: 9)
!3232 = !DILocation(line: 4678, column: 34, scope: !3231)
!3233 = !DILocation(line: 4678, column: 21, scope: !3231)
!3234 = !DILocation(line: 4678, column: 19, scope: !3231)
!3235 = !DILocation(line: 4679, column: 11, scope: !3231)
!3236 = !DILocation(line: 4687, column: 11, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3226, file: !66, line: 4687, column: 11)
!3238 = !DILocation(line: 4687, column: 11, scope: !3226)
!3239 = !DILocation(line: 4688, column: 24, scope: !3237)
!3240 = !DILocation(line: 4688, column: 22, scope: !3237)
!3241 = !DILocation(line: 4688, column: 21, scope: !3237)
!3242 = !DILocation(line: 4688, column: 19, scope: !3237)
!3243 = !DILocation(line: 4688, column: 9, scope: !3237)
!3244 = !DILocation(line: 4689, column: 13, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3226, file: !66, line: 4689, column: 11)
!3246 = !DILocation(line: 4689, column: 11, scope: !3226)
!3247 = !DILocation(line: 4690, column: 30, scope: !3245)
!3248 = !DILocation(line: 4690, column: 11, scope: !3245)
!3249 = !DILocation(line: 4691, column: 11, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3226, file: !66, line: 4691, column: 11)
!3251 = !DILocation(line: 4691, column: 11, scope: !3226)
!3252 = !DILocation(line: 4692, column: 22, scope: !3250)
!3253 = !DILocation(line: 4693, column: 23, scope: !3250)
!3254 = !DILocation(line: 4693, column: 16, scope: !3250)
!3255 = !DILocation(line: 4692, column: 9, scope: !3250)
!3256 = !DILocation(line: 4696, column: 16, scope: !3250)
!3257 = !DILocation(line: 4695, column: 9, scope: !3250)
!3258 = !DILocation(line: 4698, column: 28, scope: !3226)
!3259 = !DILocation(line: 4698, column: 7, scope: !3226)
!3260 = !DILocation(line: 4699, column: 5, scope: !3226)
!3261 = !DILocation(line: 4701, column: 18, scope: !721)
!3262 = !DILocation(line: 4701, column: 11, scope: !721)
!3263 = !DILocation(line: 4703, column: 7, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4703, column: 7)
!3265 = !DILocation(line: 4703, column: 7, scope: !721)
!3266 = !DILocation(line: 4704, column: 28, scope: !3264)
!3267 = !DILocation(line: 4704, column: 5, scope: !3264)
!3268 = !DILocation(line: 4706, column: 7, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4706, column: 7)
!3270 = !DILocation(line: 4706, column: 22, scope: !3269)
!3271 = !DILocation(line: 4706, column: 7, scope: !721)
!3272 = !DILocalVariable(name: "tmp_dir", scope: !3273, file: !66, line: 4708, type: !88)
!3273 = distinct !DILexicalBlock(scope: !3269, file: !66, line: 4707, column: 5)
!3274 = !DILocation(line: 4708, column: 19, scope: !3273)
!3275 = !DILocation(line: 4708, column: 29, scope: !3273)
!3276 = !DILocation(line: 4709, column: 21, scope: !3273)
!3277 = !DILocation(line: 4709, column: 31, scope: !3273)
!3278 = !DILocation(line: 4709, column: 7, scope: !3273)
!3279 = !DILocation(line: 4710, column: 5, scope: !3273)
!3280 = !DILocation(line: 4712, column: 7, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4712, column: 7)
!3282 = !DILocation(line: 4712, column: 14, scope: !3281)
!3283 = !DILocation(line: 4712, column: 7, scope: !721)
!3284 = !DILocation(line: 4714, column: 14, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3281, file: !66, line: 4713, column: 5)
!3286 = !DILocation(line: 4715, column: 13, scope: !3285)
!3287 = !DILocation(line: 4715, column: 7, scope: !3285)
!3288 = !DILocation(line: 4716, column: 15, scope: !3285)
!3289 = !DILocation(line: 4716, column: 13, scope: !3285)
!3290 = !DILocation(line: 4717, column: 8, scope: !3285)
!3291 = !DILocation(line: 4717, column: 14, scope: !3285)
!3292 = !DILocation(line: 4718, column: 5, scope: !3285)
!3293 = !DILocation(line: 4722, column: 11, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4722, column: 7)
!3295 = !DILocation(line: 4722, column: 9, scope: !3294)
!3296 = !DILocation(line: 4722, column: 7, scope: !721)
!3297 = !DILocation(line: 4723, column: 17, scope: !3294)
!3298 = !DILocation(line: 4723, column: 15, scope: !3294)
!3299 = !DILocation(line: 4723, column: 5, scope: !3294)
!3300 = !DILocation(line: 4725, column: 7, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4725, column: 7)
!3302 = !DILocation(line: 4725, column: 7, scope: !721)
!3303 = !DILocation(line: 4727, column: 11, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !66, line: 4727, column: 11)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !66, line: 4726, column: 5)
!3306 = !DILocation(line: 4727, column: 18, scope: !3304)
!3307 = !DILocation(line: 4727, column: 11, scope: !3305)
!3308 = !DILocation(line: 4728, column: 9, scope: !3304)
!3309 = !DILocation(line: 4731, column: 11, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3305, file: !66, line: 4731, column: 11)
!3311 = !DILocation(line: 4731, column: 11, scope: !3305)
!3312 = !DILocation(line: 4734, column: 21, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3310, file: !66, line: 4732, column: 9)
!3314 = !DILocation(line: 4734, column: 19, scope: !3313)
!3315 = !DILocation(line: 4735, column: 11, scope: !3313)
!3316 = !DILocation(line: 4740, column: 21, scope: !3305)
!3317 = !DILocation(line: 4740, column: 31, scope: !3305)
!3318 = !DILocation(line: 4740, column: 14, scope: !3305)
!3319 = !DILocation(line: 4740, column: 7, scope: !3305)
!3320 = !DILocation(line: 4744, column: 17, scope: !721)
!3321 = !DILocation(line: 4744, column: 24, scope: !721)
!3322 = !DILocation(line: 4744, column: 3, scope: !721)
!3323 = !DILocation(line: 4747, column: 17, scope: !721)
!3324 = !DILocation(line: 4747, column: 3, scope: !721)
!3325 = !DILocation(line: 4749, column: 7, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4749, column: 7)
!3327 = !DILocation(line: 4749, column: 7, scope: !721)
!3328 = !DILocalVariable(name: "sortfiles", scope: !3329, file: !66, line: 4751, type: !288)
!3329 = distinct !DILexicalBlock(scope: !3326, file: !66, line: 4750, column: 5)
!3330 = !DILocation(line: 4751, column: 24, scope: !3329)
!3331 = !DILocation(line: 4751, column: 45, scope: !3329)
!3332 = !DILocation(line: 4751, column: 36, scope: !3329)
!3333 = !DILocalVariable(name: "i", scope: !3334, file: !66, line: 4753, type: !55)
!3334 = distinct !DILexicalBlock(scope: !3329, file: !66, line: 4753, column: 7)
!3335 = !DILocation(line: 4753, column: 19, scope: !3334)
!3336 = !DILocation(line: 4753, column: 12, scope: !3334)
!3337 = !DILocation(line: 4753, column: 26, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3334, file: !66, line: 4753, column: 7)
!3339 = !DILocation(line: 4753, column: 30, scope: !3338)
!3340 = !DILocation(line: 4753, column: 28, scope: !3338)
!3341 = !DILocation(line: 4753, column: 7, scope: !3334)
!3342 = !DILocation(line: 4754, column: 29, scope: !3338)
!3343 = !DILocation(line: 4754, column: 35, scope: !3338)
!3344 = !DILocation(line: 4754, column: 9, scope: !3338)
!3345 = !DILocation(line: 4754, column: 19, scope: !3338)
!3346 = !DILocation(line: 4754, column: 22, scope: !3338)
!3347 = !DILocation(line: 4754, column: 27, scope: !3338)
!3348 = !{!3349, !2287, i64 0}
!3349 = !{!"sortfile", !2287, i64 0, !2287, i64 8}
!3350 = !DILocation(line: 4753, column: 38, scope: !3338)
!3351 = !DILocation(line: 4753, column: 7, scope: !3338)
!3352 = distinct !{!3352, !3341, !3353}
!3353 = !DILocation(line: 4754, column: 36, scope: !3334)
!3354 = !DILocation(line: 4756, column: 14, scope: !3329)
!3355 = !DILocation(line: 4756, column: 28, scope: !3329)
!3356 = !DILocation(line: 4756, column: 36, scope: !3329)
!3357 = !DILocation(line: 4756, column: 7, scope: !3329)
!3358 = !DILocation(line: 4758, column: 5, scope: !3329)
!3359 = !DILocation(line: 4761, column: 12, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !66, line: 4761, column: 11)
!3361 = distinct !DILexicalBlock(scope: !3326, file: !66, line: 4760, column: 5)
!3362 = !DILocation(line: 4761, column: 11, scope: !3361)
!3363 = !DILocalVariable(name: "np", scope: !3364, file: !66, line: 4763, type: !57)
!3364 = distinct !DILexicalBlock(scope: !3360, file: !66, line: 4762, column: 9)
!3365 = !DILocation(line: 4763, column: 29, scope: !3364)
!3366 = !DILocation(line: 4763, column: 34, scope: !3364)
!3367 = !DILocation(line: 4764, column: 22, scope: !3364)
!3368 = !DILocation(line: 4764, column: 20, scope: !3364)
!3369 = !DILocation(line: 4765, column: 9, scope: !3364)
!3370 = !DILocalVariable(name: "nthreads_max", scope: !3361, file: !66, line: 4768, type: !55)
!3371 = !DILocation(line: 4768, column: 14, scope: !3361)
!3372 = !DILocation(line: 4769, column: 18, scope: !3361)
!3373 = !DILocation(line: 4769, column: 16, scope: !3361)
!3374 = !DILocation(line: 4771, column: 13, scope: !3361)
!3375 = !DILocation(line: 4771, column: 20, scope: !3361)
!3376 = !DILocation(line: 4771, column: 28, scope: !3361)
!3377 = !DILocation(line: 4771, column: 37, scope: !3361)
!3378 = !DILocation(line: 4771, column: 7, scope: !3361)
!3379 = !DILocation(line: 4781, column: 7, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !721, file: !66, line: 4781, column: 7)
!3381 = !DILocation(line: 4781, column: 23, scope: !3380)
!3382 = !DILocation(line: 4781, column: 34, scope: !3380)
!3383 = !DILocation(line: 4781, column: 26, scope: !3380)
!3384 = !DILocation(line: 4781, column: 41, scope: !3380)
!3385 = !DILocation(line: 4781, column: 7, scope: !721)
!3386 = !DILocation(line: 4782, column: 15, scope: !3380)
!3387 = !DILocation(line: 4782, column: 5, scope: !3380)
!3388 = !DILocation(line: 4784, column: 3, scope: !721)
!3389 = !DILocation(line: 4785, column: 1, scope: !721)
!3390 = distinct !DISubprogram(name: "initialize_exit_failure", scope: !311, file: !311, line: 99, type: !86, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3391 = !DILocalVariable(name: "status", arg: 1, scope: !3390, file: !311, line: 99, type: !7)
!3392 = !DILocation(line: 99, column: 30, scope: !3390)
!3393 = !DILocation(line: 101, column: 7, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !311, line: 101, column: 7)
!3395 = !DILocation(line: 101, column: 14, scope: !3394)
!3396 = !DILocation(line: 101, column: 7, scope: !3390)
!3397 = !DILocation(line: 102, column: 20, scope: !3394)
!3398 = !DILocation(line: 102, column: 18, scope: !3394)
!3399 = !DILocation(line: 102, column: 5, scope: !3394)
!3400 = !DILocation(line: 103, column: 1, scope: !3390)
!3401 = distinct !DISubprogram(name: "to_uchar", scope: !311, file: !311, line: 156, type: !319, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3402 = !DILocalVariable(name: "ch", arg: 1, scope: !3401, file: !311, line: 156, type: !10)
!3403 = !DILocation(line: 156, column: 44, scope: !3401)
!3404 = !DILocation(line: 156, column: 57, scope: !3401)
!3405 = !DILocation(line: 156, column: 50, scope: !3401)
!3406 = distinct !DISubprogram(name: "inittables", scope: !66, file: !66, line: 1292, type: !168, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3407 = !DILocalVariable(name: "i", scope: !3406, file: !66, line: 1294, type: !55)
!3408 = !DILocation(line: 1294, column: 10, scope: !3406)
!3409 = !DILocation(line: 1296, column: 10, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3406, file: !66, line: 1296, column: 3)
!3411 = !DILocation(line: 1296, column: 8, scope: !3410)
!3412 = !DILocation(line: 1296, column: 15, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3410, file: !66, line: 1296, column: 3)
!3414 = !DILocation(line: 1296, column: 17, scope: !3413)
!3415 = !DILocation(line: 1296, column: 3, scope: !3410)
!3416 = !DILocation(line: 1298, column: 30, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3413, file: !66, line: 1297, column: 5)
!3418 = !DILocation(line: 1298, column: 19, scope: !3417)
!3419 = !DILocation(line: 1298, column: 14, scope: !3417)
!3420 = !DILocation(line: 1298, column: 7, scope: !3417)
!3421 = !DILocation(line: 1298, column: 17, scope: !3417)
!3422 = !DILocation(line: 1299, column: 26, scope: !3417)
!3423 = !{!3424, !3424, i64 0}
!3424 = !{!"short", !2275, i64 0}
!3425 = !DILocation(line: 1299, column: 24, scope: !3417)
!3426 = !DILocation(line: 1299, column: 19, scope: !3417)
!3427 = !DILocation(line: 1299, column: 7, scope: !3417)
!3428 = !DILocation(line: 1299, column: 22, scope: !3417)
!3429 = !DILocation(line: 1300, column: 28, scope: !3417)
!3430 = !DILocation(line: 1300, column: 40, scope: !3417)
!3431 = !DILocation(line: 1300, column: 56, scope: !3417)
!3432 = !DILocation(line: 1300, column: 45, scope: !3417)
!3433 = !DILocation(line: 1300, column: 43, scope: !3417)
!3434 = !DILocation(line: 0, scope: !3417)
!3435 = !DILocation(line: 1300, column: 21, scope: !3417)
!3436 = !DILocation(line: 1300, column: 7, scope: !3417)
!3437 = !DILocation(line: 1300, column: 24, scope: !3417)
!3438 = !DILocation(line: 1301, column: 34, scope: !3417)
!3439 = !DILocation(line: 1301, column: 25, scope: !3417)
!3440 = !DILocation(line: 1301, column: 20, scope: !3417)
!3441 = !DILocation(line: 1301, column: 7, scope: !3417)
!3442 = !DILocation(line: 1301, column: 23, scope: !3417)
!3443 = !DILocation(line: 1302, column: 5, scope: !3417)
!3444 = !DILocation(line: 1296, column: 30, scope: !3413)
!3445 = !DILocation(line: 1296, column: 3, scope: !3413)
!3446 = distinct !{!3446, !3415, !3447}
!3447 = !DILocation(line: 1302, column: 5, scope: !3410)
!3448 = !DILocation(line: 1306, column: 7, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3406, file: !66, line: 1306, column: 7)
!3450 = !DILocation(line: 1306, column: 7, scope: !3406)
!3451 = !DILocation(line: 1308, column: 14, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !66, line: 1308, column: 7)
!3453 = distinct !DILexicalBlock(scope: !3449, file: !66, line: 1307, column: 5)
!3454 = !DILocation(line: 1308, column: 12, scope: !3452)
!3455 = !DILocation(line: 1308, column: 19, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3452, file: !66, line: 1308, column: 7)
!3457 = !DILocation(line: 1308, column: 21, scope: !3456)
!3458 = !DILocation(line: 1308, column: 7, scope: !3452)
!3459 = !DILocalVariable(name: "s", scope: !3460, file: !66, line: 1310, type: !88)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !66, line: 1309, column: 9)
!3461 = !DILocation(line: 1310, column: 23, scope: !3460)
!3462 = !DILocalVariable(name: "s_len", scope: !3460, file: !66, line: 1311, type: !55)
!3463 = !DILocation(line: 1311, column: 18, scope: !3460)
!3464 = !DILocalVariable(name: "j", scope: !3460, file: !66, line: 1312, type: !55)
!3465 = !DILocation(line: 1312, column: 18, scope: !3460)
!3466 = !DILocalVariable(name: "k", scope: !3460, file: !66, line: 1312, type: !55)
!3467 = !DILocation(line: 1312, column: 21, scope: !3460)
!3468 = !DILocalVariable(name: "name", scope: !3460, file: !66, line: 1313, type: !9)
!3469 = !DILocation(line: 1313, column: 17, scope: !3460)
!3470 = !DILocation(line: 1315, column: 38, scope: !3460)
!3471 = !DILocation(line: 1315, column: 36, scope: !3460)
!3472 = !DILocation(line: 1315, column: 28, scope: !3460)
!3473 = !DILocation(line: 1315, column: 15, scope: !3460)
!3474 = !DILocation(line: 1315, column: 13, scope: !3460)
!3475 = !DILocation(line: 1316, column: 27, scope: !3460)
!3476 = !DILocation(line: 1316, column: 19, scope: !3460)
!3477 = !DILocation(line: 1316, column: 17, scope: !3460)
!3478 = !DILocation(line: 1317, column: 46, scope: !3460)
!3479 = !DILocation(line: 1317, column: 52, scope: !3460)
!3480 = !DILocation(line: 1317, column: 37, scope: !3460)
!3481 = !DILocation(line: 1317, column: 35, scope: !3460)
!3482 = !DILocation(line: 1317, column: 20, scope: !3460)
!3483 = !DILocation(line: 1317, column: 11, scope: !3460)
!3484 = !DILocation(line: 1317, column: 23, scope: !3460)
!3485 = !DILocation(line: 1317, column: 28, scope: !3460)
!3486 = !{!3487, !2287, i64 0}
!3487 = !{!"month", !2287, i64 0, !2274, i64 8}
!3488 = !DILocation(line: 1318, column: 29, scope: !3460)
!3489 = !DILocation(line: 1318, column: 31, scope: !3460)
!3490 = !DILocation(line: 1318, column: 20, scope: !3460)
!3491 = !DILocation(line: 1318, column: 11, scope: !3460)
!3492 = !DILocation(line: 1318, column: 23, scope: !3460)
!3493 = !DILocation(line: 1318, column: 27, scope: !3460)
!3494 = !{!3487, !2274, i64 8}
!3495 = !DILocation(line: 1320, column: 22, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3460, file: !66, line: 1320, column: 11)
!3497 = !DILocation(line: 1320, column: 18, scope: !3496)
!3498 = !DILocation(line: 1320, column: 16, scope: !3496)
!3499 = !DILocation(line: 1320, column: 27, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !66, line: 1320, column: 11)
!3501 = !DILocation(line: 1320, column: 31, scope: !3500)
!3502 = !DILocation(line: 1320, column: 29, scope: !3500)
!3503 = !DILocation(line: 1320, column: 11, scope: !3496)
!3504 = !DILocation(line: 1321, column: 19, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3500, file: !66, line: 1321, column: 17)
!3506 = !DILocation(line: 1321, column: 17, scope: !3500)
!3507 = !DILocation(line: 1322, column: 50, scope: !3505)
!3508 = !DILocation(line: 1322, column: 52, scope: !3505)
!3509 = !DILocation(line: 1322, column: 40, scope: !3505)
!3510 = !DILocation(line: 1322, column: 27, scope: !3505)
!3511 = !DILocation(line: 1322, column: 15, scope: !3505)
!3512 = !DILocation(line: 1322, column: 21, scope: !3505)
!3513 = !DILocation(line: 1322, column: 25, scope: !3505)
!3514 = !DILocation(line: 1320, column: 39, scope: !3500)
!3515 = !DILocation(line: 1320, column: 11, scope: !3500)
!3516 = distinct !{!3516, !3503, !3517}
!3517 = !DILocation(line: 1322, column: 55, scope: !3496)
!3518 = !DILocation(line: 1323, column: 11, scope: !3460)
!3519 = !DILocation(line: 1323, column: 16, scope: !3460)
!3520 = !DILocation(line: 1323, column: 19, scope: !3460)
!3521 = !DILocation(line: 1324, column: 9, scope: !3460)
!3522 = !DILocation(line: 1308, column: 41, scope: !3456)
!3523 = !DILocation(line: 1308, column: 7, scope: !3456)
!3524 = distinct !{!3524, !3458, !3525}
!3525 = !DILocation(line: 1324, column: 9, scope: !3452)
!3526 = !DILocation(line: 1325, column: 7, scope: !3453)
!3527 = !DILocation(line: 1326, column: 5, scope: !3453)
!3528 = !DILocation(line: 1328, column: 1, scope: !3406)
!3529 = distinct !DISubprogram(name: "sighandler", scope: !66, file: !66, line: 4118, type: !86, scopeLine: 4119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3530 = !DILocalVariable(name: "sig", arg: 1, scope: !3529, file: !66, line: 4118, type: !7)
!3531 = !DILocation(line: 4118, column: 17, scope: !3529)
!3532 = !DILocation(line: 4123, column: 3, scope: !3529)
!3533 = !DILocation(line: 4125, column: 11, scope: !3529)
!3534 = !DILocation(line: 4125, column: 3, scope: !3529)
!3535 = !DILocation(line: 4126, column: 10, scope: !3529)
!3536 = !DILocation(line: 4126, column: 3, scope: !3529)
!3537 = !DILocation(line: 4127, column: 1, scope: !3529)
!3538 = distinct !DISubprogram(name: "exit_cleanup", scope: !66, file: !66, line: 824, type: !168, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3539 = !DILocation(line: 826, column: 7, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !66, line: 826, column: 7)
!3541 = !DILocation(line: 826, column: 7, scope: !3538)
!3542 = !DILocalVariable(name: "cs", scope: !3543, file: !66, line: 830, type: !348)
!3543 = distinct !DILexicalBlock(scope: !3540, file: !66, line: 827, column: 5)
!3544 = !DILocation(line: 830, column: 24, scope: !3543)
!3545 = !DILocation(line: 831, column: 7, scope: !3543)
!3546 = !DILocation(line: 832, column: 7, scope: !3543)
!3547 = !DILocation(line: 833, column: 7, scope: !3543)
!3548 = !DILocation(line: 834, column: 5, scope: !3543)
!3549 = !DILocation(line: 836, column: 3, scope: !3538)
!3550 = !DILocation(line: 837, column: 1, scope: !3538)
!3551 = distinct !DISubprogram(name: "key_init", scope: !66, file: !66, line: 4191, type: !356, scopeLine: 4192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3552 = !DILocalVariable(name: "key", arg: 1, scope: !3551, file: !66, line: 4191, type: !93)
!3553 = !DILocation(line: 4191, column: 28, scope: !3551)
!3554 = !DILocation(line: 4193, column: 11, scope: !3551)
!3555 = !DILocation(line: 4193, column: 3, scope: !3551)
!3556 = !DILocation(line: 4194, column: 3, scope: !3551)
!3557 = !DILocation(line: 4194, column: 8, scope: !3551)
!3558 = !DILocation(line: 4194, column: 14, scope: !3551)
!3559 = !DILocation(line: 4195, column: 10, scope: !3551)
!3560 = !DILocation(line: 4195, column: 3, scope: !3551)
!3561 = distinct !DISubprogram(name: "parse_field_count", scope: !66, file: !66, line: 4087, type: !358, scopeLine: 4088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3562 = !DILocalVariable(name: "string", arg: 1, scope: !3561, file: !66, line: 4087, type: !88)
!3563 = !DILocation(line: 4087, column: 32, scope: !3561)
!3564 = !DILocalVariable(name: "val", arg: 2, scope: !3561, file: !66, line: 4087, type: !360)
!3565 = !DILocation(line: 4087, column: 48, scope: !3561)
!3566 = !DILocalVariable(name: "msgid", arg: 3, scope: !3561, file: !66, line: 4087, type: !88)
!3567 = !DILocation(line: 4087, column: 65, scope: !3561)
!3568 = !DILocalVariable(name: "suffix", scope: !3561, file: !66, line: 4089, type: !9)
!3569 = !DILocation(line: 4089, column: 9, scope: !3561)
!3570 = !DILocalVariable(name: "n", scope: !3561, file: !66, line: 4090, type: !361)
!3571 = !DILocation(line: 4090, column: 13, scope: !3561)
!3572 = !DILocation(line: 4092, column: 23, scope: !3561)
!3573 = !DILocation(line: 4092, column: 11, scope: !3561)
!3574 = !DILocation(line: 4092, column: 3, scope: !3561)
!3575 = !DILocation(line: 4096, column: 14, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3561, file: !66, line: 4093, column: 5)
!3577 = !DILocation(line: 4096, column: 8, scope: !3576)
!3578 = !DILocation(line: 4096, column: 12, scope: !3576)
!3579 = !DILocation(line: 4097, column: 12, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3576, file: !66, line: 4097, column: 11)
!3581 = !DILocation(line: 4097, column: 11, scope: !3580)
!3582 = !DILocation(line: 4097, column: 19, scope: !3580)
!3583 = !DILocation(line: 4097, column: 16, scope: !3580)
!3584 = !DILocation(line: 4097, column: 11, scope: !3576)
!3585 = !DILocation(line: 4098, column: 9, scope: !3580)
!3586 = !DILocation(line: 4099, column: 7, scope: !3576)
!3587 = !DILocation(line: 4102, column: 8, scope: !3576)
!3588 = !DILocation(line: 4102, column: 12, scope: !3576)
!3589 = !DILocation(line: 4103, column: 7, scope: !3576)
!3590 = !DILocation(line: 4106, column: 11, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3576, file: !66, line: 4106, column: 11)
!3592 = !DILocation(line: 4106, column: 11, scope: !3576)
!3593 = !DILocation(line: 4107, column: 9, scope: !3591)
!3594 = !DILocation(line: 4109, column: 7, scope: !3576)
!3595 = !DILocation(line: 4112, column: 10, scope: !3561)
!3596 = !DILocation(line: 4112, column: 3, scope: !3561)
!3597 = !DILocation(line: 4113, column: 1, scope: !3561)
!3598 = distinct !DISubprogram(name: "set_ordering", scope: !66, file: !66, line: 4135, type: !364, scopeLine: 4136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3599 = !DILocalVariable(name: "s", arg: 1, scope: !3598, file: !66, line: 4135, type: !88)
!3600 = !DILocation(line: 4135, column: 27, scope: !3598)
!3601 = !DILocalVariable(name: "key", arg: 2, scope: !3598, file: !66, line: 4135, type: !93)
!3602 = !DILocation(line: 4135, column: 47, scope: !3598)
!3603 = !DILocalVariable(name: "blanktype", arg: 3, scope: !3598, file: !66, line: 4135, type: !68)
!3604 = !DILocation(line: 4135, column: 67, scope: !3598)
!3605 = !DILocation(line: 4137, column: 3, scope: !3598)
!3606 = !DILocation(line: 4137, column: 11, scope: !3598)
!3607 = !DILocation(line: 4137, column: 10, scope: !3598)
!3608 = !DILocation(line: 4139, column: 16, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3598, file: !66, line: 4138, column: 5)
!3610 = !DILocation(line: 4139, column: 15, scope: !3609)
!3611 = !DILocation(line: 4139, column: 7, scope: !3609)
!3612 = !DILocation(line: 4142, column: 15, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !66, line: 4142, column: 15)
!3614 = distinct !DILexicalBlock(scope: !3609, file: !66, line: 4140, column: 9)
!3615 = !DILocation(line: 4142, column: 25, scope: !3613)
!3616 = !DILocation(line: 4142, column: 37, scope: !3613)
!3617 = !DILocation(line: 4142, column: 40, scope: !3613)
!3618 = !DILocation(line: 4142, column: 50, scope: !3613)
!3619 = !DILocation(line: 4142, column: 15, scope: !3614)
!3620 = !DILocation(line: 4143, column: 13, scope: !3613)
!3621 = !DILocation(line: 4143, column: 18, scope: !3613)
!3622 = !DILocation(line: 4143, column: 30, scope: !3613)
!3623 = !DILocation(line: 4144, column: 15, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3614, file: !66, line: 4144, column: 15)
!3625 = !DILocation(line: 4144, column: 25, scope: !3624)
!3626 = !DILocation(line: 4144, column: 35, scope: !3624)
!3627 = !DILocation(line: 4144, column: 38, scope: !3624)
!3628 = !DILocation(line: 4144, column: 48, scope: !3624)
!3629 = !DILocation(line: 4144, column: 15, scope: !3614)
!3630 = !DILocation(line: 4145, column: 13, scope: !3624)
!3631 = !DILocation(line: 4145, column: 18, scope: !3624)
!3632 = !DILocation(line: 4145, column: 30, scope: !3624)
!3633 = !DILocation(line: 4146, column: 11, scope: !3614)
!3634 = !DILocation(line: 4148, column: 11, scope: !3614)
!3635 = !DILocation(line: 4148, column: 16, scope: !3614)
!3636 = !DILocation(line: 4148, column: 23, scope: !3614)
!3637 = !DILocation(line: 4149, column: 11, scope: !3614)
!3638 = !DILocation(line: 4151, column: 11, scope: !3614)
!3639 = !DILocation(line: 4151, column: 16, scope: !3614)
!3640 = !DILocation(line: 4151, column: 26, scope: !3614)
!3641 = !DILocation(line: 4152, column: 11, scope: !3614)
!3642 = !DILocation(line: 4154, column: 11, scope: !3614)
!3643 = !DILocation(line: 4154, column: 16, scope: !3614)
!3644 = !DILocation(line: 4154, column: 32, scope: !3614)
!3645 = !DILocation(line: 4155, column: 11, scope: !3614)
!3646 = !DILocation(line: 4157, column: 11, scope: !3614)
!3647 = !DILocation(line: 4157, column: 16, scope: !3614)
!3648 = !DILocation(line: 4157, column: 30, scope: !3614)
!3649 = !DILocation(line: 4158, column: 11, scope: !3614)
!3650 = !DILocation(line: 4162, column: 17, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3614, file: !66, line: 4162, column: 15)
!3652 = !DILocation(line: 4162, column: 22, scope: !3651)
!3653 = !DILocation(line: 4162, column: 15, scope: !3614)
!3654 = !DILocation(line: 4163, column: 13, scope: !3651)
!3655 = !DILocation(line: 4163, column: 18, scope: !3651)
!3656 = !DILocation(line: 4163, column: 25, scope: !3651)
!3657 = !DILocation(line: 4164, column: 11, scope: !3614)
!3658 = !DILocation(line: 4166, column: 11, scope: !3614)
!3659 = !DILocation(line: 4166, column: 16, scope: !3614)
!3660 = !DILocation(line: 4166, column: 22, scope: !3614)
!3661 = !DILocation(line: 4167, column: 11, scope: !3614)
!3662 = !DILocation(line: 4169, column: 11, scope: !3614)
!3663 = !DILocation(line: 4169, column: 16, scope: !3614)
!3664 = !DILocation(line: 4169, column: 24, scope: !3614)
!3665 = !DILocation(line: 4170, column: 11, scope: !3614)
!3666 = !DILocation(line: 4172, column: 11, scope: !3614)
!3667 = !DILocation(line: 4172, column: 16, scope: !3614)
!3668 = !DILocation(line: 4172, column: 23, scope: !3614)
!3669 = !DILocation(line: 4173, column: 11, scope: !3614)
!3670 = !DILocation(line: 4175, column: 11, scope: !3614)
!3671 = !DILocation(line: 4175, column: 16, scope: !3614)
!3672 = !DILocation(line: 4175, column: 24, scope: !3614)
!3673 = !DILocation(line: 4176, column: 11, scope: !3614)
!3674 = !DILocation(line: 4178, column: 11, scope: !3614)
!3675 = !DILocation(line: 4178, column: 16, scope: !3614)
!3676 = !DILocation(line: 4178, column: 24, scope: !3614)
!3677 = !DILocation(line: 4179, column: 11, scope: !3614)
!3678 = !DILocation(line: 4181, column: 27, scope: !3614)
!3679 = !DILocation(line: 4181, column: 11, scope: !3614)
!3680 = !DILocation(line: 4183, column: 7, scope: !3609)
!3681 = distinct !{!3681, !3605, !3682}
!3682 = !DILocation(line: 4184, column: 5, scope: !3598)
!3683 = !DILocation(line: 4185, column: 19, scope: !3598)
!3684 = !DILocation(line: 4185, column: 3, scope: !3598)
!3685 = !DILocation(line: 4186, column: 1, scope: !3598)
!3686 = distinct !DISubprogram(name: "badfieldspec", scope: !66, file: !66, line: 4045, type: !366, scopeLine: 4046, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3687 = !DILocalVariable(name: "spec", arg: 1, scope: !3686, file: !66, line: 4045, type: !88)
!3688 = !DILocation(line: 4045, column: 27, scope: !3686)
!3689 = !DILocalVariable(name: "msgid", arg: 2, scope: !3686, file: !66, line: 4045, type: !88)
!3690 = !DILocation(line: 4045, column: 45, scope: !3686)
!3691 = !DILocation(line: 4047, column: 3, scope: !3686)
!3692 = distinct !DISubprogram(name: "insertkey", scope: !66, file: !66, line: 4029, type: !368, scopeLine: 4030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3693 = !DILocalVariable(name: "key_arg", arg: 1, scope: !3692, file: !66, line: 4029, type: !93)
!3694 = !DILocation(line: 4029, column: 29, scope: !3692)
!3695 = !DILocalVariable(name: "p", scope: !3692, file: !66, line: 4031, type: !370)
!3696 = !DILocation(line: 4031, column: 21, scope: !3692)
!3697 = !DILocalVariable(name: "key", scope: !3692, file: !66, line: 4032, type: !93)
!3698 = !DILocation(line: 4032, column: 20, scope: !3692)
!3699 = !DILocation(line: 4032, column: 35, scope: !3692)
!3700 = !DILocation(line: 4032, column: 26, scope: !3692)
!3701 = !DILocation(line: 4034, column: 10, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3692, file: !66, line: 4034, column: 3)
!3703 = !DILocation(line: 4034, column: 8, scope: !3702)
!3704 = !DILocation(line: 4034, column: 23, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3702, file: !66, line: 4034, column: 3)
!3706 = !DILocation(line: 4034, column: 22, scope: !3705)
!3707 = !DILocation(line: 4034, column: 3, scope: !3702)
!3708 = !DILocation(line: 4035, column: 5, scope: !3705)
!3709 = !DILocation(line: 4034, column: 33, scope: !3705)
!3710 = !DILocation(line: 4034, column: 32, scope: !3705)
!3711 = !DILocation(line: 4034, column: 37, scope: !3705)
!3712 = !DILocation(line: 4034, column: 28, scope: !3705)
!3713 = !DILocation(line: 4034, column: 3, scope: !3705)
!3714 = distinct !{!3714, !3707, !3715}
!3715 = !DILocation(line: 4035, column: 5, scope: !3702)
!3716 = !DILocation(line: 4036, column: 8, scope: !3692)
!3717 = !DILocation(line: 4036, column: 4, scope: !3692)
!3718 = !DILocation(line: 4036, column: 6, scope: !3692)
!3719 = !DILocation(line: 4037, column: 3, scope: !3692)
!3720 = !DILocation(line: 4037, column: 8, scope: !3692)
!3721 = !DILocation(line: 4037, column: 13, scope: !3692)
!3722 = !DILocation(line: 4038, column: 1, scope: !3692)
!3723 = distinct !DISubprogram(name: "incompatible_options", scope: !66, file: !66, line: 4055, type: !306, scopeLine: 4056, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3724 = !DILocalVariable(name: "opts", arg: 1, scope: !3723, file: !66, line: 4055, type: !88)
!3725 = !DILocation(line: 4055, column: 35, scope: !3723)
!3726 = !DILocation(line: 4057, column: 3, scope: !3723)
!3727 = distinct !DISubprogram(name: "specify_nmerge", scope: !66, file: !66, line: 1334, type: !371, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !374, line: 139, size: 128, elements: !3729)
!3729 = !{!3730, !3731}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3728, file: !374, line: 142, baseType: !373, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3728, file: !374, line: 144, baseType: !373, size: 64, offset: 64)
!3732 = !DILocalVariable(name: "oi", arg: 1, scope: !3727, file: !66, line: 1334, type: !7)
!3733 = !DILocation(line: 1334, column: 21, scope: !3727)
!3734 = !DILocalVariable(name: "c", arg: 2, scope: !3727, file: !66, line: 1334, type: !10)
!3735 = !DILocation(line: 1334, column: 30, scope: !3727)
!3736 = !DILocalVariable(name: "s", arg: 3, scope: !3727, file: !66, line: 1334, type: !88)
!3737 = !DILocation(line: 1334, column: 45, scope: !3727)
!3738 = !DILocalVariable(name: "n", scope: !3727, file: !66, line: 1336, type: !361)
!3739 = !DILocation(line: 1336, column: 13, scope: !3727)
!3740 = !DILocalVariable(name: "rlimit", scope: !3727, file: !66, line: 1337, type: !3728)
!3741 = !DILocation(line: 1337, column: 17, scope: !3727)
!3742 = !DILocalVariable(name: "e", scope: !3727, file: !66, line: 1338, type: !74)
!3743 = !DILocation(line: 1338, column: 21, scope: !3727)
!3744 = !DILocation(line: 1338, column: 37, scope: !3727)
!3745 = !DILocation(line: 1338, column: 25, scope: !3727)
!3746 = !DILocalVariable(name: "max_nmerge", scope: !3727, file: !66, line: 1343, type: !69)
!3747 = !DILocation(line: 1343, column: 16, scope: !3727)
!3748 = !DILocation(line: 1343, column: 31, scope: !3727)
!3749 = !DILocation(line: 1343, column: 66, scope: !3727)
!3750 = !DILocation(line: 1344, column: 40, scope: !3727)
!3751 = !{!3752, !2448, i64 0}
!3752 = !{!"rlimit", !2448, i64 0, !2448, i64 8}
!3753 = !DILocation(line: 1346, column: 30, scope: !3727)
!3754 = !DILocation(line: 1343, column: 29, scope: !3727)
!3755 = !DILocation(line: 1348, column: 7, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3727, file: !66, line: 1348, column: 7)
!3757 = !DILocation(line: 1348, column: 9, scope: !3756)
!3758 = !DILocation(line: 1348, column: 7, scope: !3727)
!3759 = !DILocation(line: 1350, column: 16, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3756, file: !66, line: 1349, column: 5)
!3761 = !DILocation(line: 1350, column: 14, scope: !3760)
!3762 = !DILocation(line: 1351, column: 11, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3760, file: !66, line: 1351, column: 11)
!3764 = !DILocation(line: 1351, column: 21, scope: !3763)
!3765 = !DILocation(line: 1351, column: 18, scope: !3763)
!3766 = !DILocation(line: 1351, column: 11, scope: !3760)
!3767 = !DILocation(line: 1352, column: 11, scope: !3763)
!3768 = !DILocation(line: 1352, column: 9, scope: !3763)
!3769 = !DILocation(line: 1355, column: 15, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !66, line: 1355, column: 15)
!3771 = distinct !DILexicalBlock(scope: !3763, file: !66, line: 1354, column: 9)
!3772 = !DILocation(line: 1355, column: 22, scope: !3770)
!3773 = !DILocation(line: 1355, column: 15, scope: !3771)
!3774 = !DILocation(line: 1357, column: 28, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3770, file: !66, line: 1356, column: 13)
!3776 = !DILocation(line: 1358, column: 35, scope: !3775)
!3777 = !DILocation(line: 1358, column: 22, scope: !3775)
!3778 = !DILocation(line: 1358, column: 39, scope: !3775)
!3779 = !{!3780, !2287, i64 0}
!3780 = !{!"option", !2287, i64 0, !2274, i64 8, !2287, i64 16, !2274, i64 24}
!3781 = !DILocation(line: 1358, column: 52, scope: !3775)
!3782 = !DILocation(line: 1358, column: 45, scope: !3775)
!3783 = !DILocation(line: 1357, column: 15, scope: !3775)
!3784 = !DILocation(line: 1359, column: 15, scope: !3775)
!3785 = !DILocation(line: 1363, column: 20, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3770, file: !66, line: 1363, column: 20)
!3787 = !DILocation(line: 1363, column: 33, scope: !3786)
!3788 = !DILocation(line: 1363, column: 31, scope: !3786)
!3789 = !DILocation(line: 1363, column: 20, scope: !3770)
!3790 = !DILocation(line: 1365, column: 17, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3786, file: !66, line: 1364, column: 13)
!3792 = !DILocation(line: 1366, column: 13, scope: !3791)
!3793 = !DILocation(line: 1368, column: 13, scope: !3786)
!3794 = !DILocation(line: 1370, column: 5, scope: !3760)
!3795 = !DILocation(line: 1372, column: 7, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3727, file: !66, line: 1372, column: 7)
!3797 = !DILocation(line: 1372, column: 9, scope: !3796)
!3798 = !DILocation(line: 1372, column: 7, scope: !3727)
!3799 = !DILocalVariable(name: "max_nmerge_buf", scope: !3800, file: !66, line: 1374, type: !376)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !66, line: 1373, column: 5)
!3801 = !DILocation(line: 1374, column: 12, scope: !3800)
!3802 = !DILocation(line: 1375, column: 20, scope: !3800)
!3803 = !DILocation(line: 1376, column: 27, scope: !3800)
!3804 = !DILocation(line: 1376, column: 14, scope: !3800)
!3805 = !DILocation(line: 1376, column: 31, scope: !3800)
!3806 = !DILocation(line: 1376, column: 44, scope: !3800)
!3807 = !DILocation(line: 1376, column: 37, scope: !3800)
!3808 = !DILocation(line: 1375, column: 7, scope: !3800)
!3809 = !DILocation(line: 1377, column: 7, scope: !3800)
!3810 = !DILocation(line: 1383, column: 20, scope: !3796)
!3811 = !DILocation(line: 1383, column: 23, scope: !3796)
!3812 = !DILocation(line: 1383, column: 27, scope: !3796)
!3813 = !DILocation(line: 1383, column: 44, scope: !3796)
!3814 = !DILocation(line: 1383, column: 5, scope: !3796)
!3815 = distinct !DISubprogram(name: "specify_sort_size", scope: !66, file: !66, line: 1388, type: !371, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3816 = !DILocalVariable(name: "oi", arg: 1, scope: !3815, file: !66, line: 1388, type: !7)
!3817 = !DILocation(line: 1388, column: 24, scope: !3815)
!3818 = !DILocalVariable(name: "c", arg: 2, scope: !3815, file: !66, line: 1388, type: !10)
!3819 = !DILocation(line: 1388, column: 33, scope: !3815)
!3820 = !DILocalVariable(name: "s", arg: 3, scope: !3815, file: !66, line: 1388, type: !88)
!3821 = !DILocation(line: 1388, column: 48, scope: !3815)
!3822 = !DILocalVariable(name: "n", scope: !3815, file: !66, line: 1390, type: !361)
!3823 = !DILocation(line: 1390, column: 13, scope: !3815)
!3824 = !DILocalVariable(name: "suffix", scope: !3815, file: !66, line: 1391, type: !9)
!3825 = !DILocation(line: 1391, column: 9, scope: !3815)
!3826 = !DILocalVariable(name: "e", scope: !3815, file: !66, line: 1392, type: !74)
!3827 = !DILocation(line: 1392, column: 21, scope: !3815)
!3828 = !DILocation(line: 1392, column: 37, scope: !3815)
!3829 = !DILocation(line: 1392, column: 25, scope: !3815)
!3830 = !DILocation(line: 1395, column: 7, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3815, file: !66, line: 1395, column: 7)
!3832 = !DILocation(line: 1395, column: 9, scope: !3831)
!3833 = !DILocation(line: 1395, column: 23, scope: !3831)
!3834 = !DILocation(line: 1395, column: 26, scope: !3831)
!3835 = !DILocation(line: 1395, column: 7, scope: !3815)
!3836 = !DILocation(line: 1397, column: 11, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !66, line: 1397, column: 11)
!3838 = distinct !DILexicalBlock(scope: !3831, file: !66, line: 1396, column: 5)
!3839 = !DILocation(line: 1397, column: 13, scope: !3837)
!3840 = !DILocation(line: 1397, column: 11, scope: !3838)
!3841 = !DILocation(line: 1398, column: 11, scope: !3837)
!3842 = !DILocation(line: 1398, column: 9, scope: !3837)
!3843 = !DILocation(line: 1400, column: 11, scope: !3837)
!3844 = !DILocation(line: 1401, column: 5, scope: !3838)
!3845 = !DILocation(line: 1404, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3815, file: !66, line: 1404, column: 7)
!3847 = !DILocation(line: 1404, column: 9, scope: !3846)
!3848 = !DILocation(line: 1404, column: 40, scope: !3846)
!3849 = !DILocation(line: 1404, column: 43, scope: !3846)
!3850 = !DILocation(line: 1404, column: 64, scope: !3846)
!3851 = !DILocation(line: 1404, column: 69, scope: !3846)
!3852 = !DILocation(line: 1404, column: 7, scope: !3815)
!3853 = !DILocation(line: 1405, column: 13, scope: !3846)
!3854 = !DILocation(line: 1405, column: 5, scope: !3846)
!3855 = !DILocation(line: 1408, column: 11, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3846, file: !66, line: 1406, column: 7)
!3857 = !DILocation(line: 1409, column: 9, scope: !3856)
!3858 = !DILocalVariable(name: "mem", scope: !3859, file: !66, line: 1413, type: !377)
!3859 = distinct !DILexicalBlock(scope: !3856, file: !66, line: 1412, column: 9)
!3860 = !DILocation(line: 1413, column: 18, scope: !3859)
!3861 = !DILocation(line: 1413, column: 24, scope: !3859)
!3862 = !DILocation(line: 1413, column: 43, scope: !3859)
!3863 = !DILocation(line: 1413, column: 41, scope: !3859)
!3864 = !DILocation(line: 1413, column: 45, scope: !3859)
!3865 = !{!3866, !3866, i64 0}
!3866 = !{!"double", !2275, i64 0}
!3867 = !DILocation(line: 1416, column: 15, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3859, file: !66, line: 1416, column: 15)
!3869 = !DILocation(line: 1416, column: 19, scope: !3868)
!3870 = !DILocation(line: 1416, column: 15, scope: !3859)
!3871 = !DILocation(line: 1418, column: 19, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3868, file: !66, line: 1417, column: 13)
!3873 = !DILocation(line: 1418, column: 17, scope: !3872)
!3874 = !DILocation(line: 1419, column: 17, scope: !3872)
!3875 = !DILocation(line: 1420, column: 13, scope: !3872)
!3876 = !DILocation(line: 1422, column: 15, scope: !3868)
!3877 = !DILocation(line: 1424, column: 9, scope: !3856)
!3878 = !DILocation(line: 1425, column: 7, scope: !3856)
!3879 = !DILocation(line: 1427, column: 7, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3815, file: !66, line: 1427, column: 7)
!3881 = !DILocation(line: 1427, column: 9, scope: !3880)
!3882 = !DILocation(line: 1427, column: 7, scope: !3815)
!3883 = !DILocation(line: 1431, column: 11, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !66, line: 1431, column: 11)
!3885 = distinct !DILexicalBlock(scope: !3880, file: !66, line: 1428, column: 5)
!3886 = !DILocation(line: 1431, column: 15, scope: !3884)
!3887 = !DILocation(line: 1431, column: 13, scope: !3884)
!3888 = !DILocation(line: 1431, column: 11, scope: !3885)
!3889 = !DILocation(line: 1432, column: 9, scope: !3884)
!3890 = !DILocation(line: 1434, column: 19, scope: !3885)
!3891 = !DILocation(line: 1434, column: 17, scope: !3885)
!3892 = !DILocation(line: 1435, column: 11, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3885, file: !66, line: 1435, column: 11)
!3894 = !DILocation(line: 1435, column: 24, scope: !3893)
!3895 = !DILocation(line: 1435, column: 21, scope: !3893)
!3896 = !DILocation(line: 1435, column: 11, scope: !3885)
!3897 = !DILocation(line: 1437, column: 23, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !66, line: 1436, column: 9)
!3899 = !DILocation(line: 1437, column: 21, scope: !3898)
!3900 = !DILocation(line: 1438, column: 11, scope: !3898)
!3901 = !DILocation(line: 1441, column: 9, scope: !3885)
!3902 = !DILocation(line: 1442, column: 5, scope: !3885)
!3903 = !DILocation(line: 1444, column: 18, scope: !3815)
!3904 = !DILocation(line: 1444, column: 21, scope: !3815)
!3905 = !DILocation(line: 1444, column: 25, scope: !3815)
!3906 = !DILocation(line: 1444, column: 42, scope: !3815)
!3907 = !DILocation(line: 1444, column: 3, scope: !3815)
!3908 = !DILocation(line: 1445, column: 1, scope: !3815)
!3909 = distinct !DISubprogram(name: "add_temp_dir", scope: !66, file: !66, line: 1236, type: !306, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3910 = !DILocalVariable(name: "dir", arg: 1, scope: !3909, file: !66, line: 1236, type: !88)
!3911 = !DILocation(line: 1236, column: 27, scope: !3909)
!3912 = !DILocation(line: 1238, column: 7, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3909, file: !66, line: 1238, column: 7)
!3914 = !DILocation(line: 1238, column: 25, scope: !3913)
!3915 = !DILocation(line: 1238, column: 22, scope: !3913)
!3916 = !DILocation(line: 1238, column: 7, scope: !3909)
!3917 = !DILocation(line: 1239, column: 17, scope: !3913)
!3918 = !DILocation(line: 1239, column: 15, scope: !3913)
!3919 = !DILocation(line: 1239, column: 5, scope: !3913)
!3920 = !DILocation(line: 1241, column: 33, scope: !3909)
!3921 = !DILocation(line: 1241, column: 3, scope: !3909)
!3922 = !DILocation(line: 1241, column: 27, scope: !3909)
!3923 = !DILocation(line: 1241, column: 31, scope: !3909)
!3924 = !DILocation(line: 1242, column: 1, scope: !3909)
!3925 = distinct !DISubprogram(name: "specify_nthreads", scope: !66, file: !66, line: 1449, type: !379, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3926 = !DILocalVariable(name: "oi", arg: 1, scope: !3925, file: !66, line: 1449, type: !7)
!3927 = !DILocation(line: 1449, column: 23, scope: !3925)
!3928 = !DILocalVariable(name: "c", arg: 2, scope: !3925, file: !66, line: 1449, type: !10)
!3929 = !DILocation(line: 1449, column: 32, scope: !3925)
!3930 = !DILocalVariable(name: "s", arg: 3, scope: !3925, file: !66, line: 1449, type: !88)
!3931 = !DILocation(line: 1449, column: 47, scope: !3925)
!3932 = !DILocalVariable(name: "nthreads", scope: !3925, file: !66, line: 1451, type: !57)
!3933 = !DILocation(line: 1451, column: 21, scope: !3925)
!3934 = !DILocalVariable(name: "e", scope: !3925, file: !66, line: 1452, type: !74)
!3935 = !DILocation(line: 1452, column: 21, scope: !3925)
!3936 = !DILocation(line: 1452, column: 35, scope: !3925)
!3937 = !DILocation(line: 1452, column: 25, scope: !3925)
!3938 = !DILocation(line: 1453, column: 7, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3925, file: !66, line: 1453, column: 7)
!3940 = !DILocation(line: 1453, column: 9, scope: !3939)
!3941 = !DILocation(line: 1453, column: 7, scope: !3925)
!3942 = !DILocation(line: 1454, column: 5, scope: !3939)
!3943 = !DILocation(line: 1455, column: 7, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3925, file: !66, line: 1455, column: 7)
!3945 = !DILocation(line: 1455, column: 9, scope: !3944)
!3946 = !DILocation(line: 1455, column: 7, scope: !3925)
!3947 = !DILocation(line: 1456, column: 20, scope: !3944)
!3948 = !DILocation(line: 1456, column: 23, scope: !3944)
!3949 = !DILocation(line: 1456, column: 27, scope: !3944)
!3950 = !DILocation(line: 1456, column: 44, scope: !3944)
!3951 = !DILocation(line: 1456, column: 5, scope: !3944)
!3952 = !DILocation(line: 1457, column: 18, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3925, file: !66, line: 1457, column: 7)
!3954 = !DILocation(line: 1457, column: 16, scope: !3953)
!3955 = !DILocation(line: 1457, column: 7, scope: !3925)
!3956 = !DILocation(line: 1458, column: 14, scope: !3953)
!3957 = !DILocation(line: 1458, column: 5, scope: !3953)
!3958 = !DILocation(line: 1459, column: 7, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3925, file: !66, line: 1459, column: 7)
!3960 = !DILocation(line: 1459, column: 16, scope: !3959)
!3961 = !DILocation(line: 1459, column: 7, scope: !3925)
!3962 = !DILocation(line: 1460, column: 5, scope: !3959)
!3963 = !DILocation(line: 1461, column: 10, scope: !3925)
!3964 = !DILocation(line: 1461, column: 3, scope: !3925)
!3965 = !DILocation(line: 1462, column: 1, scope: !3925)
!3966 = distinct !DISubprogram(name: "xfopen", scope: !66, file: !66, line: 991, type: !381, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3967 = !DILocalVariable(name: "file", arg: 1, scope: !3966, file: !66, line: 991, type: !88)
!3968 = !DILocation(line: 991, column: 21, scope: !3966)
!3969 = !DILocalVariable(name: "how", arg: 2, scope: !3966, file: !66, line: 991, type: !88)
!3970 = !DILocation(line: 991, column: 39, scope: !3966)
!3971 = !DILocalVariable(name: "fp", scope: !3966, file: !66, line: 993, type: !0)
!3972 = !DILocation(line: 993, column: 9, scope: !3966)
!3973 = !DILocation(line: 993, column: 27, scope: !3966)
!3974 = !DILocation(line: 993, column: 33, scope: !3966)
!3975 = !DILocation(line: 993, column: 14, scope: !3966)
!3976 = !DILocation(line: 994, column: 8, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3966, file: !66, line: 994, column: 7)
!3978 = !DILocation(line: 994, column: 7, scope: !3966)
!3979 = !DILocation(line: 995, column: 15, scope: !3977)
!3980 = !DILocation(line: 995, column: 33, scope: !3977)
!3981 = !DILocation(line: 995, column: 5, scope: !3977)
!3982 = !DILocation(line: 996, column: 10, scope: !3966)
!3983 = !DILocation(line: 996, column: 3, scope: !3966)
!3984 = distinct !DISubprogram(name: "xfclose", scope: !66, file: !66, line: 1002, type: !419, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!3985 = !DILocalVariable(name: "fp", arg: 1, scope: !3984, file: !66, line: 1002, type: !0)
!3986 = !DILocation(line: 1002, column: 16, scope: !3984)
!3987 = !DILocalVariable(name: "file", arg: 2, scope: !3984, file: !66, line: 1002, type: !88)
!3988 = !DILocation(line: 1002, column: 32, scope: !3984)
!3989 = !DILocation(line: 1004, column: 19, scope: !3984)
!3990 = !DILocation(line: 1004, column: 11, scope: !3984)
!3991 = !DILocation(line: 1004, column: 3, scope: !3984)
!3992 = !DILocation(line: 1008, column: 11, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !66, line: 1008, column: 11)
!3994 = distinct !DILexicalBlock(scope: !3984, file: !66, line: 1005, column: 5)
!3995 = !DILocation(line: 1008, column: 11, scope: !3994)
!3996 = !DILocation(line: 1009, column: 9, scope: !3993)
!3997 = !DILocation(line: 1010, column: 7, scope: !3994)
!3998 = !DILocation(line: 1014, column: 11, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3994, file: !66, line: 1014, column: 11)
!4000 = !DILocation(line: 1014, column: 23, scope: !3999)
!4001 = !DILocation(line: 1014, column: 11, scope: !3994)
!4002 = !DILocation(line: 1015, column: 19, scope: !3999)
!4003 = !DILocation(line: 1015, column: 39, scope: !3999)
!4004 = !DILocation(line: 1015, column: 9, scope: !3999)
!4005 = !DILocation(line: 1016, column: 7, scope: !3994)
!4006 = !DILocation(line: 1019, column: 19, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3994, file: !66, line: 1019, column: 11)
!4008 = !DILocation(line: 1019, column: 11, scope: !4007)
!4009 = !DILocation(line: 1019, column: 23, scope: !4007)
!4010 = !DILocation(line: 1019, column: 11, scope: !3994)
!4011 = !DILocation(line: 1020, column: 19, scope: !4007)
!4012 = !DILocation(line: 1020, column: 38, scope: !4007)
!4013 = !DILocation(line: 1020, column: 9, scope: !4007)
!4014 = !DILocation(line: 1021, column: 7, scope: !3994)
!4015 = !DILocation(line: 1023, column: 1, scope: !3984)
!4016 = distinct !DISubprogram(name: "default_key_compare", scope: !66, file: !66, line: 2380, type: !421, scopeLine: 2381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4017 = !DILocalVariable(name: "key", arg: 1, scope: !4016, file: !66, line: 2380, type: !423)
!4018 = !DILocation(line: 2380, column: 45, scope: !4016)
!4019 = !DILocation(line: 2382, column: 13, scope: !4016)
!4020 = !DILocation(line: 2382, column: 18, scope: !4016)
!4021 = !DILocation(line: 2383, column: 13, scope: !4016)
!4022 = !DILocation(line: 2383, column: 16, scope: !4016)
!4023 = !DILocation(line: 2383, column: 21, scope: !4016)
!4024 = !DILocation(line: 2384, column: 13, scope: !4016)
!4025 = !DILocation(line: 2384, column: 16, scope: !4016)
!4026 = !DILocation(line: 2384, column: 21, scope: !4016)
!4027 = !DILocation(line: 2385, column: 13, scope: !4016)
!4028 = !DILocation(line: 2385, column: 16, scope: !4016)
!4029 = !DILocation(line: 2385, column: 21, scope: !4016)
!4030 = !DILocation(line: 2386, column: 13, scope: !4016)
!4031 = !DILocation(line: 2386, column: 29, scope: !4016)
!4032 = !DILocation(line: 2386, column: 16, scope: !4016)
!4033 = !DILocation(line: 2387, column: 13, scope: !4016)
!4034 = !DILocation(line: 2387, column: 16, scope: !4016)
!4035 = !DILocation(line: 2387, column: 21, scope: !4016)
!4036 = !DILocation(line: 2388, column: 13, scope: !4016)
!4037 = !DILocation(line: 2388, column: 16, scope: !4016)
!4038 = !DILocation(line: 2388, column: 21, scope: !4016)
!4039 = !DILocation(line: 2389, column: 13, scope: !4016)
!4040 = !DILocation(line: 2389, column: 16, scope: !4016)
!4041 = !DILocation(line: 2389, column: 21, scope: !4016)
!4042 = !DILocation(line: 2382, column: 10, scope: !4016)
!4043 = !DILocation(line: 2382, column: 3, scope: !4016)
!4044 = distinct !DISubprogram(name: "check_ordering_compatibility", scope: !66, file: !66, line: 4063, type: !168, scopeLine: 4064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4045 = !DILocalVariable(name: "key", scope: !4044, file: !66, line: 4065, type: !93)
!4046 = !DILocation(line: 4065, column: 20, scope: !4044)
!4047 = !DILocation(line: 4067, column: 14, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !66, line: 4067, column: 3)
!4049 = !DILocation(line: 4067, column: 12, scope: !4048)
!4050 = !DILocation(line: 4067, column: 8, scope: !4048)
!4051 = !DILocation(line: 4067, column: 23, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !66, line: 4067, column: 3)
!4053 = !DILocation(line: 4067, column: 3, scope: !4048)
!4054 = !DILocation(line: 4068, column: 14, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4052, file: !66, line: 4068, column: 9)
!4056 = !DILocation(line: 4068, column: 19, scope: !4055)
!4057 = !DILocation(line: 4068, column: 29, scope: !4055)
!4058 = !DILocation(line: 4068, column: 34, scope: !4055)
!4059 = !DILocation(line: 4068, column: 27, scope: !4055)
!4060 = !DILocation(line: 4068, column: 52, scope: !4055)
!4061 = !DILocation(line: 4068, column: 57, scope: !4055)
!4062 = !DILocation(line: 4068, column: 50, scope: !4055)
!4063 = !DILocation(line: 4069, column: 16, scope: !4055)
!4064 = !DILocation(line: 4069, column: 21, scope: !4055)
!4065 = !DILocation(line: 4069, column: 14, scope: !4055)
!4066 = !DILocation(line: 4069, column: 30, scope: !4055)
!4067 = !DILocation(line: 4069, column: 35, scope: !4055)
!4068 = !DILocation(line: 4069, column: 45, scope: !4055)
!4069 = !DILocation(line: 4069, column: 50, scope: !4055)
!4070 = !DILocation(line: 4069, column: 43, scope: !4055)
!4071 = !DILocation(line: 4069, column: 61, scope: !4055)
!4072 = !DILocation(line: 4069, column: 66, scope: !4055)
!4073 = !DILocation(line: 4069, column: 60, scope: !4055)
!4074 = !DILocation(line: 4069, column: 59, scope: !4055)
!4075 = !DILocation(line: 4069, column: 57, scope: !4055)
!4076 = !DILocation(line: 4069, column: 27, scope: !4055)
!4077 = !DILocation(line: 4068, column: 11, scope: !4055)
!4078 = !DILocation(line: 4068, column: 9, scope: !4052)
!4079 = !DILocalVariable(name: "opts", scope: !4080, file: !66, line: 4072, type: !425)
!4080 = distinct !DILexicalBlock(scope: !4055, file: !66, line: 4070, column: 7)
!4081 = !DILocation(line: 4072, column: 14, scope: !4080)
!4082 = !DILocation(line: 4074, column: 47, scope: !4080)
!4083 = !DILocation(line: 4074, column: 52, scope: !4080)
!4084 = !DILocation(line: 4074, column: 60, scope: !4080)
!4085 = !DILocation(line: 4074, column: 28, scope: !4080)
!4086 = !DILocation(line: 4074, column: 33, scope: !4080)
!4087 = !DILocation(line: 4074, column: 45, scope: !4080)
!4088 = !DILocation(line: 4074, column: 9, scope: !4080)
!4089 = !DILocation(line: 4074, column: 14, scope: !4080)
!4090 = !DILocation(line: 4074, column: 26, scope: !4080)
!4091 = !DILocation(line: 4075, column: 22, scope: !4080)
!4092 = !DILocation(line: 4075, column: 27, scope: !4080)
!4093 = !DILocation(line: 4075, column: 9, scope: !4080)
!4094 = !DILocation(line: 4076, column: 31, scope: !4080)
!4095 = !DILocation(line: 4076, column: 9, scope: !4080)
!4096 = !DILocation(line: 4069, column: 73, scope: !4055)
!4097 = !DILocation(line: 4067, column: 34, scope: !4052)
!4098 = !DILocation(line: 4067, column: 39, scope: !4052)
!4099 = !DILocation(line: 4067, column: 32, scope: !4052)
!4100 = !DILocation(line: 4067, column: 3, scope: !4052)
!4101 = distinct !{!4101, !4053, !4102}
!4102 = !DILocation(line: 4077, column: 7, scope: !4048)
!4103 = !DILocation(line: 4078, column: 1, scope: !4044)
!4104 = distinct !DISubprogram(name: "key_warnings", scope: !66, file: !66, line: 2427, type: !428, scopeLine: 2428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4105 = !DILocalVariable(name: "gkey", arg: 1, scope: !4104, file: !66, line: 2427, type: !423)
!4106 = !DILocation(line: 2427, column: 38, scope: !4104)
!4107 = !DILocalVariable(name: "gkey_only", arg: 2, scope: !4104, file: !66, line: 2427, type: !103)
!4108 = !DILocation(line: 2427, column: 49, scope: !4104)
!4109 = !DILocalVariable(name: "key", scope: !4104, file: !66, line: 2429, type: !423)
!4110 = !DILocation(line: 2429, column: 26, scope: !4104)
!4111 = !DILocalVariable(name: "ugkey", scope: !4104, file: !66, line: 2430, type: !94)
!4112 = !DILocation(line: 2430, column: 19, scope: !4104)
!4113 = !DILocation(line: 2430, column: 28, scope: !4104)
!4114 = !DILocation(line: 2430, column: 27, scope: !4104)
!4115 = !{i64 0, i64 8, !2447, i64 8, i64 8, !2447, i64 16, i64 8, !2447, i64 24, i64 8, !2447, i64 32, i64 8, !2286, i64 40, i64 8, !2286, i64 48, i64 1, !2430, i64 49, i64 1, !2430, i64 50, i64 1, !2430, i64 51, i64 1, !2430, i64 52, i64 1, !2430, i64 53, i64 1, !2430, i64 54, i64 1, !2430, i64 55, i64 1, !2430, i64 56, i64 1, !2430, i64 57, i64 1, !2430, i64 64, i64 8, !2286}
!4116 = !DILocalVariable(name: "keynum", scope: !4104, file: !66, line: 2431, type: !57)
!4117 = !DILocation(line: 2431, column: 17, scope: !4104)
!4118 = !DILocation(line: 2433, column: 14, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4104, file: !66, line: 2433, column: 3)
!4120 = !DILocation(line: 2433, column: 12, scope: !4119)
!4121 = !DILocation(line: 2433, column: 8, scope: !4119)
!4122 = !DILocation(line: 2433, column: 23, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4119, file: !66, line: 2433, column: 3)
!4124 = !DILocation(line: 2433, column: 3, scope: !4119)
!4125 = !DILocation(line: 2435, column: 11, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !66, line: 2435, column: 11)
!4127 = distinct !DILexicalBlock(scope: !4123, file: !66, line: 2434, column: 5)
!4128 = !DILocation(line: 2435, column: 16, scope: !4126)
!4129 = !DILocation(line: 2435, column: 11, scope: !4127)
!4130 = !DILocalVariable(name: "sword", scope: !4131, file: !66, line: 2437, type: !55)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !66, line: 2436, column: 9)
!4132 = !DILocation(line: 2437, column: 18, scope: !4131)
!4133 = !DILocation(line: 2437, column: 26, scope: !4131)
!4134 = !DILocation(line: 2437, column: 31, scope: !4131)
!4135 = !DILocalVariable(name: "eword", scope: !4131, file: !66, line: 2438, type: !55)
!4136 = !DILocation(line: 2438, column: 18, scope: !4131)
!4137 = !DILocation(line: 2438, column: 26, scope: !4131)
!4138 = !DILocation(line: 2438, column: 31, scope: !4131)
!4139 = !DILocalVariable(name: "tmp", scope: !4131, file: !66, line: 2439, type: !430)
!4140 = !DILocation(line: 2439, column: 16, scope: !4131)
!4141 = !DILocalVariable(name: "obuf", scope: !4131, file: !66, line: 2443, type: !433)
!4142 = !DILocation(line: 2443, column: 16, scope: !4131)
!4143 = !DILocalVariable(name: "nbuf", scope: !4131, file: !66, line: 2444, type: !436)
!4144 = !DILocation(line: 2444, column: 16, scope: !4131)
!4145 = !DILocalVariable(name: "po", scope: !4131, file: !66, line: 2445, type: !9)
!4146 = !DILocation(line: 2445, column: 17, scope: !4131)
!4147 = !DILocation(line: 2445, column: 22, scope: !4131)
!4148 = !DILocalVariable(name: "pn", scope: !4131, file: !66, line: 2446, type: !9)
!4149 = !DILocation(line: 2446, column: 17, scope: !4131)
!4150 = !DILocation(line: 2446, column: 22, scope: !4131)
!4151 = !DILocation(line: 2448, column: 15, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4131, file: !66, line: 2448, column: 15)
!4153 = !DILocation(line: 2448, column: 21, scope: !4152)
!4154 = !DILocation(line: 2448, column: 15, scope: !4131)
!4155 = !DILocation(line: 2449, column: 18, scope: !4152)
!4156 = !DILocation(line: 2449, column: 13, scope: !4152)
!4157 = !DILocation(line: 2451, column: 32, scope: !4131)
!4158 = !DILocation(line: 2451, column: 24, scope: !4131)
!4159 = !DILocation(line: 2451, column: 53, scope: !4131)
!4160 = !DILocation(line: 2451, column: 60, scope: !4131)
!4161 = !DILocation(line: 2451, column: 42, scope: !4131)
!4162 = !DILocation(line: 2451, column: 16, scope: !4131)
!4163 = !DILocation(line: 2451, column: 14, scope: !4131)
!4164 = !DILocation(line: 2452, column: 32, scope: !4131)
!4165 = !DILocation(line: 2452, column: 24, scope: !4131)
!4166 = !DILocation(line: 2452, column: 55, scope: !4131)
!4167 = !DILocation(line: 2452, column: 61, scope: !4131)
!4168 = !DILocation(line: 2452, column: 66, scope: !4131)
!4169 = !DILocation(line: 2452, column: 44, scope: !4131)
!4170 = !DILocation(line: 2452, column: 16, scope: !4131)
!4171 = !DILocation(line: 2452, column: 14, scope: !4131)
!4172 = !DILocation(line: 2453, column: 15, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4131, file: !66, line: 2453, column: 15)
!4174 = !DILocation(line: 2453, column: 20, scope: !4173)
!4175 = !DILocation(line: 2453, column: 26, scope: !4173)
!4176 = !DILocation(line: 2453, column: 15, scope: !4131)
!4177 = !DILocation(line: 2455, column: 31, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4173, file: !66, line: 2454, column: 13)
!4179 = !DILocation(line: 2455, column: 23, scope: !4178)
!4180 = !DILocation(line: 2455, column: 53, scope: !4178)
!4181 = !DILocation(line: 2455, column: 59, scope: !4178)
!4182 = !DILocation(line: 2455, column: 64, scope: !4178)
!4183 = !DILocation(line: 2455, column: 42, scope: !4178)
!4184 = !DILocation(line: 2455, column: 15, scope: !4178)
!4185 = !DILocation(line: 2456, column: 31, scope: !4178)
!4186 = !DILocation(line: 2456, column: 23, scope: !4178)
!4187 = !DILocation(line: 2457, column: 34, scope: !4178)
!4188 = !DILocation(line: 2457, column: 40, scope: !4178)
!4189 = !DILocation(line: 2458, column: 37, scope: !4178)
!4190 = !DILocation(line: 2458, column: 42, scope: !4178)
!4191 = !DILocation(line: 2458, column: 48, scope: !4178)
!4192 = !DILocation(line: 2458, column: 36, scope: !4178)
!4193 = !DILocation(line: 2458, column: 34, scope: !4178)
!4194 = !DILocation(line: 2458, column: 62, scope: !4178)
!4195 = !DILocation(line: 2457, column: 23, scope: !4178)
!4196 = !DILocation(line: 2456, column: 15, scope: !4178)
!4197 = !DILocation(line: 2459, column: 13, scope: !4178)
!4198 = !DILocation(line: 2460, column: 24, scope: !4131)
!4199 = !DILocation(line: 2461, column: 30, scope: !4131)
!4200 = !DILocation(line: 2461, column: 18, scope: !4131)
!4201 = !DILocation(line: 2461, column: 49, scope: !4131)
!4202 = !DILocation(line: 2461, column: 37, scope: !4131)
!4203 = !DILocation(line: 2460, column: 11, scope: !4131)
!4204 = !DILocation(line: 2462, column: 9, scope: !4131)
!4205 = !DILocalVariable(name: "zero_width", scope: !4127, file: !66, line: 2465, type: !103)
!4206 = !DILocation(line: 2465, column: 12, scope: !4127)
!4207 = !DILocation(line: 2465, column: 25, scope: !4127)
!4208 = !DILocation(line: 2465, column: 30, scope: !4127)
!4209 = !DILocation(line: 2465, column: 36, scope: !4127)
!4210 = !DILocation(line: 2465, column: 48, scope: !4127)
!4211 = !DILocation(line: 2465, column: 51, scope: !4127)
!4212 = !DILocation(line: 2465, column: 56, scope: !4127)
!4213 = !DILocation(line: 2465, column: 64, scope: !4127)
!4214 = !DILocation(line: 2465, column: 69, scope: !4127)
!4215 = !DILocation(line: 2465, column: 62, scope: !4127)
!4216 = !DILocation(line: 0, scope: !4127)
!4217 = !DILocation(line: 2466, column: 11, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4127, file: !66, line: 2466, column: 11)
!4219 = !DILocation(line: 2466, column: 11, scope: !4127)
!4220 = !DILocation(line: 2467, column: 22, scope: !4218)
!4221 = !DILocation(line: 2467, column: 71, scope: !4218)
!4222 = !DILocation(line: 2467, column: 9, scope: !4218)
!4223 = !DILocalVariable(name: "implicit_skip", scope: !4127, file: !66, line: 2470, type: !103)
!4224 = !DILocation(line: 2470, column: 12, scope: !4127)
!4225 = !DILocation(line: 2470, column: 41, scope: !4127)
!4226 = !DILocation(line: 2470, column: 28, scope: !4127)
!4227 = !DILocation(line: 2470, column: 46, scope: !4127)
!4228 = !DILocation(line: 2470, column: 49, scope: !4127)
!4229 = !DILocation(line: 2470, column: 54, scope: !4127)
!4230 = !DILocalVariable(name: "line_offset", scope: !4127, file: !66, line: 2471, type: !103)
!4231 = !DILocation(line: 2471, column: 12, scope: !4127)
!4232 = !DILocation(line: 2471, column: 26, scope: !4127)
!4233 = !DILocation(line: 2471, column: 31, scope: !4127)
!4234 = !DILocation(line: 2471, column: 37, scope: !4127)
!4235 = !DILocation(line: 2471, column: 42, scope: !4127)
!4236 = !DILocation(line: 2471, column: 45, scope: !4127)
!4237 = !DILocation(line: 2471, column: 50, scope: !4127)
!4238 = !DILocation(line: 2471, column: 56, scope: !4127)
!4239 = !DILocation(line: 2472, column: 12, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4127, file: !66, line: 2472, column: 11)
!4241 = !DILocation(line: 2472, column: 23, scope: !4240)
!4242 = !DILocation(line: 2472, column: 27, scope: !4240)
!4243 = !DILocation(line: 2472, column: 37, scope: !4240)
!4244 = !DILocation(line: 2472, column: 40, scope: !4240)
!4245 = !DILocation(line: 2472, column: 44, scope: !4240)
!4246 = !DILocation(line: 2472, column: 59, scope: !4240)
!4247 = !DILocation(line: 2472, column: 63, scope: !4240)
!4248 = !DILocation(line: 2473, column: 11, scope: !4240)
!4249 = !DILocation(line: 2473, column: 17, scope: !4240)
!4250 = !DILocation(line: 2473, column: 22, scope: !4240)
!4251 = !DILocation(line: 2473, column: 34, scope: !4240)
!4252 = !DILocation(line: 2473, column: 38, scope: !4240)
!4253 = !DILocation(line: 2474, column: 15, scope: !4240)
!4254 = !DILocation(line: 2474, column: 20, scope: !4240)
!4255 = !DILocation(line: 2474, column: 25, scope: !4240)
!4256 = !DILocation(line: 2474, column: 37, scope: !4240)
!4257 = !DILocation(line: 2474, column: 40, scope: !4240)
!4258 = !DILocation(line: 2474, column: 45, scope: !4240)
!4259 = !DILocation(line: 2475, column: 15, scope: !4240)
!4260 = !DILocation(line: 2475, column: 20, scope: !4240)
!4261 = !DILocation(line: 2475, column: 25, scope: !4240)
!4262 = !DILocation(line: 2475, column: 37, scope: !4240)
!4263 = !DILocation(line: 2475, column: 40, scope: !4240)
!4264 = !DILocation(line: 2475, column: 45, scope: !4240)
!4265 = !DILocation(line: 2472, column: 11, scope: !4127)
!4266 = !DILocation(line: 2476, column: 22, scope: !4240)
!4267 = !DILocation(line: 2477, column: 57, scope: !4240)
!4268 = !DILocation(line: 2476, column: 9, scope: !4240)
!4269 = !DILocation(line: 2482, column: 12, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4127, file: !66, line: 2482, column: 11)
!4271 = !DILocation(line: 2482, column: 22, scope: !4270)
!4272 = !DILocation(line: 2482, column: 38, scope: !4270)
!4273 = !DILocation(line: 2482, column: 25, scope: !4270)
!4274 = !DILocation(line: 2482, column: 11, scope: !4127)
!4275 = !DILocalVariable(name: "sword", scope: !4276, file: !66, line: 2484, type: !55)
!4276 = distinct !DILexicalBlock(scope: !4270, file: !66, line: 2483, column: 9)
!4277 = !DILocation(line: 2484, column: 18, scope: !4276)
!4278 = !DILocation(line: 2484, column: 26, scope: !4276)
!4279 = !DILocation(line: 2484, column: 31, scope: !4276)
!4280 = !DILocation(line: 2484, column: 37, scope: !4276)
!4281 = !DILocalVariable(name: "eword", scope: !4276, file: !66, line: 2485, type: !55)
!4282 = !DILocation(line: 2485, column: 18, scope: !4276)
!4283 = !DILocation(line: 2485, column: 26, scope: !4276)
!4284 = !DILocation(line: 2485, column: 31, scope: !4276)
!4285 = !DILocation(line: 2485, column: 37, scope: !4276)
!4286 = !DILocation(line: 2486, column: 16, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4276, file: !66, line: 2486, column: 15)
!4288 = !DILocation(line: 2486, column: 15, scope: !4276)
!4289 = !DILocation(line: 2487, column: 18, scope: !4287)
!4290 = !DILocation(line: 2487, column: 13, scope: !4287)
!4291 = !DILocation(line: 2488, column: 16, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4276, file: !66, line: 2488, column: 15)
!4293 = !DILocation(line: 2488, column: 22, scope: !4292)
!4294 = !DILocation(line: 2488, column: 25, scope: !4292)
!4295 = !DILocation(line: 2488, column: 33, scope: !4292)
!4296 = !DILocation(line: 2488, column: 31, scope: !4292)
!4297 = !DILocation(line: 2488, column: 15, scope: !4276)
!4298 = !DILocation(line: 2489, column: 26, scope: !4292)
!4299 = !DILocation(line: 2490, column: 20, scope: !4292)
!4300 = !DILocation(line: 2489, column: 13, scope: !4292)
!4301 = !DILocation(line: 2491, column: 9, scope: !4276)
!4302 = !DILocation(line: 2494, column: 17, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4127, file: !66, line: 2494, column: 11)
!4304 = !DILocation(line: 2494, column: 11, scope: !4303)
!4305 = !DILocation(line: 2494, column: 24, scope: !4303)
!4306 = !DILocation(line: 2494, column: 34, scope: !4303)
!4307 = !DILocation(line: 2494, column: 44, scope: !4303)
!4308 = !DILocation(line: 2494, column: 49, scope: !4303)
!4309 = !DILocation(line: 2494, column: 41, scope: !4303)
!4310 = !DILocation(line: 2494, column: 11, scope: !4127)
!4311 = !DILocation(line: 2495, column: 15, scope: !4303)
!4312 = !DILocation(line: 2495, column: 22, scope: !4303)
!4313 = !DILocation(line: 2495, column: 9, scope: !4303)
!4314 = !DILocation(line: 2496, column: 17, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4127, file: !66, line: 2496, column: 11)
!4316 = !DILocation(line: 2496, column: 11, scope: !4315)
!4317 = !DILocation(line: 2496, column: 27, scope: !4315)
!4318 = !DILocation(line: 2496, column: 37, scope: !4315)
!4319 = !DILocation(line: 2496, column: 50, scope: !4315)
!4320 = !DILocation(line: 2496, column: 55, scope: !4315)
!4321 = !DILocation(line: 2496, column: 47, scope: !4315)
!4322 = !DILocation(line: 2496, column: 11, scope: !4127)
!4323 = !DILocation(line: 2497, column: 15, scope: !4315)
!4324 = !DILocation(line: 2497, column: 25, scope: !4315)
!4325 = !DILocation(line: 2497, column: 9, scope: !4315)
!4326 = !DILocation(line: 2498, column: 29, scope: !4127)
!4327 = !DILocation(line: 2498, column: 34, scope: !4127)
!4328 = !DILocation(line: 2498, column: 28, scope: !4127)
!4329 = !DILocation(line: 2498, column: 13, scope: !4127)
!4330 = !DILocation(line: 2498, column: 25, scope: !4127)
!4331 = !DILocation(line: 2499, column: 29, scope: !4127)
!4332 = !DILocation(line: 2499, column: 34, scope: !4127)
!4333 = !DILocation(line: 2499, column: 28, scope: !4127)
!4334 = !DILocation(line: 2499, column: 13, scope: !4127)
!4335 = !DILocation(line: 2499, column: 25, scope: !4127)
!4336 = !DILocation(line: 2500, column: 23, scope: !4127)
!4337 = !DILocation(line: 2500, column: 28, scope: !4127)
!4338 = !DILocation(line: 2500, column: 22, scope: !4127)
!4339 = !DILocation(line: 2500, column: 13, scope: !4127)
!4340 = !DILocation(line: 2500, column: 19, scope: !4127)
!4341 = !DILocation(line: 2501, column: 25, scope: !4127)
!4342 = !DILocation(line: 2501, column: 30, scope: !4127)
!4343 = !DILocation(line: 2501, column: 24, scope: !4127)
!4344 = !DILocation(line: 2501, column: 13, scope: !4127)
!4345 = !DILocation(line: 2501, column: 21, scope: !4127)
!4346 = !DILocation(line: 2502, column: 33, scope: !4127)
!4347 = !DILocation(line: 2502, column: 38, scope: !4127)
!4348 = !DILocation(line: 2502, column: 32, scope: !4127)
!4349 = !DILocation(line: 2502, column: 13, scope: !4127)
!4350 = !DILocation(line: 2502, column: 29, scope: !4127)
!4351 = !DILocation(line: 2503, column: 31, scope: !4127)
!4352 = !DILocation(line: 2503, column: 36, scope: !4127)
!4353 = !DILocation(line: 2503, column: 30, scope: !4127)
!4354 = !DILocation(line: 2503, column: 13, scope: !4127)
!4355 = !DILocation(line: 2503, column: 27, scope: !4127)
!4356 = !DILocation(line: 2504, column: 24, scope: !4127)
!4357 = !DILocation(line: 2504, column: 29, scope: !4127)
!4358 = !DILocation(line: 2504, column: 23, scope: !4127)
!4359 = !DILocation(line: 2504, column: 13, scope: !4127)
!4360 = !DILocation(line: 2504, column: 20, scope: !4127)
!4361 = !DILocation(line: 2505, column: 25, scope: !4127)
!4362 = !DILocation(line: 2505, column: 30, scope: !4127)
!4363 = !DILocation(line: 2505, column: 24, scope: !4127)
!4364 = !DILocation(line: 2505, column: 13, scope: !4127)
!4365 = !DILocation(line: 2505, column: 21, scope: !4127)
!4366 = !DILocation(line: 2506, column: 25, scope: !4127)
!4367 = !DILocation(line: 2506, column: 30, scope: !4127)
!4368 = !DILocation(line: 2506, column: 24, scope: !4127)
!4369 = !DILocation(line: 2506, column: 13, scope: !4127)
!4370 = !DILocation(line: 2506, column: 21, scope: !4127)
!4371 = !DILocation(line: 2507, column: 5, scope: !4127)
!4372 = !DILocation(line: 2433, column: 34, scope: !4123)
!4373 = !DILocation(line: 2433, column: 39, scope: !4123)
!4374 = !DILocation(line: 2433, column: 32, scope: !4123)
!4375 = !DILocation(line: 2433, column: 51, scope: !4123)
!4376 = !DILocation(line: 2433, column: 3, scope: !4123)
!4377 = distinct !{!4377, !4124, !4378}
!4378 = !DILocation(line: 2507, column: 5, scope: !4119)
!4379 = !DILocation(line: 2511, column: 8, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4104, file: !66, line: 2511, column: 7)
!4381 = !DILocation(line: 2512, column: 7, scope: !4380)
!4382 = !DILocation(line: 2512, column: 17, scope: !4380)
!4383 = !DILocation(line: 2512, column: 25, scope: !4380)
!4384 = !DILocation(line: 2512, column: 29, scope: !4380)
!4385 = !DILocation(line: 2512, column: 36, scope: !4380)
!4386 = !DILocation(line: 2512, column: 39, scope: !4380)
!4387 = !DILocation(line: 2512, column: 47, scope: !4380)
!4388 = !DILocation(line: 2512, column: 50, scope: !4380)
!4389 = !DILocation(line: 2511, column: 7, scope: !4104)
!4390 = !DILocalVariable(name: "ugkey_reverse", scope: !4391, file: !66, line: 2514, type: !103)
!4391 = distinct !DILexicalBlock(scope: !4380, file: !66, line: 2513, column: 5)
!4392 = !DILocation(line: 2514, column: 12, scope: !4391)
!4393 = !DILocation(line: 2514, column: 34, scope: !4391)
!4394 = !DILocation(line: 2515, column: 13, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4391, file: !66, line: 2515, column: 11)
!4396 = !DILocation(line: 2515, column: 20, scope: !4395)
!4397 = !DILocation(line: 2515, column: 23, scope: !4395)
!4398 = !DILocation(line: 2515, column: 11, scope: !4391)
!4399 = !DILocation(line: 2516, column: 15, scope: !4395)
!4400 = !DILocation(line: 2516, column: 23, scope: !4395)
!4401 = !DILocation(line: 2516, column: 9, scope: !4395)
!4402 = !DILocalVariable(name: "opts", scope: !4391, file: !66, line: 2518, type: !425)
!4403 = !DILocation(line: 2518, column: 12, scope: !4391)
!4404 = !DILocation(line: 2519, column: 28, scope: !4391)
!4405 = !DILocation(line: 2519, column: 7, scope: !4391)
!4406 = !DILocation(line: 2523, column: 47, scope: !4391)
!4407 = !DILocation(line: 2523, column: 39, scope: !4391)
!4408 = !DILocation(line: 2523, column: 24, scope: !4391)
!4409 = !DILocation(line: 2521, column: 14, scope: !4391)
!4410 = !DILocation(line: 2523, column: 56, scope: !4391)
!4411 = !DILocation(line: 2520, column: 7, scope: !4391)
!4412 = !DILocation(line: 2524, column: 23, scope: !4391)
!4413 = !DILocation(line: 2524, column: 13, scope: !4391)
!4414 = !DILocation(line: 2524, column: 21, scope: !4391)
!4415 = !DILocation(line: 2525, column: 5, scope: !4391)
!4416 = !DILocation(line: 2526, column: 13, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4104, file: !66, line: 2526, column: 7)
!4418 = !DILocation(line: 2526, column: 21, scope: !4417)
!4419 = !DILocation(line: 2526, column: 26, scope: !4417)
!4420 = !DILocation(line: 2526, column: 33, scope: !4417)
!4421 = !DILocation(line: 2526, column: 36, scope: !4417)
!4422 = !DILocation(line: 2526, column: 44, scope: !4417)
!4423 = !DILocation(line: 2526, column: 47, scope: !4417)
!4424 = !DILocation(line: 2526, column: 7, scope: !4104)
!4425 = !DILocation(line: 2527, column: 18, scope: !4417)
!4426 = !DILocation(line: 2527, column: 5, scope: !4417)
!4427 = !DILocation(line: 2528, column: 1, scope: !4104)
!4428 = distinct !DISubprogram(name: "random_md5_state_init", scope: !66, file: !66, line: 2099, type: !306, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4429 = !DILocalVariable(name: "random_source", arg: 1, scope: !4428, file: !66, line: 2099, type: !88)
!4430 = !DILocation(line: 2099, column: 36, scope: !4428)
!4431 = !DILocalVariable(name: "buf", scope: !4428, file: !66, line: 2101, type: !441)
!4432 = !DILocation(line: 2101, column: 17, scope: !4428)
!4433 = !DILocalVariable(name: "r", scope: !4428, file: !66, line: 2102, type: !442)
!4434 = !DILocation(line: 2102, column: 27, scope: !4428)
!4435 = !DILocation(line: 2102, column: 45, scope: !4428)
!4436 = !DILocation(line: 2102, column: 31, scope: !4428)
!4437 = !DILocation(line: 2103, column: 9, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4428, file: !66, line: 2103, column: 7)
!4439 = !DILocation(line: 2103, column: 7, scope: !4428)
!4440 = !DILocation(line: 2104, column: 15, scope: !4438)
!4441 = !DILocation(line: 2104, column: 33, scope: !4438)
!4442 = !DILocation(line: 2104, column: 5, scope: !4438)
!4443 = !DILocation(line: 2105, column: 13, scope: !4428)
!4444 = !DILocation(line: 2105, column: 16, scope: !4428)
!4445 = !DILocation(line: 2105, column: 3, scope: !4428)
!4446 = !DILocation(line: 2106, column: 22, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4428, file: !66, line: 2106, column: 7)
!4448 = !DILocation(line: 2106, column: 7, scope: !4447)
!4449 = !DILocation(line: 2106, column: 25, scope: !4447)
!4450 = !DILocation(line: 2106, column: 7, scope: !4428)
!4451 = !DILocation(line: 2107, column: 15, scope: !4447)
!4452 = !DILocation(line: 2107, column: 34, scope: !4447)
!4453 = !DILocation(line: 2107, column: 5, scope: !4447)
!4454 = !DILocation(line: 2108, column: 3, scope: !4428)
!4455 = !DILocation(line: 2109, column: 22, scope: !4428)
!4456 = !DILocation(line: 2109, column: 3, scope: !4428)
!4457 = !DILocation(line: 2110, column: 1, scope: !4428)
!4458 = distinct !DISubprogram(name: "check", scope: !66, file: !66, line: 2821, type: !445, scopeLine: 2822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4459 = !DILocalVariable(name: "file_name", arg: 1, scope: !4458, file: !66, line: 2821, type: !88)
!4460 = !DILocation(line: 2821, column: 20, scope: !4458)
!4461 = !DILocalVariable(name: "checkonly", arg: 2, scope: !4458, file: !66, line: 2821, type: !10)
!4462 = !DILocation(line: 2821, column: 36, scope: !4458)
!4463 = !DILocalVariable(name: "fp", scope: !4458, file: !66, line: 2823, type: !0)
!4464 = !DILocation(line: 2823, column: 9, scope: !4458)
!4465 = !DILocation(line: 2823, column: 22, scope: !4458)
!4466 = !DILocation(line: 2823, column: 14, scope: !4458)
!4467 = !DILocalVariable(name: "buf", scope: !4458, file: !66, line: 2824, type: !458)
!4468 = !DILocation(line: 2824, column: 17, scope: !4458)
!4469 = !DILocalVariable(name: "temp", scope: !4458, file: !66, line: 2825, type: !449)
!4470 = !DILocation(line: 2825, column: 15, scope: !4458)
!4471 = !DILocalVariable(name: "alloc", scope: !4458, file: !66, line: 2826, type: !55)
!4472 = !DILocation(line: 2826, column: 10, scope: !4458)
!4473 = !DILocalVariable(name: "line_number", scope: !4458, file: !66, line: 2827, type: !361)
!4474 = !DILocation(line: 2827, column: 13, scope: !4458)
!4475 = !DILocalVariable(name: "key", scope: !4458, file: !66, line: 2828, type: !423)
!4476 = !DILocation(line: 2828, column: 26, scope: !4458)
!4477 = !DILocation(line: 2828, column: 32, scope: !4458)
!4478 = !DILocalVariable(name: "nonunique", scope: !4458, file: !66, line: 2829, type: !103)
!4479 = !DILocation(line: 2829, column: 8, scope: !4458)
!4480 = !DILocation(line: 2829, column: 22, scope: !4458)
!4481 = !DILocation(line: 2829, column: 20, scope: !4458)
!4482 = !DILocalVariable(name: "ordered", scope: !4458, file: !66, line: 2830, type: !103)
!4483 = !DILocation(line: 2830, column: 8, scope: !4458)
!4484 = !DILocation(line: 2833, column: 12, scope: !4458)
!4485 = !DILocation(line: 2832, column: 3, scope: !4458)
!4486 = !DILocation(line: 2834, column: 8, scope: !4458)
!4487 = !DILocation(line: 2834, column: 13, scope: !4458)
!4488 = !{!4489, !2287, i64 0}
!4489 = !{!"line", !2287, i64 0, !2448, i64 8, !2287, i64 16, !2287, i64 24}
!4490 = !DILocation(line: 2836, column: 3, scope: !4458)
!4491 = !DILocation(line: 2836, column: 25, scope: !4458)
!4492 = !DILocation(line: 2836, column: 29, scope: !4458)
!4493 = !DILocation(line: 2836, column: 10, scope: !4458)
!4494 = !DILocalVariable(name: "line", scope: !4495, file: !66, line: 2838, type: !447)
!4495 = distinct !DILexicalBlock(scope: !4458, file: !66, line: 2837, column: 5)
!4496 = !DILocation(line: 2838, column: 26, scope: !4495)
!4497 = !DILocation(line: 2838, column: 33, scope: !4495)
!4498 = !DILocalVariable(name: "linebase", scope: !4495, file: !66, line: 2839, type: !447)
!4499 = !DILocation(line: 2839, column: 26, scope: !4495)
!4500 = !DILocation(line: 2839, column: 37, scope: !4495)
!4501 = !DILocation(line: 2839, column: 48, scope: !4495)
!4502 = !{!4503, !2448, i64 16}
!4503 = !{!"buffer", !2287, i64 0, !2448, i64 8, !2448, i64 16, !2448, i64 24, !2448, i64 32, !2448, i64 40, !2431, i64 48}
!4504 = !DILocation(line: 2839, column: 42, scope: !4495)
!4505 = !DILocation(line: 2843, column: 11, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4495, file: !66, line: 2843, column: 11)
!4507 = !DILocation(line: 2843, column: 17, scope: !4506)
!4508 = !DILocation(line: 2843, column: 20, scope: !4506)
!4509 = !DILocation(line: 2843, column: 49, scope: !4506)
!4510 = !DILocation(line: 2843, column: 54, scope: !4506)
!4511 = !DILocation(line: 2843, column: 33, scope: !4506)
!4512 = !DILocation(line: 2843, column: 30, scope: !4506)
!4513 = !DILocation(line: 2843, column: 11, scope: !4495)
!4514 = !DILocation(line: 2844, column: 9, scope: !4506)
!4515 = !DILabel(scope: !4516, name: "found_disorder", file: !66, line: 2845)
!4516 = distinct !DILexicalBlock(scope: !4506, file: !66, line: 2844, column: 9)
!4517 = !DILocation(line: 2845, column: 9, scope: !4516)
!4518 = !DILocation(line: 2847, column: 17, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !66, line: 2847, column: 17)
!4520 = distinct !DILexicalBlock(scope: !4516, file: !66, line: 2846, column: 11)
!4521 = !DILocation(line: 2847, column: 27, scope: !4519)
!4522 = !DILocation(line: 2847, column: 17, scope: !4520)
!4523 = !DILocalVariable(name: "disorder_line", scope: !4524, file: !66, line: 2849, type: !447)
!4524 = distinct !DILexicalBlock(scope: !4519, file: !66, line: 2848, column: 15)
!4525 = !DILocation(line: 2849, column: 36, scope: !4524)
!4526 = !DILocation(line: 2849, column: 52, scope: !4524)
!4527 = !DILocation(line: 2849, column: 57, scope: !4524)
!4528 = !DILocalVariable(name: "disorder_line_number", scope: !4524, file: !66, line: 2850, type: !361)
!4529 = !DILocation(line: 2850, column: 27, scope: !4524)
!4530 = !DILocation(line: 2851, column: 19, scope: !4524)
!4531 = !DILocation(line: 2851, column: 43, scope: !4524)
!4532 = !DILocation(line: 2851, column: 41, scope: !4524)
!4533 = !DILocation(line: 2851, column: 59, scope: !4524)
!4534 = !DILocation(line: 2851, column: 57, scope: !4524)
!4535 = !DILocalVariable(name: "hr_buf", scope: !4524, file: !66, line: 2852, type: !430)
!4536 = !DILocation(line: 2852, column: 22, scope: !4524)
!4537 = !DILocation(line: 2853, column: 26, scope: !4524)
!4538 = !DILocation(line: 2853, column: 34, scope: !4524)
!4539 = !DILocation(line: 2854, column: 26, scope: !4524)
!4540 = !DILocation(line: 2854, column: 40, scope: !4524)
!4541 = !DILocation(line: 2855, column: 37, scope: !4524)
!4542 = !DILocation(line: 2855, column: 59, scope: !4524)
!4543 = !DILocation(line: 2855, column: 26, scope: !4524)
!4544 = !DILocation(line: 2853, column: 17, scope: !4524)
!4545 = !DILocation(line: 2856, column: 29, scope: !4524)
!4546 = !DILocation(line: 2856, column: 44, scope: !4524)
!4547 = !DILocation(line: 2856, column: 52, scope: !4524)
!4548 = !DILocation(line: 2856, column: 17, scope: !4524)
!4549 = !DILocation(line: 2857, column: 15, scope: !4524)
!4550 = !DILocation(line: 2859, column: 21, scope: !4520)
!4551 = !DILocation(line: 2860, column: 13, scope: !4520)
!4552 = !DILocation(line: 2865, column: 7, scope: !4495)
!4553 = !DILocation(line: 2865, column: 14, scope: !4495)
!4554 = !DILocation(line: 2865, column: 25, scope: !4495)
!4555 = !DILocation(line: 2865, column: 23, scope: !4495)
!4556 = !DILocation(line: 2866, column: 13, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4495, file: !66, line: 2866, column: 13)
!4558 = !DILocation(line: 2866, column: 35, scope: !4557)
!4559 = !DILocation(line: 2866, column: 41, scope: !4557)
!4560 = !DILocation(line: 2866, column: 46, scope: !4557)
!4561 = !DILocation(line: 2866, column: 26, scope: !4557)
!4562 = !DILocation(line: 2866, column: 23, scope: !4557)
!4563 = !DILocation(line: 2866, column: 13, scope: !4495)
!4564 = !DILocation(line: 2867, column: 11, scope: !4557)
!4565 = distinct !{!4565, !4552, !4566}
!4566 = !DILocation(line: 2867, column: 16, scope: !4495)
!4567 = !DILocation(line: 2869, column: 26, scope: !4495)
!4568 = !DILocation(line: 2869, column: 19, scope: !4495)
!4569 = !DILocation(line: 2872, column: 11, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4495, file: !66, line: 2872, column: 11)
!4571 = !DILocation(line: 2872, column: 19, scope: !4570)
!4572 = !DILocation(line: 2872, column: 25, scope: !4570)
!4573 = !{!4489, !2448, i64 8}
!4574 = !DILocation(line: 2872, column: 17, scope: !4570)
!4575 = !DILocation(line: 2872, column: 11, scope: !4495)
!4576 = !DILocation(line: 2874, column: 11, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4570, file: !66, line: 2873, column: 9)
!4578 = !DILocation(line: 2876, column: 21, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4577, file: !66, line: 2875, column: 13)
!4580 = !DILocation(line: 2877, column: 21, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4579, file: !66, line: 2877, column: 19)
!4582 = !DILocation(line: 2877, column: 19, scope: !4579)
!4583 = !DILocation(line: 2879, column: 27, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4581, file: !66, line: 2878, column: 17)
!4585 = !DILocation(line: 2879, column: 33, scope: !4584)
!4586 = !DILocation(line: 2879, column: 25, scope: !4584)
!4587 = !DILocation(line: 2880, column: 19, scope: !4584)
!4588 = !DILocation(line: 2882, column: 13, scope: !4579)
!4589 = !DILocation(line: 2883, column: 18, scope: !4577)
!4590 = !DILocation(line: 2883, column: 26, scope: !4577)
!4591 = !DILocation(line: 2883, column: 32, scope: !4577)
!4592 = !DILocation(line: 2883, column: 24, scope: !4577)
!4593 = distinct !{!4593, !4576, !4594}
!4594 = !DILocation(line: 2883, column: 38, scope: !4577)
!4595 = !DILocation(line: 2885, column: 22, scope: !4577)
!4596 = !DILocation(line: 2885, column: 11, scope: !4577)
!4597 = !DILocation(line: 2886, column: 32, scope: !4577)
!4598 = !DILocation(line: 2886, column: 23, scope: !4577)
!4599 = !DILocation(line: 2886, column: 16, scope: !4577)
!4600 = !DILocation(line: 2886, column: 21, scope: !4577)
!4601 = !DILocation(line: 2887, column: 9, scope: !4577)
!4602 = !DILocation(line: 2888, column: 20, scope: !4495)
!4603 = !DILocation(line: 2888, column: 26, scope: !4495)
!4604 = !DILocation(line: 2888, column: 32, scope: !4495)
!4605 = !DILocation(line: 2888, column: 38, scope: !4495)
!4606 = !DILocation(line: 2888, column: 44, scope: !4495)
!4607 = !DILocation(line: 2888, column: 7, scope: !4495)
!4608 = !DILocation(line: 2889, column: 21, scope: !4495)
!4609 = !DILocation(line: 2889, column: 27, scope: !4495)
!4610 = !DILocation(line: 2889, column: 12, scope: !4495)
!4611 = !DILocation(line: 2889, column: 19, scope: !4495)
!4612 = !DILocation(line: 2890, column: 11, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4495, file: !66, line: 2890, column: 11)
!4614 = !DILocation(line: 2890, column: 11, scope: !4495)
!4615 = !DILocation(line: 2892, column: 30, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4613, file: !66, line: 2891, column: 9)
!4617 = !DILocation(line: 2892, column: 38, scope: !4616)
!4618 = !DILocation(line: 2892, column: 44, scope: !4616)
!4619 = !{!4489, !2287, i64 16}
!4620 = !DILocation(line: 2892, column: 53, scope: !4616)
!4621 = !DILocation(line: 2892, column: 59, scope: !4616)
!4622 = !DILocation(line: 2892, column: 51, scope: !4616)
!4623 = !DILocation(line: 2892, column: 35, scope: !4616)
!4624 = !DILocation(line: 2892, column: 16, scope: !4616)
!4625 = !DILocation(line: 2892, column: 23, scope: !4616)
!4626 = !DILocation(line: 2893, column: 30, scope: !4616)
!4627 = !DILocation(line: 2893, column: 38, scope: !4616)
!4628 = !DILocation(line: 2893, column: 44, scope: !4616)
!4629 = !{!4489, !2287, i64 24}
!4630 = !DILocation(line: 2893, column: 53, scope: !4616)
!4631 = !DILocation(line: 2893, column: 59, scope: !4616)
!4632 = !DILocation(line: 2893, column: 51, scope: !4616)
!4633 = !DILocation(line: 2893, column: 35, scope: !4616)
!4634 = !DILocation(line: 2893, column: 16, scope: !4616)
!4635 = !DILocation(line: 2893, column: 23, scope: !4616)
!4636 = !DILocation(line: 2894, column: 9, scope: !4616)
!4637 = distinct !{!4637, !4490, !4638}
!4638 = !DILocation(line: 2895, column: 5, scope: !4458)
!4639 = !DILocation(line: 2897, column: 12, scope: !4458)
!4640 = !DILocation(line: 2897, column: 16, scope: !4458)
!4641 = !DILocation(line: 2897, column: 3, scope: !4458)
!4642 = !DILocation(line: 2898, column: 13, scope: !4458)
!4643 = !{!4503, !2287, i64 0}
!4644 = !DILocation(line: 2898, column: 3, scope: !4458)
!4645 = !DILocation(line: 2899, column: 14, scope: !4458)
!4646 = !DILocation(line: 2899, column: 3, scope: !4458)
!4647 = !DILocation(line: 2900, column: 10, scope: !4458)
!4648 = !DILocation(line: 2900, column: 3, scope: !4458)
!4649 = distinct !DISubprogram(name: "check_inputs", scope: !66, file: !66, line: 3760, type: !526, scopeLine: 3761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4650 = !DILocalVariable(name: "files", arg: 1, scope: !4649, file: !66, line: 3760, type: !528)
!4651 = !DILocation(line: 3760, column: 28, scope: !4649)
!4652 = !DILocalVariable(name: "nfiles", arg: 2, scope: !4649, file: !66, line: 3760, type: !55)
!4653 = !DILocation(line: 3760, column: 42, scope: !4649)
!4654 = !DILocalVariable(name: "i", scope: !4655, file: !66, line: 3762, type: !55)
!4655 = distinct !DILexicalBlock(scope: !4649, file: !66, line: 3762, column: 3)
!4656 = !DILocation(line: 3762, column: 15, scope: !4655)
!4657 = !DILocation(line: 3762, column: 8, scope: !4655)
!4658 = !DILocation(line: 3762, column: 22, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !66, line: 3762, column: 3)
!4660 = !DILocation(line: 3762, column: 26, scope: !4659)
!4661 = !DILocation(line: 3762, column: 24, scope: !4659)
!4662 = !DILocation(line: 3762, column: 3, scope: !4655)
!4663 = !DILocation(line: 3764, column: 11, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !66, line: 3764, column: 11)
!4665 = distinct !DILexicalBlock(scope: !4659, file: !66, line: 3763, column: 5)
!4666 = !DILocation(line: 3764, column: 11, scope: !4665)
!4667 = !DILocation(line: 3765, column: 9, scope: !4664)
!4668 = !DILocation(line: 3767, column: 23, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4665, file: !66, line: 3767, column: 11)
!4670 = !DILocation(line: 3767, column: 29, scope: !4669)
!4671 = !DILocation(line: 3767, column: 11, scope: !4669)
!4672 = !DILocation(line: 3767, column: 39, scope: !4669)
!4673 = !DILocation(line: 3767, column: 11, scope: !4665)
!4674 = !DILocation(line: 3768, column: 19, scope: !4669)
!4675 = !DILocation(line: 3768, column: 37, scope: !4669)
!4676 = !DILocation(line: 3768, column: 43, scope: !4669)
!4677 = !DILocation(line: 3768, column: 9, scope: !4669)
!4678 = !DILocation(line: 3769, column: 5, scope: !4665)
!4679 = !DILocation(line: 3762, column: 35, scope: !4659)
!4680 = !DILocation(line: 3762, column: 3, scope: !4659)
!4681 = distinct !{!4681, !4662, !4682}
!4682 = !DILocation(line: 3769, column: 5, scope: !4655)
!4683 = !DILocation(line: 3770, column: 1, scope: !4649)
!4684 = distinct !DISubprogram(name: "check_output", scope: !66, file: !66, line: 3777, type: !306, scopeLine: 3778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4685 = !DILocalVariable(name: "outfile", arg: 1, scope: !4684, file: !66, line: 3777, type: !88)
!4686 = !DILocation(line: 3777, column: 27, scope: !4684)
!4687 = !DILocation(line: 3779, column: 7, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !66, line: 3779, column: 7)
!4689 = !DILocation(line: 3779, column: 7, scope: !4684)
!4690 = !DILocalVariable(name: "oflags", scope: !4691, file: !66, line: 3781, type: !7)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !66, line: 3780, column: 5)
!4692 = !DILocation(line: 3781, column: 11, scope: !4691)
!4693 = !DILocalVariable(name: "outfd", scope: !4691, file: !66, line: 3782, type: !7)
!4694 = !DILocation(line: 3782, column: 11, scope: !4691)
!4695 = !DILocation(line: 3782, column: 25, scope: !4691)
!4696 = !DILocation(line: 3782, column: 34, scope: !4691)
!4697 = !DILocation(line: 3782, column: 19, scope: !4691)
!4698 = !DILocation(line: 3783, column: 11, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4691, file: !66, line: 3783, column: 11)
!4700 = !DILocation(line: 3783, column: 17, scope: !4699)
!4701 = !DILocation(line: 3783, column: 11, scope: !4691)
!4702 = !DILocation(line: 3784, column: 19, scope: !4699)
!4703 = !DILocation(line: 3784, column: 37, scope: !4699)
!4704 = !DILocation(line: 3784, column: 9, scope: !4699)
!4705 = !DILocation(line: 3785, column: 16, scope: !4691)
!4706 = !DILocation(line: 3785, column: 7, scope: !4691)
!4707 = !DILocation(line: 3786, column: 5, scope: !4691)
!4708 = !DILocation(line: 3787, column: 1, scope: !4684)
!4709 = distinct !DISubprogram(name: "merge", scope: !66, file: !66, line: 3795, type: !532, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4710 = !DILocalVariable(name: "files", arg: 1, scope: !4709, file: !66, line: 3795, type: !288)
!4711 = !DILocation(line: 3795, column: 25, scope: !4709)
!4712 = !DILocalVariable(name: "ntemps", arg: 2, scope: !4709, file: !66, line: 3795, type: !55)
!4713 = !DILocation(line: 3795, column: 39, scope: !4709)
!4714 = !DILocalVariable(name: "nfiles", arg: 3, scope: !4709, file: !66, line: 3795, type: !55)
!4715 = !DILocation(line: 3795, column: 54, scope: !4709)
!4716 = !DILocalVariable(name: "output_file", arg: 4, scope: !4709, file: !66, line: 3796, type: !88)
!4717 = !DILocation(line: 3796, column: 20, scope: !4709)
!4718 = !DILocation(line: 3798, column: 3, scope: !4709)
!4719 = !DILocation(line: 3798, column: 10, scope: !4709)
!4720 = !DILocation(line: 3798, column: 19, scope: !4709)
!4721 = !DILocation(line: 3798, column: 17, scope: !4709)
!4722 = !DILocalVariable(name: "in", scope: !4723, file: !66, line: 3801, type: !55)
!4723 = distinct !DILexicalBlock(scope: !4709, file: !66, line: 3799, column: 5)
!4724 = !DILocation(line: 3801, column: 14, scope: !4723)
!4725 = !DILocalVariable(name: "out", scope: !4723, file: !66, line: 3804, type: !55)
!4726 = !DILocation(line: 3804, column: 14, scope: !4723)
!4727 = !DILocalVariable(name: "remainder", scope: !4723, file: !66, line: 3808, type: !55)
!4728 = !DILocation(line: 3808, column: 14, scope: !4723)
!4729 = !DILocalVariable(name: "cheap_slots", scope: !4723, file: !66, line: 3811, type: !55)
!4730 = !DILocation(line: 3811, column: 14, scope: !4723)
!4731 = !DILocation(line: 3816, column: 21, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4723, file: !66, line: 3816, column: 7)
!4733 = !DILocation(line: 3816, column: 16, scope: !4732)
!4734 = !DILocation(line: 3816, column: 12, scope: !4732)
!4735 = !DILocation(line: 3816, column: 26, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4732, file: !66, line: 3816, column: 7)
!4737 = !DILocation(line: 3816, column: 36, scope: !4736)
!4738 = !DILocation(line: 3816, column: 45, scope: !4736)
!4739 = !DILocation(line: 3816, column: 43, scope: !4736)
!4740 = !DILocation(line: 3816, column: 33, scope: !4736)
!4741 = !DILocation(line: 3816, column: 7, scope: !4732)
!4742 = !DILocalVariable(name: "tfp", scope: !4743, file: !66, line: 3818, type: !0)
!4743 = distinct !DILexicalBlock(scope: !4736, file: !66, line: 3817, column: 9)
!4744 = !DILocation(line: 3818, column: 17, scope: !4743)
!4745 = !DILocalVariable(name: "temp", scope: !4743, file: !66, line: 3819, type: !293)
!4746 = !DILocation(line: 3819, column: 28, scope: !4743)
!4747 = !DILocation(line: 3819, column: 35, scope: !4743)
!4748 = !DILocalVariable(name: "num_merged", scope: !4743, file: !66, line: 3820, type: !55)
!4749 = !DILocation(line: 3820, column: 18, scope: !4743)
!4750 = !DILocation(line: 3820, column: 44, scope: !4743)
!4751 = !DILocation(line: 3820, column: 50, scope: !4743)
!4752 = !DILocation(line: 3820, column: 55, scope: !4743)
!4753 = !DILocation(line: 3821, column: 43, scope: !4743)
!4754 = !DILocation(line: 3821, column: 51, scope: !4743)
!4755 = !DILocation(line: 3821, column: 56, scope: !4743)
!4756 = !DILocation(line: 3821, column: 62, scope: !4743)
!4757 = !DILocation(line: 3820, column: 31, scope: !4743)
!4758 = !DILocation(line: 3822, column: 21, scope: !4743)
!4759 = !DILocation(line: 3822, column: 18, scope: !4743)
!4760 = !DILocation(line: 3823, column: 29, scope: !4743)
!4761 = !DILocation(line: 3823, column: 35, scope: !4743)
!4762 = !DILocation(line: 3823, column: 11, scope: !4743)
!4763 = !DILocation(line: 3823, column: 17, scope: !4743)
!4764 = !DILocation(line: 3823, column: 22, scope: !4743)
!4765 = !DILocation(line: 3823, column: 27, scope: !4743)
!4766 = !DILocation(line: 3824, column: 29, scope: !4743)
!4767 = !DILocation(line: 3824, column: 11, scope: !4743)
!4768 = !DILocation(line: 3824, column: 17, scope: !4743)
!4769 = !DILocation(line: 3824, column: 22, scope: !4743)
!4770 = !DILocation(line: 3824, column: 27, scope: !4743)
!4771 = !{!3349, !2287, i64 8}
!4772 = !DILocation(line: 3825, column: 17, scope: !4743)
!4773 = !DILocation(line: 3825, column: 14, scope: !4743)
!4774 = !DILocation(line: 3826, column: 9, scope: !4743)
!4775 = !DILocation(line: 3816, column: 52, scope: !4736)
!4776 = !DILocation(line: 3816, column: 7, scope: !4736)
!4777 = distinct !{!4777, !4741, !4778}
!4778 = !DILocation(line: 3826, column: 9, scope: !4732)
!4779 = !DILocation(line: 3828, column: 19, scope: !4723)
!4780 = !DILocation(line: 3828, column: 28, scope: !4723)
!4781 = !DILocation(line: 3828, column: 26, scope: !4723)
!4782 = !DILocation(line: 3828, column: 17, scope: !4723)
!4783 = !DILocation(line: 3829, column: 21, scope: !4723)
!4784 = !DILocation(line: 3829, column: 30, scope: !4723)
!4785 = !DILocation(line: 3829, column: 36, scope: !4723)
!4786 = !DILocation(line: 3829, column: 34, scope: !4723)
!4787 = !DILocation(line: 3829, column: 28, scope: !4723)
!4788 = !DILocation(line: 3829, column: 19, scope: !4723)
!4789 = !DILocation(line: 3831, column: 11, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4723, file: !66, line: 3831, column: 11)
!4791 = !DILocation(line: 3831, column: 25, scope: !4790)
!4792 = !DILocation(line: 3831, column: 23, scope: !4790)
!4793 = !DILocation(line: 3831, column: 11, scope: !4723)
!4794 = !DILocalVariable(name: "nshortmerge", scope: !4795, file: !66, line: 3836, type: !55)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !66, line: 3832, column: 9)
!4796 = !DILocation(line: 3836, column: 18, scope: !4795)
!4797 = !DILocation(line: 3836, column: 32, scope: !4795)
!4798 = !DILocation(line: 3836, column: 44, scope: !4795)
!4799 = !DILocation(line: 3836, column: 42, scope: !4795)
!4800 = !DILocation(line: 3836, column: 56, scope: !4795)
!4801 = !DILocalVariable(name: "tfp", scope: !4795, file: !66, line: 3837, type: !0)
!4802 = !DILocation(line: 3837, column: 17, scope: !4795)
!4803 = !DILocalVariable(name: "temp", scope: !4795, file: !66, line: 3838, type: !293)
!4804 = !DILocation(line: 3838, column: 28, scope: !4795)
!4805 = !DILocation(line: 3838, column: 35, scope: !4795)
!4806 = !DILocalVariable(name: "num_merged", scope: !4795, file: !66, line: 3839, type: !55)
!4807 = !DILocation(line: 3839, column: 18, scope: !4795)
!4808 = !DILocation(line: 3839, column: 44, scope: !4795)
!4809 = !DILocation(line: 3839, column: 50, scope: !4795)
!4810 = !DILocation(line: 3839, column: 55, scope: !4795)
!4811 = !DILocation(line: 3840, column: 43, scope: !4795)
!4812 = !DILocation(line: 3840, column: 56, scope: !4795)
!4813 = !DILocation(line: 3840, column: 61, scope: !4795)
!4814 = !DILocation(line: 3840, column: 67, scope: !4795)
!4815 = !DILocation(line: 3839, column: 31, scope: !4795)
!4816 = !DILocation(line: 3841, column: 21, scope: !4795)
!4817 = !DILocation(line: 3841, column: 18, scope: !4795)
!4818 = !DILocation(line: 3842, column: 29, scope: !4795)
!4819 = !DILocation(line: 3842, column: 35, scope: !4795)
!4820 = !DILocation(line: 3842, column: 11, scope: !4795)
!4821 = !DILocation(line: 3842, column: 17, scope: !4795)
!4822 = !DILocation(line: 3842, column: 22, scope: !4795)
!4823 = !DILocation(line: 3842, column: 27, scope: !4795)
!4824 = !DILocation(line: 3843, column: 31, scope: !4795)
!4825 = !DILocation(line: 3843, column: 11, scope: !4795)
!4826 = !DILocation(line: 3843, column: 20, scope: !4795)
!4827 = !DILocation(line: 3843, column: 24, scope: !4795)
!4828 = !DILocation(line: 3843, column: 29, scope: !4795)
!4829 = !DILocation(line: 3844, column: 17, scope: !4795)
!4830 = !DILocation(line: 3844, column: 14, scope: !4795)
!4831 = !DILocation(line: 3845, column: 9, scope: !4795)
!4832 = !DILocation(line: 3849, column: 17, scope: !4723)
!4833 = !DILocation(line: 3849, column: 23, scope: !4723)
!4834 = !DILocation(line: 3849, column: 7, scope: !4723)
!4835 = !DILocation(line: 3849, column: 30, scope: !4723)
!4836 = !DILocation(line: 3849, column: 36, scope: !4723)
!4837 = !DILocation(line: 3849, column: 42, scope: !4723)
!4838 = !DILocation(line: 3849, column: 51, scope: !4723)
!4839 = !DILocation(line: 3849, column: 49, scope: !4723)
!4840 = !DILocation(line: 3849, column: 55, scope: !4723)
!4841 = !DILocation(line: 3850, column: 17, scope: !4723)
!4842 = !DILocation(line: 3850, column: 14, scope: !4723)
!4843 = !DILocation(line: 3851, column: 17, scope: !4723)
!4844 = !DILocation(line: 3851, column: 22, scope: !4723)
!4845 = !DILocation(line: 3851, column: 20, scope: !4723)
!4846 = !DILocation(line: 3851, column: 14, scope: !4723)
!4847 = distinct !{!4847, !4718, !4848}
!4848 = !DILocation(line: 3852, column: 5, scope: !4709)
!4849 = !DILocation(line: 3854, column: 25, scope: !4709)
!4850 = !DILocation(line: 3854, column: 32, scope: !4709)
!4851 = !DILocation(line: 3854, column: 40, scope: !4709)
!4852 = !DILocation(line: 3854, column: 48, scope: !4709)
!4853 = !DILocation(line: 3854, column: 3, scope: !4709)
!4854 = !DILocation(line: 3860, column: 3, scope: !4709)
!4855 = !DILocalVariable(name: "fps", scope: !4856, file: !66, line: 3863, type: !534)
!4856 = distinct !DILexicalBlock(scope: !4709, file: !66, line: 3861, column: 5)
!4857 = !DILocation(line: 3863, column: 14, scope: !4856)
!4858 = !DILocalVariable(name: "nopened", scope: !4856, file: !66, line: 3864, type: !55)
!4859 = !DILocation(line: 3864, column: 14, scope: !4856)
!4860 = !DILocation(line: 3864, column: 42, scope: !4856)
!4861 = !DILocation(line: 3864, column: 49, scope: !4856)
!4862 = !DILocation(line: 3864, column: 24, scope: !4856)
!4863 = !DILocation(line: 3866, column: 11, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4856, file: !66, line: 3866, column: 11)
!4865 = !DILocation(line: 3866, column: 22, scope: !4864)
!4866 = !DILocation(line: 3866, column: 19, scope: !4864)
!4867 = !DILocation(line: 3866, column: 11, scope: !4856)
!4868 = !DILocalVariable(name: "ofp", scope: !4869, file: !66, line: 3868, type: !0)
!4869 = distinct !DILexicalBlock(scope: !4864, file: !66, line: 3867, column: 9)
!4870 = !DILocation(line: 3868, column: 17, scope: !4869)
!4871 = !DILocation(line: 3868, column: 36, scope: !4869)
!4872 = !DILocation(line: 3868, column: 23, scope: !4869)
!4873 = !DILocation(line: 3869, column: 15, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4869, file: !66, line: 3869, column: 15)
!4875 = !DILocation(line: 3869, column: 15, scope: !4869)
!4876 = !DILocation(line: 3871, column: 25, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4874, file: !66, line: 3870, column: 13)
!4878 = !DILocation(line: 3871, column: 32, scope: !4877)
!4879 = !DILocation(line: 3871, column: 40, scope: !4877)
!4880 = !DILocation(line: 3871, column: 48, scope: !4877)
!4881 = !DILocation(line: 3871, column: 53, scope: !4877)
!4882 = !DILocation(line: 3871, column: 66, scope: !4877)
!4883 = !DILocation(line: 3871, column: 15, scope: !4877)
!4884 = !DILocation(line: 3872, column: 15, scope: !4877)
!4885 = !DILocation(line: 3874, column: 15, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4869, file: !66, line: 3874, column: 15)
!4887 = !DILocation(line: 3874, column: 21, scope: !4886)
!4888 = !DILocation(line: 3874, column: 31, scope: !4886)
!4889 = !DILocation(line: 3874, column: 34, scope: !4886)
!4890 = !DILocation(line: 3874, column: 42, scope: !4886)
!4891 = !DILocation(line: 3874, column: 15, scope: !4869)
!4892 = !DILocation(line: 3875, column: 23, scope: !4886)
!4893 = !DILocation(line: 3875, column: 41, scope: !4886)
!4894 = !DILocation(line: 3875, column: 13, scope: !4886)
!4895 = !DILocation(line: 3876, column: 9, scope: !4869)
!4896 = !DILocation(line: 3877, column: 16, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4864, file: !66, line: 3877, column: 16)
!4898 = !DILocation(line: 3877, column: 24, scope: !4897)
!4899 = !DILocation(line: 3877, column: 16, scope: !4864)
!4900 = !DILocation(line: 3878, column: 19, scope: !4897)
!4901 = !DILocation(line: 3878, column: 37, scope: !4897)
!4902 = !DILocation(line: 3878, column: 43, scope: !4897)
!4903 = !DILocation(line: 3878, column: 52, scope: !4897)
!4904 = !DILocation(line: 3878, column: 9, scope: !4897)
!4905 = !DILocalVariable(name: "tfp", scope: !4856, file: !66, line: 3885, type: !0)
!4906 = !DILocation(line: 3885, column: 13, scope: !4856)
!4907 = !DILocalVariable(name: "temp", scope: !4856, file: !66, line: 3886, type: !293)
!4908 = !DILocation(line: 3886, column: 24, scope: !4856)
!4909 = !DILocation(line: 3887, column: 7, scope: !4856)
!4910 = !DILocation(line: 3889, column: 18, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4856, file: !66, line: 3888, column: 9)
!4912 = !DILocation(line: 3890, column: 20, scope: !4911)
!4913 = !DILocation(line: 3890, column: 24, scope: !4911)
!4914 = !DILocation(line: 3890, column: 34, scope: !4911)
!4915 = !DILocation(line: 3890, column: 40, scope: !4911)
!4916 = !DILocation(line: 3890, column: 49, scope: !4911)
!4917 = !DILocation(line: 3890, column: 11, scope: !4911)
!4918 = !DILocation(line: 3891, column: 46, scope: !4911)
!4919 = !DILocation(line: 3891, column: 54, scope: !4911)
!4920 = !DILocation(line: 3891, column: 43, scope: !4911)
!4921 = !DILocation(line: 3891, column: 18, scope: !4911)
!4922 = !DILocation(line: 3891, column: 16, scope: !4911)
!4923 = !DILocation(line: 3892, column: 9, scope: !4911)
!4924 = !DILocation(line: 3893, column: 15, scope: !4856)
!4925 = !DILocation(line: 3893, column: 14, scope: !4856)
!4926 = distinct !{!4926, !4909, !4927}
!4927 = !DILocation(line: 3893, column: 19, scope: !4856)
!4928 = !DILocation(line: 3896, column: 18, scope: !4856)
!4929 = !DILocation(line: 3896, column: 28, scope: !4856)
!4930 = !DILocation(line: 3896, column: 51, scope: !4856)
!4931 = !DILocation(line: 3896, column: 60, scope: !4856)
!4932 = !DILocation(line: 3896, column: 65, scope: !4856)
!4933 = !DILocation(line: 3896, column: 71, scope: !4856)
!4934 = !DILocation(line: 3897, column: 17, scope: !4856)
!4935 = !DILocation(line: 3896, column: 7, scope: !4856)
!4936 = !DILocation(line: 3898, column: 17, scope: !4856)
!4937 = !DILocation(line: 3898, column: 14, scope: !4856)
!4938 = !DILocation(line: 3899, column: 23, scope: !4856)
!4939 = !DILocation(line: 3899, column: 29, scope: !4856)
!4940 = !DILocation(line: 3899, column: 7, scope: !4856)
!4941 = !DILocation(line: 3899, column: 16, scope: !4856)
!4942 = !DILocation(line: 3899, column: 21, scope: !4856)
!4943 = !DILocation(line: 3900, column: 23, scope: !4856)
!4944 = !DILocation(line: 3900, column: 7, scope: !4856)
!4945 = !DILocation(line: 3900, column: 16, scope: !4856)
!4946 = !DILocation(line: 3900, column: 21, scope: !4856)
!4947 = !DILocation(line: 3902, column: 17, scope: !4856)
!4948 = !DILocation(line: 3902, column: 7, scope: !4856)
!4949 = !DILocation(line: 3902, column: 28, scope: !4856)
!4950 = !DILocation(line: 3902, column: 34, scope: !4856)
!4951 = !DILocation(line: 3902, column: 45, scope: !4856)
!4952 = !DILocation(line: 3902, column: 54, scope: !4856)
!4953 = !DILocation(line: 3902, column: 52, scope: !4856)
!4954 = !DILocation(line: 3902, column: 63, scope: !4856)
!4955 = !DILocation(line: 3903, column: 13, scope: !4856)
!4956 = !DILocation(line: 3904, column: 17, scope: !4856)
!4957 = !DILocation(line: 3904, column: 25, scope: !4856)
!4958 = !DILocation(line: 3904, column: 14, scope: !4856)
!4959 = distinct !{!4959, !4854, !4960}
!4960 = !DILocation(line: 3905, column: 5, scope: !4709)
!4961 = !DILocation(line: 3906, column: 1, scope: !4709)
!4962 = distinct !DISubprogram(name: "sort", scope: !66, file: !66, line: 3911, type: !574, scopeLine: 3913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!4963 = !DILocalVariable(name: "files", arg: 1, scope: !4962, file: !66, line: 3911, type: !528)
!4964 = !DILocation(line: 3911, column: 20, scope: !4962)
!4965 = !DILocalVariable(name: "nfiles", arg: 2, scope: !4962, file: !66, line: 3911, type: !55)
!4966 = !DILocation(line: 3911, column: 34, scope: !4962)
!4967 = !DILocalVariable(name: "output_file", arg: 3, scope: !4962, file: !66, line: 3911, type: !88)
!4968 = !DILocation(line: 3911, column: 54, scope: !4962)
!4969 = !DILocalVariable(name: "nthreads", arg: 4, scope: !4962, file: !66, line: 3912, type: !55)
!4970 = !DILocation(line: 3912, column: 14, scope: !4962)
!4971 = !DILocalVariable(name: "buf", scope: !4962, file: !66, line: 3914, type: !458)
!4972 = !DILocation(line: 3914, column: 17, scope: !4962)
!4973 = !DILocalVariable(name: "ntemps", scope: !4962, file: !66, line: 3916, type: !55)
!4974 = !DILocation(line: 3916, column: 10, scope: !4962)
!4975 = !DILocalVariable(name: "output_file_created", scope: !4962, file: !66, line: 3917, type: !103)
!4976 = !DILocation(line: 3917, column: 8, scope: !4962)
!4977 = !DILocation(line: 3919, column: 7, scope: !4962)
!4978 = !DILocation(line: 3919, column: 13, scope: !4962)
!4979 = !{!4503, !2448, i64 24}
!4980 = !DILocation(line: 3921, column: 3, scope: !4962)
!4981 = !DILocation(line: 3921, column: 10, scope: !4962)
!4982 = !DILocalVariable(name: "temp_output", scope: !4983, file: !66, line: 3923, type: !88)
!4983 = distinct !DILexicalBlock(scope: !4962, file: !66, line: 3922, column: 5)
!4984 = !DILocation(line: 3923, column: 19, scope: !4983)
!4985 = !DILocalVariable(name: "file", scope: !4983, file: !66, line: 3924, type: !88)
!4986 = !DILocation(line: 3924, column: 19, scope: !4983)
!4987 = !DILocation(line: 3924, column: 27, scope: !4983)
!4988 = !DILocation(line: 3924, column: 26, scope: !4983)
!4989 = !DILocalVariable(name: "fp", scope: !4983, file: !66, line: 3925, type: !0)
!4990 = !DILocation(line: 3925, column: 13, scope: !4983)
!4991 = !DILocation(line: 3925, column: 26, scope: !4983)
!4992 = !DILocation(line: 3925, column: 18, scope: !4983)
!4993 = !DILocalVariable(name: "tfp", scope: !4983, file: !66, line: 3926, type: !0)
!4994 = !DILocation(line: 3926, column: 13, scope: !4983)
!4995 = !DILocalVariable(name: "bytes_per_line", scope: !4983, file: !66, line: 3928, type: !55)
!4996 = !DILocation(line: 3928, column: 14, scope: !4983)
!4997 = !DILocation(line: 3929, column: 11, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4983, file: !66, line: 3929, column: 11)
!4999 = !DILocation(line: 3929, column: 20, scope: !4998)
!5000 = !DILocation(line: 3929, column: 11, scope: !4983)
!5001 = !DILocalVariable(name: "tmp", scope: !5002, file: !66, line: 3932, type: !55)
!5002 = distinct !DILexicalBlock(scope: !4998, file: !66, line: 3930, column: 9)
!5003 = !DILocation(line: 3932, column: 18, scope: !5002)
!5004 = !DILocalVariable(name: "mult", scope: !5002, file: !66, line: 3933, type: !55)
!5005 = !DILocation(line: 3933, column: 18, scope: !5002)
!5006 = !DILocation(line: 3934, column: 11, scope: !5002)
!5007 = !DILocation(line: 3934, column: 18, scope: !5002)
!5008 = !DILocation(line: 3934, column: 24, scope: !5002)
!5009 = !DILocation(line: 3934, column: 22, scope: !5002)
!5010 = !DILocation(line: 3936, column: 19, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5002, file: !66, line: 3935, column: 13)
!5012 = !DILocation(line: 3937, column: 19, scope: !5011)
!5013 = distinct !{!5013, !5006, !5014}
!5014 = !DILocation(line: 3938, column: 13, scope: !5002)
!5015 = !DILocation(line: 3939, column: 29, scope: !5002)
!5016 = !DILocation(line: 3939, column: 34, scope: !5002)
!5017 = !DILocation(line: 3939, column: 26, scope: !5002)
!5018 = !DILocation(line: 3940, column: 9, scope: !5002)
!5019 = !DILocation(line: 3942, column: 24, scope: !4998)
!5020 = !DILocation(line: 3944, column: 17, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4983, file: !66, line: 3944, column: 11)
!5022 = !DILocation(line: 3944, column: 13, scope: !5021)
!5023 = !DILocation(line: 3944, column: 11, scope: !4983)
!5024 = !DILocation(line: 3945, column: 24, scope: !5021)
!5025 = !DILocation(line: 3946, column: 44, scope: !5021)
!5026 = !DILocation(line: 3946, column: 51, scope: !5021)
!5027 = !DILocation(line: 3946, column: 59, scope: !5021)
!5028 = !DILocation(line: 3946, column: 18, scope: !5021)
!5029 = !DILocation(line: 3945, column: 9, scope: !5021)
!5030 = !DILocation(line: 3947, column: 11, scope: !4983)
!5031 = !DILocation(line: 3947, column: 15, scope: !4983)
!5032 = !{!4503, !2431, i64 48}
!5033 = !DILocation(line: 3948, column: 12, scope: !4983)
!5034 = !DILocation(line: 3949, column: 13, scope: !4983)
!5035 = !DILocation(line: 3951, column: 7, scope: !4983)
!5036 = !DILocation(line: 3951, column: 29, scope: !4983)
!5037 = !DILocation(line: 3951, column: 33, scope: !4983)
!5038 = !DILocation(line: 3951, column: 14, scope: !4983)
!5039 = !DILocalVariable(name: "line", scope: !5040, file: !66, line: 3953, type: !469)
!5040 = distinct !DILexicalBlock(scope: !4983, file: !66, line: 3952, column: 9)
!5041 = !DILocation(line: 3953, column: 24, scope: !5040)
!5042 = !DILocation(line: 3955, column: 19, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !66, line: 3955, column: 15)
!5044 = !DILocation(line: 3955, column: 23, scope: !5043)
!5045 = !DILocation(line: 3955, column: 26, scope: !5043)
!5046 = !DILocation(line: 3956, column: 15, scope: !5043)
!5047 = !DILocation(line: 3956, column: 19, scope: !5043)
!5048 = !DILocation(line: 3956, column: 34, scope: !5043)
!5049 = !DILocation(line: 3957, column: 26, scope: !5043)
!5050 = !DILocation(line: 3957, column: 38, scope: !5043)
!5051 = !{!4503, !2448, i64 8}
!5052 = !DILocation(line: 3957, column: 32, scope: !5043)
!5053 = !DILocation(line: 3957, column: 45, scope: !5043)
!5054 = !DILocation(line: 3957, column: 66, scope: !5043)
!5055 = !DILocation(line: 3957, column: 60, scope: !5043)
!5056 = !DILocation(line: 3957, column: 43, scope: !5043)
!5057 = !DILocation(line: 3957, column: 19, scope: !5043)
!5058 = !DILocation(line: 3955, column: 15, scope: !5040)
!5059 = !DILocation(line: 3962, column: 30, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5043, file: !66, line: 3958, column: 13)
!5061 = !DILocation(line: 3962, column: 19, scope: !5060)
!5062 = !DILocation(line: 3962, column: 24, scope: !5060)
!5063 = !{!4503, !2448, i64 32}
!5064 = !DILocation(line: 3963, column: 15, scope: !5060)
!5065 = !DILocation(line: 3966, column: 27, scope: !5040)
!5066 = !DILocation(line: 3967, column: 18, scope: !5040)
!5067 = !DILocation(line: 3967, column: 16, scope: !5040)
!5068 = !DILocation(line: 3968, column: 19, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5040, file: !66, line: 3968, column: 15)
!5070 = !DILocation(line: 3968, column: 23, scope: !5069)
!5071 = !DILocation(line: 3968, column: 27, scope: !5069)
!5072 = !DILocation(line: 3968, column: 34, scope: !5069)
!5073 = !DILocation(line: 3968, column: 38, scope: !5069)
!5074 = !DILocation(line: 3968, column: 45, scope: !5069)
!5075 = !DILocation(line: 3968, column: 53, scope: !5069)
!5076 = !DILocation(line: 3968, column: 49, scope: !5069)
!5077 = !DILocation(line: 3968, column: 15, scope: !5040)
!5078 = !DILocation(line: 3970, column: 24, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5069, file: !66, line: 3969, column: 13)
!5080 = !DILocation(line: 3970, column: 28, scope: !5079)
!5081 = !DILocation(line: 3970, column: 15, scope: !5079)
!5082 = !DILocation(line: 3971, column: 29, scope: !5079)
!5083 = !DILocation(line: 3971, column: 21, scope: !5079)
!5084 = !DILocation(line: 3971, column: 19, scope: !5079)
!5085 = !DILocation(line: 3972, column: 29, scope: !5079)
!5086 = !DILocation(line: 3972, column: 27, scope: !5079)
!5087 = !DILocation(line: 3973, column: 35, scope: !5079)
!5088 = !DILocation(line: 3974, column: 13, scope: !5079)
!5089 = !DILocation(line: 3977, column: 15, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5069, file: !66, line: 3976, column: 13)
!5091 = !DILocation(line: 3978, column: 29, scope: !5090)
!5092 = !DILocation(line: 3978, column: 49, scope: !5090)
!5093 = !DILocation(line: 3978, column: 27, scope: !5090)
!5094 = !DILocation(line: 3980, column: 23, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5040, file: !66, line: 3980, column: 15)
!5096 = !DILocation(line: 3980, column: 17, scope: !5095)
!5097 = !DILocation(line: 3980, column: 15, scope: !5040)
!5098 = !DILocalVariable(name: "queue", scope: !5099, file: !66, line: 3982, type: !631)
!5099 = distinct !DILexicalBlock(scope: !5095, file: !66, line: 3981, column: 13)
!5100 = !DILocation(line: 3982, column: 39, scope: !5099)
!5101 = !DILocation(line: 3983, column: 35, scope: !5099)
!5102 = !DILocation(line: 3983, column: 15, scope: !5099)
!5103 = !DILocalVariable(name: "merge_tree", scope: !5099, file: !66, line: 3984, type: !576)
!5104 = !DILocation(line: 3984, column: 34, scope: !5099)
!5105 = !DILocation(line: 3985, column: 34, scope: !5099)
!5106 = !DILocation(line: 3985, column: 48, scope: !5099)
!5107 = !DILocation(line: 3985, column: 56, scope: !5099)
!5108 = !DILocation(line: 3985, column: 17, scope: !5099)
!5109 = !DILocation(line: 3987, column: 26, scope: !5099)
!5110 = !DILocation(line: 3987, column: 32, scope: !5099)
!5111 = !DILocation(line: 3987, column: 46, scope: !5099)
!5112 = !DILocation(line: 3987, column: 54, scope: !5099)
!5113 = !DILocation(line: 3987, column: 65, scope: !5099)
!5114 = !DILocation(line: 3988, column: 34, scope: !5099)
!5115 = !DILocation(line: 3988, column: 39, scope: !5099)
!5116 = !DILocation(line: 3987, column: 15, scope: !5099)
!5117 = !DILocation(line: 3994, column: 13, scope: !5099)
!5118 = !DILocation(line: 3996, column: 27, scope: !5095)
!5119 = !DILocation(line: 3996, column: 32, scope: !5095)
!5120 = !DILocation(line: 3996, column: 37, scope: !5095)
!5121 = !DILocation(line: 3996, column: 42, scope: !5095)
!5122 = !DILocation(line: 3996, column: 13, scope: !5095)
!5123 = !DILocation(line: 3998, column: 20, scope: !5040)
!5124 = !DILocation(line: 3998, column: 25, scope: !5040)
!5125 = !DILocation(line: 3998, column: 11, scope: !5040)
!5126 = !DILocation(line: 4000, column: 15, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5040, file: !66, line: 4000, column: 15)
!5128 = !DILocation(line: 4000, column: 15, scope: !5040)
!5129 = !DILocation(line: 4001, column: 13, scope: !5127)
!5130 = distinct !{!5130, !5035, !5131}
!5131 = !DILocation(line: 4002, column: 9, scope: !4983)
!5132 = !DILocation(line: 4003, column: 16, scope: !4983)
!5133 = !DILocation(line: 4003, column: 20, scope: !4983)
!5134 = !DILocation(line: 4003, column: 7, scope: !4983)
!5135 = distinct !{!5135, !4980, !5136}
!5136 = !DILocation(line: 4004, column: 5, scope: !4962)
!5137 = !DILabel(scope: !4962, name: "finish", file: !66, line: 4006)
!5138 = !DILocation(line: 4006, column: 2, scope: !4962)
!5139 = !DILocation(line: 4007, column: 13, scope: !4962)
!5140 = !DILocation(line: 4007, column: 3, scope: !4962)
!5141 = !DILocation(line: 4009, column: 9, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !4962, file: !66, line: 4009, column: 7)
!5143 = !DILocation(line: 4009, column: 7, scope: !4962)
!5144 = !DILocalVariable(name: "node", scope: !5145, file: !66, line: 4011, type: !293)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !66, line: 4010, column: 5)
!5146 = !DILocation(line: 4011, column: 24, scope: !5145)
!5147 = !DILocation(line: 4011, column: 31, scope: !5145)
!5148 = !DILocalVariable(name: "tempfiles", scope: !5145, file: !66, line: 4012, type: !288)
!5149 = !DILocation(line: 4012, column: 24, scope: !5145)
!5150 = !DILocation(line: 4012, column: 46, scope: !5145)
!5151 = !DILocation(line: 4012, column: 36, scope: !5145)
!5152 = !DILocalVariable(name: "i", scope: !5153, file: !66, line: 4013, type: !55)
!5153 = distinct !DILexicalBlock(scope: !5145, file: !66, line: 4013, column: 7)
!5154 = !DILocation(line: 4013, column: 19, scope: !5153)
!5155 = !DILocation(line: 4013, column: 12, scope: !5153)
!5156 = !DILocation(line: 4013, column: 26, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !66, line: 4013, column: 7)
!5158 = !DILocation(line: 4013, column: 7, scope: !5153)
!5159 = !DILocation(line: 4015, column: 31, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5157, file: !66, line: 4014, column: 9)
!5161 = !DILocation(line: 4015, column: 37, scope: !5160)
!5162 = !DILocation(line: 4015, column: 11, scope: !5160)
!5163 = !DILocation(line: 4015, column: 21, scope: !5160)
!5164 = !DILocation(line: 4015, column: 24, scope: !5160)
!5165 = !DILocation(line: 4015, column: 29, scope: !5160)
!5166 = !DILocation(line: 4016, column: 31, scope: !5160)
!5167 = !DILocation(line: 4016, column: 11, scope: !5160)
!5168 = !DILocation(line: 4016, column: 21, scope: !5160)
!5169 = !DILocation(line: 4016, column: 24, scope: !5160)
!5170 = !DILocation(line: 4016, column: 29, scope: !5160)
!5171 = !DILocation(line: 4017, column: 18, scope: !5160)
!5172 = !DILocation(line: 4017, column: 24, scope: !5160)
!5173 = !DILocation(line: 4017, column: 16, scope: !5160)
!5174 = !DILocation(line: 4018, column: 9, scope: !5160)
!5175 = !DILocation(line: 4013, column: 33, scope: !5157)
!5176 = !DILocation(line: 4013, column: 7, scope: !5157)
!5177 = distinct !{!5177, !5158, !5178}
!5178 = !DILocation(line: 4018, column: 9, scope: !5153)
!5179 = !DILocation(line: 4019, column: 14, scope: !5145)
!5180 = !DILocation(line: 4019, column: 25, scope: !5145)
!5181 = !DILocation(line: 4019, column: 33, scope: !5145)
!5182 = !DILocation(line: 4019, column: 41, scope: !5145)
!5183 = !DILocation(line: 4019, column: 7, scope: !5145)
!5184 = !DILocation(line: 4020, column: 13, scope: !5145)
!5185 = !DILocation(line: 4020, column: 7, scope: !5145)
!5186 = !DILocation(line: 4021, column: 5, scope: !5145)
!5187 = !DILocation(line: 4023, column: 3, scope: !4962)
!5188 = !DILocation(line: 4024, column: 1, scope: !4962)
!5189 = distinct !DISubprogram(name: "sort_die", scope: !66, file: !66, line: 406, type: !366, scopeLine: 407, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5190 = !DILocalVariable(name: "message", arg: 1, scope: !5189, file: !66, line: 406, type: !88)
!5191 = !DILocation(line: 406, column: 23, scope: !5189)
!5192 = !DILocalVariable(name: "file", arg: 2, scope: !5189, file: !66, line: 406, type: !88)
!5193 = !DILocation(line: 406, column: 44, scope: !5189)
!5194 = !DILocation(line: 408, column: 3, scope: !5189)
!5195 = !DILocalVariable(name: "fps", arg: 1, scope: !811, file: !66, line: 1518, type: !622)
!5196 = !DILocation(line: 1518, column: 32, scope: !811)
!5197 = !DILocalVariable(name: "nfps", arg: 2, scope: !811, file: !66, line: 1518, type: !55)
!5198 = !DILocation(line: 1518, column: 44, scope: !811)
!5199 = !DILocalVariable(name: "files", arg: 3, scope: !811, file: !66, line: 1519, type: !528)
!5200 = !DILocation(line: 1519, column: 32, scope: !811)
!5201 = !DILocalVariable(name: "nfiles", arg: 4, scope: !811, file: !66, line: 1519, type: !55)
!5202 = !DILocation(line: 1519, column: 46, scope: !811)
!5203 = !DILocalVariable(name: "line_bytes", arg: 5, scope: !811, file: !66, line: 1520, type: !55)
!5204 = !DILocation(line: 1520, column: 26, scope: !811)
!5205 = !DILocalVariable(name: "worst_case_per_input_byte", scope: !811, file: !66, line: 1527, type: !55)
!5206 = !DILocation(line: 1527, column: 10, scope: !811)
!5207 = !DILocation(line: 1527, column: 38, scope: !811)
!5208 = !DILocation(line: 1527, column: 49, scope: !811)
!5209 = !DILocalVariable(name: "size", scope: !811, file: !66, line: 1531, type: !55)
!5210 = !DILocation(line: 1531, column: 10, scope: !811)
!5211 = !DILocation(line: 1531, column: 17, scope: !811)
!5212 = !DILocation(line: 1531, column: 43, scope: !811)
!5213 = !DILocalVariable(name: "i", scope: !5214, file: !66, line: 1533, type: !55)
!5214 = distinct !DILexicalBlock(scope: !811, file: !66, line: 1533, column: 3)
!5215 = !DILocation(line: 1533, column: 15, scope: !5214)
!5216 = !DILocation(line: 1533, column: 8, scope: !5214)
!5217 = !DILocation(line: 1533, column: 22, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5214, file: !66, line: 1533, column: 3)
!5219 = !DILocation(line: 1533, column: 26, scope: !5218)
!5220 = !DILocation(line: 1533, column: 24, scope: !5218)
!5221 = !DILocation(line: 1533, column: 3, scope: !5214)
!5222 = !DILocalVariable(name: "st", scope: !5223, file: !66, line: 1535, type: !384)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !66, line: 1534, column: 5)
!5224 = !DILocation(line: 1535, column: 19, scope: !5223)
!5225 = !DILocalVariable(name: "file_size", scope: !5223, file: !66, line: 1536, type: !624)
!5226 = !DILocation(line: 1536, column: 13, scope: !5223)
!5227 = !DILocalVariable(name: "worst_case", scope: !5223, file: !66, line: 1537, type: !55)
!5228 = !DILocation(line: 1537, column: 14, scope: !5223)
!5229 = !DILocation(line: 1539, column: 12, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5223, file: !66, line: 1539, column: 11)
!5231 = !DILocation(line: 1539, column: 16, scope: !5230)
!5232 = !DILocation(line: 1539, column: 14, scope: !5230)
!5233 = !DILocation(line: 1539, column: 38, scope: !5230)
!5234 = !DILocation(line: 1539, column: 42, scope: !5230)
!5235 = !DILocation(line: 1539, column: 30, scope: !5230)
!5236 = !DILocation(line: 1539, column: 23, scope: !5230)
!5237 = !DILocation(line: 1540, column: 14, scope: !5230)
!5238 = !DILocation(line: 1540, column: 38, scope: !5230)
!5239 = !DILocation(line: 1541, column: 20, scope: !5230)
!5240 = !DILocation(line: 1541, column: 26, scope: !5230)
!5241 = !DILocation(line: 1541, column: 14, scope: !5230)
!5242 = !DILocation(line: 1542, column: 11, scope: !5230)
!5243 = !DILocation(line: 1539, column: 11, scope: !5223)
!5244 = !DILocation(line: 1543, column: 19, scope: !5230)
!5245 = !DILocation(line: 1543, column: 37, scope: !5230)
!5246 = !DILocation(line: 1543, column: 43, scope: !5230)
!5247 = !DILocation(line: 1543, column: 9, scope: !5230)
!5248 = !DILocation(line: 1545, column: 11, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5223, file: !66, line: 1545, column: 11)
!5250 = !{!5251, !2274, i64 24}
!5251 = !{!"stat", !2448, i64 0, !2448, i64 8, !2448, i64 16, !2274, i64 24, !2274, i64 28, !2274, i64 32, !2274, i64 36, !2448, i64 40, !2448, i64 48, !2448, i64 56, !2448, i64 64, !5252, i64 72, !5252, i64 88, !5252, i64 104, !2275, i64 120}
!5252 = !{!"timespec", !2448, i64 0, !2448, i64 8}
!5253 = !DILocation(line: 1545, column: 11, scope: !5223)
!5254 = !DILocation(line: 1546, column: 24, scope: !5249)
!5255 = !{!5251, !2448, i64 48}
!5256 = !DILocation(line: 1546, column: 19, scope: !5249)
!5257 = !DILocation(line: 1546, column: 9, scope: !5249)
!5258 = !DILocation(line: 1551, column: 15, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !66, line: 1551, column: 15)
!5260 = distinct !DILexicalBlock(scope: !5249, file: !66, line: 1548, column: 9)
!5261 = !DILocation(line: 1551, column: 15, scope: !5260)
!5262 = !DILocation(line: 1552, column: 20, scope: !5259)
!5263 = !DILocation(line: 1552, column: 13, scope: !5259)
!5264 = !DILocation(line: 1553, column: 21, scope: !5260)
!5265 = !DILocation(line: 1556, column: 13, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5223, file: !66, line: 1556, column: 11)
!5267 = !DILocation(line: 1556, column: 11, scope: !5223)
!5268 = !DILocation(line: 1558, column: 24, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5266, file: !66, line: 1557, column: 9)
!5270 = !DILocation(line: 1558, column: 22, scope: !5269)
!5271 = !DILocation(line: 1559, column: 17, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5269, file: !66, line: 1559, column: 15)
!5273 = !DILocation(line: 1559, column: 15, scope: !5269)
!5274 = !DILocation(line: 1560, column: 26, scope: !5272)
!5275 = !DILocation(line: 1560, column: 24, scope: !5272)
!5276 = !DILocation(line: 1560, column: 13, scope: !5272)
!5277 = !DILocation(line: 1561, column: 9, scope: !5269)
!5278 = !DILocation(line: 1566, column: 20, scope: !5223)
!5279 = !DILocation(line: 1566, column: 32, scope: !5223)
!5280 = !DILocation(line: 1566, column: 30, scope: !5223)
!5281 = !DILocation(line: 1566, column: 58, scope: !5223)
!5282 = !DILocation(line: 1566, column: 18, scope: !5223)
!5283 = !DILocation(line: 1567, column: 11, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5223, file: !66, line: 1567, column: 11)
!5285 = !DILocation(line: 1567, column: 24, scope: !5284)
!5286 = !DILocation(line: 1567, column: 37, scope: !5284)
!5287 = !DILocation(line: 1567, column: 35, scope: !5284)
!5288 = !DILocation(line: 1567, column: 21, scope: !5284)
!5289 = !DILocation(line: 1568, column: 11, scope: !5284)
!5290 = !DILocation(line: 1568, column: 14, scope: !5284)
!5291 = !DILocation(line: 1568, column: 27, scope: !5284)
!5292 = !DILocation(line: 1568, column: 25, scope: !5284)
!5293 = !DILocation(line: 1568, column: 35, scope: !5284)
!5294 = !DILocation(line: 1568, column: 32, scope: !5284)
!5295 = !DILocation(line: 1567, column: 11, scope: !5223)
!5296 = !DILocation(line: 1569, column: 16, scope: !5284)
!5297 = !DILocation(line: 1569, column: 9, scope: !5284)
!5298 = !DILocation(line: 1570, column: 15, scope: !5223)
!5299 = !DILocation(line: 1570, column: 12, scope: !5223)
!5300 = !DILocation(line: 1571, column: 5, scope: !5223)
!5301 = !DILocation(line: 1533, column: 35, scope: !5218)
!5302 = !DILocation(line: 1533, column: 3, scope: !5218)
!5303 = distinct !{!5303, !5221, !5304}
!5304 = !DILocation(line: 1571, column: 5, scope: !5214)
!5305 = !DILocation(line: 1573, column: 10, scope: !811)
!5306 = !DILocation(line: 1573, column: 3, scope: !811)
!5307 = !DILocation(line: 1574, column: 1, scope: !811)
!5308 = distinct !DISubprogram(name: "initbuf", scope: !66, file: !66, line: 1581, type: !455, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5309 = !DILocalVariable(name: "buf", arg: 1, scope: !5308, file: !66, line: 1581, type: !457)
!5310 = !DILocation(line: 1581, column: 25, scope: !5308)
!5311 = !DILocalVariable(name: "line_bytes", arg: 2, scope: !5308, file: !66, line: 1581, type: !55)
!5312 = !DILocation(line: 1581, column: 37, scope: !5308)
!5313 = !DILocalVariable(name: "alloc", arg: 3, scope: !5308, file: !66, line: 1581, type: !55)
!5314 = !DILocation(line: 1581, column: 56, scope: !5308)
!5315 = !DILocation(line: 1587, column: 3, scope: !5308)
!5316 = !DILocation(line: 1589, column: 39, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5308, file: !66, line: 1588, column: 5)
!5318 = !DILocation(line: 1589, column: 45, scope: !5317)
!5319 = !DILocation(line: 1589, column: 37, scope: !5317)
!5320 = !DILocation(line: 1589, column: 13, scope: !5317)
!5321 = !DILocation(line: 1590, column: 26, scope: !5317)
!5322 = !DILocation(line: 1590, column: 18, scope: !5317)
!5323 = !DILocation(line: 1590, column: 7, scope: !5317)
!5324 = !DILocation(line: 1590, column: 12, scope: !5317)
!5325 = !DILocation(line: 1590, column: 16, scope: !5317)
!5326 = !DILocation(line: 1591, column: 11, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5317, file: !66, line: 1591, column: 11)
!5328 = !DILocation(line: 1591, column: 16, scope: !5327)
!5329 = !DILocation(line: 1591, column: 11, scope: !5317)
!5330 = !DILocation(line: 1592, column: 9, scope: !5327)
!5331 = !DILocation(line: 1593, column: 13, scope: !5317)
!5332 = !DILocation(line: 1594, column: 11, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5317, file: !66, line: 1594, column: 11)
!5334 = !DILocation(line: 1594, column: 20, scope: !5333)
!5335 = !DILocation(line: 1594, column: 31, scope: !5333)
!5336 = !DILocation(line: 1594, column: 17, scope: !5333)
!5337 = !DILocation(line: 1594, column: 11, scope: !5317)
!5338 = !DILocation(line: 1595, column: 9, scope: !5333)
!5339 = distinct !{!5339, !5315, !5340}
!5340 = !DILocation(line: 1596, column: 5, scope: !5308)
!5341 = !DILocation(line: 1598, column: 21, scope: !5308)
!5342 = !DILocation(line: 1598, column: 3, scope: !5308)
!5343 = !DILocation(line: 1598, column: 8, scope: !5308)
!5344 = !DILocation(line: 1598, column: 19, scope: !5308)
!5345 = !{!4503, !2448, i64 40}
!5346 = !DILocation(line: 1599, column: 16, scope: !5308)
!5347 = !DILocation(line: 1599, column: 3, scope: !5308)
!5348 = !DILocation(line: 1599, column: 8, scope: !5308)
!5349 = !DILocation(line: 1599, column: 14, scope: !5308)
!5350 = !DILocation(line: 1600, column: 27, scope: !5308)
!5351 = !DILocation(line: 1600, column: 32, scope: !5308)
!5352 = !DILocation(line: 1600, column: 39, scope: !5308)
!5353 = !DILocation(line: 1600, column: 15, scope: !5308)
!5354 = !DILocation(line: 1600, column: 20, scope: !5308)
!5355 = !DILocation(line: 1600, column: 25, scope: !5308)
!5356 = !DILocation(line: 1600, column: 3, scope: !5308)
!5357 = !DILocation(line: 1600, column: 8, scope: !5308)
!5358 = !DILocation(line: 1600, column: 13, scope: !5308)
!5359 = !DILocation(line: 1601, column: 3, scope: !5308)
!5360 = !DILocation(line: 1601, column: 8, scope: !5308)
!5361 = !DILocation(line: 1601, column: 12, scope: !5308)
!5362 = !DILocation(line: 1602, column: 1, scope: !5308)
!5363 = distinct !DISubprogram(name: "fillbuf", scope: !66, file: !66, line: 1764, type: !467, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5364 = !DILocalVariable(name: "buf", arg: 1, scope: !5363, file: !66, line: 1764, type: !457)
!5365 = !DILocation(line: 1764, column: 25, scope: !5363)
!5366 = !DILocalVariable(name: "fp", arg: 2, scope: !5363, file: !66, line: 1764, type: !0)
!5367 = !DILocation(line: 1764, column: 36, scope: !5363)
!5368 = !DILocalVariable(name: "file", arg: 3, scope: !5363, file: !66, line: 1764, type: !88)
!5369 = !DILocation(line: 1764, column: 52, scope: !5363)
!5370 = !DILocalVariable(name: "key", scope: !5363, file: !66, line: 1766, type: !423)
!5371 = !DILocation(line: 1766, column: 26, scope: !5363)
!5372 = !DILocation(line: 1766, column: 32, scope: !5363)
!5373 = !DILocalVariable(name: "eol", scope: !5363, file: !66, line: 1767, type: !10)
!5374 = !DILocation(line: 1767, column: 8, scope: !5363)
!5375 = !DILocation(line: 1767, column: 14, scope: !5363)
!5376 = !DILocalVariable(name: "line_bytes", scope: !5363, file: !66, line: 1768, type: !55)
!5377 = !DILocation(line: 1768, column: 10, scope: !5363)
!5378 = !DILocation(line: 1768, column: 23, scope: !5363)
!5379 = !DILocation(line: 1768, column: 28, scope: !5363)
!5380 = !DILocalVariable(name: "mergesize", scope: !5363, file: !66, line: 1769, type: !55)
!5381 = !DILocation(line: 1769, column: 10, scope: !5363)
!5382 = !DILocation(line: 1769, column: 22, scope: !5363)
!5383 = !DILocation(line: 1769, column: 40, scope: !5363)
!5384 = !DILocation(line: 1771, column: 7, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5363, file: !66, line: 1771, column: 7)
!5386 = !DILocation(line: 1771, column: 12, scope: !5385)
!5387 = !DILocation(line: 1771, column: 7, scope: !5363)
!5388 = !DILocation(line: 1772, column: 5, scope: !5385)
!5389 = !DILocation(line: 1774, column: 7, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5363, file: !66, line: 1774, column: 7)
!5391 = !DILocation(line: 1774, column: 12, scope: !5390)
!5392 = !DILocation(line: 1774, column: 20, scope: !5390)
!5393 = !DILocation(line: 1774, column: 25, scope: !5390)
!5394 = !DILocation(line: 1774, column: 17, scope: !5390)
!5395 = !DILocation(line: 1774, column: 7, scope: !5363)
!5396 = !DILocation(line: 1776, column: 16, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5390, file: !66, line: 1775, column: 5)
!5398 = !DILocation(line: 1776, column: 21, scope: !5397)
!5399 = !DILocation(line: 1776, column: 26, scope: !5397)
!5400 = !DILocation(line: 1776, column: 31, scope: !5397)
!5401 = !DILocation(line: 1776, column: 37, scope: !5397)
!5402 = !DILocation(line: 1776, column: 42, scope: !5397)
!5403 = !DILocation(line: 1776, column: 35, scope: !5397)
!5404 = !DILocation(line: 1776, column: 49, scope: !5397)
!5405 = !DILocation(line: 1776, column: 54, scope: !5397)
!5406 = !DILocation(line: 1776, column: 47, scope: !5397)
!5407 = !DILocation(line: 1776, column: 60, scope: !5397)
!5408 = !DILocation(line: 1776, column: 65, scope: !5397)
!5409 = !DILocation(line: 1776, column: 7, scope: !5397)
!5410 = !DILocation(line: 1777, column: 19, scope: !5397)
!5411 = !DILocation(line: 1777, column: 24, scope: !5397)
!5412 = !DILocation(line: 1777, column: 7, scope: !5397)
!5413 = !DILocation(line: 1777, column: 12, scope: !5397)
!5414 = !DILocation(line: 1777, column: 17, scope: !5397)
!5415 = !DILocation(line: 1778, column: 7, scope: !5397)
!5416 = !DILocation(line: 1778, column: 12, scope: !5397)
!5417 = !DILocation(line: 1778, column: 19, scope: !5397)
!5418 = !DILocation(line: 1779, column: 5, scope: !5397)
!5419 = !DILocation(line: 1781, column: 3, scope: !5363)
!5420 = !DILocalVariable(name: "ptr", scope: !5421, file: !66, line: 1783, type: !9)
!5421 = distinct !DILexicalBlock(scope: !5363, file: !66, line: 1782, column: 5)
!5422 = !DILocation(line: 1783, column: 13, scope: !5421)
!5423 = !DILocation(line: 1783, column: 19, scope: !5421)
!5424 = !DILocation(line: 1783, column: 24, scope: !5421)
!5425 = !DILocation(line: 1783, column: 30, scope: !5421)
!5426 = !DILocation(line: 1783, column: 35, scope: !5421)
!5427 = !DILocation(line: 1783, column: 28, scope: !5421)
!5428 = !DILocalVariable(name: "linelim", scope: !5421, file: !66, line: 1784, type: !469)
!5429 = !DILocation(line: 1784, column: 20, scope: !5421)
!5430 = !DILocation(line: 1784, column: 46, scope: !5421)
!5431 = !DILocation(line: 1784, column: 30, scope: !5421)
!5432 = !DILocalVariable(name: "line", scope: !5421, file: !66, line: 1785, type: !469)
!5433 = !DILocation(line: 1785, column: 20, scope: !5421)
!5434 = !DILocation(line: 1785, column: 27, scope: !5421)
!5435 = !DILocation(line: 1785, column: 37, scope: !5421)
!5436 = !DILocation(line: 1785, column: 42, scope: !5421)
!5437 = !DILocation(line: 1785, column: 35, scope: !5421)
!5438 = !DILocalVariable(name: "avail", scope: !5421, file: !66, line: 1786, type: !55)
!5439 = !DILocation(line: 1786, column: 14, scope: !5421)
!5440 = !DILocation(line: 1786, column: 31, scope: !5421)
!5441 = !DILocation(line: 1786, column: 22, scope: !5421)
!5442 = !DILocation(line: 1786, column: 41, scope: !5421)
!5443 = !DILocation(line: 1786, column: 46, scope: !5421)
!5444 = !DILocation(line: 1786, column: 55, scope: !5421)
!5445 = !DILocation(line: 1786, column: 53, scope: !5421)
!5446 = !DILocation(line: 1786, column: 39, scope: !5421)
!5447 = !DILocation(line: 1786, column: 68, scope: !5421)
!5448 = !DILocation(line: 1786, column: 66, scope: !5421)
!5449 = !DILocalVariable(name: "line_start", scope: !5421, file: !66, line: 1787, type: !9)
!5450 = !DILocation(line: 1787, column: 13, scope: !5421)
!5451 = !DILocation(line: 1787, column: 26, scope: !5421)
!5452 = !DILocation(line: 1787, column: 31, scope: !5421)
!5453 = !DILocation(line: 1787, column: 40, scope: !5421)
!5454 = !DILocation(line: 1787, column: 46, scope: !5421)
!5455 = !DILocation(line: 1787, column: 53, scope: !5421)
!5456 = !DILocation(line: 1787, column: 59, scope: !5421)
!5457 = !DILocation(line: 1787, column: 51, scope: !5421)
!5458 = !DILocation(line: 1787, column: 68, scope: !5421)
!5459 = !DILocation(line: 1787, column: 73, scope: !5421)
!5460 = !DILocation(line: 1789, column: 7, scope: !5421)
!5461 = !DILocation(line: 1789, column: 14, scope: !5421)
!5462 = !DILocation(line: 1789, column: 25, scope: !5421)
!5463 = !DILocation(line: 1789, column: 31, scope: !5421)
!5464 = !DILocation(line: 1789, column: 29, scope: !5421)
!5465 = !DILocalVariable(name: "readsize", scope: !5466, file: !66, line: 1796, type: !55)
!5466 = distinct !DILexicalBlock(scope: !5421, file: !66, line: 1790, column: 9)
!5467 = !DILocation(line: 1796, column: 18, scope: !5466)
!5468 = !DILocation(line: 1796, column: 30, scope: !5466)
!5469 = !DILocation(line: 1796, column: 36, scope: !5466)
!5470 = !DILocation(line: 1796, column: 44, scope: !5466)
!5471 = !DILocation(line: 1796, column: 55, scope: !5466)
!5472 = !DILocation(line: 1796, column: 41, scope: !5466)
!5473 = !DILocalVariable(name: "bytes_read", scope: !5466, file: !66, line: 1797, type: !55)
!5474 = !DILocation(line: 1797, column: 18, scope: !5466)
!5475 = !DILocation(line: 1797, column: 31, scope: !5466)
!5476 = !DILocalVariable(name: "ptrlim", scope: !5466, file: !66, line: 1798, type: !9)
!5477 = !DILocation(line: 1798, column: 17, scope: !5466)
!5478 = !DILocation(line: 1798, column: 26, scope: !5466)
!5479 = !DILocation(line: 1798, column: 32, scope: !5466)
!5480 = !DILocation(line: 1798, column: 30, scope: !5466)
!5481 = !DILocalVariable(name: "p", scope: !5466, file: !66, line: 1799, type: !9)
!5482 = !DILocation(line: 1799, column: 17, scope: !5466)
!5483 = !DILocation(line: 1800, column: 20, scope: !5466)
!5484 = !DILocation(line: 1800, column: 17, scope: !5466)
!5485 = !DILocation(line: 1802, column: 15, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5466, file: !66, line: 1802, column: 15)
!5487 = !DILocation(line: 1802, column: 29, scope: !5486)
!5488 = !DILocation(line: 1802, column: 26, scope: !5486)
!5489 = !DILocation(line: 1802, column: 15, scope: !5466)
!5490 = !DILocation(line: 1804, column: 19, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !66, line: 1804, column: 19)
!5492 = distinct !DILexicalBlock(scope: !5486, file: !66, line: 1803, column: 13)
!5493 = !DILocation(line: 1804, column: 19, scope: !5492)
!5494 = !DILocation(line: 1805, column: 27, scope: !5491)
!5495 = !DILocation(line: 1805, column: 45, scope: !5491)
!5496 = !DILocation(line: 1805, column: 17, scope: !5491)
!5497 = !DILocation(line: 1806, column: 19, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5492, file: !66, line: 1806, column: 19)
!5499 = !DILocation(line: 1806, column: 19, scope: !5492)
!5500 = !DILocation(line: 1808, column: 19, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5498, file: !66, line: 1807, column: 17)
!5502 = !DILocation(line: 1808, column: 24, scope: !5501)
!5503 = !DILocation(line: 1808, column: 28, scope: !5501)
!5504 = !DILocation(line: 1809, column: 23, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5501, file: !66, line: 1809, column: 23)
!5506 = !DILocation(line: 1809, column: 28, scope: !5505)
!5507 = !DILocation(line: 1809, column: 35, scope: !5505)
!5508 = !DILocation(line: 1809, column: 32, scope: !5505)
!5509 = !DILocation(line: 1809, column: 23, scope: !5501)
!5510 = !DILocation(line: 1810, column: 21, scope: !5505)
!5511 = !DILocation(line: 1811, column: 23, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5501, file: !66, line: 1811, column: 23)
!5513 = !DILocation(line: 1811, column: 37, scope: !5512)
!5514 = !DILocation(line: 1811, column: 34, scope: !5512)
!5515 = !DILocation(line: 1811, column: 44, scope: !5512)
!5516 = !DILocation(line: 1811, column: 47, scope: !5512)
!5517 = !DILocation(line: 1811, column: 61, scope: !5512)
!5518 = !DILocation(line: 1811, column: 58, scope: !5512)
!5519 = !DILocation(line: 1811, column: 23, scope: !5501)
!5520 = !DILocation(line: 1812, column: 33, scope: !5512)
!5521 = !DILocation(line: 1812, column: 28, scope: !5512)
!5522 = !DILocation(line: 1812, column: 31, scope: !5512)
!5523 = !DILocation(line: 1812, column: 21, scope: !5512)
!5524 = !DILocation(line: 1813, column: 17, scope: !5501)
!5525 = !DILocation(line: 1814, column: 13, scope: !5492)
!5526 = !DILocation(line: 1817, column: 11, scope: !5466)
!5527 = !DILocation(line: 1817, column: 31, scope: !5466)
!5528 = !DILocation(line: 1817, column: 36, scope: !5466)
!5529 = !DILocation(line: 1817, column: 41, scope: !5466)
!5530 = !DILocation(line: 1817, column: 50, scope: !5466)
!5531 = !DILocation(line: 1817, column: 48, scope: !5466)
!5532 = !DILocation(line: 1817, column: 23, scope: !5466)
!5533 = !DILocation(line: 1817, column: 21, scope: !5466)
!5534 = !DILocation(line: 1822, column: 16, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5466, file: !66, line: 1818, column: 13)
!5536 = !DILocation(line: 1822, column: 18, scope: !5535)
!5537 = !DILocation(line: 1823, column: 21, scope: !5535)
!5538 = !DILocation(line: 1823, column: 23, scope: !5535)
!5539 = !DILocation(line: 1823, column: 19, scope: !5535)
!5540 = !DILocation(line: 1824, column: 19, scope: !5535)
!5541 = !DILocation(line: 1825, column: 28, scope: !5535)
!5542 = !DILocation(line: 1825, column: 15, scope: !5535)
!5543 = !DILocation(line: 1825, column: 21, scope: !5535)
!5544 = !DILocation(line: 1825, column: 26, scope: !5535)
!5545 = !DILocation(line: 1826, column: 30, scope: !5535)
!5546 = !DILocation(line: 1826, column: 36, scope: !5535)
!5547 = !DILocation(line: 1826, column: 34, scope: !5535)
!5548 = !DILocation(line: 1826, column: 15, scope: !5535)
!5549 = !DILocation(line: 1826, column: 21, scope: !5535)
!5550 = !DILocation(line: 1826, column: 28, scope: !5535)
!5551 = !DILocation(line: 1827, column: 27, scope: !5535)
!5552 = !DILocation(line: 1827, column: 25, scope: !5535)
!5553 = !DILocation(line: 1828, column: 24, scope: !5535)
!5554 = !DILocation(line: 1828, column: 21, scope: !5535)
!5555 = !DILocation(line: 1830, column: 19, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5535, file: !66, line: 1830, column: 19)
!5557 = !DILocation(line: 1830, column: 19, scope: !5535)
!5558 = !DILocation(line: 1834, column: 35, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5556, file: !66, line: 1831, column: 17)
!5560 = !DILocation(line: 1834, column: 40, scope: !5559)
!5561 = !DILocation(line: 1834, column: 46, scope: !5559)
!5562 = !DILocation(line: 1835, column: 37, scope: !5559)
!5563 = !DILocation(line: 1836, column: 47, scope: !5559)
!5564 = !DILocation(line: 1836, column: 53, scope: !5559)
!5565 = !DILocation(line: 1836, column: 37, scope: !5559)
!5566 = !DILocation(line: 1834, column: 19, scope: !5559)
!5567 = !DILocation(line: 1834, column: 25, scope: !5559)
!5568 = !DILocation(line: 1834, column: 32, scope: !5559)
!5569 = !DILocation(line: 1838, column: 23, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5559, file: !66, line: 1838, column: 23)
!5571 = !DILocation(line: 1838, column: 28, scope: !5570)
!5572 = !DILocation(line: 1838, column: 34, scope: !5570)
!5573 = !DILocation(line: 1838, column: 23, scope: !5559)
!5574 = !DILocation(line: 1839, column: 46, scope: !5570)
!5575 = !DILocation(line: 1839, column: 52, scope: !5570)
!5576 = !DILocation(line: 1839, column: 36, scope: !5570)
!5577 = !DILocation(line: 1839, column: 21, scope: !5570)
!5578 = !DILocation(line: 1839, column: 27, scope: !5570)
!5579 = !DILocation(line: 1839, column: 34, scope: !5570)
!5580 = !DILocation(line: 1842, column: 27, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !66, line: 1842, column: 27)
!5582 = distinct !DILexicalBlock(scope: !5570, file: !66, line: 1841, column: 21)
!5583 = !DILocation(line: 1842, column: 32, scope: !5581)
!5584 = !DILocation(line: 1842, column: 27, scope: !5582)
!5585 = !DILocation(line: 1843, column: 25, scope: !5581)
!5586 = !DILocation(line: 1843, column: 50, scope: !5581)
!5587 = !DILocation(line: 1843, column: 49, scope: !5581)
!5588 = !DILocation(line: 1843, column: 39, scope: !5581)
!5589 = !DILocation(line: 1843, column: 32, scope: !5581)
!5590 = !DILocation(line: 1844, column: 37, scope: !5581)
!5591 = distinct !{!5591, !5585, !5590}
!5592 = !DILocation(line: 1845, column: 38, scope: !5582)
!5593 = !DILocation(line: 1845, column: 23, scope: !5582)
!5594 = !DILocation(line: 1845, column: 29, scope: !5582)
!5595 = !DILocation(line: 1845, column: 36, scope: !5582)
!5596 = !DILocation(line: 1847, column: 17, scope: !5559)
!5597 = !DILocation(line: 1849, column: 28, scope: !5535)
!5598 = !DILocation(line: 1849, column: 26, scope: !5535)
!5599 = distinct !{!5599, !5526, !5600}
!5600 = !DILocation(line: 1850, column: 13, scope: !5466)
!5601 = !DILocation(line: 1852, column: 17, scope: !5466)
!5602 = !DILocation(line: 1852, column: 15, scope: !5466)
!5603 = !DILocation(line: 1853, column: 15, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5466, file: !66, line: 1853, column: 15)
!5605 = !DILocation(line: 1853, column: 20, scope: !5604)
!5606 = !DILocation(line: 1853, column: 15, scope: !5466)
!5607 = !DILocation(line: 1854, column: 13, scope: !5604)
!5608 = distinct !{!5608, !5460, !5609}
!5609 = !DILocation(line: 1855, column: 9, scope: !5421)
!5610 = !DILocation(line: 1857, column: 19, scope: !5421)
!5611 = !DILocation(line: 1857, column: 25, scope: !5421)
!5612 = !DILocation(line: 1857, column: 30, scope: !5421)
!5613 = !DILocation(line: 1857, column: 23, scope: !5421)
!5614 = !DILocation(line: 1857, column: 7, scope: !5421)
!5615 = !DILocation(line: 1857, column: 12, scope: !5421)
!5616 = !DILocation(line: 1857, column: 17, scope: !5421)
!5617 = !DILocation(line: 1858, column: 37, scope: !5421)
!5618 = !DILocation(line: 1858, column: 21, scope: !5421)
!5619 = !DILocation(line: 1858, column: 44, scope: !5421)
!5620 = !DILocation(line: 1858, column: 42, scope: !5421)
!5621 = !DILocation(line: 1858, column: 7, scope: !5421)
!5622 = !DILocation(line: 1858, column: 12, scope: !5421)
!5623 = !DILocation(line: 1858, column: 19, scope: !5421)
!5624 = !DILocation(line: 1859, column: 11, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5421, file: !66, line: 1859, column: 11)
!5626 = !DILocation(line: 1859, column: 16, scope: !5625)
!5627 = !DILocation(line: 1859, column: 23, scope: !5625)
!5628 = !DILocation(line: 1859, column: 11, scope: !5421)
!5629 = !DILocation(line: 1861, column: 23, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5625, file: !66, line: 1860, column: 9)
!5631 = !DILocation(line: 1861, column: 29, scope: !5630)
!5632 = !DILocation(line: 1861, column: 27, scope: !5630)
!5633 = !DILocation(line: 1861, column: 11, scope: !5630)
!5634 = !DILocation(line: 1861, column: 16, scope: !5630)
!5635 = !DILocation(line: 1861, column: 21, scope: !5630)
!5636 = !DILocation(line: 1862, column: 31, scope: !5630)
!5637 = !DILocation(line: 1862, column: 41, scope: !5630)
!5638 = !DILocation(line: 1862, column: 29, scope: !5630)
!5639 = !DILocation(line: 1863, column: 11, scope: !5630)
!5640 = !DILocalVariable(name: "line_alloc", scope: !5641, file: !66, line: 1870, type: !55)
!5641 = distinct !DILexicalBlock(scope: !5421, file: !66, line: 1866, column: 7)
!5642 = !DILocation(line: 1870, column: 16, scope: !5641)
!5643 = !DILocation(line: 1870, column: 29, scope: !5641)
!5644 = !DILocation(line: 1870, column: 34, scope: !5641)
!5645 = !DILocation(line: 1870, column: 40, scope: !5641)
!5646 = !DILocation(line: 1871, column: 32, scope: !5641)
!5647 = !DILocation(line: 1871, column: 37, scope: !5641)
!5648 = !DILocation(line: 1871, column: 20, scope: !5641)
!5649 = !DILocation(line: 1871, column: 9, scope: !5641)
!5650 = !DILocation(line: 1871, column: 14, scope: !5641)
!5651 = !DILocation(line: 1871, column: 18, scope: !5641)
!5652 = !DILocation(line: 1872, column: 22, scope: !5641)
!5653 = !DILocation(line: 1872, column: 33, scope: !5641)
!5654 = !DILocation(line: 1872, column: 9, scope: !5641)
!5655 = !DILocation(line: 1872, column: 14, scope: !5641)
!5656 = !DILocation(line: 1872, column: 20, scope: !5641)
!5657 = distinct !{!5657, !5419, !5658}
!5658 = !DILocation(line: 1874, column: 5, scope: !5363)
!5659 = !DILocation(line: 1875, column: 1, scope: !5363)
!5660 = distinct !DISubprogram(name: "buffer_linelim", scope: !66, file: !66, line: 1607, type: !472, scopeLine: 1608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5661 = !DILocalVariable(name: "buf", arg: 1, scope: !5660, file: !66, line: 1607, type: !474)
!5662 = !DILocation(line: 1607, column: 38, scope: !5660)
!5663 = !DILocalVariable(name: "linelim", scope: !5660, file: !66, line: 1609, type: !53)
!5664 = !DILocation(line: 1609, column: 9, scope: !5660)
!5665 = !DILocation(line: 1609, column: 19, scope: !5660)
!5666 = !DILocation(line: 1609, column: 24, scope: !5660)
!5667 = !DILocation(line: 1609, column: 30, scope: !5660)
!5668 = !DILocation(line: 1609, column: 35, scope: !5660)
!5669 = !DILocation(line: 1609, column: 28, scope: !5660)
!5670 = !DILocation(line: 1610, column: 10, scope: !5660)
!5671 = !DILocation(line: 1610, column: 3, scope: !5660)
!5672 = distinct !DISubprogram(name: "create_temp", scope: !66, file: !66, line: 1169, type: !535, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5673 = !DILocalVariable(name: "pfp", arg: 1, scope: !5672, file: !66, line: 1169, type: !534)
!5674 = !DILocation(line: 1169, column: 21, scope: !5672)
!5675 = !DILocation(line: 1171, column: 29, scope: !5672)
!5676 = !DILocation(line: 1171, column: 10, scope: !5672)
!5677 = !DILocation(line: 1171, column: 3, scope: !5672)
!5678 = distinct !DISubprogram(name: "queue_init", scope: !66, file: !66, line: 3384, type: !628, scopeLine: 3385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5679 = !DILocalVariable(name: "queue", arg: 1, scope: !5678, file: !66, line: 3384, type: !630)
!5680 = !DILocation(line: 3384, column: 38, scope: !5678)
!5681 = !DILocalVariable(name: "nthreads", arg: 2, scope: !5678, file: !66, line: 3384, type: !55)
!5682 = !DILocation(line: 3384, column: 52, scope: !5678)
!5683 = !DILocation(line: 3389, column: 58, scope: !5678)
!5684 = !DILocation(line: 3389, column: 56, scope: !5678)
!5685 = !DILocation(line: 3389, column: 27, scope: !5678)
!5686 = !DILocation(line: 3389, column: 3, scope: !5678)
!5687 = !DILocation(line: 3389, column: 10, scope: !5678)
!5688 = !DILocation(line: 3389, column: 25, scope: !5678)
!5689 = !{!5690, !2287, i64 0}
!5690 = !{!"merge_node_queue", !2287, i64 0, !2275, i64 8, !2275, i64 48}
!5691 = !DILocation(line: 3390, column: 24, scope: !5678)
!5692 = !DILocation(line: 3390, column: 31, scope: !5678)
!5693 = !DILocation(line: 3390, column: 3, scope: !5678)
!5694 = !DILocation(line: 3391, column: 23, scope: !5678)
!5695 = !DILocation(line: 3391, column: 30, scope: !5678)
!5696 = !DILocation(line: 3391, column: 3, scope: !5678)
!5697 = !DILocation(line: 3392, column: 1, scope: !5678)
!5698 = distinct !DISubprogram(name: "merge_tree_init", scope: !66, file: !66, line: 3258, type: !678, scopeLine: 3259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5699 = !DILocalVariable(name: "nthreads", arg: 1, scope: !5698, file: !66, line: 3258, type: !55)
!5700 = !DILocation(line: 3258, column: 25, scope: !5698)
!5701 = !DILocalVariable(name: "nlines", arg: 2, scope: !5698, file: !66, line: 3258, type: !55)
!5702 = !DILocation(line: 3258, column: 42, scope: !5698)
!5703 = !DILocalVariable(name: "dest", arg: 3, scope: !5698, file: !66, line: 3258, type: !469)
!5704 = !DILocation(line: 3258, column: 63, scope: !5698)
!5705 = !DILocalVariable(name: "merge_tree", scope: !5698, file: !66, line: 3260, type: !576)
!5706 = !DILocation(line: 3260, column: 22, scope: !5698)
!5707 = !DILocation(line: 3260, column: 69, scope: !5698)
!5708 = !DILocation(line: 3260, column: 67, scope: !5698)
!5709 = !DILocation(line: 3260, column: 35, scope: !5698)
!5710 = !DILocalVariable(name: "root", scope: !5698, file: !66, line: 3262, type: !576)
!5711 = !DILocation(line: 3262, column: 22, scope: !5698)
!5712 = !DILocation(line: 3262, column: 29, scope: !5698)
!5713 = !DILocation(line: 3263, column: 40, scope: !5698)
!5714 = !DILocation(line: 3263, column: 46, scope: !5698)
!5715 = !DILocation(line: 3263, column: 53, scope: !5698)
!5716 = !{!5717, !2287, i64 24}
!5717 = !{!"merge_node", !2287, i64 0, !2287, i64 8, !2287, i64 16, !2287, i64 24, !2287, i64 32, !2448, i64 40, !2448, i64 48, !2287, i64 56, !2287, i64 64, !2287, i64 72, !2274, i64 80, !2431, i64 84, !2275, i64 88}
!5718 = !DILocation(line: 3263, column: 25, scope: !5698)
!5719 = !DILocation(line: 3263, column: 31, scope: !5698)
!5720 = !DILocation(line: 3263, column: 38, scope: !5698)
!5721 = !{!5717, !2287, i64 16}
!5722 = !DILocation(line: 3263, column: 14, scope: !5698)
!5723 = !DILocation(line: 3263, column: 20, scope: !5698)
!5724 = !DILocation(line: 3263, column: 23, scope: !5698)
!5725 = !{!5717, !2287, i64 8}
!5726 = !DILocation(line: 3263, column: 3, scope: !5698)
!5727 = !DILocation(line: 3263, column: 9, scope: !5698)
!5728 = !DILocation(line: 3263, column: 12, scope: !5698)
!5729 = !{!5717, !2287, i64 0}
!5730 = !DILocation(line: 3264, column: 3, scope: !5698)
!5731 = !DILocation(line: 3264, column: 9, scope: !5698)
!5732 = !DILocation(line: 3264, column: 14, scope: !5698)
!5733 = !{!5717, !2287, i64 32}
!5734 = !DILocation(line: 3265, column: 27, scope: !5698)
!5735 = !DILocation(line: 3265, column: 15, scope: !5698)
!5736 = !DILocation(line: 3265, column: 21, scope: !5698)
!5737 = !DILocation(line: 3265, column: 25, scope: !5698)
!5738 = !{!5717, !2448, i64 48}
!5739 = !DILocation(line: 3265, column: 3, scope: !5698)
!5740 = !DILocation(line: 3265, column: 9, scope: !5698)
!5741 = !DILocation(line: 3265, column: 13, scope: !5698)
!5742 = !{!5717, !2448, i64 40}
!5743 = !DILocation(line: 3266, column: 3, scope: !5698)
!5744 = !DILocation(line: 3266, column: 9, scope: !5698)
!5745 = !DILocation(line: 3266, column: 16, scope: !5698)
!5746 = !{!5717, !2287, i64 56}
!5747 = !DILocation(line: 3267, column: 3, scope: !5698)
!5748 = !DILocation(line: 3267, column: 9, scope: !5698)
!5749 = !DILocation(line: 3267, column: 15, scope: !5698)
!5750 = !{!5717, !2274, i64 80}
!5751 = !DILocation(line: 3268, column: 3, scope: !5698)
!5752 = !DILocation(line: 3268, column: 9, scope: !5698)
!5753 = !DILocation(line: 3268, column: 16, scope: !5698)
!5754 = !{!5717, !2431, i64 84}
!5755 = !DILocation(line: 3269, column: 24, scope: !5698)
!5756 = !DILocation(line: 3269, column: 30, scope: !5698)
!5757 = !DILocation(line: 3269, column: 3, scope: !5698)
!5758 = !DILocation(line: 3271, column: 14, scope: !5698)
!5759 = !DILocation(line: 3271, column: 20, scope: !5698)
!5760 = !DILocation(line: 3271, column: 25, scope: !5698)
!5761 = !DILocation(line: 3271, column: 30, scope: !5698)
!5762 = !DILocation(line: 3271, column: 36, scope: !5698)
!5763 = !DILocation(line: 3271, column: 46, scope: !5698)
!5764 = !DILocation(line: 3271, column: 3, scope: !5698)
!5765 = !DILocation(line: 3272, column: 10, scope: !5698)
!5766 = !DILocation(line: 3272, column: 3, scope: !5698)
!5767 = distinct !DISubprogram(name: "sortlines", scope: !66, file: !66, line: 3648, type: !683, scopeLine: 3651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5768 = !DILocalVariable(name: "lines", arg: 1, scope: !5767, file: !66, line: 3648, type: !685)
!5769 = !DILocation(line: 3648, column: 34, scope: !5767)
!5770 = !DILocalVariable(name: "nthreads", arg: 2, scope: !5767, file: !66, line: 3648, type: !55)
!5771 = !DILocation(line: 3648, column: 48, scope: !5767)
!5772 = !DILocalVariable(name: "total_lines", arg: 3, scope: !5767, file: !66, line: 3649, type: !55)
!5773 = !DILocation(line: 3649, column: 19, scope: !5767)
!5774 = !DILocalVariable(name: "node", arg: 4, scope: !5767, file: !66, line: 3649, type: !576)
!5775 = !DILocation(line: 3649, column: 51, scope: !5767)
!5776 = !DILocalVariable(name: "queue", arg: 5, scope: !5767, file: !66, line: 3650, type: !630)
!5777 = !DILocation(line: 3650, column: 37, scope: !5767)
!5778 = !DILocalVariable(name: "tfp", arg: 6, scope: !5767, file: !66, line: 3650, type: !0)
!5779 = !DILocation(line: 3650, column: 50, scope: !5767)
!5780 = !DILocalVariable(name: "temp_output", arg: 7, scope: !5767, file: !66, line: 3650, type: !88)
!5781 = !DILocation(line: 3650, column: 67, scope: !5767)
!5782 = !DILocalVariable(name: "nlines", scope: !5767, file: !66, line: 3652, type: !55)
!5783 = !DILocation(line: 3652, column: 10, scope: !5767)
!5784 = !DILocation(line: 3652, column: 19, scope: !5767)
!5785 = !DILocation(line: 3652, column: 25, scope: !5767)
!5786 = !DILocation(line: 3652, column: 31, scope: !5767)
!5787 = !DILocation(line: 3652, column: 37, scope: !5767)
!5788 = !DILocation(line: 3652, column: 29, scope: !5767)
!5789 = !DILocalVariable(name: "lo_threads", scope: !5767, file: !66, line: 3655, type: !55)
!5790 = !DILocation(line: 3655, column: 10, scope: !5767)
!5791 = !DILocation(line: 3655, column: 23, scope: !5767)
!5792 = !DILocation(line: 3655, column: 32, scope: !5767)
!5793 = !DILocalVariable(name: "hi_threads", scope: !5767, file: !66, line: 3656, type: !55)
!5794 = !DILocation(line: 3656, column: 10, scope: !5767)
!5795 = !DILocation(line: 3656, column: 23, scope: !5767)
!5796 = !DILocation(line: 3656, column: 34, scope: !5767)
!5797 = !DILocation(line: 3656, column: 32, scope: !5767)
!5798 = !DILocalVariable(name: "thread", scope: !5767, file: !66, line: 3657, type: !686)
!5799 = !DILocation(line: 3657, column: 13, scope: !5767)
!5800 = !DILocalVariable(name: "args", scope: !5767, file: !66, line: 3658, type: !691)
!5801 = !DILocation(line: 3658, column: 22, scope: !5767)
!5802 = !DILocation(line: 3658, column: 29, scope: !5767)
!5803 = !DILocation(line: 3658, column: 30, scope: !5767)
!5804 = !{!5805, !2287, i64 0}
!5805 = !{!"thread_args", !2287, i64 0, !2448, i64 8, !2448, i64 16, !2287, i64 24, !2287, i64 32, !2287, i64 40, !2287, i64 48}
!5806 = !DILocation(line: 3658, column: 37, scope: !5767)
!5807 = !{!5805, !2448, i64 8}
!5808 = !DILocation(line: 3658, column: 49, scope: !5767)
!5809 = !{!5805, !2448, i64 16}
!5810 = !DILocation(line: 3659, column: 30, scope: !5767)
!5811 = !DILocation(line: 3659, column: 36, scope: !5767)
!5812 = !{!5717, !2287, i64 64}
!5813 = !{!5805, !2287, i64 24}
!5814 = !DILocation(line: 3659, column: 46, scope: !5767)
!5815 = !{!5805, !2287, i64 32}
!5816 = !DILocation(line: 3659, column: 53, scope: !5767)
!5817 = !{!5805, !2287, i64 40}
!5818 = !DILocation(line: 3659, column: 58, scope: !5767)
!5819 = !{!5805, !2287, i64 48}
!5820 = !DILocation(line: 3661, column: 7, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5767, file: !66, line: 3661, column: 7)
!5822 = !DILocation(line: 3661, column: 16, scope: !5821)
!5823 = !DILocation(line: 3661, column: 20, scope: !5821)
!5824 = !DILocation(line: 3661, column: 52, scope: !5821)
!5825 = !DILocation(line: 3661, column: 49, scope: !5821)
!5826 = !DILocation(line: 3662, column: 7, scope: !5821)
!5827 = !DILocation(line: 3662, column: 59, scope: !5821)
!5828 = !DILocation(line: 3662, column: 10, scope: !5821)
!5829 = !DILocation(line: 3662, column: 66, scope: !5821)
!5830 = !DILocation(line: 3661, column: 7, scope: !5767)
!5831 = !DILocation(line: 3664, column: 18, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5821, file: !66, line: 3663, column: 5)
!5833 = !DILocation(line: 3664, column: 26, scope: !5832)
!5834 = !DILocation(line: 3664, column: 32, scope: !5832)
!5835 = !DILocation(line: 3664, column: 24, scope: !5832)
!5836 = !DILocation(line: 3664, column: 37, scope: !5832)
!5837 = !DILocation(line: 3664, column: 49, scope: !5832)
!5838 = !DILocation(line: 3665, column: 18, scope: !5832)
!5839 = !DILocation(line: 3665, column: 24, scope: !5832)
!5840 = !{!5717, !2287, i64 72}
!5841 = !DILocation(line: 3665, column: 34, scope: !5832)
!5842 = !DILocation(line: 3665, column: 41, scope: !5832)
!5843 = !DILocation(line: 3665, column: 46, scope: !5832)
!5844 = !DILocation(line: 3664, column: 7, scope: !5832)
!5845 = !DILocation(line: 3666, column: 21, scope: !5832)
!5846 = !DILocation(line: 3666, column: 7, scope: !5832)
!5847 = !DILocation(line: 3667, column: 5, scope: !5832)
!5848 = !DILocalVariable(name: "nlo", scope: !5849, file: !66, line: 3672, type: !55)
!5849 = distinct !DILexicalBlock(scope: !5821, file: !66, line: 3669, column: 5)
!5850 = !DILocation(line: 3672, column: 14, scope: !5849)
!5851 = !DILocation(line: 3672, column: 20, scope: !5849)
!5852 = !DILocation(line: 3672, column: 26, scope: !5849)
!5853 = !DILocalVariable(name: "nhi", scope: !5849, file: !66, line: 3673, type: !55)
!5854 = !DILocation(line: 3673, column: 14, scope: !5849)
!5855 = !DILocation(line: 3673, column: 20, scope: !5849)
!5856 = !DILocation(line: 3673, column: 26, scope: !5849)
!5857 = !DILocalVariable(name: "temp", scope: !5849, file: !66, line: 3674, type: !469)
!5858 = !DILocation(line: 3674, column: 20, scope: !5849)
!5859 = !DILocation(line: 3674, column: 27, scope: !5849)
!5860 = !DILocation(line: 3674, column: 35, scope: !5849)
!5861 = !DILocation(line: 3674, column: 33, scope: !5849)
!5862 = !DILocation(line: 3675, column: 15, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5849, file: !66, line: 3675, column: 11)
!5864 = !DILocation(line: 3675, column: 13, scope: !5863)
!5865 = !DILocation(line: 3675, column: 11, scope: !5849)
!5866 = !DILocation(line: 3676, column: 26, scope: !5863)
!5867 = !DILocation(line: 3676, column: 34, scope: !5863)
!5868 = !DILocation(line: 3676, column: 32, scope: !5863)
!5869 = !DILocation(line: 3676, column: 39, scope: !5863)
!5870 = !DILocation(line: 3676, column: 44, scope: !5863)
!5871 = !DILocation(line: 3676, column: 51, scope: !5863)
!5872 = !DILocation(line: 3676, column: 55, scope: !5863)
!5873 = !DILocation(line: 3676, column: 49, scope: !5863)
!5874 = !DILocation(line: 3676, column: 9, scope: !5863)
!5875 = !DILocation(line: 3677, column: 15, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5849, file: !66, line: 3677, column: 11)
!5877 = !DILocation(line: 3677, column: 13, scope: !5876)
!5878 = !DILocation(line: 3677, column: 11, scope: !5849)
!5879 = !DILocation(line: 3678, column: 26, scope: !5876)
!5880 = !DILocation(line: 3678, column: 33, scope: !5876)
!5881 = !DILocation(line: 3678, column: 38, scope: !5876)
!5882 = !DILocation(line: 3678, column: 9, scope: !5876)
!5883 = !DILocation(line: 3681, column: 18, scope: !5849)
!5884 = !DILocation(line: 3681, column: 7, scope: !5849)
!5885 = !DILocation(line: 3681, column: 13, scope: !5849)
!5886 = !DILocation(line: 3681, column: 16, scope: !5849)
!5887 = !DILocation(line: 3682, column: 18, scope: !5849)
!5888 = !DILocation(line: 3682, column: 26, scope: !5849)
!5889 = !DILocation(line: 3682, column: 24, scope: !5849)
!5890 = !DILocation(line: 3682, column: 7, scope: !5849)
!5891 = !DILocation(line: 3682, column: 13, scope: !5849)
!5892 = !DILocation(line: 3682, column: 16, scope: !5849)
!5893 = !DILocation(line: 3683, column: 22, scope: !5849)
!5894 = !DILocation(line: 3683, column: 30, scope: !5849)
!5895 = !DILocation(line: 3683, column: 28, scope: !5849)
!5896 = !DILocation(line: 3683, column: 7, scope: !5849)
!5897 = !DILocation(line: 3683, column: 13, scope: !5849)
!5898 = !DILocation(line: 3683, column: 20, scope: !5849)
!5899 = !DILocation(line: 3684, column: 22, scope: !5849)
!5900 = !DILocation(line: 3684, column: 30, scope: !5849)
!5901 = !DILocation(line: 3684, column: 28, scope: !5849)
!5902 = !DILocation(line: 3684, column: 36, scope: !5849)
!5903 = !DILocation(line: 3684, column: 34, scope: !5849)
!5904 = !DILocation(line: 3684, column: 7, scope: !5849)
!5905 = !DILocation(line: 3684, column: 13, scope: !5849)
!5906 = !DILocation(line: 3684, column: 20, scope: !5849)
!5907 = !DILocation(line: 3686, column: 21, scope: !5849)
!5908 = !DILocation(line: 3686, column: 28, scope: !5849)
!5909 = !DILocation(line: 3686, column: 7, scope: !5849)
!5910 = !DILocation(line: 3687, column: 19, scope: !5849)
!5911 = !DILocation(line: 3687, column: 26, scope: !5849)
!5912 = !DILocation(line: 3687, column: 39, scope: !5849)
!5913 = !DILocation(line: 3687, column: 44, scope: !5849)
!5914 = !DILocation(line: 3687, column: 7, scope: !5849)
!5915 = !DILocation(line: 3689, column: 1, scope: !5767)
!5916 = distinct !DISubprogram(name: "write_unique", scope: !66, file: !66, line: 3430, type: !516, scopeLine: 3431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5917 = !DILocalVariable(name: "line", arg: 1, scope: !5916, file: !66, line: 3430, type: !447)
!5918 = !DILocation(line: 3430, column: 34, scope: !5916)
!5919 = !DILocalVariable(name: "tfp", arg: 2, scope: !5916, file: !66, line: 3430, type: !0)
!5920 = !DILocation(line: 3430, column: 46, scope: !5916)
!5921 = !DILocalVariable(name: "temp_output", arg: 3, scope: !5916, file: !66, line: 3430, type: !88)
!5922 = !DILocation(line: 3430, column: 63, scope: !5916)
!5923 = !DILocation(line: 3432, column: 7, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5916, file: !66, line: 3432, column: 7)
!5925 = !DILocation(line: 3432, column: 7, scope: !5916)
!5926 = !DILocation(line: 3434, column: 22, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !66, line: 3434, column: 11)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !66, line: 3433, column: 5)
!5929 = !DILocation(line: 3434, column: 11, scope: !5927)
!5930 = !DILocation(line: 3434, column: 27, scope: !5927)
!5931 = !DILocation(line: 3434, column: 41, scope: !5927)
!5932 = !DILocation(line: 3434, column: 32, scope: !5927)
!5933 = !DILocation(line: 3434, column: 11, scope: !5928)
!5934 = !DILocation(line: 3435, column: 9, scope: !5927)
!5935 = !DILocation(line: 3436, column: 21, scope: !5928)
!5936 = !DILocation(line: 3436, column: 20, scope: !5928)
!5937 = !{i64 0, i64 8, !2286, i64 8, i64 8, !2447, i64 16, i64 8, !2286, i64 24, i64 8, !2286}
!5938 = !DILocation(line: 3437, column: 5, scope: !5928)
!5939 = !DILocation(line: 3439, column: 15, scope: !5916)
!5940 = !DILocation(line: 3439, column: 21, scope: !5916)
!5941 = !DILocation(line: 3439, column: 26, scope: !5916)
!5942 = !DILocation(line: 3439, column: 3, scope: !5916)
!5943 = !DILocation(line: 3440, column: 1, scope: !5916)
!5944 = distinct !DISubprogram(name: "reap_all", scope: !66, file: !66, line: 803, type: !168, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5945 = !DILocation(line: 805, column: 3, scope: !5944)
!5946 = !DILocation(line: 805, column: 14, scope: !5944)
!5947 = !DILocation(line: 805, column: 12, scope: !5944)
!5948 = !DILocation(line: 806, column: 5, scope: !5944)
!5949 = distinct !{!5949, !5945, !5950}
!5950 = !DILocation(line: 806, column: 13, scope: !5944)
!5951 = !DILocation(line: 807, column: 1, scope: !5944)
!5952 = distinct !DISubprogram(name: "reap", scope: !66, file: !66, line: 714, type: !553, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5953 = !DILocalVariable(name: "pid", arg: 1, scope: !5952, file: !66, line: 714, type: !299)
!5954 = !DILocation(line: 714, column: 13, scope: !5952)
!5955 = !DILocalVariable(name: "status", scope: !5952, file: !66, line: 716, type: !7)
!5956 = !DILocation(line: 716, column: 7, scope: !5952)
!5957 = !DILocalVariable(name: "cpid", scope: !5952, file: !66, line: 717, type: !299)
!5958 = !DILocation(line: 717, column: 9, scope: !5952)
!5959 = !DILocation(line: 717, column: 26, scope: !5952)
!5960 = !DILocation(line: 717, column: 32, scope: !5952)
!5961 = !DILocation(line: 717, column: 53, scope: !5952)
!5962 = !DILocation(line: 717, column: 16, scope: !5952)
!5963 = !DILocation(line: 719, column: 7, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5952, file: !66, line: 719, column: 7)
!5965 = !DILocation(line: 719, column: 12, scope: !5964)
!5966 = !DILocation(line: 719, column: 7, scope: !5952)
!5967 = !DILocation(line: 720, column: 5, scope: !5964)
!5968 = !DILocation(line: 722, column: 16, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5964, file: !66, line: 722, column: 12)
!5970 = !DILocation(line: 722, column: 14, scope: !5969)
!5971 = !DILocation(line: 722, column: 21, scope: !5969)
!5972 = !DILocation(line: 722, column: 29, scope: !5969)
!5973 = !DILocation(line: 722, column: 27, scope: !5969)
!5974 = !DILocation(line: 722, column: 33, scope: !5969)
!5975 = !DILocation(line: 722, column: 49, scope: !5969)
!5976 = !DILocation(line: 722, column: 36, scope: !5969)
!5977 = !DILocation(line: 722, column: 12, scope: !5964)
!5978 = !DILocation(line: 724, column: 13, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !66, line: 724, column: 11)
!5980 = distinct !DILexicalBlock(scope: !5969, file: !66, line: 723, column: 5)
!5981 = !DILocation(line: 724, column: 32, scope: !5979)
!5982 = !DILocation(line: 724, column: 35, scope: !5979)
!5983 = !DILocation(line: 724, column: 11, scope: !5980)
!5984 = !DILocation(line: 725, column: 9, scope: !5979)
!5985 = !DILocation(line: 727, column: 7, scope: !5980)
!5986 = !DILocation(line: 728, column: 5, scope: !5980)
!5987 = !DILocation(line: 730, column: 10, scope: !5952)
!5988 = !DILocation(line: 730, column: 3, scope: !5952)
!5989 = distinct !DISubprogram(name: "delete_proc", scope: !66, file: !66, line: 759, type: !547, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!5990 = !DILocalVariable(name: "pid", arg: 1, scope: !5989, file: !66, line: 759, type: !299)
!5991 = !DILocation(line: 759, column: 20, scope: !5989)
!5992 = !DILocalVariable(name: "test", scope: !5989, file: !66, line: 761, type: !294)
!5993 = !DILocation(line: 761, column: 19, scope: !5989)
!5994 = !DILocation(line: 763, column: 14, scope: !5989)
!5995 = !DILocation(line: 763, column: 8, scope: !5989)
!5996 = !DILocation(line: 763, column: 12, scope: !5989)
!5997 = !DILocalVariable(name: "node", scope: !5989, file: !66, line: 764, type: !293)
!5998 = !DILocation(line: 764, column: 20, scope: !5989)
!5999 = !DILocation(line: 764, column: 40, scope: !5989)
!6000 = !DILocation(line: 764, column: 49, scope: !5989)
!6001 = !DILocation(line: 764, column: 27, scope: !5989)
!6002 = !DILocation(line: 765, column: 9, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5989, file: !66, line: 765, column: 7)
!6004 = !DILocation(line: 765, column: 7, scope: !5989)
!6005 = !DILocation(line: 766, column: 5, scope: !6003)
!6006 = !DILocation(line: 767, column: 3, scope: !5989)
!6007 = !DILocation(line: 767, column: 9, scope: !5989)
!6008 = !DILocation(line: 767, column: 15, scope: !5989)
!6009 = !DILocation(line: 768, column: 3, scope: !5989)
!6010 = !DILocation(line: 769, column: 1, scope: !5989)
!6011 = distinct !DISubprogram(name: "compare", scope: !66, file: !66, line: 2739, type: !476, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6012 = !DILocalVariable(name: "a", arg: 1, scope: !6011, file: !66, line: 2739, type: !447)
!6013 = !DILocation(line: 2739, column: 29, scope: !6011)
!6014 = !DILocalVariable(name: "b", arg: 2, scope: !6011, file: !66, line: 2739, type: !447)
!6015 = !DILocation(line: 2739, column: 51, scope: !6011)
!6016 = !DILocalVariable(name: "diff", scope: !6011, file: !66, line: 2741, type: !7)
!6017 = !DILocation(line: 2741, column: 7, scope: !6011)
!6018 = !DILocalVariable(name: "alen", scope: !6011, file: !66, line: 2742, type: !55)
!6019 = !DILocation(line: 2742, column: 10, scope: !6011)
!6020 = !DILocalVariable(name: "blen", scope: !6011, file: !66, line: 2742, type: !55)
!6021 = !DILocation(line: 2742, column: 16, scope: !6011)
!6022 = !DILocation(line: 2747, column: 7, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6011, file: !66, line: 2747, column: 7)
!6024 = !DILocation(line: 2747, column: 7, scope: !6011)
!6025 = !DILocation(line: 2749, column: 26, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !66, line: 2748, column: 5)
!6027 = !DILocation(line: 2749, column: 29, scope: !6026)
!6028 = !DILocation(line: 2749, column: 14, scope: !6026)
!6029 = !DILocation(line: 2749, column: 12, scope: !6026)
!6030 = !DILocation(line: 2750, column: 11, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6026, file: !66, line: 2750, column: 11)
!6032 = !DILocation(line: 2750, column: 16, scope: !6031)
!6033 = !DILocation(line: 2750, column: 19, scope: !6031)
!6034 = !DILocation(line: 2750, column: 26, scope: !6031)
!6035 = !DILocation(line: 2750, column: 29, scope: !6031)
!6036 = !DILocation(line: 2750, column: 11, scope: !6026)
!6037 = !DILocation(line: 2751, column: 16, scope: !6031)
!6038 = !DILocation(line: 2751, column: 9, scope: !6031)
!6039 = !DILocation(line: 2752, column: 5, scope: !6026)
!6040 = !DILocation(line: 2756, column: 10, scope: !6011)
!6041 = !DILocation(line: 2756, column: 13, scope: !6011)
!6042 = !DILocation(line: 2756, column: 20, scope: !6011)
!6043 = !DILocation(line: 2756, column: 8, scope: !6011)
!6044 = !DILocation(line: 2756, column: 32, scope: !6011)
!6045 = !DILocation(line: 2756, column: 35, scope: !6011)
!6046 = !DILocation(line: 2756, column: 42, scope: !6011)
!6047 = !DILocation(line: 2756, column: 30, scope: !6011)
!6048 = !DILocation(line: 2758, column: 7, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6011, file: !66, line: 2758, column: 7)
!6050 = !DILocation(line: 2758, column: 12, scope: !6049)
!6051 = !DILocation(line: 2758, column: 7, scope: !6011)
!6052 = !DILocation(line: 2759, column: 14, scope: !6049)
!6053 = !DILocation(line: 2759, column: 12, scope: !6049)
!6054 = !DILocation(line: 2759, column: 10, scope: !6049)
!6055 = !DILocation(line: 2759, column: 5, scope: !6049)
!6056 = !DILocation(line: 2760, column: 12, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6049, file: !66, line: 2760, column: 12)
!6058 = !DILocation(line: 2760, column: 17, scope: !6057)
!6059 = !DILocation(line: 2760, column: 12, scope: !6049)
!6060 = !DILocation(line: 2761, column: 10, scope: !6057)
!6061 = !DILocation(line: 2761, column: 5, scope: !6057)
!6062 = !DILocation(line: 2762, column: 12, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6057, file: !66, line: 2762, column: 12)
!6064 = !DILocation(line: 2762, column: 12, scope: !6057)
!6065 = !DILocation(line: 2768, column: 25, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6063, file: !66, line: 2763, column: 5)
!6067 = !DILocation(line: 2768, column: 28, scope: !6066)
!6068 = !DILocation(line: 2768, column: 34, scope: !6066)
!6069 = !DILocation(line: 2768, column: 39, scope: !6066)
!6070 = !DILocation(line: 2768, column: 44, scope: !6066)
!6071 = !DILocation(line: 2768, column: 47, scope: !6066)
!6072 = !DILocation(line: 2768, column: 53, scope: !6066)
!6073 = !DILocation(line: 2768, column: 58, scope: !6066)
!6074 = !DILocation(line: 2768, column: 14, scope: !6066)
!6075 = !DILocation(line: 2768, column: 12, scope: !6066)
!6076 = !DILocation(line: 2769, column: 5, scope: !6066)
!6077 = !DILocation(line: 2770, column: 30, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6063, file: !66, line: 2770, column: 12)
!6079 = !DILocation(line: 2770, column: 33, scope: !6078)
!6080 = !DILocation(line: 2770, column: 39, scope: !6078)
!6081 = !DILocation(line: 2770, column: 42, scope: !6078)
!6082 = !DILocation(line: 2770, column: 48, scope: !6078)
!6083 = !DILocation(line: 2770, column: 22, scope: !6078)
!6084 = !DILocation(line: 2770, column: 20, scope: !6078)
!6085 = !DILocation(line: 2770, column: 12, scope: !6063)
!6086 = !DILocation(line: 2771, column: 12, scope: !6078)
!6087 = !DILocation(line: 2771, column: 19, scope: !6078)
!6088 = !DILocation(line: 2771, column: 17, scope: !6078)
!6089 = !DILocation(line: 2771, column: 31, scope: !6078)
!6090 = !DILocation(line: 2771, column: 39, scope: !6078)
!6091 = !DILocation(line: 2771, column: 36, scope: !6078)
!6092 = !DILocation(line: 2771, column: 10, scope: !6078)
!6093 = !DILocation(line: 2771, column: 5, scope: !6078)
!6094 = !DILocation(line: 2773, column: 10, scope: !6011)
!6095 = !DILocation(line: 2773, column: 21, scope: !6011)
!6096 = !DILocation(line: 2773, column: 20, scope: !6011)
!6097 = !DILocation(line: 2773, column: 28, scope: !6011)
!6098 = !DILocation(line: 2773, column: 3, scope: !6011)
!6099 = !DILocation(line: 2774, column: 1, scope: !6011)
!6100 = distinct !DISubprogram(name: "write_line", scope: !66, file: !66, line: 2782, type: !516, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6101 = !DILocalVariable(name: "line", arg: 1, scope: !6100, file: !66, line: 2782, type: !447)
!6102 = !DILocation(line: 2782, column: 32, scope: !6100)
!6103 = !DILocalVariable(name: "fp", arg: 2, scope: !6100, file: !66, line: 2782, type: !0)
!6104 = !DILocation(line: 2782, column: 44, scope: !6100)
!6105 = !DILocalVariable(name: "output_file", arg: 3, scope: !6100, file: !66, line: 2782, type: !88)
!6106 = !DILocation(line: 2782, column: 60, scope: !6100)
!6107 = !DILocalVariable(name: "buf", scope: !6100, file: !66, line: 2784, type: !9)
!6108 = !DILocation(line: 2784, column: 9, scope: !6100)
!6109 = !DILocation(line: 2784, column: 15, scope: !6100)
!6110 = !DILocation(line: 2784, column: 21, scope: !6100)
!6111 = !DILocalVariable(name: "n_bytes", scope: !6100, file: !66, line: 2785, type: !55)
!6112 = !DILocation(line: 2785, column: 10, scope: !6100)
!6113 = !DILocation(line: 2785, column: 20, scope: !6100)
!6114 = !DILocation(line: 2785, column: 26, scope: !6100)
!6115 = !DILocalVariable(name: "ebuf", scope: !6100, file: !66, line: 2786, type: !9)
!6116 = !DILocation(line: 2786, column: 9, scope: !6100)
!6117 = !DILocation(line: 2786, column: 16, scope: !6100)
!6118 = !DILocation(line: 2786, column: 22, scope: !6100)
!6119 = !DILocation(line: 2786, column: 20, scope: !6100)
!6120 = !DILocation(line: 2788, column: 8, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6100, file: !66, line: 2788, column: 7)
!6122 = !DILocation(line: 2788, column: 20, scope: !6121)
!6123 = !DILocation(line: 2788, column: 23, scope: !6121)
!6124 = !DILocation(line: 2788, column: 7, scope: !6100)
!6125 = !DILocalVariable(name: "c", scope: !6126, file: !66, line: 2791, type: !88)
!6126 = distinct !DILexicalBlock(scope: !6121, file: !66, line: 2789, column: 5)
!6127 = !DILocation(line: 2791, column: 19, scope: !6126)
!6128 = !DILocation(line: 2791, column: 23, scope: !6126)
!6129 = !DILocation(line: 2793, column: 7, scope: !6126)
!6130 = !DILocation(line: 2793, column: 14, scope: !6126)
!6131 = !DILocation(line: 2793, column: 18, scope: !6126)
!6132 = !DILocation(line: 2793, column: 16, scope: !6126)
!6133 = !DILocalVariable(name: "wc", scope: !6134, file: !66, line: 2795, type: !10)
!6134 = distinct !DILexicalBlock(scope: !6126, file: !66, line: 2794, column: 9)
!6135 = !DILocation(line: 2795, column: 16, scope: !6134)
!6136 = !DILocation(line: 2795, column: 23, scope: !6134)
!6137 = !DILocation(line: 2795, column: 21, scope: !6134)
!6138 = !DILocation(line: 2796, column: 15, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6134, file: !66, line: 2796, column: 15)
!6140 = !DILocation(line: 2796, column: 18, scope: !6139)
!6141 = !DILocation(line: 2796, column: 15, scope: !6134)
!6142 = !DILocation(line: 2797, column: 16, scope: !6139)
!6143 = !DILocation(line: 2797, column: 13, scope: !6139)
!6144 = !DILocation(line: 2798, column: 20, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !66, line: 2798, column: 20)
!6146 = !DILocation(line: 2798, column: 25, scope: !6145)
!6147 = !DILocation(line: 2798, column: 22, scope: !6145)
!6148 = !DILocation(line: 2798, column: 20, scope: !6139)
!6149 = !DILocation(line: 2799, column: 16, scope: !6145)
!6150 = !DILocation(line: 2799, column: 13, scope: !6145)
!6151 = !DILocation(line: 2800, column: 15, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6134, file: !66, line: 2800, column: 15)
!6153 = !DILocation(line: 2800, column: 30, scope: !6152)
!6154 = !DILocation(line: 2800, column: 15, scope: !6134)
!6155 = !DILocation(line: 2801, column: 23, scope: !6152)
!6156 = !DILocation(line: 2801, column: 42, scope: !6152)
!6157 = !DILocation(line: 2801, column: 13, scope: !6152)
!6158 = distinct !{!6158, !6129, !6159}
!6159 = !DILocation(line: 2802, column: 9, scope: !6126)
!6160 = !DILocation(line: 2804, column: 19, scope: !6126)
!6161 = !DILocation(line: 2804, column: 7, scope: !6126)
!6162 = !DILocation(line: 2805, column: 5, scope: !6126)
!6163 = !DILocation(line: 2808, column: 18, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6121, file: !66, line: 2807, column: 5)
!6165 = !DILocation(line: 2808, column: 7, scope: !6164)
!6166 = !DILocation(line: 2808, column: 16, scope: !6164)
!6167 = !DILocation(line: 2809, column: 11, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6164, file: !66, line: 2809, column: 11)
!6169 = !DILocation(line: 2809, column: 43, scope: !6168)
!6170 = !DILocation(line: 2809, column: 40, scope: !6168)
!6171 = !DILocation(line: 2809, column: 11, scope: !6164)
!6172 = !DILocation(line: 2810, column: 19, scope: !6168)
!6173 = !DILocation(line: 2810, column: 38, scope: !6168)
!6174 = !DILocation(line: 2810, column: 9, scope: !6168)
!6175 = !DILocation(line: 2811, column: 7, scope: !6164)
!6176 = !DILocation(line: 2811, column: 16, scope: !6164)
!6177 = !DILocation(line: 2813, column: 1, scope: !6100)
!6178 = distinct !DISubprogram(name: "debug_line", scope: !66, file: !66, line: 2368, type: !518, scopeLine: 2369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6179 = !DILocalVariable(name: "line", arg: 1, scope: !6178, file: !66, line: 2368, type: !447)
!6180 = !DILocation(line: 2368, column: 32, scope: !6178)
!6181 = !DILocalVariable(name: "key", scope: !6178, file: !66, line: 2370, type: !423)
!6182 = !DILocation(line: 2370, column: 26, scope: !6178)
!6183 = !DILocation(line: 2370, column: 32, scope: !6178)
!6184 = !DILocation(line: 2372, column: 3, scope: !6178)
!6185 = !DILocation(line: 2373, column: 16, scope: !6178)
!6186 = !DILocation(line: 2373, column: 22, scope: !6178)
!6187 = !DILocation(line: 2373, column: 5, scope: !6178)
!6188 = !DILocation(line: 2374, column: 10, scope: !6178)
!6189 = !DILocation(line: 2374, column: 14, scope: !6178)
!6190 = !DILocation(line: 2374, column: 25, scope: !6178)
!6191 = !DILocation(line: 2374, column: 30, scope: !6178)
!6192 = !DILocation(line: 2374, column: 23, scope: !6178)
!6193 = !DILocation(line: 2374, column: 36, scope: !6178)
!6194 = !DILocation(line: 2374, column: 42, scope: !6178)
!6195 = !DILocation(line: 2374, column: 49, scope: !6178)
!6196 = !DILocation(line: 2374, column: 52, scope: !6178)
!6197 = !DILocation(line: 2374, column: 39, scope: !6178)
!6198 = !DILocation(line: 0, scope: !6178)
!6199 = distinct !{!6199, !6184, !6200}
!6200 = !DILocation(line: 2374, column: 60, scope: !6178)
!6201 = !DILocation(line: 2375, column: 1, scope: !6178)
!6202 = distinct !DISubprogram(name: "debug_key", scope: !66, file: !66, line: 2311, type: !520, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6203 = !DILocalVariable(name: "line", arg: 1, scope: !6202, file: !66, line: 2311, type: !447)
!6204 = !DILocation(line: 2311, column: 31, scope: !6202)
!6205 = !DILocalVariable(name: "key", arg: 2, scope: !6202, file: !66, line: 2311, type: !423)
!6206 = !DILocation(line: 2311, column: 60, scope: !6202)
!6207 = !DILocalVariable(name: "text", scope: !6202, file: !66, line: 2313, type: !9)
!6208 = !DILocation(line: 2313, column: 9, scope: !6202)
!6209 = !DILocation(line: 2313, column: 16, scope: !6202)
!6210 = !DILocation(line: 2313, column: 22, scope: !6202)
!6211 = !DILocalVariable(name: "beg", scope: !6202, file: !66, line: 2314, type: !9)
!6212 = !DILocation(line: 2314, column: 9, scope: !6202)
!6213 = !DILocation(line: 2314, column: 15, scope: !6202)
!6214 = !DILocalVariable(name: "lim", scope: !6202, file: !66, line: 2315, type: !9)
!6215 = !DILocation(line: 2315, column: 9, scope: !6202)
!6216 = !DILocation(line: 2315, column: 15, scope: !6202)
!6217 = !DILocation(line: 2315, column: 22, scope: !6202)
!6218 = !DILocation(line: 2315, column: 28, scope: !6202)
!6219 = !DILocation(line: 2315, column: 20, scope: !6202)
!6220 = !DILocation(line: 2315, column: 35, scope: !6202)
!6221 = !DILocation(line: 2317, column: 7, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6202, file: !66, line: 2317, column: 7)
!6223 = !DILocation(line: 2317, column: 7, scope: !6202)
!6224 = !DILocation(line: 2319, column: 11, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !66, line: 2319, column: 11)
!6226 = distinct !DILexicalBlock(scope: !6222, file: !66, line: 2318, column: 5)
!6227 = !DILocation(line: 2319, column: 16, scope: !6225)
!6228 = !DILocation(line: 2319, column: 22, scope: !6225)
!6229 = !DILocation(line: 2319, column: 11, scope: !6226)
!6230 = !DILocation(line: 2320, column: 25, scope: !6225)
!6231 = !DILocation(line: 2320, column: 31, scope: !6225)
!6232 = !DILocation(line: 2320, column: 15, scope: !6225)
!6233 = !DILocation(line: 2320, column: 13, scope: !6225)
!6234 = !DILocation(line: 2320, column: 9, scope: !6225)
!6235 = !DILocation(line: 2321, column: 11, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6226, file: !66, line: 2321, column: 11)
!6237 = !DILocation(line: 2321, column: 16, scope: !6236)
!6238 = !DILocation(line: 2321, column: 22, scope: !6236)
!6239 = !DILocation(line: 2321, column: 11, scope: !6226)
!6240 = !DILocation(line: 2322, column: 25, scope: !6236)
!6241 = !DILocation(line: 2322, column: 31, scope: !6236)
!6242 = !DILocation(line: 2322, column: 15, scope: !6236)
!6243 = !DILocation(line: 2322, column: 13, scope: !6236)
!6244 = !DILocation(line: 2322, column: 9, scope: !6236)
!6245 = !DILocation(line: 2324, column: 12, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6226, file: !66, line: 2324, column: 11)
!6247 = !DILocation(line: 2324, column: 17, scope: !6246)
!6248 = !DILocation(line: 2324, column: 29, scope: !6246)
!6249 = !DILocation(line: 2324, column: 32, scope: !6246)
!6250 = !DILocation(line: 2324, column: 37, scope: !6246)
!6251 = !DILocation(line: 2324, column: 43, scope: !6246)
!6252 = !DILocation(line: 2325, column: 11, scope: !6246)
!6253 = !DILocation(line: 2325, column: 14, scope: !6246)
!6254 = !DILocation(line: 2325, column: 19, scope: !6246)
!6255 = !DILocation(line: 2325, column: 25, scope: !6246)
!6256 = !DILocation(line: 2325, column: 41, scope: !6246)
!6257 = !DILocation(line: 2325, column: 28, scope: !6246)
!6258 = !DILocation(line: 2324, column: 11, scope: !6226)
!6259 = !DILocalVariable(name: "saved", scope: !6260, file: !66, line: 2327, type: !10)
!6260 = distinct !DILexicalBlock(scope: !6246, file: !66, line: 2326, column: 9)
!6261 = !DILocation(line: 2327, column: 16, scope: !6260)
!6262 = !DILocation(line: 2327, column: 25, scope: !6260)
!6263 = !DILocation(line: 2327, column: 24, scope: !6260)
!6264 = !DILocation(line: 2328, column: 12, scope: !6260)
!6265 = !DILocation(line: 2328, column: 16, scope: !6260)
!6266 = !DILocation(line: 2330, column: 11, scope: !6260)
!6267 = !DILocation(line: 2330, column: 36, scope: !6260)
!6268 = !DILocation(line: 2330, column: 35, scope: !6260)
!6269 = !DILocation(line: 2330, column: 25, scope: !6260)
!6270 = !DILocation(line: 2330, column: 18, scope: !6260)
!6271 = !DILocation(line: 2331, column: 16, scope: !6260)
!6272 = distinct !{!6272, !6266, !6271}
!6273 = !DILocalVariable(name: "tighter_lim", scope: !6260, file: !66, line: 2333, type: !9)
!6274 = !DILocation(line: 2333, column: 17, scope: !6260)
!6275 = !DILocation(line: 2333, column: 31, scope: !6260)
!6276 = !DILocation(line: 2335, column: 15, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6260, file: !66, line: 2335, column: 15)
!6278 = !DILocation(line: 2335, column: 21, scope: !6277)
!6279 = !DILocation(line: 2335, column: 19, scope: !6277)
!6280 = !DILocation(line: 2335, column: 15, scope: !6260)
!6281 = !DILocation(line: 2336, column: 27, scope: !6277)
!6282 = !DILocation(line: 2336, column: 25, scope: !6277)
!6283 = !DILocation(line: 2336, column: 13, scope: !6277)
!6284 = !DILocation(line: 2337, column: 20, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6277, file: !66, line: 2337, column: 20)
!6286 = !DILocation(line: 2337, column: 25, scope: !6285)
!6287 = !DILocation(line: 2337, column: 20, scope: !6277)
!6288 = !DILocation(line: 2338, column: 23, scope: !6285)
!6289 = !DILocation(line: 2338, column: 13, scope: !6285)
!6290 = !DILocation(line: 2339, column: 20, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6285, file: !66, line: 2339, column: 20)
!6292 = !DILocation(line: 2339, column: 25, scope: !6291)
!6293 = !DILocation(line: 2339, column: 20, scope: !6285)
!6294 = !DILocalVariable(name: "__x", scope: !6295, file: !66, line: 2340, type: !483)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !66, line: 2340, column: 13)
!6296 = !DILocation(line: 2340, column: 13, scope: !6295)
!6297 = !{!6298, !6298, i64 0}
!6298 = !{!"long double", !2275, i64 0}
!6299 = !DILocation(line: 2340, column: 13, scope: !6291)
!6300 = !DILocation(line: 2341, column: 20, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !66, line: 2341, column: 20)
!6302 = !DILocation(line: 2341, column: 25, scope: !6301)
!6303 = !DILocation(line: 2341, column: 33, scope: !6301)
!6304 = !DILocation(line: 2341, column: 36, scope: !6301)
!6305 = !DILocation(line: 2341, column: 41, scope: !6301)
!6306 = !DILocation(line: 2341, column: 20, scope: !6291)
!6307 = !DILocalVariable(name: "p", scope: !6308, file: !66, line: 2343, type: !88)
!6308 = distinct !DILexicalBlock(scope: !6301, file: !66, line: 2342, column: 13)
!6309 = !DILocation(line: 2343, column: 27, scope: !6308)
!6310 = !DILocation(line: 2343, column: 31, scope: !6308)
!6311 = !DILocation(line: 2343, column: 38, scope: !6308)
!6312 = !DILocation(line: 2343, column: 44, scope: !6308)
!6313 = !DILocation(line: 2343, column: 42, scope: !6308)
!6314 = !DILocation(line: 2343, column: 48, scope: !6308)
!6315 = !DILocation(line: 2343, column: 52, scope: !6308)
!6316 = !DILocation(line: 2343, column: 51, scope: !6308)
!6317 = !DILocation(line: 2343, column: 56, scope: !6308)
!6318 = !DILocation(line: 0, scope: !6308)
!6319 = !DILocation(line: 2343, column: 35, scope: !6308)
!6320 = !DILocalVariable(name: "max_digit", scope: !6308, file: !66, line: 2344, type: !321)
!6321 = !DILocation(line: 2344, column: 29, scope: !6308)
!6322 = !DILocation(line: 2344, column: 41, scope: !6308)
!6323 = !DILocation(line: 2345, column: 26, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6308, file: !66, line: 2345, column: 19)
!6325 = !DILocation(line: 2345, column: 23, scope: !6324)
!6326 = !DILocation(line: 2345, column: 19, scope: !6308)
!6327 = !DILocalVariable(name: "ch", scope: !6328, file: !66, line: 2347, type: !321)
!6328 = distinct !DILexicalBlock(scope: !6324, file: !66, line: 2346, column: 17)
!6329 = !DILocation(line: 2347, column: 33, scope: !6328)
!6330 = !DILocation(line: 2347, column: 39, scope: !6328)
!6331 = !DILocation(line: 2347, column: 38, scope: !6328)
!6332 = !DILocation(line: 2348, column: 42, scope: !6328)
!6333 = !DILocation(line: 2349, column: 24, scope: !6328)
!6334 = !DILocation(line: 2349, column: 29, scope: !6328)
!6335 = !DILocation(line: 2349, column: 43, scope: !6328)
!6336 = !DILocation(line: 2349, column: 57, scope: !6328)
!6337 = !DILocation(line: 2349, column: 46, scope: !6328)
!6338 = !DILocation(line: 0, scope: !6328)
!6339 = !DILocation(line: 2349, column: 21, scope: !6328)
!6340 = !DILocation(line: 2348, column: 31, scope: !6328)
!6341 = !DILocation(line: 2350, column: 17, scope: !6328)
!6342 = !DILocation(line: 2351, column: 13, scope: !6308)
!6343 = !DILocation(line: 2353, column: 27, scope: !6301)
!6344 = !DILocation(line: 2353, column: 25, scope: !6301)
!6345 = !DILocation(line: 2355, column: 18, scope: !6260)
!6346 = !DILocation(line: 2355, column: 12, scope: !6260)
!6347 = !DILocation(line: 2355, column: 16, scope: !6260)
!6348 = !DILocation(line: 2356, column: 17, scope: !6260)
!6349 = !DILocation(line: 2356, column: 15, scope: !6260)
!6350 = !DILocation(line: 2357, column: 9, scope: !6260)
!6351 = !DILocation(line: 2358, column: 5, scope: !6226)
!6352 = !DILocalVariable(name: "offset", scope: !6202, file: !66, line: 2360, type: !55)
!6353 = !DILocation(line: 2360, column: 10, scope: !6202)
!6354 = !DILocation(line: 2360, column: 32, scope: !6202)
!6355 = !DILocation(line: 2360, column: 38, scope: !6202)
!6356 = !DILocation(line: 2360, column: 19, scope: !6202)
!6357 = !DILocalVariable(name: "width", scope: !6202, file: !66, line: 2361, type: !55)
!6358 = !DILocation(line: 2361, column: 10, scope: !6202)
!6359 = !DILocation(line: 2361, column: 31, scope: !6202)
!6360 = !DILocation(line: 2361, column: 36, scope: !6202)
!6361 = !DILocation(line: 2361, column: 18, scope: !6202)
!6362 = !DILocation(line: 2362, column: 13, scope: !6202)
!6363 = !DILocation(line: 2362, column: 21, scope: !6202)
!6364 = !DILocation(line: 2362, column: 3, scope: !6202)
!6365 = !DILocation(line: 2363, column: 1, scope: !6202)
!6366 = distinct !DISubprogram(name: "begfield", scope: !66, file: !66, line: 1617, type: !470, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6367 = !DILocalVariable(name: "line", arg: 1, scope: !6366, file: !66, line: 1617, type: !447)
!6368 = !DILocation(line: 1617, column: 30, scope: !6366)
!6369 = !DILocalVariable(name: "key", arg: 2, scope: !6366, file: !66, line: 1617, type: !423)
!6370 = !DILocation(line: 1617, column: 59, scope: !6366)
!6371 = !DILocalVariable(name: "ptr", scope: !6366, file: !66, line: 1619, type: !9)
!6372 = !DILocation(line: 1619, column: 9, scope: !6366)
!6373 = !DILocation(line: 1619, column: 15, scope: !6366)
!6374 = !DILocation(line: 1619, column: 21, scope: !6366)
!6375 = !DILocalVariable(name: "lim", scope: !6366, file: !66, line: 1619, type: !9)
!6376 = !DILocation(line: 1619, column: 28, scope: !6366)
!6377 = !DILocation(line: 1619, column: 34, scope: !6366)
!6378 = !DILocation(line: 1619, column: 40, scope: !6366)
!6379 = !DILocation(line: 1619, column: 46, scope: !6366)
!6380 = !DILocation(line: 1619, column: 38, scope: !6366)
!6381 = !DILocation(line: 1619, column: 53, scope: !6366)
!6382 = !DILocalVariable(name: "sword", scope: !6366, file: !66, line: 1620, type: !55)
!6383 = !DILocation(line: 1620, column: 10, scope: !6366)
!6384 = !DILocation(line: 1620, column: 18, scope: !6366)
!6385 = !DILocation(line: 1620, column: 23, scope: !6366)
!6386 = !DILocalVariable(name: "schar", scope: !6366, file: !66, line: 1621, type: !55)
!6387 = !DILocation(line: 1621, column: 10, scope: !6366)
!6388 = !DILocation(line: 1621, column: 18, scope: !6366)
!6389 = !DILocation(line: 1621, column: 23, scope: !6366)
!6390 = !DILocation(line: 1626, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6366, file: !66, line: 1626, column: 7)
!6392 = !DILocation(line: 1626, column: 11, scope: !6391)
!6393 = !DILocation(line: 1626, column: 7, scope: !6366)
!6394 = !DILocation(line: 1627, column: 5, scope: !6391)
!6395 = !DILocation(line: 1627, column: 12, scope: !6391)
!6396 = !DILocation(line: 1627, column: 18, scope: !6391)
!6397 = !DILocation(line: 1627, column: 16, scope: !6391)
!6398 = !DILocation(line: 1627, column: 22, scope: !6391)
!6399 = !DILocation(line: 1627, column: 30, scope: !6391)
!6400 = !DILocation(line: 0, scope: !6391)
!6401 = !DILocation(line: 1629, column: 9, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6391, file: !66, line: 1628, column: 7)
!6403 = !DILocation(line: 1629, column: 16, scope: !6402)
!6404 = !DILocation(line: 1629, column: 22, scope: !6402)
!6405 = !DILocation(line: 1629, column: 20, scope: !6402)
!6406 = !DILocation(line: 1629, column: 26, scope: !6402)
!6407 = !DILocation(line: 1629, column: 30, scope: !6402)
!6408 = !DILocation(line: 1629, column: 29, scope: !6402)
!6409 = !DILocation(line: 1629, column: 37, scope: !6402)
!6410 = !DILocation(line: 1629, column: 34, scope: !6402)
!6411 = !DILocation(line: 0, scope: !6402)
!6412 = !DILocation(line: 1630, column: 11, scope: !6402)
!6413 = distinct !{!6413, !6401, !6414}
!6414 = !DILocation(line: 1630, column: 13, scope: !6402)
!6415 = !DILocation(line: 1631, column: 13, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6402, file: !66, line: 1631, column: 13)
!6417 = !DILocation(line: 1631, column: 19, scope: !6416)
!6418 = !DILocation(line: 1631, column: 17, scope: !6416)
!6419 = !DILocation(line: 1631, column: 13, scope: !6402)
!6420 = !DILocation(line: 1632, column: 11, scope: !6416)
!6421 = distinct !{!6421, !6394, !6422}
!6422 = !DILocation(line: 1633, column: 7, scope: !6391)
!6423 = !DILocation(line: 1635, column: 5, scope: !6391)
!6424 = !DILocation(line: 1635, column: 12, scope: !6391)
!6425 = !DILocation(line: 1635, column: 18, scope: !6391)
!6426 = !DILocation(line: 1635, column: 16, scope: !6391)
!6427 = !DILocation(line: 1635, column: 22, scope: !6391)
!6428 = !DILocation(line: 1635, column: 30, scope: !6391)
!6429 = !DILocation(line: 1637, column: 9, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6391, file: !66, line: 1636, column: 7)
!6431 = !DILocation(line: 1637, column: 16, scope: !6430)
!6432 = !DILocation(line: 1637, column: 22, scope: !6430)
!6433 = !DILocation(line: 1637, column: 20, scope: !6430)
!6434 = !DILocation(line: 1637, column: 26, scope: !6430)
!6435 = !DILocation(line: 1637, column: 47, scope: !6430)
!6436 = !DILocation(line: 1637, column: 46, scope: !6430)
!6437 = !DILocation(line: 1637, column: 36, scope: !6430)
!6438 = !DILocation(line: 1637, column: 29, scope: !6430)
!6439 = !DILocation(line: 0, scope: !6430)
!6440 = !DILocation(line: 1638, column: 11, scope: !6430)
!6441 = distinct !{!6441, !6429, !6442}
!6442 = !DILocation(line: 1638, column: 13, scope: !6430)
!6443 = !DILocation(line: 1639, column: 9, scope: !6430)
!6444 = !DILocation(line: 1639, column: 16, scope: !6430)
!6445 = !DILocation(line: 1639, column: 22, scope: !6430)
!6446 = !DILocation(line: 1639, column: 20, scope: !6430)
!6447 = !DILocation(line: 1639, column: 26, scope: !6430)
!6448 = !DILocation(line: 1639, column: 48, scope: !6430)
!6449 = !DILocation(line: 1639, column: 47, scope: !6430)
!6450 = !DILocation(line: 1639, column: 37, scope: !6430)
!6451 = !DILocation(line: 1639, column: 30, scope: !6430)
!6452 = !DILocation(line: 1639, column: 29, scope: !6430)
!6453 = !DILocation(line: 1640, column: 11, scope: !6430)
!6454 = distinct !{!6454, !6443, !6455}
!6455 = !DILocation(line: 1640, column: 13, scope: !6430)
!6456 = distinct !{!6456, !6423, !6457}
!6457 = !DILocation(line: 1641, column: 7, scope: !6391)
!6458 = !DILocation(line: 1645, column: 7, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6366, file: !66, line: 1645, column: 7)
!6460 = !DILocation(line: 1645, column: 12, scope: !6459)
!6461 = !DILocation(line: 1645, column: 7, scope: !6366)
!6462 = !DILocation(line: 1646, column: 5, scope: !6459)
!6463 = !DILocation(line: 1646, column: 12, scope: !6459)
!6464 = !DILocation(line: 1646, column: 18, scope: !6459)
!6465 = !DILocation(line: 1646, column: 16, scope: !6459)
!6466 = !DILocation(line: 1646, column: 22, scope: !6459)
!6467 = !DILocation(line: 1646, column: 43, scope: !6459)
!6468 = !DILocation(line: 1646, column: 42, scope: !6459)
!6469 = !DILocation(line: 1646, column: 32, scope: !6459)
!6470 = !DILocation(line: 1646, column: 25, scope: !6459)
!6471 = !DILocation(line: 0, scope: !6459)
!6472 = !DILocation(line: 1647, column: 7, scope: !6459)
!6473 = distinct !{!6473, !6462, !6474}
!6474 = !DILocation(line: 1647, column: 9, scope: !6459)
!6475 = !DILocation(line: 1650, column: 9, scope: !6366)
!6476 = !DILocation(line: 1650, column: 7, scope: !6366)
!6477 = !DILocation(line: 1652, column: 10, scope: !6366)
!6478 = !DILocation(line: 1652, column: 3, scope: !6366)
!6479 = distinct !DISubprogram(name: "limfield", scope: !66, file: !66, line: 1659, type: !470, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6480 = !DILocalVariable(name: "line", arg: 1, scope: !6479, file: !66, line: 1659, type: !447)
!6481 = !DILocation(line: 1659, column: 30, scope: !6479)
!6482 = !DILocalVariable(name: "key", arg: 2, scope: !6479, file: !66, line: 1659, type: !423)
!6483 = !DILocation(line: 1659, column: 59, scope: !6479)
!6484 = !DILocalVariable(name: "ptr", scope: !6479, file: !66, line: 1661, type: !9)
!6485 = !DILocation(line: 1661, column: 9, scope: !6479)
!6486 = !DILocation(line: 1661, column: 15, scope: !6479)
!6487 = !DILocation(line: 1661, column: 21, scope: !6479)
!6488 = !DILocalVariable(name: "lim", scope: !6479, file: !66, line: 1661, type: !9)
!6489 = !DILocation(line: 1661, column: 28, scope: !6479)
!6490 = !DILocation(line: 1661, column: 34, scope: !6479)
!6491 = !DILocation(line: 1661, column: 40, scope: !6479)
!6492 = !DILocation(line: 1661, column: 46, scope: !6479)
!6493 = !DILocation(line: 1661, column: 38, scope: !6479)
!6494 = !DILocation(line: 1661, column: 53, scope: !6479)
!6495 = !DILocalVariable(name: "eword", scope: !6479, file: !66, line: 1662, type: !55)
!6496 = !DILocation(line: 1662, column: 10, scope: !6479)
!6497 = !DILocation(line: 1662, column: 18, scope: !6479)
!6498 = !DILocation(line: 1662, column: 23, scope: !6479)
!6499 = !DILocalVariable(name: "echar", scope: !6479, file: !66, line: 1662, type: !55)
!6500 = !DILocation(line: 1662, column: 30, scope: !6479)
!6501 = !DILocation(line: 1662, column: 38, scope: !6479)
!6502 = !DILocation(line: 1662, column: 43, scope: !6479)
!6503 = !DILocation(line: 1664, column: 7, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6479, file: !66, line: 1664, column: 7)
!6505 = !DILocation(line: 1664, column: 13, scope: !6504)
!6506 = !DILocation(line: 1664, column: 7, scope: !6479)
!6507 = !DILocation(line: 1665, column: 10, scope: !6504)
!6508 = !DILocation(line: 1665, column: 5, scope: !6504)
!6509 = !DILocation(line: 1674, column: 7, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6479, file: !66, line: 1674, column: 7)
!6511 = !DILocation(line: 1674, column: 11, scope: !6510)
!6512 = !DILocation(line: 1674, column: 7, scope: !6479)
!6513 = !DILocation(line: 1675, column: 5, scope: !6510)
!6514 = !DILocation(line: 1675, column: 12, scope: !6510)
!6515 = !DILocation(line: 1675, column: 18, scope: !6510)
!6516 = !DILocation(line: 1675, column: 16, scope: !6510)
!6517 = !DILocation(line: 1675, column: 22, scope: !6510)
!6518 = !DILocation(line: 1675, column: 30, scope: !6510)
!6519 = !DILocation(line: 0, scope: !6510)
!6520 = !DILocation(line: 1677, column: 9, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6510, file: !66, line: 1676, column: 7)
!6522 = !DILocation(line: 1677, column: 16, scope: !6521)
!6523 = !DILocation(line: 1677, column: 22, scope: !6521)
!6524 = !DILocation(line: 1677, column: 20, scope: !6521)
!6525 = !DILocation(line: 1677, column: 26, scope: !6521)
!6526 = !DILocation(line: 1677, column: 30, scope: !6521)
!6527 = !DILocation(line: 1677, column: 29, scope: !6521)
!6528 = !DILocation(line: 1677, column: 37, scope: !6521)
!6529 = !DILocation(line: 1677, column: 34, scope: !6521)
!6530 = !DILocation(line: 0, scope: !6521)
!6531 = !DILocation(line: 1678, column: 11, scope: !6521)
!6532 = distinct !{!6532, !6520, !6533}
!6533 = !DILocation(line: 1678, column: 13, scope: !6521)
!6534 = !DILocation(line: 1679, column: 13, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6521, file: !66, line: 1679, column: 13)
!6536 = !DILocation(line: 1679, column: 19, scope: !6535)
!6537 = !DILocation(line: 1679, column: 17, scope: !6535)
!6538 = !DILocation(line: 1679, column: 23, scope: !6535)
!6539 = !DILocation(line: 1679, column: 27, scope: !6535)
!6540 = !DILocation(line: 1679, column: 33, scope: !6535)
!6541 = !DILocation(line: 1679, column: 36, scope: !6535)
!6542 = !DILocation(line: 1679, column: 13, scope: !6521)
!6543 = !DILocation(line: 1680, column: 11, scope: !6535)
!6544 = distinct !{!6544, !6513, !6545}
!6545 = !DILocation(line: 1681, column: 7, scope: !6510)
!6546 = !DILocation(line: 1683, column: 5, scope: !6510)
!6547 = !DILocation(line: 1683, column: 12, scope: !6510)
!6548 = !DILocation(line: 1683, column: 18, scope: !6510)
!6549 = !DILocation(line: 1683, column: 16, scope: !6510)
!6550 = !DILocation(line: 1683, column: 22, scope: !6510)
!6551 = !DILocation(line: 1683, column: 30, scope: !6510)
!6552 = !DILocation(line: 1685, column: 9, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6510, file: !66, line: 1684, column: 7)
!6554 = !DILocation(line: 1685, column: 16, scope: !6553)
!6555 = !DILocation(line: 1685, column: 22, scope: !6553)
!6556 = !DILocation(line: 1685, column: 20, scope: !6553)
!6557 = !DILocation(line: 1685, column: 26, scope: !6553)
!6558 = !DILocation(line: 1685, column: 47, scope: !6553)
!6559 = !DILocation(line: 1685, column: 46, scope: !6553)
!6560 = !DILocation(line: 1685, column: 36, scope: !6553)
!6561 = !DILocation(line: 1685, column: 29, scope: !6553)
!6562 = !DILocation(line: 0, scope: !6553)
!6563 = !DILocation(line: 1686, column: 11, scope: !6553)
!6564 = distinct !{!6564, !6552, !6565}
!6565 = !DILocation(line: 1686, column: 13, scope: !6553)
!6566 = !DILocation(line: 1687, column: 9, scope: !6553)
!6567 = !DILocation(line: 1687, column: 16, scope: !6553)
!6568 = !DILocation(line: 1687, column: 22, scope: !6553)
!6569 = !DILocation(line: 1687, column: 20, scope: !6553)
!6570 = !DILocation(line: 1687, column: 26, scope: !6553)
!6571 = !DILocation(line: 1687, column: 48, scope: !6553)
!6572 = !DILocation(line: 1687, column: 47, scope: !6553)
!6573 = !DILocation(line: 1687, column: 37, scope: !6553)
!6574 = !DILocation(line: 1687, column: 30, scope: !6553)
!6575 = !DILocation(line: 1687, column: 29, scope: !6553)
!6576 = !DILocation(line: 1688, column: 11, scope: !6553)
!6577 = distinct !{!6577, !6566, !6578}
!6578 = !DILocation(line: 1688, column: 13, scope: !6553)
!6579 = distinct !{!6579, !6546, !6580}
!6580 = !DILocation(line: 1689, column: 7, scope: !6510)
!6581 = !DILocation(line: 1742, column: 7, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6479, file: !66, line: 1742, column: 7)
!6583 = !DILocation(line: 1742, column: 13, scope: !6582)
!6584 = !DILocation(line: 1742, column: 7, scope: !6479)
!6585 = !DILocation(line: 1746, column: 11, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !66, line: 1746, column: 11)
!6587 = distinct !DILexicalBlock(scope: !6582, file: !66, line: 1743, column: 5)
!6588 = !DILocation(line: 1746, column: 16, scope: !6586)
!6589 = !DILocation(line: 1746, column: 11, scope: !6587)
!6590 = !DILocation(line: 1747, column: 9, scope: !6586)
!6591 = !DILocation(line: 1747, column: 16, scope: !6586)
!6592 = !DILocation(line: 1747, column: 22, scope: !6586)
!6593 = !DILocation(line: 1747, column: 20, scope: !6586)
!6594 = !DILocation(line: 1747, column: 26, scope: !6586)
!6595 = !DILocation(line: 1747, column: 47, scope: !6586)
!6596 = !DILocation(line: 1747, column: 46, scope: !6586)
!6597 = !DILocation(line: 1747, column: 36, scope: !6586)
!6598 = !DILocation(line: 1747, column: 29, scope: !6586)
!6599 = !DILocation(line: 0, scope: !6586)
!6600 = !DILocation(line: 1748, column: 11, scope: !6586)
!6601 = distinct !{!6601, !6590, !6602}
!6602 = !DILocation(line: 1748, column: 13, scope: !6586)
!6603 = !DILocation(line: 1751, column: 13, scope: !6587)
!6604 = !DILocation(line: 1751, column: 11, scope: !6587)
!6605 = !DILocation(line: 1752, column: 5, scope: !6587)
!6606 = !DILocation(line: 1754, column: 10, scope: !6479)
!6607 = !DILocation(line: 1754, column: 3, scope: !6479)
!6608 = distinct !DISubprogram(name: "key_numeric", scope: !66, file: !66, line: 2302, type: !421, scopeLine: 2303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6609 = !DILocalVariable(name: "key", arg: 1, scope: !6608, file: !66, line: 2302, type: !423)
!6610 = !DILocation(line: 2302, column: 37, scope: !6608)
!6611 = !DILocation(line: 2304, column: 10, scope: !6608)
!6612 = !DILocation(line: 2304, column: 15, scope: !6608)
!6613 = !DILocation(line: 2304, column: 23, scope: !6608)
!6614 = !DILocation(line: 2304, column: 26, scope: !6608)
!6615 = !DILocation(line: 2304, column: 31, scope: !6608)
!6616 = !DILocation(line: 2304, column: 47, scope: !6608)
!6617 = !DILocation(line: 2304, column: 50, scope: !6608)
!6618 = !DILocation(line: 2304, column: 55, scope: !6608)
!6619 = !DILocation(line: 2304, column: 3, scope: !6608)
!6620 = distinct !DISubprogram(name: "getmonth", scope: !66, file: !66, line: 2054, type: !489, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6621 = !DILocalVariable(name: "month", arg: 1, scope: !6620, file: !66, line: 2054, type: !88)
!6622 = !DILocation(line: 2054, column: 23, scope: !6620)
!6623 = !DILocalVariable(name: "ea", arg: 2, scope: !6620, file: !66, line: 2054, type: !92)
!6624 = !DILocation(line: 2054, column: 37, scope: !6620)
!6625 = !DILocalVariable(name: "lo", scope: !6620, file: !66, line: 2056, type: !55)
!6626 = !DILocation(line: 2056, column: 10, scope: !6620)
!6627 = !DILocalVariable(name: "hi", scope: !6620, file: !66, line: 2057, type: !55)
!6628 = !DILocation(line: 2057, column: 10, scope: !6620)
!6629 = !DILocation(line: 2059, column: 3, scope: !6620)
!6630 = !DILocation(line: 2059, column: 28, scope: !6620)
!6631 = !DILocation(line: 2059, column: 27, scope: !6620)
!6632 = !DILocation(line: 2059, column: 17, scope: !6620)
!6633 = !DILocation(line: 2059, column: 10, scope: !6620)
!6634 = !DILocation(line: 2060, column: 10, scope: !6620)
!6635 = distinct !{!6635, !6629, !6634}
!6636 = !DILocation(line: 2062, column: 3, scope: !6620)
!6637 = !DILocalVariable(name: "ix", scope: !6638, file: !66, line: 2064, type: !55)
!6638 = distinct !DILexicalBlock(scope: !6620, file: !66, line: 2063, column: 5)
!6639 = !DILocation(line: 2064, column: 14, scope: !6638)
!6640 = !DILocation(line: 2064, column: 20, scope: !6638)
!6641 = !DILocation(line: 2064, column: 25, scope: !6638)
!6642 = !DILocation(line: 2064, column: 23, scope: !6638)
!6643 = !DILocation(line: 2064, column: 29, scope: !6638)
!6644 = !DILocalVariable(name: "m", scope: !6638, file: !66, line: 2065, type: !88)
!6645 = !DILocation(line: 2065, column: 19, scope: !6638)
!6646 = !DILocation(line: 2065, column: 23, scope: !6638)
!6647 = !DILocalVariable(name: "n", scope: !6638, file: !66, line: 2066, type: !88)
!6648 = !DILocation(line: 2066, column: 19, scope: !6638)
!6649 = !DILocation(line: 2066, column: 32, scope: !6638)
!6650 = !DILocation(line: 2066, column: 23, scope: !6638)
!6651 = !DILocation(line: 2066, column: 36, scope: !6638)
!6652 = !DILocation(line: 2068, column: 7, scope: !6638)
!6653 = !DILocation(line: 2070, column: 17, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !66, line: 2070, column: 15)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !66, line: 2069, column: 9)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !66, line: 2068, column: 7)
!6657 = distinct !DILexicalBlock(scope: !6638, file: !66, line: 2068, column: 7)
!6658 = !DILocation(line: 2070, column: 16, scope: !6654)
!6659 = !DILocation(line: 2070, column: 15, scope: !6655)
!6660 = !DILocation(line: 2072, column: 19, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !66, line: 2072, column: 19)
!6662 = distinct !DILexicalBlock(scope: !6654, file: !66, line: 2071, column: 13)
!6663 = !DILocation(line: 2072, column: 19, scope: !6662)
!6664 = !DILocation(line: 2073, column: 32, scope: !6661)
!6665 = !DILocation(line: 2073, column: 18, scope: !6661)
!6666 = !DILocation(line: 2073, column: 21, scope: !6661)
!6667 = !DILocation(line: 2073, column: 17, scope: !6661)
!6668 = !DILocation(line: 2074, column: 31, scope: !6662)
!6669 = !DILocation(line: 2074, column: 22, scope: !6662)
!6670 = !DILocation(line: 2074, column: 35, scope: !6662)
!6671 = !DILocation(line: 2074, column: 15, scope: !6662)
!6672 = !DILocation(line: 2076, column: 49, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6655, file: !66, line: 2076, column: 15)
!6674 = !DILocation(line: 2076, column: 48, scope: !6673)
!6675 = !DILocation(line: 2076, column: 38, scope: !6673)
!6676 = !DILocation(line: 2076, column: 25, scope: !6673)
!6677 = !DILocation(line: 2076, column: 15, scope: !6673)
!6678 = !DILocation(line: 2076, column: 67, scope: !6673)
!6679 = !DILocation(line: 2076, column: 66, scope: !6673)
!6680 = !DILocation(line: 2076, column: 56, scope: !6673)
!6681 = !DILocation(line: 2076, column: 54, scope: !6673)
!6682 = !DILocation(line: 2076, column: 15, scope: !6655)
!6683 = !DILocation(line: 2078, column: 20, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6673, file: !66, line: 2077, column: 13)
!6685 = !DILocation(line: 2078, column: 18, scope: !6684)
!6686 = !DILocation(line: 2079, column: 15, scope: !6684)
!6687 = !DILocation(line: 2081, column: 54, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6673, file: !66, line: 2081, column: 20)
!6689 = !DILocation(line: 2081, column: 53, scope: !6688)
!6690 = !DILocation(line: 2081, column: 43, scope: !6688)
!6691 = !DILocation(line: 2081, column: 30, scope: !6688)
!6692 = !DILocation(line: 2081, column: 20, scope: !6688)
!6693 = !DILocation(line: 2081, column: 72, scope: !6688)
!6694 = !DILocation(line: 2081, column: 71, scope: !6688)
!6695 = !DILocation(line: 2081, column: 61, scope: !6688)
!6696 = !DILocation(line: 2081, column: 59, scope: !6688)
!6697 = !DILocation(line: 2081, column: 20, scope: !6673)
!6698 = !DILocation(line: 2083, column: 20, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6688, file: !66, line: 2082, column: 13)
!6700 = !DILocation(line: 2083, column: 23, scope: !6699)
!6701 = !DILocation(line: 2083, column: 18, scope: !6699)
!6702 = !DILocation(line: 2084, column: 15, scope: !6699)
!6703 = !DILocation(line: 2086, column: 9, scope: !6655)
!6704 = !DILocation(line: 2068, column: 16, scope: !6656)
!6705 = !DILocation(line: 2068, column: 21, scope: !6656)
!6706 = !DILocation(line: 2068, column: 7, scope: !6656)
!6707 = distinct !{!6707, !6708, !6709}
!6708 = !DILocation(line: 2068, column: 7, scope: !6657)
!6709 = !DILocation(line: 2086, column: 9, scope: !6657)
!6710 = !DILocation(line: 2087, column: 5, scope: !6638)
!6711 = !DILocation(line: 2088, column: 10, scope: !6620)
!6712 = !DILocation(line: 2088, column: 15, scope: !6620)
!6713 = !DILocation(line: 2088, column: 13, scope: !6620)
!6714 = distinct !{!6714, !6636, !6715}
!6715 = !DILocation(line: 2088, column: 17, scope: !6620)
!6716 = !DILocation(line: 2090, column: 3, scope: !6620)
!6717 = !DILocation(line: 2091, column: 1, scope: !6620)
!6718 = distinct !DISubprogram(name: "traverse_raw_number", scope: !66, file: !66, line: 1911, type: !487, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6719 = !DILocalVariable(name: "number", arg: 1, scope: !6718, file: !66, line: 1911, type: !378)
!6720 = !DILocation(line: 1911, column: 35, scope: !6718)
!6721 = !DILocalVariable(name: "p", scope: !6718, file: !66, line: 1913, type: !88)
!6722 = !DILocation(line: 1913, column: 15, scope: !6718)
!6723 = !DILocation(line: 1913, column: 20, scope: !6718)
!6724 = !DILocation(line: 1913, column: 19, scope: !6718)
!6725 = !DILocalVariable(name: "ch", scope: !6718, file: !66, line: 1914, type: !321)
!6726 = !DILocation(line: 1914, column: 17, scope: !6718)
!6727 = !DILocalVariable(name: "max_digit", scope: !6718, file: !66, line: 1915, type: !321)
!6728 = !DILocation(line: 1915, column: 17, scope: !6718)
!6729 = !DILocalVariable(name: "ends_with_thousands_sep", scope: !6718, file: !66, line: 1916, type: !103)
!6730 = !DILocation(line: 1916, column: 8, scope: !6718)
!6731 = !DILocation(line: 1924, column: 3, scope: !6718)
!6732 = !DILocation(line: 1924, column: 10, scope: !6718)
!6733 = !DILocation(line: 1926, column: 11, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !66, line: 1926, column: 11)
!6735 = distinct !DILexicalBlock(scope: !6718, file: !66, line: 1925, column: 5)
!6736 = !DILocation(line: 1926, column: 23, scope: !6734)
!6737 = !DILocation(line: 1926, column: 21, scope: !6734)
!6738 = !DILocation(line: 1926, column: 11, scope: !6735)
!6739 = !DILocation(line: 1927, column: 21, scope: !6734)
!6740 = !DILocation(line: 1927, column: 19, scope: !6734)
!6741 = !DILocation(line: 1927, column: 9, scope: !6734)
!6742 = !DILocation(line: 1932, column: 35, scope: !6735)
!6743 = !DILocation(line: 1932, column: 34, scope: !6735)
!6744 = !DILocation(line: 1932, column: 40, scope: !6735)
!6745 = !DILocation(line: 1932, column: 37, scope: !6735)
!6746 = !DILocation(line: 1932, column: 31, scope: !6735)
!6747 = !DILocation(line: 1933, column: 11, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6735, file: !66, line: 1933, column: 11)
!6749 = !DILocation(line: 1933, column: 11, scope: !6735)
!6750 = !DILocation(line: 1934, column: 9, scope: !6748)
!6751 = distinct !{!6751, !6731, !6752}
!6752 = !DILocation(line: 1935, column: 5, scope: !6718)
!6753 = !DILocation(line: 1937, column: 7, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6718, file: !66, line: 1937, column: 7)
!6755 = !DILocation(line: 1937, column: 7, scope: !6718)
!6756 = !DILocation(line: 1940, column: 17, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !66, line: 1938, column: 5)
!6758 = !DILocation(line: 1940, column: 19, scope: !6757)
!6759 = !DILocation(line: 1940, column: 8, scope: !6757)
!6760 = !DILocation(line: 1940, column: 15, scope: !6757)
!6761 = !DILocation(line: 1941, column: 14, scope: !6757)
!6762 = !DILocation(line: 1941, column: 7, scope: !6757)
!6763 = !DILocation(line: 1944, column: 7, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6718, file: !66, line: 1944, column: 7)
!6765 = !DILocation(line: 1944, column: 13, scope: !6764)
!6766 = !DILocation(line: 1944, column: 10, scope: !6764)
!6767 = !DILocation(line: 1944, column: 7, scope: !6718)
!6768 = !DILocation(line: 1945, column: 5, scope: !6764)
!6769 = !DILocation(line: 1945, column: 12, scope: !6764)
!6770 = !DILocation(line: 1946, column: 11, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6764, file: !66, line: 1946, column: 11)
!6772 = !DILocation(line: 1946, column: 23, scope: !6771)
!6773 = !DILocation(line: 1946, column: 21, scope: !6771)
!6774 = !DILocation(line: 1946, column: 11, scope: !6764)
!6775 = !DILocation(line: 1947, column: 21, scope: !6771)
!6776 = !DILocation(line: 1947, column: 19, scope: !6771)
!6777 = !DILocation(line: 1947, column: 9, scope: !6771)
!6778 = distinct !{!6778, !6768, !6779}
!6779 = !DILocation(line: 1947, column: 21, scope: !6764)
!6780 = !DILocation(line: 1949, column: 13, scope: !6718)
!6781 = !DILocation(line: 1949, column: 15, scope: !6718)
!6782 = !DILocation(line: 1949, column: 4, scope: !6718)
!6783 = !DILocation(line: 1949, column: 11, scope: !6718)
!6784 = !DILocation(line: 1950, column: 10, scope: !6718)
!6785 = !DILocation(line: 1950, column: 3, scope: !6718)
!6786 = !DILocation(line: 1951, column: 1, scope: !6718)
!6787 = distinct !DISubprogram(name: "debug_width", scope: !66, file: !66, line: 2270, type: !522, scopeLine: 2271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6788 = !DILocalVariable(name: "text", arg: 1, scope: !6787, file: !66, line: 2270, type: !88)
!6789 = !DILocation(line: 2270, column: 26, scope: !6787)
!6790 = !DILocalVariable(name: "lim", arg: 2, scope: !6787, file: !66, line: 2270, type: !88)
!6791 = !DILocation(line: 2270, column: 44, scope: !6787)
!6792 = !DILocalVariable(name: "width", scope: !6787, file: !66, line: 2272, type: !55)
!6793 = !DILocation(line: 2272, column: 10, scope: !6787)
!6794 = !DILocation(line: 2272, column: 29, scope: !6787)
!6795 = !DILocation(line: 2272, column: 35, scope: !6787)
!6796 = !DILocation(line: 2272, column: 41, scope: !6787)
!6797 = !DILocation(line: 2272, column: 39, scope: !6787)
!6798 = !DILocation(line: 2272, column: 18, scope: !6787)
!6799 = !DILocation(line: 2273, column: 3, scope: !6787)
!6800 = !DILocation(line: 2273, column: 10, scope: !6787)
!6801 = !DILocation(line: 2273, column: 17, scope: !6787)
!6802 = !DILocation(line: 2273, column: 15, scope: !6787)
!6803 = !DILocation(line: 2274, column: 20, scope: !6787)
!6804 = !DILocation(line: 2274, column: 15, scope: !6787)
!6805 = !DILocation(line: 2274, column: 23, scope: !6787)
!6806 = !DILocation(line: 2274, column: 14, scope: !6787)
!6807 = !DILocation(line: 2274, column: 11, scope: !6787)
!6808 = distinct !{!6808, !6799, !6809}
!6809 = !DILocation(line: 2274, column: 30, scope: !6787)
!6810 = !DILocation(line: 2275, column: 10, scope: !6787)
!6811 = !DILocation(line: 2275, column: 3, scope: !6787)
!6812 = distinct !DISubprogram(name: "mark_key", scope: !66, file: !66, line: 2282, type: !524, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6813 = !DILocalVariable(name: "offset", arg: 1, scope: !6812, file: !66, line: 2282, type: !55)
!6814 = !DILocation(line: 2282, column: 18, scope: !6812)
!6815 = !DILocalVariable(name: "width", arg: 2, scope: !6812, file: !66, line: 2282, type: !55)
!6816 = !DILocation(line: 2282, column: 33, scope: !6812)
!6817 = !DILocation(line: 2284, column: 3, scope: !6812)
!6818 = !DILocation(line: 2284, column: 16, scope: !6812)
!6819 = !DILocation(line: 2285, column: 5, scope: !6812)
!6820 = distinct !{!6820, !6817, !6819}
!6821 = !DILocation(line: 2287, column: 8, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6812, file: !66, line: 2287, column: 7)
!6823 = !DILocation(line: 2287, column: 7, scope: !6812)
!6824 = !DILocation(line: 2288, column: 13, scope: !6822)
!6825 = !DILocation(line: 2288, column: 5, scope: !6822)
!6826 = !DILocation(line: 2291, column: 7, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6822, file: !66, line: 2290, column: 5)
!6828 = !DILocation(line: 2292, column: 9, scope: !6827)
!6829 = !DILocation(line: 2293, column: 14, scope: !6827)
!6830 = distinct !{!6830, !6826, !6831}
!6831 = !DILocation(line: 2293, column: 21, scope: !6827)
!6832 = !DILocation(line: 2295, column: 7, scope: !6827)
!6833 = !DILocation(line: 2297, column: 1, scope: !6812)
!6834 = distinct !DISubprogram(name: "keycompare", scope: !66, file: !66, line: 2534, type: !476, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!6835 = !DILocalVariable(name: "a", arg: 1, scope: !6834, file: !66, line: 2534, type: !447)
!6836 = !DILocation(line: 2534, column: 32, scope: !6834)
!6837 = !DILocalVariable(name: "b", arg: 2, scope: !6834, file: !66, line: 2534, type: !447)
!6838 = !DILocation(line: 2534, column: 54, scope: !6834)
!6839 = !DILocalVariable(name: "key", scope: !6834, file: !66, line: 2536, type: !93)
!6840 = !DILocation(line: 2536, column: 20, scope: !6834)
!6841 = !DILocation(line: 2536, column: 26, scope: !6834)
!6842 = !DILocalVariable(name: "texta", scope: !6834, file: !66, line: 2540, type: !9)
!6843 = !DILocation(line: 2540, column: 9, scope: !6834)
!6844 = !DILocation(line: 2540, column: 17, scope: !6834)
!6845 = !DILocation(line: 2540, column: 20, scope: !6834)
!6846 = !DILocalVariable(name: "textb", scope: !6834, file: !66, line: 2541, type: !9)
!6847 = !DILocation(line: 2541, column: 9, scope: !6834)
!6848 = !DILocation(line: 2541, column: 17, scope: !6834)
!6849 = !DILocation(line: 2541, column: 20, scope: !6834)
!6850 = !DILocalVariable(name: "lima", scope: !6834, file: !66, line: 2542, type: !9)
!6851 = !DILocation(line: 2542, column: 9, scope: !6834)
!6852 = !DILocation(line: 2542, column: 16, scope: !6834)
!6853 = !DILocation(line: 2542, column: 19, scope: !6834)
!6854 = !DILocalVariable(name: "limb", scope: !6834, file: !66, line: 2543, type: !9)
!6855 = !DILocation(line: 2543, column: 9, scope: !6834)
!6856 = !DILocation(line: 2543, column: 16, scope: !6834)
!6857 = !DILocation(line: 2543, column: 19, scope: !6834)
!6858 = !DILocalVariable(name: "diff", scope: !6834, file: !66, line: 2545, type: !7)
!6859 = !DILocation(line: 2545, column: 7, scope: !6834)
!6860 = !DILocation(line: 2547, column: 3, scope: !6834)
!6861 = !DILocalVariable(name: "translate", scope: !6862, file: !66, line: 2549, type: !88)
!6862 = distinct !DILexicalBlock(scope: !6834, file: !66, line: 2548, column: 5)
!6863 = !DILocation(line: 2549, column: 19, scope: !6862)
!6864 = !DILocation(line: 2549, column: 31, scope: !6862)
!6865 = !DILocation(line: 2549, column: 36, scope: !6862)
!6866 = !DILocalVariable(name: "ignore", scope: !6862, file: !66, line: 2550, type: !101)
!6867 = !DILocation(line: 2550, column: 19, scope: !6862)
!6868 = !DILocation(line: 2550, column: 28, scope: !6862)
!6869 = !DILocation(line: 2550, column: 33, scope: !6862)
!6870 = !DILocation(line: 2553, column: 14, scope: !6862)
!6871 = !DILocation(line: 2553, column: 12, scope: !6862)
!6872 = !DILocation(line: 2554, column: 14, scope: !6862)
!6873 = !DILocation(line: 2554, column: 12, scope: !6862)
!6874 = !DILocalVariable(name: "lena", scope: !6862, file: !66, line: 2557, type: !55)
!6875 = !DILocation(line: 2557, column: 14, scope: !6862)
!6876 = !DILocation(line: 2557, column: 21, scope: !6862)
!6877 = !DILocation(line: 2557, column: 28, scope: !6862)
!6878 = !DILocation(line: 2557, column: 26, scope: !6862)
!6879 = !DILocalVariable(name: "lenb", scope: !6862, file: !66, line: 2558, type: !55)
!6880 = !DILocation(line: 2558, column: 14, scope: !6862)
!6881 = !DILocation(line: 2558, column: 21, scope: !6862)
!6882 = !DILocation(line: 2558, column: 28, scope: !6862)
!6883 = !DILocation(line: 2558, column: 26, scope: !6862)
!6884 = !DILocation(line: 2560, column: 11, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6862, file: !66, line: 2560, column: 11)
!6886 = !DILocation(line: 2560, column: 27, scope: !6885)
!6887 = !DILocation(line: 2560, column: 43, scope: !6885)
!6888 = !DILocation(line: 2560, column: 30, scope: !6885)
!6889 = !DILocation(line: 2561, column: 11, scope: !6885)
!6890 = !DILocation(line: 2561, column: 14, scope: !6885)
!6891 = !DILocation(line: 2561, column: 19, scope: !6885)
!6892 = !DILocation(line: 2561, column: 25, scope: !6885)
!6893 = !DILocation(line: 2561, column: 28, scope: !6885)
!6894 = !DILocation(line: 2561, column: 33, scope: !6885)
!6895 = !DILocation(line: 2561, column: 40, scope: !6885)
!6896 = !DILocation(line: 2561, column: 43, scope: !6885)
!6897 = !DILocation(line: 2561, column: 48, scope: !6885)
!6898 = !DILocation(line: 2560, column: 11, scope: !6862)
!6899 = !DILocalVariable(name: "ta", scope: !6900, file: !66, line: 2563, type: !9)
!6900 = distinct !DILexicalBlock(scope: !6885, file: !66, line: 2562, column: 9)
!6901 = !DILocation(line: 2563, column: 17, scope: !6900)
!6902 = !DILocalVariable(name: "tb", scope: !6900, file: !66, line: 2564, type: !9)
!6903 = !DILocation(line: 2564, column: 17, scope: !6900)
!6904 = !DILocalVariable(name: "tlena", scope: !6900, file: !66, line: 2565, type: !55)
!6905 = !DILocation(line: 2565, column: 18, scope: !6900)
!6906 = !DILocalVariable(name: "tlenb", scope: !6900, file: !66, line: 2566, type: !55)
!6907 = !DILocation(line: 2566, column: 18, scope: !6900)
!6908 = !DILocalVariable(name: "enda", scope: !6900, file: !66, line: 2568, type: !10)
!6909 = !DILocation(line: 2568, column: 16, scope: !6900)
!6910 = !DILocalVariable(name: "endb", scope: !6900, file: !66, line: 2569, type: !10)
!6911 = !DILocation(line: 2569, column: 16, scope: !6900)
!6912 = !DILocalVariable(name: "allocated", scope: !6900, file: !66, line: 2570, type: !53)
!6913 = !DILocation(line: 2570, column: 17, scope: !6900)
!6914 = !DILocalVariable(name: "stackbuf", scope: !6900, file: !66, line: 2571, type: !478)
!6915 = !DILocation(line: 2571, column: 16, scope: !6900)
!6916 = !DILocation(line: 2573, column: 15, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6900, file: !66, line: 2573, column: 15)
!6918 = !DILocation(line: 2573, column: 22, scope: !6917)
!6919 = !DILocation(line: 2573, column: 25, scope: !6917)
!6920 = !DILocation(line: 2573, column: 15, scope: !6900)
!6921 = !DILocalVariable(name: "i", scope: !6922, file: !66, line: 2579, type: !55)
!6922 = distinct !DILexicalBlock(scope: !6917, file: !66, line: 2574, column: 13)
!6923 = !DILocation(line: 2579, column: 22, scope: !6922)
!6924 = !DILocalVariable(name: "size", scope: !6922, file: !66, line: 2582, type: !55)
!6925 = !DILocation(line: 2582, column: 22, scope: !6922)
!6926 = !DILocation(line: 2582, column: 29, scope: !6922)
!6927 = !DILocation(line: 2582, column: 34, scope: !6922)
!6928 = !DILocation(line: 2582, column: 40, scope: !6922)
!6929 = !DILocation(line: 2582, column: 38, scope: !6922)
!6930 = !DILocation(line: 2582, column: 45, scope: !6922)
!6931 = !DILocation(line: 2583, column: 19, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6922, file: !66, line: 2583, column: 19)
!6933 = !DILocation(line: 2583, column: 24, scope: !6932)
!6934 = !DILocation(line: 2583, column: 19, scope: !6922)
!6935 = !DILocation(line: 2584, column: 22, scope: !6932)
!6936 = !DILocation(line: 2584, column: 20, scope: !6932)
!6937 = !DILocation(line: 2584, column: 42, scope: !6932)
!6938 = !DILocation(line: 2584, column: 17, scope: !6932)
!6939 = !DILocation(line: 2586, column: 43, scope: !6932)
!6940 = !DILocation(line: 2586, column: 34, scope: !6932)
!6941 = !DILocation(line: 2586, column: 32, scope: !6932)
!6942 = !DILocation(line: 2586, column: 20, scope: !6932)
!6943 = !DILocation(line: 2587, column: 20, scope: !6922)
!6944 = !DILocation(line: 2587, column: 25, scope: !6922)
!6945 = !DILocation(line: 2587, column: 23, scope: !6922)
!6946 = !DILocation(line: 2587, column: 30, scope: !6922)
!6947 = !DILocation(line: 2587, column: 18, scope: !6922)
!6948 = !DILocation(line: 2591, column: 30, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6922, file: !66, line: 2591, column: 15)
!6950 = !DILocation(line: 2591, column: 26, scope: !6949)
!6951 = !DILocation(line: 2591, column: 20, scope: !6949)
!6952 = !DILocation(line: 2591, column: 35, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !66, line: 2591, column: 15)
!6954 = !DILocation(line: 2591, column: 39, scope: !6953)
!6955 = !DILocation(line: 2591, column: 37, scope: !6953)
!6956 = !DILocation(line: 2591, column: 15, scope: !6949)
!6957 = !DILocation(line: 2592, column: 24, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6953, file: !66, line: 2592, column: 21)
!6959 = !DILocation(line: 2592, column: 31, scope: !6958)
!6960 = !DILocation(line: 2592, column: 34, scope: !6958)
!6961 = !DILocation(line: 2592, column: 51, scope: !6958)
!6962 = !DILocation(line: 2592, column: 57, scope: !6958)
!6963 = !DILocation(line: 2592, column: 41, scope: !6958)
!6964 = !DILocation(line: 2592, column: 21, scope: !6953)
!6965 = !DILocation(line: 2593, column: 34, scope: !6958)
!6966 = !DILocation(line: 2594, column: 36, scope: !6958)
!6967 = !DILocation(line: 2594, column: 56, scope: !6958)
!6968 = !DILocation(line: 2594, column: 62, scope: !6958)
!6969 = !DILocation(line: 2594, column: 46, scope: !6958)
!6970 = !DILocation(line: 2595, column: 36, scope: !6958)
!6971 = !DILocation(line: 2595, column: 42, scope: !6958)
!6972 = !DILocation(line: 2593, column: 33, scope: !6958)
!6973 = !DILocation(line: 2593, column: 19, scope: !6958)
!6974 = !DILocation(line: 2593, column: 27, scope: !6958)
!6975 = !DILocation(line: 2593, column: 31, scope: !6958)
!6976 = !DILocation(line: 2592, column: 61, scope: !6958)
!6977 = !DILocation(line: 2591, column: 46, scope: !6953)
!6978 = !DILocation(line: 2591, column: 15, scope: !6953)
!6979 = distinct !{!6979, !6956, !6980}
!6980 = !DILocation(line: 2595, column: 44, scope: !6949)
!6981 = !DILocation(line: 2596, column: 15, scope: !6922)
!6982 = !DILocation(line: 2596, column: 18, scope: !6922)
!6983 = !DILocation(line: 2596, column: 25, scope: !6922)
!6984 = !DILocation(line: 2598, column: 30, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6922, file: !66, line: 2598, column: 15)
!6986 = !DILocation(line: 2598, column: 26, scope: !6985)
!6987 = !DILocation(line: 2598, column: 20, scope: !6985)
!6988 = !DILocation(line: 2598, column: 35, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6985, file: !66, line: 2598, column: 15)
!6990 = !DILocation(line: 2598, column: 39, scope: !6989)
!6991 = !DILocation(line: 2598, column: 37, scope: !6989)
!6992 = !DILocation(line: 2598, column: 15, scope: !6985)
!6993 = !DILocation(line: 2599, column: 24, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6989, file: !66, line: 2599, column: 21)
!6995 = !DILocation(line: 2599, column: 31, scope: !6994)
!6996 = !DILocation(line: 2599, column: 34, scope: !6994)
!6997 = !DILocation(line: 2599, column: 51, scope: !6994)
!6998 = !DILocation(line: 2599, column: 57, scope: !6994)
!6999 = !DILocation(line: 2599, column: 41, scope: !6994)
!7000 = !DILocation(line: 2599, column: 21, scope: !6989)
!7001 = !DILocation(line: 2600, column: 34, scope: !6994)
!7002 = !DILocation(line: 2601, column: 36, scope: !6994)
!7003 = !DILocation(line: 2601, column: 56, scope: !6994)
!7004 = !DILocation(line: 2601, column: 62, scope: !6994)
!7005 = !DILocation(line: 2601, column: 46, scope: !6994)
!7006 = !DILocation(line: 2602, column: 36, scope: !6994)
!7007 = !DILocation(line: 2602, column: 42, scope: !6994)
!7008 = !DILocation(line: 2600, column: 33, scope: !6994)
!7009 = !DILocation(line: 2600, column: 19, scope: !6994)
!7010 = !DILocation(line: 2600, column: 27, scope: !6994)
!7011 = !DILocation(line: 2600, column: 31, scope: !6994)
!7012 = !DILocation(line: 2599, column: 61, scope: !6994)
!7013 = !DILocation(line: 2598, column: 46, scope: !6989)
!7014 = !DILocation(line: 2598, column: 15, scope: !6989)
!7015 = distinct !{!7015, !6992, !7016}
!7016 = !DILocation(line: 2602, column: 44, scope: !6985)
!7017 = !DILocation(line: 2603, column: 15, scope: !6922)
!7018 = !DILocation(line: 2603, column: 18, scope: !6922)
!7019 = !DILocation(line: 2603, column: 25, scope: !6922)
!7020 = !DILocation(line: 2604, column: 13, scope: !6922)
!7021 = !DILocation(line: 2608, column: 20, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6917, file: !66, line: 2606, column: 13)
!7023 = !DILocation(line: 2608, column: 18, scope: !7022)
!7024 = !DILocation(line: 2608, column: 35, scope: !7022)
!7025 = !DILocation(line: 2608, column: 33, scope: !7022)
!7026 = !DILocation(line: 2608, column: 48, scope: !7022)
!7027 = !DILocation(line: 2608, column: 51, scope: !7022)
!7028 = !DILocation(line: 2608, column: 46, scope: !7022)
!7029 = !DILocation(line: 2608, column: 59, scope: !7022)
!7030 = !DILocation(line: 2608, column: 62, scope: !7022)
!7031 = !DILocation(line: 2608, column: 69, scope: !7022)
!7032 = !DILocation(line: 2609, column: 20, scope: !7022)
!7033 = !DILocation(line: 2609, column: 18, scope: !7022)
!7034 = !DILocation(line: 2609, column: 35, scope: !7022)
!7035 = !DILocation(line: 2609, column: 33, scope: !7022)
!7036 = !DILocation(line: 2609, column: 48, scope: !7022)
!7037 = !DILocation(line: 2609, column: 51, scope: !7022)
!7038 = !DILocation(line: 2609, column: 46, scope: !7022)
!7039 = !DILocation(line: 2609, column: 59, scope: !7022)
!7040 = !DILocation(line: 2609, column: 62, scope: !7022)
!7041 = !DILocation(line: 2609, column: 69, scope: !7022)
!7042 = !DILocation(line: 2612, column: 15, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !6900, file: !66, line: 2612, column: 15)
!7044 = !DILocation(line: 2612, column: 20, scope: !7043)
!7045 = !DILocation(line: 2612, column: 15, scope: !6900)
!7046 = !DILocation(line: 2613, column: 32, scope: !7043)
!7047 = !DILocation(line: 2613, column: 36, scope: !7043)
!7048 = !DILocation(line: 2613, column: 20, scope: !7043)
!7049 = !DILocation(line: 2613, column: 18, scope: !7043)
!7050 = !DILocation(line: 2613, column: 13, scope: !7043)
!7051 = !DILocation(line: 2614, column: 20, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7043, file: !66, line: 2614, column: 20)
!7053 = !DILocation(line: 2614, column: 25, scope: !7052)
!7054 = !DILocation(line: 2614, column: 20, scope: !7043)
!7055 = !DILocation(line: 2615, column: 40, scope: !7052)
!7056 = !DILocation(line: 2615, column: 44, scope: !7052)
!7057 = !DILocation(line: 2615, column: 20, scope: !7052)
!7058 = !DILocation(line: 2615, column: 18, scope: !7052)
!7059 = !DILocation(line: 2615, column: 13, scope: !7052)
!7060 = !DILocation(line: 2616, column: 20, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7052, file: !66, line: 2616, column: 20)
!7062 = !DILocation(line: 2616, column: 25, scope: !7061)
!7063 = !DILocation(line: 2616, column: 20, scope: !7052)
!7064 = !DILocation(line: 2617, column: 38, scope: !7061)
!7065 = !DILocation(line: 2617, column: 42, scope: !7061)
!7066 = !DILocation(line: 2617, column: 20, scope: !7061)
!7067 = !DILocation(line: 2617, column: 18, scope: !7061)
!7068 = !DILocation(line: 2617, column: 13, scope: !7061)
!7069 = !DILocation(line: 2618, column: 20, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7061, file: !66, line: 2618, column: 20)
!7071 = !DILocation(line: 2618, column: 25, scope: !7070)
!7072 = !DILocation(line: 2618, column: 20, scope: !7061)
!7073 = !DILocation(line: 2619, column: 30, scope: !7070)
!7074 = !DILocation(line: 2619, column: 20, scope: !7070)
!7075 = !DILocation(line: 2619, column: 52, scope: !7070)
!7076 = !DILocation(line: 2619, column: 42, scope: !7070)
!7077 = !DILocation(line: 2619, column: 40, scope: !7070)
!7078 = !DILocation(line: 2619, column: 18, scope: !7070)
!7079 = !DILocation(line: 2619, column: 13, scope: !7070)
!7080 = !DILocation(line: 2620, column: 20, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7070, file: !66, line: 2620, column: 20)
!7082 = !DILocation(line: 2620, column: 25, scope: !7081)
!7083 = !DILocation(line: 2620, column: 20, scope: !7070)
!7084 = !DILocation(line: 2621, column: 36, scope: !7081)
!7085 = !DILocation(line: 2621, column: 40, scope: !7081)
!7086 = !DILocation(line: 2621, column: 47, scope: !7081)
!7087 = !DILocation(line: 2621, column: 51, scope: !7081)
!7088 = !DILocation(line: 2621, column: 20, scope: !7081)
!7089 = !DILocation(line: 2621, column: 18, scope: !7081)
!7090 = !DILocation(line: 2621, column: 13, scope: !7081)
!7091 = !DILocation(line: 2622, column: 20, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7081, file: !66, line: 2622, column: 20)
!7093 = !DILocation(line: 2622, column: 25, scope: !7092)
!7094 = !DILocation(line: 2622, column: 20, scope: !7081)
!7095 = !DILocation(line: 2623, column: 32, scope: !7092)
!7096 = !DILocation(line: 2623, column: 36, scope: !7092)
!7097 = !DILocation(line: 2623, column: 20, scope: !7092)
!7098 = !DILocation(line: 2623, column: 18, scope: !7092)
!7099 = !DILocation(line: 2623, column: 13, scope: !7092)
!7100 = !DILocation(line: 2628, column: 19, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !66, line: 2628, column: 19)
!7102 = distinct !DILexicalBlock(scope: !7092, file: !66, line: 2625, column: 13)
!7103 = !DILocation(line: 2628, column: 25, scope: !7101)
!7104 = !DILocation(line: 2628, column: 19, scope: !7102)
!7105 = !DILocation(line: 2629, column: 26, scope: !7101)
!7106 = !DILocation(line: 2629, column: 24, scope: !7101)
!7107 = !DILocation(line: 2629, column: 22, scope: !7101)
!7108 = !DILocation(line: 2629, column: 17, scope: !7101)
!7109 = !DILocation(line: 2630, column: 24, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7101, file: !66, line: 2630, column: 24)
!7111 = !DILocation(line: 2630, column: 30, scope: !7110)
!7112 = !DILocation(line: 2630, column: 24, scope: !7101)
!7113 = !DILocation(line: 2631, column: 22, scope: !7110)
!7114 = !DILocation(line: 2631, column: 17, scope: !7110)
!7115 = !DILocation(line: 2633, column: 35, scope: !7110)
!7116 = !DILocation(line: 2633, column: 39, scope: !7110)
!7117 = !DILocation(line: 2633, column: 45, scope: !7110)
!7118 = !DILocation(line: 2633, column: 50, scope: !7110)
!7119 = !DILocation(line: 2633, column: 54, scope: !7110)
!7120 = !DILocation(line: 2633, column: 60, scope: !7110)
!7121 = !DILocation(line: 2633, column: 24, scope: !7110)
!7122 = !DILocation(line: 2633, column: 22, scope: !7110)
!7123 = !DILocation(line: 2636, column: 15, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !6900, file: !66, line: 2636, column: 15)
!7125 = !DILocation(line: 2636, column: 22, scope: !7124)
!7126 = !DILocation(line: 2636, column: 25, scope: !7124)
!7127 = !DILocation(line: 2636, column: 15, scope: !6900)
!7128 = !DILocation(line: 2637, column: 19, scope: !7124)
!7129 = !DILocation(line: 2637, column: 13, scope: !7124)
!7130 = !DILocation(line: 2640, column: 27, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7124, file: !66, line: 2639, column: 13)
!7132 = !DILocation(line: 2640, column: 15, scope: !7131)
!7133 = !DILocation(line: 2640, column: 18, scope: !7131)
!7134 = !DILocation(line: 2640, column: 25, scope: !7131)
!7135 = !DILocation(line: 2641, column: 27, scope: !7131)
!7136 = !DILocation(line: 2641, column: 15, scope: !7131)
!7137 = !DILocation(line: 2641, column: 18, scope: !7131)
!7138 = !DILocation(line: 2641, column: 25, scope: !7131)
!7139 = !DILocation(line: 2643, column: 9, scope: !6900)
!7140 = !DILocation(line: 2644, column: 16, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !6885, file: !66, line: 2644, column: 16)
!7142 = !DILocation(line: 2644, column: 16, scope: !6885)
!7143 = !DILocation(line: 2668, column: 15, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !66, line: 2668, column: 15)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !66, line: 2645, column: 9)
!7146 = !DILocation(line: 2668, column: 15, scope: !7145)
!7147 = !DILocation(line: 2669, column: 13, scope: !7144)
!7148 = !DILocation(line: 2669, column: 13, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7144, file: !66, line: 2669, column: 13)
!7150 = !DILocation(line: 2669, column: 13, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7149, file: !66, line: 2669, column: 13)
!7152 = !DILocation(line: 0, scope: !7151)
!7153 = distinct !{!7153, !7150, !7150}
!7154 = distinct !{!7154, !7150, !7150}
!7155 = !DILocation(line: 2669, column: 13, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !66, line: 2669, column: 13)
!7157 = !DILocation(line: 2669, column: 13, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7151, file: !66, line: 2669, column: 13)
!7159 = distinct !{!7159, !7148, !7148}
!7160 = !DILocation(line: 2672, column: 13, scope: !7144)
!7161 = !DILocation(line: 2672, column: 13, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7144, file: !66, line: 2672, column: 13)
!7163 = !DILocation(line: 2672, column: 13, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7162, file: !66, line: 2672, column: 13)
!7165 = !DILocation(line: 0, scope: !7164)
!7166 = distinct !{!7166, !7163, !7163}
!7167 = distinct !{!7167, !7163, !7163}
!7168 = !DILocation(line: 2672, column: 13, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7164, file: !66, line: 2672, column: 13)
!7170 = !DILocation(line: 2672, column: 13, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7164, file: !66, line: 2672, column: 13)
!7172 = distinct !{!7172, !7161, !7161}
!7173 = !DILocation(line: 2673, column: 9, scope: !7145)
!7174 = !DILocation(line: 2674, column: 16, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7141, file: !66, line: 2674, column: 16)
!7176 = !DILocation(line: 2674, column: 21, scope: !7175)
!7177 = !DILocation(line: 2674, column: 16, scope: !7141)
!7178 = !DILocation(line: 2675, column: 18, scope: !7175)
!7179 = !DILocation(line: 2675, column: 16, scope: !7175)
!7180 = !DILocation(line: 2675, column: 14, scope: !7175)
!7181 = !DILocation(line: 2675, column: 9, scope: !7175)
!7182 = !DILocation(line: 2676, column: 16, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7175, file: !66, line: 2676, column: 16)
!7184 = !DILocation(line: 2676, column: 21, scope: !7183)
!7185 = !DILocation(line: 2676, column: 16, scope: !7175)
!7186 = !DILocation(line: 2677, column: 9, scope: !7183)
!7187 = !DILocation(line: 2680, column: 15, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !66, line: 2680, column: 15)
!7189 = distinct !DILexicalBlock(scope: !7183, file: !66, line: 2679, column: 9)
!7190 = !DILocation(line: 2680, column: 15, scope: !7189)
!7191 = !DILocation(line: 2682, column: 15, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7188, file: !66, line: 2681, column: 13)
!7193 = !DILocation(line: 2682, column: 22, scope: !7192)
!7194 = !DILocation(line: 2682, column: 30, scope: !7192)
!7195 = !DILocation(line: 2682, column: 28, scope: !7192)
!7196 = !DILocation(line: 2682, column: 35, scope: !7192)
!7197 = !DILocation(line: 2682, column: 38, scope: !7192)
!7198 = !DILocation(line: 2682, column: 46, scope: !7192)
!7199 = !DILocation(line: 2682, column: 44, scope: !7192)
!7200 = !DILocation(line: 0, scope: !7192)
!7201 = !DILocation(line: 2684, column: 37, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7192, file: !66, line: 2683, column: 17)
!7203 = !DILocation(line: 2684, column: 63, scope: !7202)
!7204 = !DILocation(line: 2684, column: 57, scope: !7202)
!7205 = !DILocation(line: 2684, column: 47, scope: !7202)
!7206 = !DILocation(line: 2684, column: 27, scope: !7202)
!7207 = !DILocation(line: 2685, column: 39, scope: !7202)
!7208 = !DILocation(line: 2685, column: 65, scope: !7202)
!7209 = !DILocation(line: 2685, column: 59, scope: !7202)
!7210 = !DILocation(line: 2685, column: 49, scope: !7202)
!7211 = !DILocation(line: 2685, column: 29, scope: !7202)
!7212 = !DILocation(line: 2685, column: 27, scope: !7202)
!7213 = !DILocation(line: 2684, column: 24, scope: !7202)
!7214 = !DILocation(line: 2686, column: 23, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7202, file: !66, line: 2686, column: 23)
!7216 = !DILocation(line: 2686, column: 23, scope: !7202)
!7217 = !DILocation(line: 2687, column: 21, scope: !7215)
!7218 = distinct !{!7218, !7191, !7219}
!7219 = !DILocation(line: 2688, column: 17, scope: !7192)
!7220 = !DILocation(line: 2689, column: 13, scope: !7192)
!7221 = !DILocation(line: 2692, column: 30, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7188, file: !66, line: 2691, column: 13)
!7223 = !DILocation(line: 2692, column: 37, scope: !7222)
!7224 = !DILocation(line: 2692, column: 44, scope: !7222)
!7225 = !DILocation(line: 2692, column: 22, scope: !7222)
!7226 = !DILocation(line: 2692, column: 20, scope: !7222)
!7227 = !DILocation(line: 2693, column: 19, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7222, file: !66, line: 2693, column: 19)
!7229 = !DILocation(line: 2693, column: 19, scope: !7222)
!7230 = !DILocation(line: 2694, column: 17, scope: !7228)
!7231 = !DILocation(line: 2696, column: 18, scope: !7189)
!7232 = !DILocation(line: 2696, column: 25, scope: !7189)
!7233 = !DILocation(line: 2696, column: 23, scope: !7189)
!7234 = !DILocation(line: 2696, column: 37, scope: !7189)
!7235 = !DILocation(line: 2696, column: 45, scope: !7189)
!7236 = !DILocation(line: 2696, column: 42, scope: !7189)
!7237 = !DILocation(line: 2696, column: 16, scope: !7189)
!7238 = !DILocation(line: 2699, column: 11, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !6862, file: !66, line: 2699, column: 11)
!7240 = !DILocation(line: 2699, column: 11, scope: !6862)
!7241 = !DILocation(line: 2700, column: 9, scope: !7239)
!7242 = !DILocation(line: 2702, column: 13, scope: !6862)
!7243 = !DILocation(line: 2702, column: 18, scope: !6862)
!7244 = !DILocation(line: 2702, column: 11, scope: !6862)
!7245 = !DILocation(line: 2703, column: 13, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !6862, file: !66, line: 2703, column: 11)
!7247 = !DILocation(line: 2703, column: 11, scope: !6862)
!7248 = !DILocation(line: 2704, column: 9, scope: !7246)
!7249 = !DILocation(line: 2707, column: 11, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !6862, file: !66, line: 2707, column: 11)
!7251 = !DILocation(line: 2707, column: 16, scope: !7250)
!7252 = !DILocation(line: 2707, column: 22, scope: !7250)
!7253 = !DILocation(line: 2707, column: 11, scope: !6862)
!7254 = !DILocation(line: 2708, column: 26, scope: !7250)
!7255 = !DILocation(line: 2708, column: 29, scope: !7250)
!7256 = !DILocation(line: 2708, column: 16, scope: !7250)
!7257 = !DILocation(line: 2708, column: 14, scope: !7250)
!7258 = !DILocation(line: 2708, column: 52, scope: !7250)
!7259 = !DILocation(line: 2708, column: 55, scope: !7250)
!7260 = !DILocation(line: 2708, column: 42, scope: !7250)
!7261 = !DILocation(line: 2708, column: 40, scope: !7250)
!7262 = !DILocation(line: 2708, column: 9, scope: !7250)
!7263 = !DILocation(line: 2710, column: 16, scope: !7250)
!7264 = !DILocation(line: 2710, column: 19, scope: !7250)
!7265 = !DILocation(line: 2710, column: 26, scope: !7250)
!7266 = !DILocation(line: 2710, column: 29, scope: !7250)
!7267 = !DILocation(line: 2710, column: 24, scope: !7250)
!7268 = !DILocation(line: 2710, column: 36, scope: !7250)
!7269 = !DILocation(line: 2710, column: 14, scope: !7250)
!7270 = !DILocation(line: 2710, column: 48, scope: !7250)
!7271 = !DILocation(line: 2710, column: 51, scope: !7250)
!7272 = !DILocation(line: 2710, column: 58, scope: !7250)
!7273 = !DILocation(line: 2710, column: 61, scope: !7250)
!7274 = !DILocation(line: 2710, column: 56, scope: !7250)
!7275 = !DILocation(line: 2710, column: 68, scope: !7250)
!7276 = !DILocation(line: 2710, column: 46, scope: !7250)
!7277 = !DILocation(line: 2712, column: 11, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !6862, file: !66, line: 2712, column: 11)
!7279 = !DILocation(line: 2712, column: 16, scope: !7278)
!7280 = !DILocation(line: 2712, column: 22, scope: !7278)
!7281 = !DILocation(line: 2712, column: 11, scope: !6862)
!7282 = !DILocation(line: 2713, column: 27, scope: !7278)
!7283 = !DILocation(line: 2713, column: 30, scope: !7278)
!7284 = !DILocation(line: 2713, column: 17, scope: !7278)
!7285 = !DILocation(line: 2713, column: 15, scope: !7278)
!7286 = !DILocation(line: 2713, column: 54, scope: !7278)
!7287 = !DILocation(line: 2713, column: 57, scope: !7278)
!7288 = !DILocation(line: 2713, column: 44, scope: !7278)
!7289 = !DILocation(line: 2713, column: 42, scope: !7278)
!7290 = !DILocation(line: 2713, column: 9, scope: !7278)
!7291 = !DILocation(line: 2716, column: 19, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7278, file: !66, line: 2715, column: 9)
!7293 = !DILocation(line: 2716, column: 22, scope: !7292)
!7294 = !DILocation(line: 2716, column: 17, scope: !7292)
!7295 = !DILocation(line: 2716, column: 36, scope: !7292)
!7296 = !DILocation(line: 2716, column: 39, scope: !7292)
!7297 = !DILocation(line: 2716, column: 34, scope: !7292)
!7298 = !DILocation(line: 2717, column: 15, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7292, file: !66, line: 2717, column: 15)
!7300 = !DILocation(line: 2717, column: 20, scope: !7299)
!7301 = !DILocation(line: 2717, column: 15, scope: !7292)
!7302 = !DILocation(line: 2719, column: 15, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !66, line: 2718, column: 13)
!7304 = !DILocation(line: 2719, column: 22, scope: !7303)
!7305 = !DILocation(line: 2719, column: 30, scope: !7303)
!7306 = !DILocation(line: 2719, column: 28, scope: !7303)
!7307 = !DILocation(line: 2719, column: 35, scope: !7303)
!7308 = !DILocation(line: 2719, column: 56, scope: !7303)
!7309 = !DILocation(line: 2719, column: 55, scope: !7303)
!7310 = !DILocation(line: 2719, column: 45, scope: !7303)
!7311 = !DILocation(line: 2719, column: 38, scope: !7303)
!7312 = !DILocation(line: 0, scope: !7303)
!7313 = !DILocation(line: 2720, column: 17, scope: !7303)
!7314 = distinct !{!7314, !7302, !7315}
!7315 = !DILocation(line: 2720, column: 19, scope: !7303)
!7316 = !DILocation(line: 2721, column: 15, scope: !7303)
!7317 = !DILocation(line: 2721, column: 22, scope: !7303)
!7318 = !DILocation(line: 2721, column: 30, scope: !7303)
!7319 = !DILocation(line: 2721, column: 28, scope: !7303)
!7320 = !DILocation(line: 2721, column: 35, scope: !7303)
!7321 = !DILocation(line: 2721, column: 56, scope: !7303)
!7322 = !DILocation(line: 2721, column: 55, scope: !7303)
!7323 = !DILocation(line: 2721, column: 45, scope: !7303)
!7324 = !DILocation(line: 2721, column: 38, scope: !7303)
!7325 = !DILocation(line: 2722, column: 17, scope: !7303)
!7326 = distinct !{!7326, !7316, !7327}
!7327 = !DILocation(line: 2722, column: 19, scope: !7303)
!7328 = !DILocation(line: 2723, column: 13, scope: !7303)
!7329 = distinct !{!7329, !6860, !7330}
!7330 = !DILocation(line: 2725, column: 5, scope: !6834)
!7331 = !DILocation(line: 2727, column: 3, scope: !6834)
!7332 = !DILabel(scope: !6834, name: "greater", file: !66, line: 2729)
!7333 = !DILocation(line: 2729, column: 2, scope: !6834)
!7334 = !DILocation(line: 2730, column: 8, scope: !6834)
!7335 = !DILocation(line: 2730, column: 3, scope: !6834)
!7336 = !DILabel(scope: !6834, name: "not_equal", file: !66, line: 2731)
!7337 = !DILocation(line: 2731, column: 2, scope: !6834)
!7338 = !DILocation(line: 2732, column: 10, scope: !6834)
!7339 = !DILocation(line: 2732, column: 15, scope: !6834)
!7340 = !DILocation(line: 2732, column: 26, scope: !6834)
!7341 = !DILocation(line: 2732, column: 25, scope: !6834)
!7342 = !DILocation(line: 2732, column: 33, scope: !6834)
!7343 = !DILocation(line: 2732, column: 3, scope: !6834)
!7344 = !DILocation(line: 2733, column: 1, scope: !6834)
!7345 = distinct !DISubprogram(name: "numcompare", scope: !66, file: !66, line: 1994, type: !481, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7346 = !DILocalVariable(name: "a", arg: 1, scope: !7345, file: !66, line: 1994, type: !88)
!7347 = !DILocation(line: 1994, column: 25, scope: !7345)
!7348 = !DILocalVariable(name: "b", arg: 2, scope: !7345, file: !66, line: 1994, type: !88)
!7349 = !DILocation(line: 1994, column: 40, scope: !7345)
!7350 = !DILocation(line: 1996, column: 3, scope: !7345)
!7351 = !DILocation(line: 1996, column: 28, scope: !7345)
!7352 = !DILocation(line: 1996, column: 27, scope: !7345)
!7353 = !DILocation(line: 1996, column: 17, scope: !7345)
!7354 = !DILocation(line: 1996, column: 10, scope: !7345)
!7355 = !DILocation(line: 1997, column: 6, scope: !7345)
!7356 = distinct !{!7356, !7350, !7355}
!7357 = !DILocation(line: 1998, column: 3, scope: !7345)
!7358 = !DILocation(line: 1998, column: 28, scope: !7345)
!7359 = !DILocation(line: 1998, column: 27, scope: !7345)
!7360 = !DILocation(line: 1998, column: 17, scope: !7345)
!7361 = !DILocation(line: 1998, column: 10, scope: !7345)
!7362 = !DILocation(line: 1999, column: 6, scope: !7345)
!7363 = distinct !{!7363, !7357, !7362}
!7364 = !DILocation(line: 2001, column: 21, scope: !7345)
!7365 = !DILocation(line: 2001, column: 24, scope: !7345)
!7366 = !DILocation(line: 2001, column: 27, scope: !7345)
!7367 = !DILocation(line: 2001, column: 42, scope: !7345)
!7368 = !DILocation(line: 2001, column: 10, scope: !7345)
!7369 = !DILocation(line: 2001, column: 3, scope: !7345)
!7370 = distinct !DISubprogram(name: "general_numcompare", scope: !66, file: !66, line: 2023, type: !481, scopeLine: 2024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7371 = !DILocalVariable(name: "sa", arg: 1, scope: !7370, file: !66, line: 2023, type: !88)
!7372 = !DILocation(line: 2023, column: 33, scope: !7370)
!7373 = !DILocalVariable(name: "sb", arg: 2, scope: !7370, file: !66, line: 2023, type: !88)
!7374 = !DILocation(line: 2023, column: 49, scope: !7370)
!7375 = !DILocalVariable(name: "ea", scope: !7370, file: !66, line: 2028, type: !9)
!7376 = !DILocation(line: 2028, column: 9, scope: !7370)
!7377 = !DILocalVariable(name: "eb", scope: !7370, file: !66, line: 2029, type: !9)
!7378 = !DILocation(line: 2029, column: 9, scope: !7370)
!7379 = !DILocalVariable(name: "a", scope: !7370, file: !66, line: 2030, type: !483)
!7380 = !DILocation(line: 2030, column: 15, scope: !7370)
!7381 = !DILocation(line: 2030, column: 28, scope: !7370)
!7382 = !DILocation(line: 2030, column: 19, scope: !7370)
!7383 = !DILocalVariable(name: "b", scope: !7370, file: !66, line: 2031, type: !483)
!7384 = !DILocation(line: 2031, column: 15, scope: !7370)
!7385 = !DILocation(line: 2031, column: 28, scope: !7370)
!7386 = !DILocation(line: 2031, column: 19, scope: !7370)
!7387 = !DILocation(line: 2034, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7370, file: !66, line: 2034, column: 7)
!7389 = !DILocation(line: 2034, column: 13, scope: !7388)
!7390 = !DILocation(line: 2034, column: 10, scope: !7388)
!7391 = !DILocation(line: 2034, column: 7, scope: !7370)
!7392 = !DILocation(line: 2035, column: 12, scope: !7388)
!7393 = !DILocation(line: 2035, column: 18, scope: !7388)
!7394 = !DILocation(line: 2035, column: 15, scope: !7388)
!7395 = !DILocation(line: 2035, column: 5, scope: !7388)
!7396 = !DILocation(line: 2036, column: 7, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7370, file: !66, line: 2036, column: 7)
!7398 = !DILocation(line: 2036, column: 13, scope: !7397)
!7399 = !DILocation(line: 2036, column: 10, scope: !7397)
!7400 = !DILocation(line: 2036, column: 7, scope: !7370)
!7401 = !DILocation(line: 2037, column: 5, scope: !7397)
!7402 = !DILocation(line: 2042, column: 11, scope: !7370)
!7403 = !DILocation(line: 2042, column: 15, scope: !7370)
!7404 = !DILocation(line: 2042, column: 13, scope: !7370)
!7405 = !DILocation(line: 2043, column: 13, scope: !7370)
!7406 = !DILocation(line: 2043, column: 17, scope: !7370)
!7407 = !DILocation(line: 2043, column: 15, scope: !7370)
!7408 = !DILocation(line: 2044, column: 13, scope: !7370)
!7409 = !DILocation(line: 2044, column: 18, scope: !7370)
!7410 = !DILocation(line: 2044, column: 15, scope: !7370)
!7411 = !DILocation(line: 2045, column: 13, scope: !7370)
!7412 = !DILocation(line: 2045, column: 18, scope: !7370)
!7413 = !DILocation(line: 2045, column: 15, scope: !7370)
!7414 = !DILocation(line: 2046, column: 13, scope: !7370)
!7415 = !DILocation(line: 2046, column: 18, scope: !7370)
!7416 = !DILocation(line: 2046, column: 15, scope: !7370)
!7417 = !DILocation(line: 2047, column: 26, scope: !7370)
!7418 = !DILocation(line: 2047, column: 30, scope: !7370)
!7419 = !DILocation(line: 2047, column: 13, scope: !7370)
!7420 = !DILocation(line: 2042, column: 3, scope: !7370)
!7421 = !DILocation(line: 2048, column: 1, scope: !7370)
!7422 = distinct !DISubprogram(name: "human_numcompare", scope: !66, file: !66, line: 1978, type: !481, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7423 = !DILocalVariable(name: "a", arg: 1, scope: !7422, file: !66, line: 1978, type: !88)
!7424 = !DILocation(line: 1978, column: 31, scope: !7422)
!7425 = !DILocalVariable(name: "b", arg: 2, scope: !7422, file: !66, line: 1978, type: !88)
!7426 = !DILocation(line: 1978, column: 46, scope: !7422)
!7427 = !DILocation(line: 1980, column: 3, scope: !7422)
!7428 = !DILocation(line: 1980, column: 28, scope: !7422)
!7429 = !DILocation(line: 1980, column: 27, scope: !7422)
!7430 = !DILocation(line: 1980, column: 17, scope: !7422)
!7431 = !DILocation(line: 1980, column: 10, scope: !7422)
!7432 = !DILocation(line: 1981, column: 6, scope: !7422)
!7433 = distinct !{!7433, !7427, !7432}
!7434 = !DILocation(line: 1982, column: 3, scope: !7422)
!7435 = !DILocation(line: 1982, column: 28, scope: !7422)
!7436 = !DILocation(line: 1982, column: 27, scope: !7422)
!7437 = !DILocation(line: 1982, column: 17, scope: !7422)
!7438 = !DILocation(line: 1982, column: 10, scope: !7422)
!7439 = !DILocation(line: 1983, column: 6, scope: !7422)
!7440 = distinct !{!7440, !7434, !7439}
!7441 = !DILocalVariable(name: "diff", scope: !7422, file: !66, line: 1985, type: !7)
!7442 = !DILocation(line: 1985, column: 7, scope: !7422)
!7443 = !DILocation(line: 1985, column: 31, scope: !7422)
!7444 = !DILocation(line: 1985, column: 14, scope: !7422)
!7445 = !DILocation(line: 1985, column: 53, scope: !7422)
!7446 = !DILocation(line: 1985, column: 36, scope: !7422)
!7447 = !DILocation(line: 1985, column: 34, scope: !7422)
!7448 = !DILocation(line: 1986, column: 11, scope: !7422)
!7449 = !DILocation(line: 1986, column: 18, scope: !7422)
!7450 = !DILocation(line: 1986, column: 36, scope: !7422)
!7451 = !DILocation(line: 1986, column: 39, scope: !7422)
!7452 = !DILocation(line: 1986, column: 42, scope: !7422)
!7453 = !DILocation(line: 1986, column: 57, scope: !7422)
!7454 = !DILocation(line: 1986, column: 25, scope: !7422)
!7455 = !DILocation(line: 1986, column: 3, scope: !7422)
!7456 = distinct !DISubprogram(name: "compare_random", scope: !66, file: !66, line: 2137, type: !491, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7457 = !DILocalVariable(name: "texta", arg: 1, scope: !7456, file: !66, line: 2137, type: !493)
!7458 = !DILocation(line: 2137, column: 32, scope: !7456)
!7459 = !DILocalVariable(name: "lena", arg: 2, scope: !7456, file: !66, line: 2137, type: !55)
!7460 = !DILocation(line: 2137, column: 46, scope: !7456)
!7461 = !DILocalVariable(name: "textb", arg: 3, scope: !7456, file: !66, line: 2138, type: !493)
!7462 = !DILocation(line: 2138, column: 32, scope: !7456)
!7463 = !DILocalVariable(name: "lenb", arg: 4, scope: !7456, file: !66, line: 2138, type: !55)
!7464 = !DILocation(line: 2138, column: 46, scope: !7456)
!7465 = !DILocalVariable(name: "xfrm_diff", scope: !7456, file: !66, line: 2144, type: !7)
!7466 = !DILocation(line: 2144, column: 7, scope: !7456)
!7467 = !DILocalVariable(name: "stackbuf", scope: !7456, file: !66, line: 2146, type: !478)
!7468 = !DILocation(line: 2146, column: 8, scope: !7456)
!7469 = !DILocalVariable(name: "buf", scope: !7456, file: !66, line: 2147, type: !9)
!7470 = !DILocation(line: 2147, column: 9, scope: !7456)
!7471 = !DILocation(line: 2147, column: 15, scope: !7456)
!7472 = !DILocalVariable(name: "bufsize", scope: !7456, file: !66, line: 2148, type: !55)
!7473 = !DILocation(line: 2148, column: 10, scope: !7456)
!7474 = !DILocalVariable(name: "allocated", scope: !7456, file: !66, line: 2149, type: !53)
!7475 = !DILocation(line: 2149, column: 9, scope: !7456)
!7476 = !DILocalVariable(name: "dig", scope: !7456, file: !66, line: 2150, type: !494)
!7477 = !DILocation(line: 2150, column: 12, scope: !7456)
!7478 = !DILocalVariable(name: "s", scope: !7456, file: !66, line: 2151, type: !498)
!7479 = !DILocation(line: 2151, column: 18, scope: !7456)
!7480 = !DILocation(line: 2152, column: 3, scope: !7456)
!7481 = !DILocation(line: 2152, column: 10, scope: !7456)
!7482 = !DILocation(line: 2152, column: 17, scope: !7456)
!7483 = !{i64 0, i64 4, !2273, i64 4, i64 4, !2273, i64 8, i64 4, !2273, i64 12, i64 4, !2273, i64 16, i64 8, !2438, i64 24, i64 4, !2273, i64 28, i64 128, !2438}
!7484 = !DILocation(line: 2152, column: 15, scope: !7456)
!7485 = !DILocation(line: 2154, column: 7, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7456, file: !66, line: 2154, column: 7)
!7487 = !DILocation(line: 2154, column: 7, scope: !7456)
!7488 = !DILocalVariable(name: "lima", scope: !7489, file: !66, line: 2156, type: !88)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !66, line: 2155, column: 5)
!7490 = !DILocation(line: 2156, column: 19, scope: !7489)
!7491 = !DILocation(line: 2156, column: 26, scope: !7489)
!7492 = !DILocation(line: 2156, column: 34, scope: !7489)
!7493 = !DILocation(line: 2156, column: 32, scope: !7489)
!7494 = !DILocalVariable(name: "limb", scope: !7489, file: !66, line: 2157, type: !88)
!7495 = !DILocation(line: 2157, column: 19, scope: !7489)
!7496 = !DILocation(line: 2157, column: 26, scope: !7489)
!7497 = !DILocation(line: 2157, column: 34, scope: !7489)
!7498 = !DILocation(line: 2157, column: 32, scope: !7489)
!7499 = !DILocation(line: 2159, column: 7, scope: !7489)
!7500 = !DILocalVariable(name: "guess_bufsize", scope: !7501, file: !66, line: 2176, type: !55)
!7501 = distinct !DILexicalBlock(scope: !7489, file: !66, line: 2160, column: 9)
!7502 = !DILocation(line: 2176, column: 18, scope: !7501)
!7503 = !DILocation(line: 2176, column: 39, scope: !7501)
!7504 = !DILocation(line: 2176, column: 46, scope: !7501)
!7505 = !DILocation(line: 2176, column: 44, scope: !7501)
!7506 = !DILocation(line: 2176, column: 36, scope: !7501)
!7507 = !DILocation(line: 2176, column: 52, scope: !7501)
!7508 = !DILocation(line: 2177, column: 15, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7501, file: !66, line: 2177, column: 15)
!7510 = !DILocation(line: 2177, column: 25, scope: !7509)
!7511 = !DILocation(line: 2177, column: 23, scope: !7509)
!7512 = !DILocation(line: 2177, column: 15, scope: !7501)
!7513 = !DILocation(line: 2179, column: 25, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7509, file: !66, line: 2178, column: 13)
!7515 = !DILocation(line: 2179, column: 23, scope: !7514)
!7516 = !DILocation(line: 2180, column: 21, scope: !7514)
!7517 = !DILocation(line: 2180, column: 15, scope: !7514)
!7518 = !DILocation(line: 2181, column: 41, scope: !7514)
!7519 = !DILocation(line: 2181, column: 33, scope: !7514)
!7520 = !DILocation(line: 2181, column: 31, scope: !7514)
!7521 = !DILocation(line: 2181, column: 19, scope: !7514)
!7522 = !DILocation(line: 2182, column: 21, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7514, file: !66, line: 2182, column: 19)
!7524 = !DILocation(line: 2182, column: 19, scope: !7514)
!7525 = !DILocation(line: 2184, column: 25, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7523, file: !66, line: 2183, column: 17)
!7527 = !DILocation(line: 2184, column: 23, scope: !7526)
!7528 = !DILocation(line: 2185, column: 27, scope: !7526)
!7529 = !DILocation(line: 2186, column: 17, scope: !7526)
!7530 = !DILocation(line: 2187, column: 13, scope: !7514)
!7531 = !DILocalVariable(name: "sizea", scope: !7501, file: !66, line: 2189, type: !55)
!7532 = !DILocation(line: 2189, column: 18, scope: !7501)
!7533 = !DILocation(line: 2190, column: 14, scope: !7501)
!7534 = !DILocation(line: 2190, column: 22, scope: !7501)
!7535 = !DILocation(line: 2190, column: 20, scope: !7501)
!7536 = !DILocation(line: 2190, column: 39, scope: !7501)
!7537 = !DILocation(line: 2190, column: 44, scope: !7501)
!7538 = !DILocation(line: 2190, column: 51, scope: !7501)
!7539 = !DILocation(line: 2190, column: 29, scope: !7501)
!7540 = !DILocation(line: 2190, column: 60, scope: !7501)
!7541 = !DILocalVariable(name: "a_fits", scope: !7501, file: !66, line: 2191, type: !103)
!7542 = !DILocation(line: 2191, column: 16, scope: !7501)
!7543 = !DILocation(line: 2191, column: 25, scope: !7501)
!7544 = !DILocation(line: 2191, column: 34, scope: !7501)
!7545 = !DILocation(line: 2191, column: 31, scope: !7501)
!7546 = !DILocalVariable(name: "sizeb", scope: !7501, file: !66, line: 2192, type: !55)
!7547 = !DILocation(line: 2192, column: 18, scope: !7501)
!7548 = !DILocation(line: 2193, column: 14, scope: !7501)
!7549 = !DILocation(line: 2193, column: 22, scope: !7501)
!7550 = !DILocation(line: 2193, column: 20, scope: !7501)
!7551 = !DILocation(line: 2194, column: 28, scope: !7501)
!7552 = !DILocation(line: 2194, column: 37, scope: !7501)
!7553 = !DILocation(line: 2194, column: 43, scope: !7501)
!7554 = !DILocation(line: 2194, column: 41, scope: !7501)
!7555 = !DILocation(line: 2194, column: 58, scope: !7501)
!7556 = !DILocation(line: 2195, column: 28, scope: !7501)
!7557 = !DILocation(line: 2195, column: 37, scope: !7501)
!7558 = !DILocation(line: 2195, column: 47, scope: !7501)
!7559 = !DILocation(line: 2195, column: 45, scope: !7501)
!7560 = !DILocation(line: 2194, column: 17, scope: !7501)
!7561 = !DILocation(line: 2196, column: 17, scope: !7501)
!7562 = !DILocation(line: 2199, column: 18, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7501, file: !66, line: 2199, column: 15)
!7564 = !DILocation(line: 2199, column: 25, scope: !7563)
!7565 = !DILocation(line: 2199, column: 28, scope: !7563)
!7566 = !DILocation(line: 2199, column: 36, scope: !7563)
!7567 = !DILocation(line: 2199, column: 34, scope: !7563)
!7568 = !DILocation(line: 2199, column: 45, scope: !7563)
!7569 = !DILocation(line: 2199, column: 42, scope: !7563)
!7570 = !DILocation(line: 2199, column: 15, scope: !7501)
!7571 = !DILocation(line: 2201, column: 25, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7563, file: !66, line: 2200, column: 13)
!7573 = !DILocation(line: 2201, column: 33, scope: !7572)
!7574 = !DILocation(line: 2201, column: 31, scope: !7572)
!7575 = !DILocation(line: 2201, column: 23, scope: !7572)
!7576 = !DILocation(line: 2202, column: 19, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !66, line: 2202, column: 19)
!7578 = !DILocation(line: 2202, column: 27, scope: !7577)
!7579 = !DILocation(line: 2202, column: 19, scope: !7572)
!7580 = !DILocation(line: 2203, column: 27, scope: !7577)
!7581 = !DILocation(line: 2203, column: 35, scope: !7577)
!7582 = !DILocation(line: 2203, column: 39, scope: !7577)
!7583 = !DILocation(line: 2203, column: 25, scope: !7577)
!7584 = !DILocation(line: 2203, column: 17, scope: !7577)
!7585 = !DILocation(line: 2204, column: 21, scope: !7572)
!7586 = !DILocation(line: 2204, column: 15, scope: !7572)
!7587 = !DILocation(line: 2205, column: 42, scope: !7572)
!7588 = !DILocation(line: 2205, column: 33, scope: !7572)
!7589 = !DILocation(line: 2205, column: 31, scope: !7572)
!7590 = !DILocation(line: 2205, column: 19, scope: !7572)
!7591 = !DILocation(line: 2206, column: 19, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7572, file: !66, line: 2206, column: 19)
!7593 = !DILocation(line: 2206, column: 27, scope: !7592)
!7594 = !DILocation(line: 2206, column: 25, scope: !7592)
!7595 = !DILocation(line: 2206, column: 19, scope: !7572)
!7596 = !DILocation(line: 2207, column: 26, scope: !7592)
!7597 = !DILocation(line: 2207, column: 31, scope: !7592)
!7598 = !DILocation(line: 2207, column: 38, scope: !7592)
!7599 = !DILocation(line: 2207, column: 17, scope: !7592)
!7600 = !DILocation(line: 2208, column: 19, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7572, file: !66, line: 2208, column: 19)
!7602 = !DILocation(line: 2208, column: 27, scope: !7601)
!7603 = !DILocation(line: 2208, column: 25, scope: !7601)
!7604 = !DILocation(line: 2208, column: 19, scope: !7572)
!7605 = !DILocation(line: 2209, column: 26, scope: !7601)
!7606 = !DILocation(line: 2209, column: 32, scope: !7601)
!7607 = !DILocation(line: 2209, column: 30, scope: !7601)
!7608 = !DILocation(line: 2209, column: 39, scope: !7601)
!7609 = !DILocation(line: 2209, column: 46, scope: !7601)
!7610 = !DILocation(line: 2209, column: 17, scope: !7601)
!7611 = !DILocation(line: 2210, column: 13, scope: !7572)
!7612 = !DILocation(line: 2216, column: 15, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7501, file: !66, line: 2216, column: 15)
!7614 = !DILocation(line: 2216, column: 23, scope: !7613)
!7615 = !DILocation(line: 2216, column: 21, scope: !7613)
!7616 = !DILocation(line: 2216, column: 15, scope: !7501)
!7617 = !DILocation(line: 2217, column: 30, scope: !7613)
!7618 = !DILocation(line: 2217, column: 22, scope: !7613)
!7619 = !DILocation(line: 2217, column: 37, scope: !7613)
!7620 = !DILocation(line: 2217, column: 19, scope: !7613)
!7621 = !DILocation(line: 2217, column: 13, scope: !7613)
!7622 = !DILocation(line: 2218, column: 15, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7501, file: !66, line: 2218, column: 15)
!7624 = !DILocation(line: 2218, column: 23, scope: !7623)
!7625 = !DILocation(line: 2218, column: 21, scope: !7623)
!7626 = !DILocation(line: 2218, column: 15, scope: !7501)
!7627 = !DILocation(line: 2219, column: 30, scope: !7623)
!7628 = !DILocation(line: 2219, column: 22, scope: !7623)
!7629 = !DILocation(line: 2219, column: 37, scope: !7623)
!7630 = !DILocation(line: 2219, column: 19, scope: !7623)
!7631 = !DILocation(line: 2219, column: 13, scope: !7623)
!7632 = !DILocation(line: 2220, column: 18, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7501, file: !66, line: 2220, column: 15)
!7634 = !DILocation(line: 2220, column: 26, scope: !7633)
!7635 = !DILocation(line: 2220, column: 24, scope: !7633)
!7636 = !DILocation(line: 2220, column: 31, scope: !7633)
!7637 = !DILocation(line: 2220, column: 34, scope: !7633)
!7638 = !DILocation(line: 2220, column: 42, scope: !7633)
!7639 = !DILocation(line: 2220, column: 40, scope: !7633)
!7640 = !DILocation(line: 2220, column: 15, scope: !7501)
!7641 = !DILocation(line: 2222, column: 22, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7633, file: !66, line: 2221, column: 13)
!7643 = !DILocation(line: 2222, column: 20, scope: !7642)
!7644 = !DILocation(line: 2222, column: 37, scope: !7642)
!7645 = !DILocation(line: 2222, column: 35, scope: !7642)
!7646 = !DILocation(line: 2223, column: 22, scope: !7642)
!7647 = !DILocation(line: 2223, column: 20, scope: !7642)
!7648 = !DILocation(line: 2223, column: 37, scope: !7642)
!7649 = !DILocation(line: 2223, column: 43, scope: !7642)
!7650 = !DILocation(line: 2223, column: 41, scope: !7642)
!7651 = !DILocation(line: 2223, column: 35, scope: !7642)
!7652 = !DILocation(line: 2224, column: 15, scope: !7642)
!7653 = !DILocation(line: 2229, column: 30, scope: !7501)
!7654 = !DILocation(line: 2229, column: 35, scope: !7501)
!7655 = !DILocation(line: 2229, column: 43, scope: !7501)
!7656 = !DILocation(line: 2229, column: 11, scope: !7501)
!7657 = !DILocation(line: 2230, column: 30, scope: !7501)
!7658 = !DILocation(line: 2230, column: 36, scope: !7501)
!7659 = !DILocation(line: 2230, column: 34, scope: !7501)
!7660 = !DILocation(line: 2230, column: 43, scope: !7501)
!7661 = !DILocation(line: 2230, column: 51, scope: !7501)
!7662 = !DILocation(line: 2230, column: 11, scope: !7501)
!7663 = !DILocation(line: 2233, column: 17, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7501, file: !66, line: 2233, column: 15)
!7665 = !DILocation(line: 2233, column: 15, scope: !7501)
!7666 = !DILocation(line: 2235, column: 35, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7664, file: !66, line: 2234, column: 13)
!7668 = !DILocation(line: 2235, column: 40, scope: !7667)
!7669 = !DILocation(line: 2235, column: 46, scope: !7667)
!7670 = !DILocation(line: 2235, column: 44, scope: !7667)
!7671 = !DILocation(line: 2235, column: 53, scope: !7667)
!7672 = !DILocation(line: 2235, column: 27, scope: !7667)
!7673 = !DILocation(line: 2235, column: 25, scope: !7667)
!7674 = !DILocation(line: 2236, column: 21, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7667, file: !66, line: 2236, column: 19)
!7676 = !DILocation(line: 2236, column: 19, scope: !7667)
!7677 = !DILocation(line: 2237, column: 30, scope: !7675)
!7678 = !DILocation(line: 2237, column: 38, scope: !7675)
!7679 = !DILocation(line: 2237, column: 36, scope: !7675)
!7680 = !DILocation(line: 2237, column: 48, scope: !7675)
!7681 = !DILocation(line: 2237, column: 56, scope: !7675)
!7682 = !DILocation(line: 2237, column: 54, scope: !7675)
!7683 = !DILocation(line: 2237, column: 45, scope: !7675)
!7684 = !DILocation(line: 2237, column: 27, scope: !7675)
!7685 = !DILocation(line: 2237, column: 17, scope: !7675)
!7686 = !DILocation(line: 2238, column: 13, scope: !7667)
!7687 = distinct !{!7687, !7499, !7688}
!7688 = !DILocation(line: 2239, column: 9, scope: !7489)
!7689 = !DILocation(line: 2240, column: 5, scope: !7489)
!7690 = !DILocation(line: 2243, column: 22, scope: !7456)
!7691 = !DILocation(line: 2243, column: 29, scope: !7456)
!7692 = !DILocation(line: 2243, column: 36, scope: !7456)
!7693 = !DILocation(line: 2243, column: 3, scope: !7456)
!7694 = !DILocation(line: 2243, column: 60, scope: !7456)
!7695 = !DILocation(line: 2243, column: 66, scope: !7456)
!7696 = !DILocation(line: 2243, column: 43, scope: !7456)
!7697 = !DILocation(line: 2244, column: 22, scope: !7456)
!7698 = !DILocation(line: 2244, column: 29, scope: !7456)
!7699 = !DILocation(line: 2244, column: 36, scope: !7456)
!7700 = !DILocation(line: 2244, column: 3, scope: !7456)
!7701 = !DILocation(line: 2244, column: 60, scope: !7456)
!7702 = !DILocation(line: 2244, column: 66, scope: !7456)
!7703 = !DILocation(line: 2244, column: 43, scope: !7456)
!7704 = !DILocalVariable(name: "diff", scope: !7456, file: !66, line: 2245, type: !7)
!7705 = !DILocation(line: 2245, column: 7, scope: !7456)
!7706 = !DILocation(line: 2245, column: 22, scope: !7456)
!7707 = !DILocation(line: 2245, column: 30, scope: !7456)
!7708 = !DILocation(line: 2245, column: 14, scope: !7456)
!7709 = !DILocation(line: 2248, column: 9, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7456, file: !66, line: 2248, column: 7)
!7711 = !DILocation(line: 2248, column: 7, scope: !7456)
!7712 = !DILocation(line: 2250, column: 13, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !66, line: 2250, column: 11)
!7714 = distinct !DILexicalBlock(scope: !7710, file: !66, line: 2249, column: 5)
!7715 = !DILocation(line: 2250, column: 11, scope: !7714)
!7716 = !DILocation(line: 2252, column: 31, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7713, file: !66, line: 2251, column: 9)
!7718 = !DILocation(line: 2252, column: 38, scope: !7717)
!7719 = !DILocation(line: 2252, column: 45, scope: !7717)
!7720 = !DILocation(line: 2252, column: 23, scope: !7717)
!7721 = !DILocation(line: 2252, column: 21, scope: !7717)
!7722 = !DILocation(line: 2253, column: 17, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7717, file: !66, line: 2253, column: 15)
!7724 = !DILocation(line: 2253, column: 15, scope: !7717)
!7725 = !DILocation(line: 2254, column: 26, scope: !7723)
!7726 = !DILocation(line: 2254, column: 33, scope: !7723)
!7727 = !DILocation(line: 2254, column: 31, scope: !7723)
!7728 = !DILocation(line: 2254, column: 42, scope: !7723)
!7729 = !DILocation(line: 2254, column: 49, scope: !7723)
!7730 = !DILocation(line: 2254, column: 47, scope: !7723)
!7731 = !DILocation(line: 2254, column: 39, scope: !7723)
!7732 = !DILocation(line: 2254, column: 23, scope: !7723)
!7733 = !DILocation(line: 2254, column: 13, scope: !7723)
!7734 = !DILocation(line: 2255, column: 9, scope: !7717)
!7735 = !DILocation(line: 2257, column: 14, scope: !7714)
!7736 = !DILocation(line: 2257, column: 12, scope: !7714)
!7737 = !DILocation(line: 2258, column: 5, scope: !7714)
!7738 = !DILocation(line: 2260, column: 9, scope: !7456)
!7739 = !DILocation(line: 2260, column: 3, scope: !7456)
!7740 = !DILocation(line: 2262, column: 10, scope: !7456)
!7741 = !DILocation(line: 2262, column: 3, scope: !7456)
!7742 = distinct !DISubprogram(name: "xstrxfrm", scope: !66, file: !66, line: 2115, type: !513, scopeLine: 2116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7743 = !DILocalVariable(name: "dest", arg: 1, scope: !7742, file: !66, line: 2115, type: !493)
!7744 = !DILocation(line: 2115, column: 26, scope: !7742)
!7745 = !DILocalVariable(name: "src", arg: 2, scope: !7742, file: !66, line: 2115, type: !515)
!7746 = !DILocation(line: 2115, column: 53, scope: !7742)
!7747 = !DILocalVariable(name: "destsize", arg: 3, scope: !7742, file: !66, line: 2115, type: !55)
!7748 = !DILocation(line: 2115, column: 65, scope: !7742)
!7749 = !DILocation(line: 2117, column: 3, scope: !7742)
!7750 = !DILocation(line: 2117, column: 9, scope: !7742)
!7751 = !DILocalVariable(name: "translated_size", scope: !7742, file: !66, line: 2118, type: !55)
!7752 = !DILocation(line: 2118, column: 10, scope: !7742)
!7753 = !DILocation(line: 2118, column: 37, scope: !7742)
!7754 = !DILocation(line: 2118, column: 43, scope: !7742)
!7755 = !DILocation(line: 2118, column: 48, scope: !7742)
!7756 = !DILocation(line: 2118, column: 28, scope: !7742)
!7757 = !DILocation(line: 2120, column: 7, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7742, file: !66, line: 2120, column: 7)
!7759 = !DILocation(line: 2120, column: 7, scope: !7742)
!7760 = !DILocation(line: 2122, column: 17, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7758, file: !66, line: 2121, column: 5)
!7762 = !DILocation(line: 2122, column: 24, scope: !7761)
!7763 = !DILocation(line: 2122, column: 7, scope: !7761)
!7764 = !DILocation(line: 2123, column: 20, scope: !7761)
!7765 = !DILocation(line: 2123, column: 7, scope: !7761)
!7766 = !DILocation(line: 2124, column: 7, scope: !7761)
!7767 = !DILocation(line: 2129, column: 10, scope: !7742)
!7768 = !DILocation(line: 2129, column: 3, scope: !7742)
!7769 = distinct !DISubprogram(name: "find_unit_order", scope: !66, file: !66, line: 1959, type: !484, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7770 = !DILocalVariable(name: "number", arg: 1, scope: !7769, file: !66, line: 1959, type: !88)
!7771 = !DILocation(line: 1959, column: 30, scope: !7769)
!7772 = !DILocalVariable(name: "minus_sign", scope: !7769, file: !66, line: 1961, type: !103)
!7773 = !DILocation(line: 1961, column: 8, scope: !7769)
!7774 = !DILocation(line: 1961, column: 23, scope: !7769)
!7775 = !DILocation(line: 1961, column: 22, scope: !7769)
!7776 = !DILocation(line: 1961, column: 30, scope: !7769)
!7777 = !DILocalVariable(name: "p", scope: !7769, file: !66, line: 1962, type: !88)
!7778 = !DILocation(line: 1962, column: 15, scope: !7769)
!7779 = !DILocation(line: 1962, column: 19, scope: !7769)
!7780 = !DILocation(line: 1962, column: 28, scope: !7769)
!7781 = !DILocation(line: 1962, column: 26, scope: !7769)
!7782 = !DILocalVariable(name: "max_digit", scope: !7769, file: !66, line: 1963, type: !321)
!7783 = !DILocation(line: 1963, column: 17, scope: !7769)
!7784 = !DILocation(line: 1963, column: 29, scope: !7769)
!7785 = !DILocation(line: 1964, column: 13, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7769, file: !66, line: 1964, column: 7)
!7787 = !DILocation(line: 1964, column: 11, scope: !7786)
!7788 = !DILocation(line: 1964, column: 7, scope: !7769)
!7789 = !DILocalVariable(name: "ch", scope: !7790, file: !66, line: 1966, type: !321)
!7790 = distinct !DILexicalBlock(scope: !7786, file: !66, line: 1965, column: 5)
!7791 = !DILocation(line: 1966, column: 21, scope: !7790)
!7792 = !DILocation(line: 1966, column: 27, scope: !7790)
!7793 = !DILocation(line: 1966, column: 26, scope: !7790)
!7794 = !DILocalVariable(name: "order", scope: !7790, file: !66, line: 1967, type: !7)
!7795 = !DILocation(line: 1967, column: 11, scope: !7790)
!7796 = !DILocation(line: 1967, column: 30, scope: !7790)
!7797 = !DILocation(line: 1967, column: 19, scope: !7790)
!7798 = !DILocation(line: 1968, column: 15, scope: !7790)
!7799 = !DILocation(line: 1968, column: 29, scope: !7790)
!7800 = !DILocation(line: 1968, column: 28, scope: !7790)
!7801 = !DILocation(line: 1968, column: 37, scope: !7790)
!7802 = !DILocation(line: 1968, column: 7, scope: !7790)
!7803 = !DILocation(line: 1971, column: 5, scope: !7786)
!7804 = !DILocation(line: 1972, column: 1, scope: !7769)
!7805 = distinct !DISubprogram(name: "nan_compare", scope: !66, file: !66, line: 2009, type: !481, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7806 = !DILocalVariable(name: "sa", arg: 1, scope: !7805, file: !66, line: 2009, type: !88)
!7807 = !DILocation(line: 2009, column: 26, scope: !7805)
!7808 = !DILocalVariable(name: "sb", arg: 2, scope: !7805, file: !66, line: 2009, type: !88)
!7809 = !DILocation(line: 2009, column: 42, scope: !7805)
!7810 = !DILocalVariable(name: "a", scope: !7805, file: !66, line: 2011, type: !483)
!7811 = !DILocation(line: 2011, column: 15, scope: !7805)
!7812 = !DILocation(line: 2012, column: 3, scope: !7805)
!7813 = !DILocation(line: 2013, column: 16, scope: !7805)
!7814 = !DILocation(line: 2013, column: 7, scope: !7805)
!7815 = !DILocation(line: 2013, column: 5, scope: !7805)
!7816 = !DILocalVariable(name: "b", scope: !7805, file: !66, line: 2015, type: !483)
!7817 = !DILocation(line: 2015, column: 15, scope: !7805)
!7818 = !DILocation(line: 2016, column: 3, scope: !7805)
!7819 = !DILocation(line: 2017, column: 16, scope: !7805)
!7820 = !DILocation(line: 2017, column: 7, scope: !7805)
!7821 = !DILocation(line: 2017, column: 5, scope: !7805)
!7822 = !DILocation(line: 2019, column: 18, scope: !7805)
!7823 = !DILocation(line: 2019, column: 22, scope: !7805)
!7824 = !DILocation(line: 2019, column: 10, scope: !7805)
!7825 = !DILocation(line: 2019, column: 3, scope: !7805)
!7826 = distinct !DISubprogram(name: "sortlines_thread", scope: !66, file: !66, line: 3614, type: !687, scopeLine: 3615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7827 = !DILocalVariable(name: "data", arg: 1, scope: !7826, file: !66, line: 3614, type: !53)
!7828 = !DILocation(line: 3614, column: 25, scope: !7826)
!7829 = !DILocalVariable(name: "args", scope: !7826, file: !66, line: 3616, type: !689)
!7830 = !DILocation(line: 3616, column: 29, scope: !7826)
!7831 = !DILocation(line: 3616, column: 36, scope: !7826)
!7832 = !DILocation(line: 3617, column: 14, scope: !7826)
!7833 = !DILocation(line: 3617, column: 20, scope: !7826)
!7834 = !DILocation(line: 3617, column: 27, scope: !7826)
!7835 = !DILocation(line: 3617, column: 33, scope: !7826)
!7836 = !DILocation(line: 3617, column: 43, scope: !7826)
!7837 = !DILocation(line: 3617, column: 49, scope: !7826)
!7838 = !DILocation(line: 3618, column: 14, scope: !7826)
!7839 = !DILocation(line: 3618, column: 20, scope: !7826)
!7840 = !DILocation(line: 3618, column: 26, scope: !7826)
!7841 = !DILocation(line: 3618, column: 32, scope: !7826)
!7842 = !DILocation(line: 3618, column: 39, scope: !7826)
!7843 = !DILocation(line: 3618, column: 45, scope: !7826)
!7844 = !DILocation(line: 3619, column: 14, scope: !7826)
!7845 = !DILocation(line: 3619, column: 20, scope: !7826)
!7846 = !DILocation(line: 3617, column: 3, scope: !7826)
!7847 = !DILocation(line: 3620, column: 3, scope: !7826)
!7848 = !{!7849}
!7849 = !{i64 2, i64 3, i1 false}
!7850 = distinct !DISubprogram(name: "sequential_sort", scope: !66, file: !66, line: 3200, type: !703, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7851 = !DILocalVariable(name: "lines", arg: 1, scope: !7850, file: !66, line: 3200, type: !685)
!7852 = !DILocation(line: 3200, column: 40, scope: !7850)
!7853 = !DILocalVariable(name: "nlines", arg: 2, scope: !7850, file: !66, line: 3200, type: !55)
!7854 = !DILocation(line: 3200, column: 54, scope: !7850)
!7855 = !DILocalVariable(name: "temp", arg: 3, scope: !7850, file: !66, line: 3201, type: !685)
!7856 = !DILocation(line: 3201, column: 40, scope: !7850)
!7857 = !DILocalVariable(name: "to_temp", arg: 4, scope: !7850, file: !66, line: 3201, type: !103)
!7858 = !DILocation(line: 3201, column: 51, scope: !7850)
!7859 = !DILocation(line: 3203, column: 7, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7850, file: !66, line: 3203, column: 7)
!7861 = !DILocation(line: 3203, column: 14, scope: !7860)
!7862 = !DILocation(line: 3203, column: 7, scope: !7850)
!7863 = !DILocalVariable(name: "swap", scope: !7864, file: !66, line: 3208, type: !7)
!7864 = distinct !DILexicalBlock(scope: !7860, file: !66, line: 3204, column: 5)
!7865 = !DILocation(line: 3208, column: 11, scope: !7864)
!7866 = !DILocation(line: 3208, column: 33, scope: !7864)
!7867 = !DILocation(line: 3208, column: 45, scope: !7864)
!7868 = !DILocation(line: 3208, column: 23, scope: !7864)
!7869 = !DILocation(line: 3208, column: 21, scope: !7864)
!7870 = !DILocation(line: 3209, column: 11, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7864, file: !66, line: 3209, column: 11)
!7872 = !DILocation(line: 3209, column: 11, scope: !7864)
!7873 = !DILocation(line: 3211, column: 11, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7871, file: !66, line: 3210, column: 9)
!7875 = !DILocation(line: 3211, column: 22, scope: !7874)
!7876 = !DILocation(line: 3211, column: 33, scope: !7874)
!7877 = !DILocation(line: 3211, column: 31, scope: !7874)
!7878 = !DILocation(line: 3212, column: 11, scope: !7874)
!7879 = !DILocation(line: 3212, column: 22, scope: !7874)
!7880 = !DILocation(line: 3212, column: 33, scope: !7874)
!7881 = !DILocation(line: 3212, column: 31, scope: !7874)
!7882 = !DILocation(line: 3213, column: 9, scope: !7874)
!7883 = !DILocation(line: 3214, column: 16, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7871, file: !66, line: 3214, column: 16)
!7885 = !DILocation(line: 3214, column: 16, scope: !7871)
!7886 = !DILocation(line: 3216, column: 11, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7884, file: !66, line: 3215, column: 9)
!7888 = !DILocation(line: 3216, column: 22, scope: !7887)
!7889 = !DILocation(line: 3217, column: 11, scope: !7887)
!7890 = !DILocation(line: 3217, column: 23, scope: !7887)
!7891 = !DILocation(line: 3218, column: 11, scope: !7887)
!7892 = !DILocation(line: 3218, column: 23, scope: !7887)
!7893 = !DILocation(line: 3219, column: 9, scope: !7887)
!7894 = !DILocation(line: 3220, column: 5, scope: !7864)
!7895 = !DILocalVariable(name: "nlo", scope: !7896, file: !66, line: 3223, type: !55)
!7896 = distinct !DILexicalBlock(scope: !7860, file: !66, line: 3222, column: 5)
!7897 = !DILocation(line: 3223, column: 14, scope: !7896)
!7898 = !DILocation(line: 3223, column: 20, scope: !7896)
!7899 = !DILocation(line: 3223, column: 27, scope: !7896)
!7900 = !DILocalVariable(name: "nhi", scope: !7896, file: !66, line: 3224, type: !55)
!7901 = !DILocation(line: 3224, column: 14, scope: !7896)
!7902 = !DILocation(line: 3224, column: 20, scope: !7896)
!7903 = !DILocation(line: 3224, column: 29, scope: !7896)
!7904 = !DILocation(line: 3224, column: 27, scope: !7896)
!7905 = !DILocalVariable(name: "lo", scope: !7896, file: !66, line: 3225, type: !469)
!7906 = !DILocation(line: 3225, column: 20, scope: !7896)
!7907 = !DILocation(line: 3225, column: 25, scope: !7896)
!7908 = !DILocalVariable(name: "hi", scope: !7896, file: !66, line: 3226, type: !469)
!7909 = !DILocation(line: 3226, column: 20, scope: !7896)
!7910 = !DILocation(line: 3226, column: 25, scope: !7896)
!7911 = !DILocation(line: 3226, column: 33, scope: !7896)
!7912 = !DILocation(line: 3226, column: 31, scope: !7896)
!7913 = !DILocation(line: 3228, column: 24, scope: !7896)
!7914 = !DILocation(line: 3228, column: 28, scope: !7896)
!7915 = !DILocation(line: 3228, column: 33, scope: !7896)
!7916 = !DILocation(line: 3228, column: 41, scope: !7896)
!7917 = !DILocation(line: 3228, column: 51, scope: !7896)
!7918 = !DILocation(line: 3228, column: 38, scope: !7896)
!7919 = !DILocation(line: 3228, column: 61, scope: !7896)
!7920 = !DILocation(line: 3228, column: 7, scope: !7896)
!7921 = !DILocation(line: 3229, column: 15, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7896, file: !66, line: 3229, column: 11)
!7923 = !DILocation(line: 3229, column: 13, scope: !7922)
!7924 = !DILocation(line: 3229, column: 11, scope: !7896)
!7925 = !DILocation(line: 3230, column: 26, scope: !7922)
!7926 = !DILocation(line: 3230, column: 30, scope: !7922)
!7927 = !DILocation(line: 3230, column: 35, scope: !7922)
!7928 = !DILocation(line: 3230, column: 42, scope: !7922)
!7929 = !DILocation(line: 3230, column: 41, scope: !7922)
!7930 = !DILocation(line: 3230, column: 9, scope: !7922)
!7931 = !DILocation(line: 3231, column: 17, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7922, file: !66, line: 3231, column: 16)
!7933 = !DILocation(line: 3231, column: 16, scope: !7922)
!7934 = !DILocation(line: 3232, column: 9, scope: !7932)
!7935 = !DILocation(line: 3232, column: 20, scope: !7932)
!7936 = !DILocalVariable(name: "dest", scope: !7896, file: !66, line: 3234, type: !469)
!7937 = !DILocation(line: 3234, column: 20, scope: !7896)
!7938 = !DILocalVariable(name: "sorted_lo", scope: !7896, file: !66, line: 3235, type: !447)
!7939 = !DILocation(line: 3235, column: 26, scope: !7896)
!7940 = !DILocation(line: 3236, column: 11, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7896, file: !66, line: 3236, column: 11)
!7942 = !DILocation(line: 3236, column: 11, scope: !7896)
!7943 = !DILocation(line: 3238, column: 18, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7941, file: !66, line: 3237, column: 9)
!7945 = !DILocation(line: 3238, column: 16, scope: !7944)
!7946 = !DILocation(line: 3239, column: 23, scope: !7944)
!7947 = !DILocation(line: 3239, column: 21, scope: !7944)
!7948 = !DILocation(line: 3240, column: 9, scope: !7944)
!7949 = !DILocation(line: 3243, column: 18, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7941, file: !66, line: 3242, column: 9)
!7951 = !DILocation(line: 3243, column: 16, scope: !7950)
!7952 = !DILocation(line: 3244, column: 23, scope: !7950)
!7953 = !DILocation(line: 3244, column: 21, scope: !7950)
!7954 = !DILocation(line: 3246, column: 19, scope: !7896)
!7955 = !DILocation(line: 3246, column: 25, scope: !7896)
!7956 = !DILocation(line: 3246, column: 33, scope: !7896)
!7957 = !DILocation(line: 3246, column: 7, scope: !7896)
!7958 = !DILocation(line: 3248, column: 1, scope: !7850)
!7959 = distinct !DISubprogram(name: "queue_insert", scope: !66, file: !66, line: 3398, type: !708, scopeLine: 3399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7960 = !DILocalVariable(name: "queue", arg: 1, scope: !7959, file: !66, line: 3398, type: !630)
!7961 = !DILocation(line: 3398, column: 40, scope: !7959)
!7962 = !DILocalVariable(name: "node", arg: 2, scope: !7959, file: !66, line: 3398, type: !576)
!7963 = !DILocation(line: 3398, column: 66, scope: !7959)
!7964 = !DILocation(line: 3400, column: 24, scope: !7959)
!7965 = !DILocation(line: 3400, column: 31, scope: !7959)
!7966 = !DILocation(line: 3400, column: 3, scope: !7959)
!7967 = !DILocation(line: 3401, column: 16, scope: !7959)
!7968 = !DILocation(line: 3401, column: 23, scope: !7959)
!7969 = !DILocation(line: 3401, column: 39, scope: !7959)
!7970 = !DILocation(line: 3401, column: 3, scope: !7959)
!7971 = !DILocation(line: 3402, column: 3, scope: !7959)
!7972 = !DILocation(line: 3402, column: 9, scope: !7959)
!7973 = !DILocation(line: 3402, column: 16, scope: !7959)
!7974 = !DILocation(line: 3403, column: 25, scope: !7959)
!7975 = !DILocation(line: 3403, column: 32, scope: !7959)
!7976 = !DILocation(line: 3403, column: 3, scope: !7959)
!7977 = !DILocation(line: 3404, column: 26, scope: !7959)
!7978 = !DILocation(line: 3404, column: 33, scope: !7959)
!7979 = !DILocation(line: 3404, column: 3, scope: !7959)
!7980 = !DILocation(line: 3405, column: 1, scope: !7959)
!7981 = distinct !DISubprogram(name: "merge_loop", scope: !66, file: !66, line: 3556, type: !710, scopeLine: 3558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!7982 = !DILocalVariable(name: "queue", arg: 1, scope: !7981, file: !66, line: 3556, type: !630)
!7983 = !DILocation(line: 3556, column: 38, scope: !7981)
!7984 = !DILocalVariable(name: "total_lines", arg: 2, scope: !7981, file: !66, line: 3557, type: !55)
!7985 = !DILocation(line: 3557, column: 20, scope: !7981)
!7986 = !DILocalVariable(name: "tfp", arg: 3, scope: !7981, file: !66, line: 3557, type: !0)
!7987 = !DILocation(line: 3557, column: 39, scope: !7981)
!7988 = !DILocalVariable(name: "temp_output", arg: 4, scope: !7981, file: !66, line: 3557, type: !88)
!7989 = !DILocation(line: 3557, column: 56, scope: !7981)
!7990 = !DILocation(line: 3559, column: 3, scope: !7981)
!7991 = !DILocalVariable(name: "node", scope: !7992, file: !66, line: 3561, type: !576)
!7992 = distinct !DILexicalBlock(scope: !7981, file: !66, line: 3560, column: 5)
!7993 = !DILocation(line: 3561, column: 26, scope: !7992)
!7994 = !DILocation(line: 3561, column: 44, scope: !7992)
!7995 = !DILocation(line: 3561, column: 33, scope: !7992)
!7996 = !DILocation(line: 3563, column: 11, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7992, file: !66, line: 3563, column: 11)
!7998 = !DILocation(line: 3563, column: 17, scope: !7997)
!7999 = !DILocation(line: 3563, column: 23, scope: !7997)
!8000 = !DILocation(line: 3563, column: 11, scope: !7992)
!8001 = !DILocation(line: 3565, column: 24, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7997, file: !66, line: 3564, column: 9)
!8003 = !DILocation(line: 3565, column: 11, scope: !8002)
!8004 = !DILocation(line: 3567, column: 25, scope: !8002)
!8005 = !DILocation(line: 3567, column: 32, scope: !8002)
!8006 = !DILocation(line: 3567, column: 11, scope: !8002)
!8007 = !DILocation(line: 3568, column: 11, scope: !8002)
!8008 = !DILocation(line: 3570, column: 24, scope: !7992)
!8009 = !DILocation(line: 3570, column: 30, scope: !7992)
!8010 = !DILocation(line: 3570, column: 43, scope: !7992)
!8011 = !DILocation(line: 3570, column: 48, scope: !7992)
!8012 = !DILocation(line: 3570, column: 7, scope: !7992)
!8013 = !DILocation(line: 3571, column: 27, scope: !7992)
!8014 = !DILocation(line: 3571, column: 34, scope: !7992)
!8015 = !DILocation(line: 3571, column: 7, scope: !7992)
!8016 = !DILocation(line: 3572, column: 34, scope: !7992)
!8017 = !DILocation(line: 3572, column: 41, scope: !7992)
!8018 = !DILocation(line: 3572, column: 7, scope: !7992)
!8019 = !DILocation(line: 3574, column: 20, scope: !7992)
!8020 = !DILocation(line: 3574, column: 7, scope: !7992)
!8021 = distinct !{!8021, !7990, !8022}
!8022 = !DILocation(line: 3575, column: 5, scope: !7981)
!8023 = !DILocation(line: 3576, column: 1, scope: !7981)
!8024 = distinct !DISubprogram(name: "queue_pop", scope: !66, file: !66, line: 3410, type: !712, scopeLine: 3411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8025 = !DILocalVariable(name: "queue", arg: 1, scope: !8024, file: !66, line: 3410, type: !630)
!8026 = !DILocation(line: 3410, column: 37, scope: !8024)
!8027 = !DILocalVariable(name: "node", scope: !8024, file: !66, line: 3412, type: !576)
!8028 = !DILocation(line: 3412, column: 22, scope: !8024)
!8029 = !DILocation(line: 3413, column: 24, scope: !8024)
!8030 = !DILocation(line: 3413, column: 31, scope: !8024)
!8031 = !DILocation(line: 3413, column: 3, scope: !8024)
!8032 = !DILocation(line: 3414, column: 3, scope: !8024)
!8033 = !DILocation(line: 3414, column: 37, scope: !8024)
!8034 = !DILocation(line: 3414, column: 44, scope: !8024)
!8035 = !DILocation(line: 3414, column: 20, scope: !8024)
!8036 = !DILocation(line: 3414, column: 18, scope: !8024)
!8037 = !DILocation(line: 3414, column: 10, scope: !8024)
!8038 = !DILocation(line: 3415, column: 25, scope: !8024)
!8039 = !DILocation(line: 3415, column: 32, scope: !8024)
!8040 = !DILocation(line: 3415, column: 39, scope: !8024)
!8041 = !DILocation(line: 3415, column: 46, scope: !8024)
!8042 = !DILocation(line: 3415, column: 5, scope: !8024)
!8043 = distinct !{!8043, !8032, !8044}
!8044 = !DILocation(line: 3415, column: 51, scope: !8024)
!8045 = !DILocation(line: 3416, column: 26, scope: !8024)
!8046 = !DILocation(line: 3416, column: 33, scope: !8024)
!8047 = !DILocation(line: 3416, column: 3, scope: !8024)
!8048 = !DILocation(line: 3417, column: 14, scope: !8024)
!8049 = !DILocation(line: 3417, column: 3, scope: !8024)
!8050 = !DILocation(line: 3418, column: 3, scope: !8024)
!8051 = !DILocation(line: 3418, column: 9, scope: !8024)
!8052 = !DILocation(line: 3418, column: 16, scope: !8024)
!8053 = !DILocation(line: 3419, column: 10, scope: !8024)
!8054 = !DILocation(line: 3419, column: 3, scope: !8024)
!8055 = distinct !DISubprogram(name: "unlock_node", scope: !66, file: !66, line: 3365, type: !714, scopeLine: 3366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8056 = !DILocalVariable(name: "node", arg: 1, scope: !8055, file: !66, line: 3365, type: !576)
!8057 = !DILocation(line: 3365, column: 33, scope: !8055)
!8058 = !DILocation(line: 3367, column: 26, scope: !8055)
!8059 = !DILocation(line: 3367, column: 32, scope: !8055)
!8060 = !DILocation(line: 3367, column: 3, scope: !8055)
!8061 = !DILocation(line: 3368, column: 1, scope: !8055)
!8062 = distinct !DISubprogram(name: "mergelines_node", scope: !66, file: !66, line: 3450, type: !716, scopeLine: 3452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8063 = !DILocalVariable(name: "node", arg: 1, scope: !8062, file: !66, line: 3450, type: !682)
!8064 = !DILocation(line: 3450, column: 46, scope: !8062)
!8065 = !DILocalVariable(name: "total_lines", arg: 2, scope: !8062, file: !66, line: 3450, type: !55)
!8066 = !DILocation(line: 3450, column: 59, scope: !8062)
!8067 = !DILocalVariable(name: "tfp", arg: 3, scope: !8062, file: !66, line: 3451, type: !0)
!8068 = !DILocation(line: 3451, column: 24, scope: !8062)
!8069 = !DILocalVariable(name: "temp_output", arg: 4, scope: !8062, file: !66, line: 3451, type: !88)
!8070 = !DILocation(line: 3451, column: 41, scope: !8062)
!8071 = !DILocalVariable(name: "lo_orig", scope: !8062, file: !66, line: 3453, type: !469)
!8072 = !DILocation(line: 3453, column: 16, scope: !8062)
!8073 = !DILocation(line: 3453, column: 26, scope: !8062)
!8074 = !DILocation(line: 3453, column: 32, scope: !8062)
!8075 = !DILocalVariable(name: "hi_orig", scope: !8062, file: !66, line: 3454, type: !469)
!8076 = !DILocation(line: 3454, column: 16, scope: !8062)
!8077 = !DILocation(line: 3454, column: 26, scope: !8062)
!8078 = !DILocation(line: 3454, column: 32, scope: !8062)
!8079 = !DILocalVariable(name: "to_merge", scope: !8062, file: !66, line: 3455, type: !55)
!8080 = !DILocation(line: 3455, column: 10, scope: !8062)
!8081 = !DILocation(line: 3455, column: 21, scope: !8062)
!8082 = !DILocalVariable(name: "merged_lo", scope: !8062, file: !66, line: 3456, type: !55)
!8083 = !DILocation(line: 3456, column: 10, scope: !8062)
!8084 = !DILocalVariable(name: "merged_hi", scope: !8062, file: !66, line: 3457, type: !55)
!8085 = !DILocation(line: 3457, column: 10, scope: !8062)
!8086 = !DILocation(line: 3459, column: 7, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8062, file: !66, line: 3459, column: 7)
!8088 = !DILocation(line: 3459, column: 13, scope: !8087)
!8089 = !DILocation(line: 3459, column: 19, scope: !8087)
!8090 = !DILocation(line: 3459, column: 7, scope: !8062)
!8091 = !DILocalVariable(name: "dest", scope: !8092, file: !66, line: 3462, type: !469)
!8092 = distinct !DILexicalBlock(scope: !8087, file: !66, line: 3460, column: 5)
!8093 = !DILocation(line: 3462, column: 20, scope: !8092)
!8094 = !DILocation(line: 3462, column: 28, scope: !8092)
!8095 = !DILocation(line: 3462, column: 34, scope: !8092)
!8096 = !DILocation(line: 3462, column: 27, scope: !8092)
!8097 = !DILocation(line: 3463, column: 7, scope: !8092)
!8098 = !DILocation(line: 3463, column: 14, scope: !8092)
!8099 = !DILocation(line: 3463, column: 20, scope: !8092)
!8100 = !DILocation(line: 3463, column: 26, scope: !8092)
!8101 = !DILocation(line: 3463, column: 32, scope: !8092)
!8102 = !DILocation(line: 3463, column: 23, scope: !8092)
!8103 = !DILocation(line: 3463, column: 39, scope: !8092)
!8104 = !DILocation(line: 3463, column: 42, scope: !8092)
!8105 = !DILocation(line: 3463, column: 48, scope: !8092)
!8106 = !DILocation(line: 3463, column: 54, scope: !8092)
!8107 = !DILocation(line: 3463, column: 60, scope: !8092)
!8108 = !DILocation(line: 3463, column: 51, scope: !8092)
!8109 = !DILocation(line: 3463, column: 67, scope: !8092)
!8110 = !DILocation(line: 3463, column: 78, scope: !8092)
!8111 = !DILocation(line: 0, scope: !8092)
!8112 = !DILocation(line: 3464, column: 22, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8092, file: !66, line: 3464, column: 13)
!8114 = !DILocation(line: 3464, column: 28, scope: !8113)
!8115 = !DILocation(line: 3464, column: 31, scope: !8113)
!8116 = !DILocation(line: 3464, column: 36, scope: !8113)
!8117 = !DILocation(line: 3464, column: 42, scope: !8113)
!8118 = !DILocation(line: 3464, column: 45, scope: !8113)
!8119 = !DILocation(line: 3464, column: 13, scope: !8113)
!8120 = !DILocation(line: 3464, column: 50, scope: !8113)
!8121 = !DILocation(line: 3464, column: 13, scope: !8092)
!8122 = !DILocation(line: 3465, column: 12, scope: !8113)
!8123 = !DILocation(line: 3465, column: 24, scope: !8113)
!8124 = !DILocation(line: 3465, column: 30, scope: !8113)
!8125 = !DILocation(line: 3465, column: 22, scope: !8113)
!8126 = !DILocation(line: 3465, column: 21, scope: !8113)
!8127 = !DILocation(line: 3465, column: 11, scope: !8113)
!8128 = !DILocation(line: 3467, column: 12, scope: !8113)
!8129 = !DILocation(line: 3467, column: 24, scope: !8113)
!8130 = !DILocation(line: 3467, column: 30, scope: !8113)
!8131 = !DILocation(line: 3467, column: 22, scope: !8113)
!8132 = !DILocation(line: 3467, column: 21, scope: !8113)
!8133 = distinct !{!8133, !8097, !8134}
!8134 = !DILocation(line: 3467, column: 30, scope: !8092)
!8135 = !DILocation(line: 3469, column: 19, scope: !8092)
!8136 = !DILocation(line: 3469, column: 29, scope: !8092)
!8137 = !DILocation(line: 3469, column: 35, scope: !8092)
!8138 = !DILocation(line: 3469, column: 27, scope: !8092)
!8139 = !DILocation(line: 3469, column: 17, scope: !8092)
!8140 = !DILocation(line: 3470, column: 19, scope: !8092)
!8141 = !DILocation(line: 3470, column: 29, scope: !8092)
!8142 = !DILocation(line: 3470, column: 35, scope: !8092)
!8143 = !DILocation(line: 3470, column: 27, scope: !8092)
!8144 = !DILocation(line: 3470, column: 17, scope: !8092)
!8145 = !DILocation(line: 3472, column: 11, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8092, file: !66, line: 3472, column: 11)
!8147 = !DILocation(line: 3472, column: 17, scope: !8146)
!8148 = !DILocation(line: 3472, column: 24, scope: !8146)
!8149 = !DILocation(line: 3472, column: 21, scope: !8146)
!8150 = !DILocation(line: 3472, column: 11, scope: !8092)
!8151 = !DILocation(line: 3473, column: 9, scope: !8146)
!8152 = !DILocation(line: 3473, column: 16, scope: !8146)
!8153 = !DILocation(line: 3473, column: 22, scope: !8146)
!8154 = !DILocation(line: 3473, column: 28, scope: !8146)
!8155 = !DILocation(line: 3473, column: 34, scope: !8146)
!8156 = !DILocation(line: 3473, column: 25, scope: !8146)
!8157 = !DILocation(line: 3473, column: 41, scope: !8146)
!8158 = !DILocation(line: 3473, column: 52, scope: !8146)
!8159 = !DILocation(line: 0, scope: !8146)
!8160 = !DILocation(line: 3474, column: 12, scope: !8146)
!8161 = !DILocation(line: 3474, column: 24, scope: !8146)
!8162 = !DILocation(line: 3474, column: 30, scope: !8146)
!8163 = !DILocation(line: 3474, column: 22, scope: !8146)
!8164 = !DILocation(line: 3474, column: 21, scope: !8146)
!8165 = distinct !{!8165, !8151, !8162}
!8166 = !DILocation(line: 3475, column: 16, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8146, file: !66, line: 3475, column: 16)
!8168 = !DILocation(line: 3475, column: 22, scope: !8167)
!8169 = !DILocation(line: 3475, column: 29, scope: !8167)
!8170 = !DILocation(line: 3475, column: 26, scope: !8167)
!8171 = !DILocation(line: 3475, column: 16, scope: !8146)
!8172 = !DILocation(line: 3476, column: 9, scope: !8167)
!8173 = !DILocation(line: 3476, column: 16, scope: !8167)
!8174 = !DILocation(line: 3476, column: 22, scope: !8167)
!8175 = !DILocation(line: 3476, column: 28, scope: !8167)
!8176 = !DILocation(line: 3476, column: 34, scope: !8167)
!8177 = !DILocation(line: 3476, column: 25, scope: !8167)
!8178 = !DILocation(line: 3476, column: 41, scope: !8167)
!8179 = !DILocation(line: 3476, column: 52, scope: !8167)
!8180 = !DILocation(line: 0, scope: !8167)
!8181 = !DILocation(line: 3477, column: 12, scope: !8167)
!8182 = !DILocation(line: 3477, column: 24, scope: !8167)
!8183 = !DILocation(line: 3477, column: 30, scope: !8167)
!8184 = !DILocation(line: 3477, column: 22, scope: !8167)
!8185 = !DILocation(line: 3477, column: 21, scope: !8167)
!8186 = distinct !{!8186, !8172, !8183}
!8187 = !DILocation(line: 3478, column: 21, scope: !8092)
!8188 = !DILocation(line: 3478, column: 8, scope: !8092)
!8189 = !DILocation(line: 3478, column: 14, scope: !8092)
!8190 = !DILocation(line: 3478, column: 19, scope: !8092)
!8191 = !DILocation(line: 3479, column: 5, scope: !8092)
!8192 = !DILocation(line: 3483, column: 7, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8087, file: !66, line: 3481, column: 5)
!8194 = !DILocation(line: 3483, column: 14, scope: !8193)
!8195 = !DILocation(line: 3483, column: 20, scope: !8193)
!8196 = !DILocation(line: 3483, column: 26, scope: !8193)
!8197 = !DILocation(line: 3483, column: 32, scope: !8193)
!8198 = !DILocation(line: 3483, column: 23, scope: !8193)
!8199 = !DILocation(line: 3483, column: 39, scope: !8193)
!8200 = !DILocation(line: 3483, column: 42, scope: !8193)
!8201 = !DILocation(line: 3483, column: 48, scope: !8193)
!8202 = !DILocation(line: 3483, column: 54, scope: !8193)
!8203 = !DILocation(line: 3483, column: 60, scope: !8193)
!8204 = !DILocation(line: 3483, column: 51, scope: !8193)
!8205 = !DILocation(line: 3483, column: 67, scope: !8193)
!8206 = !DILocation(line: 3483, column: 78, scope: !8193)
!8207 = !DILocation(line: 0, scope: !8193)
!8208 = !DILocation(line: 3485, column: 24, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !66, line: 3485, column: 15)
!8210 = distinct !DILexicalBlock(scope: !8193, file: !66, line: 3484, column: 9)
!8211 = !DILocation(line: 3485, column: 30, scope: !8209)
!8212 = !DILocation(line: 3485, column: 33, scope: !8209)
!8213 = !DILocation(line: 3485, column: 38, scope: !8209)
!8214 = !DILocation(line: 3485, column: 44, scope: !8209)
!8215 = !DILocation(line: 3485, column: 47, scope: !8209)
!8216 = !DILocation(line: 3485, column: 15, scope: !8209)
!8217 = !DILocation(line: 3485, column: 52, scope: !8209)
!8218 = !DILocation(line: 3485, column: 15, scope: !8210)
!8219 = !DILocation(line: 3486, column: 29, scope: !8209)
!8220 = !DILocation(line: 3486, column: 35, scope: !8209)
!8221 = !DILocation(line: 3486, column: 27, scope: !8209)
!8222 = !DILocation(line: 3486, column: 39, scope: !8209)
!8223 = !DILocation(line: 3486, column: 44, scope: !8209)
!8224 = !DILocation(line: 3486, column: 13, scope: !8209)
!8225 = !DILocation(line: 3488, column: 29, scope: !8209)
!8226 = !DILocation(line: 3488, column: 35, scope: !8209)
!8227 = !DILocation(line: 3488, column: 27, scope: !8209)
!8228 = !DILocation(line: 3488, column: 39, scope: !8209)
!8229 = !DILocation(line: 3488, column: 44, scope: !8209)
!8230 = !DILocation(line: 3488, column: 13, scope: !8209)
!8231 = distinct !{!8231, !8192, !8232}
!8232 = !DILocation(line: 3489, column: 9, scope: !8193)
!8233 = !DILocation(line: 3491, column: 19, scope: !8193)
!8234 = !DILocation(line: 3491, column: 29, scope: !8193)
!8235 = !DILocation(line: 3491, column: 35, scope: !8193)
!8236 = !DILocation(line: 3491, column: 27, scope: !8193)
!8237 = !DILocation(line: 3491, column: 17, scope: !8193)
!8238 = !DILocation(line: 3492, column: 19, scope: !8193)
!8239 = !DILocation(line: 3492, column: 29, scope: !8193)
!8240 = !DILocation(line: 3492, column: 35, scope: !8193)
!8241 = !DILocation(line: 3492, column: 27, scope: !8193)
!8242 = !DILocation(line: 3492, column: 17, scope: !8193)
!8243 = !DILocation(line: 3494, column: 11, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8193, file: !66, line: 3494, column: 11)
!8245 = !DILocation(line: 3494, column: 17, scope: !8244)
!8246 = !DILocation(line: 3494, column: 24, scope: !8244)
!8247 = !DILocation(line: 3494, column: 21, scope: !8244)
!8248 = !DILocation(line: 3494, column: 11, scope: !8193)
!8249 = !DILocation(line: 3496, column: 11, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8244, file: !66, line: 3495, column: 9)
!8251 = !DILocation(line: 3496, column: 18, scope: !8250)
!8252 = !DILocation(line: 3496, column: 24, scope: !8250)
!8253 = !DILocation(line: 3496, column: 30, scope: !8250)
!8254 = !DILocation(line: 3496, column: 36, scope: !8250)
!8255 = !DILocation(line: 3496, column: 27, scope: !8250)
!8256 = !DILocation(line: 3496, column: 43, scope: !8250)
!8257 = !DILocation(line: 3496, column: 54, scope: !8250)
!8258 = !DILocation(line: 0, scope: !8250)
!8259 = !DILocation(line: 3497, column: 29, scope: !8250)
!8260 = !DILocation(line: 3497, column: 35, scope: !8250)
!8261 = !DILocation(line: 3497, column: 27, scope: !8250)
!8262 = !DILocation(line: 3497, column: 39, scope: !8250)
!8263 = !DILocation(line: 3497, column: 44, scope: !8250)
!8264 = !DILocation(line: 3497, column: 13, scope: !8250)
!8265 = distinct !{!8265, !8249, !8266}
!8266 = !DILocation(line: 3497, column: 55, scope: !8250)
!8267 = !DILocation(line: 3498, column: 9, scope: !8250)
!8268 = !DILocation(line: 3499, column: 16, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8244, file: !66, line: 3499, column: 16)
!8270 = !DILocation(line: 3499, column: 22, scope: !8269)
!8271 = !DILocation(line: 3499, column: 29, scope: !8269)
!8272 = !DILocation(line: 3499, column: 26, scope: !8269)
!8273 = !DILocation(line: 3499, column: 16, scope: !8244)
!8274 = !DILocation(line: 3501, column: 11, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8269, file: !66, line: 3500, column: 9)
!8276 = !DILocation(line: 3501, column: 18, scope: !8275)
!8277 = !DILocation(line: 3501, column: 24, scope: !8275)
!8278 = !DILocation(line: 3501, column: 30, scope: !8275)
!8279 = !DILocation(line: 3501, column: 36, scope: !8275)
!8280 = !DILocation(line: 3501, column: 27, scope: !8275)
!8281 = !DILocation(line: 3501, column: 43, scope: !8275)
!8282 = !DILocation(line: 3501, column: 54, scope: !8275)
!8283 = !DILocation(line: 0, scope: !8275)
!8284 = !DILocation(line: 3502, column: 29, scope: !8275)
!8285 = !DILocation(line: 3502, column: 35, scope: !8275)
!8286 = !DILocation(line: 3502, column: 27, scope: !8275)
!8287 = !DILocation(line: 3502, column: 39, scope: !8275)
!8288 = !DILocation(line: 3502, column: 44, scope: !8275)
!8289 = !DILocation(line: 3502, column: 13, scope: !8275)
!8290 = distinct !{!8290, !8274, !8291}
!8291 = !DILocation(line: 3502, column: 55, scope: !8275)
!8292 = !DILocation(line: 3503, column: 9, scope: !8275)
!8293 = !DILocation(line: 3507, column: 15, scope: !8062)
!8294 = !DILocation(line: 3507, column: 25, scope: !8062)
!8295 = !DILocation(line: 3507, column: 31, scope: !8062)
!8296 = !DILocation(line: 3507, column: 23, scope: !8062)
!8297 = !DILocation(line: 3507, column: 13, scope: !8062)
!8298 = !DILocation(line: 3508, column: 15, scope: !8062)
!8299 = !DILocation(line: 3508, column: 25, scope: !8062)
!8300 = !DILocation(line: 3508, column: 31, scope: !8062)
!8301 = !DILocation(line: 3508, column: 23, scope: !8062)
!8302 = !DILocation(line: 3508, column: 13, scope: !8062)
!8303 = !DILocation(line: 3509, column: 16, scope: !8062)
!8304 = !DILocation(line: 3509, column: 3, scope: !8062)
!8305 = !DILocation(line: 3509, column: 9, scope: !8062)
!8306 = !DILocation(line: 3509, column: 13, scope: !8062)
!8307 = !DILocation(line: 3510, column: 16, scope: !8062)
!8308 = !DILocation(line: 3510, column: 3, scope: !8062)
!8309 = !DILocation(line: 3510, column: 9, scope: !8062)
!8310 = !DILocation(line: 3510, column: 13, scope: !8062)
!8311 = !DILocation(line: 3511, column: 1, scope: !8062)
!8312 = distinct !DISubprogram(name: "queue_check_insert", scope: !66, file: !66, line: 3518, type: !708, scopeLine: 3519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8313 = !DILocalVariable(name: "queue", arg: 1, scope: !8312, file: !66, line: 3518, type: !630)
!8314 = !DILocation(line: 3518, column: 46, scope: !8312)
!8315 = !DILocalVariable(name: "node", arg: 2, scope: !8312, file: !66, line: 3518, type: !576)
!8316 = !DILocation(line: 3518, column: 72, scope: !8312)
!8317 = !DILocation(line: 3520, column: 9, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8312, file: !66, line: 3520, column: 7)
!8319 = !DILocation(line: 3520, column: 15, scope: !8318)
!8320 = !DILocation(line: 3520, column: 7, scope: !8312)
!8321 = !DILocalVariable(name: "lo_avail", scope: !8322, file: !66, line: 3522, type: !103)
!8322 = distinct !DILexicalBlock(scope: !8318, file: !66, line: 3521, column: 5)
!8323 = !DILocation(line: 3522, column: 12, scope: !8322)
!8324 = !DILocation(line: 3522, column: 24, scope: !8322)
!8325 = !DILocation(line: 3522, column: 30, scope: !8322)
!8326 = !DILocation(line: 3522, column: 35, scope: !8322)
!8327 = !DILocation(line: 3522, column: 41, scope: !8322)
!8328 = !DILocation(line: 3522, column: 33, scope: !8322)
!8329 = !DILocation(line: 3522, column: 49, scope: !8322)
!8330 = !DILocalVariable(name: "hi_avail", scope: !8322, file: !66, line: 3523, type: !103)
!8331 = !DILocation(line: 3523, column: 12, scope: !8322)
!8332 = !DILocation(line: 3523, column: 24, scope: !8322)
!8333 = !DILocation(line: 3523, column: 30, scope: !8322)
!8334 = !DILocation(line: 3523, column: 35, scope: !8322)
!8335 = !DILocation(line: 3523, column: 41, scope: !8322)
!8336 = !DILocation(line: 3523, column: 33, scope: !8322)
!8337 = !DILocation(line: 3523, column: 49, scope: !8322)
!8338 = !DILocation(line: 3524, column: 11, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8322, file: !66, line: 3524, column: 11)
!8340 = !DILocation(line: 3524, column: 11, scope: !8322)
!8341 = !DILocation(line: 3524, column: 22, scope: !8339)
!8342 = !DILocation(line: 3524, column: 31, scope: !8339)
!8343 = !DILocation(line: 3524, column: 36, scope: !8339)
!8344 = !DILocation(line: 3524, column: 42, scope: !8339)
!8345 = !DILocation(line: 3524, column: 48, scope: !8339)
!8346 = !DILocation(line: 3524, column: 57, scope: !8339)
!8347 = !DILocation(line: 3524, column: 62, scope: !8339)
!8348 = !DILocation(line: 3524, column: 68, scope: !8339)
!8349 = !DILocation(line: 3525, column: 23, scope: !8339)
!8350 = !DILocation(line: 3525, column: 30, scope: !8339)
!8351 = !DILocation(line: 3525, column: 9, scope: !8339)
!8352 = !DILocation(line: 3526, column: 5, scope: !8322)
!8353 = !DILocation(line: 3527, column: 1, scope: !8312)
!8354 = distinct !DISubprogram(name: "queue_check_insert_parent", scope: !66, file: !66, line: 3532, type: !708, scopeLine: 3534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8355 = !DILocalVariable(name: "queue", arg: 1, scope: !8354, file: !66, line: 3532, type: !630)
!8356 = !DILocation(line: 3532, column: 53, scope: !8354)
!8357 = !DILocalVariable(name: "node", arg: 2, scope: !8354, file: !66, line: 3533, type: !576)
!8358 = !DILocation(line: 3533, column: 47, scope: !8354)
!8359 = !DILocation(line: 3535, column: 7, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8354, file: !66, line: 3535, column: 7)
!8361 = !DILocation(line: 3535, column: 13, scope: !8360)
!8362 = !DILocation(line: 3535, column: 19, scope: !8360)
!8363 = !DILocation(line: 3535, column: 7, scope: !8354)
!8364 = !DILocation(line: 3537, column: 18, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8360, file: !66, line: 3536, column: 5)
!8366 = !DILocation(line: 3537, column: 24, scope: !8365)
!8367 = !DILocation(line: 3537, column: 7, scope: !8365)
!8368 = !DILocation(line: 3538, column: 27, scope: !8365)
!8369 = !DILocation(line: 3538, column: 34, scope: !8365)
!8370 = !DILocation(line: 3538, column: 40, scope: !8365)
!8371 = !DILocation(line: 3538, column: 7, scope: !8365)
!8372 = !DILocation(line: 3539, column: 20, scope: !8365)
!8373 = !DILocation(line: 3539, column: 26, scope: !8365)
!8374 = !DILocation(line: 3539, column: 7, scope: !8365)
!8375 = !DILocation(line: 3540, column: 5, scope: !8365)
!8376 = !DILocation(line: 3541, column: 12, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8360, file: !66, line: 3541, column: 12)
!8378 = !DILocation(line: 3541, column: 18, scope: !8377)
!8379 = !DILocation(line: 3541, column: 24, scope: !8377)
!8380 = !DILocation(line: 3541, column: 30, scope: !8377)
!8381 = !DILocation(line: 3541, column: 22, scope: !8377)
!8382 = !DILocation(line: 3541, column: 34, scope: !8377)
!8383 = !DILocation(line: 3541, column: 12, scope: !8360)
!8384 = !DILocation(line: 3545, column: 21, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8377, file: !66, line: 3542, column: 5)
!8386 = !DILocation(line: 3545, column: 28, scope: !8385)
!8387 = !DILocation(line: 3545, column: 34, scope: !8385)
!8388 = !DILocation(line: 3545, column: 7, scope: !8385)
!8389 = !DILocation(line: 3546, column: 5, scope: !8385)
!8390 = !DILocation(line: 3547, column: 1, scope: !8354)
!8391 = distinct !DISubprogram(name: "lock_node", scope: !66, file: !66, line: 3357, type: !714, scopeLine: 3358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8392 = !DILocalVariable(name: "node", arg: 1, scope: !8391, file: !66, line: 3357, type: !576)
!8393 = !DILocation(line: 3357, column: 31, scope: !8391)
!8394 = !DILocation(line: 3359, column: 24, scope: !8391)
!8395 = !DILocation(line: 3359, column: 30, scope: !8391)
!8396 = !DILocation(line: 3359, column: 3, scope: !8391)
!8397 = !DILocation(line: 3360, column: 1, scope: !8391)
!8398 = distinct !DISubprogram(name: "mergelines", scope: !66, file: !66, line: 3153, type: !705, scopeLine: 3155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8399 = !DILocalVariable(name: "t", arg: 1, scope: !8398, file: !66, line: 3153, type: !685)
!8400 = !DILocation(line: 3153, column: 35, scope: !8398)
!8401 = !DILocalVariable(name: "nlines", arg: 2, scope: !8398, file: !66, line: 3153, type: !55)
!8402 = !DILocation(line: 3153, column: 45, scope: !8398)
!8403 = !DILocalVariable(name: "lo", arg: 3, scope: !8398, file: !66, line: 3154, type: !707)
!8404 = !DILocation(line: 3154, column: 41, scope: !8398)
!8405 = !DILocalVariable(name: "nlo", scope: !8398, file: !66, line: 3156, type: !55)
!8406 = !DILocation(line: 3156, column: 10, scope: !8398)
!8407 = !DILocation(line: 3156, column: 16, scope: !8398)
!8408 = !DILocation(line: 3156, column: 23, scope: !8398)
!8409 = !DILocalVariable(name: "nhi", scope: !8398, file: !66, line: 3157, type: !55)
!8410 = !DILocation(line: 3157, column: 10, scope: !8398)
!8411 = !DILocation(line: 3157, column: 16, scope: !8398)
!8412 = !DILocation(line: 3157, column: 25, scope: !8398)
!8413 = !DILocation(line: 3157, column: 23, scope: !8398)
!8414 = !DILocalVariable(name: "hi", scope: !8398, file: !66, line: 3158, type: !469)
!8415 = !DILocation(line: 3158, column: 16, scope: !8398)
!8416 = !DILocation(line: 3158, column: 21, scope: !8398)
!8417 = !DILocation(line: 3158, column: 25, scope: !8398)
!8418 = !DILocation(line: 3158, column: 23, scope: !8398)
!8419 = !DILocation(line: 3160, column: 3, scope: !8398)
!8420 = !DILocation(line: 3161, column: 18, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8398, file: !66, line: 3161, column: 9)
!8422 = !DILocation(line: 3161, column: 21, scope: !8421)
!8423 = !DILocation(line: 3161, column: 26, scope: !8421)
!8424 = !DILocation(line: 3161, column: 29, scope: !8421)
!8425 = !DILocation(line: 3161, column: 9, scope: !8421)
!8426 = !DILocation(line: 3161, column: 34, scope: !8421)
!8427 = !DILocation(line: 3161, column: 9, scope: !8398)
!8428 = !DILocation(line: 3163, column: 10, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8421, file: !66, line: 3162, column: 7)
!8430 = !DILocation(line: 3163, column: 17, scope: !8429)
!8431 = !DILocation(line: 3163, column: 16, scope: !8429)
!8432 = !DILocation(line: 3164, column: 15, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8429, file: !66, line: 3164, column: 13)
!8434 = !DILocation(line: 3164, column: 13, scope: !8429)
!8435 = !DILocation(line: 3168, column: 13, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8433, file: !66, line: 3165, column: 11)
!8437 = !DILocation(line: 3170, column: 7, scope: !8429)
!8438 = !DILocation(line: 3173, column: 10, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8421, file: !66, line: 3172, column: 7)
!8440 = !DILocation(line: 3173, column: 17, scope: !8439)
!8441 = !DILocation(line: 3173, column: 16, scope: !8439)
!8442 = !DILocation(line: 3174, column: 15, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8439, file: !66, line: 3174, column: 13)
!8444 = !DILocation(line: 3174, column: 13, scope: !8439)
!8445 = !DILocation(line: 3176, column: 13, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8443, file: !66, line: 3175, column: 11)
!8447 = !DILocation(line: 3177, column: 16, scope: !8446)
!8448 = !DILocation(line: 3177, column: 23, scope: !8446)
!8449 = !DILocation(line: 3177, column: 22, scope: !8446)
!8450 = !DILocation(line: 3177, column: 15, scope: !8446)
!8451 = !DILocation(line: 3178, column: 20, scope: !8446)
!8452 = distinct !{!8452, !8445, !8453}
!8453 = !DILocation(line: 3178, column: 25, scope: !8446)
!8454 = !DILocation(line: 3180, column: 13, scope: !8446)
!8455 = distinct !{!8455, !8419, !8456}
!8456 = !DILocation(line: 3182, column: 7, scope: !8398)
!8457 = !DILocation(line: 3183, column: 1, scope: !8398)
!8458 = distinct !DISubprogram(name: "init_node", scope: !66, file: !66, line: 3299, type: !680, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8459 = !DILocalVariable(name: "parent", arg: 1, scope: !8458, file: !66, line: 3299, type: !682)
!8460 = !DILocation(line: 3299, column: 40, scope: !8458)
!8461 = !DILocalVariable(name: "node_pool", arg: 2, scope: !8458, file: !66, line: 3300, type: !682)
!8462 = !DILocation(line: 3300, column: 40, scope: !8458)
!8463 = !DILocalVariable(name: "dest", arg: 3, scope: !8458, file: !66, line: 3301, type: !469)
!8464 = !DILocation(line: 3301, column: 25, scope: !8458)
!8465 = !DILocalVariable(name: "nthreads", arg: 4, scope: !8458, file: !66, line: 3301, type: !55)
!8466 = !DILocation(line: 3301, column: 38, scope: !8458)
!8467 = !DILocalVariable(name: "total_lines", arg: 5, scope: !8458, file: !66, line: 3302, type: !55)
!8468 = !DILocation(line: 3302, column: 19, scope: !8458)
!8469 = !DILocalVariable(name: "is_lo_child", arg: 6, scope: !8458, file: !66, line: 3302, type: !103)
!8470 = !DILocation(line: 3302, column: 37, scope: !8458)
!8471 = !DILocalVariable(name: "nlines", scope: !8458, file: !66, line: 3304, type: !55)
!8472 = !DILocation(line: 3304, column: 10, scope: !8458)
!8473 = !DILocation(line: 3304, column: 20, scope: !8458)
!8474 = !DILocation(line: 3304, column: 34, scope: !8458)
!8475 = !DILocation(line: 3304, column: 42, scope: !8458)
!8476 = !DILocation(line: 3304, column: 48, scope: !8458)
!8477 = !DILocation(line: 3304, column: 56, scope: !8458)
!8478 = !DILocalVariable(name: "nlo", scope: !8458, file: !66, line: 3305, type: !55)
!8479 = !DILocation(line: 3305, column: 10, scope: !8458)
!8480 = !DILocation(line: 3305, column: 16, scope: !8458)
!8481 = !DILocation(line: 3305, column: 23, scope: !8458)
!8482 = !DILocalVariable(name: "nhi", scope: !8458, file: !66, line: 3306, type: !55)
!8483 = !DILocation(line: 3306, column: 10, scope: !8458)
!8484 = !DILocation(line: 3306, column: 16, scope: !8458)
!8485 = !DILocation(line: 3306, column: 25, scope: !8458)
!8486 = !DILocation(line: 3306, column: 23, scope: !8458)
!8487 = !DILocalVariable(name: "lo", scope: !8458, file: !66, line: 3307, type: !469)
!8488 = !DILocation(line: 3307, column: 16, scope: !8458)
!8489 = !DILocation(line: 3307, column: 21, scope: !8458)
!8490 = !DILocation(line: 3307, column: 28, scope: !8458)
!8491 = !DILocation(line: 3307, column: 26, scope: !8458)
!8492 = !DILocalVariable(name: "hi", scope: !8458, file: !66, line: 3308, type: !469)
!8493 = !DILocation(line: 3308, column: 16, scope: !8458)
!8494 = !DILocation(line: 3308, column: 21, scope: !8458)
!8495 = !DILocation(line: 3308, column: 26, scope: !8458)
!8496 = !DILocation(line: 3308, column: 24, scope: !8458)
!8497 = !DILocalVariable(name: "parent_end", scope: !8458, file: !66, line: 3309, type: !584)
!8498 = !DILocation(line: 3309, column: 17, scope: !8458)
!8499 = !DILocation(line: 3309, column: 31, scope: !8458)
!8500 = !DILocation(line: 3309, column: 46, scope: !8458)
!8501 = !DILocation(line: 3309, column: 54, scope: !8458)
!8502 = !DILocation(line: 3309, column: 64, scope: !8458)
!8503 = !DILocation(line: 3309, column: 72, scope: !8458)
!8504 = !DILocalVariable(name: "node", scope: !8458, file: !66, line: 3311, type: !576)
!8505 = !DILocation(line: 3311, column: 22, scope: !8458)
!8506 = !DILocation(line: 3311, column: 38, scope: !8458)
!8507 = !DILocation(line: 3312, column: 29, scope: !8458)
!8508 = !DILocation(line: 3312, column: 14, scope: !8458)
!8509 = !DILocation(line: 3312, column: 20, scope: !8458)
!8510 = !DILocation(line: 3312, column: 27, scope: !8458)
!8511 = !DILocation(line: 3312, column: 3, scope: !8458)
!8512 = !DILocation(line: 3312, column: 9, scope: !8458)
!8513 = !DILocation(line: 3312, column: 12, scope: !8458)
!8514 = !DILocation(line: 3313, column: 29, scope: !8458)
!8515 = !DILocation(line: 3313, column: 14, scope: !8458)
!8516 = !DILocation(line: 3313, column: 20, scope: !8458)
!8517 = !DILocation(line: 3313, column: 27, scope: !8458)
!8518 = !DILocation(line: 3313, column: 3, scope: !8458)
!8519 = !DILocation(line: 3313, column: 9, scope: !8458)
!8520 = !DILocation(line: 3313, column: 12, scope: !8458)
!8521 = !DILocation(line: 3314, column: 16, scope: !8458)
!8522 = !DILocation(line: 3314, column: 3, scope: !8458)
!8523 = !DILocation(line: 3314, column: 9, scope: !8458)
!8524 = !DILocation(line: 3314, column: 14, scope: !8458)
!8525 = !DILocation(line: 3315, column: 15, scope: !8458)
!8526 = !DILocation(line: 3315, column: 3, scope: !8458)
!8527 = !DILocation(line: 3315, column: 9, scope: !8458)
!8528 = !DILocation(line: 3315, column: 13, scope: !8458)
!8529 = !DILocation(line: 3316, column: 15, scope: !8458)
!8530 = !DILocation(line: 3316, column: 3, scope: !8458)
!8531 = !DILocation(line: 3316, column: 9, scope: !8458)
!8532 = !DILocation(line: 3316, column: 13, scope: !8458)
!8533 = !DILocation(line: 3317, column: 18, scope: !8458)
!8534 = !DILocation(line: 3317, column: 3, scope: !8458)
!8535 = !DILocation(line: 3317, column: 9, scope: !8458)
!8536 = !DILocation(line: 3317, column: 16, scope: !8458)
!8537 = !DILocation(line: 3318, column: 17, scope: !8458)
!8538 = !DILocation(line: 3318, column: 25, scope: !8458)
!8539 = !DILocation(line: 3318, column: 31, scope: !8458)
!8540 = !DILocation(line: 3318, column: 3, scope: !8458)
!8541 = !DILocation(line: 3318, column: 9, scope: !8458)
!8542 = !DILocation(line: 3318, column: 15, scope: !8458)
!8543 = !DILocation(line: 3319, column: 3, scope: !8458)
!8544 = !DILocation(line: 3319, column: 9, scope: !8458)
!8545 = !DILocation(line: 3319, column: 16, scope: !8458)
!8546 = !DILocation(line: 3320, column: 24, scope: !8458)
!8547 = !DILocation(line: 3320, column: 30, scope: !8458)
!8548 = !DILocation(line: 3320, column: 3, scope: !8458)
!8549 = !DILocation(line: 3322, column: 7, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8458, file: !66, line: 3322, column: 7)
!8551 = !DILocation(line: 3322, column: 16, scope: !8550)
!8552 = !DILocation(line: 3322, column: 7, scope: !8458)
!8553 = !DILocalVariable(name: "lo_threads", scope: !8554, file: !66, line: 3324, type: !55)
!8554 = distinct !DILexicalBlock(scope: !8550, file: !66, line: 3323, column: 5)
!8555 = !DILocation(line: 3324, column: 14, scope: !8554)
!8556 = !DILocation(line: 3324, column: 27, scope: !8554)
!8557 = !DILocation(line: 3324, column: 36, scope: !8554)
!8558 = !DILocalVariable(name: "hi_threads", scope: !8554, file: !66, line: 3325, type: !55)
!8559 = !DILocation(line: 3325, column: 14, scope: !8554)
!8560 = !DILocation(line: 3325, column: 27, scope: !8554)
!8561 = !DILocation(line: 3325, column: 38, scope: !8554)
!8562 = !DILocation(line: 3325, column: 36, scope: !8554)
!8563 = !DILocation(line: 3326, column: 24, scope: !8554)
!8564 = !DILocation(line: 3326, column: 7, scope: !8554)
!8565 = !DILocation(line: 3326, column: 13, scope: !8554)
!8566 = !DILocation(line: 3326, column: 22, scope: !8554)
!8567 = !DILocation(line: 3327, column: 30, scope: !8554)
!8568 = !DILocation(line: 3327, column: 36, scope: !8554)
!8569 = !DILocation(line: 3327, column: 47, scope: !8554)
!8570 = !DILocation(line: 3327, column: 51, scope: !8554)
!8571 = !DILocation(line: 3328, column: 30, scope: !8554)
!8572 = !DILocation(line: 3327, column: 19, scope: !8554)
!8573 = !DILocation(line: 3327, column: 17, scope: !8554)
!8574 = !DILocation(line: 3329, column: 24, scope: !8554)
!8575 = !DILocation(line: 3329, column: 7, scope: !8554)
!8576 = !DILocation(line: 3329, column: 13, scope: !8554)
!8577 = !DILocation(line: 3329, column: 22, scope: !8554)
!8578 = !DILocation(line: 3330, column: 30, scope: !8554)
!8579 = !DILocation(line: 3330, column: 36, scope: !8554)
!8580 = !DILocation(line: 3330, column: 47, scope: !8554)
!8581 = !DILocation(line: 3330, column: 51, scope: !8554)
!8582 = !DILocation(line: 3331, column: 30, scope: !8554)
!8583 = !DILocation(line: 3330, column: 19, scope: !8554)
!8584 = !DILocation(line: 3330, column: 17, scope: !8554)
!8585 = !DILocation(line: 3332, column: 5, scope: !8554)
!8586 = !DILocation(line: 3335, column: 7, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8550, file: !66, line: 3334, column: 5)
!8588 = !DILocation(line: 3335, column: 13, scope: !8587)
!8589 = !DILocation(line: 3335, column: 22, scope: !8587)
!8590 = !DILocation(line: 3336, column: 7, scope: !8587)
!8591 = !DILocation(line: 3336, column: 13, scope: !8587)
!8592 = !DILocation(line: 3336, column: 22, scope: !8587)
!8593 = !DILocation(line: 3338, column: 10, scope: !8458)
!8594 = !DILocation(line: 3338, column: 3, scope: !8458)
!8595 = distinct !DISubprogram(name: "compare_nodes", scope: !66, file: !66, line: 3345, type: !337, scopeLine: 3346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8596 = !DILocalVariable(name: "a", arg: 1, scope: !8595, file: !66, line: 3345, type: !339)
!8597 = !DILocation(line: 3345, column: 28, scope: !8595)
!8598 = !DILocalVariable(name: "b", arg: 2, scope: !8595, file: !66, line: 3345, type: !339)
!8599 = !DILocation(line: 3345, column: 43, scope: !8595)
!8600 = !DILocalVariable(name: "nodea", scope: !8595, file: !66, line: 3347, type: !676)
!8601 = !DILocation(line: 3347, column: 28, scope: !8595)
!8602 = !DILocation(line: 3347, column: 36, scope: !8595)
!8603 = !DILocalVariable(name: "nodeb", scope: !8595, file: !66, line: 3348, type: !676)
!8604 = !DILocation(line: 3348, column: 28, scope: !8595)
!8605 = !DILocation(line: 3348, column: 36, scope: !8595)
!8606 = !DILocation(line: 3349, column: 7, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8595, file: !66, line: 3349, column: 7)
!8608 = !DILocation(line: 3349, column: 14, scope: !8607)
!8609 = !DILocation(line: 3349, column: 23, scope: !8607)
!8610 = !DILocation(line: 3349, column: 30, scope: !8607)
!8611 = !DILocation(line: 3349, column: 20, scope: !8607)
!8612 = !DILocation(line: 3349, column: 7, scope: !8595)
!8613 = !DILocation(line: 3350, column: 15, scope: !8607)
!8614 = !DILocation(line: 3350, column: 22, scope: !8607)
!8615 = !DILocation(line: 3350, column: 28, scope: !8607)
!8616 = !DILocation(line: 3350, column: 35, scope: !8607)
!8617 = !DILocation(line: 3350, column: 26, scope: !8607)
!8618 = !DILocation(line: 3350, column: 43, scope: !8607)
!8619 = !DILocation(line: 3350, column: 50, scope: !8607)
!8620 = !DILocation(line: 3350, column: 56, scope: !8607)
!8621 = !DILocation(line: 3350, column: 63, scope: !8607)
!8622 = !DILocation(line: 3350, column: 54, scope: !8607)
!8623 = !DILocation(line: 3350, column: 40, scope: !8607)
!8624 = !DILocation(line: 3350, column: 7, scope: !8607)
!8625 = !DILocation(line: 3351, column: 10, scope: !8595)
!8626 = !DILocation(line: 3351, column: 17, scope: !8595)
!8627 = !DILocation(line: 3351, column: 25, scope: !8595)
!8628 = !DILocation(line: 3351, column: 32, scope: !8595)
!8629 = !DILocation(line: 3351, column: 23, scope: !8595)
!8630 = !DILocation(line: 3351, column: 3, scope: !8595)
!8631 = !DILocation(line: 3352, column: 1, scope: !8595)
!8632 = distinct !DISubprogram(name: "maybe_create_temp", scope: !66, file: !66, line: 1121, type: !570, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8633 = !DILocalVariable(name: "pfp", arg: 1, scope: !8632, file: !66, line: 1121, type: !534)
!8634 = !DILocation(line: 1121, column: 27, scope: !8632)
!8635 = !DILocalVariable(name: "survive_fd_exhaustion", arg: 2, scope: !8632, file: !66, line: 1121, type: !103)
!8636 = !DILocation(line: 1121, column: 37, scope: !8632)
!8637 = !DILocalVariable(name: "tempfd", scope: !8632, file: !66, line: 1123, type: !7)
!8638 = !DILocation(line: 1123, column: 7, scope: !8632)
!8639 = !DILocalVariable(name: "node", scope: !8632, file: !66, line: 1124, type: !293)
!8640 = !DILocation(line: 1124, column: 20, scope: !8632)
!8641 = !DILocation(line: 1124, column: 54, scope: !8632)
!8642 = !DILocation(line: 1124, column: 27, scope: !8632)
!8643 = !DILocation(line: 1125, column: 9, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8632, file: !66, line: 1125, column: 7)
!8645 = !DILocation(line: 1125, column: 7, scope: !8632)
!8646 = !DILocation(line: 1126, column: 5, scope: !8644)
!8647 = !DILocation(line: 1128, column: 3, scope: !8632)
!8648 = !DILocation(line: 1128, column: 9, scope: !8632)
!8649 = !DILocation(line: 1128, column: 15, scope: !8632)
!8650 = !DILocation(line: 1130, column: 7, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8632, file: !66, line: 1130, column: 7)
!8652 = !DILocation(line: 1130, column: 7, scope: !8632)
!8653 = !DILocalVariable(name: "pipefds", scope: !8654, file: !66, line: 1132, type: !544)
!8654 = distinct !DILexicalBlock(scope: !8651, file: !66, line: 1131, column: 5)
!8655 = !DILocation(line: 1132, column: 11, scope: !8654)
!8656 = !DILocation(line: 1134, column: 30, scope: !8654)
!8657 = !DILocation(line: 1134, column: 19, scope: !8654)
!8658 = !DILocation(line: 1134, column: 7, scope: !8654)
!8659 = !DILocation(line: 1134, column: 13, scope: !8654)
!8660 = !DILocation(line: 1134, column: 17, scope: !8654)
!8661 = !DILocation(line: 1135, column: 15, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8654, file: !66, line: 1135, column: 11)
!8663 = !DILocation(line: 1135, column: 21, scope: !8662)
!8664 = !DILocation(line: 1135, column: 13, scope: !8662)
!8665 = !DILocation(line: 1135, column: 11, scope: !8654)
!8666 = !DILocation(line: 1137, column: 18, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8662, file: !66, line: 1136, column: 9)
!8668 = !DILocation(line: 1137, column: 11, scope: !8667)
!8669 = !DILocation(line: 1138, column: 18, scope: !8667)
!8670 = !DILocation(line: 1138, column: 11, scope: !8667)
!8671 = !DILocation(line: 1139, column: 20, scope: !8667)
!8672 = !DILocation(line: 1139, column: 18, scope: !8667)
!8673 = !DILocation(line: 1141, column: 26, scope: !8667)
!8674 = !DILocation(line: 1141, column: 11, scope: !8667)
!8675 = !DILocation(line: 1142, column: 9, scope: !8667)
!8676 = !DILocation(line: 1143, column: 16, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8662, file: !66, line: 1143, column: 16)
!8678 = !DILocation(line: 1143, column: 22, scope: !8677)
!8679 = !DILocation(line: 1143, column: 26, scope: !8677)
!8680 = !DILocation(line: 1143, column: 16, scope: !8662)
!8681 = !DILocation(line: 1147, column: 18, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8677, file: !66, line: 1144, column: 9)
!8683 = !DILocation(line: 1147, column: 11, scope: !8682)
!8684 = !DILocation(line: 1148, column: 20, scope: !8682)
!8685 = !DILocation(line: 1148, column: 11, scope: !8682)
!8686 = !DILocation(line: 1149, column: 20, scope: !8682)
!8687 = !DILocation(line: 1149, column: 11, scope: !8682)
!8688 = !DILocation(line: 1151, column: 19, scope: !8682)
!8689 = !DILocation(line: 1151, column: 37, scope: !8682)
!8690 = !DILocation(line: 1151, column: 11, scope: !8682)
!8691 = !DILocation(line: 1153, column: 27, scope: !8682)
!8692 = !DILocation(line: 1153, column: 11, scope: !8682)
!8693 = !DILocation(line: 1155, column: 5, scope: !8654)
!8694 = !DILocation(line: 1157, column: 18, scope: !8632)
!8695 = !DILocation(line: 1157, column: 10, scope: !8632)
!8696 = !DILocation(line: 1157, column: 4, scope: !8632)
!8697 = !DILocation(line: 1157, column: 8, scope: !8632)
!8698 = !DILocation(line: 1158, column: 10, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8632, file: !66, line: 1158, column: 7)
!8700 = !DILocation(line: 1158, column: 9, scope: !8699)
!8701 = !DILocation(line: 1158, column: 7, scope: !8632)
!8702 = !DILocation(line: 1159, column: 15, scope: !8699)
!8703 = !DILocation(line: 1159, column: 52, scope: !8699)
!8704 = !DILocation(line: 1159, column: 58, scope: !8699)
!8705 = !DILocation(line: 1159, column: 5, scope: !8699)
!8706 = !DILocation(line: 1161, column: 10, scope: !8632)
!8707 = !DILocation(line: 1161, column: 3, scope: !8632)
!8708 = !DILocation(line: 1162, column: 1, scope: !8632)
!8709 = !DILocalVariable(name: "pfd", arg: 1, scope: !805, file: !66, line: 846, type: !264)
!8710 = !DILocation(line: 846, column: 24, scope: !805)
!8711 = !DILocalVariable(name: "survive_fd_exhaustion", arg: 2, scope: !805, file: !66, line: 846, type: !103)
!8712 = !DILocation(line: 846, column: 34, scope: !805)
!8713 = !DILocalVariable(name: "fd", scope: !805, file: !66, line: 850, type: !7)
!8714 = !DILocation(line: 850, column: 7, scope: !805)
!8715 = !DILocalVariable(name: "saved_errno", scope: !805, file: !66, line: 851, type: !7)
!8716 = !DILocation(line: 851, column: 7, scope: !805)
!8717 = !DILocalVariable(name: "temp_dir", scope: !805, file: !66, line: 852, type: !88)
!8718 = !DILocation(line: 852, column: 15, scope: !805)
!8719 = !DILocation(line: 852, column: 26, scope: !805)
!8720 = !DILocation(line: 852, column: 36, scope: !805)
!8721 = !DILocalVariable(name: "len", scope: !805, file: !66, line: 853, type: !55)
!8722 = !DILocation(line: 853, column: 10, scope: !805)
!8723 = !DILocation(line: 853, column: 24, scope: !805)
!8724 = !DILocation(line: 853, column: 16, scope: !805)
!8725 = !DILocalVariable(name: "node", scope: !805, file: !66, line: 854, type: !293)
!8726 = !DILocation(line: 854, column: 20, scope: !805)
!8727 = !DILocation(line: 855, column: 14, scope: !805)
!8728 = !DILocation(line: 855, column: 5, scope: !805)
!8729 = !DILocalVariable(name: "file", scope: !805, file: !66, line: 856, type: !9)
!8730 = !DILocation(line: 856, column: 9, scope: !805)
!8731 = !DILocation(line: 856, column: 16, scope: !805)
!8732 = !DILocation(line: 856, column: 22, scope: !805)
!8733 = !DILocalVariable(name: "cs", scope: !805, file: !66, line: 857, type: !348)
!8734 = !DILocation(line: 857, column: 20, scope: !805)
!8735 = !DILocation(line: 859, column: 11, scope: !805)
!8736 = !DILocation(line: 859, column: 17, scope: !805)
!8737 = !DILocation(line: 859, column: 27, scope: !805)
!8738 = !DILocation(line: 859, column: 3, scope: !805)
!8739 = !DILocation(line: 860, column: 11, scope: !805)
!8740 = !DILocation(line: 860, column: 18, scope: !805)
!8741 = !DILocation(line: 860, column: 16, scope: !805)
!8742 = !DILocation(line: 860, column: 3, scope: !805)
!8743 = !DILocation(line: 861, column: 3, scope: !805)
!8744 = !DILocation(line: 861, column: 9, scope: !805)
!8745 = !DILocation(line: 861, column: 14, scope: !805)
!8746 = !DILocation(line: 862, column: 7, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !805, file: !66, line: 862, column: 7)
!8748 = !DILocation(line: 862, column: 27, scope: !8747)
!8749 = !DILocation(line: 862, column: 24, scope: !8747)
!8750 = !DILocation(line: 862, column: 7, scope: !805)
!8751 = !DILocation(line: 863, column: 20, scope: !8747)
!8752 = !DILocation(line: 863, column: 5, scope: !8747)
!8753 = !DILocation(line: 866, column: 3, scope: !805)
!8754 = !DILocation(line: 867, column: 18, scope: !805)
!8755 = !DILocation(line: 867, column: 8, scope: !805)
!8756 = !DILocation(line: 867, column: 6, scope: !805)
!8757 = !DILocation(line: 868, column: 12, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !805, file: !66, line: 868, column: 7)
!8759 = !DILocation(line: 868, column: 9, scope: !8758)
!8760 = !DILocation(line: 868, column: 7, scope: !805)
!8761 = !DILocation(line: 870, column: 19, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8758, file: !66, line: 869, column: 5)
!8763 = !DILocation(line: 870, column: 8, scope: !8762)
!8764 = !DILocation(line: 870, column: 17, scope: !8762)
!8765 = !DILocation(line: 871, column: 19, scope: !8762)
!8766 = !DILocation(line: 871, column: 25, scope: !8762)
!8767 = !DILocation(line: 871, column: 16, scope: !8762)
!8768 = !DILocation(line: 872, column: 5, scope: !8762)
!8769 = !DILocation(line: 873, column: 17, scope: !805)
!8770 = !DILocation(line: 873, column: 15, scope: !805)
!8771 = !DILocation(line: 874, column: 3, scope: !805)
!8772 = !DILocation(line: 875, column: 11, scope: !805)
!8773 = !DILocation(line: 875, column: 3, scope: !805)
!8774 = !DILocation(line: 875, column: 9, scope: !805)
!8775 = !DILocation(line: 877, column: 7, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !805, file: !66, line: 877, column: 7)
!8777 = !DILocation(line: 877, column: 10, scope: !8776)
!8778 = !DILocation(line: 877, column: 7, scope: !805)
!8779 = !DILocation(line: 879, column: 14, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !66, line: 879, column: 11)
!8781 = distinct !DILexicalBlock(scope: !8776, file: !66, line: 878, column: 5)
!8782 = !DILocation(line: 879, column: 36, scope: !8780)
!8783 = !DILocation(line: 879, column: 39, scope: !8780)
!8784 = !DILocation(line: 879, column: 45, scope: !8780)
!8785 = !DILocation(line: 879, column: 11, scope: !8781)
!8786 = !DILocation(line: 880, column: 9, scope: !8780)
!8787 = !DILocation(line: 882, column: 13, scope: !8781)
!8788 = !DILocation(line: 882, column: 7, scope: !8781)
!8789 = !DILocation(line: 883, column: 12, scope: !8781)
!8790 = !DILocation(line: 884, column: 5, scope: !8781)
!8791 = !DILocation(line: 886, column: 10, scope: !805)
!8792 = !DILocation(line: 886, column: 4, scope: !805)
!8793 = !DILocation(line: 886, column: 8, scope: !805)
!8794 = !DILocation(line: 887, column: 10, scope: !805)
!8795 = !DILocation(line: 887, column: 3, scope: !805)
!8796 = distinct !DISubprogram(name: "pipe_fork", scope: !66, file: !66, line: 1044, type: !555, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8797 = !DILocalVariable(name: "pipefds", arg: 1, scope: !8796, file: !66, line: 1044, type: !264)
!8798 = !DILocation(line: 1044, column: 16, scope: !8796)
!8799 = !DILocalVariable(name: "tries", arg: 2, scope: !8796, file: !66, line: 1044, type: !55)
!8800 = !DILocation(line: 1044, column: 35, scope: !8796)
!8801 = !DILocalVariable(name: "saved_temphead", scope: !8796, file: !66, line: 1047, type: !293)
!8802 = !DILocation(line: 1047, column: 20, scope: !8796)
!8803 = !DILocalVariable(name: "saved_errno", scope: !8796, file: !66, line: 1048, type: !7)
!8804 = !DILocation(line: 1048, column: 7, scope: !8796)
!8805 = !DILocalVariable(name: "wait_retry", scope: !8796, file: !66, line: 1049, type: !377)
!8806 = !DILocation(line: 1049, column: 10, scope: !8796)
!8807 = !DILocalVariable(name: "pid", scope: !8796, file: !66, line: 1050, type: !299)
!8808 = !DILocation(line: 1050, column: 9, scope: !8796)
!8809 = !DILocalVariable(name: "cs", scope: !8796, file: !66, line: 1051, type: !348)
!8810 = !DILocation(line: 1051, column: 20, scope: !8796)
!8811 = !DILocation(line: 1053, column: 14, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8796, file: !66, line: 1053, column: 7)
!8813 = !DILocation(line: 1053, column: 7, scope: !8812)
!8814 = !DILocation(line: 1053, column: 34, scope: !8812)
!8815 = !DILocation(line: 1053, column: 7, scope: !8796)
!8816 = !DILocation(line: 1054, column: 5, scope: !8812)
!8817 = !DILocation(line: 1063, column: 7, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8796, file: !66, line: 1063, column: 7)
!8819 = !DILocation(line: 1063, column: 14, scope: !8818)
!8820 = !DILocation(line: 1063, column: 20, scope: !8818)
!8821 = !DILocation(line: 1063, column: 18, scope: !8818)
!8822 = !DILocation(line: 1063, column: 7, scope: !8796)
!8823 = !DILocation(line: 1064, column: 5, scope: !8818)
!8824 = !DILocation(line: 1066, column: 3, scope: !8796)
!8825 = !DILocation(line: 1066, column: 15, scope: !8796)
!8826 = !DILocation(line: 1070, column: 7, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8796, file: !66, line: 1067, column: 5)
!8828 = !DILocation(line: 1071, column: 24, scope: !8827)
!8829 = !DILocation(line: 1071, column: 22, scope: !8827)
!8830 = !DILocation(line: 1072, column: 16, scope: !8827)
!8831 = !DILocation(line: 1074, column: 13, scope: !8827)
!8832 = !DILocation(line: 1074, column: 11, scope: !8827)
!8833 = !DILocation(line: 1075, column: 21, scope: !8827)
!8834 = !DILocation(line: 1075, column: 19, scope: !8827)
!8835 = !DILocation(line: 1076, column: 11, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8827, file: !66, line: 1076, column: 11)
!8837 = !DILocation(line: 1076, column: 11, scope: !8827)
!8838 = !DILocation(line: 1077, column: 20, scope: !8836)
!8839 = !DILocation(line: 1077, column: 18, scope: !8836)
!8840 = !DILocation(line: 1077, column: 9, scope: !8836)
!8841 = !DILocation(line: 1079, column: 7, scope: !8827)
!8842 = !DILocation(line: 1080, column: 15, scope: !8827)
!8843 = !DILocation(line: 1080, column: 7, scope: !8827)
!8844 = !DILocation(line: 1080, column: 13, scope: !8827)
!8845 = !DILocation(line: 1082, column: 16, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8827, file: !66, line: 1082, column: 11)
!8847 = !DILocation(line: 1082, column: 13, scope: !8846)
!8848 = !DILocation(line: 1082, column: 20, scope: !8846)
!8849 = !DILocation(line: 1082, column: 23, scope: !8846)
!8850 = !DILocation(line: 1082, column: 29, scope: !8846)
!8851 = !DILocation(line: 1082, column: 11, scope: !8827)
!8852 = !DILocation(line: 1083, column: 9, scope: !8846)
!8853 = !DILocation(line: 1086, column: 23, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8846, file: !66, line: 1085, column: 9)
!8855 = !DILocation(line: 1086, column: 11, scope: !8854)
!8856 = !DILocation(line: 1087, column: 22, scope: !8854)
!8857 = !DILocation(line: 1088, column: 11, scope: !8854)
!8858 = distinct !{!8858, !8824, !8859}
!8859 = !DILocation(line: 1090, column: 5, scope: !8796)
!8860 = !DILocation(line: 1092, column: 7, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8796, file: !66, line: 1092, column: 7)
!8862 = !DILocation(line: 1092, column: 11, scope: !8861)
!8863 = !DILocation(line: 1092, column: 7, scope: !8796)
!8864 = !DILocation(line: 1094, column: 21, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !66, line: 1093, column: 5)
!8866 = !DILocation(line: 1094, column: 19, scope: !8865)
!8867 = !DILocation(line: 1095, column: 14, scope: !8865)
!8868 = !DILocation(line: 1095, column: 7, scope: !8865)
!8869 = !DILocation(line: 1096, column: 14, scope: !8865)
!8870 = !DILocation(line: 1096, column: 7, scope: !8865)
!8871 = !DILocation(line: 1097, column: 15, scope: !8865)
!8872 = !DILocation(line: 1097, column: 7, scope: !8865)
!8873 = !DILocation(line: 1097, column: 13, scope: !8865)
!8874 = !DILocation(line: 1098, column: 5, scope: !8865)
!8875 = !DILocation(line: 1099, column: 12, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8861, file: !66, line: 1099, column: 12)
!8877 = !DILocation(line: 1099, column: 16, scope: !8876)
!8878 = !DILocation(line: 1099, column: 12, scope: !8861)
!8879 = !DILocation(line: 1101, column: 7, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8876, file: !66, line: 1100, column: 5)
!8881 = !DILocation(line: 1102, column: 7, scope: !8880)
!8882 = !DILocation(line: 1103, column: 5, scope: !8880)
!8883 = !DILocation(line: 1105, column: 5, scope: !8876)
!8884 = !DILocation(line: 1107, column: 10, scope: !8796)
!8885 = !DILocation(line: 1107, column: 3, scope: !8796)
!8886 = !DILocation(line: 1112, column: 1, scope: !8796)
!8887 = distinct !DISubprogram(name: "register_proc", scope: !66, file: !66, line: 737, type: !560, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8888 = !DILocalVariable(name: "temp", arg: 1, scope: !8887, file: !66, line: 737, type: !293)
!8889 = !DILocation(line: 737, column: 33, scope: !8887)
!8890 = !DILocation(line: 739, column: 9, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8887, file: !66, line: 739, column: 7)
!8892 = !DILocation(line: 739, column: 7, scope: !8887)
!8893 = !DILocation(line: 741, column: 17, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8891, file: !66, line: 740, column: 5)
!8895 = !DILocation(line: 741, column: 15, scope: !8894)
!8896 = !DILocation(line: 745, column: 13, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8894, file: !66, line: 745, column: 11)
!8898 = !DILocation(line: 745, column: 11, scope: !8894)
!8899 = !DILocation(line: 746, column: 9, scope: !8897)
!8900 = !DILocation(line: 747, column: 5, scope: !8894)
!8901 = !DILocation(line: 749, column: 3, scope: !8887)
!8902 = !DILocation(line: 749, column: 9, scope: !8887)
!8903 = !DILocation(line: 749, column: 15, scope: !8887)
!8904 = !DILocation(line: 751, column: 22, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8887, file: !66, line: 751, column: 7)
!8906 = !DILocation(line: 751, column: 31, scope: !8905)
!8907 = !DILocation(line: 751, column: 9, scope: !8905)
!8908 = !DILocation(line: 751, column: 7, scope: !8887)
!8909 = !DILocation(line: 752, column: 5, scope: !8905)
!8910 = !DILocation(line: 753, column: 1, scope: !8887)
!8911 = distinct !DISubprogram(name: "move_fd", scope: !66, file: !66, line: 1028, type: !530, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8912 = !DILocalVariable(name: "oldfd", arg: 1, scope: !8911, file: !66, line: 1028, type: !7)
!8913 = !DILocation(line: 1028, column: 14, scope: !8911)
!8914 = !DILocalVariable(name: "newfd", arg: 2, scope: !8911, file: !66, line: 1028, type: !7)
!8915 = !DILocation(line: 1028, column: 25, scope: !8911)
!8916 = !DILocation(line: 1030, column: 7, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8911, file: !66, line: 1030, column: 7)
!8918 = !DILocation(line: 1030, column: 16, scope: !8917)
!8919 = !DILocation(line: 1030, column: 13, scope: !8917)
!8920 = !DILocation(line: 1030, column: 7, scope: !8911)
!8921 = !DILocation(line: 1033, column: 13, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8917, file: !66, line: 1031, column: 5)
!8923 = !DILocation(line: 1033, column: 20, scope: !8922)
!8924 = !DILocation(line: 1033, column: 7, scope: !8922)
!8925 = !DILocation(line: 1034, column: 14, scope: !8922)
!8926 = !DILocation(line: 1034, column: 7, scope: !8922)
!8927 = !DILocation(line: 1035, column: 5, scope: !8922)
!8928 = !DILocation(line: 1036, column: 1, scope: !8911)
!8929 = distinct !DISubprogram(name: "async_safe_die", scope: !66, file: !66, line: 379, type: !557, scopeLine: 380, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8930 = !DILocalVariable(name: "errnum", arg: 1, scope: !8929, file: !66, line: 379, type: !7)
!8931 = !DILocation(line: 379, column: 21, scope: !8929)
!8932 = !DILocalVariable(name: "errstr", arg: 2, scope: !8929, file: !66, line: 379, type: !88)
!8933 = !DILocation(line: 379, column: 41, scope: !8929)
!8934 = !DILocalVariable(name: "__x", scope: !8935, file: !66, line: 381, type: !1712)
!8935 = distinct !DILexicalBlock(scope: !8929, file: !66, line: 381, column: 3)
!8936 = !DILocation(line: 381, column: 3, scope: !8935)
!8937 = !DILocation(line: 388, column: 7, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8929, file: !66, line: 388, column: 7)
!8939 = !DILocation(line: 388, column: 7, scope: !8929)
!8940 = !DILocalVariable(name: "errbuf", scope: !8941, file: !66, line: 390, type: !559)
!8941 = distinct !DILexicalBlock(scope: !8938, file: !66, line: 389, column: 5)
!8942 = !DILocation(line: 390, column: 12, scope: !8941)
!8943 = !DILocalVariable(name: "p", scope: !8941, file: !66, line: 391, type: !9)
!8944 = !DILocation(line: 391, column: 13, scope: !8941)
!8945 = !DILocation(line: 391, column: 27, scope: !8941)
!8946 = !DILocation(line: 391, column: 35, scope: !8941)
!8947 = !DILocation(line: 391, column: 17, scope: !8941)
!8948 = !DILocalVariable(name: "__x", scope: !8949, file: !66, line: 392, type: !1712)
!8949 = distinct !DILexicalBlock(scope: !8941, file: !66, line: 392, column: 7)
!8950 = !DILocation(line: 392, column: 7, scope: !8949)
!8951 = !DILocalVariable(name: "__x", scope: !8952, file: !66, line: 393, type: !1712)
!8952 = distinct !DILexicalBlock(scope: !8941, file: !66, line: 393, column: 7)
!8953 = !DILocation(line: 393, column: 7, scope: !8952)
!8954 = !DILocation(line: 394, column: 5, scope: !8941)
!8955 = !DILocalVariable(name: "__x", scope: !8956, file: !66, line: 396, type: !1712)
!8956 = distinct !DILexicalBlock(scope: !8929, file: !66, line: 396, column: 3)
!8957 = !DILocation(line: 396, column: 3, scope: !8956)
!8958 = !DILocation(line: 398, column: 3, scope: !8929)
!8959 = distinct !DISubprogram(name: "proctab_hasher", scope: !66, file: !66, line: 687, type: !562, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8960 = !DILocalVariable(name: "entry", arg: 1, scope: !8959, file: !66, line: 687, type: !339)
!8961 = !DILocation(line: 687, column: 29, scope: !8959)
!8962 = !DILocalVariable(name: "tabsize", arg: 2, scope: !8959, file: !66, line: 687, type: !55)
!8963 = !DILocation(line: 687, column: 43, scope: !8959)
!8964 = !DILocalVariable(name: "node", scope: !8959, file: !66, line: 689, type: !343)
!8965 = !DILocation(line: 689, column: 26, scope: !8959)
!8966 = !DILocation(line: 689, column: 33, scope: !8959)
!8967 = !DILocation(line: 690, column: 10, scope: !8959)
!8968 = !DILocation(line: 690, column: 16, scope: !8959)
!8969 = !DILocation(line: 690, column: 22, scope: !8959)
!8970 = !DILocation(line: 690, column: 20, scope: !8959)
!8971 = !DILocation(line: 690, column: 3, scope: !8959)
!8972 = distinct !DISubprogram(name: "proctab_comparator", scope: !66, file: !66, line: 694, type: !564, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8973 = !DILocalVariable(name: "e1", arg: 1, scope: !8972, file: !66, line: 694, type: !339)
!8974 = !DILocation(line: 694, column: 33, scope: !8972)
!8975 = !DILocalVariable(name: "e2", arg: 2, scope: !8972, file: !66, line: 694, type: !339)
!8976 = !DILocation(line: 694, column: 49, scope: !8972)
!8977 = !DILocalVariable(name: "n1", scope: !8972, file: !66, line: 696, type: !343)
!8978 = !DILocation(line: 696, column: 26, scope: !8972)
!8979 = !DILocation(line: 696, column: 31, scope: !8972)
!8980 = !DILocalVariable(name: "n2", scope: !8972, file: !66, line: 697, type: !343)
!8981 = !DILocation(line: 697, column: 26, scope: !8972)
!8982 = !DILocation(line: 697, column: 31, scope: !8972)
!8983 = !DILocation(line: 698, column: 10, scope: !8972)
!8984 = !DILocation(line: 698, column: 14, scope: !8972)
!8985 = !DILocation(line: 698, column: 21, scope: !8972)
!8986 = !DILocation(line: 698, column: 25, scope: !8972)
!8987 = !DILocation(line: 698, column: 18, scope: !8972)
!8988 = !DILocation(line: 698, column: 3, scope: !8972)
!8989 = distinct !DISubprogram(name: "reap_some", scope: !66, file: !66, line: 794, type: !168, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8990 = !DILocation(line: 796, column: 3, scope: !8989)
!8991 = !DILocation(line: 797, column: 3, scope: !8989)
!8992 = !DILocation(line: 798, column: 1, scope: !8989)
!8993 = distinct !DISubprogram(name: "cs_enter", scope: !66, file: !66, line: 638, type: !345, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!8994 = !DILocalVariable(name: "status", arg: 1, scope: !8993, file: !66, line: 638, type: !347)
!8995 = !DILocation(line: 638, column: 29, scope: !8993)
!8996 = !DILocalVariable(name: "ret", scope: !8993, file: !66, line: 640, type: !7)
!8997 = !DILocation(line: 640, column: 7, scope: !8993)
!8998 = !DILocation(line: 640, column: 59, scope: !8993)
!8999 = !DILocation(line: 640, column: 67, scope: !8993)
!9000 = !DILocation(line: 640, column: 13, scope: !8993)
!9001 = !DILocation(line: 641, column: 19, scope: !8993)
!9002 = !DILocation(line: 641, column: 23, scope: !8993)
!9003 = !DILocation(line: 641, column: 3, scope: !8993)
!9004 = !DILocation(line: 641, column: 11, scope: !8993)
!9005 = !DILocation(line: 641, column: 17, scope: !8993)
!9006 = !{!9007, !2431, i64 0}
!9007 = !{!"cs_status", !2431, i64 0, !2562, i64 8}
!9008 = !DILocation(line: 642, column: 1, scope: !8993)
!9009 = distinct !DISubprogram(name: "cs_leave", scope: !66, file: !66, line: 646, type: !352, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9010 = !DILocalVariable(name: "status", arg: 1, scope: !9009, file: !66, line: 646, type: !354)
!9011 = !DILocation(line: 646, column: 35, scope: !9009)
!9012 = !DILocation(line: 648, column: 7, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9009, file: !66, line: 648, column: 7)
!9014 = !DILocation(line: 648, column: 15, scope: !9013)
!9015 = !DILocation(line: 648, column: 7, scope: !9009)
!9016 = !DILocation(line: 651, column: 38, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9013, file: !66, line: 649, column: 5)
!9018 = !DILocation(line: 651, column: 46, scope: !9017)
!9019 = !DILocation(line: 651, column: 7, scope: !9017)
!9020 = !DILocation(line: 652, column: 5, scope: !9017)
!9021 = !DILocation(line: 653, column: 1, scope: !9009)
!9022 = distinct !DISubprogram(name: "reap_exited", scope: !66, file: !66, line: 785, type: !168, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9023 = !DILocation(line: 787, column: 3, scope: !9022)
!9024 = !DILocation(line: 787, column: 14, scope: !9022)
!9025 = !DILocation(line: 787, column: 12, scope: !9022)
!9026 = !DILocation(line: 787, column: 21, scope: !9022)
!9027 = !DILocation(line: 787, column: 24, scope: !9022)
!9028 = !DILocation(line: 0, scope: !9022)
!9029 = !DILocation(line: 788, column: 5, scope: !9022)
!9030 = distinct !{!9030, !9023, !9029}
!9031 = !DILocation(line: 789, column: 1, scope: !9022)
!9032 = distinct !DISubprogram(name: "default_sort_size", scope: !66, file: !66, line: 1466, type: !626, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9033 = !DILocalVariable(name: "size", scope: !9032, file: !66, line: 1472, type: !55)
!9034 = !DILocation(line: 1472, column: 10, scope: !9032)
!9035 = !DILocalVariable(name: "rlimit", scope: !9032, file: !66, line: 1473, type: !3728)
!9036 = !DILocation(line: 1473, column: 17, scope: !9032)
!9037 = !DILocation(line: 1474, column: 7, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9032, file: !66, line: 1474, column: 7)
!9039 = !DILocation(line: 1474, column: 40, scope: !9038)
!9040 = !DILocation(line: 1474, column: 45, scope: !9038)
!9041 = !DILocation(line: 1474, column: 55, scope: !9038)
!9042 = !DILocation(line: 1474, column: 66, scope: !9038)
!9043 = !DILocation(line: 1474, column: 64, scope: !9038)
!9044 = !DILocation(line: 1474, column: 7, scope: !9032)
!9045 = !DILocation(line: 1475, column: 19, scope: !9038)
!9046 = !DILocation(line: 1475, column: 10, scope: !9038)
!9047 = !DILocation(line: 1475, column: 5, scope: !9038)
!9048 = !DILocation(line: 1477, column: 7, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9032, file: !66, line: 1477, column: 7)
!9050 = !DILocation(line: 1477, column: 38, scope: !9049)
!9051 = !DILocation(line: 1477, column: 43, scope: !9049)
!9052 = !DILocation(line: 1477, column: 53, scope: !9049)
!9053 = !DILocation(line: 1477, column: 64, scope: !9049)
!9054 = !DILocation(line: 1477, column: 62, scope: !9049)
!9055 = !DILocation(line: 1477, column: 7, scope: !9032)
!9056 = !DILocation(line: 1478, column: 19, scope: !9049)
!9057 = !DILocation(line: 1478, column: 10, scope: !9049)
!9058 = !DILocation(line: 1478, column: 5, scope: !9049)
!9059 = !DILocation(line: 1483, column: 8, scope: !9032)
!9060 = !DILocation(line: 1488, column: 7, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9032, file: !66, line: 1488, column: 7)
!9062 = !DILocation(line: 1488, column: 39, scope: !9061)
!9063 = !DILocation(line: 1488, column: 44, scope: !9061)
!9064 = !DILocation(line: 1488, column: 54, scope: !9061)
!9065 = !DILocation(line: 1488, column: 63, scope: !9061)
!9066 = !DILocation(line: 1488, column: 68, scope: !9061)
!9067 = !DILocation(line: 1488, column: 75, scope: !9061)
!9068 = !DILocation(line: 1488, column: 73, scope: !9061)
!9069 = !DILocation(line: 1488, column: 7, scope: !9032)
!9070 = !DILocation(line: 1489, column: 19, scope: !9061)
!9071 = !DILocation(line: 1489, column: 28, scope: !9061)
!9072 = !DILocation(line: 1489, column: 33, scope: !9061)
!9073 = !DILocation(line: 1489, column: 10, scope: !9061)
!9074 = !DILocation(line: 1489, column: 5, scope: !9061)
!9075 = !DILocalVariable(name: "avail", scope: !9032, file: !66, line: 1494, type: !377)
!9076 = !DILocation(line: 1494, column: 10, scope: !9032)
!9077 = !DILocation(line: 1494, column: 18, scope: !9032)
!9078 = !DILocalVariable(name: "total", scope: !9032, file: !66, line: 1495, type: !377)
!9079 = !DILocation(line: 1495, column: 10, scope: !9032)
!9080 = !DILocation(line: 1495, column: 18, scope: !9032)
!9081 = !DILocalVariable(name: "mem", scope: !9032, file: !66, line: 1496, type: !377)
!9082 = !DILocation(line: 1496, column: 10, scope: !9032)
!9083 = !DILocation(line: 1496, column: 16, scope: !9032)
!9084 = !DILocation(line: 1499, column: 7, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9032, file: !66, line: 1499, column: 7)
!9086 = !DILocation(line: 1499, column: 13, scope: !9085)
!9087 = !DILocation(line: 1499, column: 22, scope: !9085)
!9088 = !DILocation(line: 1499, column: 20, scope: !9085)
!9089 = !DILocation(line: 1499, column: 7, scope: !9032)
!9090 = !DILocation(line: 1500, column: 12, scope: !9085)
!9091 = !DILocation(line: 1500, column: 18, scope: !9085)
!9092 = !DILocation(line: 1500, column: 10, scope: !9085)
!9093 = !DILocation(line: 1500, column: 5, scope: !9085)
!9094 = !DILocation(line: 1505, column: 7, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9032, file: !66, line: 1505, column: 7)
!9096 = !DILocation(line: 1505, column: 13, scope: !9095)
!9097 = !DILocation(line: 1505, column: 11, scope: !9095)
!9098 = !DILocation(line: 1505, column: 7, scope: !9032)
!9099 = !DILocation(line: 1506, column: 12, scope: !9095)
!9100 = !DILocation(line: 1506, column: 10, scope: !9095)
!9101 = !DILocation(line: 1506, column: 5, scope: !9095)
!9102 = !DILocation(line: 1507, column: 10, scope: !9032)
!9103 = !DILocation(line: 1507, column: 3, scope: !9032)
!9104 = distinct !DISubprogram(name: "mergefiles", scope: !66, file: !66, line: 3135, type: !537, scopeLine: 3137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9105 = !DILocalVariable(name: "files", arg: 1, scope: !9104, file: !66, line: 3135, type: !288)
!9106 = !DILocation(line: 3135, column: 30, scope: !9104)
!9107 = !DILocalVariable(name: "ntemps", arg: 2, scope: !9104, file: !66, line: 3135, type: !55)
!9108 = !DILocation(line: 3135, column: 44, scope: !9104)
!9109 = !DILocalVariable(name: "nfiles", arg: 3, scope: !9104, file: !66, line: 3135, type: !55)
!9110 = !DILocation(line: 3135, column: 59, scope: !9104)
!9111 = !DILocalVariable(name: "ofp", arg: 4, scope: !9104, file: !66, line: 3136, type: !0)
!9112 = !DILocation(line: 3136, column: 19, scope: !9104)
!9113 = !DILocalVariable(name: "output_file", arg: 5, scope: !9104, file: !66, line: 3136, type: !88)
!9114 = !DILocation(line: 3136, column: 36, scope: !9104)
!9115 = !DILocalVariable(name: "fps", scope: !9104, file: !66, line: 3138, type: !534)
!9116 = !DILocation(line: 3138, column: 10, scope: !9104)
!9117 = !DILocalVariable(name: "nopened", scope: !9104, file: !66, line: 3139, type: !55)
!9118 = !DILocation(line: 3139, column: 10, scope: !9104)
!9119 = !DILocation(line: 3139, column: 38, scope: !9104)
!9120 = !DILocation(line: 3139, column: 45, scope: !9104)
!9121 = !DILocation(line: 3139, column: 20, scope: !9104)
!9122 = !DILocation(line: 3140, column: 7, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9104, file: !66, line: 3140, column: 7)
!9124 = !DILocation(line: 3140, column: 17, scope: !9123)
!9125 = !DILocation(line: 3140, column: 15, scope: !9123)
!9126 = !DILocation(line: 3140, column: 24, scope: !9123)
!9127 = !DILocation(line: 3140, column: 27, scope: !9123)
!9128 = !DILocation(line: 3140, column: 35, scope: !9123)
!9129 = !DILocation(line: 3140, column: 7, scope: !9104)
!9130 = !DILocation(line: 3141, column: 15, scope: !9123)
!9131 = !DILocation(line: 3141, column: 33, scope: !9123)
!9132 = !DILocation(line: 3141, column: 39, scope: !9123)
!9133 = !DILocation(line: 3141, column: 48, scope: !9123)
!9134 = !DILocation(line: 3141, column: 5, scope: !9123)
!9135 = !DILocation(line: 3142, column: 13, scope: !9104)
!9136 = !DILocation(line: 3142, column: 20, scope: !9104)
!9137 = !DILocation(line: 3142, column: 28, scope: !9104)
!9138 = !DILocation(line: 3142, column: 37, scope: !9104)
!9139 = !DILocation(line: 3142, column: 42, scope: !9104)
!9140 = !DILocation(line: 3142, column: 55, scope: !9104)
!9141 = !DILocation(line: 3142, column: 3, scope: !9104)
!9142 = !DILocation(line: 3143, column: 10, scope: !9104)
!9143 = !DILocation(line: 3143, column: 3, scope: !9104)
!9144 = distinct !DISubprogram(name: "avoid_trashing_input", scope: !66, file: !66, line: 3709, type: !532, scopeLine: 3711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9145 = !DILocalVariable(name: "files", arg: 1, scope: !9144, file: !66, line: 3709, type: !288)
!9146 = !DILocation(line: 3709, column: 40, scope: !9144)
!9147 = !DILocalVariable(name: "ntemps", arg: 2, scope: !9144, file: !66, line: 3709, type: !55)
!9148 = !DILocation(line: 3709, column: 54, scope: !9144)
!9149 = !DILocalVariable(name: "nfiles", arg: 3, scope: !9144, file: !66, line: 3710, type: !55)
!9150 = !DILocation(line: 3710, column: 30, scope: !9144)
!9151 = !DILocalVariable(name: "outfile", arg: 4, scope: !9144, file: !66, line: 3710, type: !88)
!9152 = !DILocation(line: 3710, column: 50, scope: !9144)
!9153 = !DILocalVariable(name: "tempcopy", scope: !9144, file: !66, line: 3712, type: !293)
!9154 = !DILocation(line: 3712, column: 20, scope: !9144)
!9155 = !DILocalVariable(name: "i", scope: !9156, file: !66, line: 3714, type: !55)
!9156 = distinct !DILexicalBlock(scope: !9144, file: !66, line: 3714, column: 3)
!9157 = !DILocation(line: 3714, column: 15, scope: !9156)
!9158 = !DILocation(line: 3714, column: 19, scope: !9156)
!9159 = !DILocation(line: 3714, column: 8, scope: !9156)
!9160 = !DILocation(line: 3714, column: 27, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9156, file: !66, line: 3714, column: 3)
!9162 = !DILocation(line: 3714, column: 31, scope: !9161)
!9163 = !DILocation(line: 3714, column: 29, scope: !9161)
!9164 = !DILocation(line: 3714, column: 3, scope: !9156)
!9165 = !DILocalVariable(name: "is_stdin", scope: !9166, file: !66, line: 3716, type: !103)
!9166 = distinct !DILexicalBlock(scope: !9161, file: !66, line: 3715, column: 5)
!9167 = !DILocation(line: 3716, column: 12, scope: !9166)
!9168 = !DILocation(line: 3716, column: 23, scope: !9166)
!9169 = !DILocalVariable(name: "same", scope: !9166, file: !66, line: 3717, type: !103)
!9170 = !DILocation(line: 3717, column: 12, scope: !9166)
!9171 = !DILocalVariable(name: "instat", scope: !9166, file: !66, line: 3718, type: !384)
!9172 = !DILocation(line: 3718, column: 19, scope: !9166)
!9173 = !DILocation(line: 3720, column: 11, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9166, file: !66, line: 3720, column: 11)
!9175 = !DILocation(line: 3720, column: 19, scope: !9174)
!9176 = !DILocation(line: 3720, column: 22, scope: !9174)
!9177 = !DILocation(line: 3720, column: 53, scope: !9174)
!9178 = !DILocation(line: 3720, column: 57, scope: !9174)
!9179 = !DILocation(line: 3720, column: 11, scope: !9166)
!9180 = !DILocation(line: 3721, column: 14, scope: !9174)
!9181 = !DILocation(line: 3721, column: 9, scope: !9174)
!9182 = !DILocalVariable(name: "outst", scope: !9183, file: !66, line: 3724, type: !383)
!9183 = distinct !DILexicalBlock(scope: !9174, file: !66, line: 3723, column: 9)
!9184 = !DILocation(line: 3724, column: 24, scope: !9183)
!9185 = !DILocation(line: 3724, column: 32, scope: !9183)
!9186 = !DILocation(line: 3725, column: 16, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9183, file: !66, line: 3725, column: 15)
!9188 = !DILocation(line: 3725, column: 15, scope: !9183)
!9189 = !DILocation(line: 3726, column: 13, scope: !9187)
!9190 = !DILocation(line: 3728, column: 21, scope: !9183)
!9191 = !DILocation(line: 3729, column: 23, scope: !9183)
!9192 = !DILocation(line: 3730, column: 29, scope: !9183)
!9193 = !DILocation(line: 3730, column: 35, scope: !9183)
!9194 = !DILocation(line: 3730, column: 38, scope: !9183)
!9195 = !DILocation(line: 3730, column: 23, scope: !9183)
!9196 = !DILocation(line: 3731, column: 20, scope: !9183)
!9197 = !DILocation(line: 3732, column: 19, scope: !9183)
!9198 = !DILocation(line: 3732, column: 22, scope: !9183)
!9199 = !{!5251, !2448, i64 8}
!9200 = !{!5251, !2448, i64 0}
!9201 = !DILocation(line: 0, scope: !9183)
!9202 = !DILocation(line: 3728, column: 16, scope: !9183)
!9203 = !DILocation(line: 3735, column: 11, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9166, file: !66, line: 3735, column: 11)
!9205 = !DILocation(line: 3735, column: 11, scope: !9166)
!9206 = !DILocation(line: 3737, column: 17, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !66, line: 3737, column: 15)
!9208 = distinct !DILexicalBlock(scope: !9204, file: !66, line: 3736, column: 9)
!9209 = !DILocation(line: 3737, column: 15, scope: !9208)
!9210 = !DILocalVariable(name: "tftp", scope: !9211, file: !66, line: 3739, type: !0)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !66, line: 3738, column: 13)
!9212 = !DILocation(line: 3739, column: 21, scope: !9211)
!9213 = !DILocation(line: 3740, column: 26, scope: !9211)
!9214 = !DILocation(line: 3740, column: 24, scope: !9211)
!9215 = !DILocation(line: 3741, column: 28, scope: !9211)
!9216 = !DILocation(line: 3741, column: 34, scope: !9211)
!9217 = !DILocation(line: 3741, column: 44, scope: !9211)
!9218 = !DILocation(line: 3741, column: 50, scope: !9211)
!9219 = !DILocation(line: 3741, column: 60, scope: !9211)
!9220 = !DILocation(line: 3741, column: 15, scope: !9211)
!9221 = !DILocation(line: 3742, column: 13, scope: !9211)
!9222 = !DILocation(line: 3744, column: 27, scope: !9208)
!9223 = !DILocation(line: 3744, column: 37, scope: !9208)
!9224 = !DILocation(line: 3744, column: 11, scope: !9208)
!9225 = !DILocation(line: 3744, column: 17, scope: !9208)
!9226 = !DILocation(line: 3744, column: 20, scope: !9208)
!9227 = !DILocation(line: 3744, column: 25, scope: !9208)
!9228 = !DILocation(line: 3745, column: 27, scope: !9208)
!9229 = !DILocation(line: 3745, column: 11, scope: !9208)
!9230 = !DILocation(line: 3745, column: 17, scope: !9208)
!9231 = !DILocation(line: 3745, column: 20, scope: !9208)
!9232 = !DILocation(line: 3745, column: 25, scope: !9208)
!9233 = !DILocation(line: 3746, column: 9, scope: !9208)
!9234 = !DILocation(line: 3747, column: 5, scope: !9166)
!9235 = !DILocation(line: 3714, column: 40, scope: !9161)
!9236 = !DILocation(line: 3714, column: 3, scope: !9161)
!9237 = distinct !{!9237, !9164, !9238}
!9238 = !DILocation(line: 3747, column: 5, scope: !9156)
!9239 = !DILocation(line: 3748, column: 1, scope: !9144)
!9240 = distinct !DISubprogram(name: "open_input_files", scope: !66, file: !66, line: 2909, type: !539, scopeLine: 2910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9241 = !DILocalVariable(name: "files", arg: 1, scope: !9240, file: !66, line: 2909, type: !288)
!9242 = !DILocation(line: 2909, column: 36, scope: !9240)
!9243 = !DILocalVariable(name: "nfiles", arg: 2, scope: !9240, file: !66, line: 2909, type: !55)
!9244 = !DILocation(line: 2909, column: 50, scope: !9240)
!9245 = !DILocalVariable(name: "pfps", arg: 3, scope: !9240, file: !66, line: 2909, type: !541)
!9246 = !DILocation(line: 2909, column: 66, scope: !9240)
!9247 = !DILocalVariable(name: "fps", scope: !9240, file: !66, line: 2911, type: !534)
!9248 = !DILocation(line: 2911, column: 10, scope: !9240)
!9249 = !DILocation(line: 2911, column: 34, scope: !9240)
!9250 = !DILocation(line: 2911, column: 24, scope: !9240)
!9251 = !DILocation(line: 2911, column: 17, scope: !9240)
!9252 = !DILocation(line: 2911, column: 22, scope: !9240)
!9253 = !DILocalVariable(name: "i", scope: !9240, file: !66, line: 2912, type: !7)
!9254 = !DILocation(line: 2912, column: 7, scope: !9240)
!9255 = !DILocation(line: 2915, column: 10, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9240, file: !66, line: 2915, column: 3)
!9257 = !DILocation(line: 2915, column: 8, scope: !9256)
!9258 = !DILocation(line: 2915, column: 15, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9256, file: !66, line: 2915, column: 3)
!9260 = !DILocation(line: 2915, column: 19, scope: !9259)
!9261 = !DILocation(line: 2915, column: 17, scope: !9259)
!9262 = !DILocation(line: 2915, column: 3, scope: !9256)
!9263 = !DILocation(line: 2917, column: 17, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9259, file: !66, line: 2916, column: 5)
!9265 = !DILocation(line: 2917, column: 23, scope: !9264)
!9266 = !DILocation(line: 2917, column: 26, scope: !9264)
!9267 = !DILocation(line: 2917, column: 31, scope: !9264)
!9268 = !DILocation(line: 2917, column: 34, scope: !9264)
!9269 = !DILocation(line: 2917, column: 40, scope: !9264)
!9270 = !DILocation(line: 2917, column: 43, scope: !9264)
!9271 = !DILocation(line: 2917, column: 49, scope: !9264)
!9272 = !DILocation(line: 2917, column: 55, scope: !9264)
!9273 = !DILocation(line: 2918, column: 30, scope: !9264)
!9274 = !DILocation(line: 2918, column: 36, scope: !9264)
!9275 = !DILocation(line: 2918, column: 39, scope: !9264)
!9276 = !DILocation(line: 2918, column: 19, scope: !9264)
!9277 = !DILocation(line: 2919, column: 32, scope: !9264)
!9278 = !DILocation(line: 2919, column: 38, scope: !9264)
!9279 = !DILocation(line: 2919, column: 41, scope: !9264)
!9280 = !DILocation(line: 2919, column: 19, scope: !9264)
!9281 = !DILocation(line: 2917, column: 7, scope: !9264)
!9282 = !DILocation(line: 2917, column: 11, scope: !9264)
!9283 = !DILocation(line: 2917, column: 14, scope: !9264)
!9284 = !DILocation(line: 2920, column: 12, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9264, file: !66, line: 2920, column: 11)
!9286 = !DILocation(line: 2920, column: 16, scope: !9285)
!9287 = !DILocation(line: 2920, column: 11, scope: !9264)
!9288 = !DILocation(line: 2921, column: 9, scope: !9285)
!9289 = !DILocation(line: 2922, column: 5, scope: !9264)
!9290 = !DILocation(line: 2915, column: 28, scope: !9259)
!9291 = !DILocation(line: 2915, column: 3, scope: !9259)
!9292 = distinct !{!9292, !9262, !9293}
!9293 = !DILocation(line: 2922, column: 5, scope: !9256)
!9294 = !DILocation(line: 2924, column: 10, scope: !9240)
!9295 = !DILocation(line: 2924, column: 3, scope: !9240)
!9296 = distinct !DISubprogram(name: "stream_open", scope: !66, file: !66, line: 951, type: !381, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9297 = !DILocalVariable(name: "file", arg: 1, scope: !9296, file: !66, line: 951, type: !88)
!9298 = !DILocation(line: 951, column: 26, scope: !9296)
!9299 = !DILocalVariable(name: "how", arg: 2, scope: !9296, file: !66, line: 951, type: !88)
!9300 = !DILocation(line: 951, column: 44, scope: !9296)
!9301 = !DILocalVariable(name: "fp", scope: !9296, file: !66, line: 953, type: !0)
!9302 = !DILocation(line: 953, column: 9, scope: !9296)
!9303 = !DILocation(line: 955, column: 8, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9296, file: !66, line: 955, column: 7)
!9305 = !DILocation(line: 955, column: 7, scope: !9304)
!9306 = !DILocation(line: 955, column: 12, scope: !9304)
!9307 = !DILocation(line: 955, column: 7, scope: !9296)
!9308 = !DILocation(line: 957, column: 11, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !66, line: 957, column: 11)
!9310 = distinct !DILexicalBlock(scope: !9304, file: !66, line: 956, column: 5)
!9311 = !DILocation(line: 957, column: 11, scope: !9310)
!9312 = !DILocation(line: 959, column: 27, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9309, file: !66, line: 958, column: 9)
!9314 = !DILocation(line: 960, column: 16, scope: !9313)
!9315 = !DILocation(line: 960, column: 14, scope: !9313)
!9316 = !DILocation(line: 961, column: 9, scope: !9313)
!9317 = !DILocalVariable(name: "fd", scope: !9318, file: !66, line: 964, type: !7)
!9318 = distinct !DILexicalBlock(scope: !9309, file: !66, line: 963, column: 9)
!9319 = !DILocation(line: 964, column: 15, scope: !9318)
!9320 = !DILocation(line: 964, column: 26, scope: !9318)
!9321 = !DILocation(line: 964, column: 20, scope: !9318)
!9322 = !DILocation(line: 965, column: 16, scope: !9318)
!9323 = !DILocation(line: 965, column: 19, scope: !9318)
!9324 = !DILocation(line: 965, column: 40, scope: !9318)
!9325 = !DILocation(line: 965, column: 44, scope: !9318)
!9326 = !DILocation(line: 965, column: 32, scope: !9318)
!9327 = !DILocation(line: 965, column: 14, scope: !9318)
!9328 = !DILocation(line: 967, column: 16, scope: !9310)
!9329 = !DILocation(line: 967, column: 7, scope: !9310)
!9330 = !DILocation(line: 968, column: 5, scope: !9310)
!9331 = !DILocation(line: 969, column: 13, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9304, file: !66, line: 969, column: 12)
!9333 = !DILocation(line: 969, column: 12, scope: !9332)
!9334 = !DILocation(line: 969, column: 17, scope: !9332)
!9335 = !DILocation(line: 969, column: 12, scope: !9304)
!9336 = !DILocation(line: 971, column: 11, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9338, file: !66, line: 971, column: 11)
!9338 = distinct !DILexicalBlock(scope: !9332, file: !66, line: 970, column: 5)
!9339 = !DILocation(line: 971, column: 16, scope: !9337)
!9340 = !DILocation(line: 971, column: 19, scope: !9337)
!9341 = !DILocation(line: 971, column: 48, scope: !9337)
!9342 = !DILocation(line: 971, column: 11, scope: !9338)
!9343 = !DILocalVariable(name: "ftruncate_errno", scope: !9344, file: !66, line: 973, type: !7)
!9344 = distinct !DILexicalBlock(scope: !9337, file: !66, line: 972, column: 9)
!9345 = !DILocation(line: 973, column: 15, scope: !9344)
!9346 = !DILocation(line: 973, column: 33, scope: !9344)
!9347 = !DILocalVariable(name: "outst", scope: !9344, file: !66, line: 974, type: !383)
!9348 = !DILocation(line: 974, column: 24, scope: !9344)
!9349 = !DILocation(line: 974, column: 32, scope: !9344)
!9350 = !DILocation(line: 975, column: 16, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9344, file: !66, line: 975, column: 15)
!9352 = !DILocation(line: 975, column: 22, scope: !9351)
!9353 = !DILocation(line: 975, column: 25, scope: !9351)
!9354 = !DILocation(line: 975, column: 50, scope: !9351)
!9355 = !DILocation(line: 975, column: 53, scope: !9351)
!9356 = !DILocation(line: 975, column: 15, scope: !9344)
!9357 = !DILocation(line: 976, column: 13, scope: !9351)
!9358 = !DILocation(line: 978, column: 9, scope: !9344)
!9359 = !DILocation(line: 979, column: 12, scope: !9338)
!9360 = !DILocation(line: 979, column: 10, scope: !9338)
!9361 = !DILocation(line: 980, column: 5, scope: !9338)
!9362 = !DILocation(line: 982, column: 5, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !66, line: 982, column: 5)
!9364 = distinct !DILexicalBlock(scope: !9332, file: !66, line: 982, column: 5)
!9365 = !DILocation(line: 984, column: 10, scope: !9296)
!9366 = !DILocation(line: 984, column: 3, scope: !9296)
!9367 = distinct !DISubprogram(name: "mergefps", scope: !66, file: !66, line: 2936, type: !566, scopeLine: 2938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9368 = !DILocalVariable(name: "files", arg: 1, scope: !9367, file: !66, line: 2936, type: !288)
!9369 = !DILocation(line: 2936, column: 28, scope: !9367)
!9370 = !DILocalVariable(name: "ntemps", arg: 2, scope: !9367, file: !66, line: 2936, type: !55)
!9371 = !DILocation(line: 2936, column: 42, scope: !9367)
!9372 = !DILocalVariable(name: "nfiles", arg: 3, scope: !9367, file: !66, line: 2936, type: !55)
!9373 = !DILocation(line: 2936, column: 57, scope: !9367)
!9374 = !DILocalVariable(name: "ofp", arg: 4, scope: !9367, file: !66, line: 2937, type: !0)
!9375 = !DILocation(line: 2937, column: 17, scope: !9367)
!9376 = !DILocalVariable(name: "output_file", arg: 5, scope: !9367, file: !66, line: 2937, type: !88)
!9377 = !DILocation(line: 2937, column: 34, scope: !9367)
!9378 = !DILocalVariable(name: "fps", arg: 6, scope: !9367, file: !66, line: 2937, type: !534)
!9379 = !DILocation(line: 2937, column: 54, scope: !9367)
!9380 = !DILocalVariable(name: "buffer", scope: !9367, file: !66, line: 2939, type: !457)
!9381 = !DILocation(line: 2939, column: 18, scope: !9367)
!9382 = !DILocation(line: 2939, column: 37, scope: !9367)
!9383 = !DILocation(line: 2939, column: 27, scope: !9367)
!9384 = !DILocalVariable(name: "saved", scope: !9367, file: !66, line: 2941, type: !449)
!9385 = !DILocation(line: 2941, column: 15, scope: !9367)
!9386 = !DILocalVariable(name: "savedline", scope: !9367, file: !66, line: 2942, type: !447)
!9387 = !DILocation(line: 2942, column: 22, scope: !9367)
!9388 = !DILocalVariable(name: "savealloc", scope: !9367, file: !66, line: 2944, type: !55)
!9389 = !DILocation(line: 2944, column: 10, scope: !9367)
!9390 = !DILocalVariable(name: "cur", scope: !9367, file: !66, line: 2945, type: !568)
!9391 = !DILocation(line: 2945, column: 23, scope: !9367)
!9392 = !DILocation(line: 2945, column: 39, scope: !9367)
!9393 = !DILocation(line: 2945, column: 29, scope: !9367)
!9394 = !DILocalVariable(name: "base", scope: !9367, file: !66, line: 2947, type: !568)
!9395 = !DILocation(line: 2947, column: 23, scope: !9367)
!9396 = !DILocation(line: 2947, column: 40, scope: !9367)
!9397 = !DILocation(line: 2947, column: 30, scope: !9367)
!9398 = !DILocalVariable(name: "ord", scope: !9367, file: !66, line: 2949, type: !360)
!9399 = !DILocation(line: 2949, column: 11, scope: !9367)
!9400 = !DILocation(line: 2949, column: 27, scope: !9367)
!9401 = !DILocation(line: 2949, column: 17, scope: !9367)
!9402 = !DILocalVariable(name: "i", scope: !9367, file: !66, line: 2953, type: !55)
!9403 = !DILocation(line: 2953, column: 10, scope: !9367)
!9404 = !DILocalVariable(name: "j", scope: !9367, file: !66, line: 2954, type: !55)
!9405 = !DILocation(line: 2954, column: 10, scope: !9367)
!9406 = !DILocalVariable(name: "t", scope: !9367, file: !66, line: 2955, type: !55)
!9407 = !DILocation(line: 2955, column: 10, scope: !9367)
!9408 = !DILocalVariable(name: "key", scope: !9367, file: !66, line: 2956, type: !423)
!9409 = !DILocation(line: 2956, column: 26, scope: !9367)
!9410 = !DILocation(line: 2956, column: 32, scope: !9367)
!9411 = !DILocation(line: 2957, column: 9, scope: !9367)
!9412 = !DILocation(line: 2957, column: 14, scope: !9367)
!9413 = !DILocation(line: 2960, column: 10, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9367, file: !66, line: 2960, column: 3)
!9415 = !DILocation(line: 2960, column: 8, scope: !9414)
!9416 = !DILocation(line: 2960, column: 15, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9414, file: !66, line: 2960, column: 3)
!9418 = !DILocation(line: 2960, column: 19, scope: !9417)
!9419 = !DILocation(line: 2960, column: 17, scope: !9417)
!9420 = !DILocation(line: 2960, column: 3, scope: !9414)
!9421 = !DILocation(line: 2962, column: 17, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9417, file: !66, line: 2961, column: 5)
!9423 = !DILocation(line: 2962, column: 24, scope: !9422)
!9424 = !DILocation(line: 2963, column: 16, scope: !9422)
!9425 = !DILocation(line: 2962, column: 7, scope: !9422)
!9426 = !DILocation(line: 2964, column: 21, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9422, file: !66, line: 2964, column: 11)
!9428 = !DILocation(line: 2964, column: 28, scope: !9427)
!9429 = !DILocation(line: 2964, column: 32, scope: !9427)
!9430 = !DILocation(line: 2964, column: 36, scope: !9427)
!9431 = !DILocation(line: 2964, column: 40, scope: !9427)
!9432 = !DILocation(line: 2964, column: 46, scope: !9427)
!9433 = !DILocation(line: 2964, column: 49, scope: !9427)
!9434 = !DILocation(line: 2964, column: 11, scope: !9427)
!9435 = !DILocation(line: 2964, column: 11, scope: !9422)
!9436 = !DILocalVariable(name: "linelim", scope: !9437, file: !66, line: 2966, type: !447)
!9437 = distinct !DILexicalBlock(scope: !9427, file: !66, line: 2965, column: 9)
!9438 = !DILocation(line: 2966, column: 30, scope: !9437)
!9439 = !DILocation(line: 2966, column: 57, scope: !9437)
!9440 = !DILocation(line: 2966, column: 64, scope: !9437)
!9441 = !DILocation(line: 2966, column: 40, scope: !9437)
!9442 = !DILocation(line: 2967, column: 20, scope: !9437)
!9443 = !DILocation(line: 2967, column: 28, scope: !9437)
!9444 = !DILocation(line: 2967, column: 11, scope: !9437)
!9445 = !DILocation(line: 2967, column: 15, scope: !9437)
!9446 = !DILocation(line: 2967, column: 18, scope: !9437)
!9447 = !DILocation(line: 2968, column: 21, scope: !9437)
!9448 = !DILocation(line: 2968, column: 31, scope: !9437)
!9449 = !DILocation(line: 2968, column: 38, scope: !9437)
!9450 = !DILocation(line: 2968, column: 41, scope: !9437)
!9451 = !DILocation(line: 2968, column: 29, scope: !9437)
!9452 = !DILocation(line: 2968, column: 11, scope: !9437)
!9453 = !DILocation(line: 2968, column: 16, scope: !9437)
!9454 = !DILocation(line: 2968, column: 19, scope: !9437)
!9455 = !DILocation(line: 2969, column: 12, scope: !9437)
!9456 = !DILocation(line: 2970, column: 9, scope: !9437)
!9457 = !DILocation(line: 2974, column: 20, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9427, file: !66, line: 2972, column: 9)
!9459 = !DILocation(line: 2974, column: 24, scope: !9458)
!9460 = !DILocation(line: 2974, column: 28, scope: !9458)
!9461 = !DILocation(line: 2974, column: 34, scope: !9458)
!9462 = !DILocation(line: 2974, column: 37, scope: !9458)
!9463 = !DILocation(line: 2974, column: 11, scope: !9458)
!9464 = !DILocation(line: 2975, column: 15, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9458, file: !66, line: 2975, column: 15)
!9466 = !DILocation(line: 2975, column: 19, scope: !9465)
!9467 = !DILocation(line: 2975, column: 17, scope: !9465)
!9468 = !DILocation(line: 2975, column: 15, scope: !9458)
!9469 = !DILocation(line: 2977, column: 21, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9465, file: !66, line: 2976, column: 13)
!9471 = !DILocation(line: 2978, column: 24, scope: !9470)
!9472 = !DILocation(line: 2978, column: 30, scope: !9470)
!9473 = !DILocation(line: 2978, column: 33, scope: !9470)
!9474 = !DILocation(line: 2978, column: 15, scope: !9470)
!9475 = !DILocation(line: 2979, column: 13, scope: !9470)
!9476 = !DILocation(line: 2980, column: 17, scope: !9458)
!9477 = !DILocation(line: 2980, column: 24, scope: !9458)
!9478 = !DILocation(line: 2980, column: 27, scope: !9458)
!9479 = !DILocation(line: 2980, column: 11, scope: !9458)
!9480 = !DILocation(line: 2981, column: 11, scope: !9458)
!9481 = !DILocation(line: 2982, column: 20, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9458, file: !66, line: 2982, column: 11)
!9483 = !DILocation(line: 2982, column: 18, scope: !9482)
!9484 = !DILocation(line: 2982, column: 16, scope: !9482)
!9485 = !DILocation(line: 2982, column: 23, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9482, file: !66, line: 2982, column: 11)
!9487 = !DILocation(line: 2982, column: 27, scope: !9486)
!9488 = !DILocation(line: 2982, column: 25, scope: !9486)
!9489 = !DILocation(line: 2982, column: 11, scope: !9482)
!9490 = !DILocation(line: 2984, column: 15, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9486, file: !66, line: 2983, column: 13)
!9492 = !DILocation(line: 2984, column: 21, scope: !9491)
!9493 = !DILocation(line: 2984, column: 26, scope: !9491)
!9494 = !DILocation(line: 2984, column: 32, scope: !9491)
!9495 = !DILocation(line: 2984, column: 34, scope: !9491)
!9496 = !{i64 0, i64 8, !2286, i64 8, i64 8, !2286}
!9497 = !DILocation(line: 2985, column: 24, scope: !9491)
!9498 = !DILocation(line: 2985, column: 28, scope: !9491)
!9499 = !DILocation(line: 2985, column: 30, scope: !9491)
!9500 = !DILocation(line: 2985, column: 15, scope: !9491)
!9501 = !DILocation(line: 2985, column: 19, scope: !9491)
!9502 = !DILocation(line: 2985, column: 22, scope: !9491)
!9503 = !DILocation(line: 2986, column: 13, scope: !9491)
!9504 = !DILocation(line: 2982, column: 35, scope: !9486)
!9505 = !DILocation(line: 2982, column: 11, scope: !9486)
!9506 = distinct !{!9506, !9489, !9507}
!9507 = !DILocation(line: 2986, column: 13, scope: !9482)
!9508 = !DILocation(line: 2960, column: 3, scope: !9417)
!9509 = distinct !{!9509, !9420, !9510}
!9510 = !DILocation(line: 2988, column: 5, scope: !9414)
!9511 = !DILocation(line: 2993, column: 10, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9367, file: !66, line: 2993, column: 3)
!9513 = !DILocation(line: 2993, column: 8, scope: !9512)
!9514 = !DILocation(line: 2993, column: 15, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9512, file: !66, line: 2993, column: 3)
!9516 = !DILocation(line: 2993, column: 19, scope: !9515)
!9517 = !DILocation(line: 2993, column: 17, scope: !9515)
!9518 = !DILocation(line: 2993, column: 3, scope: !9512)
!9519 = !DILocation(line: 2994, column: 14, scope: !9515)
!9520 = !DILocation(line: 2994, column: 5, scope: !9515)
!9521 = !DILocation(line: 2994, column: 9, scope: !9515)
!9522 = !DILocation(line: 2994, column: 12, scope: !9515)
!9523 = !DILocation(line: 2993, column: 27, scope: !9515)
!9524 = !DILocation(line: 2993, column: 3, scope: !9515)
!9525 = distinct !{!9525, !9518, !9526}
!9526 = !DILocation(line: 2994, column: 14, scope: !9512)
!9527 = !DILocation(line: 2995, column: 10, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9367, file: !66, line: 2995, column: 3)
!9529 = !DILocation(line: 2995, column: 8, scope: !9528)
!9530 = !DILocation(line: 2995, column: 15, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9528, file: !66, line: 2995, column: 3)
!9532 = !DILocation(line: 2995, column: 19, scope: !9531)
!9533 = !DILocation(line: 2995, column: 17, scope: !9531)
!9534 = !DILocation(line: 2995, column: 3, scope: !9528)
!9535 = !DILocation(line: 2996, column: 22, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9531, file: !66, line: 2996, column: 9)
!9537 = !DILocation(line: 2996, column: 26, scope: !9536)
!9538 = !DILocation(line: 2996, column: 30, scope: !9536)
!9539 = !DILocation(line: 2996, column: 32, scope: !9536)
!9540 = !DILocation(line: 2996, column: 39, scope: !9536)
!9541 = !DILocation(line: 2996, column: 43, scope: !9536)
!9542 = !DILocation(line: 2996, column: 47, scope: !9536)
!9543 = !DILocation(line: 2996, column: 13, scope: !9536)
!9544 = !DILocation(line: 2996, column: 11, scope: !9536)
!9545 = !DILocation(line: 2996, column: 9, scope: !9531)
!9546 = !DILocation(line: 2997, column: 11, scope: !9536)
!9547 = !DILocation(line: 2997, column: 15, scope: !9536)
!9548 = !DILocation(line: 2997, column: 17, scope: !9536)
!9549 = !DILocation(line: 2997, column: 9, scope: !9536)
!9550 = !DILocation(line: 2997, column: 36, scope: !9536)
!9551 = !DILocation(line: 2997, column: 40, scope: !9536)
!9552 = !DILocation(line: 2997, column: 23, scope: !9536)
!9553 = !DILocation(line: 2997, column: 27, scope: !9536)
!9554 = !DILocation(line: 2997, column: 29, scope: !9536)
!9555 = !DILocation(line: 2997, column: 34, scope: !9536)
!9556 = !DILocation(line: 2997, column: 53, scope: !9536)
!9557 = !DILocation(line: 2997, column: 44, scope: !9536)
!9558 = !DILocation(line: 2997, column: 48, scope: !9536)
!9559 = !DILocation(line: 2997, column: 51, scope: !9536)
!9560 = !DILocation(line: 2997, column: 58, scope: !9536)
!9561 = !DILocation(line: 2997, column: 7, scope: !9536)
!9562 = !DILocation(line: 2996, column: 50, scope: !9536)
!9563 = !DILocation(line: 2995, column: 27, scope: !9531)
!9564 = !DILocation(line: 2995, column: 3, scope: !9531)
!9565 = distinct !{!9565, !9534, !9566}
!9566 = !DILocation(line: 2997, column: 60, scope: !9528)
!9567 = !DILocation(line: 3000, column: 3, scope: !9367)
!9568 = !DILocation(line: 3000, column: 10, scope: !9367)
!9569 = !DILocalVariable(name: "smallest", scope: !9570, file: !66, line: 3002, type: !447)
!9570 = distinct !DILexicalBlock(scope: !9367, file: !66, line: 3001, column: 5)
!9571 = !DILocation(line: 3002, column: 26, scope: !9570)
!9572 = !DILocation(line: 3002, column: 37, scope: !9570)
!9573 = !DILocation(line: 3002, column: 41, scope: !9570)
!9574 = !DILocation(line: 3006, column: 11, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !66, line: 3006, column: 11)
!9576 = !DILocation(line: 3006, column: 11, scope: !9570)
!9577 = !DILocation(line: 3008, column: 15, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !66, line: 3008, column: 15)
!9579 = distinct !DILexicalBlock(scope: !9575, file: !66, line: 3007, column: 9)
!9580 = !DILocation(line: 3008, column: 25, scope: !9578)
!9581 = !DILocation(line: 3008, column: 37, scope: !9578)
!9582 = !DILocation(line: 3008, column: 48, scope: !9578)
!9583 = !DILocation(line: 3008, column: 28, scope: !9578)
!9584 = !DILocation(line: 3008, column: 15, scope: !9579)
!9585 = !DILocation(line: 3010, column: 25, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9578, file: !66, line: 3009, column: 13)
!9587 = !DILocation(line: 3011, column: 35, scope: !9586)
!9588 = !DILocation(line: 3011, column: 40, scope: !9586)
!9589 = !DILocation(line: 3011, column: 15, scope: !9586)
!9590 = !DILocation(line: 3012, column: 13, scope: !9586)
!9591 = !DILocation(line: 3013, column: 16, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9579, file: !66, line: 3013, column: 15)
!9593 = !DILocation(line: 3013, column: 15, scope: !9579)
!9594 = !DILocation(line: 3015, column: 25, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9592, file: !66, line: 3014, column: 13)
!9596 = !DILocation(line: 3016, column: 19, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9595, file: !66, line: 3016, column: 19)
!9598 = !DILocation(line: 3016, column: 31, scope: !9597)
!9599 = !DILocation(line: 3016, column: 41, scope: !9597)
!9600 = !DILocation(line: 3016, column: 29, scope: !9597)
!9601 = !DILocation(line: 3016, column: 19, scope: !9595)
!9602 = !DILocation(line: 3018, column: 19, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9597, file: !66, line: 3017, column: 17)
!9604 = !DILocation(line: 3019, column: 27, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9603, file: !66, line: 3019, column: 25)
!9606 = !DILocation(line: 3019, column: 25, scope: !9603)
!9607 = !DILocation(line: 3021, column: 37, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9605, file: !66, line: 3020, column: 23)
!9609 = !DILocation(line: 3021, column: 47, scope: !9608)
!9610 = !DILocation(line: 3021, column: 35, scope: !9608)
!9611 = !DILocation(line: 3022, column: 25, scope: !9608)
!9612 = !DILocation(line: 3024, column: 37, scope: !9603)
!9613 = !DILocation(line: 3024, column: 45, scope: !9603)
!9614 = !DILocation(line: 3024, column: 55, scope: !9603)
!9615 = !DILocation(line: 3024, column: 43, scope: !9603)
!9616 = distinct !{!9616, !9602, !9617}
!9617 = !DILocation(line: 3024, column: 61, scope: !9603)
!9618 = !DILocation(line: 3026, column: 31, scope: !9603)
!9619 = !DILocation(line: 3026, column: 19, scope: !9603)
!9620 = !DILocation(line: 3027, column: 41, scope: !9603)
!9621 = !DILocation(line: 3027, column: 32, scope: !9603)
!9622 = !DILocation(line: 3027, column: 25, scope: !9603)
!9623 = !DILocation(line: 3027, column: 30, scope: !9603)
!9624 = !DILocation(line: 3028, column: 17, scope: !9603)
!9625 = !DILocation(line: 3029, column: 30, scope: !9595)
!9626 = !DILocation(line: 3029, column: 40, scope: !9595)
!9627 = !DILocation(line: 3029, column: 21, scope: !9595)
!9628 = !DILocation(line: 3029, column: 28, scope: !9595)
!9629 = !DILocation(line: 3030, column: 29, scope: !9595)
!9630 = !DILocation(line: 3030, column: 35, scope: !9595)
!9631 = !DILocation(line: 3030, column: 45, scope: !9595)
!9632 = !DILocation(line: 3030, column: 57, scope: !9595)
!9633 = !DILocation(line: 3030, column: 15, scope: !9595)
!9634 = !DILocation(line: 3031, column: 19, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9595, file: !66, line: 3031, column: 19)
!9636 = !DILocation(line: 3031, column: 19, scope: !9595)
!9637 = !DILocation(line: 3034, column: 27, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9635, file: !66, line: 3032, column: 17)
!9639 = !DILocation(line: 3034, column: 35, scope: !9638)
!9640 = !DILocation(line: 3034, column: 45, scope: !9638)
!9641 = !DILocation(line: 3034, column: 54, scope: !9638)
!9642 = !DILocation(line: 3034, column: 64, scope: !9638)
!9643 = !DILocation(line: 3034, column: 52, scope: !9638)
!9644 = !DILocation(line: 3034, column: 32, scope: !9638)
!9645 = !DILocation(line: 3033, column: 25, scope: !9638)
!9646 = !DILocation(line: 3033, column: 32, scope: !9638)
!9647 = !DILocation(line: 3036, column: 27, scope: !9638)
!9648 = !DILocation(line: 3036, column: 35, scope: !9638)
!9649 = !DILocation(line: 3036, column: 45, scope: !9638)
!9650 = !DILocation(line: 3036, column: 54, scope: !9638)
!9651 = !DILocation(line: 3036, column: 64, scope: !9638)
!9652 = !DILocation(line: 3036, column: 52, scope: !9638)
!9653 = !DILocation(line: 3036, column: 32, scope: !9638)
!9654 = !DILocation(line: 3035, column: 25, scope: !9638)
!9655 = !DILocation(line: 3035, column: 32, scope: !9638)
!9656 = !DILocation(line: 3037, column: 17, scope: !9638)
!9657 = !DILocation(line: 3038, column: 13, scope: !9595)
!9658 = !DILocation(line: 3039, column: 9, scope: !9579)
!9659 = !DILocation(line: 3041, column: 21, scope: !9575)
!9660 = !DILocation(line: 3041, column: 31, scope: !9575)
!9661 = !DILocation(line: 3041, column: 36, scope: !9575)
!9662 = !DILocation(line: 3041, column: 9, scope: !9575)
!9663 = !DILocation(line: 3044, column: 11, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9570, file: !66, line: 3044, column: 11)
!9665 = !DILocation(line: 3044, column: 16, scope: !9664)
!9666 = !DILocation(line: 3044, column: 26, scope: !9664)
!9667 = !DILocation(line: 3044, column: 24, scope: !9664)
!9668 = !DILocation(line: 3044, column: 11, scope: !9570)
!9669 = !DILocation(line: 3045, column: 23, scope: !9664)
!9670 = !DILocation(line: 3045, column: 32, scope: !9664)
!9671 = !DILocation(line: 3045, column: 9, scope: !9664)
!9672 = !DILocation(line: 3045, column: 13, scope: !9664)
!9673 = !DILocation(line: 3045, column: 21, scope: !9664)
!9674 = !DILocation(line: 3048, column: 25, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !66, line: 3048, column: 15)
!9676 = distinct !DILexicalBlock(scope: !9664, file: !66, line: 3047, column: 9)
!9677 = !DILocation(line: 3048, column: 32, scope: !9675)
!9678 = !DILocation(line: 3048, column: 41, scope: !9675)
!9679 = !DILocation(line: 3048, column: 45, scope: !9675)
!9680 = !DILocation(line: 3048, column: 54, scope: !9675)
!9681 = !DILocation(line: 3048, column: 60, scope: !9675)
!9682 = !DILocation(line: 3048, column: 68, scope: !9675)
!9683 = !DILocation(line: 3048, column: 15, scope: !9675)
!9684 = !DILocation(line: 3048, column: 15, scope: !9676)
!9685 = !DILocalVariable(name: "linelim", scope: !9686, file: !66, line: 3050, type: !447)
!9686 = distinct !DILexicalBlock(scope: !9675, file: !66, line: 3049, column: 13)
!9687 = !DILocation(line: 3050, column: 34, scope: !9686)
!9688 = !DILocation(line: 3050, column: 61, scope: !9686)
!9689 = !DILocation(line: 3050, column: 68, scope: !9686)
!9690 = !DILocation(line: 3050, column: 44, scope: !9686)
!9691 = !DILocation(line: 3051, column: 29, scope: !9686)
!9692 = !DILocation(line: 3051, column: 37, scope: !9686)
!9693 = !DILocation(line: 3051, column: 15, scope: !9686)
!9694 = !DILocation(line: 3051, column: 19, scope: !9686)
!9695 = !DILocation(line: 3051, column: 27, scope: !9686)
!9696 = !DILocation(line: 3052, column: 30, scope: !9686)
!9697 = !DILocation(line: 3052, column: 40, scope: !9686)
!9698 = !DILocation(line: 3052, column: 47, scope: !9686)
!9699 = !DILocation(line: 3052, column: 55, scope: !9686)
!9700 = !DILocation(line: 3052, column: 38, scope: !9686)
!9701 = !DILocation(line: 3052, column: 15, scope: !9686)
!9702 = !DILocation(line: 3052, column: 20, scope: !9686)
!9703 = !DILocation(line: 3052, column: 28, scope: !9686)
!9704 = !DILocation(line: 3053, column: 13, scope: !9686)
!9705 = !DILocation(line: 3057, column: 22, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9707, file: !66, line: 3057, column: 15)
!9707 = distinct !DILexicalBlock(scope: !9675, file: !66, line: 3055, column: 13)
!9708 = !DILocation(line: 3057, column: 20, scope: !9706)
!9709 = !DILocation(line: 3057, column: 27, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !66, line: 3057, column: 15)
!9711 = !DILocation(line: 3057, column: 31, scope: !9710)
!9712 = !DILocation(line: 3057, column: 29, scope: !9710)
!9713 = !DILocation(line: 3057, column: 15, scope: !9706)
!9714 = !DILocation(line: 3058, column: 21, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9710, file: !66, line: 3058, column: 21)
!9716 = !DILocation(line: 3058, column: 25, scope: !9715)
!9717 = !DILocation(line: 3058, column: 30, scope: !9715)
!9718 = !DILocation(line: 3058, column: 28, scope: !9715)
!9719 = !DILocation(line: 3058, column: 21, scope: !9710)
!9720 = !DILocation(line: 3059, column: 21, scope: !9715)
!9721 = !DILocation(line: 3059, column: 25, scope: !9715)
!9722 = !DILocation(line: 3059, column: 19, scope: !9715)
!9723 = !DILocation(line: 3058, column: 35, scope: !9715)
!9724 = !DILocation(line: 3057, column: 39, scope: !9710)
!9725 = !DILocation(line: 3057, column: 15, scope: !9710)
!9726 = distinct !{!9726, !9713, !9727}
!9727 = !DILocation(line: 3059, column: 26, scope: !9706)
!9728 = !DILocation(line: 3060, column: 15, scope: !9707)
!9729 = !DILocation(line: 3061, column: 24, scope: !9707)
!9730 = !DILocation(line: 3061, column: 28, scope: !9707)
!9731 = !DILocation(line: 3061, column: 37, scope: !9707)
!9732 = !DILocation(line: 3061, column: 43, scope: !9707)
!9733 = !DILocation(line: 3061, column: 51, scope: !9707)
!9734 = !DILocation(line: 3061, column: 15, scope: !9707)
!9735 = !DILocation(line: 3062, column: 19, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9707, file: !66, line: 3062, column: 19)
!9737 = !DILocation(line: 3062, column: 28, scope: !9736)
!9738 = !DILocation(line: 3062, column: 26, scope: !9736)
!9739 = !DILocation(line: 3062, column: 19, scope: !9707)
!9740 = !DILocation(line: 3064, column: 25, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9736, file: !66, line: 3063, column: 17)
!9742 = !DILocation(line: 3065, column: 28, scope: !9741)
!9743 = !DILocation(line: 3065, column: 34, scope: !9741)
!9744 = !DILocation(line: 3065, column: 42, scope: !9741)
!9745 = !DILocation(line: 3065, column: 19, scope: !9741)
!9746 = !DILocation(line: 3066, column: 17, scope: !9741)
!9747 = !DILocation(line: 3067, column: 21, scope: !9707)
!9748 = !DILocation(line: 3067, column: 28, scope: !9707)
!9749 = !DILocation(line: 3067, column: 36, scope: !9707)
!9750 = !DILocation(line: 3067, column: 15, scope: !9707)
!9751 = !DILocation(line: 3068, column: 24, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9707, file: !66, line: 3068, column: 15)
!9753 = !DILocation(line: 3068, column: 22, scope: !9752)
!9754 = !DILocation(line: 3068, column: 20, scope: !9752)
!9755 = !DILocation(line: 3068, column: 32, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9752, file: !66, line: 3068, column: 15)
!9757 = !DILocation(line: 3068, column: 36, scope: !9756)
!9758 = !DILocation(line: 3068, column: 34, scope: !9756)
!9759 = !DILocation(line: 3068, column: 15, scope: !9752)
!9760 = !DILocation(line: 3070, column: 28, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9756, file: !66, line: 3069, column: 17)
!9762 = !DILocation(line: 3070, column: 32, scope: !9761)
!9763 = !DILocation(line: 3070, column: 34, scope: !9761)
!9764 = !DILocation(line: 3070, column: 19, scope: !9761)
!9765 = !DILocation(line: 3070, column: 23, scope: !9761)
!9766 = !DILocation(line: 3070, column: 26, scope: !9761)
!9767 = !DILocation(line: 3071, column: 19, scope: !9761)
!9768 = !DILocation(line: 3071, column: 25, scope: !9761)
!9769 = !DILocation(line: 3071, column: 30, scope: !9761)
!9770 = !DILocation(line: 3071, column: 36, scope: !9761)
!9771 = !DILocation(line: 3071, column: 38, scope: !9761)
!9772 = !DILocation(line: 3072, column: 19, scope: !9761)
!9773 = !DILocation(line: 3072, column: 26, scope: !9761)
!9774 = !DILocation(line: 3072, column: 31, scope: !9761)
!9775 = !DILocation(line: 3072, column: 38, scope: !9761)
!9776 = !DILocation(line: 3072, column: 40, scope: !9761)
!9777 = !{i64 0, i64 8, !2286, i64 8, i64 8, !2447, i64 16, i64 8, !2447, i64 24, i64 8, !2447, i64 32, i64 8, !2447, i64 40, i64 8, !2447, i64 48, i64 1, !2430}
!9778 = !DILocation(line: 3073, column: 28, scope: !9761)
!9779 = !DILocation(line: 3073, column: 32, scope: !9761)
!9780 = !DILocation(line: 3073, column: 34, scope: !9761)
!9781 = !DILocation(line: 3073, column: 19, scope: !9761)
!9782 = !DILocation(line: 3073, column: 23, scope: !9761)
!9783 = !DILocation(line: 3073, column: 26, scope: !9761)
!9784 = !DILocation(line: 3074, column: 29, scope: !9761)
!9785 = !DILocation(line: 3074, column: 34, scope: !9761)
!9786 = !DILocation(line: 3074, column: 36, scope: !9761)
!9787 = !DILocation(line: 3074, column: 19, scope: !9761)
!9788 = !DILocation(line: 3074, column: 24, scope: !9761)
!9789 = !DILocation(line: 3074, column: 27, scope: !9761)
!9790 = !DILocation(line: 3075, column: 17, scope: !9761)
!9791 = !DILocation(line: 3068, column: 44, scope: !9756)
!9792 = !DILocation(line: 3068, column: 15, scope: !9756)
!9793 = distinct !{!9793, !9759, !9794}
!9794 = !DILocation(line: 3075, column: 17, scope: !9752)
!9795 = !DILocation(line: 3076, column: 22, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9707, file: !66, line: 3076, column: 15)
!9797 = !DILocation(line: 3076, column: 20, scope: !9796)
!9798 = !DILocation(line: 3076, column: 27, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9796, file: !66, line: 3076, column: 15)
!9800 = !DILocation(line: 3076, column: 31, scope: !9799)
!9801 = !DILocation(line: 3076, column: 29, scope: !9799)
!9802 = !DILocation(line: 3076, column: 15, scope: !9796)
!9803 = !DILocation(line: 3077, column: 26, scope: !9799)
!9804 = !DILocation(line: 3077, column: 30, scope: !9799)
!9805 = !DILocation(line: 3077, column: 32, scope: !9799)
!9806 = !DILocation(line: 3077, column: 17, scope: !9799)
!9807 = !DILocation(line: 3077, column: 21, scope: !9799)
!9808 = !DILocation(line: 3077, column: 24, scope: !9799)
!9809 = !DILocation(line: 3076, column: 39, scope: !9799)
!9810 = !DILocation(line: 3076, column: 15, scope: !9799)
!9811 = distinct !{!9811, !9802, !9812}
!9812 = !DILocation(line: 3077, column: 35, scope: !9796)
!9813 = !DILocation(line: 3078, column: 15, scope: !9707)
!9814 = distinct !{!9814, !9567, !9815}
!9815 = !DILocation(line: 3108, column: 5, scope: !9367)
!9816 = !DILocalVariable(name: "lo", scope: !9817, file: !66, line: 3087, type: !55)
!9817 = distinct !DILexicalBlock(scope: !9570, file: !66, line: 3086, column: 7)
!9818 = !DILocation(line: 3087, column: 16, scope: !9817)
!9819 = !DILocalVariable(name: "hi", scope: !9817, file: !66, line: 3088, type: !55)
!9820 = !DILocation(line: 3088, column: 16, scope: !9817)
!9821 = !DILocation(line: 3088, column: 21, scope: !9817)
!9822 = !DILocalVariable(name: "probe", scope: !9817, file: !66, line: 3089, type: !55)
!9823 = !DILocation(line: 3089, column: 16, scope: !9817)
!9824 = !DILocation(line: 3089, column: 24, scope: !9817)
!9825 = !DILocalVariable(name: "ord0", scope: !9817, file: !66, line: 3090, type: !55)
!9826 = !DILocation(line: 3090, column: 16, scope: !9817)
!9827 = !DILocation(line: 3090, column: 23, scope: !9817)
!9828 = !DILocalVariable(name: "count_of_smaller_lines", scope: !9817, file: !66, line: 3091, type: !55)
!9829 = !DILocation(line: 3091, column: 16, scope: !9817)
!9830 = !DILocation(line: 3093, column: 9, scope: !9817)
!9831 = !DILocation(line: 3093, column: 16, scope: !9817)
!9832 = !DILocation(line: 3093, column: 21, scope: !9817)
!9833 = !DILocation(line: 3093, column: 19, scope: !9817)
!9834 = !DILocalVariable(name: "cmp", scope: !9835, file: !66, line: 3095, type: !7)
!9835 = distinct !DILexicalBlock(scope: !9817, file: !66, line: 3094, column: 11)
!9836 = !DILocation(line: 3095, column: 17, scope: !9835)
!9837 = !DILocation(line: 3095, column: 32, scope: !9835)
!9838 = !DILocation(line: 3095, column: 36, scope: !9835)
!9839 = !DILocation(line: 3095, column: 43, scope: !9835)
!9840 = !DILocation(line: 3095, column: 47, scope: !9835)
!9841 = !DILocation(line: 3095, column: 51, scope: !9835)
!9842 = !DILocation(line: 3095, column: 23, scope: !9835)
!9843 = !DILocation(line: 3096, column: 17, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9835, file: !66, line: 3096, column: 17)
!9845 = !DILocation(line: 3096, column: 21, scope: !9844)
!9846 = !DILocation(line: 3096, column: 25, scope: !9844)
!9847 = !DILocation(line: 3096, column: 29, scope: !9844)
!9848 = !DILocation(line: 3096, column: 33, scope: !9844)
!9849 = !DILocation(line: 3096, column: 38, scope: !9844)
!9850 = !DILocation(line: 3096, column: 41, scope: !9844)
!9851 = !DILocation(line: 3096, column: 48, scope: !9844)
!9852 = !DILocation(line: 3096, column: 52, scope: !9844)
!9853 = !DILocation(line: 3096, column: 46, scope: !9844)
!9854 = !DILocation(line: 3096, column: 17, scope: !9835)
!9855 = !DILocation(line: 3097, column: 20, scope: !9844)
!9856 = !DILocation(line: 3097, column: 18, scope: !9844)
!9857 = !DILocation(line: 3097, column: 15, scope: !9844)
!9858 = !DILocation(line: 3099, column: 20, scope: !9844)
!9859 = !DILocation(line: 3099, column: 26, scope: !9844)
!9860 = !DILocation(line: 3099, column: 18, scope: !9844)
!9861 = !DILocation(line: 3100, column: 22, scope: !9835)
!9862 = !DILocation(line: 3100, column: 27, scope: !9835)
!9863 = !DILocation(line: 3100, column: 25, scope: !9835)
!9864 = !DILocation(line: 3100, column: 31, scope: !9835)
!9865 = !DILocation(line: 3100, column: 19, scope: !9835)
!9866 = distinct !{!9866, !9830, !9867}
!9867 = !DILocation(line: 3101, column: 11, scope: !9817)
!9868 = !DILocation(line: 3103, column: 34, scope: !9817)
!9869 = !DILocation(line: 3103, column: 37, scope: !9817)
!9870 = !DILocation(line: 3103, column: 32, scope: !9817)
!9871 = !DILocation(line: 3104, column: 16, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9817, file: !66, line: 3104, column: 9)
!9873 = !DILocation(line: 3104, column: 14, scope: !9872)
!9874 = !DILocation(line: 3104, column: 21, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9872, file: !66, line: 3104, column: 9)
!9876 = !DILocation(line: 3104, column: 25, scope: !9875)
!9877 = !DILocation(line: 3104, column: 23, scope: !9875)
!9878 = !DILocation(line: 3104, column: 9, scope: !9872)
!9879 = !DILocation(line: 3105, column: 20, scope: !9875)
!9880 = !DILocation(line: 3105, column: 24, scope: !9875)
!9881 = !DILocation(line: 3105, column: 26, scope: !9875)
!9882 = !DILocation(line: 3105, column: 11, scope: !9875)
!9883 = !DILocation(line: 3105, column: 15, scope: !9875)
!9884 = !DILocation(line: 3105, column: 18, scope: !9875)
!9885 = !DILocation(line: 3104, column: 50, scope: !9875)
!9886 = !DILocation(line: 3104, column: 9, scope: !9875)
!9887 = distinct !{!9887, !9878, !9888}
!9888 = !DILocation(line: 3105, column: 29, scope: !9872)
!9889 = !DILocation(line: 3106, column: 39, scope: !9817)
!9890 = !DILocation(line: 3106, column: 9, scope: !9817)
!9891 = !DILocation(line: 3106, column: 13, scope: !9817)
!9892 = !DILocation(line: 3106, column: 37, scope: !9817)
!9893 = !DILocation(line: 3110, column: 7, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9367, file: !66, line: 3110, column: 7)
!9895 = !DILocation(line: 3110, column: 14, scope: !9894)
!9896 = !DILocation(line: 3110, column: 17, scope: !9894)
!9897 = !DILocation(line: 3110, column: 7, scope: !9367)
!9898 = !DILocation(line: 3112, column: 27, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9894, file: !66, line: 3111, column: 5)
!9900 = !DILocation(line: 3112, column: 32, scope: !9899)
!9901 = !DILocation(line: 3112, column: 7, scope: !9899)
!9902 = !DILocation(line: 3113, column: 19, scope: !9899)
!9903 = !DILocation(line: 3113, column: 7, scope: !9899)
!9904 = !DILocation(line: 3114, column: 5, scope: !9899)
!9905 = !DILocation(line: 3116, column: 12, scope: !9367)
!9906 = !DILocation(line: 3116, column: 17, scope: !9367)
!9907 = !DILocation(line: 3116, column: 3, scope: !9367)
!9908 = !DILocation(line: 3117, column: 9, scope: !9367)
!9909 = !DILocation(line: 3117, column: 3, scope: !9367)
!9910 = !DILocation(line: 3118, column: 9, scope: !9367)
!9911 = !DILocation(line: 3118, column: 3, scope: !9367)
!9912 = !DILocation(line: 3119, column: 9, scope: !9367)
!9913 = !DILocation(line: 3119, column: 3, scope: !9367)
!9914 = !DILocation(line: 3120, column: 9, scope: !9367)
!9915 = !DILocation(line: 3120, column: 3, scope: !9367)
!9916 = !DILocation(line: 3121, column: 9, scope: !9367)
!9917 = !DILocation(line: 3121, column: 3, scope: !9367)
!9918 = !DILocation(line: 3122, column: 1, scope: !9367)
!9919 = distinct !DISubprogram(name: "zaptemp", scope: !66, file: !66, line: 1247, type: !306, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9920 = !DILocalVariable(name: "name", arg: 1, scope: !9919, file: !66, line: 1247, type: !88)
!9921 = !DILocation(line: 1247, column: 22, scope: !9919)
!9922 = !DILocalVariable(name: "pnode", scope: !9919, file: !66, line: 1249, type: !569)
!9923 = !DILocation(line: 1249, column: 30, scope: !9919)
!9924 = !DILocalVariable(name: "node", scope: !9919, file: !66, line: 1250, type: !293)
!9925 = !DILocation(line: 1250, column: 20, scope: !9919)
!9926 = !DILocalVariable(name: "next", scope: !9919, file: !66, line: 1251, type: !293)
!9927 = !DILocation(line: 1251, column: 20, scope: !9919)
!9928 = !DILocalVariable(name: "unlink_status", scope: !9919, file: !66, line: 1252, type: !7)
!9929 = !DILocation(line: 1252, column: 7, scope: !9919)
!9930 = !DILocalVariable(name: "unlink_errno", scope: !9919, file: !66, line: 1253, type: !7)
!9931 = !DILocation(line: 1253, column: 7, scope: !9919)
!9932 = !DILocalVariable(name: "cs", scope: !9919, file: !66, line: 1254, type: !348)
!9933 = !DILocation(line: 1254, column: 20, scope: !9919)
!9934 = !DILocation(line: 1256, column: 14, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9919, file: !66, line: 1256, column: 3)
!9936 = !DILocation(line: 1256, column: 8, scope: !9935)
!9937 = !DILocation(line: 1256, column: 36, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9935, file: !66, line: 1256, column: 3)
!9939 = !DILocation(line: 1256, column: 35, scope: !9938)
!9940 = !DILocation(line: 1256, column: 33, scope: !9938)
!9941 = !DILocation(line: 1256, column: 44, scope: !9938)
!9942 = !DILocation(line: 1256, column: 27, scope: !9938)
!9943 = !DILocation(line: 1256, column: 52, scope: !9938)
!9944 = !DILocation(line: 1256, column: 49, scope: !9938)
!9945 = !DILocation(line: 1256, column: 3, scope: !9935)
!9946 = !DILocation(line: 1257, column: 5, scope: !9938)
!9947 = !DILocation(line: 1256, column: 67, scope: !9938)
!9948 = !DILocation(line: 1256, column: 73, scope: !9938)
!9949 = !DILocation(line: 1256, column: 64, scope: !9938)
!9950 = !DILocation(line: 1256, column: 3, scope: !9938)
!9951 = distinct !{!9951, !9945, !9952}
!9952 = !DILocation(line: 1257, column: 5, scope: !9935)
!9953 = !DILocation(line: 1259, column: 7, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9919, file: !66, line: 1259, column: 7)
!9955 = !DILocation(line: 1259, column: 13, scope: !9954)
!9956 = !DILocation(line: 1259, column: 19, scope: !9954)
!9957 = !DILocation(line: 1259, column: 7, scope: !9919)
!9958 = !DILocation(line: 1260, column: 16, scope: !9954)
!9959 = !DILocation(line: 1260, column: 22, scope: !9954)
!9960 = !DILocation(line: 1260, column: 5, scope: !9954)
!9961 = !DILocation(line: 1263, column: 10, scope: !9919)
!9962 = !DILocation(line: 1263, column: 16, scope: !9919)
!9963 = !DILocation(line: 1263, column: 8, scope: !9919)
!9964 = !DILocation(line: 1264, column: 3, scope: !9919)
!9965 = !DILocation(line: 1265, column: 27, scope: !9919)
!9966 = !DILocation(line: 1265, column: 19, scope: !9919)
!9967 = !DILocation(line: 1265, column: 17, scope: !9919)
!9968 = !DILocation(line: 1266, column: 18, scope: !9919)
!9969 = !DILocation(line: 1266, column: 16, scope: !9919)
!9970 = !DILocation(line: 1267, column: 12, scope: !9919)
!9971 = !DILocation(line: 1267, column: 4, scope: !9919)
!9972 = !DILocation(line: 1267, column: 10, scope: !9919)
!9973 = !DILocation(line: 1268, column: 3, scope: !9919)
!9974 = !DILocation(line: 1270, column: 7, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9919, file: !66, line: 1270, column: 7)
!9976 = !DILocation(line: 1270, column: 21, scope: !9975)
!9977 = !DILocation(line: 1270, column: 7, scope: !9919)
!9978 = !DILocation(line: 1271, column: 15, scope: !9975)
!9979 = !DILocation(line: 1271, column: 29, scope: !9975)
!9980 = !DILocation(line: 1271, column: 62, scope: !9975)
!9981 = !DILocation(line: 1271, column: 5, scope: !9975)
!9982 = !DILocation(line: 1272, column: 9, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9919, file: !66, line: 1272, column: 7)
!9984 = !DILocation(line: 1272, column: 7, scope: !9919)
!9985 = !DILocation(line: 1273, column: 16, scope: !9983)
!9986 = !DILocation(line: 1273, column: 14, scope: !9983)
!9987 = !DILocation(line: 1273, column: 5, scope: !9983)
!9988 = !DILocation(line: 1274, column: 9, scope: !9919)
!9989 = !DILocation(line: 1274, column: 3, scope: !9919)
!9990 = !DILocation(line: 1275, column: 1, scope: !9919)
!9991 = distinct !DISubprogram(name: "wait_proc", scope: !66, file: !66, line: 775, type: !545, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!9992 = !DILocalVariable(name: "pid", arg: 1, scope: !9991, file: !66, line: 775, type: !299)
!9993 = !DILocation(line: 775, column: 18, scope: !9991)
!9994 = !DILocation(line: 777, column: 20, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9991, file: !66, line: 777, column: 7)
!9996 = !DILocation(line: 777, column: 7, scope: !9995)
!9997 = !DILocation(line: 777, column: 7, scope: !9991)
!9998 = !DILocation(line: 778, column: 11, scope: !9995)
!9999 = !DILocation(line: 778, column: 5, scope: !9995)
!10000 = !DILocation(line: 779, column: 1, scope: !9991)
!10001 = !DILocation(line: 897, column: 7, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !786, file: !66, line: 897, column: 7)
!10003 = !DILocation(line: 897, column: 21, scope: !10002)
!10004 = !DILocation(line: 897, column: 7, scope: !786)
!10005 = !DILocation(line: 898, column: 21, scope: !10002)
!10006 = !DILocation(line: 898, column: 53, scope: !10002)
!10007 = !DILocation(line: 898, column: 65, scope: !10002)
!10008 = !DILocation(line: 898, column: 19, scope: !10002)
!10009 = !DILocation(line: 898, column: 5, scope: !10002)
!10010 = !DILocation(line: 899, column: 10, scope: !786)
!10011 = !DILocation(line: 899, column: 24, scope: !786)
!10012 = !DILocation(line: 899, column: 3, scope: !786)
!10013 = distinct !DISubprogram(name: "open_temp", scope: !66, file: !66, line: 1180, type: !542, scopeLine: 1181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!10014 = !DILocalVariable(name: "temp", arg: 1, scope: !10013, file: !66, line: 1180, type: !293)
!10015 = !DILocation(line: 1180, column: 29, scope: !10013)
!10016 = !DILocalVariable(name: "tempfd", scope: !10013, file: !66, line: 1182, type: !7)
!10017 = !DILocation(line: 1182, column: 7, scope: !10013)
!10018 = !DILocalVariable(name: "pipefds", scope: !10013, file: !66, line: 1182, type: !544)
!10019 = !DILocation(line: 1182, column: 15, scope: !10013)
!10020 = !DILocalVariable(name: "fp", scope: !10013, file: !66, line: 1183, type: !0)
!10021 = !DILocation(line: 1183, column: 9, scope: !10013)
!10022 = !DILocation(line: 1185, column: 7, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10013, file: !66, line: 1185, column: 7)
!10024 = !DILocation(line: 1185, column: 13, scope: !10023)
!10025 = !DILocation(line: 1185, column: 19, scope: !10023)
!10026 = !DILocation(line: 1185, column: 7, scope: !10013)
!10027 = !DILocation(line: 1186, column: 16, scope: !10023)
!10028 = !DILocation(line: 1186, column: 22, scope: !10023)
!10029 = !DILocation(line: 1186, column: 5, scope: !10023)
!10030 = !DILocation(line: 1188, column: 18, scope: !10013)
!10031 = !DILocation(line: 1188, column: 24, scope: !10013)
!10032 = !DILocation(line: 1188, column: 12, scope: !10013)
!10033 = !DILocation(line: 1188, column: 10, scope: !10013)
!10034 = !DILocation(line: 1189, column: 7, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10013, file: !66, line: 1189, column: 7)
!10036 = !DILocation(line: 1189, column: 14, scope: !10035)
!10037 = !DILocation(line: 1189, column: 7, scope: !10013)
!10038 = !DILocation(line: 1190, column: 5, scope: !10035)
!10039 = !DILocalVariable(name: "child", scope: !10013, file: !66, line: 1192, type: !299)
!10040 = !DILocation(line: 1192, column: 9, scope: !10013)
!10041 = !DILocation(line: 1192, column: 28, scope: !10013)
!10042 = !DILocation(line: 1192, column: 17, scope: !10013)
!10043 = !DILocation(line: 1194, column: 11, scope: !10013)
!10044 = !DILocation(line: 1194, column: 3, scope: !10013)
!10045 = !DILocation(line: 1197, column: 11, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !66, line: 1197, column: 11)
!10047 = distinct !DILexicalBlock(scope: !10013, file: !66, line: 1195, column: 5)
!10048 = !DILocation(line: 1197, column: 17, scope: !10046)
!10049 = !DILocation(line: 1197, column: 11, scope: !10047)
!10050 = !DILocation(line: 1198, column: 9, scope: !10046)
!10051 = !DILocation(line: 1200, column: 14, scope: !10047)
!10052 = !DILocation(line: 1200, column: 7, scope: !10047)
!10053 = !DILocation(line: 1201, column: 7, scope: !10047)
!10054 = !DILocation(line: 1201, column: 13, scope: !10047)
!10055 = !DILocation(line: 1202, column: 7, scope: !10047)
!10056 = !DILocation(line: 1207, column: 14, scope: !10047)
!10057 = !DILocation(line: 1207, column: 7, scope: !10047)
!10058 = !DILocation(line: 1208, column: 16, scope: !10047)
!10059 = !DILocation(line: 1208, column: 7, scope: !10047)
!10060 = !DILocation(line: 1209, column: 16, scope: !10047)
!10061 = !DILocation(line: 1209, column: 7, scope: !10047)
!10062 = !DILocation(line: 1211, column: 15, scope: !10047)
!10063 = !DILocation(line: 1211, column: 33, scope: !10047)
!10064 = !DILocation(line: 1211, column: 7, scope: !10047)
!10065 = !DILocation(line: 1213, column: 23, scope: !10047)
!10066 = !DILocation(line: 1213, column: 7, scope: !10047)
!10067 = !DILocation(line: 1216, column: 19, scope: !10047)
!10068 = !DILocation(line: 1216, column: 7, scope: !10047)
!10069 = !DILocation(line: 1216, column: 13, scope: !10047)
!10070 = !DILocation(line: 1216, column: 17, scope: !10047)
!10071 = !DILocation(line: 1217, column: 22, scope: !10047)
!10072 = !DILocation(line: 1217, column: 7, scope: !10047)
!10073 = !DILocation(line: 1218, column: 14, scope: !10047)
!10074 = !DILocation(line: 1218, column: 7, scope: !10047)
!10075 = !DILocation(line: 1219, column: 14, scope: !10047)
!10076 = !DILocation(line: 1219, column: 7, scope: !10047)
!10077 = !DILocation(line: 1221, column: 20, scope: !10047)
!10078 = !DILocation(line: 1221, column: 12, scope: !10047)
!10079 = !DILocation(line: 1221, column: 10, scope: !10047)
!10080 = !DILocation(line: 1222, column: 13, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10047, file: !66, line: 1222, column: 11)
!10082 = !DILocation(line: 1222, column: 11, scope: !10047)
!10083 = !DILocalVariable(name: "saved_errno", scope: !10084, file: !66, line: 1224, type: !7)
!10084 = distinct !DILexicalBlock(scope: !10081, file: !66, line: 1223, column: 9)
!10085 = !DILocation(line: 1224, column: 15, scope: !10084)
!10086 = !DILocation(line: 1224, column: 29, scope: !10084)
!10087 = !DILocation(line: 1225, column: 18, scope: !10084)
!10088 = !DILocation(line: 1225, column: 11, scope: !10084)
!10089 = !DILocation(line: 1226, column: 19, scope: !10084)
!10090 = !DILocation(line: 1226, column: 11, scope: !10084)
!10091 = !DILocation(line: 1226, column: 17, scope: !10084)
!10092 = !DILocation(line: 1227, column: 9, scope: !10084)
!10093 = !DILocation(line: 1228, column: 7, scope: !10047)
!10094 = !DILocation(line: 1231, column: 10, scope: !10013)
!10095 = !DILocation(line: 1231, column: 3, scope: !10013)
!10096 = !DILocation(line: 1232, column: 1, scope: !10013)
!10097 = distinct !DISubprogram(name: "key_to_opts", scope: !66, file: !66, line: 2397, type: !426, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!10098 = !DILocalVariable(name: "key", arg: 1, scope: !10097, file: !66, line: 2397, type: !423)
!10099 = !DILocation(line: 2397, column: 37, scope: !10097)
!10100 = !DILocalVariable(name: "opts", arg: 2, scope: !10097, file: !66, line: 2397, type: !9)
!10101 = !DILocation(line: 2397, column: 48, scope: !10097)
!10102 = !DILocation(line: 2399, column: 7, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2399, column: 7)
!10104 = !DILocation(line: 2399, column: 12, scope: !10103)
!10105 = !DILocation(line: 2399, column: 24, scope: !10103)
!10106 = !DILocation(line: 2399, column: 27, scope: !10103)
!10107 = !DILocation(line: 2399, column: 32, scope: !10103)
!10108 = !DILocation(line: 2399, column: 7, scope: !10097)
!10109 = !DILocation(line: 2400, column: 10, scope: !10103)
!10110 = !DILocation(line: 2400, column: 13, scope: !10103)
!10111 = !DILocation(line: 2400, column: 5, scope: !10103)
!10112 = !DILocation(line: 2401, column: 7, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2401, column: 7)
!10114 = !DILocation(line: 2401, column: 12, scope: !10113)
!10115 = !DILocation(line: 2401, column: 19, scope: !10113)
!10116 = !DILocation(line: 2401, column: 7, scope: !10097)
!10117 = !DILocation(line: 2402, column: 10, scope: !10113)
!10118 = !DILocation(line: 2402, column: 13, scope: !10113)
!10119 = !DILocation(line: 2402, column: 5, scope: !10113)
!10120 = !DILocation(line: 2403, column: 7, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2403, column: 7)
!10122 = !DILocation(line: 2403, column: 12, scope: !10121)
!10123 = !DILocation(line: 2403, column: 7, scope: !10097)
!10124 = !DILocation(line: 2404, column: 10, scope: !10121)
!10125 = !DILocation(line: 2404, column: 13, scope: !10121)
!10126 = !DILocation(line: 2404, column: 5, scope: !10121)
!10127 = !DILocation(line: 2405, column: 7, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2405, column: 7)
!10129 = !DILocation(line: 2405, column: 12, scope: !10128)
!10130 = !DILocation(line: 2405, column: 7, scope: !10097)
!10131 = !DILocation(line: 2406, column: 10, scope: !10128)
!10132 = !DILocation(line: 2406, column: 13, scope: !10128)
!10133 = !DILocation(line: 2406, column: 5, scope: !10128)
!10134 = !DILocation(line: 2407, column: 7, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2407, column: 7)
!10136 = !DILocation(line: 2407, column: 12, scope: !10135)
!10137 = !DILocation(line: 2407, column: 7, scope: !10097)
!10138 = !DILocation(line: 2408, column: 10, scope: !10135)
!10139 = !DILocation(line: 2408, column: 13, scope: !10135)
!10140 = !DILocation(line: 2408, column: 5, scope: !10135)
!10141 = !DILocation(line: 2409, column: 7, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2409, column: 7)
!10143 = !DILocation(line: 2409, column: 12, scope: !10142)
!10144 = !DILocation(line: 2409, column: 19, scope: !10142)
!10145 = !DILocation(line: 2409, column: 7, scope: !10097)
!10146 = !DILocation(line: 2410, column: 10, scope: !10142)
!10147 = !DILocation(line: 2410, column: 13, scope: !10142)
!10148 = !DILocation(line: 2410, column: 5, scope: !10142)
!10149 = !DILocation(line: 2411, column: 7, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2411, column: 7)
!10151 = !DILocation(line: 2411, column: 12, scope: !10150)
!10152 = !DILocation(line: 2411, column: 7, scope: !10097)
!10153 = !DILocation(line: 2412, column: 10, scope: !10150)
!10154 = !DILocation(line: 2412, column: 13, scope: !10150)
!10155 = !DILocation(line: 2412, column: 5, scope: !10150)
!10156 = !DILocation(line: 2413, column: 7, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2413, column: 7)
!10158 = !DILocation(line: 2413, column: 12, scope: !10157)
!10159 = !DILocation(line: 2413, column: 7, scope: !10097)
!10160 = !DILocation(line: 2414, column: 10, scope: !10157)
!10161 = !DILocation(line: 2414, column: 13, scope: !10157)
!10162 = !DILocation(line: 2414, column: 5, scope: !10157)
!10163 = !DILocation(line: 2415, column: 7, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2415, column: 7)
!10165 = !DILocation(line: 2415, column: 12, scope: !10164)
!10166 = !DILocation(line: 2415, column: 7, scope: !10097)
!10167 = !DILocation(line: 2416, column: 10, scope: !10164)
!10168 = !DILocation(line: 2416, column: 13, scope: !10164)
!10169 = !DILocation(line: 2416, column: 5, scope: !10164)
!10170 = !DILocation(line: 2417, column: 7, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2417, column: 7)
!10172 = !DILocation(line: 2417, column: 12, scope: !10171)
!10173 = !DILocation(line: 2417, column: 7, scope: !10097)
!10174 = !DILocation(line: 2418, column: 10, scope: !10171)
!10175 = !DILocation(line: 2418, column: 13, scope: !10171)
!10176 = !DILocation(line: 2418, column: 5, scope: !10171)
!10177 = !DILocation(line: 2419, column: 7, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10097, file: !66, line: 2419, column: 7)
!10179 = !DILocation(line: 2419, column: 12, scope: !10178)
!10180 = !DILocation(line: 2419, column: 7, scope: !10097)
!10181 = !DILocation(line: 2420, column: 10, scope: !10178)
!10182 = !DILocation(line: 2420, column: 13, scope: !10178)
!10183 = !DILocation(line: 2420, column: 5, scope: !10178)
!10184 = !DILocation(line: 2421, column: 4, scope: !10097)
!10185 = !DILocation(line: 2421, column: 9, scope: !10097)
!10186 = !DILocation(line: 2422, column: 1, scope: !10097)
!10187 = distinct !DISubprogram(name: "select_plural", scope: !311, file: !311, line: 183, type: !439, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!10188 = !DILocalVariable(name: "n", arg: 1, scope: !10187, file: !311, line: 183, type: !361)
!10189 = !DILocation(line: 183, column: 26, scope: !10187)
!10190 = !DILocation(line: 188, column: 11, scope: !10187)
!10191 = !DILocation(line: 188, column: 13, scope: !10187)
!10192 = !DILocation(line: 188, column: 28, scope: !10187)
!10193 = !DILocation(line: 188, column: 32, scope: !10187)
!10194 = !DILocation(line: 188, column: 34, scope: !10187)
!10195 = !DILocation(line: 188, column: 51, scope: !10187)
!10196 = !DILocation(line: 188, column: 3, scope: !10187)
!10197 = distinct !DISubprogram(name: "cleanup", scope: !66, file: !66, line: 812, type: !168, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!10198 = !DILocalVariable(name: "node", scope: !10197, file: !66, line: 814, type: !343)
!10199 = !DILocation(line: 814, column: 26, scope: !10197)
!10200 = !DILocation(line: 816, column: 15, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10197, file: !66, line: 816, column: 3)
!10202 = !DILocation(line: 816, column: 13, scope: !10201)
!10203 = !DILocation(line: 816, column: 8, scope: !10201)
!10204 = !DILocation(line: 816, column: 25, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10201, file: !66, line: 816, column: 3)
!10206 = !DILocation(line: 816, column: 3, scope: !10201)
!10207 = !DILocation(line: 817, column: 13, scope: !10205)
!10208 = !DILocation(line: 817, column: 19, scope: !10205)
!10209 = !DILocation(line: 817, column: 5, scope: !10205)
!10210 = !DILocation(line: 816, column: 38, scope: !10205)
!10211 = !DILocation(line: 816, column: 44, scope: !10205)
!10212 = !DILocation(line: 816, column: 36, scope: !10205)
!10213 = !DILocation(line: 816, column: 3, scope: !10205)
!10214 = distinct !{!10214, !10206, !10215}
!10215 = !DILocation(line: 817, column: 23, scope: !10201)
!10216 = !DILocation(line: 818, column: 12, scope: !10197)
!10217 = !DILocation(line: 819, column: 1, scope: !10197)
!10218 = distinct !DISubprogram(name: "field_sep", scope: !311, file: !311, line: 160, type: !335, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!10219 = !DILocalVariable(name: "ch", arg: 1, scope: !10218, file: !311, line: 160, type: !321)
!10220 = !DILocation(line: 160, column: 26, scope: !10218)
!10221 = !DILocation(line: 162, column: 10, scope: !10218)
!10222 = !DILocation(line: 162, column: 23, scope: !10218)
!10223 = !DILocation(line: 162, column: 26, scope: !10218)
!10224 = !DILocation(line: 162, column: 29, scope: !10218)
!10225 = !DILocation(line: 162, column: 3, scope: !10218)
!10226 = distinct !DISubprogram(name: "struct_month_cmp", scope: !66, file: !66, line: 1280, type: !337, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !313)
!10227 = !DILocalVariable(name: "m1", arg: 1, scope: !10226, file: !66, line: 1280, type: !339)
!10228 = !DILocation(line: 1280, column: 31, scope: !10226)
!10229 = !DILocalVariable(name: "m2", arg: 2, scope: !10226, file: !66, line: 1280, type: !339)
!10230 = !DILocation(line: 1280, column: 47, scope: !10226)
!10231 = !DILocalVariable(name: "month1", scope: !10226, file: !66, line: 1282, type: !341)
!10232 = !DILocation(line: 1282, column: 23, scope: !10226)
!10233 = !DILocation(line: 1282, column: 32, scope: !10226)
!10234 = !DILocalVariable(name: "month2", scope: !10226, file: !66, line: 1283, type: !341)
!10235 = !DILocation(line: 1283, column: 23, scope: !10226)
!10236 = !DILocation(line: 1283, column: 32, scope: !10226)
!10237 = !DILocation(line: 1284, column: 18, scope: !10226)
!10238 = !DILocation(line: 1284, column: 26, scope: !10226)
!10239 = !DILocation(line: 1284, column: 32, scope: !10226)
!10240 = !DILocation(line: 1284, column: 40, scope: !10226)
!10241 = !DILocation(line: 1284, column: 10, scope: !10226)
!10242 = !DILocation(line: 1284, column: 3, scope: !10226)
!10243 = distinct !DISubprogram(name: "__argmatch_die", scope: !872, file: !872, line: 62, type: !168, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !822, retainedNodes: !313)
!10244 = !DILocation(line: 64, column: 3, scope: !10243)
!10245 = !DILocation(line: 65, column: 1, scope: !10243)
!10246 = distinct !DISubprogram(name: "argmatch", scope: !872, file: !872, line: 84, type: !825, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !822, retainedNodes: !313)
!10247 = !DILocalVariable(name: "arg", arg: 1, scope: !10246, file: !872, line: 84, type: !88)
!10248 = !DILocation(line: 84, column: 23, scope: !10246)
!10249 = !DILocalVariable(name: "arglist", arg: 2, scope: !10246, file: !872, line: 84, type: !828)
!10250 = !DILocation(line: 84, column: 47, scope: !10246)
!10251 = !DILocalVariable(name: "vallist", arg: 3, scope: !10246, file: !872, line: 85, type: !88)
!10252 = !DILocation(line: 85, column: 23, scope: !10246)
!10253 = !DILocalVariable(name: "valsize", arg: 4, scope: !10246, file: !872, line: 85, type: !55)
!10254 = !DILocation(line: 85, column: 39, scope: !10246)
!10255 = !DILocalVariable(name: "i", scope: !10246, file: !872, line: 87, type: !55)
!10256 = !DILocation(line: 87, column: 10, scope: !10246)
!10257 = !DILocalVariable(name: "arglen", scope: !10246, file: !872, line: 88, type: !55)
!10258 = !DILocation(line: 88, column: 10, scope: !10246)
!10259 = !DILocalVariable(name: "matchind", scope: !10246, file: !872, line: 89, type: !827)
!10260 = !DILocation(line: 89, column: 13, scope: !10246)
!10261 = !DILocalVariable(name: "ambiguous", scope: !10246, file: !872, line: 90, type: !103)
!10262 = !DILocation(line: 90, column: 8, scope: !10246)
!10263 = !DILocation(line: 92, column: 20, scope: !10246)
!10264 = !DILocation(line: 92, column: 12, scope: !10246)
!10265 = !DILocation(line: 92, column: 10, scope: !10246)
!10266 = !DILocation(line: 95, column: 10, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10246, file: !872, line: 95, column: 3)
!10268 = !DILocation(line: 95, column: 8, scope: !10267)
!10269 = !DILocation(line: 95, column: 15, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10267, file: !872, line: 95, column: 3)
!10271 = !DILocation(line: 95, column: 23, scope: !10270)
!10272 = !DILocation(line: 95, column: 3, scope: !10267)
!10273 = !DILocation(line: 97, column: 21, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10275, file: !872, line: 97, column: 11)
!10275 = distinct !DILexicalBlock(scope: !10270, file: !872, line: 96, column: 5)
!10276 = !DILocation(line: 97, column: 29, scope: !10274)
!10277 = !DILocation(line: 97, column: 33, scope: !10274)
!10278 = !DILocation(line: 97, column: 38, scope: !10274)
!10279 = !DILocation(line: 97, column: 12, scope: !10274)
!10280 = !DILocation(line: 97, column: 11, scope: !10275)
!10281 = !DILocation(line: 99, column: 23, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !872, line: 99, column: 15)
!10283 = distinct !DILexicalBlock(scope: !10274, file: !872, line: 98, column: 9)
!10284 = !DILocation(line: 99, column: 31, scope: !10282)
!10285 = !DILocation(line: 99, column: 15, scope: !10282)
!10286 = !DILocation(line: 99, column: 38, scope: !10282)
!10287 = !DILocation(line: 99, column: 35, scope: !10282)
!10288 = !DILocation(line: 99, column: 15, scope: !10283)
!10289 = !DILocation(line: 101, column: 20, scope: !10282)
!10290 = !DILocation(line: 101, column: 13, scope: !10282)
!10291 = !DILocation(line: 102, column: 20, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10282, file: !872, line: 102, column: 20)
!10293 = !DILocation(line: 102, column: 29, scope: !10292)
!10294 = !DILocation(line: 102, column: 20, scope: !10282)
!10295 = !DILocation(line: 104, column: 24, scope: !10292)
!10296 = !DILocation(line: 104, column: 22, scope: !10292)
!10297 = !DILocation(line: 104, column: 13, scope: !10292)
!10298 = !DILocation(line: 108, column: 19, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10300, file: !872, line: 108, column: 19)
!10300 = distinct !DILexicalBlock(scope: !10292, file: !872, line: 106, column: 13)
!10301 = !DILocation(line: 108, column: 27, scope: !10299)
!10302 = !DILocation(line: 109, column: 19, scope: !10299)
!10303 = !DILocation(line: 109, column: 30, scope: !10299)
!10304 = !DILocation(line: 109, column: 40, scope: !10299)
!10305 = !DILocation(line: 109, column: 50, scope: !10299)
!10306 = !DILocation(line: 109, column: 48, scope: !10299)
!10307 = !DILocation(line: 109, column: 38, scope: !10299)
!10308 = !DILocation(line: 110, column: 30, scope: !10299)
!10309 = !DILocation(line: 110, column: 40, scope: !10299)
!10310 = !DILocation(line: 110, column: 50, scope: !10299)
!10311 = !DILocation(line: 110, column: 48, scope: !10299)
!10312 = !DILocation(line: 110, column: 38, scope: !10299)
!10313 = !DILocation(line: 110, column: 53, scope: !10299)
!10314 = !DILocation(line: 109, column: 22, scope: !10299)
!10315 = !DILocation(line: 108, column: 19, scope: !10300)
!10316 = !DILocation(line: 114, column: 29, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10299, file: !872, line: 111, column: 17)
!10318 = !DILocation(line: 115, column: 17, scope: !10317)
!10319 = !DILocation(line: 117, column: 9, scope: !10283)
!10320 = !DILocation(line: 118, column: 5, scope: !10275)
!10321 = !DILocation(line: 95, column: 28, scope: !10270)
!10322 = !DILocation(line: 95, column: 3, scope: !10270)
!10323 = distinct !{!10323, !10272, !10324}
!10324 = !DILocation(line: 118, column: 5, scope: !10267)
!10325 = !DILocation(line: 119, column: 7, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10246, file: !872, line: 119, column: 7)
!10327 = !DILocation(line: 119, column: 7, scope: !10246)
!10328 = !DILocation(line: 120, column: 5, scope: !10326)
!10329 = !DILocation(line: 122, column: 12, scope: !10326)
!10330 = !DILocation(line: 122, column: 5, scope: !10326)
!10331 = !DILocation(line: 123, column: 1, scope: !10246)
!10332 = distinct !DISubprogram(name: "argmatch_invalid", scope: !872, file: !872, line: 131, type: !829, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !822, retainedNodes: !313)
!10333 = !DILocalVariable(name: "context", arg: 1, scope: !10332, file: !872, line: 131, type: !88)
!10334 = !DILocation(line: 131, column: 31, scope: !10332)
!10335 = !DILocalVariable(name: "value", arg: 2, scope: !10332, file: !872, line: 131, type: !88)
!10336 = !DILocation(line: 131, column: 52, scope: !10332)
!10337 = !DILocalVariable(name: "problem", arg: 3, scope: !10332, file: !872, line: 131, type: !827)
!10338 = !DILocation(line: 131, column: 69, scope: !10332)
!10339 = !DILocalVariable(name: "format", scope: !10332, file: !872, line: 133, type: !88)
!10340 = !DILocation(line: 133, column: 15, scope: !10332)
!10341 = !DILocation(line: 133, column: 25, scope: !10332)
!10342 = !DILocation(line: 133, column: 33, scope: !10332)
!10343 = !DILocation(line: 134, column: 27, scope: !10332)
!10344 = !DILocation(line: 135, column: 27, scope: !10332)
!10345 = !DILocation(line: 137, column: 16, scope: !10332)
!10346 = !DILocation(line: 137, column: 69, scope: !10332)
!10347 = !DILocation(line: 137, column: 24, scope: !10332)
!10348 = !DILocation(line: 138, column: 22, scope: !10332)
!10349 = !DILocation(line: 138, column: 10, scope: !10332)
!10350 = !DILocation(line: 137, column: 3, scope: !10332)
!10351 = !DILocation(line: 139, column: 1, scope: !10332)
!10352 = distinct !DISubprogram(name: "argmatch_valid", scope: !872, file: !872, line: 146, type: !831, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !822, retainedNodes: !313)
!10353 = !DILocalVariable(name: "arglist", arg: 1, scope: !10352, file: !872, line: 146, type: !828)
!10354 = !DILocation(line: 146, column: 36, scope: !10352)
!10355 = !DILocalVariable(name: "vallist", arg: 2, scope: !10352, file: !872, line: 147, type: !88)
!10356 = !DILocation(line: 147, column: 29, scope: !10352)
!10357 = !DILocalVariable(name: "valsize", arg: 3, scope: !10352, file: !872, line: 147, type: !55)
!10358 = !DILocation(line: 147, column: 45, scope: !10352)
!10359 = !DILocalVariable(name: "i", scope: !10352, file: !872, line: 149, type: !55)
!10360 = !DILocation(line: 149, column: 10, scope: !10352)
!10361 = !DILocalVariable(name: "last_val", scope: !10352, file: !872, line: 150, type: !88)
!10362 = !DILocation(line: 150, column: 15, scope: !10352)
!10363 = !DILocation(line: 154, column: 3, scope: !10352)
!10364 = !DILocation(line: 155, column: 10, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10352, file: !872, line: 155, column: 3)
!10366 = !DILocation(line: 155, column: 8, scope: !10365)
!10367 = !DILocation(line: 155, column: 15, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10365, file: !872, line: 155, column: 3)
!10369 = !DILocation(line: 155, column: 23, scope: !10368)
!10370 = !DILocation(line: 155, column: 3, scope: !10365)
!10371 = !DILocation(line: 156, column: 10, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10368, file: !872, line: 156, column: 9)
!10373 = !DILocation(line: 156, column: 12, scope: !10372)
!10374 = !DILocation(line: 157, column: 9, scope: !10372)
!10375 = !DILocation(line: 157, column: 20, scope: !10372)
!10376 = !DILocation(line: 157, column: 30, scope: !10372)
!10377 = !DILocation(line: 157, column: 40, scope: !10372)
!10378 = !DILocation(line: 157, column: 50, scope: !10372)
!10379 = !DILocation(line: 157, column: 48, scope: !10372)
!10380 = !DILocation(line: 157, column: 38, scope: !10372)
!10381 = !DILocation(line: 157, column: 53, scope: !10372)
!10382 = !DILocation(line: 157, column: 12, scope: !10372)
!10383 = !DILocation(line: 156, column: 9, scope: !10368)
!10384 = !DILocation(line: 159, column: 18, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10372, file: !872, line: 158, column: 7)
!10386 = !DILocation(line: 159, column: 45, scope: !10385)
!10387 = !DILocation(line: 159, column: 53, scope: !10385)
!10388 = !DILocation(line: 159, column: 38, scope: !10385)
!10389 = !DILocation(line: 159, column: 9, scope: !10385)
!10390 = !DILocation(line: 160, column: 20, scope: !10385)
!10391 = !DILocation(line: 160, column: 30, scope: !10385)
!10392 = !DILocation(line: 160, column: 40, scope: !10385)
!10393 = !DILocation(line: 160, column: 38, scope: !10385)
!10394 = !DILocation(line: 160, column: 28, scope: !10385)
!10395 = !DILocation(line: 160, column: 18, scope: !10385)
!10396 = !DILocation(line: 161, column: 7, scope: !10385)
!10397 = !DILocation(line: 164, column: 18, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10372, file: !872, line: 163, column: 7)
!10399 = !DILocation(line: 164, column: 41, scope: !10398)
!10400 = !DILocation(line: 164, column: 49, scope: !10398)
!10401 = !DILocation(line: 164, column: 34, scope: !10398)
!10402 = !DILocation(line: 164, column: 9, scope: !10398)
!10403 = !DILocation(line: 157, column: 60, scope: !10372)
!10404 = !DILocation(line: 155, column: 28, scope: !10368)
!10405 = !DILocation(line: 155, column: 3, scope: !10368)
!10406 = distinct !{!10406, !10370, !10407}
!10407 = !DILocation(line: 165, column: 7, scope: !10365)
!10408 = !DILocation(line: 166, column: 3, scope: !10352)
!10409 = !DILocation(line: 167, column: 1, scope: !10352)
!10410 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !872, file: !872, line: 176, type: !867, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !822, retainedNodes: !313)
!10411 = !DILocalVariable(name: "context", arg: 1, scope: !10410, file: !872, line: 176, type: !88)
!10412 = !DILocation(line: 176, column: 35, scope: !10410)
!10413 = !DILocalVariable(name: "arg", arg: 2, scope: !10410, file: !872, line: 177, type: !88)
!10414 = !DILocation(line: 177, column: 35, scope: !10410)
!10415 = !DILocalVariable(name: "arglist", arg: 3, scope: !10410, file: !872, line: 177, type: !828)
!10416 = !DILocation(line: 177, column: 59, scope: !10410)
!10417 = !DILocalVariable(name: "vallist", arg: 4, scope: !10410, file: !872, line: 178, type: !88)
!10418 = !DILocation(line: 178, column: 35, scope: !10410)
!10419 = !DILocalVariable(name: "valsize", arg: 5, scope: !10410, file: !872, line: 178, type: !55)
!10420 = !DILocation(line: 178, column: 51, scope: !10410)
!10421 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !10410, file: !872, line: 179, type: !273)
!10422 = !DILocation(line: 179, column: 40, scope: !10410)
!10423 = !DILocalVariable(name: "res", scope: !10410, file: !872, line: 181, type: !827)
!10424 = !DILocation(line: 181, column: 13, scope: !10410)
!10425 = !DILocation(line: 181, column: 29, scope: !10410)
!10426 = !DILocation(line: 181, column: 34, scope: !10410)
!10427 = !DILocation(line: 181, column: 43, scope: !10410)
!10428 = !DILocation(line: 181, column: 52, scope: !10410)
!10429 = !DILocation(line: 181, column: 19, scope: !10410)
!10430 = !DILocation(line: 182, column: 7, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10410, file: !872, line: 182, column: 7)
!10432 = !DILocation(line: 182, column: 11, scope: !10431)
!10433 = !DILocation(line: 182, column: 7, scope: !10410)
!10434 = !DILocation(line: 184, column: 12, scope: !10431)
!10435 = !DILocation(line: 184, column: 5, scope: !10431)
!10436 = !DILocation(line: 187, column: 21, scope: !10410)
!10437 = !DILocation(line: 187, column: 30, scope: !10410)
!10438 = !DILocation(line: 187, column: 35, scope: !10410)
!10439 = !DILocation(line: 187, column: 3, scope: !10410)
!10440 = !DILocation(line: 188, column: 19, scope: !10410)
!10441 = !DILocation(line: 188, column: 28, scope: !10410)
!10442 = !DILocation(line: 188, column: 37, scope: !10410)
!10443 = !DILocation(line: 188, column: 3, scope: !10410)
!10444 = !DILocation(line: 189, column: 5, scope: !10410)
!10445 = !DILocation(line: 189, column: 3, scope: !10410)
!10446 = !DILocation(line: 191, column: 3, scope: !10410)
!10447 = !DILocation(line: 192, column: 1, scope: !10410)
!10448 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !872, file: !872, line: 197, type: !869, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !822, retainedNodes: !313)
!10449 = !DILocalVariable(name: "value", arg: 1, scope: !10448, file: !872, line: 197, type: !88)
!10450 = !DILocation(line: 197, column: 35, scope: !10448)
!10451 = !DILocalVariable(name: "arglist", arg: 2, scope: !10448, file: !872, line: 198, type: !828)
!10452 = !DILocation(line: 198, column: 42, scope: !10448)
!10453 = !DILocalVariable(name: "vallist", arg: 3, scope: !10448, file: !872, line: 199, type: !88)
!10454 = !DILocation(line: 199, column: 35, scope: !10448)
!10455 = !DILocalVariable(name: "valsize", arg: 4, scope: !10448, file: !872, line: 199, type: !55)
!10456 = !DILocation(line: 199, column: 51, scope: !10448)
!10457 = !DILocalVariable(name: "i", scope: !10448, file: !872, line: 201, type: !55)
!10458 = !DILocation(line: 201, column: 10, scope: !10448)
!10459 = !DILocation(line: 203, column: 10, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10448, file: !872, line: 203, column: 3)
!10461 = !DILocation(line: 203, column: 8, scope: !10460)
!10462 = !DILocation(line: 203, column: 15, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10460, file: !872, line: 203, column: 3)
!10464 = !DILocation(line: 203, column: 23, scope: !10463)
!10465 = !DILocation(line: 203, column: 3, scope: !10460)
!10466 = !DILocation(line: 204, column: 18, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10463, file: !872, line: 204, column: 9)
!10468 = !DILocation(line: 204, column: 25, scope: !10467)
!10469 = !DILocation(line: 204, column: 35, scope: !10467)
!10470 = !DILocation(line: 204, column: 45, scope: !10467)
!10471 = !DILocation(line: 204, column: 43, scope: !10467)
!10472 = !DILocation(line: 204, column: 33, scope: !10467)
!10473 = !DILocation(line: 204, column: 48, scope: !10467)
!10474 = !DILocation(line: 204, column: 10, scope: !10467)
!10475 = !DILocation(line: 204, column: 9, scope: !10463)
!10476 = !DILocation(line: 205, column: 14, scope: !10467)
!10477 = !DILocation(line: 205, column: 22, scope: !10467)
!10478 = !DILocation(line: 205, column: 7, scope: !10467)
!10479 = !DILocation(line: 204, column: 55, scope: !10467)
!10480 = !DILocation(line: 203, column: 28, scope: !10463)
!10481 = !DILocation(line: 203, column: 3, scope: !10463)
!10482 = distinct !{!10482, !10465, !10483}
!10483 = !DILocation(line: 205, column: 23, scope: !10460)
!10484 = !DILocation(line: 206, column: 3, scope: !10448)
!10485 = !DILocation(line: 207, column: 1, scope: !10448)
!10486 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !917, file: !917, line: 51, type: !306, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !875, retainedNodes: !313)
!10487 = !DILocalVariable(name: "file", arg: 1, scope: !10486, file: !917, line: 51, type: !88)
!10488 = !DILocation(line: 51, column: 41, scope: !10486)
!10489 = !DILocation(line: 53, column: 15, scope: !10486)
!10490 = !DILocation(line: 53, column: 13, scope: !10486)
!10491 = !DILocation(line: 54, column: 1, scope: !10486)
!10492 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !917, file: !917, line: 88, type: !878, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !875, retainedNodes: !313)
!10493 = !DILocalVariable(name: "ignore", arg: 1, scope: !10492, file: !917, line: 88, type: !103)
!10494 = !DILocation(line: 88, column: 37, scope: !10492)
!10495 = !DILocation(line: 90, column: 18, scope: !10492)
!10496 = !DILocation(line: 90, column: 16, scope: !10492)
!10497 = !DILocation(line: 91, column: 1, scope: !10492)
!10498 = distinct !DISubprogram(name: "close_stdout", scope: !917, file: !917, line: 117, type: !168, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !875, retainedNodes: !313)
!10499 = !DILocation(line: 119, column: 21, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10498, file: !917, line: 119, column: 7)
!10501 = !DILocation(line: 119, column: 7, scope: !10500)
!10502 = !DILocation(line: 119, column: 29, scope: !10500)
!10503 = !DILocation(line: 120, column: 7, scope: !10500)
!10504 = !DILocation(line: 120, column: 12, scope: !10500)
!10505 = !DILocation(line: 120, column: 25, scope: !10500)
!10506 = !DILocation(line: 120, column: 28, scope: !10500)
!10507 = !DILocation(line: 120, column: 34, scope: !10500)
!10508 = !DILocation(line: 119, column: 7, scope: !10498)
!10509 = !DILocalVariable(name: "write_error", scope: !10510, file: !917, line: 122, type: !88)
!10510 = distinct !DILexicalBlock(scope: !10500, file: !917, line: 121, column: 5)
!10511 = !DILocation(line: 122, column: 19, scope: !10510)
!10512 = !DILocation(line: 122, column: 33, scope: !10510)
!10513 = !DILocation(line: 123, column: 11, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10510, file: !917, line: 123, column: 11)
!10515 = !DILocation(line: 123, column: 11, scope: !10510)
!10516 = !DILocation(line: 124, column: 19, scope: !10514)
!10517 = !DILocation(line: 124, column: 52, scope: !10514)
!10518 = !DILocation(line: 124, column: 36, scope: !10514)
!10519 = !DILocation(line: 125, column: 16, scope: !10514)
!10520 = !DILocation(line: 124, column: 9, scope: !10514)
!10521 = !DILocation(line: 127, column: 19, scope: !10514)
!10522 = !DILocation(line: 127, column: 32, scope: !10514)
!10523 = !DILocation(line: 127, column: 9, scope: !10514)
!10524 = !DILocation(line: 129, column: 14, scope: !10510)
!10525 = !DILocation(line: 129, column: 7, scope: !10510)
!10526 = !DILocation(line: 134, column: 42, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10498, file: !917, line: 134, column: 7)
!10528 = !DILocation(line: 134, column: 28, scope: !10527)
!10529 = !DILocation(line: 134, column: 50, scope: !10527)
!10530 = !DILocation(line: 134, column: 7, scope: !10498)
!10531 = !DILocation(line: 135, column: 12, scope: !10527)
!10532 = !DILocation(line: 135, column: 5, scope: !10527)
!10533 = !DILocation(line: 136, column: 1, scope: !10498)
!10534 = distinct !DISubprogram(name: "md5_init_ctx", scope: !998, file: !998, line: 76, type: !924, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!10535 = !DILocalVariable(name: "ctx", arg: 1, scope: !10534, file: !998, line: 76, type: !926)
!10536 = !DILocation(line: 76, column: 31, scope: !10534)
!10537 = !DILocation(line: 78, column: 3, scope: !10534)
!10538 = !DILocation(line: 78, column: 8, scope: !10534)
!10539 = !DILocation(line: 78, column: 10, scope: !10534)
!10540 = !{!10541, !2274, i64 0}
!10541 = !{!"md5_ctx", !2274, i64 0, !2274, i64 4, !2274, i64 8, !2274, i64 12, !2275, i64 16, !2274, i64 24, !2275, i64 28}
!10542 = !DILocation(line: 79, column: 3, scope: !10534)
!10543 = !DILocation(line: 79, column: 8, scope: !10534)
!10544 = !DILocation(line: 79, column: 10, scope: !10534)
!10545 = !{!10541, !2274, i64 4}
!10546 = !DILocation(line: 80, column: 3, scope: !10534)
!10547 = !DILocation(line: 80, column: 8, scope: !10534)
!10548 = !DILocation(line: 80, column: 10, scope: !10534)
!10549 = !{!10541, !2274, i64 8}
!10550 = !DILocation(line: 81, column: 3, scope: !10534)
!10551 = !DILocation(line: 81, column: 8, scope: !10534)
!10552 = !DILocation(line: 81, column: 10, scope: !10534)
!10553 = !{!10541, !2274, i64 12}
!10554 = !DILocation(line: 83, column: 19, scope: !10534)
!10555 = !DILocation(line: 83, column: 24, scope: !10534)
!10556 = !DILocation(line: 83, column: 33, scope: !10534)
!10557 = !DILocation(line: 83, column: 3, scope: !10534)
!10558 = !DILocation(line: 83, column: 8, scope: !10534)
!10559 = !DILocation(line: 83, column: 17, scope: !10534)
!10560 = !DILocation(line: 84, column: 3, scope: !10534)
!10561 = !DILocation(line: 84, column: 8, scope: !10534)
!10562 = !DILocation(line: 84, column: 15, scope: !10534)
!10563 = !{!10541, !2274, i64 24}
!10564 = !DILocation(line: 85, column: 1, scope: !10534)
!10565 = distinct !DISubprogram(name: "md5_read_ctx", scope: !998, file: !998, line: 99, type: !936, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!10566 = !DILocalVariable(name: "ctx", arg: 1, scope: !10565, file: !998, line: 99, type: !938)
!10567 = !DILocation(line: 99, column: 37, scope: !10565)
!10568 = !DILocalVariable(name: "resbuf", arg: 2, scope: !10565, file: !998, line: 99, type: !53)
!10569 = !DILocation(line: 99, column: 48, scope: !10565)
!10570 = !DILocalVariable(name: "r", scope: !10565, file: !998, line: 101, type: !9)
!10571 = !DILocation(line: 101, column: 9, scope: !10565)
!10572 = !DILocation(line: 101, column: 13, scope: !10565)
!10573 = !DILocation(line: 102, column: 15, scope: !10565)
!10574 = !DILocation(line: 102, column: 17, scope: !10565)
!10575 = !DILocation(line: 102, column: 38, scope: !10565)
!10576 = !DILocation(line: 102, column: 3, scope: !10565)
!10577 = !DILocation(line: 103, column: 15, scope: !10565)
!10578 = !DILocation(line: 103, column: 17, scope: !10565)
!10579 = !DILocation(line: 103, column: 38, scope: !10565)
!10580 = !DILocation(line: 103, column: 3, scope: !10565)
!10581 = !DILocation(line: 104, column: 15, scope: !10565)
!10582 = !DILocation(line: 104, column: 17, scope: !10565)
!10583 = !DILocation(line: 104, column: 38, scope: !10565)
!10584 = !DILocation(line: 104, column: 3, scope: !10565)
!10585 = !DILocation(line: 105, column: 15, scope: !10565)
!10586 = !DILocation(line: 105, column: 17, scope: !10565)
!10587 = !DILocation(line: 105, column: 38, scope: !10565)
!10588 = !DILocation(line: 105, column: 3, scope: !10565)
!10589 = !DILocation(line: 107, column: 10, scope: !10565)
!10590 = !DILocation(line: 107, column: 3, scope: !10565)
!10591 = distinct !DISubprogram(name: "set_uint32", scope: !998, file: !998, line: 91, type: !990, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !920, retainedNodes: !313)
!10592 = !DILocalVariable(name: "cp", arg: 1, scope: !10591, file: !998, line: 91, type: !9)
!10593 = !DILocation(line: 91, column: 19, scope: !10591)
!10594 = !DILocalVariable(name: "v", arg: 2, scope: !10591, file: !998, line: 91, type: !495)
!10595 = !DILocation(line: 91, column: 32, scope: !10591)
!10596 = !DILocation(line: 93, column: 11, scope: !10591)
!10597 = !DILocation(line: 93, column: 3, scope: !10591)
!10598 = !DILocation(line: 94, column: 1, scope: !10591)
!10599 = distinct !DISubprogram(name: "md5_finish_ctx", scope: !998, file: !998, line: 113, type: !940, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!10600 = !DILocalVariable(name: "ctx", arg: 1, scope: !10599, file: !998, line: 113, type: !926)
!10601 = !DILocation(line: 113, column: 33, scope: !10599)
!10602 = !DILocalVariable(name: "resbuf", arg: 2, scope: !10599, file: !998, line: 113, type: !53)
!10603 = !DILocation(line: 113, column: 44, scope: !10599)
!10604 = !DILocalVariable(name: "bytes", scope: !10599, file: !998, line: 116, type: !495)
!10605 = !DILocation(line: 116, column: 12, scope: !10599)
!10606 = !DILocation(line: 116, column: 20, scope: !10599)
!10607 = !DILocation(line: 116, column: 25, scope: !10599)
!10608 = !DILocalVariable(name: "size", scope: !10599, file: !998, line: 117, type: !55)
!10609 = !DILocation(line: 117, column: 10, scope: !10599)
!10610 = !DILocation(line: 117, column: 18, scope: !10599)
!10611 = !DILocation(line: 117, column: 24, scope: !10599)
!10612 = !DILocation(line: 117, column: 17, scope: !10599)
!10613 = !DILocation(line: 120, column: 20, scope: !10599)
!10614 = !DILocation(line: 120, column: 3, scope: !10599)
!10615 = !DILocation(line: 120, column: 8, scope: !10599)
!10616 = !DILocation(line: 120, column: 17, scope: !10599)
!10617 = !DILocation(line: 121, column: 7, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10599, file: !998, line: 121, column: 7)
!10619 = !DILocation(line: 121, column: 12, scope: !10618)
!10620 = !DILocation(line: 121, column: 23, scope: !10618)
!10621 = !DILocation(line: 121, column: 21, scope: !10618)
!10622 = !DILocation(line: 121, column: 7, scope: !10599)
!10623 = !DILocation(line: 122, column: 7, scope: !10618)
!10624 = !DILocation(line: 122, column: 12, scope: !10618)
!10625 = !DILocation(line: 122, column: 5, scope: !10618)
!10626 = !DILocation(line: 125, column: 27, scope: !10599)
!10627 = !DILocation(line: 125, column: 3, scope: !10599)
!10628 = !DILocation(line: 125, column: 8, scope: !10599)
!10629 = !DILocation(line: 125, column: 15, scope: !10599)
!10630 = !DILocation(line: 125, column: 20, scope: !10599)
!10631 = !DILocation(line: 125, column: 25, scope: !10599)
!10632 = !DILocation(line: 126, column: 27, scope: !10599)
!10633 = !DILocation(line: 126, column: 3, scope: !10599)
!10634 = !DILocation(line: 126, column: 8, scope: !10599)
!10635 = !DILocation(line: 126, column: 15, scope: !10599)
!10636 = !DILocation(line: 126, column: 20, scope: !10599)
!10637 = !DILocation(line: 126, column: 25, scope: !10599)
!10638 = !DILocation(line: 128, column: 22, scope: !10599)
!10639 = !DILocation(line: 128, column: 27, scope: !10599)
!10640 = !DILocation(line: 128, column: 12, scope: !10599)
!10641 = !DILocation(line: 128, column: 35, scope: !10599)
!10642 = !DILocation(line: 128, column: 53, scope: !10599)
!10643 = !DILocation(line: 128, column: 58, scope: !10599)
!10644 = !DILocation(line: 128, column: 63, scope: !10599)
!10645 = !DILocation(line: 128, column: 69, scope: !10599)
!10646 = !DILocation(line: 128, column: 67, scope: !10599)
!10647 = !DILocation(line: 128, column: 3, scope: !10599)
!10648 = !DILocation(line: 131, column: 22, scope: !10599)
!10649 = !DILocation(line: 131, column: 27, scope: !10599)
!10650 = !DILocation(line: 131, column: 35, scope: !10599)
!10651 = !DILocation(line: 131, column: 40, scope: !10599)
!10652 = !DILocation(line: 131, column: 45, scope: !10599)
!10653 = !DILocation(line: 131, column: 3, scope: !10599)
!10654 = !DILocation(line: 133, column: 24, scope: !10599)
!10655 = !DILocation(line: 133, column: 29, scope: !10599)
!10656 = !DILocation(line: 133, column: 10, scope: !10599)
!10657 = !DILocation(line: 133, column: 3, scope: !10599)
!10658 = distinct !DISubprogram(name: "md5_process_block", scope: !998, file: !998, line: 325, type: !984, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!10659 = !DILocalVariable(name: "buffer", arg: 1, scope: !10658, file: !998, line: 325, type: !339)
!10660 = !DILocation(line: 325, column: 32, scope: !10658)
!10661 = !DILocalVariable(name: "len", arg: 2, scope: !10658, file: !998, line: 325, type: !55)
!10662 = !DILocation(line: 325, column: 47, scope: !10658)
!10663 = !DILocalVariable(name: "ctx", arg: 3, scope: !10658, file: !998, line: 325, type: !926)
!10664 = !DILocation(line: 325, column: 68, scope: !10658)
!10665 = !DILocalVariable(name: "correct_words", scope: !10658, file: !998, line: 327, type: !986)
!10666 = !DILocation(line: 327, column: 12, scope: !10658)
!10667 = !DILocalVariable(name: "words", scope: !10658, file: !998, line: 328, type: !987)
!10668 = !DILocation(line: 328, column: 19, scope: !10658)
!10669 = !DILocation(line: 328, column: 27, scope: !10658)
!10670 = !DILocalVariable(name: "nwords", scope: !10658, file: !998, line: 329, type: !55)
!10671 = !DILocation(line: 329, column: 10, scope: !10658)
!10672 = !DILocation(line: 329, column: 19, scope: !10658)
!10673 = !DILocation(line: 329, column: 23, scope: !10658)
!10674 = !DILocalVariable(name: "endp", scope: !10658, file: !998, line: 330, type: !987)
!10675 = !DILocation(line: 330, column: 19, scope: !10658)
!10676 = !DILocation(line: 330, column: 26, scope: !10658)
!10677 = !DILocation(line: 330, column: 34, scope: !10658)
!10678 = !DILocation(line: 330, column: 32, scope: !10658)
!10679 = !DILocalVariable(name: "A", scope: !10658, file: !998, line: 331, type: !495)
!10680 = !DILocation(line: 331, column: 12, scope: !10658)
!10681 = !DILocation(line: 331, column: 16, scope: !10658)
!10682 = !DILocation(line: 331, column: 21, scope: !10658)
!10683 = !DILocalVariable(name: "B", scope: !10658, file: !998, line: 332, type: !495)
!10684 = !DILocation(line: 332, column: 12, scope: !10658)
!10685 = !DILocation(line: 332, column: 16, scope: !10658)
!10686 = !DILocation(line: 332, column: 21, scope: !10658)
!10687 = !DILocalVariable(name: "C", scope: !10658, file: !998, line: 333, type: !495)
!10688 = !DILocation(line: 333, column: 12, scope: !10658)
!10689 = !DILocation(line: 333, column: 16, scope: !10658)
!10690 = !DILocation(line: 333, column: 21, scope: !10658)
!10691 = !DILocalVariable(name: "D", scope: !10658, file: !998, line: 334, type: !495)
!10692 = !DILocation(line: 334, column: 12, scope: !10658)
!10693 = !DILocation(line: 334, column: 16, scope: !10658)
!10694 = !DILocation(line: 334, column: 21, scope: !10658)
!10695 = !DILocalVariable(name: "lolen", scope: !10658, file: !998, line: 335, type: !495)
!10696 = !DILocation(line: 335, column: 12, scope: !10658)
!10697 = !DILocation(line: 335, column: 20, scope: !10658)
!10698 = !DILocation(line: 340, column: 20, scope: !10658)
!10699 = !DILocation(line: 340, column: 3, scope: !10658)
!10700 = !DILocation(line: 340, column: 8, scope: !10658)
!10701 = !DILocation(line: 340, column: 17, scope: !10658)
!10702 = !DILocation(line: 341, column: 21, scope: !10658)
!10703 = !DILocation(line: 341, column: 25, scope: !10658)
!10704 = !DILocation(line: 341, column: 31, scope: !10658)
!10705 = !DILocation(line: 341, column: 40, scope: !10658)
!10706 = !DILocation(line: 341, column: 45, scope: !10658)
!10707 = !DILocation(line: 341, column: 56, scope: !10658)
!10708 = !DILocation(line: 341, column: 54, scope: !10658)
!10709 = !DILocation(line: 341, column: 39, scope: !10658)
!10710 = !DILocation(line: 341, column: 37, scope: !10658)
!10711 = !DILocation(line: 341, column: 3, scope: !10658)
!10712 = !DILocation(line: 341, column: 8, scope: !10658)
!10713 = !DILocation(line: 341, column: 17, scope: !10658)
!10714 = !DILocation(line: 345, column: 3, scope: !10658)
!10715 = !DILocation(line: 345, column: 10, scope: !10658)
!10716 = !DILocation(line: 345, column: 18, scope: !10658)
!10717 = !DILocation(line: 345, column: 16, scope: !10658)
!10718 = !DILocalVariable(name: "cwp", scope: !10719, file: !998, line: 347, type: !989)
!10719 = distinct !DILexicalBlock(scope: !10658, file: !998, line: 346, column: 5)
!10720 = !DILocation(line: 347, column: 17, scope: !10719)
!10721 = !DILocation(line: 347, column: 23, scope: !10719)
!10722 = !DILocalVariable(name: "A_save", scope: !10719, file: !998, line: 348, type: !495)
!10723 = !DILocation(line: 348, column: 16, scope: !10719)
!10724 = !DILocation(line: 348, column: 25, scope: !10719)
!10725 = !DILocalVariable(name: "B_save", scope: !10719, file: !998, line: 349, type: !495)
!10726 = !DILocation(line: 349, column: 16, scope: !10719)
!10727 = !DILocation(line: 349, column: 25, scope: !10719)
!10728 = !DILocalVariable(name: "C_save", scope: !10719, file: !998, line: 350, type: !495)
!10729 = !DILocation(line: 350, column: 16, scope: !10719)
!10730 = !DILocation(line: 350, column: 25, scope: !10719)
!10731 = !DILocalVariable(name: "D_save", scope: !10719, file: !998, line: 351, type: !495)
!10732 = !DILocation(line: 351, column: 16, scope: !10719)
!10733 = !DILocation(line: 351, column: 25, scope: !10719)
!10734 = !DILocation(line: 385, column: 7, scope: !10719)
!10735 = !DILocation(line: 385, column: 7, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 385, column: 7)
!10737 = !DILocation(line: 386, column: 7, scope: !10719)
!10738 = !DILocation(line: 386, column: 7, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 386, column: 7)
!10740 = !DILocation(line: 387, column: 7, scope: !10719)
!10741 = !DILocation(line: 387, column: 7, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 387, column: 7)
!10743 = !DILocation(line: 388, column: 7, scope: !10719)
!10744 = !DILocation(line: 388, column: 7, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 388, column: 7)
!10746 = !DILocation(line: 389, column: 7, scope: !10719)
!10747 = !DILocation(line: 389, column: 7, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 389, column: 7)
!10749 = !DILocation(line: 390, column: 7, scope: !10719)
!10750 = !DILocation(line: 390, column: 7, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 390, column: 7)
!10752 = !DILocation(line: 391, column: 7, scope: !10719)
!10753 = !DILocation(line: 391, column: 7, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 391, column: 7)
!10755 = !DILocation(line: 392, column: 7, scope: !10719)
!10756 = !DILocation(line: 392, column: 7, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 392, column: 7)
!10758 = !DILocation(line: 393, column: 7, scope: !10719)
!10759 = !DILocation(line: 393, column: 7, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 393, column: 7)
!10761 = !DILocation(line: 394, column: 7, scope: !10719)
!10762 = !DILocation(line: 394, column: 7, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 394, column: 7)
!10764 = !DILocation(line: 395, column: 7, scope: !10719)
!10765 = !DILocation(line: 395, column: 7, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 395, column: 7)
!10767 = !DILocation(line: 396, column: 7, scope: !10719)
!10768 = !DILocation(line: 396, column: 7, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 396, column: 7)
!10770 = !DILocation(line: 397, column: 7, scope: !10719)
!10771 = !DILocation(line: 397, column: 7, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 397, column: 7)
!10773 = !DILocation(line: 398, column: 7, scope: !10719)
!10774 = !DILocation(line: 398, column: 7, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 398, column: 7)
!10776 = !DILocation(line: 399, column: 7, scope: !10719)
!10777 = !DILocation(line: 399, column: 7, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 399, column: 7)
!10779 = !DILocation(line: 400, column: 7, scope: !10719)
!10780 = !DILocation(line: 400, column: 7, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 400, column: 7)
!10782 = !DILocation(line: 416, column: 7, scope: !10719)
!10783 = !DILocation(line: 416, column: 7, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 416, column: 7)
!10785 = !DILocation(line: 417, column: 7, scope: !10719)
!10786 = !DILocation(line: 417, column: 7, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 417, column: 7)
!10788 = !DILocation(line: 418, column: 7, scope: !10719)
!10789 = !DILocation(line: 418, column: 7, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 418, column: 7)
!10791 = !DILocation(line: 419, column: 7, scope: !10719)
!10792 = !DILocation(line: 419, column: 7, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 419, column: 7)
!10794 = !DILocation(line: 420, column: 7, scope: !10719)
!10795 = !DILocation(line: 420, column: 7, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 420, column: 7)
!10797 = !DILocation(line: 421, column: 7, scope: !10719)
!10798 = !DILocation(line: 421, column: 7, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 421, column: 7)
!10800 = !DILocation(line: 422, column: 7, scope: !10719)
!10801 = !DILocation(line: 422, column: 7, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 422, column: 7)
!10803 = !DILocation(line: 423, column: 7, scope: !10719)
!10804 = !DILocation(line: 423, column: 7, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 423, column: 7)
!10806 = !DILocation(line: 424, column: 7, scope: !10719)
!10807 = !DILocation(line: 424, column: 7, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 424, column: 7)
!10809 = !DILocation(line: 425, column: 7, scope: !10719)
!10810 = !DILocation(line: 425, column: 7, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 425, column: 7)
!10812 = !DILocation(line: 426, column: 7, scope: !10719)
!10813 = !DILocation(line: 426, column: 7, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 426, column: 7)
!10815 = !DILocation(line: 427, column: 7, scope: !10719)
!10816 = !DILocation(line: 427, column: 7, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 427, column: 7)
!10818 = !DILocation(line: 428, column: 7, scope: !10719)
!10819 = !DILocation(line: 428, column: 7, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 428, column: 7)
!10821 = !DILocation(line: 429, column: 7, scope: !10719)
!10822 = !DILocation(line: 429, column: 7, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 429, column: 7)
!10824 = !DILocation(line: 430, column: 7, scope: !10719)
!10825 = !DILocation(line: 430, column: 7, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 430, column: 7)
!10827 = !DILocation(line: 431, column: 7, scope: !10719)
!10828 = !DILocation(line: 431, column: 7, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 431, column: 7)
!10830 = !DILocation(line: 434, column: 7, scope: !10719)
!10831 = !DILocation(line: 434, column: 7, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 434, column: 7)
!10833 = !DILocation(line: 435, column: 7, scope: !10719)
!10834 = !DILocation(line: 435, column: 7, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 435, column: 7)
!10836 = !DILocation(line: 436, column: 7, scope: !10719)
!10837 = !DILocation(line: 436, column: 7, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 436, column: 7)
!10839 = !DILocation(line: 437, column: 7, scope: !10719)
!10840 = !DILocation(line: 437, column: 7, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 437, column: 7)
!10842 = !DILocation(line: 438, column: 7, scope: !10719)
!10843 = !DILocation(line: 438, column: 7, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 438, column: 7)
!10845 = !DILocation(line: 439, column: 7, scope: !10719)
!10846 = !DILocation(line: 439, column: 7, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 439, column: 7)
!10848 = !DILocation(line: 440, column: 7, scope: !10719)
!10849 = !DILocation(line: 440, column: 7, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 440, column: 7)
!10851 = !DILocation(line: 441, column: 7, scope: !10719)
!10852 = !DILocation(line: 441, column: 7, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 441, column: 7)
!10854 = !DILocation(line: 442, column: 7, scope: !10719)
!10855 = !DILocation(line: 442, column: 7, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 442, column: 7)
!10857 = !DILocation(line: 443, column: 7, scope: !10719)
!10858 = !DILocation(line: 443, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 443, column: 7)
!10860 = !DILocation(line: 444, column: 7, scope: !10719)
!10861 = !DILocation(line: 444, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 444, column: 7)
!10863 = !DILocation(line: 445, column: 7, scope: !10719)
!10864 = !DILocation(line: 445, column: 7, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 445, column: 7)
!10866 = !DILocation(line: 446, column: 7, scope: !10719)
!10867 = !DILocation(line: 446, column: 7, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 446, column: 7)
!10869 = !DILocation(line: 447, column: 7, scope: !10719)
!10870 = !DILocation(line: 447, column: 7, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 447, column: 7)
!10872 = !DILocation(line: 448, column: 7, scope: !10719)
!10873 = !DILocation(line: 448, column: 7, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 448, column: 7)
!10875 = !DILocation(line: 449, column: 7, scope: !10719)
!10876 = !DILocation(line: 449, column: 7, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 449, column: 7)
!10878 = !DILocation(line: 452, column: 7, scope: !10719)
!10879 = !DILocation(line: 452, column: 7, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 452, column: 7)
!10881 = !DILocation(line: 453, column: 7, scope: !10719)
!10882 = !DILocation(line: 453, column: 7, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 453, column: 7)
!10884 = !DILocation(line: 454, column: 7, scope: !10719)
!10885 = !DILocation(line: 454, column: 7, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 454, column: 7)
!10887 = !DILocation(line: 455, column: 7, scope: !10719)
!10888 = !DILocation(line: 455, column: 7, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 455, column: 7)
!10890 = !DILocation(line: 456, column: 7, scope: !10719)
!10891 = !DILocation(line: 456, column: 7, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 456, column: 7)
!10893 = !DILocation(line: 457, column: 7, scope: !10719)
!10894 = !DILocation(line: 457, column: 7, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 457, column: 7)
!10896 = !DILocation(line: 458, column: 7, scope: !10719)
!10897 = !DILocation(line: 458, column: 7, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 458, column: 7)
!10899 = !DILocation(line: 459, column: 7, scope: !10719)
!10900 = !DILocation(line: 459, column: 7, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 459, column: 7)
!10902 = !DILocation(line: 460, column: 7, scope: !10719)
!10903 = !DILocation(line: 460, column: 7, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 460, column: 7)
!10905 = !DILocation(line: 461, column: 7, scope: !10719)
!10906 = !DILocation(line: 461, column: 7, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 461, column: 7)
!10908 = !DILocation(line: 462, column: 7, scope: !10719)
!10909 = !DILocation(line: 462, column: 7, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 462, column: 7)
!10911 = !DILocation(line: 463, column: 7, scope: !10719)
!10912 = !DILocation(line: 463, column: 7, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 463, column: 7)
!10914 = !DILocation(line: 464, column: 7, scope: !10719)
!10915 = !DILocation(line: 464, column: 7, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 464, column: 7)
!10917 = !DILocation(line: 465, column: 7, scope: !10719)
!10918 = !DILocation(line: 465, column: 7, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 465, column: 7)
!10920 = !DILocation(line: 466, column: 7, scope: !10719)
!10921 = !DILocation(line: 466, column: 7, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 466, column: 7)
!10923 = !DILocation(line: 467, column: 7, scope: !10719)
!10924 = !DILocation(line: 467, column: 7, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10719, file: !998, line: 467, column: 7)
!10926 = !DILocation(line: 470, column: 12, scope: !10719)
!10927 = !DILocation(line: 470, column: 9, scope: !10719)
!10928 = !DILocation(line: 471, column: 12, scope: !10719)
!10929 = !DILocation(line: 471, column: 9, scope: !10719)
!10930 = !DILocation(line: 472, column: 12, scope: !10719)
!10931 = !DILocation(line: 472, column: 9, scope: !10719)
!10932 = !DILocation(line: 473, column: 12, scope: !10719)
!10933 = !DILocation(line: 473, column: 9, scope: !10719)
!10934 = distinct !{!10934, !10714, !10935}
!10935 = !DILocation(line: 474, column: 5, scope: !10658)
!10936 = !DILocation(line: 477, column: 12, scope: !10658)
!10937 = !DILocation(line: 477, column: 3, scope: !10658)
!10938 = !DILocation(line: 477, column: 8, scope: !10658)
!10939 = !DILocation(line: 477, column: 10, scope: !10658)
!10940 = !DILocation(line: 478, column: 12, scope: !10658)
!10941 = !DILocation(line: 478, column: 3, scope: !10658)
!10942 = !DILocation(line: 478, column: 8, scope: !10658)
!10943 = !DILocation(line: 478, column: 10, scope: !10658)
!10944 = !DILocation(line: 479, column: 12, scope: !10658)
!10945 = !DILocation(line: 479, column: 3, scope: !10658)
!10946 = !DILocation(line: 479, column: 8, scope: !10658)
!10947 = !DILocation(line: 479, column: 10, scope: !10658)
!10948 = !DILocation(line: 480, column: 12, scope: !10658)
!10949 = !DILocation(line: 480, column: 3, scope: !10658)
!10950 = !DILocation(line: 480, column: 8, scope: !10658)
!10951 = !DILocation(line: 480, column: 10, scope: !10658)
!10952 = !DILocation(line: 481, column: 1, scope: !10658)
!10953 = distinct !DISubprogram(name: "md5_stream", scope: !998, file: !998, line: 145, type: !946, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!10954 = !DILocalVariable(name: "stream", arg: 1, scope: !10953, file: !998, line: 145, type: !948)
!10955 = !DILocation(line: 145, column: 19, scope: !10953)
!10956 = !DILocalVariable(name: "resblock", arg: 2, scope: !10953, file: !998, line: 145, type: !53)
!10957 = !DILocation(line: 145, column: 33, scope: !10953)
!10958 = !DILocation(line: 147, column: 25, scope: !10953)
!10959 = !DILocation(line: 147, column: 40, scope: !10953)
!10960 = !DILocation(line: 147, column: 11, scope: !10953)
!10961 = !DILocation(line: 147, column: 3, scope: !10953)
!10962 = !DILocation(line: 149, column: 13, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10953, file: !998, line: 148, column: 5)
!10964 = !DILocation(line: 150, column: 16, scope: !10963)
!10965 = !DILocalVariable(name: "buffer", scope: !10953, file: !998, line: 153, type: !9)
!10966 = !DILocation(line: 153, column: 9, scope: !10953)
!10967 = !DILocation(line: 153, column: 18, scope: !10953)
!10968 = !DILocation(line: 154, column: 8, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10953, file: !998, line: 154, column: 7)
!10970 = !DILocation(line: 154, column: 7, scope: !10953)
!10971 = !DILocation(line: 155, column: 5, scope: !10969)
!10972 = !DILocalVariable(name: "ctx", scope: !10953, file: !998, line: 157, type: !927)
!10973 = !DILocation(line: 157, column: 18, scope: !10953)
!10974 = !DILocation(line: 158, column: 3, scope: !10953)
!10975 = !DILocalVariable(name: "sum", scope: !10953, file: !998, line: 159, type: !55)
!10976 = !DILocation(line: 159, column: 10, scope: !10953)
!10977 = !DILocation(line: 162, column: 3, scope: !10953)
!10978 = !DILocalVariable(name: "n", scope: !10979, file: !998, line: 167, type: !55)
!10979 = distinct !DILexicalBlock(scope: !10953, file: !998, line: 163, column: 5)
!10980 = !DILocation(line: 167, column: 14, scope: !10979)
!10981 = !DILocation(line: 168, column: 11, scope: !10979)
!10982 = !DILocation(line: 171, column: 7, scope: !10979)
!10983 = !DILocation(line: 178, column: 15, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !998, line: 178, column: 15)
!10985 = distinct !DILexicalBlock(scope: !10979, file: !998, line: 172, column: 9)
!10986 = !DILocation(line: 178, column: 15, scope: !10985)
!10987 = !DILocation(line: 179, column: 13, scope: !10984)
!10988 = !DILocation(line: 181, column: 15, scope: !10985)
!10989 = !DILocation(line: 181, column: 13, scope: !10985)
!10990 = !DILocation(line: 183, column: 18, scope: !10985)
!10991 = !DILocation(line: 183, column: 15, scope: !10985)
!10992 = !DILocation(line: 185, column: 15, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10985, file: !998, line: 185, column: 15)
!10994 = !DILocation(line: 185, column: 19, scope: !10993)
!10995 = !DILocation(line: 185, column: 15, scope: !10985)
!10996 = !DILocation(line: 186, column: 13, scope: !10993)
!10997 = !DILocation(line: 188, column: 15, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10985, file: !998, line: 188, column: 15)
!10999 = !DILocation(line: 188, column: 17, scope: !10998)
!11000 = !DILocation(line: 188, column: 15, scope: !10985)
!11001 = !DILocation(line: 193, column: 19, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !998, line: 193, column: 19)
!11003 = distinct !DILexicalBlock(scope: !10998, file: !998, line: 189, column: 13)
!11004 = !DILocation(line: 193, column: 19, scope: !11003)
!11005 = !DILocation(line: 195, column: 25, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !998, line: 194, column: 17)
!11007 = !DILocation(line: 195, column: 19, scope: !11006)
!11008 = !DILocation(line: 196, column: 19, scope: !11006)
!11009 = !DILocation(line: 198, column: 15, scope: !11003)
!11010 = distinct !{!11010, !10982, !11011}
!11011 = !DILocation(line: 200, column: 9, scope: !10979)
!11012 = !DILocation(line: 205, column: 26, scope: !10979)
!11013 = !DILocation(line: 205, column: 7, scope: !10979)
!11014 = distinct !{!11014, !10977, !11015}
!11015 = !DILocation(line: 206, column: 5, scope: !10953)
!11016 = !DILabel(scope: !10953, name: "process_partial_block", file: !998, line: 208)
!11017 = !DILocation(line: 208, column: 1, scope: !10953)
!11018 = !DILocation(line: 211, column: 7, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10953, file: !998, line: 211, column: 7)
!11020 = !DILocation(line: 211, column: 11, scope: !11019)
!11021 = !DILocation(line: 211, column: 7, scope: !10953)
!11022 = !DILocation(line: 212, column: 24, scope: !11019)
!11023 = !DILocation(line: 212, column: 32, scope: !11019)
!11024 = !DILocation(line: 212, column: 5, scope: !11019)
!11025 = !DILocation(line: 215, column: 25, scope: !10953)
!11026 = !DILocation(line: 215, column: 3, scope: !10953)
!11027 = !DILocation(line: 216, column: 9, scope: !10953)
!11028 = !DILocation(line: 216, column: 3, scope: !10953)
!11029 = !DILocation(line: 217, column: 3, scope: !10953)
!11030 = !DILocation(line: 218, column: 1, scope: !10953)
!11031 = distinct !DISubprogram(name: "afalg_stream", scope: !11032, file: !11032, line: 103, type: !992, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !920, retainedNodes: !313)
!11032 = !DIFile(filename: "./lib/af_alg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!11033 = !DILocalVariable(name: "stream", arg: 1, scope: !11031, file: !11032, line: 103, type: !948)
!11034 = !DILocation(line: 103, column: 21, scope: !11031)
!11035 = !DILocalVariable(name: "alg", arg: 2, scope: !11031, file: !11032, line: 103, type: !88)
!11036 = !DILocation(line: 103, column: 41, scope: !11031)
!11037 = !DILocalVariable(name: "resblock", arg: 3, scope: !11031, file: !11032, line: 104, type: !53)
!11038 = !DILocation(line: 104, column: 21, scope: !11031)
!11039 = !DILocalVariable(name: "hashlen", arg: 4, scope: !11031, file: !11032, line: 104, type: !994)
!11040 = !DILocation(line: 104, column: 39, scope: !11031)
!11041 = !DILocation(line: 106, column: 3, scope: !11031)
!11042 = distinct !DISubprogram(name: "md5_process_bytes", scope: !998, file: !998, line: 243, type: !984, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!11043 = !DILocalVariable(name: "buffer", arg: 1, scope: !11042, file: !998, line: 243, type: !339)
!11044 = !DILocation(line: 243, column: 32, scope: !11042)
!11045 = !DILocalVariable(name: "len", arg: 2, scope: !11042, file: !998, line: 243, type: !55)
!11046 = !DILocation(line: 243, column: 47, scope: !11042)
!11047 = !DILocalVariable(name: "ctx", arg: 3, scope: !11042, file: !998, line: 243, type: !926)
!11048 = !DILocation(line: 243, column: 68, scope: !11042)
!11049 = !DILocation(line: 247, column: 7, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11042, file: !998, line: 247, column: 7)
!11051 = !DILocation(line: 247, column: 12, scope: !11050)
!11052 = !DILocation(line: 247, column: 19, scope: !11050)
!11053 = !DILocation(line: 247, column: 7, scope: !11042)
!11054 = !DILocalVariable(name: "left_over", scope: !11055, file: !998, line: 249, type: !55)
!11055 = distinct !DILexicalBlock(scope: !11050, file: !998, line: 248, column: 5)
!11056 = !DILocation(line: 249, column: 14, scope: !11055)
!11057 = !DILocation(line: 249, column: 26, scope: !11055)
!11058 = !DILocation(line: 249, column: 31, scope: !11055)
!11059 = !DILocalVariable(name: "add", scope: !11055, file: !998, line: 250, type: !55)
!11060 = !DILocation(line: 250, column: 14, scope: !11055)
!11061 = !DILocation(line: 250, column: 26, scope: !11055)
!11062 = !DILocation(line: 250, column: 24, scope: !11055)
!11063 = !DILocation(line: 250, column: 38, scope: !11055)
!11064 = !DILocation(line: 250, column: 36, scope: !11055)
!11065 = !DILocation(line: 250, column: 20, scope: !11055)
!11066 = !DILocation(line: 250, column: 44, scope: !11055)
!11067 = !DILocation(line: 250, column: 56, scope: !11055)
!11068 = !DILocation(line: 250, column: 54, scope: !11055)
!11069 = !DILocation(line: 252, column: 26, scope: !11055)
!11070 = !DILocation(line: 252, column: 31, scope: !11055)
!11071 = !DILocation(line: 252, column: 16, scope: !11055)
!11072 = !DILocation(line: 252, column: 39, scope: !11055)
!11073 = !DILocation(line: 252, column: 51, scope: !11055)
!11074 = !DILocation(line: 252, column: 59, scope: !11055)
!11075 = !DILocation(line: 252, column: 7, scope: !11055)
!11076 = !DILocation(line: 253, column: 22, scope: !11055)
!11077 = !DILocation(line: 253, column: 7, scope: !11055)
!11078 = !DILocation(line: 253, column: 12, scope: !11055)
!11079 = !DILocation(line: 253, column: 19, scope: !11055)
!11080 = !DILocation(line: 255, column: 11, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11055, file: !998, line: 255, column: 11)
!11082 = !DILocation(line: 255, column: 16, scope: !11081)
!11083 = !DILocation(line: 255, column: 23, scope: !11081)
!11084 = !DILocation(line: 255, column: 11, scope: !11055)
!11085 = !DILocation(line: 257, column: 30, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11081, file: !998, line: 256, column: 9)
!11087 = !DILocation(line: 257, column: 35, scope: !11086)
!11088 = !DILocation(line: 257, column: 43, scope: !11086)
!11089 = !DILocation(line: 257, column: 48, scope: !11086)
!11090 = !DILocation(line: 257, column: 55, scope: !11086)
!11091 = !DILocation(line: 257, column: 62, scope: !11086)
!11092 = !DILocation(line: 257, column: 11, scope: !11086)
!11093 = !DILocation(line: 259, column: 11, scope: !11086)
!11094 = !DILocation(line: 259, column: 16, scope: !11086)
!11095 = !DILocation(line: 259, column: 23, scope: !11086)
!11096 = !DILocation(line: 262, column: 19, scope: !11086)
!11097 = !DILocation(line: 262, column: 24, scope: !11086)
!11098 = !DILocation(line: 262, column: 11, scope: !11086)
!11099 = !DILocation(line: 263, column: 30, scope: !11086)
!11100 = !DILocation(line: 263, column: 35, scope: !11086)
!11101 = !DILocation(line: 263, column: 20, scope: !11086)
!11102 = !DILocation(line: 263, column: 44, scope: !11086)
!11103 = !DILocation(line: 263, column: 56, scope: !11086)
!11104 = !DILocation(line: 263, column: 54, scope: !11086)
!11105 = !DILocation(line: 263, column: 61, scope: !11086)
!11106 = !DILocation(line: 264, column: 19, scope: !11086)
!11107 = !DILocation(line: 264, column: 24, scope: !11086)
!11108 = !DILocation(line: 265, column: 9, scope: !11086)
!11109 = !DILocation(line: 267, column: 31, scope: !11055)
!11110 = !DILocation(line: 267, column: 40, scope: !11055)
!11111 = !DILocation(line: 267, column: 38, scope: !11055)
!11112 = !DILocation(line: 267, column: 14, scope: !11055)
!11113 = !DILocation(line: 268, column: 14, scope: !11055)
!11114 = !DILocation(line: 268, column: 11, scope: !11055)
!11115 = !DILocation(line: 269, column: 5, scope: !11055)
!11116 = !DILocation(line: 272, column: 7, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11042, file: !998, line: 272, column: 7)
!11118 = !DILocation(line: 272, column: 11, scope: !11117)
!11119 = !DILocation(line: 272, column: 7, scope: !11042)
!11120 = !DILocation(line: 276, column: 11, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !998, line: 276, column: 11)
!11122 = distinct !DILexicalBlock(scope: !11117, file: !998, line: 273, column: 5)
!11123 = !DILocation(line: 276, column: 11, scope: !11122)
!11124 = !DILocation(line: 277, column: 9, scope: !11121)
!11125 = !DILocation(line: 277, column: 16, scope: !11121)
!11126 = !DILocation(line: 277, column: 20, scope: !11121)
!11127 = !DILocation(line: 279, column: 40, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11121, file: !998, line: 278, column: 11)
!11129 = !DILocation(line: 279, column: 45, scope: !11128)
!11130 = !DILocation(line: 279, column: 32, scope: !11128)
!11131 = !DILocation(line: 279, column: 53, scope: !11128)
!11132 = !DILocation(line: 279, column: 70, scope: !11128)
!11133 = !DILocation(line: 279, column: 13, scope: !11128)
!11134 = !DILocation(line: 280, column: 37, scope: !11128)
!11135 = !DILocation(line: 280, column: 44, scope: !11128)
!11136 = !DILocation(line: 280, column: 20, scope: !11128)
!11137 = !DILocation(line: 281, column: 17, scope: !11128)
!11138 = distinct !{!11138, !11124, !11139}
!11139 = !DILocation(line: 282, column: 11, scope: !11121)
!11140 = !DILocation(line: 286, column: 30, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11121, file: !998, line: 285, column: 9)
!11142 = !DILocation(line: 286, column: 38, scope: !11141)
!11143 = !DILocation(line: 286, column: 42, scope: !11141)
!11144 = !DILocation(line: 286, column: 49, scope: !11141)
!11145 = !DILocation(line: 286, column: 11, scope: !11141)
!11146 = !DILocation(line: 287, column: 35, scope: !11141)
!11147 = !DILocation(line: 287, column: 45, scope: !11141)
!11148 = !DILocation(line: 287, column: 49, scope: !11141)
!11149 = !DILocation(line: 287, column: 42, scope: !11141)
!11150 = !DILocation(line: 287, column: 18, scope: !11141)
!11151 = !DILocation(line: 288, column: 15, scope: !11141)
!11152 = !DILocation(line: 290, column: 5, scope: !11122)
!11153 = !DILocation(line: 293, column: 7, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11042, file: !998, line: 293, column: 7)
!11155 = !DILocation(line: 293, column: 11, scope: !11154)
!11156 = !DILocation(line: 293, column: 7, scope: !11042)
!11157 = !DILocalVariable(name: "left_over", scope: !11158, file: !998, line: 295, type: !55)
!11158 = distinct !DILexicalBlock(scope: !11154, file: !998, line: 294, column: 5)
!11159 = !DILocation(line: 295, column: 14, scope: !11158)
!11160 = !DILocation(line: 295, column: 26, scope: !11158)
!11161 = !DILocation(line: 295, column: 31, scope: !11158)
!11162 = !DILocation(line: 297, column: 26, scope: !11158)
!11163 = !DILocation(line: 297, column: 31, scope: !11158)
!11164 = !DILocation(line: 297, column: 16, scope: !11158)
!11165 = !DILocation(line: 297, column: 39, scope: !11158)
!11166 = !DILocation(line: 297, column: 51, scope: !11158)
!11167 = !DILocation(line: 297, column: 59, scope: !11158)
!11168 = !DILocation(line: 297, column: 7, scope: !11158)
!11169 = !DILocation(line: 298, column: 20, scope: !11158)
!11170 = !DILocation(line: 298, column: 17, scope: !11158)
!11171 = !DILocation(line: 299, column: 11, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11158, file: !998, line: 299, column: 11)
!11173 = !DILocation(line: 299, column: 21, scope: !11172)
!11174 = !DILocation(line: 299, column: 11, scope: !11158)
!11175 = !DILocation(line: 301, column: 30, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11172, file: !998, line: 300, column: 9)
!11177 = !DILocation(line: 301, column: 35, scope: !11176)
!11178 = !DILocation(line: 301, column: 47, scope: !11176)
!11179 = !DILocation(line: 301, column: 11, scope: !11176)
!11180 = !DILocation(line: 302, column: 21, scope: !11176)
!11181 = !DILocation(line: 305, column: 19, scope: !11176)
!11182 = !DILocation(line: 305, column: 24, scope: !11176)
!11183 = !DILocation(line: 305, column: 11, scope: !11176)
!11184 = !DILocation(line: 305, column: 33, scope: !11176)
!11185 = !DILocation(line: 305, column: 38, scope: !11176)
!11186 = !DILocation(line: 305, column: 50, scope: !11176)
!11187 = !DILocation(line: 306, column: 9, scope: !11176)
!11188 = !DILocation(line: 307, column: 21, scope: !11158)
!11189 = !DILocation(line: 307, column: 7, scope: !11158)
!11190 = !DILocation(line: 307, column: 12, scope: !11158)
!11191 = !DILocation(line: 307, column: 19, scope: !11158)
!11192 = !DILocation(line: 308, column: 5, scope: !11158)
!11193 = !DILocation(line: 309, column: 1, scope: !11042)
!11194 = distinct !DISubprogram(name: "md5_buffer", scope: !998, file: !998, line: 227, type: !982, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !920, retainedNodes: !313)
!11195 = !DILocalVariable(name: "buffer", arg: 1, scope: !11194, file: !998, line: 227, type: !88)
!11196 = !DILocation(line: 227, column: 25, scope: !11194)
!11197 = !DILocalVariable(name: "len", arg: 2, scope: !11194, file: !998, line: 227, type: !55)
!11198 = !DILocation(line: 227, column: 40, scope: !11194)
!11199 = !DILocalVariable(name: "resblock", arg: 3, scope: !11194, file: !998, line: 227, type: !53)
!11200 = !DILocation(line: 227, column: 51, scope: !11194)
!11201 = !DILocalVariable(name: "ctx", scope: !11194, file: !998, line: 229, type: !927)
!11202 = !DILocation(line: 229, column: 18, scope: !11194)
!11203 = !DILocation(line: 232, column: 3, scope: !11194)
!11204 = !DILocation(line: 235, column: 22, scope: !11194)
!11205 = !DILocation(line: 235, column: 30, scope: !11194)
!11206 = !DILocation(line: 235, column: 3, scope: !11194)
!11207 = !DILocation(line: 238, column: 32, scope: !11194)
!11208 = !DILocation(line: 238, column: 10, scope: !11194)
!11209 = !DILocation(line: 238, column: 3, scope: !11194)
!11210 = distinct !DISubprogram(name: "fdadvise", scope: !11211, file: !11211, line: 31, type: !1472, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1459, retainedNodes: !313)
!11211 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11212 = !DILocalVariable(name: "fd", arg: 1, scope: !11210, file: !11211, line: 31, type: !7)
!11213 = !DILocation(line: 31, column: 15, scope: !11210)
!11214 = !DILocalVariable(name: "offset", arg: 2, scope: !11210, file: !11211, line: 31, type: !1474)
!11215 = !DILocation(line: 31, column: 25, scope: !11210)
!11216 = !DILocalVariable(name: "len", arg: 3, scope: !11210, file: !11211, line: 31, type: !1474)
!11217 = !DILocation(line: 31, column: 39, scope: !11210)
!11218 = !DILocalVariable(name: "advice", arg: 4, scope: !11210, file: !11211, line: 31, type: !1475)
!11219 = !DILocation(line: 31, column: 54, scope: !11210)
!11220 = !DILocalVariable(name: "__x", scope: !11221, file: !11211, line: 34, type: !7)
!11221 = distinct !DILexicalBlock(scope: !11210, file: !11211, line: 34, column: 3)
!11222 = !DILocation(line: 34, column: 3, scope: !11221)
!11223 = !DILocation(line: 36, column: 1, scope: !11210)
!11224 = distinct !DISubprogram(name: "fadvise", scope: !11211, file: !11211, line: 39, type: !1476, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1459, retainedNodes: !313)
!11225 = !DILocalVariable(name: "fp", arg: 1, scope: !11224, file: !11211, line: 39, type: !1478)
!11226 = !DILocation(line: 39, column: 16, scope: !11224)
!11227 = !DILocalVariable(name: "advice", arg: 2, scope: !11224, file: !11211, line: 39, type: !1475)
!11228 = !DILocation(line: 39, column: 30, scope: !11224)
!11229 = !DILocation(line: 41, column: 7, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11224, file: !11211, line: 41, column: 7)
!11231 = !DILocation(line: 41, column: 7, scope: !11224)
!11232 = !DILocation(line: 42, column: 23, scope: !11230)
!11233 = !DILocation(line: 42, column: 15, scope: !11230)
!11234 = !DILocation(line: 42, column: 34, scope: !11230)
!11235 = !DILocation(line: 42, column: 5, scope: !11230)
!11236 = !DILocation(line: 43, column: 1, scope: !11224)
!11237 = distinct !DISubprogram(name: "filevercmp", scope: !11238, file: !11238, line: 125, type: !481, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1512, retainedNodes: !313)
!11238 = !DIFile(filename: "lib/filevercmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11239 = !DILocalVariable(name: "s1", arg: 1, scope: !11237, file: !11238, line: 125, type: !88)
!11240 = !DILocation(line: 125, column: 25, scope: !11237)
!11241 = !DILocalVariable(name: "s2", arg: 2, scope: !11237, file: !11238, line: 125, type: !88)
!11242 = !DILocation(line: 125, column: 41, scope: !11237)
!11243 = !DILocalVariable(name: "s1_pos", scope: !11237, file: !11238, line: 127, type: !88)
!11244 = !DILocation(line: 127, column: 15, scope: !11237)
!11245 = !DILocalVariable(name: "s2_pos", scope: !11237, file: !11238, line: 128, type: !88)
!11246 = !DILocation(line: 128, column: 15, scope: !11237)
!11247 = !DILocalVariable(name: "s1_suffix", scope: !11237, file: !11238, line: 129, type: !88)
!11248 = !DILocation(line: 129, column: 15, scope: !11237)
!11249 = !DILocalVariable(name: "s2_suffix", scope: !11237, file: !11238, line: 129, type: !88)
!11250 = !DILocation(line: 129, column: 27, scope: !11237)
!11251 = !DILocalVariable(name: "s1_len", scope: !11237, file: !11238, line: 130, type: !55)
!11252 = !DILocation(line: 130, column: 10, scope: !11237)
!11253 = !DILocalVariable(name: "s2_len", scope: !11237, file: !11238, line: 130, type: !55)
!11254 = !DILocation(line: 130, column: 18, scope: !11237)
!11255 = !DILocalVariable(name: "result", scope: !11237, file: !11238, line: 131, type: !7)
!11256 = !DILocation(line: 131, column: 7, scope: !11237)
!11257 = !DILocalVariable(name: "simple_cmp", scope: !11237, file: !11238, line: 134, type: !7)
!11258 = !DILocation(line: 134, column: 7, scope: !11237)
!11259 = !DILocation(line: 134, column: 28, scope: !11237)
!11260 = !DILocation(line: 134, column: 32, scope: !11237)
!11261 = !DILocation(line: 134, column: 20, scope: !11237)
!11262 = !DILocation(line: 135, column: 7, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 135, column: 7)
!11264 = !DILocation(line: 135, column: 18, scope: !11263)
!11265 = !DILocation(line: 135, column: 7, scope: !11237)
!11266 = !DILocation(line: 136, column: 5, scope: !11263)
!11267 = !DILocation(line: 139, column: 9, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 139, column: 7)
!11269 = !DILocation(line: 139, column: 8, scope: !11268)
!11270 = !DILocation(line: 139, column: 7, scope: !11237)
!11271 = !DILocation(line: 140, column: 5, scope: !11268)
!11272 = !DILocation(line: 141, column: 9, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 141, column: 7)
!11274 = !DILocation(line: 141, column: 8, scope: !11273)
!11275 = !DILocation(line: 141, column: 7, scope: !11237)
!11276 = !DILocation(line: 142, column: 5, scope: !11273)
!11277 = !DILocation(line: 143, column: 25, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 143, column: 7)
!11279 = !DILocation(line: 143, column: 12, scope: !11278)
!11280 = !DILocation(line: 143, column: 9, scope: !11278)
!11281 = !DILocation(line: 143, column: 7, scope: !11237)
!11282 = !DILocation(line: 144, column: 5, scope: !11278)
!11283 = !DILocation(line: 145, column: 25, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 145, column: 7)
!11285 = !DILocation(line: 145, column: 12, scope: !11284)
!11286 = !DILocation(line: 145, column: 9, scope: !11284)
!11287 = !DILocation(line: 145, column: 7, scope: !11237)
!11288 = !DILocation(line: 146, column: 5, scope: !11284)
!11289 = !DILocation(line: 147, column: 26, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 147, column: 7)
!11291 = !DILocation(line: 147, column: 12, scope: !11290)
!11292 = !DILocation(line: 147, column: 9, scope: !11290)
!11293 = !DILocation(line: 147, column: 7, scope: !11237)
!11294 = !DILocation(line: 148, column: 5, scope: !11290)
!11295 = !DILocation(line: 149, column: 26, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 149, column: 7)
!11297 = !DILocation(line: 149, column: 12, scope: !11296)
!11298 = !DILocation(line: 149, column: 9, scope: !11296)
!11299 = !DILocation(line: 149, column: 7, scope: !11237)
!11300 = !DILocation(line: 150, column: 5, scope: !11296)
!11301 = !DILocation(line: 153, column: 8, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 153, column: 7)
!11303 = !DILocation(line: 153, column: 7, scope: !11302)
!11304 = !DILocation(line: 153, column: 11, scope: !11302)
!11305 = !DILocation(line: 153, column: 18, scope: !11302)
!11306 = !DILocation(line: 153, column: 22, scope: !11302)
!11307 = !DILocation(line: 153, column: 21, scope: !11302)
!11308 = !DILocation(line: 153, column: 25, scope: !11302)
!11309 = !DILocation(line: 153, column: 7, scope: !11237)
!11310 = !DILocation(line: 154, column: 5, scope: !11302)
!11311 = !DILocation(line: 155, column: 8, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 155, column: 7)
!11313 = !DILocation(line: 155, column: 7, scope: !11312)
!11314 = !DILocation(line: 155, column: 11, scope: !11312)
!11315 = !DILocation(line: 155, column: 18, scope: !11312)
!11316 = !DILocation(line: 155, column: 22, scope: !11312)
!11317 = !DILocation(line: 155, column: 21, scope: !11312)
!11318 = !DILocation(line: 155, column: 25, scope: !11312)
!11319 = !DILocation(line: 155, column: 7, scope: !11237)
!11320 = !DILocation(line: 156, column: 5, scope: !11312)
!11321 = !DILocation(line: 157, column: 8, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 157, column: 7)
!11323 = !DILocation(line: 157, column: 7, scope: !11322)
!11324 = !DILocation(line: 157, column: 11, scope: !11322)
!11325 = !DILocation(line: 157, column: 18, scope: !11322)
!11326 = !DILocation(line: 157, column: 22, scope: !11322)
!11327 = !DILocation(line: 157, column: 21, scope: !11322)
!11328 = !DILocation(line: 157, column: 25, scope: !11322)
!11329 = !DILocation(line: 157, column: 7, scope: !11237)
!11330 = !DILocation(line: 159, column: 9, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11322, file: !11238, line: 158, column: 5)
!11332 = !DILocation(line: 160, column: 9, scope: !11331)
!11333 = !DILocation(line: 161, column: 5, scope: !11331)
!11334 = !DILocation(line: 164, column: 12, scope: !11237)
!11335 = !DILocation(line: 164, column: 10, scope: !11237)
!11336 = !DILocation(line: 165, column: 12, scope: !11237)
!11337 = !DILocation(line: 165, column: 10, scope: !11237)
!11338 = !DILocation(line: 166, column: 15, scope: !11237)
!11339 = !DILocation(line: 166, column: 13, scope: !11237)
!11340 = !DILocation(line: 167, column: 15, scope: !11237)
!11341 = !DILocation(line: 167, column: 13, scope: !11237)
!11342 = !DILocation(line: 168, column: 13, scope: !11237)
!11343 = !DILocation(line: 168, column: 25, scope: !11237)
!11344 = !DILocation(line: 168, column: 37, scope: !11237)
!11345 = !DILocation(line: 168, column: 47, scope: !11237)
!11346 = !DILocation(line: 168, column: 45, scope: !11237)
!11347 = !DILocation(line: 168, column: 10, scope: !11237)
!11348 = !DILocation(line: 169, column: 13, scope: !11237)
!11349 = !DILocation(line: 169, column: 25, scope: !11237)
!11350 = !DILocation(line: 169, column: 37, scope: !11237)
!11351 = !DILocation(line: 169, column: 47, scope: !11237)
!11352 = !DILocation(line: 169, column: 45, scope: !11237)
!11353 = !DILocation(line: 169, column: 10, scope: !11237)
!11354 = !DILocation(line: 172, column: 8, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 172, column: 7)
!11356 = !DILocation(line: 172, column: 18, scope: !11355)
!11357 = !DILocation(line: 172, column: 21, scope: !11355)
!11358 = !DILocation(line: 172, column: 32, scope: !11355)
!11359 = !DILocation(line: 172, column: 36, scope: !11355)
!11360 = !DILocation(line: 172, column: 46, scope: !11355)
!11361 = !DILocation(line: 172, column: 43, scope: !11355)
!11362 = !DILocation(line: 173, column: 7, scope: !11355)
!11363 = !DILocation(line: 173, column: 24, scope: !11355)
!11364 = !DILocation(line: 173, column: 28, scope: !11355)
!11365 = !DILocation(line: 173, column: 32, scope: !11355)
!11366 = !DILocation(line: 173, column: 15, scope: !11355)
!11367 = !DILocation(line: 173, column: 12, scope: !11355)
!11368 = !DILocation(line: 172, column: 7, scope: !11237)
!11369 = !DILocation(line: 175, column: 16, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11355, file: !11238, line: 174, column: 5)
!11371 = !DILocation(line: 175, column: 25, scope: !11370)
!11372 = !DILocation(line: 175, column: 23, scope: !11370)
!11373 = !DILocation(line: 175, column: 14, scope: !11370)
!11374 = !DILocation(line: 176, column: 16, scope: !11370)
!11375 = !DILocation(line: 176, column: 25, scope: !11370)
!11376 = !DILocation(line: 176, column: 23, scope: !11370)
!11377 = !DILocation(line: 176, column: 14, scope: !11370)
!11378 = !DILocation(line: 177, column: 5, scope: !11370)
!11379 = !DILocation(line: 179, column: 23, scope: !11237)
!11380 = !DILocation(line: 179, column: 27, scope: !11237)
!11381 = !DILocation(line: 179, column: 35, scope: !11237)
!11382 = !DILocation(line: 179, column: 39, scope: !11237)
!11383 = !DILocation(line: 179, column: 12, scope: !11237)
!11384 = !DILocation(line: 179, column: 10, scope: !11237)
!11385 = !DILocation(line: 180, column: 10, scope: !11237)
!11386 = !DILocation(line: 180, column: 17, scope: !11237)
!11387 = !DILocation(line: 180, column: 24, scope: !11237)
!11388 = !DILocation(line: 180, column: 37, scope: !11237)
!11389 = !DILocation(line: 180, column: 3, scope: !11237)
!11390 = !DILocation(line: 181, column: 1, scope: !11237)
!11391 = distinct !DISubprogram(name: "match_suffix", scope: !11238, file: !11238, line: 34, type: !1515, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1512, retainedNodes: !313)
!11392 = !DILocalVariable(name: "str", arg: 1, scope: !11391, file: !11238, line: 34, type: !378)
!11393 = !DILocation(line: 34, column: 28, scope: !11391)
!11394 = !DILocalVariable(name: "match", scope: !11391, file: !11238, line: 36, type: !88)
!11395 = !DILocation(line: 36, column: 15, scope: !11391)
!11396 = !DILocalVariable(name: "read_alpha", scope: !11391, file: !11238, line: 37, type: !103)
!11397 = !DILocation(line: 37, column: 8, scope: !11391)
!11398 = !DILocation(line: 38, column: 3, scope: !11391)
!11399 = !DILocation(line: 38, column: 12, scope: !11391)
!11400 = !DILocation(line: 38, column: 11, scope: !11391)
!11401 = !DILocation(line: 38, column: 10, scope: !11391)
!11402 = !DILocation(line: 40, column: 11, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !11238, line: 40, column: 11)
!11404 = distinct !DILexicalBlock(scope: !11391, file: !11238, line: 39, column: 5)
!11405 = !DILocation(line: 40, column: 11, scope: !11404)
!11406 = !DILocation(line: 42, column: 22, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11403, file: !11238, line: 41, column: 9)
!11408 = !DILocation(line: 43, column: 29, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11407, file: !11238, line: 43, column: 15)
!11410 = !DILocation(line: 43, column: 28, scope: !11409)
!11411 = !DILocation(line: 43, column: 27, scope: !11409)
!11412 = !DILocation(line: 43, column: 16, scope: !11409)
!11413 = !DILocation(line: 43, column: 34, scope: !11409)
!11414 = !DILocation(line: 43, column: 46, scope: !11409)
!11415 = !DILocation(line: 43, column: 45, scope: !11409)
!11416 = !DILocation(line: 43, column: 44, scope: !11409)
!11417 = !DILocation(line: 43, column: 41, scope: !11409)
!11418 = !DILocation(line: 43, column: 15, scope: !11407)
!11419 = !DILocation(line: 44, column: 19, scope: !11409)
!11420 = !DILocation(line: 44, column: 13, scope: !11409)
!11421 = !DILocation(line: 45, column: 9, scope: !11407)
!11422 = !DILocation(line: 46, column: 25, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11403, file: !11238, line: 46, column: 16)
!11424 = !DILocation(line: 46, column: 24, scope: !11423)
!11425 = !DILocation(line: 46, column: 23, scope: !11423)
!11426 = !DILocation(line: 46, column: 20, scope: !11423)
!11427 = !DILocation(line: 46, column: 16, scope: !11403)
!11428 = !DILocation(line: 48, column: 22, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11423, file: !11238, line: 47, column: 9)
!11430 = !DILocation(line: 49, column: 16, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11429, file: !11238, line: 49, column: 15)
!11432 = !DILocation(line: 49, column: 15, scope: !11429)
!11433 = !DILocation(line: 50, column: 22, scope: !11431)
!11434 = !DILocation(line: 50, column: 21, scope: !11431)
!11435 = !DILocation(line: 50, column: 19, scope: !11431)
!11436 = !DILocation(line: 50, column: 13, scope: !11431)
!11437 = !DILocation(line: 51, column: 9, scope: !11429)
!11438 = !DILocation(line: 52, column: 30, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11423, file: !11238, line: 52, column: 16)
!11440 = !DILocation(line: 52, column: 29, scope: !11439)
!11441 = !DILocation(line: 52, column: 28, scope: !11439)
!11442 = !DILocation(line: 52, column: 17, scope: !11439)
!11443 = !DILocation(line: 52, column: 35, scope: !11439)
!11444 = !DILocation(line: 52, column: 47, scope: !11439)
!11445 = !DILocation(line: 52, column: 46, scope: !11439)
!11446 = !DILocation(line: 52, column: 45, scope: !11439)
!11447 = !DILocation(line: 52, column: 42, scope: !11439)
!11448 = !DILocation(line: 52, column: 16, scope: !11423)
!11449 = !DILocation(line: 53, column: 15, scope: !11439)
!11450 = !DILocation(line: 53, column: 9, scope: !11439)
!11451 = !DILocation(line: 54, column: 9, scope: !11404)
!11452 = !DILocation(line: 54, column: 13, scope: !11404)
!11453 = distinct !{!11453, !11398, !11454}
!11454 = !DILocation(line: 55, column: 5, scope: !11391)
!11455 = !DILocation(line: 56, column: 10, scope: !11391)
!11456 = !DILocation(line: 56, column: 3, scope: !11391)
!11457 = distinct !DISubprogram(name: "verrevcmp", scope: !11238, file: !11238, line: 84, type: !1517, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1512, retainedNodes: !313)
!11458 = !DILocalVariable(name: "s1", arg: 1, scope: !11457, file: !11238, line: 84, type: !88)
!11459 = !DILocation(line: 84, column: 24, scope: !11457)
!11460 = !DILocalVariable(name: "s1_len", arg: 2, scope: !11457, file: !11238, line: 84, type: !55)
!11461 = !DILocation(line: 84, column: 35, scope: !11457)
!11462 = !DILocalVariable(name: "s2", arg: 3, scope: !11457, file: !11238, line: 84, type: !88)
!11463 = !DILocation(line: 84, column: 55, scope: !11457)
!11464 = !DILocalVariable(name: "s2_len", arg: 4, scope: !11457, file: !11238, line: 84, type: !55)
!11465 = !DILocation(line: 84, column: 66, scope: !11457)
!11466 = !DILocalVariable(name: "s1_pos", scope: !11457, file: !11238, line: 86, type: !55)
!11467 = !DILocation(line: 86, column: 10, scope: !11457)
!11468 = !DILocalVariable(name: "s2_pos", scope: !11457, file: !11238, line: 87, type: !55)
!11469 = !DILocation(line: 87, column: 10, scope: !11457)
!11470 = !DILocation(line: 88, column: 3, scope: !11457)
!11471 = !DILocation(line: 88, column: 10, scope: !11457)
!11472 = !DILocation(line: 88, column: 19, scope: !11457)
!11473 = !DILocation(line: 88, column: 17, scope: !11457)
!11474 = !DILocation(line: 88, column: 26, scope: !11457)
!11475 = !DILocation(line: 88, column: 29, scope: !11457)
!11476 = !DILocation(line: 88, column: 38, scope: !11457)
!11477 = !DILocation(line: 88, column: 36, scope: !11457)
!11478 = !DILocalVariable(name: "first_diff", scope: !11479, file: !11238, line: 90, type: !7)
!11479 = distinct !DILexicalBlock(scope: !11457, file: !11238, line: 89, column: 5)
!11480 = !DILocation(line: 90, column: 11, scope: !11479)
!11481 = !DILocation(line: 91, column: 7, scope: !11479)
!11482 = !DILocation(line: 91, column: 15, scope: !11479)
!11483 = !DILocation(line: 91, column: 24, scope: !11479)
!11484 = !DILocation(line: 91, column: 22, scope: !11479)
!11485 = !DILocation(line: 91, column: 31, scope: !11479)
!11486 = !DILocation(line: 91, column: 46, scope: !11479)
!11487 = !DILocation(line: 91, column: 49, scope: !11479)
!11488 = !DILocation(line: 91, column: 35, scope: !11479)
!11489 = !DILocation(line: 92, column: 14, scope: !11479)
!11490 = !DILocation(line: 92, column: 18, scope: !11479)
!11491 = !DILocation(line: 92, column: 27, scope: !11479)
!11492 = !DILocation(line: 92, column: 25, scope: !11479)
!11493 = !DILocation(line: 92, column: 34, scope: !11479)
!11494 = !DILocation(line: 92, column: 49, scope: !11479)
!11495 = !DILocation(line: 92, column: 52, scope: !11479)
!11496 = !DILocation(line: 92, column: 38, scope: !11479)
!11497 = !DILocation(line: 92, column: 37, scope: !11479)
!11498 = !DILocation(line: 0, scope: !11479)
!11499 = !DILocalVariable(name: "s1_c", scope: !11500, file: !11238, line: 94, type: !7)
!11500 = distinct !DILexicalBlock(scope: !11479, file: !11238, line: 93, column: 9)
!11501 = !DILocation(line: 94, column: 15, scope: !11500)
!11502 = !DILocation(line: 94, column: 23, scope: !11500)
!11503 = !DILocation(line: 94, column: 33, scope: !11500)
!11504 = !DILocation(line: 94, column: 30, scope: !11500)
!11505 = !DILocation(line: 94, column: 22, scope: !11500)
!11506 = !DILocation(line: 94, column: 54, scope: !11500)
!11507 = !DILocation(line: 94, column: 57, scope: !11500)
!11508 = !DILocation(line: 94, column: 47, scope: !11500)
!11509 = !DILocalVariable(name: "s2_c", scope: !11500, file: !11238, line: 95, type: !7)
!11510 = !DILocation(line: 95, column: 15, scope: !11500)
!11511 = !DILocation(line: 95, column: 23, scope: !11500)
!11512 = !DILocation(line: 95, column: 33, scope: !11500)
!11513 = !DILocation(line: 95, column: 30, scope: !11500)
!11514 = !DILocation(line: 95, column: 22, scope: !11500)
!11515 = !DILocation(line: 95, column: 54, scope: !11500)
!11516 = !DILocation(line: 95, column: 57, scope: !11500)
!11517 = !DILocation(line: 95, column: 47, scope: !11500)
!11518 = !DILocation(line: 96, column: 15, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11500, file: !11238, line: 96, column: 15)
!11520 = !DILocation(line: 96, column: 23, scope: !11519)
!11521 = !DILocation(line: 96, column: 20, scope: !11519)
!11522 = !DILocation(line: 96, column: 15, scope: !11500)
!11523 = !DILocation(line: 97, column: 20, scope: !11519)
!11524 = !DILocation(line: 97, column: 27, scope: !11519)
!11525 = !DILocation(line: 97, column: 25, scope: !11519)
!11526 = !DILocation(line: 97, column: 13, scope: !11519)
!11527 = !DILocation(line: 98, column: 17, scope: !11500)
!11528 = !DILocation(line: 99, column: 17, scope: !11500)
!11529 = distinct !{!11529, !11481, !11530}
!11530 = !DILocation(line: 100, column: 9, scope: !11479)
!11531 = !DILocation(line: 101, column: 7, scope: !11479)
!11532 = !DILocation(line: 101, column: 14, scope: !11479)
!11533 = !DILocation(line: 101, column: 17, scope: !11479)
!11534 = !DILocation(line: 101, column: 25, scope: !11479)
!11535 = !DILocation(line: 102, column: 15, scope: !11479)
!11536 = distinct !{!11536, !11531, !11535}
!11537 = !DILocation(line: 103, column: 7, scope: !11479)
!11538 = !DILocation(line: 103, column: 14, scope: !11479)
!11539 = !DILocation(line: 103, column: 17, scope: !11479)
!11540 = !DILocation(line: 103, column: 25, scope: !11479)
!11541 = !DILocation(line: 104, column: 15, scope: !11479)
!11542 = distinct !{!11542, !11537, !11541}
!11543 = !DILocation(line: 105, column: 7, scope: !11479)
!11544 = !DILocation(line: 105, column: 25, scope: !11479)
!11545 = !DILocation(line: 105, column: 28, scope: !11479)
!11546 = !DILocation(line: 105, column: 14, scope: !11479)
!11547 = !DILocation(line: 105, column: 37, scope: !11479)
!11548 = !DILocation(line: 105, column: 51, scope: !11479)
!11549 = !DILocation(line: 105, column: 54, scope: !11479)
!11550 = !DILocation(line: 105, column: 40, scope: !11479)
!11551 = !DILocation(line: 107, column: 16, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !11238, line: 107, column: 15)
!11553 = distinct !DILexicalBlock(scope: !11479, file: !11238, line: 106, column: 9)
!11554 = !DILocation(line: 107, column: 15, scope: !11553)
!11555 = !DILocation(line: 108, column: 26, scope: !11552)
!11556 = !DILocation(line: 108, column: 29, scope: !11552)
!11557 = !DILocation(line: 108, column: 39, scope: !11552)
!11558 = !DILocation(line: 108, column: 42, scope: !11552)
!11559 = !DILocation(line: 108, column: 37, scope: !11552)
!11560 = !DILocation(line: 108, column: 24, scope: !11552)
!11561 = !DILocation(line: 108, column: 13, scope: !11552)
!11562 = !DILocation(line: 109, column: 17, scope: !11553)
!11563 = !DILocation(line: 110, column: 17, scope: !11553)
!11564 = distinct !{!11564, !11543, !11565}
!11565 = !DILocation(line: 111, column: 9, scope: !11479)
!11566 = !DILocation(line: 112, column: 22, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11479, file: !11238, line: 112, column: 11)
!11568 = !DILocation(line: 112, column: 25, scope: !11567)
!11569 = !DILocation(line: 112, column: 11, scope: !11567)
!11570 = !DILocation(line: 112, column: 11, scope: !11479)
!11571 = !DILocation(line: 113, column: 9, scope: !11567)
!11572 = !DILocation(line: 114, column: 22, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11479, file: !11238, line: 114, column: 11)
!11574 = !DILocation(line: 114, column: 25, scope: !11573)
!11575 = !DILocation(line: 114, column: 11, scope: !11573)
!11576 = !DILocation(line: 114, column: 11, scope: !11479)
!11577 = !DILocation(line: 115, column: 9, scope: !11573)
!11578 = !DILocation(line: 116, column: 11, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11479, file: !11238, line: 116, column: 11)
!11580 = !DILocation(line: 116, column: 11, scope: !11479)
!11581 = !DILocation(line: 117, column: 16, scope: !11579)
!11582 = !DILocation(line: 117, column: 9, scope: !11579)
!11583 = distinct !{!11583, !11470, !11584}
!11584 = !DILocation(line: 118, column: 5, scope: !11457)
!11585 = !DILocation(line: 119, column: 3, scope: !11457)
!11586 = !DILocation(line: 120, column: 1, scope: !11457)
!11587 = distinct !DISubprogram(name: "order", scope: !11238, file: !11238, line: 61, type: !1519, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1512, retainedNodes: !313)
!11588 = !DILocalVariable(name: "c", arg: 1, scope: !11587, file: !11238, line: 61, type: !321)
!11589 = !DILocation(line: 61, column: 22, scope: !11587)
!11590 = !DILocation(line: 63, column: 18, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11587, file: !11238, line: 63, column: 7)
!11592 = !DILocation(line: 63, column: 7, scope: !11591)
!11593 = !DILocation(line: 63, column: 7, scope: !11587)
!11594 = !DILocation(line: 64, column: 5, scope: !11591)
!11595 = !DILocation(line: 65, column: 23, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11591, file: !11238, line: 65, column: 12)
!11597 = !DILocation(line: 65, column: 12, scope: !11596)
!11598 = !DILocation(line: 65, column: 12, scope: !11591)
!11599 = !DILocation(line: 66, column: 12, scope: !11596)
!11600 = !DILocation(line: 66, column: 5, scope: !11596)
!11601 = !DILocation(line: 67, column: 12, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11596, file: !11238, line: 67, column: 12)
!11603 = !DILocation(line: 67, column: 14, scope: !11602)
!11604 = !DILocation(line: 67, column: 12, scope: !11596)
!11605 = !DILocation(line: 68, column: 5, scope: !11602)
!11606 = !DILocation(line: 70, column: 18, scope: !11602)
!11607 = !DILocation(line: 70, column: 12, scope: !11602)
!11608 = !DILocation(line: 70, column: 20, scope: !11602)
!11609 = !DILocation(line: 70, column: 32, scope: !11602)
!11610 = !DILocation(line: 70, column: 5, scope: !11602)
!11611 = !DILocation(line: 71, column: 1, scope: !11587)
!11612 = distinct !DISubprogram(name: "hard_locale", scope: !11613, file: !11613, line: 38, type: !1524, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1521, retainedNodes: !313)
!11613 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11614 = !DILocalVariable(name: "category", arg: 1, scope: !11612, file: !11613, line: 38, type: !7)
!11615 = !DILocation(line: 38, column: 18, scope: !11612)
!11616 = !DILocalVariable(name: "hard", scope: !11612, file: !11613, line: 40, type: !103)
!11617 = !DILocation(line: 40, column: 8, scope: !11612)
!11618 = !DILocalVariable(name: "p", scope: !11612, file: !11613, line: 41, type: !88)
!11619 = !DILocation(line: 41, column: 15, scope: !11612)
!11620 = !DILocation(line: 41, column: 30, scope: !11612)
!11621 = !DILocation(line: 41, column: 19, scope: !11612)
!11622 = !DILocation(line: 43, column: 7, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11612, file: !11613, line: 43, column: 7)
!11624 = !DILocation(line: 43, column: 7, scope: !11612)
!11625 = !DILocation(line: 47, column: 23, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !11613, line: 47, column: 15)
!11627 = distinct !DILexicalBlock(scope: !11628, file: !11613, line: 46, column: 9)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !11613, line: 45, column: 11)
!11629 = distinct !DILexicalBlock(scope: !11623, file: !11613, line: 44, column: 5)
!11630 = !DILocation(line: 47, column: 15, scope: !11626)
!11631 = !DILocation(line: 47, column: 31, scope: !11626)
!11632 = !DILocation(line: 47, column: 36, scope: !11626)
!11633 = !DILocation(line: 47, column: 47, scope: !11626)
!11634 = !DILocation(line: 47, column: 39, scope: !11626)
!11635 = !DILocation(line: 47, column: 59, scope: !11626)
!11636 = !DILocation(line: 47, column: 15, scope: !11627)
!11637 = !DILocation(line: 48, column: 18, scope: !11626)
!11638 = !DILocation(line: 48, column: 13, scope: !11626)
!11639 = !DILocation(line: 69, column: 5, scope: !11629)
!11640 = !DILocation(line: 71, column: 10, scope: !11612)
!11641 = !DILocation(line: 71, column: 3, scope: !11612)
!11642 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !1017, file: !1017, line: 150, type: !1011, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11643 = !DILocalVariable(name: "table", arg: 1, scope: !11642, file: !1017, line: 150, type: !1013)
!11644 = !DILocation(line: 150, column: 39, scope: !11642)
!11645 = !DILocation(line: 152, column: 10, scope: !11642)
!11646 = !DILocation(line: 152, column: 17, scope: !11642)
!11647 = !{!11648, !2448, i64 16}
!11648 = !{!"hash_table", !2287, i64 0, !2287, i64 8, !2448, i64 16, !2448, i64 24, !2448, i64 32, !2287, i64 40, !2287, i64 48, !2287, i64 56, !2287, i64 64, !2287, i64 72}
!11649 = !DILocation(line: 152, column: 3, scope: !11642)
!11650 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !1017, file: !1017, line: 158, type: !1011, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11651 = !DILocalVariable(name: "table", arg: 1, scope: !11650, file: !1017, line: 158, type: !1013)
!11652 = !DILocation(line: 158, column: 44, scope: !11650)
!11653 = !DILocation(line: 160, column: 10, scope: !11650)
!11654 = !DILocation(line: 160, column: 17, scope: !11650)
!11655 = !{!11648, !2448, i64 24}
!11656 = !DILocation(line: 160, column: 3, scope: !11650)
!11657 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !1017, file: !1017, line: 166, type: !1011, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11658 = !DILocalVariable(name: "table", arg: 1, scope: !11657, file: !1017, line: 166, type: !1013)
!11659 = !DILocation(line: 166, column: 39, scope: !11657)
!11660 = !DILocation(line: 168, column: 10, scope: !11657)
!11661 = !DILocation(line: 168, column: 17, scope: !11657)
!11662 = !{!11648, !2448, i64 32}
!11663 = !DILocation(line: 168, column: 3, scope: !11657)
!11664 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !1017, file: !1017, line: 174, type: !1011, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11665 = !DILocalVariable(name: "table", arg: 1, scope: !11664, file: !1017, line: 174, type: !1013)
!11666 = !DILocation(line: 174, column: 47, scope: !11664)
!11667 = !DILocalVariable(name: "bucket", scope: !11664, file: !1017, line: 176, type: !1026)
!11668 = !DILocation(line: 176, column: 28, scope: !11664)
!11669 = !DILocalVariable(name: "max_bucket_length", scope: !11664, file: !1017, line: 177, type: !55)
!11670 = !DILocation(line: 177, column: 10, scope: !11664)
!11671 = !DILocation(line: 179, column: 17, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11664, file: !1017, line: 179, column: 3)
!11673 = !DILocation(line: 179, column: 24, scope: !11672)
!11674 = !{!11648, !2287, i64 0}
!11675 = !DILocation(line: 179, column: 15, scope: !11672)
!11676 = !DILocation(line: 179, column: 8, scope: !11672)
!11677 = !DILocation(line: 179, column: 32, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11672, file: !1017, line: 179, column: 3)
!11679 = !DILocation(line: 179, column: 41, scope: !11678)
!11680 = !DILocation(line: 179, column: 48, scope: !11678)
!11681 = !{!11648, !2287, i64 8}
!11682 = !DILocation(line: 179, column: 39, scope: !11678)
!11683 = !DILocation(line: 179, column: 3, scope: !11672)
!11684 = !DILocation(line: 181, column: 11, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !1017, line: 181, column: 11)
!11686 = distinct !DILexicalBlock(scope: !11678, file: !1017, line: 180, column: 5)
!11687 = !DILocation(line: 181, column: 19, scope: !11685)
!11688 = !{!11689, !2287, i64 0}
!11689 = !{!"hash_entry", !2287, i64 0, !2287, i64 8}
!11690 = !DILocation(line: 181, column: 11, scope: !11686)
!11691 = !DILocalVariable(name: "cursor", scope: !11692, file: !1017, line: 183, type: !1026)
!11692 = distinct !DILexicalBlock(scope: !11685, file: !1017, line: 182, column: 9)
!11693 = !DILocation(line: 183, column: 36, scope: !11692)
!11694 = !DILocation(line: 183, column: 45, scope: !11692)
!11695 = !DILocalVariable(name: "bucket_length", scope: !11692, file: !1017, line: 184, type: !55)
!11696 = !DILocation(line: 184, column: 18, scope: !11692)
!11697 = !DILocation(line: 186, column: 11, scope: !11692)
!11698 = !DILocation(line: 186, column: 27, scope: !11692)
!11699 = !DILocation(line: 186, column: 35, scope: !11692)
!11700 = !{!11689, !2287, i64 8}
!11701 = !DILocation(line: 186, column: 25, scope: !11692)
!11702 = !DILocation(line: 186, column: 41, scope: !11692)
!11703 = !DILocation(line: 187, column: 26, scope: !11692)
!11704 = distinct !{!11704, !11697, !11703}
!11705 = !DILocation(line: 189, column: 15, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11692, file: !1017, line: 189, column: 15)
!11707 = !DILocation(line: 189, column: 31, scope: !11706)
!11708 = !DILocation(line: 189, column: 29, scope: !11706)
!11709 = !DILocation(line: 189, column: 15, scope: !11692)
!11710 = !DILocation(line: 190, column: 33, scope: !11706)
!11711 = !DILocation(line: 190, column: 31, scope: !11706)
!11712 = !DILocation(line: 190, column: 13, scope: !11706)
!11713 = !DILocation(line: 191, column: 9, scope: !11692)
!11714 = !DILocation(line: 192, column: 5, scope: !11686)
!11715 = !DILocation(line: 179, column: 68, scope: !11678)
!11716 = !DILocation(line: 179, column: 3, scope: !11678)
!11717 = distinct !{!11717, !11683, !11718}
!11718 = !DILocation(line: 192, column: 5, scope: !11672)
!11719 = !DILocation(line: 194, column: 10, scope: !11664)
!11720 = !DILocation(line: 194, column: 3, scope: !11664)
!11721 = distinct !DISubprogram(name: "hash_table_ok", scope: !1017, file: !1017, line: 201, type: !1055, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11722 = !DILocalVariable(name: "table", arg: 1, scope: !11721, file: !1017, line: 201, type: !1013)
!11723 = !DILocation(line: 201, column: 34, scope: !11721)
!11724 = !DILocalVariable(name: "bucket", scope: !11721, file: !1017, line: 203, type: !1026)
!11725 = !DILocation(line: 203, column: 28, scope: !11721)
!11726 = !DILocalVariable(name: "n_buckets_used", scope: !11721, file: !1017, line: 204, type: !55)
!11727 = !DILocation(line: 204, column: 10, scope: !11721)
!11728 = !DILocalVariable(name: "n_entries", scope: !11721, file: !1017, line: 205, type: !55)
!11729 = !DILocation(line: 205, column: 10, scope: !11721)
!11730 = !DILocation(line: 207, column: 17, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11721, file: !1017, line: 207, column: 3)
!11732 = !DILocation(line: 207, column: 24, scope: !11731)
!11733 = !DILocation(line: 207, column: 15, scope: !11731)
!11734 = !DILocation(line: 207, column: 8, scope: !11731)
!11735 = !DILocation(line: 207, column: 32, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11731, file: !1017, line: 207, column: 3)
!11737 = !DILocation(line: 207, column: 41, scope: !11736)
!11738 = !DILocation(line: 207, column: 48, scope: !11736)
!11739 = !DILocation(line: 207, column: 39, scope: !11736)
!11740 = !DILocation(line: 207, column: 3, scope: !11731)
!11741 = !DILocation(line: 209, column: 11, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !1017, line: 209, column: 11)
!11743 = distinct !DILexicalBlock(scope: !11736, file: !1017, line: 208, column: 5)
!11744 = !DILocation(line: 209, column: 19, scope: !11742)
!11745 = !DILocation(line: 209, column: 11, scope: !11743)
!11746 = !DILocalVariable(name: "cursor", scope: !11747, file: !1017, line: 211, type: !1026)
!11747 = distinct !DILexicalBlock(scope: !11742, file: !1017, line: 210, column: 9)
!11748 = !DILocation(line: 211, column: 36, scope: !11747)
!11749 = !DILocation(line: 211, column: 45, scope: !11747)
!11750 = !DILocation(line: 214, column: 25, scope: !11747)
!11751 = !DILocation(line: 215, column: 20, scope: !11747)
!11752 = !DILocation(line: 218, column: 11, scope: !11747)
!11753 = !DILocation(line: 218, column: 27, scope: !11747)
!11754 = !DILocation(line: 218, column: 35, scope: !11747)
!11755 = !DILocation(line: 218, column: 25, scope: !11747)
!11756 = !DILocation(line: 218, column: 41, scope: !11747)
!11757 = !DILocation(line: 219, column: 22, scope: !11747)
!11758 = distinct !{!11758, !11752, !11757}
!11759 = !DILocation(line: 220, column: 9, scope: !11747)
!11760 = !DILocation(line: 221, column: 5, scope: !11743)
!11761 = !DILocation(line: 207, column: 68, scope: !11736)
!11762 = !DILocation(line: 207, column: 3, scope: !11736)
!11763 = distinct !{!11763, !11740, !11764}
!11764 = !DILocation(line: 221, column: 5, scope: !11731)
!11765 = !DILocation(line: 223, column: 7, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11721, file: !1017, line: 223, column: 7)
!11767 = !DILocation(line: 223, column: 25, scope: !11766)
!11768 = !DILocation(line: 223, column: 32, scope: !11766)
!11769 = !DILocation(line: 223, column: 22, scope: !11766)
!11770 = !DILocation(line: 223, column: 47, scope: !11766)
!11771 = !DILocation(line: 223, column: 50, scope: !11766)
!11772 = !DILocation(line: 223, column: 63, scope: !11766)
!11773 = !DILocation(line: 223, column: 70, scope: !11766)
!11774 = !DILocation(line: 223, column: 60, scope: !11766)
!11775 = !DILocation(line: 223, column: 7, scope: !11721)
!11776 = !DILocation(line: 224, column: 5, scope: !11766)
!11777 = !DILocation(line: 226, column: 3, scope: !11721)
!11778 = !DILocation(line: 227, column: 1, scope: !11721)
!11779 = distinct !DISubprogram(name: "hash_print_statistics", scope: !1017, file: !1017, line: 230, type: !1057, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11780 = !DILocalVariable(name: "table", arg: 1, scope: !11779, file: !1017, line: 230, type: !1013)
!11781 = !DILocation(line: 230, column: 42, scope: !11779)
!11782 = !DILocalVariable(name: "stream", arg: 2, scope: !11779, file: !1017, line: 230, type: !1059)
!11783 = !DILocation(line: 230, column: 55, scope: !11779)
!11784 = !DILocalVariable(name: "n_entries", scope: !11779, file: !1017, line: 232, type: !55)
!11785 = !DILocation(line: 232, column: 10, scope: !11779)
!11786 = !DILocation(line: 232, column: 42, scope: !11779)
!11787 = !DILocation(line: 232, column: 22, scope: !11779)
!11788 = !DILocalVariable(name: "n_buckets", scope: !11779, file: !1017, line: 233, type: !55)
!11789 = !DILocation(line: 233, column: 10, scope: !11779)
!11790 = !DILocation(line: 233, column: 42, scope: !11779)
!11791 = !DILocation(line: 233, column: 22, scope: !11779)
!11792 = !DILocalVariable(name: "n_buckets_used", scope: !11779, file: !1017, line: 234, type: !55)
!11793 = !DILocation(line: 234, column: 10, scope: !11779)
!11794 = !DILocation(line: 234, column: 52, scope: !11779)
!11795 = !DILocation(line: 234, column: 27, scope: !11779)
!11796 = !DILocalVariable(name: "max_bucket_length", scope: !11779, file: !1017, line: 235, type: !55)
!11797 = !DILocation(line: 235, column: 10, scope: !11779)
!11798 = !DILocation(line: 235, column: 58, scope: !11779)
!11799 = !DILocation(line: 235, column: 30, scope: !11779)
!11800 = !DILocation(line: 237, column: 12, scope: !11779)
!11801 = !DILocation(line: 237, column: 68, scope: !11779)
!11802 = !DILocation(line: 237, column: 3, scope: !11779)
!11803 = !DILocation(line: 238, column: 12, scope: !11779)
!11804 = !DILocation(line: 238, column: 68, scope: !11779)
!11805 = !DILocation(line: 238, column: 3, scope: !11779)
!11806 = !DILocation(line: 239, column: 12, scope: !11779)
!11807 = !DILocation(line: 240, column: 32, scope: !11779)
!11808 = !DILocation(line: 241, column: 21, scope: !11779)
!11809 = !DILocation(line: 241, column: 19, scope: !11779)
!11810 = !DILocation(line: 241, column: 39, scope: !11779)
!11811 = !DILocation(line: 241, column: 37, scope: !11779)
!11812 = !DILocation(line: 239, column: 3, scope: !11779)
!11813 = !DILocation(line: 242, column: 12, scope: !11779)
!11814 = !DILocation(line: 243, column: 32, scope: !11779)
!11815 = !DILocation(line: 242, column: 3, scope: !11779)
!11816 = !DILocation(line: 244, column: 1, scope: !11779)
!11817 = distinct !DISubprogram(name: "hash_lookup", scope: !1017, file: !1017, line: 261, type: !1093, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11818 = !DILocalVariable(name: "table", arg: 1, scope: !11817, file: !1017, line: 261, type: !1013)
!11819 = !DILocation(line: 261, column: 32, scope: !11817)
!11820 = !DILocalVariable(name: "entry", arg: 2, scope: !11817, file: !1017, line: 261, type: !339)
!11821 = !DILocation(line: 261, column: 51, scope: !11817)
!11822 = !DILocalVariable(name: "bucket", scope: !11817, file: !1017, line: 263, type: !1026)
!11823 = !DILocation(line: 263, column: 28, scope: !11817)
!11824 = !DILocation(line: 263, column: 50, scope: !11817)
!11825 = !DILocation(line: 263, column: 57, scope: !11817)
!11826 = !DILocation(line: 263, column: 37, scope: !11817)
!11827 = !DILocalVariable(name: "cursor", scope: !11817, file: !1017, line: 264, type: !1026)
!11828 = !DILocation(line: 264, column: 28, scope: !11817)
!11829 = !DILocation(line: 266, column: 7, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11817, file: !1017, line: 266, column: 7)
!11831 = !DILocation(line: 266, column: 15, scope: !11830)
!11832 = !DILocation(line: 266, column: 20, scope: !11830)
!11833 = !DILocation(line: 266, column: 7, scope: !11817)
!11834 = !DILocation(line: 267, column: 5, scope: !11830)
!11835 = !DILocation(line: 269, column: 17, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11817, file: !1017, line: 269, column: 3)
!11837 = !DILocation(line: 269, column: 15, scope: !11836)
!11838 = !DILocation(line: 269, column: 8, scope: !11836)
!11839 = !DILocation(line: 269, column: 25, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11836, file: !1017, line: 269, column: 3)
!11841 = !DILocation(line: 269, column: 3, scope: !11836)
!11842 = !DILocation(line: 270, column: 9, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11840, file: !1017, line: 270, column: 9)
!11844 = !DILocation(line: 270, column: 18, scope: !11843)
!11845 = !DILocation(line: 270, column: 26, scope: !11843)
!11846 = !DILocation(line: 270, column: 15, scope: !11843)
!11847 = !DILocation(line: 270, column: 31, scope: !11843)
!11848 = !DILocation(line: 270, column: 34, scope: !11843)
!11849 = !DILocation(line: 270, column: 41, scope: !11843)
!11850 = !{!11648, !2287, i64 56}
!11851 = !DILocation(line: 270, column: 53, scope: !11843)
!11852 = !DILocation(line: 270, column: 60, scope: !11843)
!11853 = !DILocation(line: 270, column: 68, scope: !11843)
!11854 = !DILocation(line: 270, column: 9, scope: !11840)
!11855 = !DILocation(line: 271, column: 14, scope: !11843)
!11856 = !DILocation(line: 271, column: 22, scope: !11843)
!11857 = !DILocation(line: 271, column: 7, scope: !11843)
!11858 = !DILocation(line: 270, column: 72, scope: !11843)
!11859 = !DILocation(line: 269, column: 42, scope: !11840)
!11860 = !DILocation(line: 269, column: 50, scope: !11840)
!11861 = !DILocation(line: 269, column: 40, scope: !11840)
!11862 = !DILocation(line: 269, column: 3, scope: !11840)
!11863 = distinct !{!11863, !11841, !11864}
!11864 = !DILocation(line: 271, column: 22, scope: !11836)
!11865 = !DILocation(line: 273, column: 3, scope: !11817)
!11866 = !DILocation(line: 274, column: 1, scope: !11817)
!11867 = distinct !DISubprogram(name: "safe_hasher", scope: !1017, file: !1017, line: 249, type: !1123, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11868 = !DILocalVariable(name: "table", arg: 1, scope: !11867, file: !1017, line: 249, type: !1013)
!11869 = !DILocation(line: 249, column: 32, scope: !11867)
!11870 = !DILocalVariable(name: "key", arg: 2, scope: !11867, file: !1017, line: 249, type: !339)
!11871 = !DILocation(line: 249, column: 51, scope: !11867)
!11872 = !DILocalVariable(name: "n", scope: !11867, file: !1017, line: 251, type: !55)
!11873 = !DILocation(line: 251, column: 10, scope: !11867)
!11874 = !DILocation(line: 251, column: 14, scope: !11867)
!11875 = !DILocation(line: 251, column: 21, scope: !11867)
!11876 = !{!11648, !2287, i64 48}
!11877 = !DILocation(line: 251, column: 29, scope: !11867)
!11878 = !DILocation(line: 251, column: 34, scope: !11867)
!11879 = !DILocation(line: 251, column: 41, scope: !11867)
!11880 = !DILocation(line: 252, column: 10, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11867, file: !1017, line: 252, column: 7)
!11882 = !DILocation(line: 252, column: 14, scope: !11881)
!11883 = !DILocation(line: 252, column: 21, scope: !11881)
!11884 = !DILocation(line: 252, column: 12, scope: !11881)
!11885 = !DILocation(line: 252, column: 7, scope: !11867)
!11886 = !DILocation(line: 253, column: 5, scope: !11881)
!11887 = !DILocation(line: 254, column: 10, scope: !11867)
!11888 = !DILocation(line: 254, column: 17, scope: !11867)
!11889 = !DILocation(line: 254, column: 26, scope: !11867)
!11890 = !DILocation(line: 254, column: 24, scope: !11867)
!11891 = !DILocation(line: 254, column: 3, scope: !11867)
!11892 = distinct !DISubprogram(name: "hash_get_first", scope: !1017, file: !1017, line: 288, type: !1095, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11893 = !DILocalVariable(name: "table", arg: 1, scope: !11892, file: !1017, line: 288, type: !1013)
!11894 = !DILocation(line: 288, column: 35, scope: !11892)
!11895 = !DILocalVariable(name: "bucket", scope: !11892, file: !1017, line: 290, type: !1026)
!11896 = !DILocation(line: 290, column: 28, scope: !11892)
!11897 = !DILocation(line: 292, column: 7, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11892, file: !1017, line: 292, column: 7)
!11899 = !DILocation(line: 292, column: 14, scope: !11898)
!11900 = !DILocation(line: 292, column: 24, scope: !11898)
!11901 = !DILocation(line: 292, column: 7, scope: !11892)
!11902 = !DILocation(line: 293, column: 5, scope: !11898)
!11903 = !DILocation(line: 295, column: 17, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11892, file: !1017, line: 295, column: 3)
!11905 = !DILocation(line: 295, column: 24, scope: !11904)
!11906 = !DILocation(line: 295, column: 15, scope: !11904)
!11907 = !DILocation(line: 295, column: 8, scope: !11904)
!11908 = !DILocation(line: 296, column: 12, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !1017, line: 296, column: 9)
!11910 = distinct !DILexicalBlock(scope: !11904, file: !1017, line: 295, column: 3)
!11911 = !DILocation(line: 296, column: 21, scope: !11909)
!11912 = !DILocation(line: 296, column: 28, scope: !11909)
!11913 = !DILocation(line: 296, column: 19, scope: !11909)
!11914 = !DILocation(line: 296, column: 9, scope: !11910)
!11915 = !DILocation(line: 297, column: 7, scope: !11909)
!11916 = !DILocation(line: 298, column: 14, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11909, file: !1017, line: 298, column: 14)
!11918 = !DILocation(line: 298, column: 22, scope: !11917)
!11919 = !DILocation(line: 298, column: 14, scope: !11909)
!11920 = !DILocation(line: 299, column: 14, scope: !11917)
!11921 = !DILocation(line: 299, column: 22, scope: !11917)
!11922 = !DILocation(line: 299, column: 7, scope: !11917)
!11923 = !DILocation(line: 296, column: 40, scope: !11909)
!11924 = !DILocation(line: 295, column: 40, scope: !11910)
!11925 = !DILocation(line: 295, column: 3, scope: !11910)
!11926 = distinct !{!11926, !11927, !11928}
!11927 = !DILocation(line: 295, column: 3, scope: !11904)
!11928 = !DILocation(line: 299, column: 22, scope: !11904)
!11929 = !DILocation(line: 300, column: 1, scope: !11892)
!11930 = distinct !DISubprogram(name: "hash_get_next", scope: !1017, file: !1017, line: 307, type: !1093, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11931 = !DILocalVariable(name: "table", arg: 1, scope: !11930, file: !1017, line: 307, type: !1013)
!11932 = !DILocation(line: 307, column: 34, scope: !11930)
!11933 = !DILocalVariable(name: "entry", arg: 2, scope: !11930, file: !1017, line: 307, type: !339)
!11934 = !DILocation(line: 307, column: 53, scope: !11930)
!11935 = !DILocalVariable(name: "bucket", scope: !11930, file: !1017, line: 309, type: !1026)
!11936 = !DILocation(line: 309, column: 28, scope: !11930)
!11937 = !DILocation(line: 309, column: 50, scope: !11930)
!11938 = !DILocation(line: 309, column: 57, scope: !11930)
!11939 = !DILocation(line: 309, column: 37, scope: !11930)
!11940 = !DILocalVariable(name: "cursor", scope: !11930, file: !1017, line: 310, type: !1026)
!11941 = !DILocation(line: 310, column: 28, scope: !11930)
!11942 = !DILocation(line: 313, column: 12, scope: !11930)
!11943 = !DILocation(line: 313, column: 10, scope: !11930)
!11944 = !DILocation(line: 314, column: 3, scope: !11930)
!11945 = !DILocation(line: 316, column: 11, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !1017, line: 316, column: 11)
!11947 = distinct !DILexicalBlock(scope: !11930, file: !1017, line: 315, column: 5)
!11948 = !DILocation(line: 316, column: 19, scope: !11946)
!11949 = !DILocation(line: 316, column: 27, scope: !11946)
!11950 = !DILocation(line: 316, column: 24, scope: !11946)
!11951 = !DILocation(line: 316, column: 33, scope: !11946)
!11952 = !DILocation(line: 316, column: 36, scope: !11946)
!11953 = !DILocation(line: 316, column: 44, scope: !11946)
!11954 = !DILocation(line: 316, column: 11, scope: !11947)
!11955 = !DILocation(line: 317, column: 16, scope: !11946)
!11956 = !DILocation(line: 317, column: 24, scope: !11946)
!11957 = !DILocation(line: 317, column: 30, scope: !11946)
!11958 = !DILocation(line: 317, column: 9, scope: !11946)
!11959 = !DILocation(line: 318, column: 16, scope: !11947)
!11960 = !DILocation(line: 318, column: 24, scope: !11947)
!11961 = !DILocation(line: 318, column: 14, scope: !11947)
!11962 = !DILocation(line: 319, column: 5, scope: !11947)
!11963 = !DILocation(line: 320, column: 10, scope: !11930)
!11964 = !DILocation(line: 320, column: 17, scope: !11930)
!11965 = distinct !{!11965, !11944, !11966}
!11966 = !DILocation(line: 320, column: 24, scope: !11930)
!11967 = !DILocation(line: 323, column: 3, scope: !11930)
!11968 = !DILocation(line: 323, column: 10, scope: !11930)
!11969 = !DILocation(line: 323, column: 21, scope: !11930)
!11970 = !DILocation(line: 323, column: 28, scope: !11930)
!11971 = !DILocation(line: 323, column: 19, scope: !11930)
!11972 = !DILocation(line: 324, column: 9, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11930, file: !1017, line: 324, column: 9)
!11974 = !DILocation(line: 324, column: 17, scope: !11973)
!11975 = !DILocation(line: 324, column: 9, scope: !11930)
!11976 = !DILocation(line: 325, column: 14, scope: !11973)
!11977 = !DILocation(line: 325, column: 22, scope: !11973)
!11978 = !DILocation(line: 325, column: 7, scope: !11973)
!11979 = distinct !{!11979, !11967, !11980}
!11980 = !DILocation(line: 325, column: 22, scope: !11930)
!11981 = !DILocation(line: 328, column: 3, scope: !11930)
!11982 = !DILocation(line: 329, column: 1, scope: !11930)
!11983 = distinct !DISubprogram(name: "hash_get_entries", scope: !1017, file: !1017, line: 336, type: !1097, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!11984 = !DILocalVariable(name: "table", arg: 1, scope: !11983, file: !1017, line: 336, type: !1013)
!11985 = !DILocation(line: 336, column: 37, scope: !11983)
!11986 = !DILocalVariable(name: "buffer", arg: 2, scope: !11983, file: !1017, line: 336, type: !1099)
!11987 = !DILocation(line: 336, column: 51, scope: !11983)
!11988 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11983, file: !1017, line: 337, type: !55)
!11989 = !DILocation(line: 337, column: 26, scope: !11983)
!11990 = !DILocalVariable(name: "counter", scope: !11983, file: !1017, line: 339, type: !55)
!11991 = !DILocation(line: 339, column: 10, scope: !11983)
!11992 = !DILocalVariable(name: "bucket", scope: !11983, file: !1017, line: 340, type: !1026)
!11993 = !DILocation(line: 340, column: 28, scope: !11983)
!11994 = !DILocalVariable(name: "cursor", scope: !11983, file: !1017, line: 341, type: !1026)
!11995 = !DILocation(line: 341, column: 28, scope: !11983)
!11996 = !DILocation(line: 343, column: 17, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11983, file: !1017, line: 343, column: 3)
!11998 = !DILocation(line: 343, column: 24, scope: !11997)
!11999 = !DILocation(line: 343, column: 15, scope: !11997)
!12000 = !DILocation(line: 343, column: 8, scope: !11997)
!12001 = !DILocation(line: 343, column: 32, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11997, file: !1017, line: 343, column: 3)
!12003 = !DILocation(line: 343, column: 41, scope: !12002)
!12004 = !DILocation(line: 343, column: 48, scope: !12002)
!12005 = !DILocation(line: 343, column: 39, scope: !12002)
!12006 = !DILocation(line: 343, column: 3, scope: !11997)
!12007 = !DILocation(line: 345, column: 11, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12009, file: !1017, line: 345, column: 11)
!12009 = distinct !DILexicalBlock(scope: !12002, file: !1017, line: 344, column: 5)
!12010 = !DILocation(line: 345, column: 19, scope: !12008)
!12011 = !DILocation(line: 345, column: 11, scope: !12009)
!12012 = !DILocation(line: 347, column: 25, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !1017, line: 347, column: 11)
!12014 = distinct !DILexicalBlock(scope: !12008, file: !1017, line: 346, column: 9)
!12015 = !DILocation(line: 347, column: 23, scope: !12013)
!12016 = !DILocation(line: 347, column: 16, scope: !12013)
!12017 = !DILocation(line: 347, column: 33, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12013, file: !1017, line: 347, column: 11)
!12019 = !DILocation(line: 347, column: 11, scope: !12013)
!12020 = !DILocation(line: 349, column: 19, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !1017, line: 349, column: 19)
!12022 = distinct !DILexicalBlock(scope: !12018, file: !1017, line: 348, column: 13)
!12023 = !DILocation(line: 349, column: 30, scope: !12021)
!12024 = !DILocation(line: 349, column: 27, scope: !12021)
!12025 = !DILocation(line: 349, column: 19, scope: !12022)
!12026 = !DILocation(line: 350, column: 24, scope: !12021)
!12027 = !DILocation(line: 350, column: 17, scope: !12021)
!12028 = !DILocation(line: 351, column: 35, scope: !12022)
!12029 = !DILocation(line: 351, column: 43, scope: !12022)
!12030 = !DILocation(line: 351, column: 15, scope: !12022)
!12031 = !DILocation(line: 351, column: 29, scope: !12022)
!12032 = !DILocation(line: 351, column: 33, scope: !12022)
!12033 = !DILocation(line: 352, column: 13, scope: !12022)
!12034 = !DILocation(line: 347, column: 50, scope: !12018)
!12035 = !DILocation(line: 347, column: 58, scope: !12018)
!12036 = !DILocation(line: 347, column: 48, scope: !12018)
!12037 = !DILocation(line: 347, column: 11, scope: !12018)
!12038 = distinct !{!12038, !12019, !12039}
!12039 = !DILocation(line: 352, column: 13, scope: !12013)
!12040 = !DILocation(line: 353, column: 9, scope: !12014)
!12041 = !DILocation(line: 354, column: 5, scope: !12009)
!12042 = !DILocation(line: 343, column: 68, scope: !12002)
!12043 = !DILocation(line: 343, column: 3, scope: !12002)
!12044 = distinct !{!12044, !12006, !12045}
!12045 = !DILocation(line: 354, column: 5, scope: !11997)
!12046 = !DILocation(line: 356, column: 10, scope: !11983)
!12047 = !DILocation(line: 356, column: 3, scope: !11983)
!12048 = !DILocation(line: 357, column: 1, scope: !11983)
!12049 = distinct !DISubprogram(name: "hash_do_for_each", scope: !1017, file: !1017, line: 368, type: !1100, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12050 = !DILocalVariable(name: "table", arg: 1, scope: !12049, file: !1017, line: 368, type: !1013)
!12051 = !DILocation(line: 368, column: 37, scope: !12049)
!12052 = !DILocalVariable(name: "processor", arg: 2, scope: !12049, file: !1017, line: 368, type: !1102)
!12053 = !DILocation(line: 368, column: 59, scope: !12049)
!12054 = !DILocalVariable(name: "processor_data", arg: 3, scope: !12049, file: !1017, line: 369, type: !53)
!12055 = !DILocation(line: 369, column: 25, scope: !12049)
!12056 = !DILocalVariable(name: "counter", scope: !12049, file: !1017, line: 371, type: !55)
!12057 = !DILocation(line: 371, column: 10, scope: !12049)
!12058 = !DILocalVariable(name: "bucket", scope: !12049, file: !1017, line: 372, type: !1026)
!12059 = !DILocation(line: 372, column: 28, scope: !12049)
!12060 = !DILocalVariable(name: "cursor", scope: !12049, file: !1017, line: 373, type: !1026)
!12061 = !DILocation(line: 373, column: 28, scope: !12049)
!12062 = !DILocation(line: 375, column: 17, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12049, file: !1017, line: 375, column: 3)
!12064 = !DILocation(line: 375, column: 24, scope: !12063)
!12065 = !DILocation(line: 375, column: 15, scope: !12063)
!12066 = !DILocation(line: 375, column: 8, scope: !12063)
!12067 = !DILocation(line: 375, column: 32, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12063, file: !1017, line: 375, column: 3)
!12069 = !DILocation(line: 375, column: 41, scope: !12068)
!12070 = !DILocation(line: 375, column: 48, scope: !12068)
!12071 = !DILocation(line: 375, column: 39, scope: !12068)
!12072 = !DILocation(line: 375, column: 3, scope: !12063)
!12073 = !DILocation(line: 377, column: 11, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !1017, line: 377, column: 11)
!12075 = distinct !DILexicalBlock(scope: !12068, file: !1017, line: 376, column: 5)
!12076 = !DILocation(line: 377, column: 19, scope: !12074)
!12077 = !DILocation(line: 377, column: 11, scope: !12075)
!12078 = !DILocation(line: 379, column: 25, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !1017, line: 379, column: 11)
!12080 = distinct !DILexicalBlock(scope: !12074, file: !1017, line: 378, column: 9)
!12081 = !DILocation(line: 379, column: 23, scope: !12079)
!12082 = !DILocation(line: 379, column: 16, scope: !12079)
!12083 = !DILocation(line: 379, column: 33, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12079, file: !1017, line: 379, column: 11)
!12085 = !DILocation(line: 379, column: 11, scope: !12079)
!12086 = !DILocation(line: 381, column: 21, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !1017, line: 381, column: 19)
!12088 = distinct !DILexicalBlock(scope: !12084, file: !1017, line: 380, column: 13)
!12089 = !DILocation(line: 381, column: 32, scope: !12087)
!12090 = !DILocation(line: 381, column: 40, scope: !12087)
!12091 = !DILocation(line: 381, column: 46, scope: !12087)
!12092 = !DILocation(line: 381, column: 19, scope: !12088)
!12093 = !DILocation(line: 382, column: 24, scope: !12087)
!12094 = !DILocation(line: 382, column: 17, scope: !12087)
!12095 = !DILocation(line: 383, column: 22, scope: !12088)
!12096 = !DILocation(line: 384, column: 13, scope: !12088)
!12097 = !DILocation(line: 379, column: 50, scope: !12084)
!12098 = !DILocation(line: 379, column: 58, scope: !12084)
!12099 = !DILocation(line: 379, column: 48, scope: !12084)
!12100 = !DILocation(line: 379, column: 11, scope: !12084)
!12101 = distinct !{!12101, !12085, !12102}
!12102 = !DILocation(line: 384, column: 13, scope: !12079)
!12103 = !DILocation(line: 385, column: 9, scope: !12080)
!12104 = !DILocation(line: 386, column: 5, scope: !12075)
!12105 = !DILocation(line: 375, column: 68, scope: !12068)
!12106 = !DILocation(line: 375, column: 3, scope: !12068)
!12107 = distinct !{!12107, !12072, !12108}
!12108 = !DILocation(line: 386, column: 5, scope: !12063)
!12109 = !DILocation(line: 388, column: 10, scope: !12049)
!12110 = !DILocation(line: 388, column: 3, scope: !12049)
!12111 = !DILocation(line: 389, column: 1, scope: !12049)
!12112 = distinct !DISubprogram(name: "hash_string", scope: !1017, file: !1017, line: 428, type: !1106, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12113 = !DILocalVariable(name: "string", arg: 1, scope: !12112, file: !1017, line: 428, type: !88)
!12114 = !DILocation(line: 428, column: 26, scope: !12112)
!12115 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12112, file: !1017, line: 428, type: !55)
!12116 = !DILocation(line: 428, column: 41, scope: !12112)
!12117 = !DILocalVariable(name: "value", scope: !12112, file: !1017, line: 430, type: !55)
!12118 = !DILocation(line: 430, column: 10, scope: !12112)
!12119 = !DILocalVariable(name: "ch", scope: !12112, file: !1017, line: 431, type: !321)
!12120 = !DILocation(line: 431, column: 17, scope: !12112)
!12121 = !DILocation(line: 433, column: 3, scope: !12112)
!12122 = !DILocation(line: 433, column: 17, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !1017, line: 433, column: 3)
!12124 = distinct !DILexicalBlock(scope: !12112, file: !1017, line: 433, column: 3)
!12125 = !DILocation(line: 433, column: 16, scope: !12123)
!12126 = !DILocation(line: 433, column: 14, scope: !12123)
!12127 = !DILocation(line: 433, column: 3, scope: !12124)
!12128 = !DILocation(line: 434, column: 14, scope: !12123)
!12129 = !DILocation(line: 434, column: 20, scope: !12123)
!12130 = !DILocation(line: 434, column: 27, scope: !12123)
!12131 = !DILocation(line: 434, column: 25, scope: !12123)
!12132 = !DILocation(line: 434, column: 33, scope: !12123)
!12133 = !DILocation(line: 434, column: 31, scope: !12123)
!12134 = !DILocation(line: 434, column: 11, scope: !12123)
!12135 = !DILocation(line: 434, column: 5, scope: !12123)
!12136 = !DILocation(line: 433, column: 32, scope: !12123)
!12137 = !DILocation(line: 433, column: 3, scope: !12123)
!12138 = distinct !{!12138, !12127, !12139}
!12139 = !DILocation(line: 434, column: 33, scope: !12124)
!12140 = !DILocation(line: 435, column: 10, scope: !12112)
!12141 = !DILocation(line: 435, column: 3, scope: !12112)
!12142 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !1017, file: !1017, line: 479, type: !1108, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12143 = !DILocalVariable(name: "tuning", arg: 1, scope: !12142, file: !1017, line: 479, type: !1110)
!12144 = !DILocation(line: 479, column: 33, scope: !12142)
!12145 = !DILocation(line: 481, column: 4, scope: !12142)
!12146 = !DILocation(line: 481, column: 13, scope: !12142)
!12147 = !{i64 0, i64 4, !12148, i64 4, i64 4, !12148, i64 8, i64 4, !12148, i64 12, i64 4, !12148, i64 16, i64 1, !2430}
!12148 = !{!12149, !12149, i64 0}
!12149 = !{!"float", !2275, i64 0}
!12150 = !DILocation(line: 482, column: 1, scope: !12142)
!12151 = distinct !DISubprogram(name: "hash_initialize", scope: !1017, file: !1017, line: 594, type: !1111, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12152 = !DILocalVariable(name: "candidate", arg: 1, scope: !12151, file: !1017, line: 594, type: !55)
!12153 = !DILocation(line: 594, column: 25, scope: !12151)
!12154 = !DILocalVariable(name: "tuning", arg: 2, scope: !12151, file: !1017, line: 594, type: !1032)
!12155 = !DILocation(line: 594, column: 55, scope: !12151)
!12156 = !DILocalVariable(name: "hasher", arg: 3, scope: !12151, file: !1017, line: 595, type: !1044)
!12157 = !DILocation(line: 595, column: 30, scope: !12151)
!12158 = !DILocalVariable(name: "comparator", arg: 4, scope: !12151, file: !1017, line: 595, type: !1047)
!12159 = !DILocation(line: 595, column: 54, scope: !12151)
!12160 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12151, file: !1017, line: 596, type: !1050)
!12161 = !DILocation(line: 596, column: 34, scope: !12151)
!12162 = !DILocalVariable(name: "table", scope: !12151, file: !1017, line: 598, type: !1113)
!12163 = !DILocation(line: 598, column: 15, scope: !12151)
!12164 = !DILocation(line: 600, column: 7, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 600, column: 7)
!12166 = !DILocation(line: 600, column: 14, scope: !12165)
!12167 = !DILocation(line: 600, column: 7, scope: !12151)
!12168 = !DILocation(line: 601, column: 12, scope: !12165)
!12169 = !DILocation(line: 601, column: 5, scope: !12165)
!12170 = !DILocation(line: 602, column: 7, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 602, column: 7)
!12172 = !DILocation(line: 602, column: 18, scope: !12171)
!12173 = !DILocation(line: 602, column: 7, scope: !12151)
!12174 = !DILocation(line: 603, column: 16, scope: !12171)
!12175 = !DILocation(line: 603, column: 5, scope: !12171)
!12176 = !DILocation(line: 605, column: 11, scope: !12151)
!12177 = !DILocation(line: 605, column: 9, scope: !12151)
!12178 = !DILocation(line: 606, column: 7, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 606, column: 7)
!12180 = !DILocation(line: 606, column: 13, scope: !12179)
!12181 = !DILocation(line: 606, column: 7, scope: !12151)
!12182 = !DILocation(line: 607, column: 5, scope: !12179)
!12183 = !DILocation(line: 609, column: 8, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 609, column: 7)
!12185 = !DILocation(line: 609, column: 7, scope: !12151)
!12186 = !DILocation(line: 610, column: 12, scope: !12184)
!12187 = !DILocation(line: 610, column: 5, scope: !12184)
!12188 = !DILocation(line: 611, column: 19, scope: !12151)
!12189 = !DILocation(line: 611, column: 3, scope: !12151)
!12190 = !DILocation(line: 611, column: 10, scope: !12151)
!12191 = !DILocation(line: 611, column: 17, scope: !12151)
!12192 = !{!11648, !2287, i64 40}
!12193 = !DILocation(line: 612, column: 22, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 612, column: 7)
!12195 = !DILocation(line: 612, column: 8, scope: !12194)
!12196 = !DILocation(line: 612, column: 7, scope: !12151)
!12197 = !DILocation(line: 619, column: 7, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12194, file: !1017, line: 613, column: 5)
!12199 = !DILocation(line: 622, column: 43, scope: !12151)
!12200 = !DILocation(line: 622, column: 54, scope: !12151)
!12201 = !DILocation(line: 622, column: 22, scope: !12151)
!12202 = !DILocation(line: 622, column: 3, scope: !12151)
!12203 = !DILocation(line: 622, column: 10, scope: !12151)
!12204 = !DILocation(line: 622, column: 20, scope: !12151)
!12205 = !DILocation(line: 623, column: 8, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 623, column: 7)
!12207 = !DILocation(line: 623, column: 15, scope: !12206)
!12208 = !DILocation(line: 623, column: 7, scope: !12151)
!12209 = !DILocation(line: 624, column: 5, scope: !12206)
!12210 = !DILocation(line: 626, column: 27, scope: !12151)
!12211 = !DILocation(line: 626, column: 34, scope: !12151)
!12212 = !DILocation(line: 626, column: 19, scope: !12151)
!12213 = !DILocation(line: 626, column: 3, scope: !12151)
!12214 = !DILocation(line: 626, column: 10, scope: !12151)
!12215 = !DILocation(line: 626, column: 17, scope: !12151)
!12216 = !DILocation(line: 627, column: 7, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12151, file: !1017, line: 627, column: 7)
!12218 = !DILocation(line: 627, column: 14, scope: !12217)
!12219 = !DILocation(line: 627, column: 21, scope: !12217)
!12220 = !DILocation(line: 627, column: 7, scope: !12151)
!12221 = !DILocation(line: 628, column: 5, scope: !12217)
!12222 = !DILocation(line: 629, column: 25, scope: !12151)
!12223 = !DILocation(line: 629, column: 32, scope: !12151)
!12224 = !DILocation(line: 629, column: 41, scope: !12151)
!12225 = !DILocation(line: 629, column: 48, scope: !12151)
!12226 = !DILocation(line: 629, column: 39, scope: !12151)
!12227 = !DILocation(line: 629, column: 3, scope: !12151)
!12228 = !DILocation(line: 629, column: 10, scope: !12151)
!12229 = !DILocation(line: 629, column: 23, scope: !12151)
!12230 = !DILocation(line: 630, column: 3, scope: !12151)
!12231 = !DILocation(line: 630, column: 10, scope: !12151)
!12232 = !DILocation(line: 630, column: 25, scope: !12151)
!12233 = !DILocation(line: 631, column: 3, scope: !12151)
!12234 = !DILocation(line: 631, column: 10, scope: !12151)
!12235 = !DILocation(line: 631, column: 20, scope: !12151)
!12236 = !DILocation(line: 633, column: 19, scope: !12151)
!12237 = !DILocation(line: 633, column: 3, scope: !12151)
!12238 = !DILocation(line: 633, column: 10, scope: !12151)
!12239 = !DILocation(line: 633, column: 17, scope: !12151)
!12240 = !DILocation(line: 634, column: 23, scope: !12151)
!12241 = !DILocation(line: 634, column: 3, scope: !12151)
!12242 = !DILocation(line: 634, column: 10, scope: !12151)
!12243 = !DILocation(line: 634, column: 21, scope: !12151)
!12244 = !DILocation(line: 635, column: 23, scope: !12151)
!12245 = !DILocation(line: 635, column: 3, scope: !12151)
!12246 = !DILocation(line: 635, column: 10, scope: !12151)
!12247 = !DILocation(line: 635, column: 21, scope: !12151)
!12248 = !{!11648, !2287, i64 64}
!12249 = !DILocation(line: 637, column: 3, scope: !12151)
!12250 = !DILocation(line: 637, column: 10, scope: !12151)
!12251 = !DILocation(line: 637, column: 26, scope: !12151)
!12252 = !{!11648, !2287, i64 72}
!12253 = !DILocation(line: 641, column: 10, scope: !12151)
!12254 = !DILocation(line: 641, column: 3, scope: !12151)
!12255 = !DILabel(scope: !12151, name: "fail", file: !1017, line: 643)
!12256 = !DILocation(line: 643, column: 2, scope: !12151)
!12257 = !DILocation(line: 644, column: 9, scope: !12151)
!12258 = !DILocation(line: 644, column: 3, scope: !12151)
!12259 = !DILocation(line: 645, column: 3, scope: !12151)
!12260 = !DILocation(line: 646, column: 1, scope: !12151)
!12261 = distinct !DISubprogram(name: "raw_hasher", scope: !1017, file: !1017, line: 486, type: !562, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12262 = !DILocalVariable(name: "data", arg: 1, scope: !12261, file: !1017, line: 486, type: !339)
!12263 = !DILocation(line: 486, column: 25, scope: !12261)
!12264 = !DILocalVariable(name: "n", arg: 2, scope: !12261, file: !1017, line: 486, type: !55)
!12265 = !DILocation(line: 486, column: 38, scope: !12261)
!12266 = !DILocalVariable(name: "val", scope: !12261, file: !1017, line: 493, type: !55)
!12267 = !DILocation(line: 493, column: 10, scope: !12261)
!12268 = !DILocation(line: 493, column: 34, scope: !12261)
!12269 = !DILocation(line: 493, column: 25, scope: !12261)
!12270 = !DILocation(line: 493, column: 16, scope: !12261)
!12271 = !DILocation(line: 494, column: 10, scope: !12261)
!12272 = !DILocation(line: 494, column: 16, scope: !12261)
!12273 = !DILocation(line: 494, column: 14, scope: !12261)
!12274 = !DILocation(line: 494, column: 3, scope: !12261)
!12275 = distinct !DISubprogram(name: "raw_comparator", scope: !1017, file: !1017, line: 499, type: !564, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12276 = !DILocalVariable(name: "a", arg: 1, scope: !12275, file: !1017, line: 499, type: !339)
!12277 = !DILocation(line: 499, column: 29, scope: !12275)
!12278 = !DILocalVariable(name: "b", arg: 2, scope: !12275, file: !1017, line: 499, type: !339)
!12279 = !DILocation(line: 499, column: 44, scope: !12275)
!12280 = !DILocation(line: 501, column: 10, scope: !12275)
!12281 = !DILocation(line: 501, column: 15, scope: !12275)
!12282 = !DILocation(line: 501, column: 12, scope: !12275)
!12283 = !DILocation(line: 501, column: 3, scope: !12275)
!12284 = distinct !DISubprogram(name: "check_tuning", scope: !1017, file: !1017, line: 512, type: !1125, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12285 = !DILocalVariable(name: "table", arg: 1, scope: !12284, file: !1017, line: 512, type: !1113)
!12286 = !DILocation(line: 512, column: 27, scope: !12284)
!12287 = !DILocalVariable(name: "tuning", scope: !12284, file: !1017, line: 514, type: !1032)
!12288 = !DILocation(line: 514, column: 22, scope: !12284)
!12289 = !DILocation(line: 514, column: 31, scope: !12284)
!12290 = !DILocation(line: 514, column: 38, scope: !12284)
!12291 = !DILocalVariable(name: "epsilon", scope: !12284, file: !1017, line: 515, type: !1038)
!12292 = !DILocation(line: 515, column: 9, scope: !12284)
!12293 = !DILocation(line: 516, column: 7, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12284, file: !1017, line: 516, column: 7)
!12295 = !DILocation(line: 516, column: 14, scope: !12294)
!12296 = !DILocation(line: 516, column: 7, scope: !12284)
!12297 = !DILocation(line: 517, column: 5, scope: !12294)
!12298 = !DILocation(line: 524, column: 11, scope: !12284)
!12299 = !DILocation(line: 526, column: 7, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12284, file: !1017, line: 526, column: 7)
!12301 = !DILocation(line: 526, column: 17, scope: !12300)
!12302 = !DILocation(line: 526, column: 25, scope: !12300)
!12303 = !{!12304, !12149, i64 8}
!12304 = !{!"hash_tuning", !12149, i64 0, !12149, i64 4, !12149, i64 8, !12149, i64 12, !2431, i64 16}
!12305 = !DILocation(line: 526, column: 15, scope: !12300)
!12306 = !DILocation(line: 527, column: 7, scope: !12300)
!12307 = !DILocation(line: 527, column: 10, scope: !12300)
!12308 = !DILocation(line: 527, column: 18, scope: !12300)
!12309 = !DILocation(line: 527, column: 41, scope: !12300)
!12310 = !DILocation(line: 527, column: 39, scope: !12300)
!12311 = !DILocation(line: 527, column: 35, scope: !12300)
!12312 = !DILocation(line: 528, column: 7, scope: !12300)
!12313 = !DILocation(line: 528, column: 14, scope: !12300)
!12314 = !DILocation(line: 528, column: 12, scope: !12300)
!12315 = !DILocation(line: 528, column: 24, scope: !12300)
!12316 = !DILocation(line: 528, column: 32, scope: !12300)
!12317 = !{!12304, !12149, i64 12}
!12318 = !DILocation(line: 528, column: 22, scope: !12300)
!12319 = !DILocation(line: 529, column: 7, scope: !12300)
!12320 = !DILocation(line: 529, column: 15, scope: !12300)
!12321 = !DILocation(line: 529, column: 23, scope: !12300)
!12322 = !{!12304, !12149, i64 0}
!12323 = !DILocation(line: 529, column: 12, scope: !12300)
!12324 = !DILocation(line: 530, column: 7, scope: !12300)
!12325 = !DILocation(line: 530, column: 10, scope: !12300)
!12326 = !DILocation(line: 530, column: 18, scope: !12300)
!12327 = !DILocation(line: 530, column: 37, scope: !12300)
!12328 = !DILocation(line: 530, column: 35, scope: !12300)
!12329 = !DILocation(line: 530, column: 47, scope: !12300)
!12330 = !DILocation(line: 530, column: 55, scope: !12300)
!12331 = !{!12304, !12149, i64 4}
!12332 = !DILocation(line: 530, column: 45, scope: !12300)
!12333 = !DILocation(line: 531, column: 7, scope: !12300)
!12334 = !DILocation(line: 531, column: 10, scope: !12300)
!12335 = !DILocation(line: 531, column: 18, scope: !12300)
!12336 = !DILocation(line: 531, column: 32, scope: !12300)
!12337 = !DILocation(line: 532, column: 7, scope: !12300)
!12338 = !DILocation(line: 532, column: 10, scope: !12300)
!12339 = !DILocation(line: 532, column: 18, scope: !12300)
!12340 = !DILocation(line: 532, column: 37, scope: !12300)
!12341 = !DILocation(line: 532, column: 35, scope: !12300)
!12342 = !DILocation(line: 532, column: 47, scope: !12300)
!12343 = !DILocation(line: 532, column: 55, scope: !12300)
!12344 = !DILocation(line: 532, column: 45, scope: !12300)
!12345 = !DILocation(line: 526, column: 7, scope: !12284)
!12346 = !DILocation(line: 533, column: 5, scope: !12300)
!12347 = !DILocation(line: 535, column: 3, scope: !12284)
!12348 = !DILocation(line: 535, column: 10, scope: !12284)
!12349 = !DILocation(line: 535, column: 17, scope: !12284)
!12350 = !DILocation(line: 536, column: 3, scope: !12284)
!12351 = !DILocation(line: 537, column: 1, scope: !12284)
!12352 = distinct !DISubprogram(name: "compute_bucket_size", scope: !1017, file: !1017, line: 544, type: !1127, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12353 = !DILocalVariable(name: "candidate", arg: 1, scope: !12352, file: !1017, line: 544, type: !55)
!12354 = !DILocation(line: 544, column: 29, scope: !12352)
!12355 = !DILocalVariable(name: "tuning", arg: 2, scope: !12352, file: !1017, line: 544, type: !1032)
!12356 = !DILocation(line: 544, column: 59, scope: !12352)
!12357 = !DILocation(line: 546, column: 8, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12352, file: !1017, line: 546, column: 7)
!12359 = !DILocation(line: 546, column: 16, scope: !12358)
!12360 = !{!12304, !2431, i64 16}
!12361 = !DILocation(line: 546, column: 7, scope: !12352)
!12362 = !DILocalVariable(name: "new_candidate", scope: !12363, file: !1017, line: 548, type: !1038)
!12363 = distinct !DILexicalBlock(scope: !12358, file: !1017, line: 547, column: 5)
!12364 = !DILocation(line: 548, column: 13, scope: !12363)
!12365 = !DILocation(line: 548, column: 29, scope: !12363)
!12366 = !DILocation(line: 548, column: 41, scope: !12363)
!12367 = !DILocation(line: 548, column: 49, scope: !12363)
!12368 = !DILocation(line: 548, column: 39, scope: !12363)
!12369 = !DILocation(line: 549, column: 23, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12363, file: !1017, line: 549, column: 11)
!12371 = !DILocation(line: 549, column: 20, scope: !12370)
!12372 = !DILocation(line: 549, column: 11, scope: !12363)
!12373 = !DILocation(line: 550, column: 9, scope: !12370)
!12374 = !DILocation(line: 551, column: 19, scope: !12363)
!12375 = !DILocation(line: 551, column: 17, scope: !12363)
!12376 = !DILocation(line: 552, column: 5, scope: !12363)
!12377 = !DILocation(line: 553, column: 27, scope: !12352)
!12378 = !DILocation(line: 553, column: 15, scope: !12352)
!12379 = !DILocation(line: 553, column: 13, scope: !12352)
!12380 = !DILocation(line: 554, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12352, file: !1017, line: 554, column: 7)
!12382 = !DILocation(line: 554, column: 7, scope: !12352)
!12383 = !DILocation(line: 555, column: 5, scope: !12381)
!12384 = !DILocation(line: 556, column: 10, scope: !12352)
!12385 = !DILocation(line: 556, column: 3, scope: !12352)
!12386 = !DILocation(line: 557, column: 1, scope: !12352)
!12387 = distinct !DISubprogram(name: "next_prime", scope: !1017, file: !1017, line: 463, type: !1129, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12388 = !DILocalVariable(name: "candidate", arg: 1, scope: !12387, file: !1017, line: 463, type: !55)
!12389 = !DILocation(line: 463, column: 20, scope: !12387)
!12390 = !DILocation(line: 466, column: 7, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12387, file: !1017, line: 466, column: 7)
!12392 = !DILocation(line: 466, column: 17, scope: !12391)
!12393 = !DILocation(line: 466, column: 7, scope: !12387)
!12394 = !DILocation(line: 467, column: 15, scope: !12391)
!12395 = !DILocation(line: 467, column: 5, scope: !12391)
!12396 = !DILocation(line: 470, column: 13, scope: !12387)
!12397 = !DILocation(line: 472, column: 3, scope: !12387)
!12398 = !DILocation(line: 472, column: 22, scope: !12387)
!12399 = !DILocation(line: 472, column: 19, scope: !12387)
!12400 = !DILocation(line: 472, column: 32, scope: !12387)
!12401 = !DILocation(line: 472, column: 46, scope: !12387)
!12402 = !DILocation(line: 472, column: 36, scope: !12387)
!12403 = !DILocation(line: 472, column: 35, scope: !12387)
!12404 = !DILocation(line: 0, scope: !12387)
!12405 = !DILocation(line: 473, column: 15, scope: !12387)
!12406 = distinct !{!12406, !12397, !12407}
!12407 = !DILocation(line: 473, column: 18, scope: !12387)
!12408 = !DILocation(line: 475, column: 10, scope: !12387)
!12409 = !DILocation(line: 475, column: 3, scope: !12387)
!12410 = distinct !DISubprogram(name: "is_prime", scope: !1017, file: !1017, line: 444, type: !1131, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12411 = !DILocalVariable(name: "candidate", arg: 1, scope: !12410, file: !1017, line: 444, type: !55)
!12412 = !DILocation(line: 444, column: 18, scope: !12410)
!12413 = !DILocalVariable(name: "divisor", scope: !12410, file: !1017, line: 446, type: !55)
!12414 = !DILocation(line: 446, column: 10, scope: !12410)
!12415 = !DILocalVariable(name: "square", scope: !12410, file: !1017, line: 447, type: !55)
!12416 = !DILocation(line: 447, column: 10, scope: !12410)
!12417 = !DILocation(line: 447, column: 19, scope: !12410)
!12418 = !DILocation(line: 447, column: 29, scope: !12410)
!12419 = !DILocation(line: 447, column: 27, scope: !12410)
!12420 = !DILocation(line: 449, column: 3, scope: !12410)
!12421 = !DILocation(line: 449, column: 10, scope: !12410)
!12422 = !DILocation(line: 449, column: 19, scope: !12410)
!12423 = !DILocation(line: 449, column: 17, scope: !12410)
!12424 = !DILocation(line: 449, column: 29, scope: !12410)
!12425 = !DILocation(line: 449, column: 33, scope: !12410)
!12426 = !DILocation(line: 449, column: 45, scope: !12410)
!12427 = !DILocation(line: 449, column: 43, scope: !12410)
!12428 = !DILocation(line: 0, scope: !12410)
!12429 = !DILocation(line: 451, column: 14, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12410, file: !1017, line: 450, column: 5)
!12431 = !DILocation(line: 452, column: 21, scope: !12430)
!12432 = !DILocation(line: 452, column: 19, scope: !12430)
!12433 = !DILocation(line: 452, column: 14, scope: !12430)
!12434 = !DILocation(line: 453, column: 14, scope: !12430)
!12435 = distinct !{!12435, !12420, !12436}
!12436 = !DILocation(line: 454, column: 5, scope: !12410)
!12437 = !DILocation(line: 456, column: 11, scope: !12410)
!12438 = !DILocation(line: 456, column: 23, scope: !12410)
!12439 = !DILocation(line: 456, column: 21, scope: !12410)
!12440 = !DILocation(line: 456, column: 10, scope: !12410)
!12441 = !DILocation(line: 456, column: 3, scope: !12410)
!12442 = distinct !DISubprogram(name: "hash_clear", scope: !1017, file: !1017, line: 653, type: !1114, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12443 = !DILocalVariable(name: "table", arg: 1, scope: !12442, file: !1017, line: 653, type: !1113)
!12444 = !DILocation(line: 653, column: 25, scope: !12442)
!12445 = !DILocalVariable(name: "bucket", scope: !12442, file: !1017, line: 655, type: !1020)
!12446 = !DILocation(line: 655, column: 22, scope: !12442)
!12447 = !DILocation(line: 657, column: 17, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12442, file: !1017, line: 657, column: 3)
!12449 = !DILocation(line: 657, column: 24, scope: !12448)
!12450 = !DILocation(line: 657, column: 15, scope: !12448)
!12451 = !DILocation(line: 657, column: 8, scope: !12448)
!12452 = !DILocation(line: 657, column: 32, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12448, file: !1017, line: 657, column: 3)
!12454 = !DILocation(line: 657, column: 41, scope: !12453)
!12455 = !DILocation(line: 657, column: 48, scope: !12453)
!12456 = !DILocation(line: 657, column: 39, scope: !12453)
!12457 = !DILocation(line: 657, column: 3, scope: !12448)
!12458 = !DILocation(line: 659, column: 11, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12460, file: !1017, line: 659, column: 11)
!12460 = distinct !DILexicalBlock(scope: !12453, file: !1017, line: 658, column: 5)
!12461 = !DILocation(line: 659, column: 19, scope: !12459)
!12462 = !DILocation(line: 659, column: 11, scope: !12460)
!12463 = !DILocalVariable(name: "cursor", scope: !12464, file: !1017, line: 661, type: !1020)
!12464 = distinct !DILexicalBlock(scope: !12459, file: !1017, line: 660, column: 9)
!12465 = !DILocation(line: 661, column: 30, scope: !12464)
!12466 = !DILocalVariable(name: "next", scope: !12464, file: !1017, line: 662, type: !1020)
!12467 = !DILocation(line: 662, column: 30, scope: !12464)
!12468 = !DILocation(line: 665, column: 25, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12464, file: !1017, line: 665, column: 11)
!12470 = !DILocation(line: 665, column: 33, scope: !12469)
!12471 = !DILocation(line: 665, column: 23, scope: !12469)
!12472 = !DILocation(line: 665, column: 16, scope: !12469)
!12473 = !DILocation(line: 665, column: 39, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12469, file: !1017, line: 665, column: 11)
!12475 = !DILocation(line: 665, column: 11, scope: !12469)
!12476 = !DILocation(line: 667, column: 19, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !1017, line: 667, column: 19)
!12478 = distinct !DILexicalBlock(scope: !12474, file: !1017, line: 666, column: 13)
!12479 = !DILocation(line: 667, column: 26, scope: !12477)
!12480 = !DILocation(line: 667, column: 19, scope: !12478)
!12481 = !DILocation(line: 668, column: 17, scope: !12477)
!12482 = !DILocation(line: 668, column: 24, scope: !12477)
!12483 = !DILocation(line: 668, column: 36, scope: !12477)
!12484 = !DILocation(line: 668, column: 44, scope: !12477)
!12485 = !DILocation(line: 669, column: 15, scope: !12478)
!12486 = !DILocation(line: 669, column: 23, scope: !12478)
!12487 = !DILocation(line: 669, column: 28, scope: !12478)
!12488 = !DILocation(line: 671, column: 22, scope: !12478)
!12489 = !DILocation(line: 671, column: 30, scope: !12478)
!12490 = !DILocation(line: 671, column: 20, scope: !12478)
!12491 = !DILocation(line: 674, column: 30, scope: !12478)
!12492 = !DILocation(line: 674, column: 37, scope: !12478)
!12493 = !DILocation(line: 674, column: 15, scope: !12478)
!12494 = !DILocation(line: 674, column: 23, scope: !12478)
!12495 = !DILocation(line: 674, column: 28, scope: !12478)
!12496 = !DILocation(line: 675, column: 40, scope: !12478)
!12497 = !DILocation(line: 675, column: 15, scope: !12478)
!12498 = !DILocation(line: 675, column: 22, scope: !12478)
!12499 = !DILocation(line: 675, column: 38, scope: !12478)
!12500 = !DILocation(line: 676, column: 13, scope: !12478)
!12501 = !DILocation(line: 665, column: 56, scope: !12474)
!12502 = !DILocation(line: 665, column: 54, scope: !12474)
!12503 = !DILocation(line: 665, column: 11, scope: !12474)
!12504 = distinct !{!12504, !12475, !12505}
!12505 = !DILocation(line: 676, column: 13, scope: !12469)
!12506 = !DILocation(line: 679, column: 15, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12464, file: !1017, line: 679, column: 15)
!12508 = !DILocation(line: 679, column: 22, scope: !12507)
!12509 = !DILocation(line: 679, column: 15, scope: !12464)
!12510 = !DILocation(line: 680, column: 13, scope: !12507)
!12511 = !DILocation(line: 680, column: 20, scope: !12507)
!12512 = !DILocation(line: 680, column: 32, scope: !12507)
!12513 = !DILocation(line: 680, column: 40, scope: !12507)
!12514 = !DILocation(line: 681, column: 11, scope: !12464)
!12515 = !DILocation(line: 681, column: 19, scope: !12464)
!12516 = !DILocation(line: 681, column: 24, scope: !12464)
!12517 = !DILocation(line: 682, column: 11, scope: !12464)
!12518 = !DILocation(line: 682, column: 19, scope: !12464)
!12519 = !DILocation(line: 682, column: 24, scope: !12464)
!12520 = !DILocation(line: 683, column: 9, scope: !12464)
!12521 = !DILocation(line: 684, column: 5, scope: !12460)
!12522 = !DILocation(line: 657, column: 68, scope: !12453)
!12523 = !DILocation(line: 657, column: 3, scope: !12453)
!12524 = distinct !{!12524, !12457, !12525}
!12525 = !DILocation(line: 684, column: 5, scope: !12448)
!12526 = !DILocation(line: 686, column: 3, scope: !12442)
!12527 = !DILocation(line: 686, column: 10, scope: !12442)
!12528 = !DILocation(line: 686, column: 25, scope: !12442)
!12529 = !DILocation(line: 687, column: 3, scope: !12442)
!12530 = !DILocation(line: 687, column: 10, scope: !12442)
!12531 = !DILocation(line: 687, column: 20, scope: !12442)
!12532 = !DILocation(line: 688, column: 1, scope: !12442)
!12533 = distinct !DISubprogram(name: "hash_free", scope: !1017, file: !1017, line: 696, type: !1114, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12534 = !DILocalVariable(name: "table", arg: 1, scope: !12533, file: !1017, line: 696, type: !1113)
!12535 = !DILocation(line: 696, column: 24, scope: !12533)
!12536 = !DILocalVariable(name: "bucket", scope: !12533, file: !1017, line: 698, type: !1020)
!12537 = !DILocation(line: 698, column: 22, scope: !12533)
!12538 = !DILocalVariable(name: "cursor", scope: !12533, file: !1017, line: 699, type: !1020)
!12539 = !DILocation(line: 699, column: 22, scope: !12533)
!12540 = !DILocalVariable(name: "next", scope: !12533, file: !1017, line: 700, type: !1020)
!12541 = !DILocation(line: 700, column: 22, scope: !12533)
!12542 = !DILocation(line: 703, column: 7, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12533, file: !1017, line: 703, column: 7)
!12544 = !DILocation(line: 703, column: 14, scope: !12543)
!12545 = !DILocation(line: 703, column: 25, scope: !12543)
!12546 = !DILocation(line: 703, column: 28, scope: !12543)
!12547 = !DILocation(line: 703, column: 35, scope: !12543)
!12548 = !DILocation(line: 703, column: 7, scope: !12533)
!12549 = !DILocation(line: 705, column: 21, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !1017, line: 705, column: 7)
!12551 = distinct !DILexicalBlock(scope: !12543, file: !1017, line: 704, column: 5)
!12552 = !DILocation(line: 705, column: 28, scope: !12550)
!12553 = !DILocation(line: 705, column: 19, scope: !12550)
!12554 = !DILocation(line: 705, column: 12, scope: !12550)
!12555 = !DILocation(line: 705, column: 36, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12550, file: !1017, line: 705, column: 7)
!12557 = !DILocation(line: 705, column: 45, scope: !12556)
!12558 = !DILocation(line: 705, column: 52, scope: !12556)
!12559 = !DILocation(line: 705, column: 43, scope: !12556)
!12560 = !DILocation(line: 705, column: 7, scope: !12550)
!12561 = !DILocation(line: 707, column: 15, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12563, file: !1017, line: 707, column: 15)
!12563 = distinct !DILexicalBlock(scope: !12556, file: !1017, line: 706, column: 9)
!12564 = !DILocation(line: 707, column: 23, scope: !12562)
!12565 = !DILocation(line: 707, column: 15, scope: !12563)
!12566 = !DILocation(line: 709, column: 29, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !1017, line: 709, column: 15)
!12568 = distinct !DILexicalBlock(scope: !12562, file: !1017, line: 708, column: 13)
!12569 = !DILocation(line: 709, column: 27, scope: !12567)
!12570 = !DILocation(line: 709, column: 20, scope: !12567)
!12571 = !DILocation(line: 709, column: 37, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12567, file: !1017, line: 709, column: 15)
!12573 = !DILocation(line: 709, column: 15, scope: !12567)
!12574 = !DILocation(line: 710, column: 17, scope: !12572)
!12575 = !DILocation(line: 710, column: 24, scope: !12572)
!12576 = !DILocation(line: 710, column: 36, scope: !12572)
!12577 = !DILocation(line: 710, column: 44, scope: !12572)
!12578 = !DILocation(line: 709, column: 54, scope: !12572)
!12579 = !DILocation(line: 709, column: 62, scope: !12572)
!12580 = !DILocation(line: 709, column: 52, scope: !12572)
!12581 = !DILocation(line: 709, column: 15, scope: !12572)
!12582 = distinct !{!12582, !12573, !12583}
!12583 = !DILocation(line: 710, column: 48, scope: !12567)
!12584 = !DILocation(line: 711, column: 13, scope: !12568)
!12585 = !DILocation(line: 712, column: 9, scope: !12563)
!12586 = !DILocation(line: 705, column: 72, scope: !12556)
!12587 = !DILocation(line: 705, column: 7, scope: !12556)
!12588 = distinct !{!12588, !12560, !12589}
!12589 = !DILocation(line: 712, column: 9, scope: !12550)
!12590 = !DILocation(line: 713, column: 5, scope: !12551)
!12591 = !DILocation(line: 722, column: 17, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12533, file: !1017, line: 722, column: 3)
!12593 = !DILocation(line: 722, column: 24, scope: !12592)
!12594 = !DILocation(line: 722, column: 15, scope: !12592)
!12595 = !DILocation(line: 722, column: 8, scope: !12592)
!12596 = !DILocation(line: 722, column: 32, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12592, file: !1017, line: 722, column: 3)
!12598 = !DILocation(line: 722, column: 41, scope: !12597)
!12599 = !DILocation(line: 722, column: 48, scope: !12597)
!12600 = !DILocation(line: 722, column: 39, scope: !12597)
!12601 = !DILocation(line: 722, column: 3, scope: !12592)
!12602 = !DILocation(line: 724, column: 21, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12604, file: !1017, line: 724, column: 7)
!12604 = distinct !DILexicalBlock(scope: !12597, file: !1017, line: 723, column: 5)
!12605 = !DILocation(line: 724, column: 29, scope: !12603)
!12606 = !DILocation(line: 724, column: 19, scope: !12603)
!12607 = !DILocation(line: 724, column: 12, scope: !12603)
!12608 = !DILocation(line: 724, column: 35, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12603, file: !1017, line: 724, column: 7)
!12610 = !DILocation(line: 724, column: 7, scope: !12603)
!12611 = !DILocation(line: 726, column: 18, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12609, file: !1017, line: 725, column: 9)
!12613 = !DILocation(line: 726, column: 26, scope: !12612)
!12614 = !DILocation(line: 726, column: 16, scope: !12612)
!12615 = !DILocation(line: 727, column: 17, scope: !12612)
!12616 = !DILocation(line: 727, column: 11, scope: !12612)
!12617 = !DILocation(line: 728, column: 9, scope: !12612)
!12618 = !DILocation(line: 724, column: 52, scope: !12609)
!12619 = !DILocation(line: 724, column: 50, scope: !12609)
!12620 = !DILocation(line: 724, column: 7, scope: !12609)
!12621 = distinct !{!12621, !12610, !12622}
!12622 = !DILocation(line: 728, column: 9, scope: !12603)
!12623 = !DILocation(line: 729, column: 5, scope: !12604)
!12624 = !DILocation(line: 722, column: 68, scope: !12597)
!12625 = !DILocation(line: 722, column: 3, scope: !12597)
!12626 = distinct !{!12626, !12601, !12627}
!12627 = !DILocation(line: 729, column: 5, scope: !12592)
!12628 = !DILocation(line: 732, column: 17, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12533, file: !1017, line: 732, column: 3)
!12630 = !DILocation(line: 732, column: 24, scope: !12629)
!12631 = !DILocation(line: 732, column: 15, scope: !12629)
!12632 = !DILocation(line: 732, column: 8, scope: !12629)
!12633 = !DILocation(line: 732, column: 41, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12629, file: !1017, line: 732, column: 3)
!12635 = !DILocation(line: 732, column: 3, scope: !12629)
!12636 = !DILocation(line: 734, column: 14, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12634, file: !1017, line: 733, column: 5)
!12638 = !DILocation(line: 734, column: 22, scope: !12637)
!12639 = !DILocation(line: 734, column: 12, scope: !12637)
!12640 = !DILocation(line: 735, column: 13, scope: !12637)
!12641 = !DILocation(line: 735, column: 7, scope: !12637)
!12642 = !DILocation(line: 736, column: 5, scope: !12637)
!12643 = !DILocation(line: 732, column: 58, scope: !12634)
!12644 = !DILocation(line: 732, column: 56, scope: !12634)
!12645 = !DILocation(line: 732, column: 3, scope: !12634)
!12646 = distinct !{!12646, !12635, !12647}
!12647 = !DILocation(line: 736, column: 5, scope: !12629)
!12648 = !DILocation(line: 741, column: 9, scope: !12533)
!12649 = !DILocation(line: 741, column: 16, scope: !12533)
!12650 = !DILocation(line: 741, column: 3, scope: !12533)
!12651 = !DILocation(line: 742, column: 9, scope: !12533)
!12652 = !DILocation(line: 742, column: 3, scope: !12533)
!12653 = !DILocation(line: 743, column: 1, scope: !12533)
!12654 = distinct !DISubprogram(name: "hash_rehash", scope: !1017, file: !1017, line: 943, type: !1116, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12655 = !DILocalVariable(name: "table", arg: 1, scope: !12654, file: !1017, line: 943, type: !1113)
!12656 = !DILocation(line: 943, column: 26, scope: !12654)
!12657 = !DILocalVariable(name: "candidate", arg: 2, scope: !12654, file: !1017, line: 943, type: !55)
!12658 = !DILocation(line: 943, column: 40, scope: !12654)
!12659 = !DILocalVariable(name: "storage", scope: !12654, file: !1017, line: 945, type: !1015)
!12660 = !DILocation(line: 945, column: 14, scope: !12654)
!12661 = !DILocalVariable(name: "new_table", scope: !12654, file: !1017, line: 946, type: !1113)
!12662 = !DILocation(line: 946, column: 15, scope: !12654)
!12663 = !DILocalVariable(name: "new_size", scope: !12654, file: !1017, line: 947, type: !55)
!12664 = !DILocation(line: 947, column: 10, scope: !12654)
!12665 = !DILocation(line: 947, column: 42, scope: !12654)
!12666 = !DILocation(line: 947, column: 53, scope: !12654)
!12667 = !DILocation(line: 947, column: 60, scope: !12654)
!12668 = !DILocation(line: 947, column: 21, scope: !12654)
!12669 = !DILocation(line: 949, column: 8, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12654, file: !1017, line: 949, column: 7)
!12671 = !DILocation(line: 949, column: 7, scope: !12654)
!12672 = !DILocation(line: 950, column: 5, scope: !12670)
!12673 = !DILocation(line: 951, column: 7, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12654, file: !1017, line: 951, column: 7)
!12675 = !DILocation(line: 951, column: 19, scope: !12674)
!12676 = !DILocation(line: 951, column: 26, scope: !12674)
!12677 = !DILocation(line: 951, column: 16, scope: !12674)
!12678 = !DILocation(line: 951, column: 7, scope: !12654)
!12679 = !DILocation(line: 952, column: 5, scope: !12674)
!12680 = !DILocation(line: 953, column: 13, scope: !12654)
!12681 = !DILocation(line: 954, column: 31, scope: !12654)
!12682 = !DILocation(line: 954, column: 23, scope: !12654)
!12683 = !DILocation(line: 954, column: 3, scope: !12654)
!12684 = !DILocation(line: 954, column: 14, scope: !12654)
!12685 = !DILocation(line: 954, column: 21, scope: !12654)
!12686 = !DILocation(line: 955, column: 7, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12654, file: !1017, line: 955, column: 7)
!12688 = !DILocation(line: 955, column: 18, scope: !12687)
!12689 = !DILocation(line: 955, column: 25, scope: !12687)
!12690 = !DILocation(line: 955, column: 7, scope: !12654)
!12691 = !DILocation(line: 956, column: 5, scope: !12687)
!12692 = !DILocation(line: 957, column: 26, scope: !12654)
!12693 = !DILocation(line: 957, column: 3, scope: !12654)
!12694 = !DILocation(line: 957, column: 14, scope: !12654)
!12695 = !DILocation(line: 957, column: 24, scope: !12654)
!12696 = !DILocation(line: 958, column: 29, scope: !12654)
!12697 = !DILocation(line: 958, column: 40, scope: !12654)
!12698 = !DILocation(line: 958, column: 49, scope: !12654)
!12699 = !DILocation(line: 958, column: 47, scope: !12654)
!12700 = !DILocation(line: 958, column: 3, scope: !12654)
!12701 = !DILocation(line: 958, column: 14, scope: !12654)
!12702 = !DILocation(line: 958, column: 27, scope: !12654)
!12703 = !DILocation(line: 959, column: 3, scope: !12654)
!12704 = !DILocation(line: 959, column: 14, scope: !12654)
!12705 = !DILocation(line: 959, column: 29, scope: !12654)
!12706 = !DILocation(line: 960, column: 3, scope: !12654)
!12707 = !DILocation(line: 960, column: 14, scope: !12654)
!12708 = !DILocation(line: 960, column: 24, scope: !12654)
!12709 = !DILocation(line: 961, column: 23, scope: !12654)
!12710 = !DILocation(line: 961, column: 30, scope: !12654)
!12711 = !DILocation(line: 961, column: 3, scope: !12654)
!12712 = !DILocation(line: 961, column: 14, scope: !12654)
!12713 = !DILocation(line: 961, column: 21, scope: !12654)
!12714 = !DILocation(line: 962, column: 23, scope: !12654)
!12715 = !DILocation(line: 962, column: 30, scope: !12654)
!12716 = !DILocation(line: 962, column: 3, scope: !12654)
!12717 = !DILocation(line: 962, column: 14, scope: !12654)
!12718 = !DILocation(line: 962, column: 21, scope: !12654)
!12719 = !DILocation(line: 963, column: 27, scope: !12654)
!12720 = !DILocation(line: 963, column: 34, scope: !12654)
!12721 = !DILocation(line: 963, column: 3, scope: !12654)
!12722 = !DILocation(line: 963, column: 14, scope: !12654)
!12723 = !DILocation(line: 963, column: 25, scope: !12654)
!12724 = !DILocation(line: 964, column: 27, scope: !12654)
!12725 = !DILocation(line: 964, column: 34, scope: !12654)
!12726 = !DILocation(line: 964, column: 3, scope: !12654)
!12727 = !DILocation(line: 964, column: 14, scope: !12654)
!12728 = !DILocation(line: 964, column: 25, scope: !12654)
!12729 = !DILocation(line: 984, column: 32, scope: !12654)
!12730 = !DILocation(line: 984, column: 39, scope: !12654)
!12731 = !DILocation(line: 984, column: 3, scope: !12654)
!12732 = !DILocation(line: 984, column: 14, scope: !12654)
!12733 = !DILocation(line: 984, column: 30, scope: !12654)
!12734 = !DILocation(line: 986, column: 25, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12654, file: !1017, line: 986, column: 7)
!12736 = !DILocation(line: 986, column: 36, scope: !12735)
!12737 = !DILocation(line: 986, column: 7, scope: !12735)
!12738 = !DILocation(line: 986, column: 7, scope: !12654)
!12739 = !DILocation(line: 989, column: 13, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12735, file: !1017, line: 987, column: 5)
!12741 = !DILocation(line: 989, column: 20, scope: !12740)
!12742 = !DILocation(line: 989, column: 7, scope: !12740)
!12743 = !DILocation(line: 990, column: 23, scope: !12740)
!12744 = !DILocation(line: 990, column: 34, scope: !12740)
!12745 = !DILocation(line: 990, column: 7, scope: !12740)
!12746 = !DILocation(line: 990, column: 14, scope: !12740)
!12747 = !DILocation(line: 990, column: 21, scope: !12740)
!12748 = !DILocation(line: 991, column: 29, scope: !12740)
!12749 = !DILocation(line: 991, column: 40, scope: !12740)
!12750 = !DILocation(line: 991, column: 7, scope: !12740)
!12751 = !DILocation(line: 991, column: 14, scope: !12740)
!12752 = !DILocation(line: 991, column: 27, scope: !12740)
!12753 = !DILocation(line: 992, column: 26, scope: !12740)
!12754 = !DILocation(line: 992, column: 37, scope: !12740)
!12755 = !DILocation(line: 992, column: 7, scope: !12740)
!12756 = !DILocation(line: 992, column: 14, scope: !12740)
!12757 = !DILocation(line: 992, column: 24, scope: !12740)
!12758 = !DILocation(line: 993, column: 31, scope: !12740)
!12759 = !DILocation(line: 993, column: 42, scope: !12740)
!12760 = !DILocation(line: 993, column: 7, scope: !12740)
!12761 = !DILocation(line: 993, column: 14, scope: !12740)
!12762 = !DILocation(line: 993, column: 29, scope: !12740)
!12763 = !DILocation(line: 994, column: 32, scope: !12740)
!12764 = !DILocation(line: 994, column: 43, scope: !12740)
!12765 = !DILocation(line: 994, column: 7, scope: !12740)
!12766 = !DILocation(line: 994, column: 14, scope: !12740)
!12767 = !DILocation(line: 994, column: 30, scope: !12740)
!12768 = !DILocation(line: 996, column: 7, scope: !12740)
!12769 = !DILocation(line: 1012, column: 28, scope: !12654)
!12770 = !DILocation(line: 1012, column: 39, scope: !12654)
!12771 = !DILocation(line: 1012, column: 3, scope: !12654)
!12772 = !DILocation(line: 1012, column: 10, scope: !12654)
!12773 = !DILocation(line: 1012, column: 26, scope: !12654)
!12774 = !DILocation(line: 1013, column: 28, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12654, file: !1017, line: 1013, column: 7)
!12776 = !DILocation(line: 1013, column: 35, scope: !12775)
!12777 = !DILocation(line: 1013, column: 10, scope: !12775)
!12778 = !DILocation(line: 1014, column: 10, scope: !12775)
!12779 = !DILocation(line: 1014, column: 31, scope: !12775)
!12780 = !DILocation(line: 1014, column: 38, scope: !12775)
!12781 = !DILocation(line: 1014, column: 13, scope: !12775)
!12782 = !DILocation(line: 1013, column: 7, scope: !12654)
!12783 = !DILocation(line: 1015, column: 5, scope: !12775)
!12784 = !DILocation(line: 1017, column: 9, scope: !12654)
!12785 = !DILocation(line: 1017, column: 20, scope: !12654)
!12786 = !DILocation(line: 1017, column: 3, scope: !12654)
!12787 = !DILocation(line: 1018, column: 3, scope: !12654)
!12788 = !DILocation(line: 1019, column: 1, scope: !12654)
!12789 = distinct !DISubprogram(name: "transfer_entries", scope: !1017, file: !1017, line: 860, type: !1133, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12790 = !DILocalVariable(name: "dst", arg: 1, scope: !12789, file: !1017, line: 860, type: !1113)
!12791 = !DILocation(line: 860, column: 31, scope: !12789)
!12792 = !DILocalVariable(name: "src", arg: 2, scope: !12789, file: !1017, line: 860, type: !1113)
!12793 = !DILocation(line: 860, column: 48, scope: !12789)
!12794 = !DILocalVariable(name: "safe", arg: 3, scope: !12789, file: !1017, line: 860, type: !103)
!12795 = !DILocation(line: 860, column: 58, scope: !12789)
!12796 = !DILocalVariable(name: "bucket", scope: !12789, file: !1017, line: 862, type: !1020)
!12797 = !DILocation(line: 862, column: 22, scope: !12789)
!12798 = !DILocalVariable(name: "cursor", scope: !12789, file: !1017, line: 863, type: !1020)
!12799 = !DILocation(line: 863, column: 22, scope: !12789)
!12800 = !DILocalVariable(name: "next", scope: !12789, file: !1017, line: 864, type: !1020)
!12801 = !DILocation(line: 864, column: 22, scope: !12789)
!12802 = !DILocation(line: 865, column: 17, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12789, file: !1017, line: 865, column: 3)
!12804 = !DILocation(line: 865, column: 22, scope: !12803)
!12805 = !DILocation(line: 865, column: 15, scope: !12803)
!12806 = !DILocation(line: 865, column: 8, scope: !12803)
!12807 = !DILocation(line: 865, column: 30, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12803, file: !1017, line: 865, column: 3)
!12809 = !DILocation(line: 865, column: 39, scope: !12808)
!12810 = !DILocation(line: 865, column: 44, scope: !12808)
!12811 = !DILocation(line: 865, column: 37, scope: !12808)
!12812 = !DILocation(line: 865, column: 3, scope: !12803)
!12813 = !DILocation(line: 866, column: 9, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12808, file: !1017, line: 866, column: 9)
!12815 = !DILocation(line: 866, column: 17, scope: !12814)
!12816 = !DILocation(line: 866, column: 9, scope: !12808)
!12817 = !DILocalVariable(name: "data", scope: !12818, file: !1017, line: 868, type: !53)
!12818 = distinct !DILexicalBlock(scope: !12814, file: !1017, line: 867, column: 7)
!12819 = !DILocation(line: 868, column: 15, scope: !12818)
!12820 = !DILocalVariable(name: "new_bucket", scope: !12818, file: !1017, line: 869, type: !1020)
!12821 = !DILocation(line: 869, column: 28, scope: !12818)
!12822 = !DILocation(line: 877, column: 23, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12818, file: !1017, line: 877, column: 9)
!12824 = !DILocation(line: 877, column: 31, scope: !12823)
!12825 = !DILocation(line: 877, column: 21, scope: !12823)
!12826 = !DILocation(line: 877, column: 14, scope: !12823)
!12827 = !DILocation(line: 877, column: 37, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12823, file: !1017, line: 877, column: 9)
!12829 = !DILocation(line: 877, column: 9, scope: !12823)
!12830 = !DILocation(line: 879, column: 20, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12828, file: !1017, line: 878, column: 11)
!12832 = !DILocation(line: 879, column: 28, scope: !12831)
!12833 = !DILocation(line: 879, column: 18, scope: !12831)
!12834 = !DILocation(line: 880, column: 39, scope: !12831)
!12835 = !DILocation(line: 880, column: 44, scope: !12831)
!12836 = !DILocation(line: 880, column: 26, scope: !12831)
!12837 = !DILocation(line: 880, column: 24, scope: !12831)
!12838 = !DILocation(line: 882, column: 20, scope: !12831)
!12839 = !DILocation(line: 882, column: 28, scope: !12831)
!12840 = !DILocation(line: 882, column: 18, scope: !12831)
!12841 = !DILocation(line: 884, column: 17, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12831, file: !1017, line: 884, column: 17)
!12843 = !DILocation(line: 884, column: 29, scope: !12842)
!12844 = !DILocation(line: 884, column: 17, scope: !12831)
!12845 = !DILocation(line: 888, column: 32, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12842, file: !1017, line: 885, column: 15)
!12847 = !DILocation(line: 888, column: 44, scope: !12846)
!12848 = !DILocation(line: 888, column: 17, scope: !12846)
!12849 = !DILocation(line: 888, column: 25, scope: !12846)
!12850 = !DILocation(line: 888, column: 30, scope: !12846)
!12851 = !DILocation(line: 889, column: 36, scope: !12846)
!12852 = !DILocation(line: 889, column: 17, scope: !12846)
!12853 = !DILocation(line: 889, column: 29, scope: !12846)
!12854 = !DILocation(line: 889, column: 34, scope: !12846)
!12855 = !DILocation(line: 890, column: 15, scope: !12846)
!12856 = !DILocation(line: 895, column: 36, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12842, file: !1017, line: 892, column: 15)
!12858 = !DILocation(line: 895, column: 17, scope: !12857)
!12859 = !DILocation(line: 895, column: 29, scope: !12857)
!12860 = !DILocation(line: 895, column: 34, scope: !12857)
!12861 = !DILocation(line: 896, column: 17, scope: !12857)
!12862 = !DILocation(line: 896, column: 22, scope: !12857)
!12863 = !DILocation(line: 896, column: 36, scope: !12857)
!12864 = !DILocation(line: 897, column: 29, scope: !12857)
!12865 = !DILocation(line: 897, column: 34, scope: !12857)
!12866 = !DILocation(line: 897, column: 17, scope: !12857)
!12867 = !DILocation(line: 899, column: 11, scope: !12831)
!12868 = !DILocation(line: 877, column: 54, scope: !12828)
!12869 = !DILocation(line: 877, column: 52, scope: !12828)
!12870 = !DILocation(line: 877, column: 9, scope: !12828)
!12871 = distinct !{!12871, !12829, !12872}
!12872 = !DILocation(line: 899, column: 11, scope: !12823)
!12873 = !DILocation(line: 903, column: 16, scope: !12818)
!12874 = !DILocation(line: 903, column: 24, scope: !12818)
!12875 = !DILocation(line: 903, column: 14, scope: !12818)
!12876 = !DILocation(line: 904, column: 9, scope: !12818)
!12877 = !DILocation(line: 904, column: 17, scope: !12818)
!12878 = !DILocation(line: 904, column: 22, scope: !12818)
!12879 = !DILocation(line: 905, column: 13, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12818, file: !1017, line: 905, column: 13)
!12881 = !DILocation(line: 905, column: 13, scope: !12818)
!12882 = !DILocation(line: 906, column: 11, scope: !12880)
!12883 = !DILocation(line: 907, column: 35, scope: !12818)
!12884 = !DILocation(line: 907, column: 40, scope: !12818)
!12885 = !DILocation(line: 907, column: 22, scope: !12818)
!12886 = !DILocation(line: 907, column: 20, scope: !12818)
!12887 = !DILocation(line: 909, column: 13, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12818, file: !1017, line: 909, column: 13)
!12889 = !DILocation(line: 909, column: 25, scope: !12888)
!12890 = !DILocation(line: 909, column: 13, scope: !12818)
!12891 = !DILocalVariable(name: "new_entry", scope: !12892, file: !1017, line: 913, type: !1020)
!12892 = distinct !DILexicalBlock(scope: !12888, file: !1017, line: 910, column: 11)
!12893 = !DILocation(line: 913, column: 32, scope: !12892)
!12894 = !DILocation(line: 913, column: 60, scope: !12892)
!12895 = !DILocation(line: 913, column: 44, scope: !12892)
!12896 = !DILocation(line: 915, column: 17, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12892, file: !1017, line: 915, column: 17)
!12898 = !DILocation(line: 915, column: 27, scope: !12897)
!12899 = !DILocation(line: 915, column: 17, scope: !12892)
!12900 = !DILocation(line: 916, column: 15, scope: !12897)
!12901 = !DILocation(line: 918, column: 31, scope: !12892)
!12902 = !DILocation(line: 918, column: 13, scope: !12892)
!12903 = !DILocation(line: 918, column: 24, scope: !12892)
!12904 = !DILocation(line: 918, column: 29, scope: !12892)
!12905 = !DILocation(line: 919, column: 31, scope: !12892)
!12906 = !DILocation(line: 919, column: 43, scope: !12892)
!12907 = !DILocation(line: 919, column: 13, scope: !12892)
!12908 = !DILocation(line: 919, column: 24, scope: !12892)
!12909 = !DILocation(line: 919, column: 29, scope: !12892)
!12910 = !DILocation(line: 920, column: 32, scope: !12892)
!12911 = !DILocation(line: 920, column: 13, scope: !12892)
!12912 = !DILocation(line: 920, column: 25, scope: !12892)
!12913 = !DILocation(line: 920, column: 30, scope: !12892)
!12914 = !DILocation(line: 921, column: 11, scope: !12892)
!12915 = !DILocation(line: 925, column: 32, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12888, file: !1017, line: 923, column: 11)
!12917 = !DILocation(line: 925, column: 13, scope: !12916)
!12918 = !DILocation(line: 925, column: 25, scope: !12916)
!12919 = !DILocation(line: 925, column: 30, scope: !12916)
!12920 = !DILocation(line: 926, column: 13, scope: !12916)
!12921 = !DILocation(line: 926, column: 18, scope: !12916)
!12922 = !DILocation(line: 926, column: 32, scope: !12916)
!12923 = !DILocation(line: 928, column: 9, scope: !12818)
!12924 = !DILocation(line: 928, column: 17, scope: !12818)
!12925 = !DILocation(line: 928, column: 22, scope: !12818)
!12926 = !DILocation(line: 929, column: 9, scope: !12818)
!12927 = !DILocation(line: 929, column: 14, scope: !12818)
!12928 = !DILocation(line: 929, column: 28, scope: !12818)
!12929 = !DILocation(line: 930, column: 7, scope: !12818)
!12930 = !DILocation(line: 865, column: 64, scope: !12808)
!12931 = !DILocation(line: 865, column: 3, scope: !12808)
!12932 = distinct !{!12932, !12812, !12933}
!12933 = !DILocation(line: 930, column: 7, scope: !12803)
!12934 = !DILocation(line: 931, column: 3, scope: !12789)
!12935 = !DILocation(line: 932, column: 1, scope: !12789)
!12936 = distinct !DISubprogram(name: "free_entry", scope: !1017, file: !1017, line: 776, type: !1135, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12937 = !DILocalVariable(name: "table", arg: 1, scope: !12936, file: !1017, line: 776, type: !1113)
!12938 = !DILocation(line: 776, column: 25, scope: !12936)
!12939 = !DILocalVariable(name: "entry", arg: 2, scope: !12936, file: !1017, line: 776, type: !1020)
!12940 = !DILocation(line: 776, column: 51, scope: !12936)
!12941 = !DILocation(line: 778, column: 3, scope: !12936)
!12942 = !DILocation(line: 778, column: 10, scope: !12936)
!12943 = !DILocation(line: 778, column: 15, scope: !12936)
!12944 = !DILocation(line: 779, column: 17, scope: !12936)
!12945 = !DILocation(line: 779, column: 24, scope: !12936)
!12946 = !DILocation(line: 779, column: 3, scope: !12936)
!12947 = !DILocation(line: 779, column: 10, scope: !12936)
!12948 = !DILocation(line: 779, column: 15, scope: !12936)
!12949 = !DILocation(line: 780, column: 28, scope: !12936)
!12950 = !DILocation(line: 780, column: 3, scope: !12936)
!12951 = !DILocation(line: 780, column: 10, scope: !12936)
!12952 = !DILocation(line: 780, column: 26, scope: !12936)
!12953 = !DILocation(line: 781, column: 1, scope: !12936)
!12954 = distinct !DISubprogram(name: "allocate_entry", scope: !1017, file: !1017, line: 751, type: !1140, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12955 = !DILocalVariable(name: "table", arg: 1, scope: !12954, file: !1017, line: 751, type: !1113)
!12956 = !DILocation(line: 751, column: 29, scope: !12954)
!12957 = !DILocalVariable(name: "new", scope: !12954, file: !1017, line: 753, type: !1020)
!12958 = !DILocation(line: 753, column: 22, scope: !12954)
!12959 = !DILocation(line: 755, column: 7, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12954, file: !1017, line: 755, column: 7)
!12961 = !DILocation(line: 755, column: 14, scope: !12960)
!12962 = !DILocation(line: 755, column: 7, scope: !12954)
!12963 = !DILocation(line: 757, column: 13, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12960, file: !1017, line: 756, column: 5)
!12965 = !DILocation(line: 757, column: 20, scope: !12964)
!12966 = !DILocation(line: 757, column: 11, scope: !12964)
!12967 = !DILocation(line: 758, column: 32, scope: !12964)
!12968 = !DILocation(line: 758, column: 37, scope: !12964)
!12969 = !DILocation(line: 758, column: 7, scope: !12964)
!12970 = !DILocation(line: 758, column: 14, scope: !12964)
!12971 = !DILocation(line: 758, column: 30, scope: !12964)
!12972 = !DILocation(line: 759, column: 5, scope: !12964)
!12973 = !DILocation(line: 765, column: 13, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12960, file: !1017, line: 761, column: 5)
!12975 = !DILocation(line: 765, column: 11, scope: !12974)
!12976 = !DILocation(line: 769, column: 10, scope: !12954)
!12977 = !DILocation(line: 769, column: 3, scope: !12954)
!12978 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !1017, file: !1017, line: 1038, type: !1118, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!12979 = !DILocalVariable(name: "table", arg: 1, scope: !12978, file: !1017, line: 1038, type: !1113)
!12980 = !DILocation(line: 1038, column: 36, scope: !12978)
!12981 = !DILocalVariable(name: "entry", arg: 2, scope: !12978, file: !1017, line: 1038, type: !339)
!12982 = !DILocation(line: 1038, column: 55, scope: !12978)
!12983 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12978, file: !1017, line: 1039, type: !1120)
!12984 = !DILocation(line: 1039, column: 37, scope: !12978)
!12985 = !DILocalVariable(name: "data", scope: !12978, file: !1017, line: 1041, type: !53)
!12986 = !DILocation(line: 1041, column: 9, scope: !12978)
!12987 = !DILocalVariable(name: "bucket", scope: !12978, file: !1017, line: 1042, type: !1020)
!12988 = !DILocation(line: 1042, column: 22, scope: !12978)
!12989 = !DILocation(line: 1047, column: 9, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12978, file: !1017, line: 1047, column: 7)
!12991 = !DILocation(line: 1047, column: 7, scope: !12978)
!12992 = !DILocation(line: 1048, column: 5, scope: !12990)
!12993 = !DILocation(line: 1051, column: 32, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12978, file: !1017, line: 1051, column: 7)
!12995 = !DILocation(line: 1051, column: 39, scope: !12994)
!12996 = !DILocation(line: 1051, column: 15, scope: !12994)
!12997 = !DILocation(line: 1051, column: 13, scope: !12994)
!12998 = !DILocation(line: 1051, column: 63, scope: !12994)
!12999 = !DILocation(line: 1051, column: 7, scope: !12978)
!13000 = !DILocation(line: 1053, column: 11, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !1017, line: 1053, column: 11)
!13002 = distinct !DILexicalBlock(scope: !12994, file: !1017, line: 1052, column: 5)
!13003 = !DILocation(line: 1053, column: 11, scope: !13002)
!13004 = !DILocation(line: 1054, column: 24, scope: !13001)
!13005 = !DILocation(line: 1054, column: 10, scope: !13001)
!13006 = !DILocation(line: 1054, column: 22, scope: !13001)
!13007 = !DILocation(line: 1054, column: 9, scope: !13001)
!13008 = !DILocation(line: 1055, column: 7, scope: !13002)
!13009 = !DILocation(line: 1063, column: 7, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !12978, file: !1017, line: 1063, column: 7)
!13011 = !DILocation(line: 1063, column: 14, scope: !13010)
!13012 = !DILocation(line: 1064, column: 9, scope: !13010)
!13013 = !DILocation(line: 1064, column: 16, scope: !13010)
!13014 = !DILocation(line: 1064, column: 24, scope: !13010)
!13015 = !DILocation(line: 1064, column: 43, scope: !13010)
!13016 = !DILocation(line: 1064, column: 50, scope: !13010)
!13017 = !DILocation(line: 1064, column: 41, scope: !13010)
!13018 = !DILocation(line: 1064, column: 7, scope: !13010)
!13019 = !DILocation(line: 1063, column: 7, scope: !12978)
!13020 = !DILocation(line: 1068, column: 21, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13010, file: !1017, line: 1065, column: 5)
!13022 = !DILocation(line: 1068, column: 7, scope: !13021)
!13023 = !DILocation(line: 1069, column: 11, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13021, file: !1017, line: 1069, column: 11)
!13025 = !DILocation(line: 1069, column: 18, scope: !13024)
!13026 = !DILocation(line: 1070, column: 13, scope: !13024)
!13027 = !DILocation(line: 1070, column: 20, scope: !13024)
!13028 = !DILocation(line: 1070, column: 28, scope: !13024)
!13029 = !DILocation(line: 1070, column: 47, scope: !13024)
!13030 = !DILocation(line: 1070, column: 54, scope: !13024)
!13031 = !DILocation(line: 1070, column: 45, scope: !13024)
!13032 = !DILocation(line: 1070, column: 11, scope: !13024)
!13033 = !DILocation(line: 1069, column: 11, scope: !13021)
!13034 = !DILocalVariable(name: "tuning", scope: !13035, file: !1017, line: 1072, type: !1032)
!13035 = distinct !DILexicalBlock(scope: !13024, file: !1017, line: 1071, column: 9)
!13036 = !DILocation(line: 1072, column: 30, scope: !13035)
!13037 = !DILocation(line: 1072, column: 39, scope: !13035)
!13038 = !DILocation(line: 1072, column: 46, scope: !13035)
!13039 = !DILocalVariable(name: "candidate", scope: !13035, file: !1017, line: 1073, type: !1038)
!13040 = !DILocation(line: 1073, column: 17, scope: !13035)
!13041 = !DILocation(line: 1074, column: 14, scope: !13035)
!13042 = !DILocation(line: 1074, column: 22, scope: !13035)
!13043 = !DILocation(line: 1075, column: 17, scope: !13035)
!13044 = !DILocation(line: 1075, column: 24, scope: !13035)
!13045 = !DILocation(line: 1075, column: 36, scope: !13035)
!13046 = !DILocation(line: 1075, column: 44, scope: !13035)
!13047 = !DILocation(line: 1075, column: 34, scope: !13035)
!13048 = !DILocation(line: 1076, column: 17, scope: !13035)
!13049 = !DILocation(line: 1076, column: 24, scope: !13035)
!13050 = !DILocation(line: 1076, column: 36, scope: !13035)
!13051 = !DILocation(line: 1076, column: 44, scope: !13035)
!13052 = !DILocation(line: 1076, column: 34, scope: !13035)
!13053 = !DILocation(line: 1077, column: 19, scope: !13035)
!13054 = !DILocation(line: 1077, column: 27, scope: !13035)
!13055 = !DILocation(line: 1077, column: 17, scope: !13035)
!13056 = !DILocation(line: 1079, column: 27, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13035, file: !1017, line: 1079, column: 15)
!13058 = !DILocation(line: 1079, column: 24, scope: !13057)
!13059 = !DILocation(line: 1079, column: 15, scope: !13035)
!13060 = !DILocation(line: 1080, column: 13, scope: !13057)
!13061 = !DILocation(line: 1083, column: 29, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13035, file: !1017, line: 1083, column: 15)
!13063 = !DILocation(line: 1083, column: 36, scope: !13062)
!13064 = !DILocation(line: 1083, column: 16, scope: !13062)
!13065 = !DILocation(line: 1083, column: 15, scope: !13035)
!13066 = !DILocation(line: 1084, column: 13, scope: !13062)
!13067 = !DILocation(line: 1087, column: 32, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13035, file: !1017, line: 1087, column: 15)
!13069 = !DILocation(line: 1087, column: 39, scope: !13068)
!13070 = !DILocation(line: 1087, column: 15, scope: !13068)
!13071 = !DILocation(line: 1087, column: 62, scope: !13068)
!13072 = !DILocation(line: 1087, column: 15, scope: !13035)
!13073 = !DILocation(line: 1088, column: 13, scope: !13068)
!13074 = !DILocation(line: 1089, column: 9, scope: !13035)
!13075 = !DILocation(line: 1090, column: 5, scope: !13021)
!13076 = !DILocation(line: 1094, column: 7, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !12978, file: !1017, line: 1094, column: 7)
!13078 = !DILocation(line: 1094, column: 15, scope: !13077)
!13079 = !DILocation(line: 1094, column: 7, scope: !12978)
!13080 = !DILocalVariable(name: "new_entry", scope: !13081, file: !1017, line: 1096, type: !1020)
!13081 = distinct !DILexicalBlock(scope: !13077, file: !1017, line: 1095, column: 5)
!13082 = !DILocation(line: 1096, column: 26, scope: !13081)
!13083 = !DILocation(line: 1096, column: 54, scope: !13081)
!13084 = !DILocation(line: 1096, column: 38, scope: !13081)
!13085 = !DILocation(line: 1098, column: 11, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13081, file: !1017, line: 1098, column: 11)
!13087 = !DILocation(line: 1098, column: 21, scope: !13086)
!13088 = !DILocation(line: 1098, column: 11, scope: !13081)
!13089 = !DILocation(line: 1099, column: 9, scope: !13086)
!13090 = !DILocation(line: 1103, column: 34, scope: !13081)
!13091 = !DILocation(line: 1103, column: 7, scope: !13081)
!13092 = !DILocation(line: 1103, column: 18, scope: !13081)
!13093 = !DILocation(line: 1103, column: 23, scope: !13081)
!13094 = !DILocation(line: 1104, column: 25, scope: !13081)
!13095 = !DILocation(line: 1104, column: 33, scope: !13081)
!13096 = !DILocation(line: 1104, column: 7, scope: !13081)
!13097 = !DILocation(line: 1104, column: 18, scope: !13081)
!13098 = !DILocation(line: 1104, column: 23, scope: !13081)
!13099 = !DILocation(line: 1105, column: 22, scope: !13081)
!13100 = !DILocation(line: 1105, column: 7, scope: !13081)
!13101 = !DILocation(line: 1105, column: 15, scope: !13081)
!13102 = !DILocation(line: 1105, column: 20, scope: !13081)
!13103 = !DILocation(line: 1106, column: 7, scope: !13081)
!13104 = !DILocation(line: 1106, column: 14, scope: !13081)
!13105 = !DILocation(line: 1106, column: 23, scope: !13081)
!13106 = !DILocation(line: 1107, column: 7, scope: !13081)
!13107 = !DILocation(line: 1112, column: 27, scope: !12978)
!13108 = !DILocation(line: 1112, column: 3, scope: !12978)
!13109 = !DILocation(line: 1112, column: 11, scope: !12978)
!13110 = !DILocation(line: 1112, column: 16, scope: !12978)
!13111 = !DILocation(line: 1113, column: 3, scope: !12978)
!13112 = !DILocation(line: 1113, column: 10, scope: !12978)
!13113 = !DILocation(line: 1113, column: 19, scope: !12978)
!13114 = !DILocation(line: 1114, column: 3, scope: !12978)
!13115 = !DILocation(line: 1114, column: 10, scope: !12978)
!13116 = !DILocation(line: 1114, column: 24, scope: !12978)
!13117 = !DILocation(line: 1116, column: 3, scope: !12978)
!13118 = !DILocation(line: 1117, column: 1, scope: !12978)
!13119 = distinct !DISubprogram(name: "hash_find_entry", scope: !1017, file: !1017, line: 790, type: !1137, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!13120 = !DILocalVariable(name: "table", arg: 1, scope: !13119, file: !1017, line: 790, type: !1113)
!13121 = !DILocation(line: 790, column: 30, scope: !13119)
!13122 = !DILocalVariable(name: "entry", arg: 2, scope: !13119, file: !1017, line: 790, type: !339)
!13123 = !DILocation(line: 790, column: 49, scope: !13119)
!13124 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13119, file: !1017, line: 791, type: !1139)
!13125 = !DILocation(line: 791, column: 38, scope: !13119)
!13126 = !DILocalVariable(name: "delete", arg: 4, scope: !13119, file: !1017, line: 791, type: !103)
!13127 = !DILocation(line: 791, column: 56, scope: !13119)
!13128 = !DILocalVariable(name: "bucket", scope: !13119, file: !1017, line: 793, type: !1020)
!13129 = !DILocation(line: 793, column: 22, scope: !13119)
!13130 = !DILocation(line: 793, column: 44, scope: !13119)
!13131 = !DILocation(line: 793, column: 51, scope: !13119)
!13132 = !DILocation(line: 793, column: 31, scope: !13119)
!13133 = !DILocalVariable(name: "cursor", scope: !13119, file: !1017, line: 794, type: !1020)
!13134 = !DILocation(line: 794, column: 22, scope: !13119)
!13135 = !DILocation(line: 796, column: 18, scope: !13119)
!13136 = !DILocation(line: 796, column: 4, scope: !13119)
!13137 = !DILocation(line: 796, column: 16, scope: !13119)
!13138 = !DILocation(line: 799, column: 7, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13119, file: !1017, line: 799, column: 7)
!13140 = !DILocation(line: 799, column: 15, scope: !13139)
!13141 = !DILocation(line: 799, column: 20, scope: !13139)
!13142 = !DILocation(line: 799, column: 7, scope: !13119)
!13143 = !DILocation(line: 800, column: 5, scope: !13139)
!13144 = !DILocation(line: 803, column: 7, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13119, file: !1017, line: 803, column: 7)
!13146 = !DILocation(line: 803, column: 16, scope: !13145)
!13147 = !DILocation(line: 803, column: 24, scope: !13145)
!13148 = !DILocation(line: 803, column: 13, scope: !13145)
!13149 = !DILocation(line: 803, column: 29, scope: !13145)
!13150 = !DILocation(line: 803, column: 32, scope: !13145)
!13151 = !DILocation(line: 803, column: 39, scope: !13145)
!13152 = !DILocation(line: 803, column: 51, scope: !13145)
!13153 = !DILocation(line: 803, column: 58, scope: !13145)
!13154 = !DILocation(line: 803, column: 66, scope: !13145)
!13155 = !DILocation(line: 803, column: 7, scope: !13119)
!13156 = !DILocalVariable(name: "data", scope: !13157, file: !1017, line: 805, type: !53)
!13157 = distinct !DILexicalBlock(scope: !13145, file: !1017, line: 804, column: 5)
!13158 = !DILocation(line: 805, column: 13, scope: !13157)
!13159 = !DILocation(line: 805, column: 20, scope: !13157)
!13160 = !DILocation(line: 805, column: 28, scope: !13157)
!13161 = !DILocation(line: 807, column: 11, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13157, file: !1017, line: 807, column: 11)
!13163 = !DILocation(line: 807, column: 11, scope: !13157)
!13164 = !DILocation(line: 809, column: 15, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !1017, line: 809, column: 15)
!13166 = distinct !DILexicalBlock(scope: !13162, file: !1017, line: 808, column: 9)
!13167 = !DILocation(line: 809, column: 23, scope: !13165)
!13168 = !DILocation(line: 809, column: 15, scope: !13166)
!13169 = !DILocalVariable(name: "next", scope: !13170, file: !1017, line: 811, type: !1020)
!13170 = distinct !DILexicalBlock(scope: !13165, file: !1017, line: 810, column: 13)
!13171 = !DILocation(line: 811, column: 34, scope: !13170)
!13172 = !DILocation(line: 811, column: 41, scope: !13170)
!13173 = !DILocation(line: 811, column: 49, scope: !13170)
!13174 = !DILocation(line: 815, column: 16, scope: !13170)
!13175 = !DILocation(line: 815, column: 26, scope: !13170)
!13176 = !DILocation(line: 815, column: 25, scope: !13170)
!13177 = !DILocation(line: 816, column: 27, scope: !13170)
!13178 = !DILocation(line: 816, column: 34, scope: !13170)
!13179 = !DILocation(line: 816, column: 15, scope: !13170)
!13180 = !DILocation(line: 817, column: 13, scope: !13170)
!13181 = !DILocation(line: 820, column: 15, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13165, file: !1017, line: 819, column: 13)
!13183 = !DILocation(line: 820, column: 23, scope: !13182)
!13184 = !DILocation(line: 820, column: 28, scope: !13182)
!13185 = !DILocation(line: 822, column: 9, scope: !13166)
!13186 = !DILocation(line: 824, column: 14, scope: !13157)
!13187 = !DILocation(line: 824, column: 7, scope: !13157)
!13188 = !DILocation(line: 828, column: 17, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13119, file: !1017, line: 828, column: 3)
!13190 = !DILocation(line: 828, column: 15, scope: !13189)
!13191 = !DILocation(line: 828, column: 8, scope: !13189)
!13192 = !DILocation(line: 828, column: 25, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13189, file: !1017, line: 828, column: 3)
!13194 = !DILocation(line: 828, column: 33, scope: !13193)
!13195 = !DILocation(line: 828, column: 3, scope: !13189)
!13196 = !DILocation(line: 830, column: 11, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13198, file: !1017, line: 830, column: 11)
!13198 = distinct !DILexicalBlock(scope: !13193, file: !1017, line: 829, column: 5)
!13199 = !DILocation(line: 830, column: 20, scope: !13197)
!13200 = !DILocation(line: 830, column: 28, scope: !13197)
!13201 = !DILocation(line: 830, column: 34, scope: !13197)
!13202 = !DILocation(line: 830, column: 17, scope: !13197)
!13203 = !DILocation(line: 831, column: 11, scope: !13197)
!13204 = !DILocation(line: 831, column: 14, scope: !13197)
!13205 = !DILocation(line: 831, column: 21, scope: !13197)
!13206 = !DILocation(line: 831, column: 33, scope: !13197)
!13207 = !DILocation(line: 831, column: 40, scope: !13197)
!13208 = !DILocation(line: 831, column: 48, scope: !13197)
!13209 = !DILocation(line: 831, column: 54, scope: !13197)
!13210 = !DILocation(line: 830, column: 11, scope: !13198)
!13211 = !DILocalVariable(name: "data", scope: !13212, file: !1017, line: 833, type: !53)
!13212 = distinct !DILexicalBlock(scope: !13197, file: !1017, line: 832, column: 9)
!13213 = !DILocation(line: 833, column: 17, scope: !13212)
!13214 = !DILocation(line: 833, column: 24, scope: !13212)
!13215 = !DILocation(line: 833, column: 32, scope: !13212)
!13216 = !DILocation(line: 833, column: 38, scope: !13212)
!13217 = !DILocation(line: 835, column: 15, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13212, file: !1017, line: 835, column: 15)
!13219 = !DILocation(line: 835, column: 15, scope: !13212)
!13220 = !DILocalVariable(name: "next", scope: !13221, file: !1017, line: 837, type: !1020)
!13221 = distinct !DILexicalBlock(scope: !13218, file: !1017, line: 836, column: 13)
!13222 = !DILocation(line: 837, column: 34, scope: !13221)
!13223 = !DILocation(line: 837, column: 41, scope: !13221)
!13224 = !DILocation(line: 837, column: 49, scope: !13221)
!13225 = !DILocation(line: 841, column: 30, scope: !13221)
!13226 = !DILocation(line: 841, column: 36, scope: !13221)
!13227 = !DILocation(line: 841, column: 15, scope: !13221)
!13228 = !DILocation(line: 841, column: 23, scope: !13221)
!13229 = !DILocation(line: 841, column: 28, scope: !13221)
!13230 = !DILocation(line: 842, column: 27, scope: !13221)
!13231 = !DILocation(line: 842, column: 34, scope: !13221)
!13232 = !DILocation(line: 842, column: 15, scope: !13221)
!13233 = !DILocation(line: 843, column: 13, scope: !13221)
!13234 = !DILocation(line: 845, column: 18, scope: !13212)
!13235 = !DILocation(line: 845, column: 11, scope: !13212)
!13236 = !DILocation(line: 847, column: 5, scope: !13198)
!13237 = !DILocation(line: 828, column: 48, scope: !13193)
!13238 = !DILocation(line: 828, column: 56, scope: !13193)
!13239 = !DILocation(line: 828, column: 46, scope: !13193)
!13240 = !DILocation(line: 828, column: 3, scope: !13193)
!13241 = distinct !{!13241, !13195, !13242}
!13242 = !DILocation(line: 847, column: 5, scope: !13189)
!13243 = !DILocation(line: 850, column: 3, scope: !13119)
!13244 = !DILocation(line: 851, column: 1, scope: !13119)
!13245 = distinct !DISubprogram(name: "hash_insert", scope: !1017, file: !1017, line: 1126, type: !1121, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!13246 = !DILocalVariable(name: "table", arg: 1, scope: !13245, file: !1017, line: 1126, type: !1113)
!13247 = !DILocation(line: 1126, column: 26, scope: !13245)
!13248 = !DILocalVariable(name: "entry", arg: 2, scope: !13245, file: !1017, line: 1126, type: !339)
!13249 = !DILocation(line: 1126, column: 45, scope: !13245)
!13250 = !DILocalVariable(name: "matched_ent", scope: !13245, file: !1017, line: 1128, type: !339)
!13251 = !DILocation(line: 1128, column: 15, scope: !13245)
!13252 = !DILocalVariable(name: "err", scope: !13245, file: !1017, line: 1129, type: !7)
!13253 = !DILocation(line: 1129, column: 7, scope: !13245)
!13254 = !DILocation(line: 1129, column: 36, scope: !13245)
!13255 = !DILocation(line: 1129, column: 43, scope: !13245)
!13256 = !DILocation(line: 1129, column: 13, scope: !13245)
!13257 = !DILocation(line: 1130, column: 11, scope: !13245)
!13258 = !DILocation(line: 1130, column: 15, scope: !13245)
!13259 = !DILocation(line: 1132, column: 23, scope: !13245)
!13260 = !DILocation(line: 1132, column: 27, scope: !13245)
!13261 = !DILocation(line: 1132, column: 34, scope: !13245)
!13262 = !DILocation(line: 1132, column: 48, scope: !13245)
!13263 = !DILocation(line: 1130, column: 3, scope: !13245)
!13264 = distinct !DISubprogram(name: "hash_delete", scope: !1017, file: !1017, line: 1140, type: !1121, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1008, retainedNodes: !313)
!13265 = !DILocalVariable(name: "table", arg: 1, scope: !13264, file: !1017, line: 1140, type: !1113)
!13266 = !DILocation(line: 1140, column: 26, scope: !13264)
!13267 = !DILocalVariable(name: "entry", arg: 2, scope: !13264, file: !1017, line: 1140, type: !339)
!13268 = !DILocation(line: 1140, column: 45, scope: !13264)
!13269 = !DILocalVariable(name: "data", scope: !13264, file: !1017, line: 1142, type: !53)
!13270 = !DILocation(line: 1142, column: 9, scope: !13264)
!13271 = !DILocalVariable(name: "bucket", scope: !13264, file: !1017, line: 1143, type: !1020)
!13272 = !DILocation(line: 1143, column: 22, scope: !13264)
!13273 = !DILocation(line: 1145, column: 27, scope: !13264)
!13274 = !DILocation(line: 1145, column: 34, scope: !13264)
!13275 = !DILocation(line: 1145, column: 10, scope: !13264)
!13276 = !DILocation(line: 1145, column: 8, scope: !13264)
!13277 = !DILocation(line: 1146, column: 8, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13264, file: !1017, line: 1146, column: 7)
!13279 = !DILocation(line: 1146, column: 7, scope: !13264)
!13280 = !DILocation(line: 1147, column: 5, scope: !13278)
!13281 = !DILocation(line: 1149, column: 3, scope: !13264)
!13282 = !DILocation(line: 1149, column: 10, scope: !13264)
!13283 = !DILocation(line: 1149, column: 19, scope: !13264)
!13284 = !DILocation(line: 1150, column: 8, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13264, file: !1017, line: 1150, column: 7)
!13286 = !DILocation(line: 1150, column: 16, scope: !13285)
!13287 = !DILocation(line: 1150, column: 7, scope: !13264)
!13288 = !DILocation(line: 1152, column: 7, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13285, file: !1017, line: 1151, column: 5)
!13290 = !DILocation(line: 1152, column: 14, scope: !13289)
!13291 = !DILocation(line: 1152, column: 28, scope: !13289)
!13292 = !DILocation(line: 1157, column: 11, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13289, file: !1017, line: 1157, column: 11)
!13294 = !DILocation(line: 1157, column: 18, scope: !13293)
!13295 = !DILocation(line: 1158, column: 13, scope: !13293)
!13296 = !DILocation(line: 1158, column: 20, scope: !13293)
!13297 = !DILocation(line: 1158, column: 28, scope: !13293)
!13298 = !DILocation(line: 1158, column: 47, scope: !13293)
!13299 = !DILocation(line: 1158, column: 54, scope: !13293)
!13300 = !DILocation(line: 1158, column: 45, scope: !13293)
!13301 = !DILocation(line: 1158, column: 11, scope: !13293)
!13302 = !DILocation(line: 1157, column: 11, scope: !13289)
!13303 = !DILocation(line: 1162, column: 25, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13293, file: !1017, line: 1159, column: 9)
!13305 = !DILocation(line: 1162, column: 11, scope: !13304)
!13306 = !DILocation(line: 1163, column: 15, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13304, file: !1017, line: 1163, column: 15)
!13308 = !DILocation(line: 1163, column: 22, scope: !13307)
!13309 = !DILocation(line: 1164, column: 17, scope: !13307)
!13310 = !DILocation(line: 1164, column: 24, scope: !13307)
!13311 = !DILocation(line: 1164, column: 32, scope: !13307)
!13312 = !DILocation(line: 1164, column: 51, scope: !13307)
!13313 = !DILocation(line: 1164, column: 58, scope: !13307)
!13314 = !DILocation(line: 1164, column: 49, scope: !13307)
!13315 = !DILocation(line: 1164, column: 15, scope: !13307)
!13316 = !DILocation(line: 1163, column: 15, scope: !13304)
!13317 = !DILocalVariable(name: "tuning", scope: !13318, file: !1017, line: 1166, type: !1032)
!13318 = distinct !DILexicalBlock(scope: !13307, file: !1017, line: 1165, column: 13)
!13319 = !DILocation(line: 1166, column: 34, scope: !13318)
!13320 = !DILocation(line: 1166, column: 43, scope: !13318)
!13321 = !DILocation(line: 1166, column: 50, scope: !13318)
!13322 = !DILocalVariable(name: "candidate", scope: !13318, file: !1017, line: 1167, type: !55)
!13323 = !DILocation(line: 1167, column: 22, scope: !13318)
!13324 = !DILocation(line: 1168, column: 18, scope: !13318)
!13325 = !DILocation(line: 1168, column: 26, scope: !13318)
!13326 = !DILocation(line: 1169, column: 20, scope: !13318)
!13327 = !DILocation(line: 1169, column: 27, scope: !13318)
!13328 = !DILocation(line: 1169, column: 39, scope: !13318)
!13329 = !DILocation(line: 1169, column: 47, scope: !13318)
!13330 = !DILocation(line: 1169, column: 37, scope: !13318)
!13331 = !DILocation(line: 1170, column: 21, scope: !13318)
!13332 = !DILocation(line: 1170, column: 28, scope: !13318)
!13333 = !DILocation(line: 1170, column: 40, scope: !13318)
!13334 = !DILocation(line: 1170, column: 48, scope: !13318)
!13335 = !DILocation(line: 1170, column: 38, scope: !13318)
!13336 = !DILocation(line: 1171, column: 23, scope: !13318)
!13337 = !DILocation(line: 1171, column: 31, scope: !13318)
!13338 = !DILocation(line: 1171, column: 21, scope: !13318)
!13339 = !DILocation(line: 1168, column: 17, scope: !13318)
!13340 = !DILocation(line: 1173, column: 33, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13318, file: !1017, line: 1173, column: 19)
!13342 = !DILocation(line: 1173, column: 40, scope: !13341)
!13343 = !DILocation(line: 1173, column: 20, scope: !13341)
!13344 = !DILocation(line: 1173, column: 19, scope: !13318)
!13345 = !DILocalVariable(name: "cursor", scope: !13346, file: !1017, line: 1181, type: !1020)
!13346 = distinct !DILexicalBlock(scope: !13341, file: !1017, line: 1174, column: 17)
!13347 = !DILocation(line: 1181, column: 38, scope: !13346)
!13348 = !DILocation(line: 1181, column: 47, scope: !13346)
!13349 = !DILocation(line: 1181, column: 54, scope: !13346)
!13350 = !DILocalVariable(name: "next", scope: !13346, file: !1017, line: 1182, type: !1020)
!13351 = !DILocation(line: 1182, column: 38, scope: !13346)
!13352 = !DILocation(line: 1183, column: 19, scope: !13346)
!13353 = !DILocation(line: 1183, column: 26, scope: !13346)
!13354 = !DILocation(line: 1185, column: 30, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13346, file: !1017, line: 1184, column: 21)
!13356 = !DILocation(line: 1185, column: 38, scope: !13355)
!13357 = !DILocation(line: 1185, column: 28, scope: !13355)
!13358 = !DILocation(line: 1186, column: 29, scope: !13355)
!13359 = !DILocation(line: 1186, column: 23, scope: !13355)
!13360 = !DILocation(line: 1187, column: 32, scope: !13355)
!13361 = !DILocation(line: 1187, column: 30, scope: !13355)
!13362 = distinct !{!13362, !13352, !13363}
!13363 = !DILocation(line: 1188, column: 21, scope: !13346)
!13364 = !DILocation(line: 1189, column: 19, scope: !13346)
!13365 = !DILocation(line: 1189, column: 26, scope: !13346)
!13366 = !DILocation(line: 1189, column: 42, scope: !13346)
!13367 = !DILocation(line: 1191, column: 17, scope: !13346)
!13368 = !DILocation(line: 1192, column: 13, scope: !13318)
!13369 = !DILocation(line: 1193, column: 9, scope: !13304)
!13370 = !DILocation(line: 1194, column: 5, scope: !13289)
!13371 = !DILocation(line: 1196, column: 10, scope: !13264)
!13372 = !DILocation(line: 1196, column: 3, scope: !13264)
!13373 = !DILocation(line: 1197, column: 1, scope: !13264)
!13374 = distinct !DISubprogram(name: "heap_alloc", scope: !1533, file: !1533, line: 44, type: !1529, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13375 = !DILocalVariable(name: "compare", arg: 1, scope: !13374, file: !1533, line: 44, type: !1539)
!13376 = !DILocation(line: 44, column: 19, scope: !13374)
!13377 = !DILocalVariable(name: "n_reserve", arg: 2, scope: !13374, file: !1533, line: 44, type: !55)
!13378 = !DILocation(line: 44, column: 65, scope: !13374)
!13379 = !DILocalVariable(name: "heap", scope: !13374, file: !1533, line: 46, type: !1531)
!13380 = !DILocation(line: 46, column: 16, scope: !13374)
!13381 = !DILocation(line: 46, column: 23, scope: !13374)
!13382 = !DILocation(line: 48, column: 7, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13374, file: !1533, line: 48, column: 7)
!13384 = !DILocation(line: 48, column: 17, scope: !13383)
!13385 = !DILocation(line: 48, column: 7, scope: !13374)
!13386 = !DILocation(line: 49, column: 15, scope: !13383)
!13387 = !DILocation(line: 49, column: 5, scope: !13383)
!13388 = !DILocation(line: 51, column: 27, scope: !13374)
!13389 = !DILocation(line: 51, column: 17, scope: !13374)
!13390 = !DILocation(line: 51, column: 3, scope: !13374)
!13391 = !DILocation(line: 51, column: 9, scope: !13374)
!13392 = !DILocation(line: 51, column: 15, scope: !13374)
!13393 = !{!13394, !2287, i64 0}
!13394 = !{!"heap", !2287, i64 0, !2448, i64 8, !2448, i64 16, !2287, i64 24}
!13395 = !DILocation(line: 53, column: 3, scope: !13374)
!13396 = !DILocation(line: 53, column: 9, scope: !13374)
!13397 = !DILocation(line: 53, column: 18, scope: !13374)
!13398 = !DILocation(line: 54, column: 20, scope: !13374)
!13399 = !DILocation(line: 54, column: 3, scope: !13374)
!13400 = !DILocation(line: 54, column: 9, scope: !13374)
!13401 = !DILocation(line: 54, column: 18, scope: !13374)
!13402 = !{!13394, !2448, i64 8}
!13403 = !DILocation(line: 55, column: 3, scope: !13374)
!13404 = !DILocation(line: 55, column: 9, scope: !13374)
!13405 = !DILocation(line: 55, column: 15, scope: !13374)
!13406 = !{!13394, !2448, i64 16}
!13407 = !DILocation(line: 56, column: 19, scope: !13374)
!13408 = !DILocation(line: 56, column: 29, scope: !13374)
!13409 = !DILocation(line: 56, column: 3, scope: !13374)
!13410 = !DILocation(line: 56, column: 9, scope: !13374)
!13411 = !DILocation(line: 56, column: 17, scope: !13374)
!13412 = !{!13394, !2287, i64 24}
!13413 = !DILocation(line: 58, column: 10, scope: !13374)
!13414 = !DILocation(line: 58, column: 3, scope: !13374)
!13415 = distinct !DISubprogram(name: "heap_default_compare", scope: !1533, file: !1533, line: 63, type: !337, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13416 = !DILocalVariable(name: "a", arg: 1, scope: !13415, file: !1533, line: 63, type: !339)
!13417 = !DILocation(line: 63, column: 35, scope: !13415)
!13418 = !DILocalVariable(name: "b", arg: 2, scope: !13415, file: !1533, line: 63, type: !339)
!13419 = !DILocation(line: 63, column: 50, scope: !13415)
!13420 = !DILocation(line: 65, column: 3, scope: !13415)
!13421 = distinct !DISubprogram(name: "heap_free", scope: !1533, file: !1533, line: 70, type: !1540, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13422 = !DILocalVariable(name: "heap", arg: 1, scope: !13421, file: !1533, line: 70, type: !1531)
!13423 = !DILocation(line: 70, column: 25, scope: !13421)
!13424 = !DILocation(line: 72, column: 9, scope: !13421)
!13425 = !DILocation(line: 72, column: 15, scope: !13421)
!13426 = !DILocation(line: 72, column: 3, scope: !13421)
!13427 = !DILocation(line: 73, column: 9, scope: !13421)
!13428 = !DILocation(line: 73, column: 3, scope: !13421)
!13429 = !DILocation(line: 74, column: 1, scope: !13421)
!13430 = distinct !DISubprogram(name: "heap_insert", scope: !1533, file: !1533, line: 79, type: !1542, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13431 = !DILocalVariable(name: "heap", arg: 1, scope: !13430, file: !1533, line: 79, type: !1531)
!13432 = !DILocation(line: 79, column: 27, scope: !13430)
!13433 = !DILocalVariable(name: "item", arg: 2, scope: !13430, file: !1533, line: 79, type: !53)
!13434 = !DILocation(line: 79, column: 39, scope: !13430)
!13435 = !DILocation(line: 81, column: 7, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13430, file: !1533, line: 81, column: 7)
!13437 = !DILocation(line: 81, column: 13, scope: !13436)
!13438 = !DILocation(line: 81, column: 22, scope: !13436)
!13439 = !DILocation(line: 81, column: 29, scope: !13436)
!13440 = !DILocation(line: 81, column: 35, scope: !13436)
!13441 = !DILocation(line: 81, column: 26, scope: !13436)
!13442 = !DILocation(line: 81, column: 7, scope: !13430)
!13443 = !DILocation(line: 82, column: 31, scope: !13436)
!13444 = !DILocation(line: 82, column: 37, scope: !13436)
!13445 = !DILocation(line: 82, column: 45, scope: !13436)
!13446 = !DILocation(line: 82, column: 51, scope: !13436)
!13447 = !DILocation(line: 82, column: 19, scope: !13436)
!13448 = !DILocation(line: 82, column: 5, scope: !13436)
!13449 = !DILocation(line: 82, column: 11, scope: !13436)
!13450 = !DILocation(line: 82, column: 17, scope: !13436)
!13451 = !DILocation(line: 85, column: 32, scope: !13430)
!13452 = !DILocation(line: 85, column: 3, scope: !13430)
!13453 = !DILocation(line: 85, column: 9, scope: !13430)
!13454 = !DILocation(line: 85, column: 17, scope: !13430)
!13455 = !DILocation(line: 85, column: 23, scope: !13430)
!13456 = !DILocation(line: 85, column: 15, scope: !13430)
!13457 = !DILocation(line: 85, column: 30, scope: !13430)
!13458 = !DILocation(line: 86, column: 15, scope: !13430)
!13459 = !DILocation(line: 86, column: 21, scope: !13430)
!13460 = !DILocation(line: 86, column: 28, scope: !13430)
!13461 = !DILocation(line: 86, column: 34, scope: !13430)
!13462 = !DILocation(line: 86, column: 41, scope: !13430)
!13463 = !DILocation(line: 86, column: 47, scope: !13430)
!13464 = !DILocation(line: 86, column: 3, scope: !13430)
!13465 = !DILocation(line: 88, column: 3, scope: !13430)
!13466 = distinct !DISubprogram(name: "heapify_up", scope: !1533, file: !1533, line: 138, type: !1548, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13467 = !DILocalVariable(name: "array", arg: 1, scope: !13466, file: !1533, line: 138, type: !1099)
!13468 = !DILocation(line: 138, column: 20, scope: !13466)
!13469 = !DILocalVariable(name: "count", arg: 2, scope: !13466, file: !1533, line: 138, type: !55)
!13470 = !DILocation(line: 138, column: 34, scope: !13466)
!13471 = !DILocalVariable(name: "compare", arg: 3, scope: !13466, file: !1533, line: 139, type: !1539)
!13472 = !DILocation(line: 139, column: 19, scope: !13466)
!13473 = !DILocalVariable(name: "k", scope: !13466, file: !1533, line: 141, type: !55)
!13474 = !DILocation(line: 141, column: 10, scope: !13466)
!13475 = !DILocation(line: 141, column: 14, scope: !13466)
!13476 = !DILocalVariable(name: "new_element", scope: !13466, file: !1533, line: 142, type: !53)
!13477 = !DILocation(line: 142, column: 9, scope: !13466)
!13478 = !DILocation(line: 142, column: 23, scope: !13466)
!13479 = !DILocation(line: 142, column: 29, scope: !13466)
!13480 = !DILocation(line: 144, column: 3, scope: !13466)
!13481 = !DILocation(line: 144, column: 10, scope: !13466)
!13482 = !DILocation(line: 144, column: 12, scope: !13466)
!13483 = !DILocation(line: 144, column: 17, scope: !13466)
!13484 = !DILocation(line: 144, column: 20, scope: !13466)
!13485 = !DILocation(line: 144, column: 29, scope: !13466)
!13486 = !DILocation(line: 144, column: 35, scope: !13466)
!13487 = !DILocation(line: 144, column: 36, scope: !13466)
!13488 = !DILocation(line: 144, column: 41, scope: !13466)
!13489 = !DILocation(line: 144, column: 54, scope: !13466)
!13490 = !DILocation(line: 0, scope: !13466)
!13491 = !DILocation(line: 146, column: 18, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13466, file: !1533, line: 145, column: 5)
!13493 = !DILocation(line: 146, column: 24, scope: !13492)
!13494 = !DILocation(line: 146, column: 25, scope: !13492)
!13495 = !DILocation(line: 146, column: 7, scope: !13492)
!13496 = !DILocation(line: 146, column: 13, scope: !13492)
!13497 = !DILocation(line: 146, column: 16, scope: !13492)
!13498 = !DILocation(line: 147, column: 9, scope: !13492)
!13499 = distinct !{!13499, !13480, !13500}
!13500 = !DILocation(line: 148, column: 5, scope: !13466)
!13501 = !DILocation(line: 150, column: 14, scope: !13466)
!13502 = !DILocation(line: 150, column: 3, scope: !13466)
!13503 = !DILocation(line: 150, column: 9, scope: !13466)
!13504 = !DILocation(line: 150, column: 12, scope: !13466)
!13505 = !DILocation(line: 151, column: 1, scope: !13466)
!13506 = distinct !DISubprogram(name: "heap_remove_top", scope: !1533, file: !1533, line: 94, type: !1544, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13507 = !DILocalVariable(name: "heap", arg: 1, scope: !13506, file: !1533, line: 94, type: !1531)
!13508 = !DILocation(line: 94, column: 31, scope: !13506)
!13509 = !DILocalVariable(name: "top", scope: !13506, file: !1533, line: 96, type: !53)
!13510 = !DILocation(line: 96, column: 9, scope: !13506)
!13511 = !DILocation(line: 98, column: 7, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13506, file: !1533, line: 98, column: 7)
!13513 = !DILocation(line: 98, column: 13, scope: !13512)
!13514 = !DILocation(line: 98, column: 19, scope: !13512)
!13515 = !DILocation(line: 98, column: 7, scope: !13506)
!13516 = !DILocation(line: 99, column: 5, scope: !13512)
!13517 = !DILocation(line: 101, column: 9, scope: !13506)
!13518 = !DILocation(line: 101, column: 15, scope: !13506)
!13519 = !DILocation(line: 101, column: 7, scope: !13506)
!13520 = !DILocation(line: 102, column: 20, scope: !13506)
!13521 = !DILocation(line: 102, column: 26, scope: !13506)
!13522 = !DILocation(line: 102, column: 32, scope: !13506)
!13523 = !DILocation(line: 102, column: 38, scope: !13506)
!13524 = !DILocation(line: 102, column: 43, scope: !13506)
!13525 = !DILocation(line: 102, column: 3, scope: !13506)
!13526 = !DILocation(line: 102, column: 9, scope: !13506)
!13527 = !DILocation(line: 102, column: 18, scope: !13506)
!13528 = !DILocation(line: 103, column: 17, scope: !13506)
!13529 = !DILocation(line: 103, column: 23, scope: !13506)
!13530 = !DILocation(line: 103, column: 30, scope: !13506)
!13531 = !DILocation(line: 103, column: 36, scope: !13506)
!13532 = !DILocation(line: 103, column: 46, scope: !13506)
!13533 = !DILocation(line: 103, column: 52, scope: !13506)
!13534 = !DILocation(line: 103, column: 3, scope: !13506)
!13535 = !DILocation(line: 105, column: 10, scope: !13506)
!13536 = !DILocation(line: 105, column: 3, scope: !13506)
!13537 = !DILocation(line: 106, column: 1, scope: !13506)
!13538 = distinct !DISubprogram(name: "heapify_down", scope: !1533, file: !1533, line: 111, type: !1546, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1526, retainedNodes: !313)
!13539 = !DILocalVariable(name: "array", arg: 1, scope: !13538, file: !1533, line: 111, type: !1099)
!13540 = !DILocation(line: 111, column: 22, scope: !13538)
!13541 = !DILocalVariable(name: "count", arg: 2, scope: !13538, file: !1533, line: 111, type: !55)
!13542 = !DILocation(line: 111, column: 36, scope: !13538)
!13543 = !DILocalVariable(name: "initial", arg: 3, scope: !13538, file: !1533, line: 111, type: !55)
!13544 = !DILocation(line: 111, column: 50, scope: !13538)
!13545 = !DILocalVariable(name: "compare", arg: 4, scope: !13538, file: !1533, line: 112, type: !1539)
!13546 = !DILocation(line: 112, column: 21, scope: !13538)
!13547 = !DILocalVariable(name: "element", scope: !13538, file: !1533, line: 114, type: !53)
!13548 = !DILocation(line: 114, column: 9, scope: !13538)
!13549 = !DILocation(line: 114, column: 19, scope: !13538)
!13550 = !DILocation(line: 114, column: 25, scope: !13538)
!13551 = !DILocalVariable(name: "parent", scope: !13538, file: !1533, line: 116, type: !55)
!13552 = !DILocation(line: 116, column: 10, scope: !13538)
!13553 = !DILocation(line: 116, column: 19, scope: !13538)
!13554 = !DILocation(line: 117, column: 3, scope: !13538)
!13555 = !DILocation(line: 117, column: 10, scope: !13538)
!13556 = !DILocation(line: 117, column: 20, scope: !13538)
!13557 = !DILocation(line: 117, column: 26, scope: !13538)
!13558 = !DILocation(line: 117, column: 17, scope: !13538)
!13559 = !DILocalVariable(name: "child", scope: !13560, file: !1533, line: 119, type: !55)
!13560 = distinct !DILexicalBlock(scope: !13538, file: !1533, line: 118, column: 5)
!13561 = !DILocation(line: 119, column: 14, scope: !13560)
!13562 = !DILocation(line: 119, column: 26, scope: !13560)
!13563 = !DILocation(line: 119, column: 24, scope: !13560)
!13564 = !DILocation(line: 121, column: 11, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !1533, line: 121, column: 11)
!13566 = !DILocation(line: 121, column: 19, scope: !13565)
!13567 = !DILocation(line: 121, column: 17, scope: !13565)
!13568 = !DILocation(line: 121, column: 25, scope: !13565)
!13569 = !DILocation(line: 121, column: 28, scope: !13565)
!13570 = !DILocation(line: 121, column: 37, scope: !13565)
!13571 = !DILocation(line: 121, column: 43, scope: !13565)
!13572 = !DILocation(line: 121, column: 51, scope: !13565)
!13573 = !DILocation(line: 121, column: 57, scope: !13565)
!13574 = !DILocation(line: 121, column: 62, scope: !13565)
!13575 = !DILocation(line: 121, column: 67, scope: !13565)
!13576 = !DILocation(line: 121, column: 11, scope: !13560)
!13577 = !DILocation(line: 122, column: 14, scope: !13565)
!13578 = !DILocation(line: 122, column: 9, scope: !13565)
!13579 = !DILocation(line: 124, column: 11, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13560, file: !1533, line: 124, column: 11)
!13581 = !DILocation(line: 124, column: 20, scope: !13580)
!13582 = !DILocation(line: 124, column: 26, scope: !13580)
!13583 = !DILocation(line: 124, column: 34, scope: !13580)
!13584 = !DILocation(line: 124, column: 43, scope: !13580)
!13585 = !DILocation(line: 124, column: 11, scope: !13560)
!13586 = !DILocation(line: 125, column: 9, scope: !13580)
!13587 = !DILocation(line: 127, column: 23, scope: !13560)
!13588 = !DILocation(line: 127, column: 29, scope: !13560)
!13589 = !DILocation(line: 127, column: 7, scope: !13560)
!13590 = !DILocation(line: 127, column: 13, scope: !13560)
!13591 = !DILocation(line: 127, column: 21, scope: !13560)
!13592 = !DILocation(line: 128, column: 16, scope: !13560)
!13593 = !DILocation(line: 128, column: 14, scope: !13560)
!13594 = distinct !{!13594, !13554, !13595}
!13595 = !DILocation(line: 129, column: 5, scope: !13538)
!13596 = !DILocation(line: 131, column: 19, scope: !13538)
!13597 = !DILocation(line: 131, column: 3, scope: !13538)
!13598 = !DILocation(line: 131, column: 9, scope: !13538)
!13599 = !DILocation(line: 131, column: 17, scope: !13538)
!13600 = !DILocation(line: 132, column: 10, scope: !13538)
!13601 = !DILocation(line: 132, column: 3, scope: !13538)
!13602 = distinct !DISubprogram(name: "inttostr", scope: !13603, file: !13603, line: 36, type: !1553, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1550, retainedNodes: !313)
!13603 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13604 = !DILocalVariable(name: "i", arg: 1, scope: !13602, file: !13603, line: 36, type: !7)
!13605 = !DILocation(line: 36, column: 19, scope: !13602)
!13606 = !DILocalVariable(name: "buf", arg: 2, scope: !13602, file: !13603, line: 36, type: !9)
!13607 = !DILocation(line: 36, column: 28, scope: !13602)
!13608 = !DILocalVariable(name: "p", scope: !13602, file: !13603, line: 38, type: !9)
!13609 = !DILocation(line: 38, column: 9, scope: !13602)
!13610 = !DILocation(line: 38, column: 13, scope: !13602)
!13611 = !DILocation(line: 38, column: 17, scope: !13602)
!13612 = !DILocation(line: 39, column: 4, scope: !13602)
!13613 = !DILocation(line: 39, column: 6, scope: !13602)
!13614 = !DILocation(line: 41, column: 7, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13602, file: !13603, line: 41, column: 7)
!13616 = !DILocation(line: 41, column: 9, scope: !13615)
!13617 = !DILocation(line: 41, column: 7, scope: !13602)
!13618 = !DILocation(line: 43, column: 7, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13615, file: !13603, line: 42, column: 5)
!13620 = !DILocation(line: 44, column: 22, scope: !13619)
!13621 = !DILocation(line: 44, column: 24, scope: !13619)
!13622 = !DILocation(line: 44, column: 20, scope: !13619)
!13623 = !DILocation(line: 44, column: 16, scope: !13619)
!13624 = !DILocation(line: 44, column: 10, scope: !13619)
!13625 = !DILocation(line: 44, column: 14, scope: !13619)
!13626 = !DILocation(line: 44, column: 9, scope: !13619)
!13627 = !DILocation(line: 45, column: 17, scope: !13619)
!13628 = !DILocation(line: 45, column: 24, scope: !13619)
!13629 = distinct !{!13629, !13618, !13630}
!13630 = !DILocation(line: 45, column: 28, scope: !13619)
!13631 = !DILocation(line: 47, column: 8, scope: !13619)
!13632 = !DILocation(line: 47, column: 12, scope: !13619)
!13633 = !DILocation(line: 48, column: 5, scope: !13619)
!13634 = !DILocation(line: 51, column: 7, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13615, file: !13603, line: 50, column: 5)
!13636 = !DILocation(line: 52, column: 22, scope: !13635)
!13637 = !DILocation(line: 52, column: 24, scope: !13635)
!13638 = !DILocation(line: 52, column: 20, scope: !13635)
!13639 = !DILocation(line: 52, column: 16, scope: !13635)
!13640 = !DILocation(line: 52, column: 10, scope: !13635)
!13641 = !DILocation(line: 52, column: 14, scope: !13635)
!13642 = !DILocation(line: 52, column: 9, scope: !13635)
!13643 = !DILocation(line: 53, column: 17, scope: !13635)
!13644 = !DILocation(line: 53, column: 24, scope: !13635)
!13645 = distinct !{!13645, !13634, !13646}
!13646 = !DILocation(line: 53, column: 28, scope: !13635)
!13647 = !DILocation(line: 56, column: 10, scope: !13602)
!13648 = !DILocation(line: 56, column: 3, scope: !13602)
!13649 = distinct !DISubprogram(name: "uinttostr", scope: !13603, file: !13603, line: 36, type: !1558, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1555, retainedNodes: !313)
!13650 = !DILocalVariable(name: "i", arg: 1, scope: !13649, file: !13603, line: 36, type: !69)
!13651 = !DILocation(line: 36, column: 19, scope: !13649)
!13652 = !DILocalVariable(name: "buf", arg: 2, scope: !13649, file: !13603, line: 36, type: !9)
!13653 = !DILocation(line: 36, column: 28, scope: !13649)
!13654 = !DILocalVariable(name: "p", scope: !13649, file: !13603, line: 38, type: !9)
!13655 = !DILocation(line: 38, column: 9, scope: !13649)
!13656 = !DILocation(line: 38, column: 13, scope: !13649)
!13657 = !DILocation(line: 38, column: 17, scope: !13649)
!13658 = !DILocation(line: 39, column: 4, scope: !13649)
!13659 = !DILocation(line: 39, column: 6, scope: !13649)
!13660 = !DILocation(line: 41, column: 7, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13649, file: !13603, line: 41, column: 7)
!13662 = !DILocation(line: 41, column: 9, scope: !13661)
!13663 = !DILocation(line: 41, column: 7, scope: !13649)
!13664 = !DILocation(line: 43, column: 7, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13661, file: !13603, line: 42, column: 5)
!13666 = !DILocation(line: 44, column: 22, scope: !13665)
!13667 = !DILocation(line: 44, column: 24, scope: !13665)
!13668 = !DILocation(line: 44, column: 20, scope: !13665)
!13669 = !DILocation(line: 44, column: 16, scope: !13665)
!13670 = !DILocation(line: 44, column: 10, scope: !13665)
!13671 = !DILocation(line: 44, column: 14, scope: !13665)
!13672 = !DILocation(line: 44, column: 9, scope: !13665)
!13673 = !DILocation(line: 45, column: 17, scope: !13665)
!13674 = !DILocation(line: 45, column: 24, scope: !13665)
!13675 = distinct !{!13675, !13664, !13676}
!13676 = !DILocation(line: 45, column: 28, scope: !13665)
!13677 = !DILocation(line: 47, column: 8, scope: !13665)
!13678 = !DILocation(line: 47, column: 12, scope: !13665)
!13679 = !DILocation(line: 48, column: 5, scope: !13665)
!13680 = !DILocation(line: 51, column: 7, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13661, file: !13603, line: 50, column: 5)
!13682 = !DILocation(line: 52, column: 22, scope: !13681)
!13683 = !DILocation(line: 52, column: 24, scope: !13681)
!13684 = !DILocation(line: 52, column: 20, scope: !13681)
!13685 = !DILocation(line: 52, column: 16, scope: !13681)
!13686 = !DILocation(line: 52, column: 10, scope: !13681)
!13687 = !DILocation(line: 52, column: 14, scope: !13681)
!13688 = !DILocation(line: 52, column: 9, scope: !13681)
!13689 = !DILocation(line: 53, column: 17, scope: !13681)
!13690 = !DILocation(line: 53, column: 24, scope: !13681)
!13691 = distinct !{!13691, !13680, !13692}
!13692 = !DILocation(line: 53, column: 28, scope: !13681)
!13693 = !DILocation(line: 56, column: 10, scope: !13649)
!13694 = !DILocation(line: 56, column: 3, scope: !13649)
!13695 = distinct !DISubprogram(name: "umaxtostr", scope: !13603, file: !13603, line: 36, type: !1563, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1560, retainedNodes: !313)
!13696 = !DILocalVariable(name: "i", arg: 1, scope: !13695, file: !13603, line: 36, type: !361)
!13697 = !DILocation(line: 36, column: 19, scope: !13695)
!13698 = !DILocalVariable(name: "buf", arg: 2, scope: !13695, file: !13603, line: 36, type: !9)
!13699 = !DILocation(line: 36, column: 28, scope: !13695)
!13700 = !DILocalVariable(name: "p", scope: !13695, file: !13603, line: 38, type: !9)
!13701 = !DILocation(line: 38, column: 9, scope: !13695)
!13702 = !DILocation(line: 38, column: 13, scope: !13695)
!13703 = !DILocation(line: 38, column: 17, scope: !13695)
!13704 = !DILocation(line: 39, column: 4, scope: !13695)
!13705 = !DILocation(line: 39, column: 6, scope: !13695)
!13706 = !DILocation(line: 41, column: 7, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13695, file: !13603, line: 41, column: 7)
!13708 = !DILocation(line: 41, column: 9, scope: !13707)
!13709 = !DILocation(line: 41, column: 7, scope: !13695)
!13710 = !DILocation(line: 43, column: 7, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13707, file: !13603, line: 42, column: 5)
!13712 = !DILocation(line: 44, column: 22, scope: !13711)
!13713 = !DILocation(line: 44, column: 24, scope: !13711)
!13714 = !DILocation(line: 44, column: 20, scope: !13711)
!13715 = !DILocation(line: 44, column: 16, scope: !13711)
!13716 = !DILocation(line: 44, column: 10, scope: !13711)
!13717 = !DILocation(line: 44, column: 14, scope: !13711)
!13718 = !DILocation(line: 44, column: 9, scope: !13711)
!13719 = !DILocation(line: 45, column: 17, scope: !13711)
!13720 = !DILocation(line: 45, column: 24, scope: !13711)
!13721 = distinct !{!13721, !13710, !13722}
!13722 = !DILocation(line: 45, column: 28, scope: !13711)
!13723 = !DILocation(line: 47, column: 8, scope: !13711)
!13724 = !DILocation(line: 47, column: 12, scope: !13711)
!13725 = !DILocation(line: 48, column: 5, scope: !13711)
!13726 = !DILocation(line: 51, column: 7, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13707, file: !13603, line: 50, column: 5)
!13728 = !DILocation(line: 52, column: 22, scope: !13727)
!13729 = !DILocation(line: 52, column: 24, scope: !13727)
!13730 = !DILocation(line: 52, column: 20, scope: !13727)
!13731 = !DILocation(line: 52, column: 16, scope: !13727)
!13732 = !DILocation(line: 52, column: 10, scope: !13727)
!13733 = !DILocation(line: 52, column: 14, scope: !13727)
!13734 = !DILocation(line: 52, column: 9, scope: !13727)
!13735 = !DILocation(line: 53, column: 17, scope: !13727)
!13736 = !DILocation(line: 53, column: 24, scope: !13727)
!13737 = distinct !{!13737, !13726, !13738}
!13738 = !DILocation(line: 53, column: 28, scope: !13727)
!13739 = !DILocation(line: 56, column: 10, scope: !13695)
!13740 = !DILocation(line: 56, column: 3, scope: !13695)
!13741 = distinct !DISubprogram(name: "gnu_mbswidth", scope: !13742, file: !13742, line: 47, type: !1568, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1565, retainedNodes: !313)
!13742 = !DIFile(filename: "lib/mbswidth.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13743 = !DILocalVariable(name: "string", arg: 1, scope: !13741, file: !13742, line: 47, type: !88)
!13744 = !DILocation(line: 47, column: 23, scope: !13741)
!13745 = !DILocalVariable(name: "flags", arg: 2, scope: !13741, file: !13742, line: 47, type: !7)
!13746 = !DILocation(line: 47, column: 35, scope: !13741)
!13747 = !DILocation(line: 49, column: 21, scope: !13741)
!13748 = !DILocation(line: 49, column: 37, scope: !13741)
!13749 = !DILocation(line: 49, column: 29, scope: !13741)
!13750 = !DILocation(line: 49, column: 46, scope: !13741)
!13751 = !DILocation(line: 49, column: 10, scope: !13741)
!13752 = !DILocation(line: 49, column: 3, scope: !13741)
!13753 = distinct !DISubprogram(name: "mbsnwidth", scope: !13742, file: !13742, line: 57, type: !1570, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1565, retainedNodes: !313)
!13754 = !DILocalVariable(name: "string", arg: 1, scope: !13753, file: !13742, line: 57, type: !88)
!13755 = !DILocation(line: 57, column: 24, scope: !13753)
!13756 = !DILocalVariable(name: "nbytes", arg: 2, scope: !13753, file: !13742, line: 57, type: !55)
!13757 = !DILocation(line: 57, column: 39, scope: !13753)
!13758 = !DILocalVariable(name: "flags", arg: 3, scope: !13753, file: !13742, line: 57, type: !7)
!13759 = !DILocation(line: 57, column: 51, scope: !13753)
!13760 = !DILocalVariable(name: "p", scope: !13753, file: !13742, line: 59, type: !88)
!13761 = !DILocation(line: 59, column: 15, scope: !13753)
!13762 = !DILocation(line: 59, column: 19, scope: !13753)
!13763 = !DILocalVariable(name: "plimit", scope: !13753, file: !13742, line: 60, type: !88)
!13764 = !DILocation(line: 60, column: 15, scope: !13753)
!13765 = !DILocation(line: 60, column: 24, scope: !13753)
!13766 = !DILocation(line: 60, column: 28, scope: !13753)
!13767 = !DILocation(line: 60, column: 26, scope: !13753)
!13768 = !DILocalVariable(name: "width", scope: !13753, file: !13742, line: 61, type: !7)
!13769 = !DILocation(line: 61, column: 7, scope: !13753)
!13770 = !DILocation(line: 63, column: 9, scope: !13753)
!13771 = !DILocation(line: 64, column: 7, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13753, file: !13742, line: 64, column: 7)
!13773 = !DILocation(line: 64, column: 18, scope: !13772)
!13774 = !DILocation(line: 64, column: 7, scope: !13753)
!13775 = !DILocation(line: 66, column: 7, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13772, file: !13742, line: 65, column: 5)
!13777 = !DILocation(line: 66, column: 14, scope: !13776)
!13778 = !DILocation(line: 66, column: 18, scope: !13776)
!13779 = !DILocation(line: 66, column: 16, scope: !13776)
!13780 = !DILocation(line: 67, column: 18, scope: !13776)
!13781 = !DILocation(line: 67, column: 17, scope: !13776)
!13782 = !DILocation(line: 67, column: 9, scope: !13776)
!13783 = !DILocation(line: 90, column: 16, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13776, file: !13742, line: 68, column: 11)
!13785 = !DILocation(line: 91, column: 20, scope: !13784)
!13786 = !DILocation(line: 92, column: 15, scope: !13784)
!13787 = !DILocalVariable(name: "mbstate", scope: !13788, file: !13742, line: 96, type: !1572)
!13788 = distinct !DILexicalBlock(scope: !13784, file: !13742, line: 95, column: 15)
!13789 = !DILocation(line: 96, column: 27, scope: !13788)
!13790 = !DILocation(line: 97, column: 17, scope: !13788)
!13791 = !DILocation(line: 98, column: 17, scope: !13788)
!13792 = !DILocalVariable(name: "wc", scope: !13793, file: !13742, line: 100, type: !1308)
!13793 = distinct !DILexicalBlock(scope: !13788, file: !13742, line: 99, column: 19)
!13794 = !DILocation(line: 100, column: 29, scope: !13793)
!13795 = !DILocalVariable(name: "bytes", scope: !13793, file: !13742, line: 101, type: !55)
!13796 = !DILocation(line: 101, column: 28, scope: !13793)
!13797 = !DILocalVariable(name: "w", scope: !13793, file: !13742, line: 102, type: !7)
!13798 = !DILocation(line: 102, column: 25, scope: !13793)
!13799 = !DILocation(line: 104, column: 43, scope: !13793)
!13800 = !DILocation(line: 104, column: 46, scope: !13793)
!13801 = !DILocation(line: 104, column: 55, scope: !13793)
!13802 = !DILocation(line: 104, column: 53, scope: !13793)
!13803 = !DILocation(line: 104, column: 29, scope: !13793)
!13804 = !DILocation(line: 104, column: 27, scope: !13793)
!13805 = !DILocation(line: 106, column: 25, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13793, file: !13742, line: 106, column: 25)
!13807 = !DILocation(line: 106, column: 31, scope: !13806)
!13808 = !DILocation(line: 106, column: 25, scope: !13793)
!13809 = !DILocation(line: 109, column: 31, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13811, file: !13742, line: 109, column: 29)
!13811 = distinct !DILexicalBlock(scope: !13806, file: !13742, line: 108, column: 23)
!13812 = !DILocation(line: 109, column: 37, scope: !13810)
!13813 = !DILocation(line: 109, column: 29, scope: !13811)
!13814 = !DILocation(line: 111, column: 30, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13810, file: !13742, line: 110, column: 27)
!13816 = !DILocation(line: 112, column: 34, scope: !13815)
!13817 = !DILocation(line: 113, column: 29, scope: !13815)
!13818 = !DILocation(line: 116, column: 27, scope: !13810)
!13819 = !DILocation(line: 119, column: 25, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13793, file: !13742, line: 119, column: 25)
!13821 = !DILocation(line: 119, column: 31, scope: !13820)
!13822 = !DILocation(line: 119, column: 25, scope: !13793)
!13823 = !DILocation(line: 122, column: 31, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13825, file: !13742, line: 122, column: 29)
!13825 = distinct !DILexicalBlock(scope: !13820, file: !13742, line: 121, column: 23)
!13826 = !DILocation(line: 122, column: 37, scope: !13824)
!13827 = !DILocation(line: 122, column: 29, scope: !13825)
!13828 = !DILocation(line: 124, column: 33, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13824, file: !13742, line: 123, column: 27)
!13830 = !DILocation(line: 124, column: 31, scope: !13829)
!13831 = !DILocation(line: 125, column: 34, scope: !13829)
!13832 = !DILocation(line: 126, column: 29, scope: !13829)
!13833 = !DILocation(line: 129, column: 27, scope: !13824)
!13834 = !DILocation(line: 132, column: 25, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13793, file: !13742, line: 132, column: 25)
!13836 = !DILocation(line: 132, column: 31, scope: !13835)
!13837 = !DILocation(line: 132, column: 25, scope: !13793)
!13838 = !DILocation(line: 134, column: 29, scope: !13835)
!13839 = !DILocation(line: 134, column: 23, scope: !13835)
!13840 = !DILocation(line: 136, column: 34, scope: !13793)
!13841 = !DILocation(line: 136, column: 25, scope: !13793)
!13842 = !DILocation(line: 136, column: 23, scope: !13793)
!13843 = !DILocation(line: 137, column: 25, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13793, file: !13742, line: 137, column: 25)
!13845 = !DILocation(line: 137, column: 27, scope: !13844)
!13846 = !DILocation(line: 137, column: 25, scope: !13793)
!13847 = !DILocation(line: 140, column: 29, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13849, file: !13742, line: 140, column: 29)
!13849 = distinct !DILexicalBlock(scope: !13844, file: !13742, line: 139, column: 23)
!13850 = !DILocation(line: 140, column: 43, scope: !13848)
!13851 = !DILocation(line: 140, column: 41, scope: !13848)
!13852 = !DILocation(line: 140, column: 31, scope: !13848)
!13853 = !DILocation(line: 140, column: 29, scope: !13849)
!13854 = !DILocation(line: 141, column: 27, scope: !13848)
!13855 = !DILocation(line: 142, column: 34, scope: !13849)
!13856 = !DILocation(line: 142, column: 31, scope: !13849)
!13857 = !DILocation(line: 143, column: 23, scope: !13849)
!13858 = !DILocation(line: 146, column: 29, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13844, file: !13742, line: 146, column: 27)
!13860 = !DILocation(line: 146, column: 35, scope: !13859)
!13861 = !DILocation(line: 146, column: 27, scope: !13844)
!13862 = !DILocation(line: 148, column: 42, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13864, file: !13742, line: 148, column: 31)
!13864 = distinct !DILexicalBlock(scope: !13859, file: !13742, line: 147, column: 25)
!13865 = !DILocation(line: 148, column: 32, scope: !13863)
!13866 = !DILocation(line: 148, column: 31, scope: !13864)
!13867 = !DILocation(line: 150, column: 35, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13869, file: !13742, line: 150, column: 35)
!13869 = distinct !DILexicalBlock(scope: !13863, file: !13742, line: 149, column: 29)
!13870 = !DILocation(line: 150, column: 41, scope: !13868)
!13871 = !DILocation(line: 150, column: 35, scope: !13869)
!13872 = !DILocation(line: 151, column: 33, scope: !13868)
!13873 = !DILocation(line: 152, column: 36, scope: !13869)
!13874 = !DILocation(line: 153, column: 29, scope: !13869)
!13875 = !DILocation(line: 154, column: 25, scope: !13864)
!13876 = !DILocation(line: 156, column: 25, scope: !13859)
!13877 = !DILocation(line: 158, column: 26, scope: !13793)
!13878 = !DILocation(line: 158, column: 23, scope: !13793)
!13879 = !DILocation(line: 159, column: 19, scope: !13793)
!13880 = !DILocation(line: 160, column: 26, scope: !13788)
!13881 = !DILocation(line: 160, column: 24, scope: !13788)
!13882 = distinct !{!13882, !13791, !13883}
!13883 = !DILocation(line: 160, column: 44, scope: !13788)
!13884 = !DILocation(line: 162, column: 15, scope: !13784)
!13885 = distinct !{!13885, !13775, !13886}
!13886 = !DILocation(line: 163, column: 11, scope: !13776)
!13887 = !DILocation(line: 164, column: 14, scope: !13776)
!13888 = !DILocation(line: 164, column: 7, scope: !13776)
!13889 = !DILocation(line: 167, column: 3, scope: !13753)
!13890 = !DILocation(line: 167, column: 10, scope: !13753)
!13891 = !DILocation(line: 167, column: 14, scope: !13753)
!13892 = !DILocation(line: 167, column: 12, scope: !13753)
!13893 = !DILocalVariable(name: "c", scope: !13894, file: !13742, line: 169, type: !321)
!13894 = distinct !DILexicalBlock(scope: !13753, file: !13742, line: 168, column: 5)
!13895 = !DILocation(line: 169, column: 21, scope: !13894)
!13896 = !DILocation(line: 169, column: 43, scope: !13894)
!13897 = !DILocation(line: 169, column: 41, scope: !13894)
!13898 = !DILocation(line: 171, column: 11, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13894, file: !13742, line: 171, column: 11)
!13900 = !DILocation(line: 171, column: 11, scope: !13894)
!13901 = !DILocation(line: 173, column: 15, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13903, file: !13742, line: 173, column: 15)
!13903 = distinct !DILexicalBlock(scope: !13899, file: !13742, line: 172, column: 9)
!13904 = !DILocation(line: 173, column: 21, scope: !13902)
!13905 = !DILocation(line: 173, column: 15, scope: !13903)
!13906 = !DILocation(line: 174, column: 13, scope: !13902)
!13907 = !DILocation(line: 175, column: 16, scope: !13903)
!13908 = !DILocation(line: 176, column: 9, scope: !13903)
!13909 = !DILocation(line: 177, column: 18, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13899, file: !13742, line: 177, column: 16)
!13911 = !DILocation(line: 177, column: 24, scope: !13910)
!13912 = !DILocation(line: 177, column: 16, scope: !13899)
!13913 = !DILocation(line: 179, column: 16, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !13742, line: 179, column: 15)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !13742, line: 178, column: 9)
!13916 = !DILocation(line: 179, column: 15, scope: !13915)
!13917 = !DILocation(line: 181, column: 19, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !13742, line: 181, column: 19)
!13919 = distinct !DILexicalBlock(scope: !13914, file: !13742, line: 180, column: 13)
!13920 = !DILocation(line: 181, column: 25, scope: !13918)
!13921 = !DILocation(line: 181, column: 19, scope: !13919)
!13922 = !DILocation(line: 182, column: 17, scope: !13918)
!13923 = !DILocation(line: 183, column: 20, scope: !13919)
!13924 = !DILocation(line: 184, column: 13, scope: !13919)
!13925 = !DILocation(line: 185, column: 9, scope: !13915)
!13926 = !DILocation(line: 187, column: 9, scope: !13910)
!13927 = distinct !{!13927, !13889, !13928}
!13928 = !DILocation(line: 188, column: 5, scope: !13753)
!13929 = !DILocation(line: 189, column: 10, scope: !13753)
!13930 = !DILocation(line: 189, column: 3, scope: !13753)
!13931 = !DILabel(scope: !13753, name: "overflow", file: !13742, line: 191)
!13932 = !DILocation(line: 191, column: 2, scope: !13753)
!13933 = !DILocation(line: 192, column: 3, scope: !13753)
!13934 = !DILocation(line: 193, column: 1, scope: !13753)
!13935 = distinct !DISubprogram(name: "num_processors", scope: !13936, file: !13936, line: 371, type: !1592, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1582, retainedNodes: !313)
!13936 = !DIFile(filename: "lib/nproc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13937 = !DILocalVariable(name: "query", arg: 1, scope: !13935, file: !13936, line: 371, type: !1585)
!13938 = !DILocation(line: 371, column: 34, scope: !13935)
!13939 = !DILocalVariable(name: "omp_env_limit", scope: !13935, file: !13936, line: 373, type: !57)
!13940 = !DILocation(line: 373, column: 21, scope: !13935)
!13941 = !DILocation(line: 375, column: 7, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13935, file: !13936, line: 375, column: 7)
!13943 = !DILocation(line: 375, column: 13, scope: !13942)
!13944 = !DILocation(line: 375, column: 7, scope: !13935)
!13945 = !DILocalVariable(name: "omp_env_threads", scope: !13946, file: !13936, line: 377, type: !57)
!13946 = distinct !DILexicalBlock(scope: !13942, file: !13936, line: 376, column: 5)
!13947 = !DILocation(line: 377, column: 25, scope: !13946)
!13948 = !DILocation(line: 380, column: 44, scope: !13946)
!13949 = !DILocation(line: 380, column: 25, scope: !13946)
!13950 = !DILocation(line: 380, column: 23, scope: !13946)
!13951 = !DILocation(line: 381, column: 42, scope: !13946)
!13952 = !DILocation(line: 381, column: 23, scope: !13946)
!13953 = !DILocation(line: 381, column: 21, scope: !13946)
!13954 = !DILocation(line: 382, column: 13, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13946, file: !13936, line: 382, column: 11)
!13956 = !DILocation(line: 382, column: 11, scope: !13946)
!13957 = !DILocation(line: 383, column: 23, scope: !13955)
!13958 = !DILocation(line: 383, column: 9, scope: !13955)
!13959 = !DILocation(line: 385, column: 11, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13946, file: !13936, line: 385, column: 11)
!13961 = !DILocation(line: 385, column: 11, scope: !13946)
!13962 = !DILocation(line: 386, column: 16, scope: !13960)
!13963 = !DILocation(line: 386, column: 9, scope: !13960)
!13964 = !DILocation(line: 388, column: 13, scope: !13946)
!13965 = !DILocation(line: 389, column: 5, scope: !13946)
!13966 = !DILocalVariable(name: "nprocs", scope: !13967, file: !13936, line: 392, type: !57)
!13967 = distinct !DILexicalBlock(scope: !13935, file: !13936, line: 391, column: 3)
!13968 = !DILocation(line: 392, column: 19, scope: !13967)
!13969 = !DILocation(line: 392, column: 57, scope: !13967)
!13970 = !DILocation(line: 392, column: 28, scope: !13967)
!13971 = !DILocation(line: 393, column: 12, scope: !13967)
!13972 = !DILocation(line: 393, column: 5, scope: !13967)
!13973 = !DILocation(line: 395, column: 1, scope: !13935)
!13974 = distinct !DISubprogram(name: "parse_omp_threads", scope: !13936, file: !13936, line: 336, type: !1594, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1582, retainedNodes: !313)
!13975 = !DILocalVariable(name: "threads", arg: 1, scope: !13974, file: !13936, line: 336, type: !88)
!13976 = !DILocation(line: 336, column: 32, scope: !13974)
!13977 = !DILocalVariable(name: "ret", scope: !13974, file: !13936, line: 338, type: !57)
!13978 = !DILocation(line: 338, column: 21, scope: !13974)
!13979 = !DILocation(line: 340, column: 7, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13974, file: !13936, line: 340, column: 7)
!13981 = !DILocation(line: 340, column: 15, scope: !13980)
!13982 = !DILocation(line: 340, column: 7, scope: !13974)
!13983 = !DILocation(line: 341, column: 12, scope: !13980)
!13984 = !DILocation(line: 341, column: 5, scope: !13980)
!13985 = !DILocation(line: 345, column: 3, scope: !13974)
!13986 = !DILocation(line: 345, column: 11, scope: !13974)
!13987 = !DILocation(line: 345, column: 10, scope: !13974)
!13988 = !DILocation(line: 345, column: 19, scope: !13974)
!13989 = !DILocation(line: 345, column: 27, scope: !13974)
!13990 = !DILocation(line: 345, column: 42, scope: !13974)
!13991 = !DILocation(line: 345, column: 41, scope: !13974)
!13992 = !DILocation(line: 345, column: 30, scope: !13974)
!13993 = !DILocation(line: 0, scope: !13974)
!13994 = !DILocation(line: 346, column: 12, scope: !13974)
!13995 = distinct !{!13995, !13985, !13994}
!13996 = !DILocation(line: 349, column: 19, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13974, file: !13936, line: 349, column: 7)
!13998 = !DILocation(line: 349, column: 18, scope: !13997)
!13999 = !DILocation(line: 349, column: 7, scope: !13997)
!14000 = !DILocation(line: 349, column: 7, scope: !13974)
!14001 = !DILocalVariable(name: "endptr", scope: !14002, file: !13936, line: 351, type: !9)
!14002 = distinct !DILexicalBlock(scope: !13997, file: !13936, line: 350, column: 5)
!14003 = !DILocation(line: 351, column: 13, scope: !14002)
!14004 = !DILocalVariable(name: "value", scope: !14002, file: !13936, line: 352, type: !57)
!14005 = !DILocation(line: 352, column: 25, scope: !14002)
!14006 = !DILocation(line: 352, column: 42, scope: !14002)
!14007 = !DILocation(line: 352, column: 33, scope: !14002)
!14008 = !DILocation(line: 354, column: 11, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14002, file: !13936, line: 354, column: 11)
!14010 = !DILocation(line: 354, column: 18, scope: !14009)
!14011 = !DILocation(line: 354, column: 11, scope: !14002)
!14012 = !DILocation(line: 356, column: 11, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14009, file: !13936, line: 355, column: 9)
!14014 = !DILocation(line: 356, column: 19, scope: !14013)
!14015 = !DILocation(line: 356, column: 18, scope: !14013)
!14016 = !DILocation(line: 356, column: 26, scope: !14013)
!14017 = !DILocation(line: 356, column: 34, scope: !14013)
!14018 = !DILocation(line: 356, column: 49, scope: !14013)
!14019 = !DILocation(line: 356, column: 48, scope: !14013)
!14020 = !DILocation(line: 356, column: 37, scope: !14013)
!14021 = !DILocation(line: 0, scope: !14013)
!14022 = !DILocation(line: 357, column: 19, scope: !14013)
!14023 = distinct !{!14023, !14012, !14022}
!14024 = !DILocation(line: 358, column: 16, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14013, file: !13936, line: 358, column: 15)
!14026 = !DILocation(line: 358, column: 15, scope: !14025)
!14027 = !DILocation(line: 358, column: 23, scope: !14025)
!14028 = !DILocation(line: 358, column: 15, scope: !14013)
!14029 = !DILocation(line: 359, column: 20, scope: !14025)
!14030 = !DILocation(line: 359, column: 13, scope: !14025)
!14031 = !DILocation(line: 362, column: 21, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14025, file: !13936, line: 362, column: 20)
!14033 = !DILocation(line: 362, column: 20, scope: !14032)
!14034 = !DILocation(line: 362, column: 28, scope: !14032)
!14035 = !DILocation(line: 362, column: 20, scope: !14025)
!14036 = !DILocation(line: 363, column: 20, scope: !14032)
!14037 = !DILocation(line: 363, column: 13, scope: !14032)
!14038 = !DILocation(line: 364, column: 9, scope: !14013)
!14039 = !DILocation(line: 365, column: 5, scope: !14002)
!14040 = !DILocation(line: 367, column: 10, scope: !13974)
!14041 = !DILocation(line: 367, column: 3, scope: !13974)
!14042 = !DILocation(line: 368, column: 1, scope: !13974)
!14043 = distinct !DISubprogram(name: "num_processors_ignoring_omp", scope: !13936, file: !13936, line: 206, type: !1592, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1582, retainedNodes: !313)
!14044 = !DILocalVariable(name: "query", arg: 1, scope: !14043, file: !13936, line: 206, type: !1585)
!14045 = !DILocation(line: 206, column: 47, scope: !14043)
!14046 = !DILocation(line: 222, column: 7, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14043, file: !13936, line: 222, column: 7)
!14048 = !DILocation(line: 222, column: 13, scope: !14047)
!14049 = !DILocation(line: 222, column: 7, scope: !14043)
!14050 = !DILocalVariable(name: "nprocs", scope: !14051, file: !13936, line: 226, type: !57)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !13936, line: 225, column: 7)
!14052 = distinct !DILexicalBlock(scope: !14047, file: !13936, line: 223, column: 5)
!14053 = !DILocation(line: 226, column: 23, scope: !14051)
!14054 = !DILocation(line: 226, column: 32, scope: !14051)
!14055 = !DILocation(line: 228, column: 13, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14051, file: !13936, line: 228, column: 13)
!14057 = !DILocation(line: 228, column: 20, scope: !14056)
!14058 = !DILocation(line: 228, column: 13, scope: !14051)
!14059 = !DILocation(line: 229, column: 18, scope: !14056)
!14060 = !DILocation(line: 229, column: 11, scope: !14056)
!14061 = !DILocalVariable(name: "nprocs", scope: !14062, file: !13936, line: 235, type: !31)
!14062 = distinct !DILexicalBlock(scope: !14052, file: !13936, line: 233, column: 7)
!14063 = !DILocation(line: 235, column: 18, scope: !14062)
!14064 = !DILocation(line: 235, column: 27, scope: !14062)
!14065 = !DILocation(line: 236, column: 13, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !13936, line: 236, column: 13)
!14067 = !DILocation(line: 236, column: 20, scope: !14066)
!14068 = !DILocation(line: 236, column: 13, scope: !14062)
!14069 = !DILocation(line: 237, column: 18, scope: !14066)
!14070 = !DILocation(line: 237, column: 11, scope: !14066)
!14071 = !DILocation(line: 240, column: 5, scope: !14052)
!14072 = !DILocalVariable(name: "nprocs", scope: !14073, file: !13936, line: 246, type: !31)
!14073 = distinct !DILexicalBlock(scope: !14074, file: !13936, line: 244, column: 7)
!14074 = distinct !DILexicalBlock(scope: !14047, file: !13936, line: 242, column: 5)
!14075 = !DILocation(line: 246, column: 18, scope: !14073)
!14076 = !DILocation(line: 246, column: 27, scope: !14073)
!14077 = !DILocation(line: 254, column: 13, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14073, file: !13936, line: 254, column: 13)
!14079 = !DILocation(line: 254, column: 20, scope: !14078)
!14080 = !DILocation(line: 254, column: 13, scope: !14073)
!14081 = !DILocalVariable(name: "nprocs_current", scope: !14082, file: !13936, line: 256, type: !57)
!14082 = distinct !DILexicalBlock(scope: !14078, file: !13936, line: 255, column: 11)
!14083 = !DILocation(line: 256, column: 27, scope: !14082)
!14084 = !DILocation(line: 256, column: 44, scope: !14082)
!14085 = !DILocation(line: 258, column: 17, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14082, file: !13936, line: 258, column: 17)
!14087 = !DILocation(line: 258, column: 32, scope: !14086)
!14088 = !DILocation(line: 258, column: 17, scope: !14082)
!14089 = !DILocation(line: 259, column: 24, scope: !14086)
!14090 = !DILocation(line: 259, column: 22, scope: !14086)
!14091 = !DILocation(line: 259, column: 15, scope: !14086)
!14092 = !DILocation(line: 260, column: 11, scope: !14082)
!14093 = !DILocation(line: 263, column: 13, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14073, file: !13936, line: 263, column: 13)
!14095 = !DILocation(line: 263, column: 20, scope: !14094)
!14096 = !DILocation(line: 263, column: 13, scope: !14073)
!14097 = !DILocation(line: 264, column: 18, scope: !14094)
!14098 = !DILocation(line: 264, column: 11, scope: !14094)
!14099 = !DILocation(line: 330, column: 3, scope: !14043)
!14100 = !DILocation(line: 331, column: 1, scope: !14043)
!14101 = distinct !DISubprogram(name: "num_processors_via_affinity_mask", scope: !13936, file: !13936, line: 69, type: !1596, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1582, retainedNodes: !313)
!14102 = !DILocalVariable(name: "set", scope: !14103, file: !13936, line: 129, type: !1598)
!14103 = distinct !DILexicalBlock(scope: !14101, file: !13936, line: 128, column: 3)
!14104 = !DILocation(line: 129, column: 15, scope: !14103)
!14105 = !DILocation(line: 131, column: 9, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14103, file: !13936, line: 131, column: 9)
!14107 = !DILocation(line: 131, column: 51, scope: !14106)
!14108 = !DILocation(line: 131, column: 9, scope: !14103)
!14109 = !DILocalVariable(name: "count", scope: !14110, file: !13936, line: 133, type: !57)
!14110 = distinct !DILexicalBlock(scope: !14106, file: !13936, line: 132, column: 7)
!14111 = !DILocation(line: 133, column: 23, scope: !14110)
!14112 = !DILocation(line: 137, column: 17, scope: !14110)
!14113 = !DILocation(line: 137, column: 15, scope: !14110)
!14114 = !DILocation(line: 146, column: 13, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14110, file: !13936, line: 146, column: 13)
!14116 = !DILocation(line: 146, column: 19, scope: !14115)
!14117 = !DILocation(line: 146, column: 13, scope: !14110)
!14118 = !DILocation(line: 147, column: 18, scope: !14115)
!14119 = !DILocation(line: 147, column: 11, scope: !14115)
!14120 = !DILocation(line: 148, column: 7, scope: !14110)
!14121 = !DILocation(line: 199, column: 3, scope: !14101)
!14122 = !DILocation(line: 200, column: 1, scope: !14101)
!14123 = distinct !DISubprogram(name: "physmem_total", scope: !14124, file: !14124, line: 92, type: !1608, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1605, retainedNodes: !313)
!14124 = !DIFile(filename: "lib/physmem.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysinfo", file: !14126, line: 8, size: 896, elements: !14127)
!14126 = !DIFile(filename: "/usr/include/linux/sysinfo.h", directory: "")
!14127 = !{!14128, !14130, !14132, !14133, !14134, !14135, !14136, !14137, !14138, !14140, !14141, !14142, !14143, !14144}
!14128 = !DIDerivedType(tag: DW_TAG_member, name: "uptime", scope: !14125, file: !14126, line: 9, baseType: !14129, size: 64)
!14129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1611, line: 15, baseType: !31)
!14130 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !14125, file: !14126, line: 10, baseType: !14131, size: 192, offset: 64)
!14131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 192, elements: !279)
!14132 = !DIDerivedType(tag: DW_TAG_member, name: "totalram", scope: !14125, file: !14126, line: 11, baseType: !1610, size: 64, offset: 256)
!14133 = !DIDerivedType(tag: DW_TAG_member, name: "freeram", scope: !14125, file: !14126, line: 12, baseType: !1610, size: 64, offset: 320)
!14134 = !DIDerivedType(tag: DW_TAG_member, name: "sharedram", scope: !14125, file: !14126, line: 13, baseType: !1610, size: 64, offset: 384)
!14135 = !DIDerivedType(tag: DW_TAG_member, name: "bufferram", scope: !14125, file: !14126, line: 14, baseType: !1610, size: 64, offset: 448)
!14136 = !DIDerivedType(tag: DW_TAG_member, name: "totalswap", scope: !14125, file: !14126, line: 15, baseType: !1610, size: 64, offset: 512)
!14137 = !DIDerivedType(tag: DW_TAG_member, name: "freeswap", scope: !14125, file: !14126, line: 16, baseType: !1610, size: 64, offset: 576)
!14138 = !DIDerivedType(tag: DW_TAG_member, name: "procs", scope: !14125, file: !14126, line: 17, baseType: !14139, size: 16, offset: 640)
!14139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !1613, line: 24, baseType: !33)
!14140 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14125, file: !14126, line: 18, baseType: !14139, size: 16, offset: 656)
!14141 = !DIDerivedType(tag: DW_TAG_member, name: "totalhigh", scope: !14125, file: !14126, line: 19, baseType: !1610, size: 64, offset: 704)
!14142 = !DIDerivedType(tag: DW_TAG_member, name: "freehigh", scope: !14125, file: !14126, line: 20, baseType: !1610, size: 64, offset: 768)
!14143 = !DIDerivedType(tag: DW_TAG_member, name: "mem_unit", scope: !14125, file: !14126, line: 21, baseType: !1612, size: 32, offset: 832)
!14144 = !DIDerivedType(tag: DW_TAG_member, name: "_f", scope: !14125, file: !14126, line: 22, baseType: !14145, offset: 864)
!14145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !14146)
!14146 = !{!14147}
!14147 = !DISubrange(count: 0)
!14148 = !DILocalVariable(name: "pages", scope: !14149, file: !14124, line: 96, type: !377)
!14149 = distinct !DILexicalBlock(scope: !14123, file: !14124, line: 95, column: 3)
!14150 = !DILocation(line: 96, column: 12, scope: !14149)
!14151 = !DILocation(line: 96, column: 20, scope: !14149)
!14152 = !DILocalVariable(name: "pagesize", scope: !14149, file: !14124, line: 97, type: !377)
!14153 = !DILocation(line: 97, column: 12, scope: !14149)
!14154 = !DILocation(line: 97, column: 23, scope: !14149)
!14155 = !DILocation(line: 98, column: 14, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14149, file: !14124, line: 98, column: 9)
!14157 = !DILocation(line: 98, column: 11, scope: !14156)
!14158 = !DILocation(line: 98, column: 20, scope: !14156)
!14159 = !DILocation(line: 98, column: 28, scope: !14156)
!14160 = !DILocation(line: 98, column: 25, scope: !14156)
!14161 = !DILocation(line: 98, column: 9, scope: !14149)
!14162 = !DILocation(line: 99, column: 14, scope: !14156)
!14163 = !DILocation(line: 99, column: 22, scope: !14156)
!14164 = !DILocation(line: 99, column: 20, scope: !14156)
!14165 = !DILocation(line: 99, column: 7, scope: !14156)
!14166 = !DILocalVariable(name: "si", scope: !14167, file: !14124, line: 105, type: !14125)
!14167 = distinct !DILexicalBlock(scope: !14123, file: !14124, line: 104, column: 3)
!14168 = !DILocation(line: 105, column: 20, scope: !14167)
!14169 = !DILocation(line: 106, column: 9, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14167, file: !14124, line: 106, column: 9)
!14171 = !DILocation(line: 106, column: 22, scope: !14170)
!14172 = !DILocation(line: 106, column: 9, scope: !14167)
!14173 = !DILocation(line: 107, column: 26, scope: !14170)
!14174 = !{!14175, !2448, i64 32}
!14175 = !{!"sysinfo", !2448, i64 0, !2275, i64 8, !2448, i64 32, !2448, i64 40, !2448, i64 48, !2448, i64 56, !2448, i64 64, !2448, i64 72, !3424, i64 80, !3424, i64 82, !2448, i64 88, !2448, i64 96, !2274, i64 104, !2275, i64 108}
!14176 = !DILocation(line: 107, column: 14, scope: !14170)
!14177 = !DILocation(line: 107, column: 40, scope: !14170)
!14178 = !{!14175, !2274, i64 104}
!14179 = !DILocation(line: 107, column: 37, scope: !14170)
!14180 = !DILocation(line: 107, column: 35, scope: !14170)
!14181 = !DILocation(line: 107, column: 7, scope: !14170)
!14182 = !DILocation(line: 199, column: 3, scope: !14123)
!14183 = !DILocation(line: 200, column: 1, scope: !14123)
!14184 = distinct !DISubprogram(name: "physmem_available", scope: !14124, file: !14124, line: 204, type: !1608, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1605, retainedNodes: !313)
!14185 = !DILocalVariable(name: "pages", scope: !14186, file: !14124, line: 208, type: !377)
!14186 = distinct !DILexicalBlock(scope: !14184, file: !14124, line: 207, column: 3)
!14187 = !DILocation(line: 208, column: 12, scope: !14186)
!14188 = !DILocation(line: 208, column: 20, scope: !14186)
!14189 = !DILocalVariable(name: "pagesize", scope: !14186, file: !14124, line: 209, type: !377)
!14190 = !DILocation(line: 209, column: 12, scope: !14186)
!14191 = !DILocation(line: 209, column: 23, scope: !14186)
!14192 = !DILocation(line: 210, column: 14, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14186, file: !14124, line: 210, column: 9)
!14194 = !DILocation(line: 210, column: 11, scope: !14193)
!14195 = !DILocation(line: 210, column: 20, scope: !14193)
!14196 = !DILocation(line: 210, column: 28, scope: !14193)
!14197 = !DILocation(line: 210, column: 25, scope: !14193)
!14198 = !DILocation(line: 210, column: 9, scope: !14186)
!14199 = !DILocation(line: 211, column: 14, scope: !14193)
!14200 = !DILocation(line: 211, column: 22, scope: !14193)
!14201 = !DILocation(line: 211, column: 20, scope: !14193)
!14202 = !DILocation(line: 211, column: 7, scope: !14193)
!14203 = !DILocalVariable(name: "si", scope: !14204, file: !14124, line: 217, type: !14125)
!14204 = distinct !DILexicalBlock(scope: !14184, file: !14124, line: 216, column: 3)
!14205 = !DILocation(line: 217, column: 20, scope: !14204)
!14206 = !DILocation(line: 218, column: 9, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14204, file: !14124, line: 218, column: 9)
!14208 = !DILocation(line: 218, column: 22, scope: !14207)
!14209 = !DILocation(line: 218, column: 9, scope: !14204)
!14210 = !DILocation(line: 219, column: 27, scope: !14207)
!14211 = !{!14175, !2448, i64 40}
!14212 = !DILocation(line: 219, column: 15, scope: !14207)
!14213 = !DILocation(line: 219, column: 40, scope: !14207)
!14214 = !{!14175, !2448, i64 56}
!14215 = !DILocation(line: 219, column: 37, scope: !14207)
!14216 = !DILocation(line: 219, column: 35, scope: !14207)
!14217 = !DILocation(line: 219, column: 56, scope: !14207)
!14218 = !DILocation(line: 219, column: 53, scope: !14207)
!14219 = !DILocation(line: 219, column: 51, scope: !14207)
!14220 = !DILocation(line: 219, column: 7, scope: !14207)
!14221 = !DILocation(line: 308, column: 10, scope: !14184)
!14222 = !DILocation(line: 308, column: 27, scope: !14184)
!14223 = !DILocation(line: 308, column: 3, scope: !14184)
!14224 = !DILocation(line: 309, column: 1, scope: !14184)
!14225 = !DILocalVariable(name: "fd", arg: 1, scope: !1145, file: !1146, line: 40, type: !264)
!14226 = !DILocation(line: 40, column: 12, scope: !1145)
!14227 = !DILocalVariable(name: "flags", arg: 2, scope: !1145, file: !1146, line: 40, type: !7)
!14228 = !DILocation(line: 40, column: 23, scope: !1145)
!14229 = !DILocalVariable(name: "tmp", scope: !1145, file: !1146, line: 45, type: !544)
!14230 = !DILocation(line: 45, column: 7, scope: !1145)
!14231 = !DILocation(line: 46, column: 12, scope: !1145)
!14232 = !DILocation(line: 46, column: 3, scope: !1145)
!14233 = !DILocation(line: 46, column: 10, scope: !1145)
!14234 = !DILocation(line: 47, column: 12, scope: !1145)
!14235 = !DILocation(line: 47, column: 3, scope: !1145)
!14236 = !DILocation(line: 47, column: 10, scope: !1145)
!14237 = !DILocation(line: 56, column: 9, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14239, file: !1146, line: 56, column: 9)
!14239 = distinct !DILexicalBlock(scope: !1145, file: !1146, line: 53, column: 3)
!14240 = !DILocation(line: 56, column: 27, scope: !14238)
!14241 = !DILocation(line: 56, column: 9, scope: !14239)
!14242 = !DILocalVariable(name: "result", scope: !14243, file: !1146, line: 58, type: !7)
!14243 = distinct !DILexicalBlock(scope: !14238, file: !1146, line: 57, column: 7)
!14244 = !DILocation(line: 58, column: 13, scope: !14243)
!14245 = !DILocation(line: 58, column: 29, scope: !14243)
!14246 = !DILocation(line: 58, column: 33, scope: !14243)
!14247 = !DILocation(line: 58, column: 22, scope: !14243)
!14248 = !DILocation(line: 59, column: 15, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14243, file: !1146, line: 59, column: 13)
!14250 = !DILocation(line: 59, column: 22, scope: !14249)
!14251 = !DILocation(line: 59, column: 26, scope: !14249)
!14252 = !DILocation(line: 59, column: 29, scope: !14249)
!14253 = !DILocation(line: 59, column: 35, scope: !14249)
!14254 = !DILocation(line: 59, column: 13, scope: !14243)
!14255 = !DILocation(line: 61, column: 31, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14249, file: !1146, line: 60, column: 11)
!14257 = !DILocation(line: 62, column: 20, scope: !14256)
!14258 = !DILocation(line: 62, column: 13, scope: !14256)
!14259 = !DILocation(line: 64, column: 27, scope: !14243)
!14260 = !DILocation(line: 65, column: 7, scope: !14243)
!14261 = !DILocation(line: 70, column: 8, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !1145, file: !1146, line: 70, column: 7)
!14263 = !DILocation(line: 70, column: 14, scope: !14262)
!14264 = !DILocation(line: 70, column: 63, scope: !14262)
!14265 = !DILocation(line: 70, column: 7, scope: !1145)
!14266 = !DILocation(line: 72, column: 7, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14262, file: !1146, line: 71, column: 5)
!14268 = !DILocation(line: 72, column: 13, scope: !14267)
!14269 = !DILocation(line: 73, column: 7, scope: !14267)
!14270 = !DILocation(line: 107, column: 13, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !1145, file: !1146, line: 107, column: 7)
!14272 = !DILocation(line: 107, column: 7, scope: !14271)
!14273 = !DILocation(line: 107, column: 17, scope: !14271)
!14274 = !DILocation(line: 107, column: 7, scope: !1145)
!14275 = !DILocation(line: 108, column: 5, scope: !14271)
!14276 = !DILocation(line: 116, column: 7, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !1145, file: !1146, line: 116, column: 7)
!14278 = !DILocation(line: 116, column: 13, scope: !14277)
!14279 = !DILocation(line: 116, column: 7, scope: !1145)
!14280 = !DILocalVariable(name: "fcntl_flags", scope: !14281, file: !1146, line: 118, type: !7)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !1146, line: 117, column: 5)
!14282 = !DILocation(line: 118, column: 11, scope: !14281)
!14283 = !DILocation(line: 120, column: 33, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14281, file: !1146, line: 120, column: 11)
!14285 = !DILocation(line: 120, column: 26, scope: !14284)
!14286 = !DILocation(line: 120, column: 24, scope: !14284)
!14287 = !DILocation(line: 120, column: 53, scope: !14284)
!14288 = !DILocation(line: 121, column: 11, scope: !14284)
!14289 = !DILocation(line: 121, column: 21, scope: !14284)
!14290 = !DILocation(line: 121, column: 37, scope: !14284)
!14291 = !DILocation(line: 121, column: 49, scope: !14284)
!14292 = !DILocation(line: 121, column: 14, scope: !14284)
!14293 = !DILocation(line: 121, column: 63, scope: !14284)
!14294 = !DILocation(line: 122, column: 11, scope: !14284)
!14295 = !DILocation(line: 122, column: 36, scope: !14284)
!14296 = !DILocation(line: 122, column: 29, scope: !14284)
!14297 = !DILocation(line: 122, column: 27, scope: !14284)
!14298 = !DILocation(line: 122, column: 56, scope: !14284)
!14299 = !DILocation(line: 123, column: 11, scope: !14284)
!14300 = !DILocation(line: 123, column: 21, scope: !14284)
!14301 = !DILocation(line: 123, column: 37, scope: !14284)
!14302 = !DILocation(line: 123, column: 49, scope: !14284)
!14303 = !DILocation(line: 123, column: 14, scope: !14284)
!14304 = !DILocation(line: 123, column: 63, scope: !14284)
!14305 = !DILocation(line: 120, column: 11, scope: !14281)
!14306 = !DILocation(line: 124, column: 9, scope: !14284)
!14307 = !DILocation(line: 125, column: 5, scope: !14281)
!14308 = !DILocation(line: 127, column: 7, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !1145, file: !1146, line: 127, column: 7)
!14310 = !DILocation(line: 127, column: 13, scope: !14309)
!14311 = !DILocation(line: 127, column: 7, scope: !1145)
!14312 = !DILocalVariable(name: "fcntl_flags", scope: !14313, file: !1146, line: 129, type: !7)
!14313 = distinct !DILexicalBlock(scope: !14309, file: !1146, line: 128, column: 5)
!14314 = !DILocation(line: 129, column: 11, scope: !14313)
!14315 = !DILocation(line: 131, column: 33, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14313, file: !1146, line: 131, column: 11)
!14317 = !DILocation(line: 131, column: 26, scope: !14316)
!14318 = !DILocation(line: 131, column: 24, scope: !14316)
!14319 = !DILocation(line: 131, column: 53, scope: !14316)
!14320 = !DILocation(line: 132, column: 11, scope: !14316)
!14321 = !DILocation(line: 132, column: 21, scope: !14316)
!14322 = !DILocation(line: 132, column: 37, scope: !14316)
!14323 = !DILocation(line: 132, column: 49, scope: !14316)
!14324 = !DILocation(line: 132, column: 14, scope: !14316)
!14325 = !DILocation(line: 132, column: 63, scope: !14316)
!14326 = !DILocation(line: 133, column: 11, scope: !14316)
!14327 = !DILocation(line: 133, column: 36, scope: !14316)
!14328 = !DILocation(line: 133, column: 29, scope: !14316)
!14329 = !DILocation(line: 133, column: 27, scope: !14316)
!14330 = !DILocation(line: 133, column: 56, scope: !14316)
!14331 = !DILocation(line: 134, column: 11, scope: !14316)
!14332 = !DILocation(line: 134, column: 21, scope: !14316)
!14333 = !DILocation(line: 134, column: 37, scope: !14316)
!14334 = !DILocation(line: 134, column: 49, scope: !14316)
!14335 = !DILocation(line: 134, column: 14, scope: !14316)
!14336 = !DILocation(line: 134, column: 63, scope: !14316)
!14337 = !DILocation(line: 131, column: 11, scope: !14313)
!14338 = !DILocation(line: 135, column: 9, scope: !14316)
!14339 = !DILocation(line: 136, column: 5, scope: !14313)
!14340 = !DILocation(line: 151, column: 3, scope: !1145)
!14341 = !DILabel(scope: !1145, name: "fail", file: !1146, line: 156)
!14342 = !DILocation(line: 156, column: 2, scope: !1145)
!14343 = !DILocalVariable(name: "saved_errno", scope: !14344, file: !1146, line: 158, type: !7)
!14344 = distinct !DILexicalBlock(scope: !1145, file: !1146, line: 157, column: 3)
!14345 = !DILocation(line: 158, column: 9, scope: !14344)
!14346 = !DILocation(line: 158, column: 23, scope: !14344)
!14347 = !DILocation(line: 159, column: 12, scope: !14344)
!14348 = !DILocation(line: 159, column: 5, scope: !14344)
!14349 = !DILocation(line: 160, column: 12, scope: !14344)
!14350 = !DILocation(line: 160, column: 5, scope: !14344)
!14351 = !DILocation(line: 161, column: 13, scope: !14344)
!14352 = !DILocation(line: 161, column: 5, scope: !14344)
!14353 = !DILocation(line: 161, column: 11, scope: !14344)
!14354 = !DILocation(line: 162, column: 13, scope: !14344)
!14355 = !DILocation(line: 162, column: 5, scope: !14344)
!14356 = !DILocation(line: 162, column: 11, scope: !14344)
!14357 = !DILocation(line: 163, column: 13, scope: !14344)
!14358 = !DILocation(line: 163, column: 5, scope: !14344)
!14359 = !DILocation(line: 163, column: 11, scope: !14344)
!14360 = !DILocation(line: 164, column: 5, scope: !14344)
!14361 = !DILocation(line: 167, column: 1, scope: !1145)
!14362 = distinct !DISubprogram(name: "posix2_version", scope: !14363, file: !14363, line: 40, type: !1617, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !313)
!14363 = !DIFile(filename: "lib/posixver.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14364 = !DILocalVariable(name: "v", scope: !14362, file: !14363, line: 42, type: !31)
!14365 = !DILocation(line: 42, column: 12, scope: !14362)
!14366 = !DILocalVariable(name: "s", scope: !14362, file: !14363, line: 43, type: !88)
!14367 = !DILocation(line: 43, column: 15, scope: !14362)
!14368 = !DILocation(line: 43, column: 19, scope: !14362)
!14369 = !DILocation(line: 45, column: 7, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14362, file: !14363, line: 45, column: 7)
!14371 = !DILocation(line: 45, column: 9, scope: !14370)
!14372 = !DILocation(line: 45, column: 13, scope: !14370)
!14373 = !DILocation(line: 45, column: 12, scope: !14370)
!14374 = !DILocation(line: 45, column: 7, scope: !14362)
!14375 = !DILocalVariable(name: "e", scope: !14376, file: !14363, line: 47, type: !9)
!14376 = distinct !DILexicalBlock(scope: !14370, file: !14363, line: 46, column: 5)
!14377 = !DILocation(line: 47, column: 13, scope: !14376)
!14378 = !DILocalVariable(name: "i", scope: !14376, file: !14363, line: 48, type: !31)
!14379 = !DILocation(line: 48, column: 16, scope: !14376)
!14380 = !DILocation(line: 48, column: 28, scope: !14376)
!14381 = !DILocation(line: 48, column: 20, scope: !14376)
!14382 = !DILocation(line: 49, column: 14, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14376, file: !14363, line: 49, column: 11)
!14384 = !DILocation(line: 49, column: 13, scope: !14383)
!14385 = !DILocation(line: 49, column: 11, scope: !14376)
!14386 = !DILocation(line: 50, column: 13, scope: !14383)
!14387 = !DILocation(line: 50, column: 11, scope: !14383)
!14388 = !DILocation(line: 50, column: 9, scope: !14383)
!14389 = !DILocation(line: 51, column: 5, scope: !14376)
!14390 = !DILocation(line: 53, column: 10, scope: !14362)
!14391 = !DILocation(line: 53, column: 12, scope: !14362)
!14392 = !DILocation(line: 53, column: 34, scope: !14362)
!14393 = !DILocation(line: 53, column: 36, scope: !14362)
!14394 = !DILocation(line: 53, column: 48, scope: !14362)
!14395 = !DILocation(line: 53, column: 3, scope: !14362)
!14396 = distinct !DISubprogram(name: "set_program_name", scope: !1193, file: !1193, line: 39, type: !306, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1155, retainedNodes: !313)
!14397 = !DILocalVariable(name: "argv0", arg: 1, scope: !14396, file: !1193, line: 39, type: !88)
!14398 = !DILocation(line: 39, column: 31, scope: !14396)
!14399 = !DILocalVariable(name: "slash", scope: !14396, file: !1193, line: 46, type: !88)
!14400 = !DILocation(line: 46, column: 15, scope: !14396)
!14401 = !DILocalVariable(name: "base", scope: !14396, file: !1193, line: 47, type: !88)
!14402 = !DILocation(line: 47, column: 15, scope: !14396)
!14403 = !DILocation(line: 51, column: 7, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14396, file: !1193, line: 51, column: 7)
!14405 = !DILocation(line: 51, column: 13, scope: !14404)
!14406 = !DILocation(line: 51, column: 7, scope: !14396)
!14407 = !DILocation(line: 55, column: 14, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14404, file: !1193, line: 52, column: 5)
!14409 = !DILocation(line: 54, column: 7, scope: !14408)
!14410 = !DILocation(line: 56, column: 7, scope: !14408)
!14411 = !DILocation(line: 59, column: 20, scope: !14396)
!14412 = !DILocation(line: 59, column: 11, scope: !14396)
!14413 = !DILocation(line: 59, column: 9, scope: !14396)
!14414 = !DILocation(line: 60, column: 11, scope: !14396)
!14415 = !DILocation(line: 60, column: 17, scope: !14396)
!14416 = !DILocation(line: 60, column: 27, scope: !14396)
!14417 = !DILocation(line: 60, column: 33, scope: !14396)
!14418 = !DILocation(line: 60, column: 39, scope: !14396)
!14419 = !DILocation(line: 60, column: 8, scope: !14396)
!14420 = !DILocation(line: 61, column: 7, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14396, file: !1193, line: 61, column: 7)
!14422 = !DILocation(line: 61, column: 14, scope: !14421)
!14423 = !DILocation(line: 61, column: 12, scope: !14421)
!14424 = !DILocation(line: 61, column: 20, scope: !14421)
!14425 = !DILocation(line: 61, column: 25, scope: !14421)
!14426 = !DILocation(line: 61, column: 37, scope: !14421)
!14427 = !DILocation(line: 61, column: 42, scope: !14421)
!14428 = !DILocation(line: 61, column: 28, scope: !14421)
!14429 = !DILocation(line: 61, column: 61, scope: !14421)
!14430 = !DILocation(line: 61, column: 7, scope: !14396)
!14431 = !DILocation(line: 63, column: 15, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14421, file: !1193, line: 62, column: 5)
!14433 = !DILocation(line: 63, column: 13, scope: !14432)
!14434 = !DILocation(line: 64, column: 20, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14432, file: !1193, line: 64, column: 11)
!14436 = !DILocation(line: 64, column: 11, scope: !14435)
!14437 = !DILocation(line: 64, column: 36, scope: !14435)
!14438 = !DILocation(line: 64, column: 11, scope: !14432)
!14439 = !DILocation(line: 66, column: 19, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14435, file: !1193, line: 65, column: 9)
!14441 = !DILocation(line: 66, column: 24, scope: !14440)
!14442 = !DILocation(line: 66, column: 17, scope: !14440)
!14443 = !DILocation(line: 70, column: 52, scope: !14440)
!14444 = !DILocation(line: 70, column: 41, scope: !14440)
!14445 = !DILocation(line: 72, column: 9, scope: !14440)
!14446 = !DILocation(line: 73, column: 5, scope: !14432)
!14447 = !DILocation(line: 84, column: 18, scope: !14396)
!14448 = !DILocation(line: 84, column: 16, scope: !14396)
!14449 = !DILocation(line: 90, column: 38, scope: !14396)
!14450 = !DILocation(line: 90, column: 27, scope: !14396)
!14451 = !DILocation(line: 92, column: 1, scope: !14396)
!14452 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1221, file: !1221, line: 122, type: !1217, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14453 = !DILocalVariable(name: "o", arg: 1, scope: !14452, file: !1221, line: 122, type: !1219)
!14454 = !DILocation(line: 122, column: 48, scope: !14452)
!14455 = !DILocalVariable(name: "e", scope: !14452, file: !1221, line: 124, type: !7)
!14456 = !DILocation(line: 124, column: 7, scope: !14452)
!14457 = !DILocation(line: 124, column: 11, scope: !14452)
!14458 = !DILocalVariable(name: "p", scope: !14452, file: !1221, line: 125, type: !1219)
!14459 = !DILocation(line: 125, column: 27, scope: !14452)
!14460 = !DILocation(line: 125, column: 40, scope: !14452)
!14461 = !DILocation(line: 125, column: 44, scope: !14452)
!14462 = !DILocation(line: 125, column: 31, scope: !14452)
!14463 = !DILocation(line: 127, column: 11, scope: !14452)
!14464 = !DILocation(line: 127, column: 3, scope: !14452)
!14465 = !DILocation(line: 127, column: 9, scope: !14452)
!14466 = !DILocation(line: 128, column: 10, scope: !14452)
!14467 = !DILocation(line: 128, column: 3, scope: !14452)
!14468 = distinct !DISubprogram(name: "get_quoting_style", scope: !1221, file: !1221, line: 133, type: !1231, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14469 = !DILocalVariable(name: "o", arg: 1, scope: !14468, file: !1221, line: 133, type: !1233)
!14470 = !DILocation(line: 133, column: 50, scope: !14468)
!14471 = !DILocation(line: 135, column: 11, scope: !14468)
!14472 = !DILocation(line: 135, column: 15, scope: !14468)
!14473 = !DILocation(line: 135, column: 46, scope: !14468)
!14474 = !{!14475, !2275, i64 0}
!14475 = !{!"quoting_options", !2275, i64 0, !2274, i64 4, !2275, i64 8, !2287, i64 40, !2287, i64 48}
!14476 = !DILocation(line: 135, column: 3, scope: !14468)
!14477 = distinct !DISubprogram(name: "set_quoting_style", scope: !1221, file: !1221, line: 141, type: !1235, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14478 = !DILocalVariable(name: "o", arg: 1, scope: !14477, file: !1221, line: 141, type: !1219)
!14479 = !DILocation(line: 141, column: 44, scope: !14477)
!14480 = !DILocalVariable(name: "s", arg: 2, scope: !14477, file: !1221, line: 141, type: !1199)
!14481 = !DILocation(line: 141, column: 66, scope: !14477)
!14482 = !DILocation(line: 143, column: 47, scope: !14477)
!14483 = !DILocation(line: 143, column: 4, scope: !14477)
!14484 = !DILocation(line: 143, column: 8, scope: !14477)
!14485 = !DILocation(line: 143, column: 39, scope: !14477)
!14486 = !DILocation(line: 143, column: 45, scope: !14477)
!14487 = !DILocation(line: 144, column: 1, scope: !14477)
!14488 = distinct !DISubprogram(name: "set_char_quoting", scope: !1221, file: !1221, line: 152, type: !1237, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14489 = !DILocalVariable(name: "o", arg: 1, scope: !14488, file: !1221, line: 152, type: !1219)
!14490 = !DILocation(line: 152, column: 43, scope: !14488)
!14491 = !DILocalVariable(name: "c", arg: 2, scope: !14488, file: !1221, line: 152, type: !10)
!14492 = !DILocation(line: 152, column: 51, scope: !14488)
!14493 = !DILocalVariable(name: "i", arg: 3, scope: !14488, file: !1221, line: 152, type: !7)
!14494 = !DILocation(line: 152, column: 58, scope: !14488)
!14495 = !DILocalVariable(name: "uc", scope: !14488, file: !1221, line: 154, type: !321)
!14496 = !DILocation(line: 154, column: 17, scope: !14488)
!14497 = !DILocation(line: 154, column: 22, scope: !14488)
!14498 = !DILocalVariable(name: "p", scope: !14488, file: !1221, line: 155, type: !1239)
!14499 = !DILocation(line: 155, column: 17, scope: !14488)
!14500 = !DILocation(line: 156, column: 6, scope: !14488)
!14501 = !DILocation(line: 156, column: 10, scope: !14488)
!14502 = !DILocation(line: 156, column: 41, scope: !14488)
!14503 = !DILocation(line: 156, column: 5, scope: !14488)
!14504 = !DILocation(line: 156, column: 59, scope: !14488)
!14505 = !DILocation(line: 156, column: 62, scope: !14488)
!14506 = !DILocation(line: 156, column: 57, scope: !14488)
!14507 = !DILocalVariable(name: "shift", scope: !14488, file: !1221, line: 157, type: !7)
!14508 = !DILocation(line: 157, column: 7, scope: !14488)
!14509 = !DILocation(line: 157, column: 15, scope: !14488)
!14510 = !DILocation(line: 157, column: 18, scope: !14488)
!14511 = !DILocalVariable(name: "r", scope: !14488, file: !1221, line: 158, type: !7)
!14512 = !DILocation(line: 158, column: 7, scope: !14488)
!14513 = !DILocation(line: 158, column: 13, scope: !14488)
!14514 = !DILocation(line: 158, column: 12, scope: !14488)
!14515 = !DILocation(line: 158, column: 18, scope: !14488)
!14516 = !DILocation(line: 158, column: 15, scope: !14488)
!14517 = !DILocation(line: 158, column: 25, scope: !14488)
!14518 = !DILocation(line: 159, column: 11, scope: !14488)
!14519 = !DILocation(line: 159, column: 13, scope: !14488)
!14520 = !DILocation(line: 159, column: 20, scope: !14488)
!14521 = !DILocation(line: 159, column: 18, scope: !14488)
!14522 = !DILocation(line: 159, column: 26, scope: !14488)
!14523 = !DILocation(line: 159, column: 23, scope: !14488)
!14524 = !DILocation(line: 159, column: 4, scope: !14488)
!14525 = !DILocation(line: 159, column: 6, scope: !14488)
!14526 = !DILocation(line: 160, column: 10, scope: !14488)
!14527 = !DILocation(line: 160, column: 3, scope: !14488)
!14528 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1221, file: !1221, line: 168, type: !1240, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14529 = !DILocalVariable(name: "o", arg: 1, scope: !14528, file: !1221, line: 168, type: !1219)
!14530 = !DILocation(line: 168, column: 44, scope: !14528)
!14531 = !DILocalVariable(name: "i", arg: 2, scope: !14528, file: !1221, line: 168, type: !7)
!14532 = !DILocation(line: 168, column: 51, scope: !14528)
!14533 = !DILocalVariable(name: "r", scope: !14528, file: !1221, line: 170, type: !7)
!14534 = !DILocation(line: 170, column: 7, scope: !14528)
!14535 = !DILocation(line: 171, column: 8, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14528, file: !1221, line: 171, column: 7)
!14537 = !DILocation(line: 171, column: 7, scope: !14528)
!14538 = !DILocation(line: 172, column: 7, scope: !14536)
!14539 = !DILocation(line: 172, column: 5, scope: !14536)
!14540 = !DILocation(line: 173, column: 7, scope: !14528)
!14541 = !DILocation(line: 173, column: 10, scope: !14528)
!14542 = !{!14475, !2274, i64 4}
!14543 = !DILocation(line: 173, column: 5, scope: !14528)
!14544 = !DILocation(line: 174, column: 14, scope: !14528)
!14545 = !DILocation(line: 174, column: 3, scope: !14528)
!14546 = !DILocation(line: 174, column: 6, scope: !14528)
!14547 = !DILocation(line: 174, column: 12, scope: !14528)
!14548 = !DILocation(line: 175, column: 10, scope: !14528)
!14549 = !DILocation(line: 175, column: 3, scope: !14528)
!14550 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1221, file: !1221, line: 179, type: !1242, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14551 = !DILocalVariable(name: "o", arg: 1, scope: !14550, file: !1221, line: 179, type: !1219)
!14552 = !DILocation(line: 179, column: 45, scope: !14550)
!14553 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14550, file: !1221, line: 180, type: !88)
!14554 = !DILocation(line: 180, column: 33, scope: !14550)
!14555 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14550, file: !1221, line: 180, type: !88)
!14556 = !DILocation(line: 180, column: 57, scope: !14550)
!14557 = !DILocation(line: 182, column: 8, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14550, file: !1221, line: 182, column: 7)
!14559 = !DILocation(line: 182, column: 7, scope: !14550)
!14560 = !DILocation(line: 183, column: 7, scope: !14558)
!14561 = !DILocation(line: 183, column: 5, scope: !14558)
!14562 = !DILocation(line: 184, column: 3, scope: !14550)
!14563 = !DILocation(line: 184, column: 6, scope: !14550)
!14564 = !DILocation(line: 184, column: 12, scope: !14550)
!14565 = !DILocation(line: 185, column: 8, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14550, file: !1221, line: 185, column: 7)
!14567 = !DILocation(line: 185, column: 19, scope: !14566)
!14568 = !DILocation(line: 185, column: 23, scope: !14566)
!14569 = !DILocation(line: 185, column: 7, scope: !14550)
!14570 = !DILocation(line: 186, column: 5, scope: !14566)
!14571 = !DILocation(line: 187, column: 19, scope: !14550)
!14572 = !DILocation(line: 187, column: 3, scope: !14550)
!14573 = !DILocation(line: 187, column: 6, scope: !14550)
!14574 = !DILocation(line: 187, column: 17, scope: !14550)
!14575 = !{!14475, !2287, i64 40}
!14576 = !DILocation(line: 188, column: 20, scope: !14550)
!14577 = !DILocation(line: 188, column: 3, scope: !14550)
!14578 = !DILocation(line: 188, column: 6, scope: !14550)
!14579 = !DILocation(line: 188, column: 18, scope: !14550)
!14580 = !{!14475, !2287, i64 48}
!14581 = !DILocation(line: 189, column: 1, scope: !14550)
!14582 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1221, file: !1221, line: 784, type: !1244, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14583 = !DILocalVariable(name: "buffer", arg: 1, scope: !14582, file: !1221, line: 784, type: !9)
!14584 = !DILocation(line: 784, column: 24, scope: !14582)
!14585 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14582, file: !1221, line: 784, type: !55)
!14586 = !DILocation(line: 784, column: 39, scope: !14582)
!14587 = !DILocalVariable(name: "arg", arg: 3, scope: !14582, file: !1221, line: 785, type: !88)
!14588 = !DILocation(line: 785, column: 30, scope: !14582)
!14589 = !DILocalVariable(name: "argsize", arg: 4, scope: !14582, file: !1221, line: 785, type: !55)
!14590 = !DILocation(line: 785, column: 42, scope: !14582)
!14591 = !DILocalVariable(name: "o", arg: 5, scope: !14582, file: !1221, line: 786, type: !1233)
!14592 = !DILocation(line: 786, column: 48, scope: !14582)
!14593 = !DILocalVariable(name: "p", scope: !14582, file: !1221, line: 788, type: !1233)
!14594 = !DILocation(line: 788, column: 33, scope: !14582)
!14595 = !DILocation(line: 788, column: 37, scope: !14582)
!14596 = !DILocation(line: 788, column: 41, scope: !14582)
!14597 = !DILocalVariable(name: "e", scope: !14582, file: !1221, line: 789, type: !7)
!14598 = !DILocation(line: 789, column: 7, scope: !14582)
!14599 = !DILocation(line: 789, column: 11, scope: !14582)
!14600 = !DILocalVariable(name: "r", scope: !14582, file: !1221, line: 790, type: !55)
!14601 = !DILocation(line: 790, column: 10, scope: !14582)
!14602 = !DILocation(line: 790, column: 40, scope: !14582)
!14603 = !DILocation(line: 790, column: 48, scope: !14582)
!14604 = !DILocation(line: 790, column: 60, scope: !14582)
!14605 = !DILocation(line: 790, column: 65, scope: !14582)
!14606 = !DILocation(line: 791, column: 40, scope: !14582)
!14607 = !DILocation(line: 791, column: 43, scope: !14582)
!14608 = !DILocation(line: 791, column: 50, scope: !14582)
!14609 = !DILocation(line: 791, column: 53, scope: !14582)
!14610 = !DILocation(line: 791, column: 60, scope: !14582)
!14611 = !DILocation(line: 791, column: 63, scope: !14582)
!14612 = !DILocation(line: 792, column: 40, scope: !14582)
!14613 = !DILocation(line: 792, column: 43, scope: !14582)
!14614 = !DILocation(line: 792, column: 55, scope: !14582)
!14615 = !DILocation(line: 792, column: 58, scope: !14582)
!14616 = !DILocation(line: 790, column: 14, scope: !14582)
!14617 = !DILocation(line: 793, column: 11, scope: !14582)
!14618 = !DILocation(line: 793, column: 3, scope: !14582)
!14619 = !DILocation(line: 793, column: 9, scope: !14582)
!14620 = !DILocation(line: 794, column: 10, scope: !14582)
!14621 = !DILocation(line: 794, column: 3, scope: !14582)
!14622 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1221, file: !1221, line: 256, type: !1291, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!14623 = !DILocalVariable(name: "buffer", arg: 1, scope: !14622, file: !1221, line: 256, type: !9)
!14624 = !DILocation(line: 256, column: 33, scope: !14622)
!14625 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14622, file: !1221, line: 256, type: !55)
!14626 = !DILocation(line: 256, column: 48, scope: !14622)
!14627 = !DILocalVariable(name: "arg", arg: 3, scope: !14622, file: !1221, line: 257, type: !88)
!14628 = !DILocation(line: 257, column: 39, scope: !14622)
!14629 = !DILocalVariable(name: "argsize", arg: 4, scope: !14622, file: !1221, line: 257, type: !55)
!14630 = !DILocation(line: 257, column: 51, scope: !14622)
!14631 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !14622, file: !1221, line: 258, type: !1199)
!14632 = !DILocation(line: 258, column: 46, scope: !14622)
!14633 = !DILocalVariable(name: "flags", arg: 6, scope: !14622, file: !1221, line: 258, type: !7)
!14634 = !DILocation(line: 258, column: 65, scope: !14622)
!14635 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !14622, file: !1221, line: 259, type: !1293)
!14636 = !DILocation(line: 259, column: 47, scope: !14622)
!14637 = !DILocalVariable(name: "left_quote", arg: 8, scope: !14622, file: !1221, line: 260, type: !88)
!14638 = !DILocation(line: 260, column: 39, scope: !14622)
!14639 = !DILocalVariable(name: "right_quote", arg: 9, scope: !14622, file: !1221, line: 261, type: !88)
!14640 = !DILocation(line: 261, column: 39, scope: !14622)
!14641 = !DILocalVariable(name: "i", scope: !14622, file: !1221, line: 263, type: !55)
!14642 = !DILocation(line: 263, column: 10, scope: !14622)
!14643 = !DILocalVariable(name: "len", scope: !14622, file: !1221, line: 264, type: !55)
!14644 = !DILocation(line: 264, column: 10, scope: !14622)
!14645 = !DILocalVariable(name: "orig_buffersize", scope: !14622, file: !1221, line: 265, type: !55)
!14646 = !DILocation(line: 265, column: 10, scope: !14622)
!14647 = !DILocalVariable(name: "quote_string", scope: !14622, file: !1221, line: 266, type: !88)
!14648 = !DILocation(line: 266, column: 15, scope: !14622)
!14649 = !DILocalVariable(name: "quote_string_len", scope: !14622, file: !1221, line: 267, type: !55)
!14650 = !DILocation(line: 267, column: 10, scope: !14622)
!14651 = !DILocalVariable(name: "backslash_escapes", scope: !14622, file: !1221, line: 268, type: !103)
!14652 = !DILocation(line: 268, column: 8, scope: !14622)
!14653 = !DILocalVariable(name: "unibyte_locale", scope: !14622, file: !1221, line: 269, type: !103)
!14654 = !DILocation(line: 269, column: 8, scope: !14622)
!14655 = !DILocation(line: 269, column: 25, scope: !14622)
!14656 = !DILocation(line: 269, column: 36, scope: !14622)
!14657 = !DILocalVariable(name: "elide_outer_quotes", scope: !14622, file: !1221, line: 270, type: !103)
!14658 = !DILocation(line: 270, column: 8, scope: !14622)
!14659 = !DILocation(line: 270, column: 30, scope: !14622)
!14660 = !DILocation(line: 270, column: 36, scope: !14622)
!14661 = !DILocation(line: 270, column: 61, scope: !14622)
!14662 = !DILocalVariable(name: "pending_shell_escape_end", scope: !14622, file: !1221, line: 271, type: !103)
!14663 = !DILocation(line: 271, column: 8, scope: !14622)
!14664 = !DILocalVariable(name: "encountered_single_quote", scope: !14622, file: !1221, line: 272, type: !103)
!14665 = !DILocation(line: 272, column: 8, scope: !14622)
!14666 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !14622, file: !1221, line: 273, type: !103)
!14667 = !DILocation(line: 273, column: 8, scope: !14622)
!14668 = !DILocation(line: 273, column: 3, scope: !14622)
!14669 = !DILabel(scope: !14622, name: "process_input", file: !1221, line: 314)
!14670 = !DILocation(line: 314, column: 2, scope: !14622)
!14671 = !DILocation(line: 316, column: 11, scope: !14622)
!14672 = !DILocation(line: 316, column: 3, scope: !14622)
!14673 = !DILocation(line: 319, column: 21, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 317, column: 5)
!14675 = !DILocation(line: 320, column: 26, scope: !14674)
!14676 = !DILocation(line: 321, column: 7, scope: !14674)
!14677 = !DILocation(line: 323, column: 12, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14674, file: !1221, line: 323, column: 11)
!14679 = !DILocation(line: 323, column: 11, scope: !14674)
!14680 = !DILocation(line: 324, column: 9, scope: !14678)
!14681 = !DILocation(line: 324, column: 9, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14683, file: !1221, line: 324, column: 9)
!14683 = distinct !DILexicalBlock(scope: !14678, file: !1221, line: 324, column: 9)
!14684 = !DILocation(line: 324, column: 9, scope: !14683)
!14685 = !DILocation(line: 325, column: 25, scope: !14674)
!14686 = !DILocation(line: 326, column: 20, scope: !14674)
!14687 = !DILocation(line: 327, column: 24, scope: !14674)
!14688 = !DILocation(line: 328, column: 7, scope: !14674)
!14689 = !DILocation(line: 331, column: 25, scope: !14674)
!14690 = !DILocation(line: 332, column: 26, scope: !14674)
!14691 = !DILocation(line: 333, column: 7, scope: !14674)
!14692 = !DILocation(line: 339, column: 13, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !1221, line: 339, column: 13)
!14694 = distinct !DILexicalBlock(scope: !14674, file: !1221, line: 338, column: 7)
!14695 = !DILocation(line: 339, column: 27, scope: !14693)
!14696 = !DILocation(line: 339, column: 13, scope: !14694)
!14697 = !DILocation(line: 362, column: 50, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14693, file: !1221, line: 340, column: 11)
!14699 = !DILocation(line: 362, column: 26, scope: !14698)
!14700 = !DILocation(line: 362, column: 24, scope: !14698)
!14701 = !DILocation(line: 363, column: 51, scope: !14698)
!14702 = !DILocation(line: 363, column: 27, scope: !14698)
!14703 = !DILocation(line: 363, column: 25, scope: !14698)
!14704 = !DILocation(line: 364, column: 11, scope: !14698)
!14705 = !DILocation(line: 365, column: 14, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14694, file: !1221, line: 365, column: 13)
!14707 = !DILocation(line: 365, column: 13, scope: !14694)
!14708 = !DILocation(line: 366, column: 31, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14706, file: !1221, line: 366, column: 11)
!14710 = !DILocation(line: 366, column: 29, scope: !14709)
!14711 = !DILocation(line: 366, column: 16, scope: !14709)
!14712 = !DILocation(line: 366, column: 44, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14709, file: !1221, line: 366, column: 11)
!14714 = !DILocation(line: 366, column: 43, scope: !14713)
!14715 = !DILocation(line: 366, column: 11, scope: !14709)
!14716 = !DILocation(line: 367, column: 13, scope: !14713)
!14717 = !DILocation(line: 367, column: 13, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !1221, line: 367, column: 13)
!14719 = distinct !DILexicalBlock(scope: !14713, file: !1221, line: 367, column: 13)
!14720 = !DILocation(line: 367, column: 13, scope: !14719)
!14721 = !DILocation(line: 366, column: 70, scope: !14713)
!14722 = !DILocation(line: 366, column: 11, scope: !14713)
!14723 = distinct !{!14723, !14715, !14724}
!14724 = !DILocation(line: 367, column: 13, scope: !14709)
!14725 = !DILocation(line: 368, column: 27, scope: !14694)
!14726 = !DILocation(line: 369, column: 24, scope: !14694)
!14727 = !DILocation(line: 369, column: 22, scope: !14694)
!14728 = !DILocation(line: 370, column: 36, scope: !14694)
!14729 = !DILocation(line: 370, column: 28, scope: !14694)
!14730 = !DILocation(line: 370, column: 26, scope: !14694)
!14731 = !DILocation(line: 372, column: 7, scope: !14674)
!14732 = !DILocation(line: 375, column: 25, scope: !14674)
!14733 = !DILocation(line: 376, column: 7, scope: !14674)
!14734 = !DILocation(line: 378, column: 26, scope: !14674)
!14735 = !DILocation(line: 379, column: 7, scope: !14674)
!14736 = !DILocation(line: 381, column: 12, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14674, file: !1221, line: 381, column: 11)
!14738 = !DILocation(line: 381, column: 11, scope: !14674)
!14739 = !DILocation(line: 382, column: 27, scope: !14737)
!14740 = !DILocation(line: 382, column: 9, scope: !14737)
!14741 = !DILocation(line: 383, column: 7, scope: !14674)
!14742 = !DILocation(line: 385, column: 21, scope: !14674)
!14743 = !DILocation(line: 386, column: 12, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14674, file: !1221, line: 386, column: 11)
!14745 = !DILocation(line: 386, column: 11, scope: !14674)
!14746 = !DILocation(line: 387, column: 9, scope: !14744)
!14747 = !DILocation(line: 387, column: 9, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14749, file: !1221, line: 387, column: 9)
!14749 = distinct !DILexicalBlock(scope: !14744, file: !1221, line: 387, column: 9)
!14750 = !DILocation(line: 387, column: 9, scope: !14749)
!14751 = !DILocation(line: 388, column: 20, scope: !14674)
!14752 = !DILocation(line: 389, column: 24, scope: !14674)
!14753 = !DILocation(line: 390, column: 7, scope: !14674)
!14754 = !DILocation(line: 393, column: 26, scope: !14674)
!14755 = !DILocation(line: 394, column: 7, scope: !14674)
!14756 = !DILocation(line: 397, column: 7, scope: !14674)
!14757 = !DILocation(line: 400, column: 10, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 400, column: 3)
!14759 = !DILocation(line: 400, column: 8, scope: !14758)
!14760 = !DILocation(line: 400, column: 19, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14758, file: !1221, line: 400, column: 3)
!14762 = !DILocation(line: 400, column: 27, scope: !14761)
!14763 = !DILocation(line: 400, column: 41, scope: !14761)
!14764 = !DILocation(line: 400, column: 45, scope: !14761)
!14765 = !DILocation(line: 400, column: 48, scope: !14761)
!14766 = !DILocation(line: 400, column: 58, scope: !14761)
!14767 = !DILocation(line: 400, column: 63, scope: !14761)
!14768 = !DILocation(line: 400, column: 60, scope: !14761)
!14769 = !DILocation(line: 400, column: 16, scope: !14761)
!14770 = !DILocation(line: 400, column: 3, scope: !14758)
!14771 = !DILocalVariable(name: "c", scope: !14772, file: !1221, line: 402, type: !321)
!14772 = distinct !DILexicalBlock(scope: !14761, file: !1221, line: 401, column: 5)
!14773 = !DILocation(line: 402, column: 21, scope: !14772)
!14774 = !DILocalVariable(name: "esc", scope: !14772, file: !1221, line: 403, type: !321)
!14775 = !DILocation(line: 403, column: 21, scope: !14772)
!14776 = !DILocalVariable(name: "is_right_quote", scope: !14772, file: !1221, line: 404, type: !103)
!14777 = !DILocation(line: 404, column: 12, scope: !14772)
!14778 = !DILocalVariable(name: "escaping", scope: !14772, file: !1221, line: 405, type: !103)
!14779 = !DILocation(line: 405, column: 12, scope: !14772)
!14780 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !14772, file: !1221, line: 406, type: !103)
!14781 = !DILocation(line: 406, column: 12, scope: !14772)
!14782 = !DILocation(line: 408, column: 11, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 408, column: 11)
!14784 = !DILocation(line: 409, column: 11, scope: !14783)
!14785 = !DILocation(line: 409, column: 14, scope: !14783)
!14786 = !DILocation(line: 409, column: 28, scope: !14783)
!14787 = !DILocation(line: 410, column: 11, scope: !14783)
!14788 = !DILocation(line: 410, column: 14, scope: !14783)
!14789 = !DILocation(line: 411, column: 11, scope: !14783)
!14790 = !DILocation(line: 411, column: 15, scope: !14783)
!14791 = !DILocation(line: 411, column: 19, scope: !14783)
!14792 = !DILocation(line: 411, column: 17, scope: !14783)
!14793 = !DILocation(line: 412, column: 19, scope: !14783)
!14794 = !DILocation(line: 412, column: 27, scope: !14783)
!14795 = !DILocation(line: 412, column: 39, scope: !14783)
!14796 = !DILocation(line: 412, column: 46, scope: !14783)
!14797 = !DILocation(line: 412, column: 44, scope: !14783)
!14798 = !DILocation(line: 416, column: 40, scope: !14783)
!14799 = !DILocation(line: 416, column: 32, scope: !14783)
!14800 = !DILocation(line: 416, column: 30, scope: !14783)
!14801 = !DILocation(line: 416, column: 48, scope: !14783)
!14802 = !DILocation(line: 412, column: 15, scope: !14783)
!14803 = !DILocation(line: 417, column: 11, scope: !14783)
!14804 = !DILocation(line: 417, column: 22, scope: !14783)
!14805 = !DILocation(line: 417, column: 28, scope: !14783)
!14806 = !DILocation(line: 417, column: 26, scope: !14783)
!14807 = !DILocation(line: 417, column: 31, scope: !14783)
!14808 = !DILocation(line: 417, column: 45, scope: !14783)
!14809 = !DILocation(line: 417, column: 14, scope: !14783)
!14810 = !DILocation(line: 417, column: 63, scope: !14783)
!14811 = !DILocation(line: 408, column: 11, scope: !14772)
!14812 = !DILocation(line: 419, column: 15, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !1221, line: 419, column: 15)
!14814 = distinct !DILexicalBlock(scope: !14783, file: !1221, line: 418, column: 9)
!14815 = !DILocation(line: 419, column: 15, scope: !14814)
!14816 = !DILocation(line: 420, column: 13, scope: !14813)
!14817 = !DILocation(line: 421, column: 26, scope: !14814)
!14818 = !DILocation(line: 422, column: 9, scope: !14814)
!14819 = !DILocation(line: 424, column: 11, scope: !14772)
!14820 = !DILocation(line: 424, column: 15, scope: !14772)
!14821 = !DILocation(line: 424, column: 9, scope: !14772)
!14822 = !DILocation(line: 425, column: 15, scope: !14772)
!14823 = !DILocation(line: 425, column: 7, scope: !14772)
!14824 = !DILocation(line: 428, column: 15, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 428, column: 15)
!14826 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 426, column: 9)
!14827 = !DILocation(line: 428, column: 15, scope: !14826)
!14828 = !DILocation(line: 430, column: 15, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14825, file: !1221, line: 429, column: 13)
!14830 = !DILocation(line: 430, column: 15, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14832, file: !1221, line: 430, column: 15)
!14832 = distinct !DILexicalBlock(scope: !14829, file: !1221, line: 430, column: 15)
!14833 = !DILocation(line: 430, column: 15, scope: !14832)
!14834 = !DILocation(line: 430, column: 15, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14832, file: !1221, line: 430, column: 15)
!14836 = !DILocation(line: 430, column: 15, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14835, file: !1221, line: 430, column: 15)
!14838 = !DILocation(line: 430, column: 15, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14840, file: !1221, line: 430, column: 15)
!14840 = distinct !DILexicalBlock(scope: !14837, file: !1221, line: 430, column: 15)
!14841 = !DILocation(line: 430, column: 15, scope: !14840)
!14842 = !DILocation(line: 430, column: 15, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14844, file: !1221, line: 430, column: 15)
!14844 = distinct !DILexicalBlock(scope: !14837, file: !1221, line: 430, column: 15)
!14845 = !DILocation(line: 430, column: 15, scope: !14844)
!14846 = !DILocation(line: 430, column: 15, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !1221, line: 430, column: 15)
!14848 = distinct !DILexicalBlock(scope: !14837, file: !1221, line: 430, column: 15)
!14849 = !DILocation(line: 430, column: 15, scope: !14848)
!14850 = !DILocation(line: 430, column: 15, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !1221, line: 430, column: 15)
!14852 = distinct !DILexicalBlock(scope: !14832, file: !1221, line: 430, column: 15)
!14853 = !DILocation(line: 430, column: 15, scope: !14852)
!14854 = !DILocation(line: 437, column: 19, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14829, file: !1221, line: 437, column: 19)
!14856 = !DILocation(line: 437, column: 33, scope: !14855)
!14857 = !DILocation(line: 438, column: 19, scope: !14855)
!14858 = !DILocation(line: 438, column: 22, scope: !14855)
!14859 = !DILocation(line: 438, column: 24, scope: !14855)
!14860 = !DILocation(line: 438, column: 30, scope: !14855)
!14861 = !DILocation(line: 438, column: 28, scope: !14855)
!14862 = !DILocation(line: 438, column: 38, scope: !14855)
!14863 = !DILocation(line: 438, column: 48, scope: !14855)
!14864 = !DILocation(line: 438, column: 52, scope: !14855)
!14865 = !DILocation(line: 438, column: 54, scope: !14855)
!14866 = !DILocation(line: 438, column: 45, scope: !14855)
!14867 = !DILocation(line: 438, column: 59, scope: !14855)
!14868 = !DILocation(line: 438, column: 62, scope: !14855)
!14869 = !DILocation(line: 438, column: 66, scope: !14855)
!14870 = !DILocation(line: 438, column: 68, scope: !14855)
!14871 = !DILocation(line: 438, column: 73, scope: !14855)
!14872 = !DILocation(line: 437, column: 19, scope: !14829)
!14873 = !DILocation(line: 440, column: 19, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14855, file: !1221, line: 439, column: 17)
!14875 = !DILocation(line: 440, column: 19, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !1221, line: 440, column: 19)
!14877 = distinct !DILexicalBlock(scope: !14874, file: !1221, line: 440, column: 19)
!14878 = !DILocation(line: 440, column: 19, scope: !14877)
!14879 = !DILocation(line: 441, column: 19, scope: !14874)
!14880 = !DILocation(line: 441, column: 19, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14882, file: !1221, line: 441, column: 19)
!14882 = distinct !DILexicalBlock(scope: !14874, file: !1221, line: 441, column: 19)
!14883 = !DILocation(line: 441, column: 19, scope: !14882)
!14884 = !DILocation(line: 442, column: 17, scope: !14874)
!14885 = !DILocation(line: 443, column: 17, scope: !14829)
!14886 = !DILocation(line: 448, column: 13, scope: !14829)
!14887 = !DILocation(line: 449, column: 20, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14825, file: !1221, line: 449, column: 20)
!14889 = !DILocation(line: 449, column: 26, scope: !14888)
!14890 = !DILocation(line: 449, column: 20, scope: !14825)
!14891 = !DILocation(line: 450, column: 13, scope: !14888)
!14892 = !DILocation(line: 451, column: 11, scope: !14826)
!14893 = !DILocation(line: 454, column: 19, scope: !14826)
!14894 = !DILocation(line: 454, column: 11, scope: !14826)
!14895 = !DILocation(line: 457, column: 19, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14897, file: !1221, line: 457, column: 19)
!14897 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 455, column: 13)
!14898 = !DILocation(line: 457, column: 19, scope: !14897)
!14899 = !DILocation(line: 458, column: 17, scope: !14896)
!14900 = !DILocation(line: 459, column: 15, scope: !14897)
!14901 = !DILocation(line: 462, column: 20, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14897, file: !1221, line: 462, column: 19)
!14903 = !DILocation(line: 462, column: 26, scope: !14902)
!14904 = !DILocation(line: 463, column: 19, scope: !14902)
!14905 = !DILocation(line: 463, column: 22, scope: !14902)
!14906 = !DILocation(line: 463, column: 24, scope: !14902)
!14907 = !DILocation(line: 463, column: 30, scope: !14902)
!14908 = !DILocation(line: 463, column: 28, scope: !14902)
!14909 = !DILocation(line: 463, column: 38, scope: !14902)
!14910 = !DILocation(line: 463, column: 41, scope: !14902)
!14911 = !DILocation(line: 463, column: 45, scope: !14902)
!14912 = !DILocation(line: 463, column: 47, scope: !14902)
!14913 = !DILocation(line: 463, column: 52, scope: !14902)
!14914 = !DILocation(line: 462, column: 19, scope: !14897)
!14915 = !DILocation(line: 464, column: 25, scope: !14902)
!14916 = !DILocation(line: 464, column: 29, scope: !14902)
!14917 = !DILocation(line: 464, column: 31, scope: !14902)
!14918 = !DILocation(line: 464, column: 17, scope: !14902)
!14919 = !DILocation(line: 471, column: 25, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !1221, line: 471, column: 25)
!14921 = distinct !DILexicalBlock(scope: !14902, file: !1221, line: 465, column: 19)
!14922 = !DILocation(line: 471, column: 25, scope: !14921)
!14923 = !DILocation(line: 472, column: 23, scope: !14920)
!14924 = !DILocation(line: 473, column: 25, scope: !14921)
!14925 = !DILocation(line: 473, column: 29, scope: !14921)
!14926 = !DILocation(line: 473, column: 31, scope: !14921)
!14927 = !DILocation(line: 473, column: 23, scope: !14921)
!14928 = !DILocation(line: 474, column: 23, scope: !14921)
!14929 = !DILocation(line: 475, column: 21, scope: !14921)
!14930 = !DILocation(line: 475, column: 21, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14932, file: !1221, line: 475, column: 21)
!14932 = distinct !DILexicalBlock(scope: !14921, file: !1221, line: 475, column: 21)
!14933 = !DILocation(line: 475, column: 21, scope: !14932)
!14934 = !DILocation(line: 476, column: 21, scope: !14921)
!14935 = !DILocation(line: 476, column: 21, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !1221, line: 476, column: 21)
!14937 = distinct !DILexicalBlock(scope: !14921, file: !1221, line: 476, column: 21)
!14938 = !DILocation(line: 476, column: 21, scope: !14937)
!14939 = !DILocation(line: 477, column: 21, scope: !14921)
!14940 = !DILocation(line: 477, column: 21, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14942, file: !1221, line: 477, column: 21)
!14942 = distinct !DILexicalBlock(scope: !14921, file: !1221, line: 477, column: 21)
!14943 = !DILocation(line: 477, column: 21, scope: !14942)
!14944 = !DILocation(line: 478, column: 21, scope: !14921)
!14945 = !DILocation(line: 478, column: 21, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14947, file: !1221, line: 478, column: 21)
!14947 = distinct !DILexicalBlock(scope: !14921, file: !1221, line: 478, column: 21)
!14948 = !DILocation(line: 478, column: 21, scope: !14947)
!14949 = !DILocation(line: 479, column: 21, scope: !14921)
!14950 = !DILocation(line: 482, column: 21, scope: !14921)
!14951 = !DILocation(line: 483, column: 19, scope: !14921)
!14952 = !DILocation(line: 484, column: 15, scope: !14897)
!14953 = !DILocation(line: 487, column: 15, scope: !14897)
!14954 = !DILocation(line: 489, column: 11, scope: !14826)
!14955 = !DILocation(line: 491, column: 24, scope: !14826)
!14956 = !DILocation(line: 491, column: 31, scope: !14826)
!14957 = !DILocation(line: 492, column: 24, scope: !14826)
!14958 = !DILocation(line: 492, column: 31, scope: !14826)
!14959 = !DILocation(line: 493, column: 24, scope: !14826)
!14960 = !DILocation(line: 493, column: 31, scope: !14826)
!14961 = !DILocation(line: 494, column: 24, scope: !14826)
!14962 = !DILocation(line: 494, column: 31, scope: !14826)
!14963 = !DILocation(line: 495, column: 24, scope: !14826)
!14964 = !DILocation(line: 495, column: 31, scope: !14826)
!14965 = !DILocation(line: 496, column: 24, scope: !14826)
!14966 = !DILocation(line: 496, column: 31, scope: !14826)
!14967 = !DILocation(line: 497, column: 24, scope: !14826)
!14968 = !DILocation(line: 497, column: 31, scope: !14826)
!14969 = !DILocation(line: 498, column: 26, scope: !14826)
!14970 = !DILocation(line: 498, column: 24, scope: !14826)
!14971 = !DILocation(line: 500, column: 15, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 500, column: 15)
!14973 = !DILocation(line: 500, column: 29, scope: !14972)
!14974 = !DILocation(line: 500, column: 15, scope: !14826)
!14975 = !DILocation(line: 502, column: 19, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14977, file: !1221, line: 502, column: 19)
!14977 = distinct !DILexicalBlock(scope: !14972, file: !1221, line: 501, column: 13)
!14978 = !DILocation(line: 502, column: 19, scope: !14977)
!14979 = !DILocation(line: 503, column: 17, scope: !14976)
!14980 = !DILocation(line: 504, column: 15, scope: !14977)
!14981 = !DILocation(line: 509, column: 15, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 509, column: 15)
!14983 = !DILocation(line: 509, column: 33, scope: !14982)
!14984 = !DILocation(line: 509, column: 36, scope: !14982)
!14985 = !DILocation(line: 509, column: 55, scope: !14982)
!14986 = !DILocation(line: 509, column: 58, scope: !14982)
!14987 = !DILocation(line: 509, column: 15, scope: !14826)
!14988 = !DILocation(line: 510, column: 13, scope: !14982)
!14989 = !DILabel(scope: !14826, name: "c_and_shell_escape", file: !1221, line: 512)
!14990 = !DILocation(line: 512, column: 9, scope: !14826)
!14991 = !DILocation(line: 513, column: 15, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 513, column: 15)
!14993 = !DILocation(line: 513, column: 29, scope: !14992)
!14994 = !DILocation(line: 514, column: 15, scope: !14992)
!14995 = !DILocation(line: 514, column: 18, scope: !14992)
!14996 = !DILocation(line: 513, column: 15, scope: !14826)
!14997 = !DILocation(line: 515, column: 13, scope: !14992)
!14998 = !DILabel(scope: !14826, name: "c_escape", file: !1221, line: 517)
!14999 = !DILocation(line: 517, column: 9, scope: !14826)
!15000 = !DILocation(line: 518, column: 15, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 518, column: 15)
!15002 = !DILocation(line: 518, column: 15, scope: !14826)
!15003 = !DILocation(line: 520, column: 19, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15001, file: !1221, line: 519, column: 13)
!15005 = !DILocation(line: 520, column: 17, scope: !15004)
!15006 = !DILocation(line: 521, column: 15, scope: !15004)
!15007 = !DILocation(line: 523, column: 11, scope: !14826)
!15008 = !DILocation(line: 526, column: 18, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 526, column: 15)
!15010 = !DILocation(line: 526, column: 26, scope: !15009)
!15011 = !DILocation(line: 526, column: 15, scope: !14826)
!15012 = !DILocation(line: 526, column: 40, scope: !15009)
!15013 = !DILocation(line: 526, column: 47, scope: !15009)
!15014 = !DILocation(line: 526, column: 57, scope: !15009)
!15015 = !DILocation(line: 526, column: 65, scope: !15009)
!15016 = !DILocation(line: 527, column: 13, scope: !15009)
!15017 = !DILocation(line: 528, column: 11, scope: !14826)
!15018 = !DILocation(line: 530, column: 15, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 530, column: 15)
!15020 = !DILocation(line: 530, column: 17, scope: !15019)
!15021 = !DILocation(line: 530, column: 15, scope: !14826)
!15022 = !DILocation(line: 531, column: 13, scope: !15019)
!15023 = !DILocation(line: 532, column: 11, scope: !14826)
!15024 = !DILocation(line: 534, column: 36, scope: !14826)
!15025 = !DILocation(line: 535, column: 11, scope: !14826)
!15026 = !DILocation(line: 548, column: 15, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 548, column: 15)
!15028 = !DILocation(line: 548, column: 29, scope: !15027)
!15029 = !DILocation(line: 549, column: 15, scope: !15027)
!15030 = !DILocation(line: 549, column: 18, scope: !15027)
!15031 = !DILocation(line: 548, column: 15, scope: !14826)
!15032 = !DILocation(line: 550, column: 13, scope: !15027)
!15033 = !DILocation(line: 551, column: 11, scope: !14826)
!15034 = !DILocation(line: 554, column: 36, scope: !14826)
!15035 = !DILocation(line: 555, column: 36, scope: !14826)
!15036 = !DILocation(line: 556, column: 15, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 556, column: 15)
!15038 = !DILocation(line: 556, column: 29, scope: !15037)
!15039 = !DILocation(line: 556, column: 15, scope: !14826)
!15040 = !DILocation(line: 558, column: 19, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !1221, line: 558, column: 19)
!15042 = distinct !DILexicalBlock(scope: !15037, file: !1221, line: 557, column: 13)
!15043 = !DILocation(line: 558, column: 19, scope: !15042)
!15044 = !DILocation(line: 559, column: 17, scope: !15041)
!15045 = !DILocation(line: 561, column: 19, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15042, file: !1221, line: 561, column: 19)
!15047 = !DILocation(line: 561, column: 30, scope: !15046)
!15048 = !DILocation(line: 561, column: 35, scope: !15046)
!15049 = !DILocation(line: 561, column: 19, scope: !15042)
!15050 = !DILocation(line: 566, column: 37, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15046, file: !1221, line: 562, column: 17)
!15052 = !DILocation(line: 566, column: 35, scope: !15051)
!15053 = !DILocation(line: 567, column: 30, scope: !15051)
!15054 = !DILocation(line: 568, column: 17, scope: !15051)
!15055 = !DILocation(line: 570, column: 15, scope: !15042)
!15056 = !DILocation(line: 570, column: 15, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15058, file: !1221, line: 570, column: 15)
!15058 = distinct !DILexicalBlock(scope: !15042, file: !1221, line: 570, column: 15)
!15059 = !DILocation(line: 570, column: 15, scope: !15058)
!15060 = !DILocation(line: 571, column: 15, scope: !15042)
!15061 = !DILocation(line: 571, column: 15, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15063, file: !1221, line: 571, column: 15)
!15063 = distinct !DILexicalBlock(scope: !15042, file: !1221, line: 571, column: 15)
!15064 = !DILocation(line: 571, column: 15, scope: !15063)
!15065 = !DILocation(line: 572, column: 15, scope: !15042)
!15066 = !DILocation(line: 572, column: 15, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15068, file: !1221, line: 572, column: 15)
!15068 = distinct !DILexicalBlock(scope: !15042, file: !1221, line: 572, column: 15)
!15069 = !DILocation(line: 572, column: 15, scope: !15068)
!15070 = !DILocation(line: 573, column: 40, scope: !15042)
!15071 = !DILocation(line: 574, column: 13, scope: !15042)
!15072 = !DILocation(line: 575, column: 11, scope: !14826)
!15073 = !DILocation(line: 599, column: 36, scope: !14826)
!15074 = !DILocation(line: 600, column: 11, scope: !14826)
!15075 = !DILocalVariable(name: "m", scope: !15076, file: !1221, line: 610, type: !55)
!15076 = distinct !DILexicalBlock(scope: !14826, file: !1221, line: 608, column: 11)
!15077 = !DILocation(line: 610, column: 20, scope: !15076)
!15078 = !DILocalVariable(name: "printable", scope: !15076, file: !1221, line: 612, type: !103)
!15079 = !DILocation(line: 612, column: 18, scope: !15076)
!15080 = !DILocation(line: 614, column: 17, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15076, file: !1221, line: 614, column: 17)
!15082 = !DILocation(line: 614, column: 17, scope: !15076)
!15083 = !DILocation(line: 616, column: 19, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15081, file: !1221, line: 615, column: 15)
!15085 = !DILocation(line: 617, column: 29, scope: !15084)
!15086 = !DILocation(line: 617, column: 41, scope: !15084)
!15087 = !DILocation(line: 617, column: 27, scope: !15084)
!15088 = !DILocation(line: 618, column: 15, scope: !15084)
!15089 = !DILocalVariable(name: "mbstate", scope: !15090, file: !1221, line: 621, type: !1295)
!15090 = distinct !DILexicalBlock(scope: !15081, file: !1221, line: 620, column: 15)
!15091 = !DILocation(line: 621, column: 27, scope: !15090)
!15092 = !DILocation(line: 622, column: 17, scope: !15090)
!15093 = !DILocation(line: 624, column: 19, scope: !15090)
!15094 = !DILocation(line: 625, column: 27, scope: !15090)
!15095 = !DILocation(line: 626, column: 21, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15090, file: !1221, line: 626, column: 21)
!15097 = !DILocation(line: 626, column: 29, scope: !15096)
!15098 = !DILocation(line: 626, column: 21, scope: !15090)
!15099 = !DILocation(line: 627, column: 37, scope: !15096)
!15100 = !DILocation(line: 627, column: 29, scope: !15096)
!15101 = !DILocation(line: 627, column: 27, scope: !15096)
!15102 = !DILocation(line: 627, column: 19, scope: !15096)
!15103 = !DILocation(line: 629, column: 17, scope: !15090)
!15104 = !DILocalVariable(name: "w", scope: !15105, file: !1221, line: 631, type: !1308)
!15105 = distinct !DILexicalBlock(scope: !15090, file: !1221, line: 630, column: 19)
!15106 = !DILocation(line: 631, column: 29, scope: !15105)
!15107 = !DILocalVariable(name: "bytes", scope: !15105, file: !1221, line: 632, type: !55)
!15108 = !DILocation(line: 632, column: 28, scope: !15105)
!15109 = !DILocation(line: 632, column: 50, scope: !15105)
!15110 = !DILocation(line: 632, column: 54, scope: !15105)
!15111 = !DILocation(line: 632, column: 58, scope: !15105)
!15112 = !DILocation(line: 632, column: 56, scope: !15105)
!15113 = !DILocation(line: 633, column: 45, scope: !15105)
!15114 = !DILocation(line: 633, column: 56, scope: !15105)
!15115 = !DILocation(line: 633, column: 60, scope: !15105)
!15116 = !DILocation(line: 633, column: 58, scope: !15105)
!15117 = !DILocation(line: 633, column: 53, scope: !15105)
!15118 = !DILocation(line: 632, column: 36, scope: !15105)
!15119 = !DILocation(line: 634, column: 25, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15105, file: !1221, line: 634, column: 25)
!15121 = !DILocation(line: 634, column: 31, scope: !15120)
!15122 = !DILocation(line: 634, column: 25, scope: !15105)
!15123 = !DILocation(line: 635, column: 23, scope: !15120)
!15124 = !DILocation(line: 636, column: 30, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15120, file: !1221, line: 636, column: 30)
!15126 = !DILocation(line: 636, column: 36, scope: !15125)
!15127 = !DILocation(line: 636, column: 30, scope: !15120)
!15128 = !DILocation(line: 638, column: 35, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15125, file: !1221, line: 637, column: 23)
!15130 = !DILocation(line: 639, column: 25, scope: !15129)
!15131 = !DILocation(line: 641, column: 30, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15125, file: !1221, line: 641, column: 30)
!15133 = !DILocation(line: 641, column: 36, scope: !15132)
!15134 = !DILocation(line: 641, column: 30, scope: !15125)
!15135 = !DILocation(line: 643, column: 35, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15132, file: !1221, line: 642, column: 23)
!15137 = !DILocation(line: 644, column: 25, scope: !15136)
!15138 = !DILocation(line: 644, column: 32, scope: !15136)
!15139 = !DILocation(line: 644, column: 36, scope: !15136)
!15140 = !DILocation(line: 644, column: 34, scope: !15136)
!15141 = !DILocation(line: 644, column: 40, scope: !15136)
!15142 = !DILocation(line: 644, column: 38, scope: !15136)
!15143 = !DILocation(line: 644, column: 48, scope: !15136)
!15144 = !DILocation(line: 644, column: 51, scope: !15136)
!15145 = !DILocation(line: 644, column: 55, scope: !15136)
!15146 = !DILocation(line: 644, column: 59, scope: !15136)
!15147 = !DILocation(line: 644, column: 57, scope: !15136)
!15148 = !DILocation(line: 0, scope: !15136)
!15149 = !DILocation(line: 645, column: 28, scope: !15136)
!15150 = distinct !{!15150, !15137, !15149}
!15151 = !DILocation(line: 646, column: 25, scope: !15136)
!15152 = !DILocation(line: 654, column: 44, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15154, file: !1221, line: 654, column: 29)
!15154 = distinct !DILexicalBlock(scope: !15132, file: !1221, line: 649, column: 23)
!15155 = !DILocation(line: 655, column: 29, scope: !15153)
!15156 = !DILocation(line: 655, column: 32, scope: !15153)
!15157 = !DILocation(line: 655, column: 46, scope: !15153)
!15158 = !DILocation(line: 654, column: 29, scope: !15154)
!15159 = !DILocalVariable(name: "j", scope: !15160, file: !1221, line: 657, type: !55)
!15160 = distinct !DILexicalBlock(scope: !15153, file: !1221, line: 656, column: 27)
!15161 = !DILocation(line: 657, column: 36, scope: !15160)
!15162 = !DILocation(line: 658, column: 36, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15160, file: !1221, line: 658, column: 29)
!15164 = !DILocation(line: 658, column: 34, scope: !15163)
!15165 = !DILocation(line: 658, column: 41, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15163, file: !1221, line: 658, column: 29)
!15167 = !DILocation(line: 658, column: 45, scope: !15166)
!15168 = !DILocation(line: 658, column: 43, scope: !15166)
!15169 = !DILocation(line: 658, column: 29, scope: !15163)
!15170 = !DILocation(line: 659, column: 39, scope: !15166)
!15171 = !DILocation(line: 659, column: 43, scope: !15166)
!15172 = !DILocation(line: 659, column: 47, scope: !15166)
!15173 = !DILocation(line: 659, column: 45, scope: !15166)
!15174 = !DILocation(line: 659, column: 51, scope: !15166)
!15175 = !DILocation(line: 659, column: 49, scope: !15166)
!15176 = !DILocation(line: 659, column: 31, scope: !15166)
!15177 = !DILocation(line: 663, column: 35, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15166, file: !1221, line: 660, column: 33)
!15179 = !DILocation(line: 666, column: 35, scope: !15178)
!15180 = !DILocation(line: 667, column: 33, scope: !15178)
!15181 = !DILocation(line: 658, column: 53, scope: !15166)
!15182 = !DILocation(line: 658, column: 29, scope: !15166)
!15183 = distinct !{!15183, !15169, !15184}
!15184 = !DILocation(line: 667, column: 33, scope: !15163)
!15185 = !DILocation(line: 668, column: 27, scope: !15160)
!15186 = !DILocation(line: 670, column: 41, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15154, file: !1221, line: 670, column: 29)
!15188 = !DILocation(line: 670, column: 31, scope: !15187)
!15189 = !DILocation(line: 670, column: 29, scope: !15154)
!15190 = !DILocation(line: 671, column: 37, scope: !15187)
!15191 = !DILocation(line: 671, column: 27, scope: !15187)
!15192 = !DILocation(line: 672, column: 30, scope: !15154)
!15193 = !DILocation(line: 672, column: 27, scope: !15154)
!15194 = !DILocation(line: 674, column: 19, scope: !15105)
!15195 = !DILocation(line: 675, column: 26, scope: !15090)
!15196 = !DILocation(line: 675, column: 24, scope: !15090)
!15197 = distinct !{!15197, !15103, !15198}
!15198 = !DILocation(line: 675, column: 44, scope: !15090)
!15199 = !DILocation(line: 678, column: 40, scope: !15076)
!15200 = !DILocation(line: 678, column: 38, scope: !15076)
!15201 = !DILocation(line: 680, column: 21, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15076, file: !1221, line: 680, column: 17)
!15203 = !DILocation(line: 680, column: 19, scope: !15202)
!15204 = !DILocation(line: 680, column: 23, scope: !15202)
!15205 = !DILocation(line: 680, column: 27, scope: !15202)
!15206 = !DILocation(line: 680, column: 45, scope: !15202)
!15207 = !DILocation(line: 680, column: 50, scope: !15202)
!15208 = !DILocation(line: 680, column: 17, scope: !15076)
!15209 = !DILocalVariable(name: "ilim", scope: !15210, file: !1221, line: 684, type: !55)
!15210 = distinct !DILexicalBlock(scope: !15202, file: !1221, line: 681, column: 15)
!15211 = !DILocation(line: 684, column: 24, scope: !15210)
!15212 = !DILocation(line: 684, column: 31, scope: !15210)
!15213 = !DILocation(line: 684, column: 35, scope: !15210)
!15214 = !DILocation(line: 684, column: 33, scope: !15210)
!15215 = !DILocation(line: 686, column: 17, scope: !15210)
!15216 = !DILocation(line: 688, column: 25, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15218, file: !1221, line: 688, column: 25)
!15218 = distinct !DILexicalBlock(scope: !15219, file: !1221, line: 687, column: 19)
!15219 = distinct !DILexicalBlock(scope: !15220, file: !1221, line: 686, column: 17)
!15220 = distinct !DILexicalBlock(scope: !15210, file: !1221, line: 686, column: 17)
!15221 = !DILocation(line: 688, column: 43, scope: !15217)
!15222 = !DILocation(line: 688, column: 48, scope: !15217)
!15223 = !DILocation(line: 688, column: 25, scope: !15218)
!15224 = !DILocation(line: 690, column: 25, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15217, file: !1221, line: 689, column: 23)
!15226 = !DILocation(line: 690, column: 25, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !1221, line: 690, column: 25)
!15228 = distinct !DILexicalBlock(scope: !15225, file: !1221, line: 690, column: 25)
!15229 = !DILocation(line: 690, column: 25, scope: !15228)
!15230 = !DILocation(line: 690, column: 25, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15228, file: !1221, line: 690, column: 25)
!15232 = !DILocation(line: 690, column: 25, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15231, file: !1221, line: 690, column: 25)
!15234 = !DILocation(line: 690, column: 25, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15236, file: !1221, line: 690, column: 25)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !1221, line: 690, column: 25)
!15237 = !DILocation(line: 690, column: 25, scope: !15236)
!15238 = !DILocation(line: 690, column: 25, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15240, file: !1221, line: 690, column: 25)
!15240 = distinct !DILexicalBlock(scope: !15233, file: !1221, line: 690, column: 25)
!15241 = !DILocation(line: 690, column: 25, scope: !15240)
!15242 = !DILocation(line: 690, column: 25, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15244, file: !1221, line: 690, column: 25)
!15244 = distinct !DILexicalBlock(scope: !15233, file: !1221, line: 690, column: 25)
!15245 = !DILocation(line: 690, column: 25, scope: !15244)
!15246 = !DILocation(line: 690, column: 25, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15248, file: !1221, line: 690, column: 25)
!15248 = distinct !DILexicalBlock(scope: !15228, file: !1221, line: 690, column: 25)
!15249 = !DILocation(line: 690, column: 25, scope: !15248)
!15250 = !DILocation(line: 691, column: 25, scope: !15225)
!15251 = !DILocation(line: 691, column: 25, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15253, file: !1221, line: 691, column: 25)
!15253 = distinct !DILexicalBlock(scope: !15225, file: !1221, line: 691, column: 25)
!15254 = !DILocation(line: 691, column: 25, scope: !15253)
!15255 = !DILocation(line: 692, column: 25, scope: !15225)
!15256 = !DILocation(line: 692, column: 25, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15258, file: !1221, line: 692, column: 25)
!15258 = distinct !DILexicalBlock(scope: !15225, file: !1221, line: 692, column: 25)
!15259 = !DILocation(line: 692, column: 25, scope: !15258)
!15260 = !DILocation(line: 693, column: 36, scope: !15225)
!15261 = !DILocation(line: 693, column: 38, scope: !15225)
!15262 = !DILocation(line: 693, column: 33, scope: !15225)
!15263 = !DILocation(line: 693, column: 29, scope: !15225)
!15264 = !DILocation(line: 693, column: 27, scope: !15225)
!15265 = !DILocation(line: 694, column: 23, scope: !15225)
!15266 = !DILocation(line: 695, column: 30, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15217, file: !1221, line: 695, column: 30)
!15268 = !DILocation(line: 695, column: 30, scope: !15217)
!15269 = !DILocation(line: 697, column: 25, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15267, file: !1221, line: 696, column: 23)
!15271 = !DILocation(line: 697, column: 25, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !1221, line: 697, column: 25)
!15273 = distinct !DILexicalBlock(scope: !15270, file: !1221, line: 697, column: 25)
!15274 = !DILocation(line: 697, column: 25, scope: !15273)
!15275 = !DILocation(line: 698, column: 40, scope: !15270)
!15276 = !DILocation(line: 699, column: 23, scope: !15270)
!15277 = !DILocation(line: 700, column: 25, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15218, file: !1221, line: 700, column: 25)
!15279 = !DILocation(line: 700, column: 33, scope: !15278)
!15280 = !DILocation(line: 700, column: 35, scope: !15278)
!15281 = !DILocation(line: 700, column: 30, scope: !15278)
!15282 = !DILocation(line: 700, column: 25, scope: !15218)
!15283 = !DILocation(line: 701, column: 23, scope: !15278)
!15284 = !DILocation(line: 702, column: 21, scope: !15218)
!15285 = !DILocation(line: 702, column: 21, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !1221, line: 702, column: 21)
!15287 = distinct !DILexicalBlock(scope: !15218, file: !1221, line: 702, column: 21)
!15288 = !DILocation(line: 702, column: 21, scope: !15287)
!15289 = !DILocation(line: 702, column: 21, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15286, file: !1221, line: 702, column: 21)
!15291 = !DILocation(line: 702, column: 21, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15293, file: !1221, line: 702, column: 21)
!15293 = distinct !DILexicalBlock(scope: !15290, file: !1221, line: 702, column: 21)
!15294 = !DILocation(line: 702, column: 21, scope: !15293)
!15295 = !DILocation(line: 702, column: 21, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15297, file: !1221, line: 702, column: 21)
!15297 = distinct !DILexicalBlock(scope: !15290, file: !1221, line: 702, column: 21)
!15298 = !DILocation(line: 702, column: 21, scope: !15297)
!15299 = !DILocation(line: 703, column: 21, scope: !15218)
!15300 = !DILocation(line: 703, column: 21, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15302, file: !1221, line: 703, column: 21)
!15302 = distinct !DILexicalBlock(scope: !15218, file: !1221, line: 703, column: 21)
!15303 = !DILocation(line: 703, column: 21, scope: !15302)
!15304 = !DILocation(line: 704, column: 25, scope: !15218)
!15305 = !DILocation(line: 704, column: 29, scope: !15218)
!15306 = !DILocation(line: 704, column: 23, scope: !15218)
!15307 = !DILocation(line: 686, column: 17, scope: !15219)
!15308 = distinct !{!15308, !15309, !15310}
!15309 = !DILocation(line: 686, column: 17, scope: !15220)
!15310 = !DILocation(line: 705, column: 19, scope: !15220)
!15311 = !DILocation(line: 707, column: 17, scope: !15210)
!15312 = !DILocation(line: 710, column: 9, scope: !14826)
!15313 = !DILocation(line: 712, column: 16, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 712, column: 11)
!15315 = !DILocation(line: 712, column: 34, scope: !15314)
!15316 = !DILocation(line: 712, column: 37, scope: !15314)
!15317 = !DILocation(line: 712, column: 51, scope: !15314)
!15318 = !DILocation(line: 713, column: 15, scope: !15314)
!15319 = !DILocation(line: 713, column: 18, scope: !15314)
!15320 = !DILocation(line: 714, column: 14, scope: !15314)
!15321 = !DILocation(line: 714, column: 17, scope: !15314)
!15322 = !DILocation(line: 715, column: 14, scope: !15314)
!15323 = !DILocation(line: 715, column: 17, scope: !15314)
!15324 = !DILocation(line: 715, column: 33, scope: !15314)
!15325 = !DILocation(line: 715, column: 35, scope: !15314)
!15326 = !DILocation(line: 715, column: 51, scope: !15314)
!15327 = !DILocation(line: 715, column: 53, scope: !15314)
!15328 = !DILocation(line: 715, column: 47, scope: !15314)
!15329 = !DILocation(line: 715, column: 65, scope: !15314)
!15330 = !DILocation(line: 716, column: 11, scope: !15314)
!15331 = !DILocation(line: 716, column: 15, scope: !15314)
!15332 = !DILocation(line: 712, column: 11, scope: !14772)
!15333 = !DILocation(line: 717, column: 9, scope: !15314)
!15334 = !DILabel(scope: !14772, name: "store_escape", file: !1221, line: 719)
!15335 = !DILocation(line: 719, column: 5, scope: !14772)
!15336 = !DILocation(line: 720, column: 7, scope: !14772)
!15337 = !DILocation(line: 720, column: 7, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15339, file: !1221, line: 720, column: 7)
!15339 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 720, column: 7)
!15340 = !DILocation(line: 720, column: 7, scope: !15339)
!15341 = !DILocation(line: 720, column: 7, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15339, file: !1221, line: 720, column: 7)
!15343 = !DILocation(line: 720, column: 7, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15342, file: !1221, line: 720, column: 7)
!15345 = !DILocation(line: 720, column: 7, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15347, file: !1221, line: 720, column: 7)
!15347 = distinct !DILexicalBlock(scope: !15344, file: !1221, line: 720, column: 7)
!15348 = !DILocation(line: 720, column: 7, scope: !15347)
!15349 = !DILocation(line: 720, column: 7, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !1221, line: 720, column: 7)
!15351 = distinct !DILexicalBlock(scope: !15344, file: !1221, line: 720, column: 7)
!15352 = !DILocation(line: 720, column: 7, scope: !15351)
!15353 = !DILocation(line: 720, column: 7, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15355, file: !1221, line: 720, column: 7)
!15355 = distinct !DILexicalBlock(scope: !15344, file: !1221, line: 720, column: 7)
!15356 = !DILocation(line: 720, column: 7, scope: !15355)
!15357 = !DILocation(line: 720, column: 7, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15359, file: !1221, line: 720, column: 7)
!15359 = distinct !DILexicalBlock(scope: !15339, file: !1221, line: 720, column: 7)
!15360 = !DILocation(line: 720, column: 7, scope: !15359)
!15361 = !DILabel(scope: !14772, name: "store_c", file: !1221, line: 722)
!15362 = !DILocation(line: 722, column: 5, scope: !14772)
!15363 = !DILocation(line: 723, column: 7, scope: !14772)
!15364 = !DILocation(line: 723, column: 7, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15366, file: !1221, line: 723, column: 7)
!15366 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 723, column: 7)
!15367 = !DILocation(line: 723, column: 7, scope: !15366)
!15368 = !DILocation(line: 723, column: 7, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15365, file: !1221, line: 723, column: 7)
!15370 = !DILocation(line: 723, column: 7, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !1221, line: 723, column: 7)
!15372 = distinct !DILexicalBlock(scope: !15369, file: !1221, line: 723, column: 7)
!15373 = !DILocation(line: 723, column: 7, scope: !15372)
!15374 = !DILocation(line: 723, column: 7, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15376, file: !1221, line: 723, column: 7)
!15376 = distinct !DILexicalBlock(scope: !15369, file: !1221, line: 723, column: 7)
!15377 = !DILocation(line: 723, column: 7, scope: !15376)
!15378 = !DILocation(line: 724, column: 7, scope: !14772)
!15379 = !DILocation(line: 724, column: 7, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !1221, line: 724, column: 7)
!15381 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 724, column: 7)
!15382 = !DILocation(line: 724, column: 7, scope: !15381)
!15383 = !DILocation(line: 726, column: 13, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !14772, file: !1221, line: 726, column: 11)
!15385 = !DILocation(line: 726, column: 11, scope: !14772)
!15386 = !DILocation(line: 727, column: 38, scope: !15384)
!15387 = !DILocation(line: 727, column: 9, scope: !15384)
!15388 = !DILocation(line: 728, column: 5, scope: !14772)
!15389 = !DILocation(line: 400, column: 75, scope: !14761)
!15390 = !DILocation(line: 400, column: 3, scope: !14761)
!15391 = distinct !{!15391, !14770, !15392}
!15392 = !DILocation(line: 728, column: 5, scope: !14758)
!15393 = !DILocation(line: 730, column: 7, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 730, column: 7)
!15395 = !DILocation(line: 730, column: 11, scope: !15394)
!15396 = !DILocation(line: 730, column: 16, scope: !15394)
!15397 = !DILocation(line: 730, column: 19, scope: !15394)
!15398 = !DILocation(line: 730, column: 33, scope: !15394)
!15399 = !DILocation(line: 731, column: 7, scope: !15394)
!15400 = !DILocation(line: 731, column: 10, scope: !15394)
!15401 = !DILocation(line: 730, column: 7, scope: !14622)
!15402 = !DILocation(line: 732, column: 5, scope: !15394)
!15403 = !DILocation(line: 738, column: 7, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 738, column: 7)
!15405 = !DILocation(line: 738, column: 21, scope: !15404)
!15406 = !DILocation(line: 738, column: 51, scope: !15404)
!15407 = !DILocation(line: 738, column: 56, scope: !15404)
!15408 = !DILocation(line: 739, column: 7, scope: !15404)
!15409 = !DILocation(line: 739, column: 10, scope: !15404)
!15410 = !DILocation(line: 738, column: 7, scope: !14622)
!15411 = !DILocation(line: 741, column: 11, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15413, file: !1221, line: 741, column: 11)
!15413 = distinct !DILexicalBlock(scope: !15404, file: !1221, line: 740, column: 5)
!15414 = !DILocation(line: 741, column: 11, scope: !15413)
!15415 = !DILocation(line: 742, column: 42, scope: !15412)
!15416 = !DILocation(line: 742, column: 50, scope: !15412)
!15417 = !DILocation(line: 742, column: 67, scope: !15412)
!15418 = !DILocation(line: 742, column: 72, scope: !15412)
!15419 = !DILocation(line: 744, column: 42, scope: !15412)
!15420 = !DILocation(line: 744, column: 49, scope: !15412)
!15421 = !DILocation(line: 745, column: 42, scope: !15412)
!15422 = !DILocation(line: 745, column: 54, scope: !15412)
!15423 = !DILocation(line: 742, column: 16, scope: !15412)
!15424 = !DILocation(line: 742, column: 9, scope: !15412)
!15425 = !DILocation(line: 746, column: 18, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15412, file: !1221, line: 746, column: 16)
!15427 = !DILocation(line: 746, column: 29, scope: !15426)
!15428 = !DILocation(line: 746, column: 32, scope: !15426)
!15429 = !DILocation(line: 746, column: 16, scope: !15412)
!15430 = !DILocation(line: 749, column: 24, scope: !15431)
!15431 = distinct !DILexicalBlock(scope: !15426, file: !1221, line: 747, column: 9)
!15432 = !DILocation(line: 749, column: 22, scope: !15431)
!15433 = !DILocation(line: 750, column: 15, scope: !15431)
!15434 = !DILocation(line: 751, column: 11, scope: !15431)
!15435 = !DILocation(line: 753, column: 5, scope: !15413)
!15436 = !DILocation(line: 755, column: 7, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 755, column: 7)
!15438 = !DILocation(line: 755, column: 20, scope: !15437)
!15439 = !DILocation(line: 755, column: 24, scope: !15437)
!15440 = !DILocation(line: 755, column: 7, scope: !14622)
!15441 = !DILocation(line: 756, column: 5, scope: !15437)
!15442 = !DILocation(line: 756, column: 13, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15444, file: !1221, line: 756, column: 5)
!15444 = distinct !DILexicalBlock(scope: !15437, file: !1221, line: 756, column: 5)
!15445 = !DILocation(line: 756, column: 12, scope: !15443)
!15446 = !DILocation(line: 756, column: 5, scope: !15444)
!15447 = !DILocation(line: 757, column: 7, scope: !15443)
!15448 = !DILocation(line: 757, column: 7, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15450, file: !1221, line: 757, column: 7)
!15450 = distinct !DILexicalBlock(scope: !15443, file: !1221, line: 757, column: 7)
!15451 = !DILocation(line: 757, column: 7, scope: !15450)
!15452 = !DILocation(line: 756, column: 39, scope: !15443)
!15453 = !DILocation(line: 756, column: 5, scope: !15443)
!15454 = distinct !{!15454, !15446, !15455}
!15455 = !DILocation(line: 757, column: 7, scope: !15444)
!15456 = !DILocation(line: 759, column: 7, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 759, column: 7)
!15458 = !DILocation(line: 759, column: 13, scope: !15457)
!15459 = !DILocation(line: 759, column: 11, scope: !15457)
!15460 = !DILocation(line: 759, column: 7, scope: !14622)
!15461 = !DILocation(line: 760, column: 5, scope: !15457)
!15462 = !DILocation(line: 760, column: 12, scope: !15457)
!15463 = !DILocation(line: 760, column: 17, scope: !15457)
!15464 = !DILocation(line: 761, column: 10, scope: !14622)
!15465 = !DILocation(line: 761, column: 3, scope: !14622)
!15466 = !DILabel(scope: !14622, name: "force_outer_quoting_style", file: !1221, line: 763)
!15467 = !DILocation(line: 763, column: 2, scope: !14622)
!15468 = !DILocation(line: 766, column: 7, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !14622, file: !1221, line: 766, column: 7)
!15470 = !DILocation(line: 766, column: 21, scope: !15469)
!15471 = !DILocation(line: 766, column: 51, scope: !15469)
!15472 = !DILocation(line: 766, column: 54, scope: !15469)
!15473 = !DILocation(line: 766, column: 7, scope: !14622)
!15474 = !DILocation(line: 767, column: 19, scope: !15469)
!15475 = !DILocation(line: 767, column: 5, scope: !15469)
!15476 = !DILocation(line: 768, column: 36, scope: !14622)
!15477 = !DILocation(line: 768, column: 44, scope: !14622)
!15478 = !DILocation(line: 768, column: 56, scope: !14622)
!15479 = !DILocation(line: 768, column: 61, scope: !14622)
!15480 = !DILocation(line: 769, column: 36, scope: !14622)
!15481 = !DILocation(line: 770, column: 36, scope: !14622)
!15482 = !DILocation(line: 770, column: 42, scope: !14622)
!15483 = !DILocation(line: 771, column: 36, scope: !14622)
!15484 = !DILocation(line: 771, column: 48, scope: !14622)
!15485 = !DILocation(line: 768, column: 10, scope: !14622)
!15486 = !DILocation(line: 768, column: 3, scope: !14622)
!15487 = !DILocation(line: 772, column: 1, scope: !14622)
!15488 = distinct !DISubprogram(name: "gettext_quote", scope: !1221, file: !1221, line: 207, type: !1309, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15489 = !DILocalVariable(name: "msgid", arg: 1, scope: !15488, file: !1221, line: 207, type: !88)
!15490 = !DILocation(line: 207, column: 28, scope: !15488)
!15491 = !DILocalVariable(name: "s", arg: 2, scope: !15488, file: !1221, line: 207, type: !1199)
!15492 = !DILocation(line: 207, column: 54, scope: !15488)
!15493 = !DILocalVariable(name: "translation", scope: !15488, file: !1221, line: 209, type: !88)
!15494 = !DILocation(line: 209, column: 15, scope: !15488)
!15495 = !DILocation(line: 209, column: 29, scope: !15488)
!15496 = !DILocalVariable(name: "locale_code", scope: !15488, file: !1221, line: 210, type: !88)
!15497 = !DILocation(line: 210, column: 15, scope: !15488)
!15498 = !DILocation(line: 212, column: 7, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15488, file: !1221, line: 212, column: 7)
!15500 = !DILocation(line: 212, column: 22, scope: !15499)
!15501 = !DILocation(line: 212, column: 19, scope: !15499)
!15502 = !DILocation(line: 212, column: 7, scope: !15488)
!15503 = !DILocation(line: 213, column: 12, scope: !15499)
!15504 = !DILocation(line: 213, column: 5, scope: !15499)
!15505 = !DILocation(line: 233, column: 17, scope: !15488)
!15506 = !DILocation(line: 233, column: 15, scope: !15488)
!15507 = !DILocation(line: 234, column: 7, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15488, file: !1221, line: 234, column: 7)
!15509 = !DILocation(line: 234, column: 7, scope: !15488)
!15510 = !DILocation(line: 235, column: 12, scope: !15508)
!15511 = !DILocation(line: 235, column: 21, scope: !15508)
!15512 = !DILocation(line: 235, column: 5, scope: !15508)
!15513 = !DILocation(line: 236, column: 7, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15488, file: !1221, line: 236, column: 7)
!15515 = !DILocation(line: 236, column: 7, scope: !15488)
!15516 = !DILocation(line: 237, column: 12, scope: !15514)
!15517 = !DILocation(line: 237, column: 21, scope: !15514)
!15518 = !DILocation(line: 237, column: 5, scope: !15514)
!15519 = !DILocation(line: 239, column: 11, scope: !15488)
!15520 = !DILocation(line: 239, column: 13, scope: !15488)
!15521 = !DILocation(line: 239, column: 3, scope: !15488)
!15522 = !DILocation(line: 240, column: 1, scope: !15488)
!15523 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1221, file: !1221, line: 799, type: !1246, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15524 = !DILocalVariable(name: "arg", arg: 1, scope: !15523, file: !1221, line: 799, type: !88)
!15525 = !DILocation(line: 799, column: 29, scope: !15523)
!15526 = !DILocalVariable(name: "argsize", arg: 2, scope: !15523, file: !1221, line: 799, type: !55)
!15527 = !DILocation(line: 799, column: 41, scope: !15523)
!15528 = !DILocalVariable(name: "o", arg: 3, scope: !15523, file: !1221, line: 800, type: !1233)
!15529 = !DILocation(line: 800, column: 47, scope: !15523)
!15530 = !DILocation(line: 802, column: 30, scope: !15523)
!15531 = !DILocation(line: 802, column: 35, scope: !15523)
!15532 = !DILocation(line: 802, column: 50, scope: !15523)
!15533 = !DILocation(line: 802, column: 10, scope: !15523)
!15534 = !DILocation(line: 802, column: 3, scope: !15523)
!15535 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1221, file: !1221, line: 812, type: !1248, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15536 = !DILocalVariable(name: "arg", arg: 1, scope: !15535, file: !1221, line: 812, type: !88)
!15537 = !DILocation(line: 812, column: 33, scope: !15535)
!15538 = !DILocalVariable(name: "argsize", arg: 2, scope: !15535, file: !1221, line: 812, type: !55)
!15539 = !DILocation(line: 812, column: 45, scope: !15535)
!15540 = !DILocalVariable(name: "size", arg: 3, scope: !15535, file: !1221, line: 812, type: !360)
!15541 = !DILocation(line: 812, column: 62, scope: !15535)
!15542 = !DILocalVariable(name: "o", arg: 4, scope: !15535, file: !1221, line: 813, type: !1233)
!15543 = !DILocation(line: 813, column: 51, scope: !15535)
!15544 = !DILocalVariable(name: "p", scope: !15535, file: !1221, line: 815, type: !1233)
!15545 = !DILocation(line: 815, column: 33, scope: !15535)
!15546 = !DILocation(line: 815, column: 37, scope: !15535)
!15547 = !DILocation(line: 815, column: 41, scope: !15535)
!15548 = !DILocalVariable(name: "e", scope: !15535, file: !1221, line: 816, type: !7)
!15549 = !DILocation(line: 816, column: 7, scope: !15535)
!15550 = !DILocation(line: 816, column: 11, scope: !15535)
!15551 = !DILocalVariable(name: "flags", scope: !15535, file: !1221, line: 818, type: !7)
!15552 = !DILocation(line: 818, column: 7, scope: !15535)
!15553 = !DILocation(line: 818, column: 15, scope: !15535)
!15554 = !DILocation(line: 818, column: 18, scope: !15535)
!15555 = !DILocation(line: 818, column: 27, scope: !15535)
!15556 = !DILocation(line: 818, column: 24, scope: !15535)
!15557 = !DILocalVariable(name: "bufsize", scope: !15535, file: !1221, line: 819, type: !55)
!15558 = !DILocation(line: 819, column: 10, scope: !15535)
!15559 = !DILocation(line: 819, column: 52, scope: !15535)
!15560 = !DILocation(line: 819, column: 57, scope: !15535)
!15561 = !DILocation(line: 819, column: 66, scope: !15535)
!15562 = !DILocation(line: 819, column: 69, scope: !15535)
!15563 = !DILocation(line: 820, column: 46, scope: !15535)
!15564 = !DILocation(line: 820, column: 53, scope: !15535)
!15565 = !DILocation(line: 820, column: 56, scope: !15535)
!15566 = !DILocation(line: 821, column: 46, scope: !15535)
!15567 = !DILocation(line: 821, column: 49, scope: !15535)
!15568 = !DILocation(line: 822, column: 46, scope: !15535)
!15569 = !DILocation(line: 822, column: 49, scope: !15535)
!15570 = !DILocation(line: 819, column: 20, scope: !15535)
!15571 = !DILocation(line: 822, column: 62, scope: !15535)
!15572 = !DILocalVariable(name: "buf", scope: !15535, file: !1221, line: 823, type: !9)
!15573 = !DILocation(line: 823, column: 9, scope: !15535)
!15574 = !DILocation(line: 823, column: 27, scope: !15535)
!15575 = !DILocation(line: 823, column: 15, scope: !15535)
!15576 = !DILocation(line: 824, column: 29, scope: !15535)
!15577 = !DILocation(line: 824, column: 34, scope: !15535)
!15578 = !DILocation(line: 824, column: 43, scope: !15535)
!15579 = !DILocation(line: 824, column: 48, scope: !15535)
!15580 = !DILocation(line: 824, column: 57, scope: !15535)
!15581 = !DILocation(line: 824, column: 60, scope: !15535)
!15582 = !DILocation(line: 824, column: 67, scope: !15535)
!15583 = !DILocation(line: 825, column: 29, scope: !15535)
!15584 = !DILocation(line: 825, column: 32, scope: !15535)
!15585 = !DILocation(line: 826, column: 29, scope: !15535)
!15586 = !DILocation(line: 826, column: 32, scope: !15535)
!15587 = !DILocation(line: 826, column: 44, scope: !15535)
!15588 = !DILocation(line: 826, column: 47, scope: !15535)
!15589 = !DILocation(line: 824, column: 3, scope: !15535)
!15590 = !DILocation(line: 827, column: 11, scope: !15535)
!15591 = !DILocation(line: 827, column: 3, scope: !15535)
!15592 = !DILocation(line: 827, column: 9, scope: !15535)
!15593 = !DILocation(line: 828, column: 7, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15535, file: !1221, line: 828, column: 7)
!15595 = !DILocation(line: 828, column: 7, scope: !15535)
!15596 = !DILocation(line: 829, column: 13, scope: !15594)
!15597 = !DILocation(line: 829, column: 21, scope: !15594)
!15598 = !DILocation(line: 829, column: 6, scope: !15594)
!15599 = !DILocation(line: 829, column: 11, scope: !15594)
!15600 = !DILocation(line: 829, column: 5, scope: !15594)
!15601 = !DILocation(line: 830, column: 10, scope: !15535)
!15602 = !DILocation(line: 830, column: 3, scope: !15535)
!15603 = distinct !DISubprogram(name: "quotearg_free", scope: !1221, file: !1221, line: 848, type: !168, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15604 = !DILocalVariable(name: "sv", scope: !15603, file: !1221, line: 850, type: !1250)
!15605 = !DILocation(line: 850, column: 19, scope: !15603)
!15606 = !DILocation(line: 850, column: 24, scope: !15603)
!15607 = !DILocalVariable(name: "i", scope: !15603, file: !1221, line: 851, type: !7)
!15608 = !DILocation(line: 851, column: 7, scope: !15603)
!15609 = !DILocation(line: 852, column: 10, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15603, file: !1221, line: 852, column: 3)
!15611 = !DILocation(line: 852, column: 8, scope: !15610)
!15612 = !DILocation(line: 852, column: 15, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15610, file: !1221, line: 852, column: 3)
!15614 = !DILocation(line: 852, column: 19, scope: !15613)
!15615 = !DILocation(line: 852, column: 17, scope: !15613)
!15616 = !DILocation(line: 852, column: 3, scope: !15610)
!15617 = !DILocation(line: 853, column: 11, scope: !15613)
!15618 = !DILocation(line: 853, column: 14, scope: !15613)
!15619 = !DILocation(line: 853, column: 17, scope: !15613)
!15620 = !{!15621, !2287, i64 8}
!15621 = !{!"slotvec", !2448, i64 0, !2287, i64 8}
!15622 = !DILocation(line: 853, column: 5, scope: !15613)
!15623 = !DILocation(line: 852, column: 28, scope: !15613)
!15624 = !DILocation(line: 852, column: 3, scope: !15613)
!15625 = distinct !{!15625, !15616, !15626}
!15626 = !DILocation(line: 853, column: 20, scope: !15610)
!15627 = !DILocation(line: 854, column: 7, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15603, file: !1221, line: 854, column: 7)
!15629 = !DILocation(line: 854, column: 13, scope: !15628)
!15630 = !DILocation(line: 854, column: 17, scope: !15628)
!15631 = !DILocation(line: 854, column: 7, scope: !15603)
!15632 = !DILocation(line: 856, column: 13, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15628, file: !1221, line: 855, column: 5)
!15634 = !DILocation(line: 856, column: 19, scope: !15633)
!15635 = !DILocation(line: 856, column: 7, scope: !15633)
!15636 = !DILocation(line: 857, column: 21, scope: !15633)
!15637 = !{!15621, !2448, i64 0}
!15638 = !DILocation(line: 858, column: 20, scope: !15633)
!15639 = !DILocation(line: 859, column: 5, scope: !15633)
!15640 = !DILocation(line: 860, column: 7, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15603, file: !1221, line: 860, column: 7)
!15642 = !DILocation(line: 860, column: 10, scope: !15641)
!15643 = !DILocation(line: 860, column: 7, scope: !15603)
!15644 = !DILocation(line: 862, column: 13, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15641, file: !1221, line: 861, column: 5)
!15646 = !DILocation(line: 862, column: 7, scope: !15645)
!15647 = !DILocation(line: 863, column: 15, scope: !15645)
!15648 = !DILocation(line: 864, column: 5, scope: !15645)
!15649 = !DILocation(line: 865, column: 10, scope: !15603)
!15650 = !DILocation(line: 866, column: 1, scope: !15603)
!15651 = distinct !DISubprogram(name: "quotearg_n", scope: !1221, file: !1221, line: 931, type: !1255, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15652 = !DILocalVariable(name: "n", arg: 1, scope: !15651, file: !1221, line: 931, type: !7)
!15653 = !DILocation(line: 931, column: 17, scope: !15651)
!15654 = !DILocalVariable(name: "arg", arg: 2, scope: !15651, file: !1221, line: 931, type: !88)
!15655 = !DILocation(line: 931, column: 32, scope: !15651)
!15656 = !DILocation(line: 933, column: 30, scope: !15651)
!15657 = !DILocation(line: 933, column: 33, scope: !15651)
!15658 = !DILocation(line: 933, column: 10, scope: !15651)
!15659 = !DILocation(line: 933, column: 3, scope: !15651)
!15660 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1221, file: !1221, line: 877, type: !1311, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15661 = !DILocalVariable(name: "n", arg: 1, scope: !15660, file: !1221, line: 877, type: !7)
!15662 = !DILocation(line: 877, column: 25, scope: !15660)
!15663 = !DILocalVariable(name: "arg", arg: 2, scope: !15660, file: !1221, line: 877, type: !88)
!15664 = !DILocation(line: 877, column: 40, scope: !15660)
!15665 = !DILocalVariable(name: "argsize", arg: 3, scope: !15660, file: !1221, line: 877, type: !55)
!15666 = !DILocation(line: 877, column: 52, scope: !15660)
!15667 = !DILocalVariable(name: "options", arg: 4, scope: !15660, file: !1221, line: 878, type: !1233)
!15668 = !DILocation(line: 878, column: 51, scope: !15660)
!15669 = !DILocalVariable(name: "e", scope: !15660, file: !1221, line: 880, type: !7)
!15670 = !DILocation(line: 880, column: 7, scope: !15660)
!15671 = !DILocation(line: 880, column: 11, scope: !15660)
!15672 = !DILocalVariable(name: "sv", scope: !15660, file: !1221, line: 882, type: !1250)
!15673 = !DILocation(line: 882, column: 19, scope: !15660)
!15674 = !DILocation(line: 882, column: 24, scope: !15660)
!15675 = !DILocation(line: 884, column: 7, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15660, file: !1221, line: 884, column: 7)
!15677 = !DILocation(line: 884, column: 9, scope: !15676)
!15678 = !DILocation(line: 884, column: 7, scope: !15660)
!15679 = !DILocation(line: 885, column: 5, scope: !15676)
!15680 = !DILocation(line: 887, column: 7, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15660, file: !1221, line: 887, column: 7)
!15682 = !DILocation(line: 887, column: 17, scope: !15681)
!15683 = !DILocation(line: 887, column: 14, scope: !15681)
!15684 = !DILocation(line: 887, column: 7, scope: !15660)
!15685 = !DILocalVariable(name: "preallocated", scope: !15686, file: !1221, line: 889, type: !103)
!15686 = distinct !DILexicalBlock(scope: !15681, file: !1221, line: 888, column: 5)
!15687 = !DILocation(line: 889, column: 12, scope: !15686)
!15688 = !DILocation(line: 889, column: 28, scope: !15686)
!15689 = !DILocation(line: 889, column: 31, scope: !15686)
!15690 = !DILocalVariable(name: "nmax", scope: !15686, file: !1221, line: 890, type: !7)
!15691 = !DILocation(line: 890, column: 11, scope: !15686)
!15692 = !DILocation(line: 892, column: 11, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15686, file: !1221, line: 892, column: 11)
!15694 = !DILocation(line: 892, column: 18, scope: !15693)
!15695 = !DILocation(line: 892, column: 16, scope: !15693)
!15696 = !DILocation(line: 892, column: 11, scope: !15686)
!15697 = !DILocation(line: 893, column: 9, scope: !15693)
!15698 = !DILocation(line: 895, column: 32, scope: !15686)
!15699 = !DILocation(line: 895, column: 54, scope: !15686)
!15700 = !DILocation(line: 895, column: 59, scope: !15686)
!15701 = !DILocation(line: 895, column: 61, scope: !15686)
!15702 = !DILocation(line: 895, column: 58, scope: !15686)
!15703 = !DILocation(line: 895, column: 66, scope: !15686)
!15704 = !DILocation(line: 895, column: 22, scope: !15686)
!15705 = !DILocation(line: 895, column: 20, scope: !15686)
!15706 = !DILocation(line: 895, column: 15, scope: !15686)
!15707 = !DILocation(line: 896, column: 11, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15686, file: !1221, line: 896, column: 11)
!15709 = !DILocation(line: 896, column: 11, scope: !15686)
!15710 = !DILocation(line: 897, column: 10, scope: !15708)
!15711 = !DILocation(line: 897, column: 15, scope: !15708)
!15712 = !{i64 0, i64 8, !2447, i64 8, i64 8, !2286}
!15713 = !DILocation(line: 897, column: 9, scope: !15708)
!15714 = !DILocation(line: 898, column: 15, scope: !15686)
!15715 = !DILocation(line: 898, column: 20, scope: !15686)
!15716 = !DILocation(line: 898, column: 18, scope: !15686)
!15717 = !DILocation(line: 898, column: 7, scope: !15686)
!15718 = !DILocation(line: 898, column: 32, scope: !15686)
!15719 = !DILocation(line: 898, column: 34, scope: !15686)
!15720 = !DILocation(line: 898, column: 40, scope: !15686)
!15721 = !DILocation(line: 898, column: 38, scope: !15686)
!15722 = !DILocation(line: 898, column: 31, scope: !15686)
!15723 = !DILocation(line: 898, column: 48, scope: !15686)
!15724 = !DILocation(line: 899, column: 16, scope: !15686)
!15725 = !DILocation(line: 899, column: 18, scope: !15686)
!15726 = !DILocation(line: 899, column: 14, scope: !15686)
!15727 = !DILocation(line: 900, column: 5, scope: !15686)
!15728 = !DILocalVariable(name: "size", scope: !15729, file: !1221, line: 903, type: !55)
!15729 = distinct !DILexicalBlock(scope: !15660, file: !1221, line: 902, column: 3)
!15730 = !DILocation(line: 903, column: 12, scope: !15729)
!15731 = !DILocation(line: 903, column: 19, scope: !15729)
!15732 = !DILocation(line: 903, column: 22, scope: !15729)
!15733 = !DILocation(line: 903, column: 25, scope: !15729)
!15734 = !DILocalVariable(name: "val", scope: !15729, file: !1221, line: 904, type: !9)
!15735 = !DILocation(line: 904, column: 11, scope: !15729)
!15736 = !DILocation(line: 904, column: 17, scope: !15729)
!15737 = !DILocation(line: 904, column: 20, scope: !15729)
!15738 = !DILocation(line: 904, column: 23, scope: !15729)
!15739 = !DILocalVariable(name: "flags", scope: !15729, file: !1221, line: 906, type: !7)
!15740 = !DILocation(line: 906, column: 9, scope: !15729)
!15741 = !DILocation(line: 906, column: 17, scope: !15729)
!15742 = !DILocation(line: 906, column: 26, scope: !15729)
!15743 = !DILocation(line: 906, column: 32, scope: !15729)
!15744 = !DILocalVariable(name: "qsize", scope: !15729, file: !1221, line: 907, type: !55)
!15745 = !DILocation(line: 907, column: 12, scope: !15729)
!15746 = !DILocation(line: 907, column: 46, scope: !15729)
!15747 = !DILocation(line: 907, column: 51, scope: !15729)
!15748 = !DILocation(line: 907, column: 57, scope: !15729)
!15749 = !DILocation(line: 907, column: 62, scope: !15729)
!15750 = !DILocation(line: 908, column: 46, scope: !15729)
!15751 = !DILocation(line: 908, column: 55, scope: !15729)
!15752 = !DILocation(line: 908, column: 62, scope: !15729)
!15753 = !DILocation(line: 909, column: 46, scope: !15729)
!15754 = !DILocation(line: 909, column: 55, scope: !15729)
!15755 = !DILocation(line: 910, column: 46, scope: !15729)
!15756 = !DILocation(line: 910, column: 55, scope: !15729)
!15757 = !DILocation(line: 911, column: 46, scope: !15729)
!15758 = !DILocation(line: 911, column: 55, scope: !15729)
!15759 = !DILocation(line: 907, column: 20, scope: !15729)
!15760 = !DILocation(line: 913, column: 9, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15729, file: !1221, line: 913, column: 9)
!15762 = !DILocation(line: 913, column: 17, scope: !15761)
!15763 = !DILocation(line: 913, column: 14, scope: !15761)
!15764 = !DILocation(line: 913, column: 9, scope: !15729)
!15765 = !DILocation(line: 915, column: 29, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15761, file: !1221, line: 914, column: 7)
!15767 = !DILocation(line: 915, column: 35, scope: !15766)
!15768 = !DILocation(line: 915, column: 27, scope: !15766)
!15769 = !DILocation(line: 915, column: 9, scope: !15766)
!15770 = !DILocation(line: 915, column: 12, scope: !15766)
!15771 = !DILocation(line: 915, column: 15, scope: !15766)
!15772 = !DILocation(line: 915, column: 20, scope: !15766)
!15773 = !DILocation(line: 916, column: 13, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15766, file: !1221, line: 916, column: 13)
!15775 = !DILocation(line: 916, column: 17, scope: !15774)
!15776 = !DILocation(line: 916, column: 13, scope: !15766)
!15777 = !DILocation(line: 917, column: 17, scope: !15774)
!15778 = !DILocation(line: 917, column: 11, scope: !15774)
!15779 = !DILocation(line: 918, column: 39, scope: !15766)
!15780 = !DILocation(line: 918, column: 27, scope: !15766)
!15781 = !DILocation(line: 918, column: 25, scope: !15766)
!15782 = !DILocation(line: 918, column: 9, scope: !15766)
!15783 = !DILocation(line: 918, column: 12, scope: !15766)
!15784 = !DILocation(line: 918, column: 15, scope: !15766)
!15785 = !DILocation(line: 918, column: 19, scope: !15766)
!15786 = !DILocation(line: 919, column: 35, scope: !15766)
!15787 = !DILocation(line: 919, column: 40, scope: !15766)
!15788 = !DILocation(line: 919, column: 46, scope: !15766)
!15789 = !DILocation(line: 919, column: 51, scope: !15766)
!15790 = !DILocation(line: 919, column: 60, scope: !15766)
!15791 = !DILocation(line: 919, column: 69, scope: !15766)
!15792 = !DILocation(line: 920, column: 35, scope: !15766)
!15793 = !DILocation(line: 920, column: 42, scope: !15766)
!15794 = !DILocation(line: 920, column: 51, scope: !15766)
!15795 = !DILocation(line: 921, column: 35, scope: !15766)
!15796 = !DILocation(line: 921, column: 44, scope: !15766)
!15797 = !DILocation(line: 922, column: 35, scope: !15766)
!15798 = !DILocation(line: 922, column: 44, scope: !15766)
!15799 = !DILocation(line: 919, column: 9, scope: !15766)
!15800 = !DILocation(line: 923, column: 7, scope: !15766)
!15801 = !DILocation(line: 925, column: 13, scope: !15729)
!15802 = !DILocation(line: 925, column: 5, scope: !15729)
!15803 = !DILocation(line: 925, column: 11, scope: !15729)
!15804 = !DILocation(line: 926, column: 12, scope: !15729)
!15805 = !DILocation(line: 926, column: 5, scope: !15729)
!15806 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1221, file: !1221, line: 937, type: !1257, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15807 = !DILocalVariable(name: "n", arg: 1, scope: !15806, file: !1221, line: 937, type: !7)
!15808 = !DILocation(line: 937, column: 21, scope: !15806)
!15809 = !DILocalVariable(name: "arg", arg: 2, scope: !15806, file: !1221, line: 937, type: !88)
!15810 = !DILocation(line: 937, column: 36, scope: !15806)
!15811 = !DILocalVariable(name: "argsize", arg: 3, scope: !15806, file: !1221, line: 937, type: !55)
!15812 = !DILocation(line: 937, column: 48, scope: !15806)
!15813 = !DILocation(line: 939, column: 30, scope: !15806)
!15814 = !DILocation(line: 939, column: 33, scope: !15806)
!15815 = !DILocation(line: 939, column: 38, scope: !15806)
!15816 = !DILocation(line: 939, column: 10, scope: !15806)
!15817 = !DILocation(line: 939, column: 3, scope: !15806)
!15818 = distinct !DISubprogram(name: "quotearg", scope: !1221, file: !1221, line: 943, type: !1259, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15819 = !DILocalVariable(name: "arg", arg: 1, scope: !15818, file: !1221, line: 943, type: !88)
!15820 = !DILocation(line: 943, column: 23, scope: !15818)
!15821 = !DILocation(line: 945, column: 25, scope: !15818)
!15822 = !DILocation(line: 945, column: 10, scope: !15818)
!15823 = !DILocation(line: 945, column: 3, scope: !15818)
!15824 = distinct !DISubprogram(name: "quotearg_mem", scope: !1221, file: !1221, line: 949, type: !1261, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15825 = !DILocalVariable(name: "arg", arg: 1, scope: !15824, file: !1221, line: 949, type: !88)
!15826 = !DILocation(line: 949, column: 27, scope: !15824)
!15827 = !DILocalVariable(name: "argsize", arg: 2, scope: !15824, file: !1221, line: 949, type: !55)
!15828 = !DILocation(line: 949, column: 39, scope: !15824)
!15829 = !DILocation(line: 951, column: 29, scope: !15824)
!15830 = !DILocation(line: 951, column: 34, scope: !15824)
!15831 = !DILocation(line: 951, column: 10, scope: !15824)
!15832 = !DILocation(line: 951, column: 3, scope: !15824)
!15833 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1221, file: !1221, line: 955, type: !1263, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15834 = !DILocalVariable(name: "n", arg: 1, scope: !15833, file: !1221, line: 955, type: !7)
!15835 = !DILocation(line: 955, column: 23, scope: !15833)
!15836 = !DILocalVariable(name: "s", arg: 2, scope: !15833, file: !1221, line: 955, type: !1199)
!15837 = !DILocation(line: 955, column: 45, scope: !15833)
!15838 = !DILocalVariable(name: "arg", arg: 3, scope: !15833, file: !1221, line: 955, type: !88)
!15839 = !DILocation(line: 955, column: 60, scope: !15833)
!15840 = !DILocalVariable(name: "o", scope: !15833, file: !1221, line: 957, type: !1234)
!15841 = !DILocation(line: 957, column: 32, scope: !15833)
!15842 = !DILocation(line: 957, column: 64, scope: !15833)
!15843 = !DILocation(line: 957, column: 36, scope: !15833)
!15844 = !DILocation(line: 958, column: 30, scope: !15833)
!15845 = !DILocation(line: 958, column: 33, scope: !15833)
!15846 = !DILocation(line: 958, column: 10, scope: !15833)
!15847 = !DILocation(line: 958, column: 3, scope: !15833)
!15848 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1221, file: !1221, line: 193, type: !1313, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15849 = !DILocalVariable(name: "style", arg: 1, scope: !15848, file: !1221, line: 193, type: !1199)
!15850 = !DILocation(line: 193, column: 48, scope: !15848)
!15851 = !DILocalVariable(name: "o", scope: !15848, file: !1221, line: 195, type: !1220)
!15852 = !DILocation(line: 195, column: 26, scope: !15848)
!15853 = !DILocation(line: 196, column: 7, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15848, file: !1221, line: 196, column: 7)
!15855 = !DILocation(line: 196, column: 13, scope: !15854)
!15856 = !DILocation(line: 196, column: 7, scope: !15848)
!15857 = !DILocation(line: 197, column: 5, scope: !15854)
!15858 = !DILocation(line: 198, column: 13, scope: !15848)
!15859 = !DILocation(line: 198, column: 5, scope: !15848)
!15860 = !DILocation(line: 198, column: 11, scope: !15848)
!15861 = !DILocation(line: 199, column: 3, scope: !15848)
!15862 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1221, file: !1221, line: 962, type: !1265, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15863 = !DILocalVariable(name: "n", arg: 1, scope: !15862, file: !1221, line: 962, type: !7)
!15864 = !DILocation(line: 962, column: 27, scope: !15862)
!15865 = !DILocalVariable(name: "s", arg: 2, scope: !15862, file: !1221, line: 962, type: !1199)
!15866 = !DILocation(line: 962, column: 49, scope: !15862)
!15867 = !DILocalVariable(name: "arg", arg: 3, scope: !15862, file: !1221, line: 963, type: !88)
!15868 = !DILocation(line: 963, column: 35, scope: !15862)
!15869 = !DILocalVariable(name: "argsize", arg: 4, scope: !15862, file: !1221, line: 963, type: !55)
!15870 = !DILocation(line: 963, column: 47, scope: !15862)
!15871 = !DILocalVariable(name: "o", scope: !15862, file: !1221, line: 965, type: !1234)
!15872 = !DILocation(line: 965, column: 32, scope: !15862)
!15873 = !DILocation(line: 965, column: 64, scope: !15862)
!15874 = !DILocation(line: 965, column: 36, scope: !15862)
!15875 = !DILocation(line: 966, column: 30, scope: !15862)
!15876 = !DILocation(line: 966, column: 33, scope: !15862)
!15877 = !DILocation(line: 966, column: 38, scope: !15862)
!15878 = !DILocation(line: 966, column: 10, scope: !15862)
!15879 = !DILocation(line: 966, column: 3, scope: !15862)
!15880 = distinct !DISubprogram(name: "quotearg_style", scope: !1221, file: !1221, line: 970, type: !1267, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15881 = !DILocalVariable(name: "s", arg: 1, scope: !15880, file: !1221, line: 970, type: !1199)
!15882 = !DILocation(line: 970, column: 36, scope: !15880)
!15883 = !DILocalVariable(name: "arg", arg: 2, scope: !15880, file: !1221, line: 970, type: !88)
!15884 = !DILocation(line: 970, column: 51, scope: !15880)
!15885 = !DILocation(line: 972, column: 31, scope: !15880)
!15886 = !DILocation(line: 972, column: 34, scope: !15880)
!15887 = !DILocation(line: 972, column: 10, scope: !15880)
!15888 = !DILocation(line: 972, column: 3, scope: !15880)
!15889 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1221, file: !1221, line: 976, type: !1269, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15890 = !DILocalVariable(name: "s", arg: 1, scope: !15889, file: !1221, line: 976, type: !1199)
!15891 = !DILocation(line: 976, column: 40, scope: !15889)
!15892 = !DILocalVariable(name: "arg", arg: 2, scope: !15889, file: !1221, line: 976, type: !88)
!15893 = !DILocation(line: 976, column: 55, scope: !15889)
!15894 = !DILocalVariable(name: "argsize", arg: 3, scope: !15889, file: !1221, line: 976, type: !55)
!15895 = !DILocation(line: 976, column: 67, scope: !15889)
!15896 = !DILocation(line: 978, column: 35, scope: !15889)
!15897 = !DILocation(line: 978, column: 38, scope: !15889)
!15898 = !DILocation(line: 978, column: 43, scope: !15889)
!15899 = !DILocation(line: 978, column: 10, scope: !15889)
!15900 = !DILocation(line: 978, column: 3, scope: !15889)
!15901 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1221, file: !1221, line: 982, type: !1271, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15902 = !DILocalVariable(name: "arg", arg: 1, scope: !15901, file: !1221, line: 982, type: !88)
!15903 = !DILocation(line: 982, column: 32, scope: !15901)
!15904 = !DILocalVariable(name: "argsize", arg: 2, scope: !15901, file: !1221, line: 982, type: !55)
!15905 = !DILocation(line: 982, column: 44, scope: !15901)
!15906 = !DILocalVariable(name: "ch", arg: 3, scope: !15901, file: !1221, line: 982, type: !10)
!15907 = !DILocation(line: 982, column: 58, scope: !15901)
!15908 = !DILocalVariable(name: "options", scope: !15901, file: !1221, line: 984, type: !1220)
!15909 = !DILocation(line: 984, column: 26, scope: !15901)
!15910 = !DILocation(line: 985, column: 13, scope: !15901)
!15911 = !{i64 0, i64 4, !2438, i64 4, i64 4, !2273, i64 8, i64 32, !2438, i64 40, i64 8, !2286, i64 48, i64 8, !2286}
!15912 = !DILocation(line: 986, column: 31, scope: !15901)
!15913 = !DILocation(line: 986, column: 3, scope: !15901)
!15914 = !DILocation(line: 987, column: 33, scope: !15901)
!15915 = !DILocation(line: 987, column: 38, scope: !15901)
!15916 = !DILocation(line: 987, column: 10, scope: !15901)
!15917 = !DILocation(line: 987, column: 3, scope: !15901)
!15918 = distinct !DISubprogram(name: "quotearg_char", scope: !1221, file: !1221, line: 991, type: !1273, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15919 = !DILocalVariable(name: "arg", arg: 1, scope: !15918, file: !1221, line: 991, type: !88)
!15920 = !DILocation(line: 991, column: 28, scope: !15918)
!15921 = !DILocalVariable(name: "ch", arg: 2, scope: !15918, file: !1221, line: 991, type: !10)
!15922 = !DILocation(line: 991, column: 38, scope: !15918)
!15923 = !DILocation(line: 993, column: 29, scope: !15918)
!15924 = !DILocation(line: 993, column: 44, scope: !15918)
!15925 = !DILocation(line: 993, column: 10, scope: !15918)
!15926 = !DILocation(line: 993, column: 3, scope: !15918)
!15927 = distinct !DISubprogram(name: "quotearg_colon", scope: !1221, file: !1221, line: 997, type: !1259, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15928 = !DILocalVariable(name: "arg", arg: 1, scope: !15927, file: !1221, line: 997, type: !88)
!15929 = !DILocation(line: 997, column: 29, scope: !15927)
!15930 = !DILocation(line: 999, column: 25, scope: !15927)
!15931 = !DILocation(line: 999, column: 10, scope: !15927)
!15932 = !DILocation(line: 999, column: 3, scope: !15927)
!15933 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1221, file: !1221, line: 1003, type: !1261, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15934 = !DILocalVariable(name: "arg", arg: 1, scope: !15933, file: !1221, line: 1003, type: !88)
!15935 = !DILocation(line: 1003, column: 33, scope: !15933)
!15936 = !DILocalVariable(name: "argsize", arg: 2, scope: !15933, file: !1221, line: 1003, type: !55)
!15937 = !DILocation(line: 1003, column: 45, scope: !15933)
!15938 = !DILocation(line: 1005, column: 29, scope: !15933)
!15939 = !DILocation(line: 1005, column: 34, scope: !15933)
!15940 = !DILocation(line: 1005, column: 10, scope: !15933)
!15941 = !DILocation(line: 1005, column: 3, scope: !15933)
!15942 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1221, file: !1221, line: 1009, type: !1263, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15943 = !DILocalVariable(name: "n", arg: 1, scope: !15942, file: !1221, line: 1009, type: !7)
!15944 = !DILocation(line: 1009, column: 29, scope: !15942)
!15945 = !DILocalVariable(name: "s", arg: 2, scope: !15942, file: !1221, line: 1009, type: !1199)
!15946 = !DILocation(line: 1009, column: 51, scope: !15942)
!15947 = !DILocalVariable(name: "arg", arg: 3, scope: !15942, file: !1221, line: 1009, type: !88)
!15948 = !DILocation(line: 1009, column: 66, scope: !15942)
!15949 = !DILocalVariable(name: "options", scope: !15942, file: !1221, line: 1011, type: !1220)
!15950 = !DILocation(line: 1011, column: 26, scope: !15942)
!15951 = !DILocation(line: 1012, column: 41, scope: !15942)
!15952 = !DILocation(line: 1012, column: 13, scope: !15942)
!15953 = !DILocation(line: 1013, column: 3, scope: !15942)
!15954 = !DILocation(line: 1014, column: 30, scope: !15942)
!15955 = !DILocation(line: 1014, column: 33, scope: !15942)
!15956 = !DILocation(line: 1014, column: 10, scope: !15942)
!15957 = !DILocation(line: 1014, column: 3, scope: !15942)
!15958 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1221, file: !1221, line: 1018, type: !1275, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15959 = !DILocalVariable(name: "n", arg: 1, scope: !15958, file: !1221, line: 1018, type: !7)
!15960 = !DILocation(line: 1018, column: 24, scope: !15958)
!15961 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15958, file: !1221, line: 1018, type: !88)
!15962 = !DILocation(line: 1018, column: 39, scope: !15958)
!15963 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15958, file: !1221, line: 1019, type: !88)
!15964 = !DILocation(line: 1019, column: 32, scope: !15958)
!15965 = !DILocalVariable(name: "arg", arg: 4, scope: !15958, file: !1221, line: 1019, type: !88)
!15966 = !DILocation(line: 1019, column: 57, scope: !15958)
!15967 = !DILocation(line: 1021, column: 33, scope: !15958)
!15968 = !DILocation(line: 1021, column: 36, scope: !15958)
!15969 = !DILocation(line: 1021, column: 48, scope: !15958)
!15970 = !DILocation(line: 1021, column: 61, scope: !15958)
!15971 = !DILocation(line: 1021, column: 10, scope: !15958)
!15972 = !DILocation(line: 1021, column: 3, scope: !15958)
!15973 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1221, file: !1221, line: 1026, type: !1277, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15974 = !DILocalVariable(name: "n", arg: 1, scope: !15973, file: !1221, line: 1026, type: !7)
!15975 = !DILocation(line: 1026, column: 28, scope: !15973)
!15976 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15973, file: !1221, line: 1026, type: !88)
!15977 = !DILocation(line: 1026, column: 43, scope: !15973)
!15978 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15973, file: !1221, line: 1027, type: !88)
!15979 = !DILocation(line: 1027, column: 36, scope: !15973)
!15980 = !DILocalVariable(name: "arg", arg: 4, scope: !15973, file: !1221, line: 1028, type: !88)
!15981 = !DILocation(line: 1028, column: 36, scope: !15973)
!15982 = !DILocalVariable(name: "argsize", arg: 5, scope: !15973, file: !1221, line: 1028, type: !55)
!15983 = !DILocation(line: 1028, column: 48, scope: !15973)
!15984 = !DILocalVariable(name: "o", scope: !15973, file: !1221, line: 1030, type: !1220)
!15985 = !DILocation(line: 1030, column: 26, scope: !15973)
!15986 = !DILocation(line: 1030, column: 30, scope: !15973)
!15987 = !DILocation(line: 1031, column: 27, scope: !15973)
!15988 = !DILocation(line: 1031, column: 39, scope: !15973)
!15989 = !DILocation(line: 1031, column: 3, scope: !15973)
!15990 = !DILocation(line: 1032, column: 30, scope: !15973)
!15991 = !DILocation(line: 1032, column: 33, scope: !15973)
!15992 = !DILocation(line: 1032, column: 38, scope: !15973)
!15993 = !DILocation(line: 1032, column: 10, scope: !15973)
!15994 = !DILocation(line: 1032, column: 3, scope: !15973)
!15995 = distinct !DISubprogram(name: "quotearg_custom", scope: !1221, file: !1221, line: 1036, type: !1279, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!15996 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15995, file: !1221, line: 1036, type: !88)
!15997 = !DILocation(line: 1036, column: 30, scope: !15995)
!15998 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15995, file: !1221, line: 1036, type: !88)
!15999 = !DILocation(line: 1036, column: 54, scope: !15995)
!16000 = !DILocalVariable(name: "arg", arg: 3, scope: !15995, file: !1221, line: 1037, type: !88)
!16001 = !DILocation(line: 1037, column: 30, scope: !15995)
!16002 = !DILocation(line: 1039, column: 32, scope: !15995)
!16003 = !DILocation(line: 1039, column: 44, scope: !15995)
!16004 = !DILocation(line: 1039, column: 57, scope: !15995)
!16005 = !DILocation(line: 1039, column: 10, scope: !15995)
!16006 = !DILocation(line: 1039, column: 3, scope: !15995)
!16007 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1221, file: !1221, line: 1043, type: !1281, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!16008 = !DILocalVariable(name: "left_quote", arg: 1, scope: !16007, file: !1221, line: 1043, type: !88)
!16009 = !DILocation(line: 1043, column: 34, scope: !16007)
!16010 = !DILocalVariable(name: "right_quote", arg: 2, scope: !16007, file: !1221, line: 1043, type: !88)
!16011 = !DILocation(line: 1043, column: 58, scope: !16007)
!16012 = !DILocalVariable(name: "arg", arg: 3, scope: !16007, file: !1221, line: 1044, type: !88)
!16013 = !DILocation(line: 1044, column: 34, scope: !16007)
!16014 = !DILocalVariable(name: "argsize", arg: 4, scope: !16007, file: !1221, line: 1044, type: !55)
!16015 = !DILocation(line: 1044, column: 46, scope: !16007)
!16016 = !DILocation(line: 1046, column: 36, scope: !16007)
!16017 = !DILocation(line: 1046, column: 48, scope: !16007)
!16018 = !DILocation(line: 1046, column: 61, scope: !16007)
!16019 = !DILocation(line: 1047, column: 33, scope: !16007)
!16020 = !DILocation(line: 1046, column: 10, scope: !16007)
!16021 = !DILocation(line: 1046, column: 3, scope: !16007)
!16022 = distinct !DISubprogram(name: "quote_n_mem", scope: !1221, file: !1221, line: 1061, type: !1283, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!16023 = !DILocalVariable(name: "n", arg: 1, scope: !16022, file: !1221, line: 1061, type: !7)
!16024 = !DILocation(line: 1061, column: 18, scope: !16022)
!16025 = !DILocalVariable(name: "arg", arg: 2, scope: !16022, file: !1221, line: 1061, type: !88)
!16026 = !DILocation(line: 1061, column: 33, scope: !16022)
!16027 = !DILocalVariable(name: "argsize", arg: 3, scope: !16022, file: !1221, line: 1061, type: !55)
!16028 = !DILocation(line: 1061, column: 45, scope: !16022)
!16029 = !DILocation(line: 1063, column: 30, scope: !16022)
!16030 = !DILocation(line: 1063, column: 33, scope: !16022)
!16031 = !DILocation(line: 1063, column: 38, scope: !16022)
!16032 = !DILocation(line: 1063, column: 10, scope: !16022)
!16033 = !DILocation(line: 1063, column: 3, scope: !16022)
!16034 = distinct !DISubprogram(name: "quote_mem", scope: !1221, file: !1221, line: 1067, type: !1285, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!16035 = !DILocalVariable(name: "arg", arg: 1, scope: !16034, file: !1221, line: 1067, type: !88)
!16036 = !DILocation(line: 1067, column: 24, scope: !16034)
!16037 = !DILocalVariable(name: "argsize", arg: 2, scope: !16034, file: !1221, line: 1067, type: !55)
!16038 = !DILocation(line: 1067, column: 36, scope: !16034)
!16039 = !DILocation(line: 1069, column: 26, scope: !16034)
!16040 = !DILocation(line: 1069, column: 31, scope: !16034)
!16041 = !DILocation(line: 1069, column: 10, scope: !16034)
!16042 = !DILocation(line: 1069, column: 3, scope: !16034)
!16043 = distinct !DISubprogram(name: "quote_n", scope: !1221, file: !1221, line: 1073, type: !1287, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!16044 = !DILocalVariable(name: "n", arg: 1, scope: !16043, file: !1221, line: 1073, type: !7)
!16045 = !DILocation(line: 1073, column: 14, scope: !16043)
!16046 = !DILocalVariable(name: "arg", arg: 2, scope: !16043, file: !1221, line: 1073, type: !88)
!16047 = !DILocation(line: 1073, column: 29, scope: !16043)
!16048 = !DILocation(line: 1075, column: 23, scope: !16043)
!16049 = !DILocation(line: 1075, column: 26, scope: !16043)
!16050 = !DILocation(line: 1075, column: 10, scope: !16043)
!16051 = !DILocation(line: 1075, column: 3, scope: !16043)
!16052 = distinct !DISubprogram(name: "quote", scope: !1221, file: !1221, line: 1079, type: !1289, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1196, retainedNodes: !313)
!16053 = !DILocalVariable(name: "arg", arg: 1, scope: !16052, file: !1221, line: 1079, type: !88)
!16054 = !DILocation(line: 1079, column: 20, scope: !16052)
!16055 = !DILocation(line: 1081, column: 22, scope: !16052)
!16056 = !DILocation(line: 1081, column: 10, scope: !16052)
!16057 = !DILocation(line: 1081, column: 3, scope: !16052)
!16058 = distinct !DISubprogram(name: "randread_new", scope: !1626, file: !1626, line: 204, type: !1622, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16059 = !DILocalVariable(name: "name", arg: 1, scope: !16058, file: !1626, line: 204, type: !88)
!16060 = !DILocation(line: 204, column: 27, scope: !16058)
!16061 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !16058, file: !1626, line: 204, type: !55)
!16062 = !DILocation(line: 204, column: 40, scope: !16058)
!16063 = !DILocation(line: 206, column: 7, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16058, file: !1626, line: 206, column: 7)
!16065 = !DILocation(line: 206, column: 19, scope: !16064)
!16066 = !DILocation(line: 206, column: 7, scope: !16058)
!16067 = !DILocation(line: 207, column: 12, scope: !16064)
!16068 = !DILocation(line: 207, column: 5, scope: !16064)
!16069 = !DILocalVariable(name: "source", scope: !16070, file: !1626, line: 210, type: !1629)
!16070 = distinct !DILexicalBlock(scope: !16064, file: !1626, line: 209, column: 5)
!16071 = !DILocation(line: 210, column: 13, scope: !16070)
!16072 = !DILocalVariable(name: "s", scope: !16070, file: !1626, line: 211, type: !1624)
!16073 = !DILocation(line: 211, column: 31, scope: !16070)
!16074 = !DILocation(line: 213, column: 11, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16070, file: !1626, line: 213, column: 11)
!16076 = !DILocation(line: 213, column: 11, scope: !16070)
!16077 = !DILocation(line: 214, column: 38, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16075, file: !1626, line: 214, column: 13)
!16079 = !DILocation(line: 214, column: 25, scope: !16078)
!16080 = !DILocation(line: 214, column: 23, scope: !16078)
!16081 = !DILocation(line: 214, column: 13, scope: !16075)
!16082 = !DILocation(line: 215, column: 11, scope: !16078)
!16083 = !DILocation(line: 214, column: 49, scope: !16078)
!16084 = !DILocation(line: 217, column: 23, scope: !16070)
!16085 = !DILocation(line: 217, column: 31, scope: !16070)
!16086 = !DILocation(line: 217, column: 11, scope: !16070)
!16087 = !DILocation(line: 217, column: 9, scope: !16070)
!16088 = !DILocation(line: 219, column: 11, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16070, file: !1626, line: 219, column: 11)
!16090 = !DILocation(line: 219, column: 11, scope: !16070)
!16091 = !DILocation(line: 220, column: 18, scope: !16089)
!16092 = !DILocation(line: 220, column: 26, scope: !16089)
!16093 = !DILocation(line: 220, column: 29, scope: !16089)
!16094 = !DILocation(line: 220, column: 33, scope: !16089)
!16095 = !DILocation(line: 220, column: 44, scope: !16089)
!16096 = !DILocation(line: 220, column: 9, scope: !16089)
!16097 = !DILocation(line: 223, column: 11, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16089, file: !1626, line: 222, column: 9)
!16099 = !DILocation(line: 223, column: 14, scope: !16098)
!16100 = !DILocation(line: 223, column: 18, scope: !16098)
!16101 = !DILocation(line: 223, column: 24, scope: !16098)
!16102 = !DILocation(line: 223, column: 33, scope: !16098)
!16103 = !DILocation(line: 224, column: 22, scope: !16098)
!16104 = !DILocation(line: 224, column: 25, scope: !16098)
!16105 = !DILocation(line: 224, column: 29, scope: !16098)
!16106 = !DILocation(line: 224, column: 35, scope: !16098)
!16107 = !DILocation(line: 224, column: 41, scope: !16098)
!16108 = !DILocation(line: 225, column: 22, scope: !16098)
!16109 = !DILocation(line: 224, column: 11, scope: !16098)
!16110 = !DILocation(line: 226, column: 24, scope: !16098)
!16111 = !DILocation(line: 226, column: 27, scope: !16098)
!16112 = !DILocation(line: 226, column: 31, scope: !16098)
!16113 = !DILocation(line: 226, column: 37, scope: !16098)
!16114 = !DILocation(line: 226, column: 11, scope: !16098)
!16115 = !DILocation(line: 229, column: 14, scope: !16070)
!16116 = !DILocation(line: 229, column: 7, scope: !16070)
!16117 = !DILocation(line: 231, column: 1, scope: !16058)
!16118 = distinct !DISubprogram(name: "simple_new", scope: !1626, file: !1626, line: 137, type: !1708, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16119 = !DILocalVariable(name: "source", arg: 1, scope: !16118, file: !1626, line: 137, type: !1629)
!16120 = !DILocation(line: 137, column: 19, scope: !16118)
!16121 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !16118, file: !1626, line: 137, type: !339)
!16122 = !DILocation(line: 137, column: 39, scope: !16118)
!16123 = !DILocalVariable(name: "s", scope: !16118, file: !1626, line: 139, type: !1624)
!16124 = !DILocation(line: 139, column: 27, scope: !16118)
!16125 = !DILocation(line: 139, column: 31, scope: !16118)
!16126 = !DILocation(line: 140, column: 15, scope: !16118)
!16127 = !DILocation(line: 140, column: 3, scope: !16118)
!16128 = !DILocation(line: 140, column: 6, scope: !16118)
!16129 = !DILocation(line: 140, column: 13, scope: !16118)
!16130 = !{!16131, !2287, i64 0}
!16131 = !{!"randread_source", !2287, i64 0, !2287, i64 8, !2287, i64 16, !2275, i64 24}
!16132 = !DILocation(line: 141, column: 3, scope: !16118)
!16133 = !DILocation(line: 141, column: 6, scope: !16118)
!16134 = !DILocation(line: 141, column: 14, scope: !16118)
!16135 = !{!16131, !2287, i64 8}
!16136 = !DILocation(line: 142, column: 20, scope: !16118)
!16137 = !DILocation(line: 142, column: 3, scope: !16118)
!16138 = !DILocation(line: 142, column: 6, scope: !16118)
!16139 = !DILocation(line: 142, column: 18, scope: !16118)
!16140 = !{!16131, !2287, i64 16}
!16141 = !DILocation(line: 143, column: 10, scope: !16118)
!16142 = !DILocation(line: 143, column: 3, scope: !16118)
!16143 = distinct !DISubprogram(name: "get_nonce", scope: !1626, file: !1626, line: 151, type: !1710, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !16145, line: 8, size: 128, elements: !16146)
!16145 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!16146 = !{!16147, !16148}
!16147 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16144, file: !16145, line: 10, baseType: !410, size: 64)
!16148 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !16144, file: !16145, line: 11, baseType: !16149, size: 64, offset: 64)
!16149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!16150 = !DILocalVariable(name: "buffer", arg: 1, scope: !16143, file: !1626, line: 151, type: !53)
!16151 = !DILocation(line: 151, column: 18, scope: !16143)
!16152 = !DILocalVariable(name: "bufsize", arg: 2, scope: !16143, file: !1626, line: 151, type: !55)
!16153 = !DILocation(line: 151, column: 33, scope: !16143)
!16154 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !16143, file: !1626, line: 151, type: !55)
!16155 = !DILocation(line: 151, column: 49, scope: !16143)
!16156 = !DILocalVariable(name: "buf", scope: !16143, file: !1626, line: 153, type: !9)
!16157 = !DILocation(line: 153, column: 9, scope: !16143)
!16158 = !DILocation(line: 153, column: 15, scope: !16143)
!16159 = !DILocalVariable(name: "seeded", scope: !16143, file: !1626, line: 154, type: !1712)
!16160 = !DILocation(line: 154, column: 11, scope: !16143)
!16161 = !DILocalVariable(name: "fd", scope: !16143, file: !1626, line: 157, type: !7)
!16162 = !DILocation(line: 157, column: 7, scope: !16143)
!16163 = !DILocation(line: 157, column: 12, scope: !16143)
!16164 = !DILocation(line: 158, column: 12, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16143, file: !1626, line: 158, column: 7)
!16166 = !DILocation(line: 158, column: 9, scope: !16165)
!16167 = !DILocation(line: 158, column: 7, scope: !16143)
!16168 = !DILocation(line: 160, column: 22, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16165, file: !1626, line: 159, column: 5)
!16170 = !DILocation(line: 160, column: 26, scope: !16169)
!16171 = !DILocation(line: 160, column: 31, scope: !16169)
!16172 = !DILocation(line: 160, column: 16, scope: !16169)
!16173 = !DILocation(line: 160, column: 14, scope: !16169)
!16174 = !DILocation(line: 161, column: 11, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16169, file: !1626, line: 161, column: 11)
!16176 = !DILocation(line: 161, column: 18, scope: !16175)
!16177 = !DILocation(line: 161, column: 11, scope: !16169)
!16178 = !DILocation(line: 162, column: 16, scope: !16175)
!16179 = !DILocation(line: 162, column: 9, scope: !16175)
!16180 = !DILocation(line: 163, column: 14, scope: !16169)
!16181 = !DILocation(line: 163, column: 7, scope: !16169)
!16182 = !DILocation(line: 164, column: 5, scope: !16169)
!16183 = !DILocation(line: 177, column: 3, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16143, file: !1626, line: 177, column: 3)
!16185 = !DILocation(line: 177, column: 3, scope: !16143)
!16186 = !DILocalVariable(name: "v", scope: !16187, file: !1626, line: 177, type: !16144)
!16187 = distinct !DILexicalBlock(scope: !16184, file: !1626, line: 177, column: 3)
!16188 = !DILocation(line: 177, column: 3, scope: !16187)
!16189 = !DILocalVariable(name: "nbytes", scope: !16187, file: !1626, line: 177, type: !55)
!16190 = !DILocation(line: 178, column: 3, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16143, file: !1626, line: 178, column: 3)
!16192 = !DILocation(line: 178, column: 3, scope: !16143)
!16193 = !DILocalVariable(name: "v", scope: !16194, file: !1626, line: 178, type: !1713)
!16194 = distinct !DILexicalBlock(scope: !16191, file: !1626, line: 178, column: 3)
!16195 = !DILocation(line: 178, column: 3, scope: !16194)
!16196 = !DILocalVariable(name: "nbytes", scope: !16194, file: !1626, line: 178, type: !55)
!16197 = !DILocation(line: 179, column: 3, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16143, file: !1626, line: 179, column: 3)
!16199 = !DILocation(line: 179, column: 3, scope: !16143)
!16200 = !DILocalVariable(name: "v", scope: !16201, file: !1626, line: 179, type: !1713)
!16201 = distinct !DILexicalBlock(scope: !16198, file: !1626, line: 179, column: 3)
!16202 = !DILocation(line: 179, column: 3, scope: !16201)
!16203 = !DILocalVariable(name: "nbytes", scope: !16201, file: !1626, line: 179, type: !55)
!16204 = !DILocation(line: 180, column: 3, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16143, file: !1626, line: 180, column: 3)
!16206 = !DILocation(line: 180, column: 3, scope: !16143)
!16207 = !DILocalVariable(name: "v", scope: !16208, file: !1626, line: 180, type: !1714)
!16208 = distinct !DILexicalBlock(scope: !16205, file: !1626, line: 180, column: 3)
!16209 = !DILocation(line: 180, column: 3, scope: !16208)
!16210 = !DILocalVariable(name: "nbytes", scope: !16208, file: !1626, line: 180, type: !55)
!16211 = !DILocation(line: 181, column: 3, scope: !16212)
!16212 = distinct !DILexicalBlock(scope: !16143, file: !1626, line: 181, column: 3)
!16213 = !DILocation(line: 181, column: 3, scope: !16143)
!16214 = !DILocalVariable(name: "v", scope: !16215, file: !1626, line: 181, type: !1714)
!16215 = distinct !DILexicalBlock(scope: !16212, file: !1626, line: 181, column: 3)
!16216 = !DILocation(line: 181, column: 3, scope: !16215)
!16217 = !DILocalVariable(name: "nbytes", scope: !16215, file: !1626, line: 181, type: !55)
!16218 = !DILocation(line: 189, column: 1, scope: !16143)
!16219 = distinct !DISubprogram(name: "randread_error", scope: !1626, file: !1626, line: 124, type: !1665, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16220 = !DILocalVariable(name: "file_name", arg: 1, scope: !16219, file: !1626, line: 124, type: !339)
!16221 = !DILocation(line: 124, column: 29, scope: !16219)
!16222 = !DILocation(line: 126, column: 7, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16219, file: !1626, line: 126, column: 7)
!16224 = !DILocation(line: 126, column: 7, scope: !16219)
!16225 = !DILocation(line: 127, column: 12, scope: !16223)
!16226 = !DILocation(line: 127, column: 26, scope: !16223)
!16227 = !DILocation(line: 128, column: 12, scope: !16223)
!16228 = !DILocation(line: 128, column: 18, scope: !16223)
!16229 = !DILocation(line: 128, column: 25, scope: !16223)
!16230 = !DILocation(line: 128, column: 48, scope: !16223)
!16231 = !DILocation(line: 129, column: 19, scope: !16223)
!16232 = !DILocation(line: 129, column: 12, scope: !16223)
!16233 = !DILocation(line: 127, column: 5, scope: !16223)
!16234 = !DILocation(line: 130, column: 3, scope: !16219)
!16235 = distinct !DISubprogram(name: "randread_set_handler", scope: !1626, file: !1626, line: 242, type: !1700, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16236 = !DILocalVariable(name: "s", arg: 1, scope: !16235, file: !1626, line: 242, type: !1624)
!16237 = !DILocation(line: 242, column: 47, scope: !16235)
!16238 = !DILocalVariable(name: "handler", arg: 2, scope: !16235, file: !1626, line: 242, type: !1664)
!16239 = !DILocation(line: 242, column: 57, scope: !16235)
!16240 = !DILocation(line: 244, column: 16, scope: !16235)
!16241 = !DILocation(line: 244, column: 3, scope: !16235)
!16242 = !DILocation(line: 244, column: 6, scope: !16235)
!16243 = !DILocation(line: 244, column: 14, scope: !16235)
!16244 = !DILocation(line: 245, column: 1, scope: !16235)
!16245 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !1626, file: !1626, line: 248, type: !1702, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16246 = !DILocalVariable(name: "s", arg: 1, scope: !16245, file: !1626, line: 248, type: !1624)
!16247 = !DILocation(line: 248, column: 51, scope: !16245)
!16248 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !16245, file: !1626, line: 248, type: !339)
!16249 = !DILocation(line: 248, column: 66, scope: !16245)
!16250 = !DILocation(line: 250, column: 20, scope: !16245)
!16251 = !DILocation(line: 250, column: 3, scope: !16245)
!16252 = !DILocation(line: 250, column: 6, scope: !16245)
!16253 = !DILocation(line: 250, column: 18, scope: !16245)
!16254 = !DILocation(line: 251, column: 1, scope: !16245)
!16255 = distinct !DISubprogram(name: "randread", scope: !1626, file: !1626, line: 326, type: !1704, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16256 = !DILocalVariable(name: "s", arg: 1, scope: !16255, file: !1626, line: 326, type: !1624)
!16257 = !DILocation(line: 326, column: 35, scope: !16255)
!16258 = !DILocalVariable(name: "buf", arg: 2, scope: !16255, file: !1626, line: 326, type: !53)
!16259 = !DILocation(line: 326, column: 44, scope: !16255)
!16260 = !DILocalVariable(name: "size", arg: 3, scope: !16255, file: !1626, line: 326, type: !55)
!16261 = !DILocation(line: 326, column: 56, scope: !16255)
!16262 = !DILocation(line: 328, column: 7, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16255, file: !1626, line: 328, column: 7)
!16264 = !DILocation(line: 328, column: 10, scope: !16263)
!16265 = !DILocation(line: 328, column: 7, scope: !16255)
!16266 = !DILocation(line: 329, column: 17, scope: !16263)
!16267 = !DILocation(line: 329, column: 20, scope: !16263)
!16268 = !DILocation(line: 329, column: 25, scope: !16263)
!16269 = !DILocation(line: 329, column: 5, scope: !16263)
!16270 = !DILocation(line: 331, column: 17, scope: !16263)
!16271 = !DILocation(line: 331, column: 20, scope: !16263)
!16272 = !DILocation(line: 331, column: 24, scope: !16263)
!16273 = !DILocation(line: 331, column: 31, scope: !16263)
!16274 = !DILocation(line: 331, column: 36, scope: !16263)
!16275 = !DILocation(line: 331, column: 5, scope: !16263)
!16276 = !DILocation(line: 332, column: 1, scope: !16255)
!16277 = distinct !DISubprogram(name: "readsource", scope: !1626, file: !1626, line: 258, type: !1715, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16278 = !DILocalVariable(name: "s", arg: 1, scope: !16277, file: !1626, line: 258, type: !1624)
!16279 = !DILocation(line: 258, column: 37, scope: !16277)
!16280 = !DILocalVariable(name: "p", arg: 2, scope: !16277, file: !1626, line: 258, type: !1717)
!16281 = !DILocation(line: 258, column: 55, scope: !16277)
!16282 = !DILocalVariable(name: "size", arg: 3, scope: !16277, file: !1626, line: 258, type: !55)
!16283 = !DILocation(line: 258, column: 65, scope: !16277)
!16284 = !DILocation(line: 260, column: 3, scope: !16277)
!16285 = !DILocalVariable(name: "inbytes", scope: !16286, file: !1626, line: 262, type: !55)
!16286 = distinct !DILexicalBlock(scope: !16277, file: !1626, line: 261, column: 5)
!16287 = !DILocation(line: 262, column: 14, scope: !16286)
!16288 = !DILocation(line: 262, column: 24, scope: !16286)
!16289 = !DILocalVariable(name: "fread_errno", scope: !16286, file: !1626, line: 263, type: !7)
!16290 = !DILocation(line: 263, column: 11, scope: !16286)
!16291 = !DILocation(line: 263, column: 25, scope: !16286)
!16292 = !DILocation(line: 264, column: 12, scope: !16286)
!16293 = !DILocation(line: 264, column: 9, scope: !16286)
!16294 = !DILocation(line: 265, column: 15, scope: !16286)
!16295 = !DILocation(line: 265, column: 12, scope: !16286)
!16296 = !DILocation(line: 266, column: 11, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16286, file: !1626, line: 266, column: 11)
!16298 = !DILocation(line: 266, column: 16, scope: !16297)
!16299 = !DILocation(line: 266, column: 11, scope: !16286)
!16300 = !DILocation(line: 267, column: 9, scope: !16297)
!16301 = !DILocation(line: 268, column: 16, scope: !16286)
!16302 = !DILocation(line: 268, column: 37, scope: !16286)
!16303 = !DILocation(line: 268, column: 7, scope: !16286)
!16304 = !DILocation(line: 268, column: 13, scope: !16286)
!16305 = !DILocation(line: 269, column: 7, scope: !16286)
!16306 = !DILocation(line: 269, column: 10, scope: !16286)
!16307 = !DILocation(line: 269, column: 19, scope: !16286)
!16308 = !DILocation(line: 269, column: 22, scope: !16286)
!16309 = distinct !{!16309, !16284, !16310}
!16310 = !DILocation(line: 270, column: 5, scope: !16277)
!16311 = !DILocation(line: 271, column: 1, scope: !16277)
!16312 = distinct !DISubprogram(name: "readisaac", scope: !1626, file: !1626, line: 278, type: !1718, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16313 = !DILocalVariable(name: "isaac", arg: 1, scope: !16312, file: !1626, line: 278, type: !1720)
!16314 = !DILocation(line: 278, column: 26, scope: !16312)
!16315 = !DILocalVariable(name: "p", arg: 2, scope: !16312, file: !1626, line: 278, type: !53)
!16316 = !DILocation(line: 278, column: 39, scope: !16312)
!16317 = !DILocalVariable(name: "size", arg: 3, scope: !16312, file: !1626, line: 278, type: !55)
!16318 = !DILocation(line: 278, column: 49, scope: !16312)
!16319 = !DILocalVariable(name: "inbytes", scope: !16312, file: !1626, line: 280, type: !55)
!16320 = !DILocation(line: 280, column: 10, scope: !16312)
!16321 = !DILocation(line: 280, column: 20, scope: !16312)
!16322 = !DILocation(line: 280, column: 27, scope: !16312)
!16323 = !{!16324, !2448, i64 0}
!16324 = !{!"isaac", !2448, i64 0, !16325, i64 8, !2275, i64 2080}
!16325 = !{!"isaac_state", !2275, i64 0, !2448, i64 2048, !2448, i64 2056, !2448, i64 2064}
!16326 = !DILocation(line: 282, column: 3, scope: !16312)
!16327 = !DILocalVariable(name: "char_p", scope: !16328, file: !1626, line: 284, type: !9)
!16328 = distinct !DILexicalBlock(scope: !16312, file: !1626, line: 283, column: 5)
!16329 = !DILocation(line: 284, column: 13, scope: !16328)
!16330 = !DILocation(line: 284, column: 22, scope: !16328)
!16331 = !DILocation(line: 286, column: 11, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16328, file: !1626, line: 286, column: 11)
!16333 = !DILocation(line: 286, column: 19, scope: !16332)
!16334 = !DILocation(line: 286, column: 16, scope: !16332)
!16335 = !DILocation(line: 286, column: 11, scope: !16328)
!16336 = !DILocation(line: 288, column: 19, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16332, file: !1626, line: 287, column: 9)
!16338 = !DILocation(line: 288, column: 22, scope: !16337)
!16339 = !DILocation(line: 288, column: 29, scope: !16337)
!16340 = !DILocation(line: 288, column: 34, scope: !16337)
!16341 = !DILocation(line: 288, column: 36, scope: !16337)
!16342 = !DILocation(line: 288, column: 52, scope: !16337)
!16343 = !DILocation(line: 288, column: 50, scope: !16337)
!16344 = !DILocation(line: 288, column: 61, scope: !16337)
!16345 = !DILocation(line: 288, column: 11, scope: !16337)
!16346 = !DILocation(line: 289, column: 29, scope: !16337)
!16347 = !DILocation(line: 289, column: 39, scope: !16337)
!16348 = !DILocation(line: 289, column: 37, scope: !16337)
!16349 = !DILocation(line: 289, column: 11, scope: !16337)
!16350 = !DILocation(line: 289, column: 18, scope: !16337)
!16351 = !DILocation(line: 289, column: 27, scope: !16337)
!16352 = !DILocation(line: 290, column: 11, scope: !16337)
!16353 = !DILocation(line: 293, column: 15, scope: !16328)
!16354 = !DILocation(line: 293, column: 18, scope: !16328)
!16355 = !DILocation(line: 293, column: 25, scope: !16328)
!16356 = !DILocation(line: 293, column: 30, scope: !16328)
!16357 = !DILocation(line: 293, column: 32, scope: !16328)
!16358 = !DILocation(line: 293, column: 48, scope: !16328)
!16359 = !DILocation(line: 293, column: 46, scope: !16328)
!16360 = !DILocation(line: 293, column: 57, scope: !16328)
!16361 = !DILocation(line: 293, column: 7, scope: !16328)
!16362 = !DILocation(line: 294, column: 11, scope: !16328)
!16363 = !DILocation(line: 294, column: 20, scope: !16328)
!16364 = !DILocation(line: 294, column: 18, scope: !16328)
!16365 = !DILocation(line: 294, column: 9, scope: !16328)
!16366 = !DILocation(line: 295, column: 15, scope: !16328)
!16367 = !DILocation(line: 295, column: 12, scope: !16328)
!16368 = !DILocation(line: 299, column: 11, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16328, file: !1626, line: 299, column: 11)
!16370 = !DILocation(line: 299, column: 11, scope: !16328)
!16371 = !DILocalVariable(name: "wp", scope: !16372, file: !1626, line: 301, type: !1721)
!16372 = distinct !DILexicalBlock(scope: !16369, file: !1626, line: 300, column: 9)
!16373 = !DILocation(line: 301, column: 23, scope: !16372)
!16374 = !DILocation(line: 301, column: 28, scope: !16372)
!16375 = !DILocation(line: 302, column: 11, scope: !16372)
!16376 = !DILocation(line: 302, column: 33, scope: !16372)
!16377 = !DILocation(line: 302, column: 30, scope: !16372)
!16378 = !DILocation(line: 304, column: 30, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16372, file: !1626, line: 303, column: 13)
!16380 = !DILocation(line: 304, column: 37, scope: !16379)
!16381 = !DILocation(line: 304, column: 44, scope: !16379)
!16382 = !DILocation(line: 304, column: 15, scope: !16379)
!16383 = !DILocation(line: 305, column: 18, scope: !16379)
!16384 = !DILocation(line: 306, column: 20, scope: !16379)
!16385 = !DILocation(line: 307, column: 19, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16379, file: !1626, line: 307, column: 19)
!16387 = !DILocation(line: 307, column: 24, scope: !16386)
!16388 = !DILocation(line: 307, column: 19, scope: !16379)
!16389 = !DILocation(line: 309, column: 19, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16386, file: !1626, line: 308, column: 17)
!16391 = !DILocation(line: 309, column: 26, scope: !16390)
!16392 = !DILocation(line: 309, column: 35, scope: !16390)
!16393 = !DILocation(line: 310, column: 19, scope: !16390)
!16394 = distinct !{!16394, !16375, !16395}
!16395 = !DILocation(line: 312, column: 13, scope: !16372)
!16396 = !DILocation(line: 313, column: 15, scope: !16372)
!16397 = !DILocation(line: 313, column: 13, scope: !16372)
!16398 = !DILocation(line: 314, column: 9, scope: !16372)
!16399 = !DILocation(line: 316, column: 22, scope: !16328)
!16400 = !DILocation(line: 316, column: 29, scope: !16328)
!16401 = !DILocation(line: 316, column: 36, scope: !16328)
!16402 = !DILocation(line: 316, column: 43, scope: !16328)
!16403 = !DILocation(line: 316, column: 48, scope: !16328)
!16404 = !DILocation(line: 316, column: 7, scope: !16328)
!16405 = !DILocation(line: 317, column: 15, scope: !16328)
!16406 = distinct !{!16406, !16326, !16407}
!16407 = !DILocation(line: 318, column: 5, scope: !16312)
!16408 = !DILocation(line: 319, column: 1, scope: !16312)
!16409 = distinct !DISubprogram(name: "randread_free", scope: !1626, file: !1626, line: 341, type: !1706, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !313)
!16410 = !DILocalVariable(name: "s", arg: 1, scope: !16409, file: !1626, line: 341, type: !1624)
!16411 = !DILocation(line: 341, column: 40, scope: !16409)
!16412 = !DILocalVariable(name: "source", scope: !16409, file: !1626, line: 343, type: !1629)
!16413 = !DILocation(line: 343, column: 9, scope: !16409)
!16414 = !DILocation(line: 343, column: 18, scope: !16409)
!16415 = !DILocation(line: 343, column: 21, scope: !16409)
!16416 = !DILocation(line: 344, column: 19, scope: !16409)
!16417 = !DILocation(line: 344, column: 3, scope: !16409)
!16418 = !DILocation(line: 345, column: 9, scope: !16409)
!16419 = !DILocation(line: 345, column: 3, scope: !16409)
!16420 = !DILocation(line: 346, column: 11, scope: !16409)
!16421 = !DILocation(line: 346, column: 28, scope: !16409)
!16422 = !DILocation(line: 346, column: 20, scope: !16409)
!16423 = !DILocation(line: 346, column: 3, scope: !16409)
!16424 = distinct !DISubprogram(name: "isaac_refill", scope: !16425, file: !16425, line: 90, type: !1725, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1722, retainedNodes: !313)
!16425 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!16426 = !DILocalVariable(name: "s", arg: 1, scope: !16424, file: !16425, line: 90, type: !1727)
!16427 = !DILocation(line: 90, column: 35, scope: !16424)
!16428 = !DILocalVariable(name: "result", arg: 2, scope: !16424, file: !16425, line: 90, type: !1721)
!16429 = !DILocation(line: 90, column: 49, scope: !16424)
!16430 = !DILocalVariable(name: "a", scope: !16424, file: !16425, line: 93, type: !1685)
!16431 = !DILocation(line: 93, column: 14, scope: !16424)
!16432 = !DILocation(line: 93, column: 18, scope: !16424)
!16433 = !DILocation(line: 93, column: 21, scope: !16424)
!16434 = !{!16325, !2448, i64 2048}
!16435 = !DILocalVariable(name: "b", scope: !16424, file: !16425, line: 94, type: !1685)
!16436 = !DILocation(line: 94, column: 14, scope: !16424)
!16437 = !DILocation(line: 94, column: 18, scope: !16424)
!16438 = !DILocation(line: 94, column: 21, scope: !16424)
!16439 = !{!16325, !2448, i64 2056}
!16440 = !DILocation(line: 94, column: 28, scope: !16424)
!16441 = !DILocation(line: 94, column: 31, scope: !16424)
!16442 = !DILocation(line: 94, column: 26, scope: !16424)
!16443 = !{!16325, !2448, i64 2064}
!16444 = !DILocation(line: 94, column: 23, scope: !16424)
!16445 = !DILocalVariable(name: "m", scope: !16424, file: !16425, line: 97, type: !1721)
!16446 = !DILocation(line: 97, column: 15, scope: !16424)
!16447 = !DILocation(line: 97, column: 19, scope: !16424)
!16448 = !DILocation(line: 97, column: 22, scope: !16424)
!16449 = !DILocalVariable(name: "r", scope: !16424, file: !16425, line: 98, type: !1721)
!16450 = !DILocation(line: 98, column: 15, scope: !16424)
!16451 = !DILocation(line: 98, column: 19, scope: !16424)
!16452 = !DILocation(line: 116, column: 3, scope: !16424)
!16453 = !DILocalVariable(name: "x", scope: !16454, file: !16425, line: 118, type: !1685)
!16454 = distinct !DILexicalBlock(scope: !16455, file: !16425, line: 118, column: 7)
!16455 = distinct !DILexicalBlock(scope: !16424, file: !16425, line: 117, column: 5)
!16456 = !DILocation(line: 118, column: 7, scope: !16454)
!16457 = !DILocalVariable(name: "y", scope: !16454, file: !16425, line: 118, type: !1685)
!16458 = !DILocalVariable(name: "x", scope: !16459, file: !16425, line: 119, type: !1685)
!16459 = distinct !DILexicalBlock(scope: !16455, file: !16425, line: 119, column: 7)
!16460 = !DILocation(line: 119, column: 7, scope: !16459)
!16461 = !DILocalVariable(name: "y", scope: !16459, file: !16425, line: 119, type: !1685)
!16462 = !DILocalVariable(name: "x", scope: !16463, file: !16425, line: 120, type: !1685)
!16463 = distinct !DILexicalBlock(scope: !16455, file: !16425, line: 120, column: 7)
!16464 = !DILocation(line: 120, column: 7, scope: !16463)
!16465 = !DILocalVariable(name: "y", scope: !16463, file: !16425, line: 120, type: !1685)
!16466 = !DILocalVariable(name: "x", scope: !16467, file: !16425, line: 121, type: !1685)
!16467 = distinct !DILexicalBlock(scope: !16455, file: !16425, line: 121, column: 7)
!16468 = !DILocation(line: 121, column: 7, scope: !16467)
!16469 = !DILocalVariable(name: "y", scope: !16467, file: !16425, line: 121, type: !1685)
!16470 = !DILocation(line: 122, column: 9, scope: !16455)
!16471 = !DILocation(line: 123, column: 5, scope: !16455)
!16472 = !DILocation(line: 124, column: 13, scope: !16424)
!16473 = !DILocation(line: 124, column: 21, scope: !16424)
!16474 = !DILocation(line: 124, column: 24, scope: !16424)
!16475 = !DILocation(line: 124, column: 26, scope: !16424)
!16476 = !DILocation(line: 124, column: 19, scope: !16424)
!16477 = distinct !{!16477, !16452, !16478}
!16478 = !DILocation(line: 124, column: 32, scope: !16424)
!16479 = !DILocation(line: 126, column: 3, scope: !16424)
!16480 = !DILocalVariable(name: "x", scope: !16481, file: !16425, line: 128, type: !1685)
!16481 = distinct !DILexicalBlock(scope: !16482, file: !16425, line: 128, column: 7)
!16482 = distinct !DILexicalBlock(scope: !16424, file: !16425, line: 127, column: 5)
!16483 = !DILocation(line: 128, column: 7, scope: !16481)
!16484 = !DILocalVariable(name: "y", scope: !16481, file: !16425, line: 128, type: !1685)
!16485 = !DILocalVariable(name: "x", scope: !16486, file: !16425, line: 129, type: !1685)
!16486 = distinct !DILexicalBlock(scope: !16482, file: !16425, line: 129, column: 7)
!16487 = !DILocation(line: 129, column: 7, scope: !16486)
!16488 = !DILocalVariable(name: "y", scope: !16486, file: !16425, line: 129, type: !1685)
!16489 = !DILocalVariable(name: "x", scope: !16490, file: !16425, line: 130, type: !1685)
!16490 = distinct !DILexicalBlock(scope: !16482, file: !16425, line: 130, column: 7)
!16491 = !DILocation(line: 130, column: 7, scope: !16490)
!16492 = !DILocalVariable(name: "y", scope: !16490, file: !16425, line: 130, type: !1685)
!16493 = !DILocalVariable(name: "x", scope: !16494, file: !16425, line: 131, type: !1685)
!16494 = distinct !DILexicalBlock(scope: !16482, file: !16425, line: 131, column: 7)
!16495 = !DILocation(line: 131, column: 7, scope: !16494)
!16496 = !DILocalVariable(name: "y", scope: !16494, file: !16425, line: 131, type: !1685)
!16497 = !DILocation(line: 132, column: 9, scope: !16482)
!16498 = !DILocation(line: 133, column: 5, scope: !16482)
!16499 = !DILocation(line: 134, column: 13, scope: !16424)
!16500 = !DILocation(line: 134, column: 21, scope: !16424)
!16501 = !DILocation(line: 134, column: 24, scope: !16424)
!16502 = !DILocation(line: 134, column: 26, scope: !16424)
!16503 = !DILocation(line: 134, column: 19, scope: !16424)
!16504 = distinct !{!16504, !16479, !16505}
!16505 = !DILocation(line: 134, column: 39, scope: !16424)
!16506 = !DILocation(line: 136, column: 10, scope: !16424)
!16507 = !DILocation(line: 136, column: 3, scope: !16424)
!16508 = !DILocation(line: 136, column: 6, scope: !16424)
!16509 = !DILocation(line: 136, column: 8, scope: !16424)
!16510 = !DILocation(line: 137, column: 10, scope: !16424)
!16511 = !DILocation(line: 137, column: 3, scope: !16424)
!16512 = !DILocation(line: 137, column: 6, scope: !16424)
!16513 = !DILocation(line: 137, column: 8, scope: !16424)
!16514 = !DILocation(line: 138, column: 1, scope: !16424)
!16515 = distinct !DISubprogram(name: "ind", scope: !16425, file: !16425, line: 68, type: !1736, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !313)
!16516 = !DILocalVariable(name: "m", arg: 1, scope: !16515, file: !16425, line: 68, type: !1738)
!16517 = !DILocation(line: 68, column: 24, scope: !16515)
!16518 = !DILocalVariable(name: "x", arg: 2, scope: !16515, file: !16425, line: 68, type: !1685)
!16519 = !DILocation(line: 68, column: 38, scope: !16515)
!16520 = !DILocalVariable(name: "void_m", scope: !16521, file: !16425, line: 75, type: !339)
!16521 = distinct !DILexicalBlock(scope: !16522, file: !16425, line: 71, column: 5)
!16522 = distinct !DILexicalBlock(scope: !16515, file: !16425, line: 70, column: 7)
!16523 = !DILocation(line: 75, column: 19, scope: !16521)
!16524 = !DILocation(line: 75, column: 28, scope: !16521)
!16525 = !DILocalVariable(name: "base_p", scope: !16521, file: !16425, line: 76, type: !88)
!16526 = !DILocation(line: 76, column: 19, scope: !16521)
!16527 = !DILocation(line: 76, column: 28, scope: !16521)
!16528 = !DILocalVariable(name: "word_p", scope: !16521, file: !16425, line: 77, type: !339)
!16529 = !DILocation(line: 77, column: 19, scope: !16521)
!16530 = !DILocation(line: 77, column: 28, scope: !16521)
!16531 = !DILocation(line: 77, column: 38, scope: !16521)
!16532 = !DILocation(line: 77, column: 40, scope: !16521)
!16533 = !DILocation(line: 77, column: 35, scope: !16521)
!16534 = !DILocalVariable(name: "p", scope: !16521, file: !16425, line: 78, type: !1738)
!16535 = !DILocation(line: 78, column: 25, scope: !16521)
!16536 = !DILocation(line: 78, column: 29, scope: !16521)
!16537 = !DILocation(line: 79, column: 15, scope: !16521)
!16538 = !DILocation(line: 79, column: 14, scope: !16521)
!16539 = !DILocation(line: 79, column: 7, scope: !16521)
!16540 = distinct !DISubprogram(name: "just", scope: !16425, file: !16425, line: 60, type: !1740, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !313)
!16541 = !DILocalVariable(name: "a", arg: 1, scope: !16540, file: !16425, line: 60, type: !1685)
!16542 = !DILocation(line: 60, column: 18, scope: !16540)
!16543 = !DILocalVariable(name: "desired_bits", scope: !16540, file: !16425, line: 62, type: !1685)
!16544 = !DILocation(line: 62, column: 14, scope: !16540)
!16545 = !DILocation(line: 63, column: 10, scope: !16540)
!16546 = !DILocation(line: 63, column: 14, scope: !16540)
!16547 = !DILocation(line: 63, column: 12, scope: !16540)
!16548 = !DILocation(line: 63, column: 3, scope: !16540)
!16549 = distinct !DISubprogram(name: "isaac_seed", scope: !16425, file: !16425, line: 248, type: !1734, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1722, retainedNodes: !313)
!16550 = !DILocalVariable(name: "s", arg: 1, scope: !16549, file: !16425, line: 248, type: !1727)
!16551 = !DILocation(line: 248, column: 33, scope: !16549)
!16552 = !DILocalVariable(name: "a", scope: !16549, file: !16425, line: 250, type: !1685)
!16553 = !DILocation(line: 250, column: 14, scope: !16549)
!16554 = !DILocalVariable(name: "b", scope: !16549, file: !16425, line: 251, type: !1685)
!16555 = !DILocation(line: 251, column: 14, scope: !16549)
!16556 = !DILocalVariable(name: "c", scope: !16549, file: !16425, line: 252, type: !1685)
!16557 = !DILocation(line: 252, column: 14, scope: !16549)
!16558 = !DILocalVariable(name: "d", scope: !16549, file: !16425, line: 253, type: !1685)
!16559 = !DILocation(line: 253, column: 14, scope: !16549)
!16560 = !DILocalVariable(name: "e", scope: !16549, file: !16425, line: 254, type: !1685)
!16561 = !DILocation(line: 254, column: 14, scope: !16549)
!16562 = !DILocalVariable(name: "f", scope: !16549, file: !16425, line: 255, type: !1685)
!16563 = !DILocation(line: 255, column: 14, scope: !16549)
!16564 = !DILocalVariable(name: "g", scope: !16549, file: !16425, line: 256, type: !1685)
!16565 = !DILocation(line: 256, column: 14, scope: !16549)
!16566 = !DILocalVariable(name: "h", scope: !16549, file: !16425, line: 257, type: !1685)
!16567 = !DILocation(line: 257, column: 14, scope: !16549)
!16568 = !DILocalVariable(name: "i", scope: !16569, file: !16425, line: 269, type: !7)
!16569 = distinct !DILexicalBlock(scope: !16549, file: !16425, line: 269, column: 3)
!16570 = !DILocation(line: 269, column: 3, scope: !16569)
!16571 = !DILocation(line: 269, column: 3, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16569, file: !16425, line: 269, column: 3)
!16573 = !DILocation(line: 269, column: 3, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16572, file: !16425, line: 269, column: 3)
!16575 = !DILocation(line: 269, column: 3, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16574, file: !16425, line: 269, column: 3)
!16577 = !DILocation(line: 269, column: 3, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16576, file: !16425, line: 269, column: 3)
!16579 = distinct !{!16579, !16571, !16571}
!16580 = !DILocalVariable(name: "i", scope: !16581, file: !16425, line: 270, type: !7)
!16581 = distinct !DILexicalBlock(scope: !16549, file: !16425, line: 270, column: 3)
!16582 = !DILocation(line: 270, column: 3, scope: !16581)
!16583 = !DILocation(line: 270, column: 3, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16581, file: !16425, line: 270, column: 3)
!16585 = !DILocation(line: 270, column: 3, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16584, file: !16425, line: 270, column: 3)
!16587 = !DILocation(line: 270, column: 3, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16586, file: !16425, line: 270, column: 3)
!16589 = !DILocation(line: 270, column: 3, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16588, file: !16425, line: 270, column: 3)
!16591 = distinct !{!16591, !16583, !16583}
!16592 = !DILocation(line: 272, column: 17, scope: !16549)
!16593 = !DILocation(line: 272, column: 20, scope: !16549)
!16594 = !DILocation(line: 272, column: 22, scope: !16549)
!16595 = !DILocation(line: 272, column: 10, scope: !16549)
!16596 = !DILocation(line: 272, column: 13, scope: !16549)
!16597 = !DILocation(line: 272, column: 15, scope: !16549)
!16598 = !DILocation(line: 272, column: 3, scope: !16549)
!16599 = !DILocation(line: 272, column: 6, scope: !16549)
!16600 = !DILocation(line: 272, column: 8, scope: !16549)
!16601 = !DILocation(line: 273, column: 1, scope: !16549)
!16602 = distinct !DISubprogram(name: "readtokens0_init", scope: !16603, file: !16603, line: 30, type: !1745, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1742, retainedNodes: !313)
!16603 = !DIFile(filename: "lib/readtokens0.c", directory: "/home/mbarbar/software/coreutils-8.31")
!16604 = !DILocalVariable(name: "t", arg: 1, scope: !16602, file: !16603, line: 30, type: !1747)
!16605 = !DILocation(line: 30, column: 34, scope: !16602)
!16606 = !DILocation(line: 32, column: 3, scope: !16602)
!16607 = !DILocation(line: 32, column: 6, scope: !16602)
!16608 = !DILocation(line: 32, column: 12, scope: !16602)
!16609 = !DILocation(line: 33, column: 3, scope: !16602)
!16610 = !DILocation(line: 33, column: 6, scope: !16602)
!16611 = !DILocation(line: 33, column: 10, scope: !16602)
!16612 = !DILocation(line: 34, column: 3, scope: !16602)
!16613 = !DILocation(line: 34, column: 6, scope: !16602)
!16614 = !DILocation(line: 34, column: 14, scope: !16602)
!16615 = !{!3080, !2287, i64 16}
!16616 = !DILocation(line: 35, column: 3, scope: !16602)
!16617 = !DILocation(line: 36, column: 3, scope: !16602)
!16618 = !DILocation(line: 37, column: 3, scope: !16602)
!16619 = !DILocation(line: 38, column: 1, scope: !16602)
!16620 = distinct !DISubprogram(name: "readtokens0_free", scope: !16603, file: !16603, line: 41, type: !1745, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1742, retainedNodes: !313)
!16621 = !DILocalVariable(name: "t", arg: 1, scope: !16620, file: !16603, line: 41, type: !1747)
!16622 = !DILocation(line: 41, column: 34, scope: !16620)
!16623 = !DILocalVariable(name: "__o", scope: !16624, file: !16603, line: 43, type: !1790)
!16624 = distinct !DILexicalBlock(scope: !16620, file: !16603, line: 43, column: 3)
!16625 = !DILocation(line: 43, column: 3, scope: !16624)
!16626 = !DILocalVariable(name: "__obj", scope: !16624, file: !16603, line: 43, type: !53)
!16627 = !DILocation(line: 43, column: 3, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16624, file: !16603, line: 43, column: 3)
!16629 = !{!3081, !2287, i64 8}
!16630 = !{!3081, !2287, i64 32}
!16631 = !{!3081, !2287, i64 16}
!16632 = !{!3081, !2287, i64 24}
!16633 = !DILocalVariable(name: "__o", scope: !16634, file: !16603, line: 44, type: !1790)
!16634 = distinct !DILexicalBlock(scope: !16620, file: !16603, line: 44, column: 3)
!16635 = !DILocation(line: 44, column: 3, scope: !16634)
!16636 = !DILocalVariable(name: "__obj", scope: !16634, file: !16603, line: 44, type: !53)
!16637 = !DILocation(line: 44, column: 3, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16634, file: !16603, line: 44, column: 3)
!16639 = !DILocalVariable(name: "__o", scope: !16640, file: !16603, line: 45, type: !1790)
!16640 = distinct !DILexicalBlock(scope: !16620, file: !16603, line: 45, column: 3)
!16641 = !DILocation(line: 45, column: 3, scope: !16640)
!16642 = !DILocalVariable(name: "__obj", scope: !16640, file: !16603, line: 45, type: !53)
!16643 = !DILocation(line: 45, column: 3, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16640, file: !16603, line: 45, column: 3)
!16645 = !DILocation(line: 46, column: 1, scope: !16620)
!16646 = distinct !DISubprogram(name: "readtokens0", scope: !16603, file: !16603, line: 66, type: !1791, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1742, retainedNodes: !313)
!16647 = !DILocalVariable(name: "in", arg: 1, scope: !16646, file: !16603, line: 66, type: !1793)
!16648 = !DILocation(line: 66, column: 20, scope: !16646)
!16649 = !DILocalVariable(name: "t", arg: 2, scope: !16646, file: !16603, line: 66, type: !1747)
!16650 = !DILocation(line: 66, column: 39, scope: !16646)
!16651 = !DILocation(line: 69, column: 3, scope: !16646)
!16652 = !DILocalVariable(name: "c", scope: !16653, file: !16603, line: 71, type: !7)
!16653 = distinct !DILexicalBlock(scope: !16646, file: !16603, line: 70, column: 5)
!16654 = !DILocation(line: 71, column: 11, scope: !16653)
!16655 = !DILocation(line: 71, column: 22, scope: !16653)
!16656 = !DILocation(line: 71, column: 15, scope: !16653)
!16657 = !DILocation(line: 72, column: 11, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16653, file: !16603, line: 72, column: 11)
!16659 = !DILocation(line: 72, column: 13, scope: !16658)
!16660 = !DILocation(line: 72, column: 11, scope: !16653)
!16661 = !DILocalVariable(name: "len", scope: !16662, file: !16603, line: 74, type: !55)
!16662 = distinct !DILexicalBlock(scope: !16658, file: !16603, line: 73, column: 9)
!16663 = !DILocation(line: 74, column: 18, scope: !16662)
!16664 = !DILocalVariable(name: "__o", scope: !16665, file: !16603, line: 74, type: !1827)
!16665 = distinct !DILexicalBlock(scope: !16662, file: !16603, line: 74, column: 24)
!16666 = !DILocation(line: 74, column: 24, scope: !16665)
!16667 = !DILocation(line: 78, column: 15, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16662, file: !16603, line: 78, column: 15)
!16669 = !DILocation(line: 78, column: 15, scope: !16662)
!16670 = !DILocalVariable(name: "__o", scope: !16671, file: !16603, line: 80, type: !1790)
!16671 = distinct !DILexicalBlock(scope: !16672, file: !16603, line: 80, column: 15)
!16672 = distinct !DILexicalBlock(scope: !16668, file: !16603, line: 79, column: 13)
!16673 = !DILocation(line: 80, column: 15, scope: !16671)
!16674 = !DILocalVariable(name: "__o1", scope: !16675, file: !16603, line: 80, type: !1827)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !16603, line: 80, column: 15)
!16676 = distinct !DILexicalBlock(scope: !16671, file: !16603, line: 80, column: 15)
!16677 = !DILocation(line: 80, column: 15, scope: !16675)
!16678 = !DILocation(line: 80, column: 15, scope: !16676)
!16679 = !DILocation(line: 81, column: 27, scope: !16672)
!16680 = !DILocation(line: 81, column: 15, scope: !16672)
!16681 = !DILocation(line: 82, column: 13, scope: !16672)
!16682 = !DILocation(line: 84, column: 11, scope: !16662)
!16683 = !DILocalVariable(name: "__o", scope: !16684, file: !16603, line: 87, type: !1790)
!16684 = distinct !DILexicalBlock(scope: !16653, file: !16603, line: 87, column: 7)
!16685 = !DILocation(line: 87, column: 7, scope: !16684)
!16686 = !DILocalVariable(name: "__o1", scope: !16687, file: !16603, line: 87, type: !1827)
!16687 = distinct !DILexicalBlock(scope: !16688, file: !16603, line: 87, column: 7)
!16688 = distinct !DILexicalBlock(scope: !16684, file: !16603, line: 87, column: 7)
!16689 = !DILocation(line: 87, column: 7, scope: !16687)
!16690 = !DILocation(line: 87, column: 7, scope: !16688)
!16691 = !DILocation(line: 88, column: 11, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16653, file: !16603, line: 88, column: 11)
!16693 = !DILocation(line: 88, column: 13, scope: !16692)
!16694 = !DILocation(line: 88, column: 11, scope: !16653)
!16695 = !DILocation(line: 89, column: 21, scope: !16692)
!16696 = !DILocation(line: 89, column: 9, scope: !16692)
!16697 = distinct !{!16697, !16651, !16698}
!16698 = !DILocation(line: 90, column: 5, scope: !16646)
!16699 = !DILocalVariable(name: "__o", scope: !16700, file: !16603, line: 94, type: !1790)
!16700 = distinct !DILexicalBlock(scope: !16646, file: !16603, line: 94, column: 3)
!16701 = !DILocation(line: 94, column: 3, scope: !16700)
!16702 = !DILocalVariable(name: "__o1", scope: !16703, file: !16603, line: 94, type: !1827)
!16703 = distinct !DILexicalBlock(scope: !16704, file: !16603, line: 94, column: 3)
!16704 = distinct !DILexicalBlock(scope: !16700, file: !16603, line: 94, column: 3)
!16705 = !DILocation(line: 94, column: 3, scope: !16703)
!16706 = !DILocation(line: 94, column: 3, scope: !16704)
!16707 = !DILocalVariable(name: "__o1", scope: !16708, file: !16603, line: 94, type: !1790)
!16708 = distinct !DILexicalBlock(scope: !16700, file: !16603, line: 94, column: 3)
!16709 = !DILocation(line: 94, column: 3, scope: !16708)
!16710 = !DILocalVariable(name: "__p1", scope: !16708, file: !16603, line: 94, type: !53)
!16711 = !DILocalVariable(name: "__o1", scope: !16712, file: !16603, line: 96, type: !1790)
!16712 = distinct !DILexicalBlock(scope: !16646, file: !16603, line: 96, column: 12)
!16713 = !DILocation(line: 96, column: 12, scope: !16712)
!16714 = !DILocalVariable(name: "__value", scope: !16712, file: !16603, line: 96, type: !53)
!16715 = !DILocation(line: 96, column: 12, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16712, file: !16603, line: 96, column: 12)
!16717 = !{!3081, !2448, i64 48}
!16718 = !DILocation(line: 96, column: 12, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16712, file: !16603, line: 96, column: 12)
!16720 = !DILocation(line: 96, column: 12, scope: !16646)
!16721 = !DILocation(line: 96, column: 3, scope: !16646)
!16722 = !DILocation(line: 96, column: 6, scope: !16646)
!16723 = !DILocation(line: 96, column: 10, scope: !16646)
!16724 = !DILocalVariable(name: "__o1", scope: !16725, file: !16603, line: 97, type: !1790)
!16725 = distinct !DILexicalBlock(scope: !16646, file: !16603, line: 97, column: 16)
!16726 = !DILocation(line: 97, column: 16, scope: !16725)
!16727 = !DILocalVariable(name: "__value", scope: !16725, file: !16603, line: 97, type: !53)
!16728 = !DILocation(line: 97, column: 16, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16725, file: !16603, line: 97, column: 16)
!16730 = !DILocation(line: 97, column: 16, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16725, file: !16603, line: 97, column: 16)
!16732 = !DILocation(line: 97, column: 16, scope: !16646)
!16733 = !DILocation(line: 97, column: 3, scope: !16646)
!16734 = !DILocation(line: 97, column: 6, scope: !16646)
!16735 = !DILocation(line: 97, column: 14, scope: !16646)
!16736 = !DILocation(line: 98, column: 20, scope: !16646)
!16737 = !DILocation(line: 98, column: 12, scope: !16646)
!16738 = !DILocation(line: 98, column: 10, scope: !16646)
!16739 = !DILocation(line: 98, column: 3, scope: !16646)
!16740 = distinct !DISubprogram(name: "save_token", scope: !16603, file: !16603, line: 51, type: !1745, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1742, retainedNodes: !313)
!16741 = !DILocalVariable(name: "t", arg: 1, scope: !16740, file: !16603, line: 51, type: !1747)
!16742 = !DILocation(line: 51, column: 28, scope: !16740)
!16743 = !DILocalVariable(name: "len", scope: !16740, file: !16603, line: 54, type: !55)
!16744 = !DILocation(line: 54, column: 10, scope: !16740)
!16745 = !DILocalVariable(name: "__o", scope: !16746, file: !16603, line: 54, type: !1827)
!16746 = distinct !DILexicalBlock(scope: !16740, file: !16603, line: 54, column: 16)
!16747 = !DILocation(line: 54, column: 16, scope: !16746)
!16748 = !DILocation(line: 54, column: 49, scope: !16740)
!16749 = !DILocalVariable(name: "s", scope: !16740, file: !16603, line: 55, type: !88)
!16750 = !DILocation(line: 55, column: 15, scope: !16740)
!16751 = !DILocalVariable(name: "__o1", scope: !16752, file: !16603, line: 55, type: !1790)
!16752 = distinct !DILexicalBlock(scope: !16740, file: !16603, line: 55, column: 19)
!16753 = !DILocation(line: 55, column: 19, scope: !16752)
!16754 = !DILocalVariable(name: "__value", scope: !16752, file: !16603, line: 55, type: !53)
!16755 = !DILocation(line: 55, column: 19, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16752, file: !16603, line: 55, column: 19)
!16757 = !DILocation(line: 55, column: 19, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16752, file: !16603, line: 55, column: 19)
!16759 = !DILocalVariable(name: "__o", scope: !16760, file: !16603, line: 56, type: !1790)
!16760 = distinct !DILexicalBlock(scope: !16740, file: !16603, line: 56, column: 3)
!16761 = !DILocation(line: 56, column: 3, scope: !16760)
!16762 = !DILocalVariable(name: "__o1", scope: !16763, file: !16603, line: 56, type: !1827)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !16603, line: 56, column: 3)
!16764 = distinct !DILexicalBlock(scope: !16760, file: !16603, line: 56, column: 3)
!16765 = !DILocation(line: 56, column: 3, scope: !16763)
!16766 = !DILocation(line: 56, column: 3, scope: !16764)
!16767 = !DILocalVariable(name: "__o1", scope: !16768, file: !16603, line: 56, type: !1790)
!16768 = distinct !DILexicalBlock(scope: !16760, file: !16603, line: 56, column: 3)
!16769 = !DILocation(line: 56, column: 3, scope: !16768)
!16770 = !DILocalVariable(name: "__p1", scope: !16768, file: !16603, line: 56, type: !53)
!16771 = !DILocalVariable(name: "__o", scope: !16772, file: !16603, line: 57, type: !1790)
!16772 = distinct !DILexicalBlock(scope: !16740, file: !16603, line: 57, column: 3)
!16773 = !DILocation(line: 57, column: 3, scope: !16772)
!16774 = !DILocalVariable(name: "__len", scope: !16772, file: !16603, line: 57, type: !55)
!16775 = !DILocalVariable(name: "__o1", scope: !16776, file: !16603, line: 57, type: !1827)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !16603, line: 57, column: 3)
!16777 = distinct !DILexicalBlock(scope: !16772, file: !16603, line: 57, column: 3)
!16778 = !DILocation(line: 57, column: 3, scope: !16776)
!16779 = !DILocation(line: 57, column: 3, scope: !16777)
!16780 = !DILocation(line: 58, column: 3, scope: !16740)
!16781 = !DILocation(line: 58, column: 6, scope: !16740)
!16782 = !DILocation(line: 58, column: 11, scope: !16740)
!16783 = !DILocation(line: 59, column: 1, scope: !16740)
!16784 = distinct !DISubprogram(name: "mkstemp_safer", scope: !16785, file: !16785, line: 31, type: !1832, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1829, retainedNodes: !313)
!16785 = !DIFile(filename: "lib/mkstemp-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!16786 = !DILocalVariable(name: "templ", arg: 1, scope: !16784, file: !16785, line: 31, type: !9)
!16787 = !DILocation(line: 31, column: 22, scope: !16784)
!16788 = !DILocation(line: 33, column: 29, scope: !16784)
!16789 = !DILocation(line: 33, column: 20, scope: !16784)
!16790 = !DILocation(line: 33, column: 10, scope: !16784)
!16791 = !DILocation(line: 33, column: 3, scope: !16784)
!16792 = distinct !DISubprogram(name: "mkostemp_safer", scope: !16785, file: !16785, line: 40, type: !1834, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1829, retainedNodes: !313)
!16793 = !DILocalVariable(name: "templ", arg: 1, scope: !16792, file: !16785, line: 40, type: !9)
!16794 = !DILocation(line: 40, column: 23, scope: !16792)
!16795 = !DILocalVariable(name: "flags", arg: 2, scope: !16792, file: !16785, line: 40, type: !7)
!16796 = !DILocation(line: 40, column: 34, scope: !16792)
!16797 = !DILocation(line: 42, column: 35, scope: !16792)
!16798 = !DILocation(line: 42, column: 42, scope: !16792)
!16799 = !DILocation(line: 42, column: 25, scope: !16792)
!16800 = !DILocation(line: 42, column: 50, scope: !16792)
!16801 = !DILocation(line: 42, column: 10, scope: !16792)
!16802 = !DILocation(line: 42, column: 3, scope: !16792)
!16803 = distinct !DISubprogram(name: "strnumcmp", scope: !16804, file: !16804, line: 27, type: !1839, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1836, retainedNodes: !313)
!16804 = !DIFile(filename: "lib/strnumcmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!16805 = !DILocalVariable(name: "a", arg: 1, scope: !16803, file: !16804, line: 27, type: !88)
!16806 = !DILocation(line: 27, column: 24, scope: !16803)
!16807 = !DILocalVariable(name: "b", arg: 2, scope: !16803, file: !16804, line: 27, type: !88)
!16808 = !DILocation(line: 27, column: 39, scope: !16803)
!16809 = !DILocalVariable(name: "decimal_point", arg: 3, scope: !16803, file: !16804, line: 28, type: !7)
!16810 = !DILocation(line: 28, column: 16, scope: !16803)
!16811 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !16803, file: !16804, line: 28, type: !7)
!16812 = !DILocation(line: 28, column: 35, scope: !16803)
!16813 = !DILocation(line: 30, column: 22, scope: !16803)
!16814 = !DILocation(line: 30, column: 25, scope: !16803)
!16815 = !DILocation(line: 30, column: 28, scope: !16803)
!16816 = !DILocation(line: 30, column: 43, scope: !16803)
!16817 = !DILocation(line: 30, column: 10, scope: !16803)
!16818 = !DILocation(line: 30, column: 3, scope: !16803)
!16819 = distinct !DISubprogram(name: "numcompare", scope: !16820, file: !16820, line: 114, type: !1839, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1836, retainedNodes: !313)
!16820 = !DIFile(filename: "./lib/strnumcmp-in.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16821 = !DILocalVariable(name: "a", arg: 1, scope: !16819, file: !16820, line: 114, type: !88)
!16822 = !DILocation(line: 114, column: 25, scope: !16819)
!16823 = !DILocalVariable(name: "b", arg: 2, scope: !16819, file: !16820, line: 114, type: !88)
!16824 = !DILocation(line: 114, column: 40, scope: !16819)
!16825 = !DILocalVariable(name: "decimal_point", arg: 3, scope: !16819, file: !16820, line: 115, type: !7)
!16826 = !DILocation(line: 115, column: 17, scope: !16819)
!16827 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !16819, file: !16820, line: 115, type: !7)
!16828 = !DILocation(line: 115, column: 36, scope: !16819)
!16829 = !DILocalVariable(name: "tmpa", scope: !16819, file: !16820, line: 117, type: !321)
!16830 = !DILocation(line: 117, column: 17, scope: !16819)
!16831 = !DILocation(line: 117, column: 25, scope: !16819)
!16832 = !DILocation(line: 117, column: 24, scope: !16819)
!16833 = !DILocalVariable(name: "tmpb", scope: !16819, file: !16820, line: 118, type: !321)
!16834 = !DILocation(line: 118, column: 17, scope: !16819)
!16835 = !DILocation(line: 118, column: 25, scope: !16819)
!16836 = !DILocation(line: 118, column: 24, scope: !16819)
!16837 = !DILocalVariable(name: "tmp", scope: !16819, file: !16820, line: 119, type: !7)
!16838 = !DILocation(line: 119, column: 7, scope: !16819)
!16839 = !DILocalVariable(name: "log_a", scope: !16819, file: !16820, line: 120, type: !55)
!16840 = !DILocation(line: 120, column: 10, scope: !16819)
!16841 = !DILocalVariable(name: "log_b", scope: !16819, file: !16820, line: 121, type: !55)
!16842 = !DILocation(line: 121, column: 10, scope: !16819)
!16843 = !DILocation(line: 123, column: 7, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16819, file: !16820, line: 123, column: 7)
!16845 = !DILocation(line: 123, column: 12, scope: !16844)
!16846 = !DILocation(line: 123, column: 7, scope: !16819)
!16847 = !DILocation(line: 125, column: 7, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16844, file: !16820, line: 124, column: 5)
!16849 = !DILocation(line: 126, column: 17, scope: !16848)
!16850 = !DILocation(line: 126, column: 16, scope: !16848)
!16851 = !DILocation(line: 126, column: 14, scope: !16848)
!16852 = !DILocation(line: 126, column: 9, scope: !16848)
!16853 = !DILocation(line: 127, column: 14, scope: !16848)
!16854 = !DILocation(line: 127, column: 19, scope: !16848)
!16855 = !DILocation(line: 127, column: 35, scope: !16848)
!16856 = !DILocation(line: 127, column: 38, scope: !16848)
!16857 = !DILocation(line: 127, column: 46, scope: !16848)
!16858 = !DILocation(line: 127, column: 43, scope: !16848)
!16859 = distinct !{!16859, !16847, !16860}
!16860 = !DILocation(line: 127, column: 59, scope: !16848)
!16861 = !DILocation(line: 128, column: 11, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 128, column: 11)
!16863 = !DILocation(line: 128, column: 16, scope: !16862)
!16864 = !DILocation(line: 128, column: 11, scope: !16848)
!16865 = !DILocation(line: 130, column: 15, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16867, file: !16820, line: 130, column: 15)
!16867 = distinct !DILexicalBlock(scope: !16862, file: !16820, line: 129, column: 9)
!16868 = !DILocation(line: 130, column: 23, scope: !16866)
!16869 = !DILocation(line: 130, column: 20, scope: !16866)
!16870 = !DILocation(line: 130, column: 15, scope: !16867)
!16871 = !DILocation(line: 131, column: 13, scope: !16866)
!16872 = !DILocation(line: 132, column: 23, scope: !16866)
!16873 = !DILocation(line: 132, column: 22, scope: !16866)
!16874 = !DILocation(line: 132, column: 20, scope: !16866)
!16875 = !DILocation(line: 132, column: 15, scope: !16866)
!16876 = !DILocation(line: 133, column: 20, scope: !16866)
!16877 = !DILocation(line: 133, column: 25, scope: !16866)
!16878 = distinct !{!16878, !16871, !16879}
!16879 = !DILocation(line: 133, column: 40, scope: !16866)
!16880 = !DILocation(line: 134, column: 15, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16867, file: !16820, line: 134, column: 15)
!16882 = !DILocation(line: 134, column: 15, scope: !16867)
!16883 = !DILocation(line: 135, column: 13, scope: !16881)
!16884 = !DILocation(line: 136, column: 11, scope: !16867)
!16885 = !DILocation(line: 136, column: 18, scope: !16867)
!16886 = !DILocation(line: 136, column: 23, scope: !16867)
!16887 = !DILocation(line: 136, column: 39, scope: !16867)
!16888 = !DILocation(line: 136, column: 42, scope: !16867)
!16889 = !DILocation(line: 136, column: 50, scope: !16867)
!16890 = !DILocation(line: 136, column: 47, scope: !16867)
!16891 = !DILocation(line: 137, column: 21, scope: !16867)
!16892 = !DILocation(line: 137, column: 20, scope: !16867)
!16893 = !DILocation(line: 137, column: 18, scope: !16867)
!16894 = distinct !{!16894, !16884, !16895}
!16895 = !DILocation(line: 137, column: 23, scope: !16867)
!16896 = !DILocation(line: 138, column: 15, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16867, file: !16820, line: 138, column: 15)
!16898 = !DILocation(line: 138, column: 23, scope: !16897)
!16899 = !DILocation(line: 138, column: 20, scope: !16897)
!16900 = !DILocation(line: 138, column: 15, scope: !16867)
!16901 = !DILocation(line: 139, column: 13, scope: !16897)
!16902 = !DILocation(line: 140, column: 23, scope: !16897)
!16903 = !DILocation(line: 140, column: 22, scope: !16897)
!16904 = !DILocation(line: 140, column: 20, scope: !16897)
!16905 = !DILocation(line: 140, column: 15, scope: !16897)
!16906 = !DILocation(line: 141, column: 20, scope: !16897)
!16907 = !DILocation(line: 141, column: 25, scope: !16897)
!16908 = distinct !{!16908, !16901, !16909}
!16909 = !DILocation(line: 141, column: 40, scope: !16897)
!16910 = !DILocation(line: 142, column: 20, scope: !16867)
!16911 = !DILocation(line: 142, column: 18, scope: !16867)
!16912 = !DILocation(line: 142, column: 11, scope: !16867)
!16913 = !DILocation(line: 144, column: 7, scope: !16848)
!16914 = !DILocation(line: 145, column: 17, scope: !16848)
!16915 = !DILocation(line: 145, column: 16, scope: !16848)
!16916 = !DILocation(line: 145, column: 14, scope: !16848)
!16917 = !DILocation(line: 145, column: 9, scope: !16848)
!16918 = !DILocation(line: 146, column: 14, scope: !16848)
!16919 = !DILocation(line: 146, column: 19, scope: !16848)
!16920 = !DILocation(line: 146, column: 35, scope: !16848)
!16921 = !DILocation(line: 146, column: 38, scope: !16848)
!16922 = !DILocation(line: 146, column: 46, scope: !16848)
!16923 = !DILocation(line: 146, column: 43, scope: !16848)
!16924 = distinct !{!16924, !16913, !16925}
!16925 = !DILocation(line: 146, column: 59, scope: !16848)
!16926 = !DILocation(line: 148, column: 7, scope: !16848)
!16927 = !DILocation(line: 148, column: 14, scope: !16848)
!16928 = !DILocation(line: 148, column: 22, scope: !16848)
!16929 = !DILocation(line: 148, column: 19, scope: !16848)
!16930 = !DILocation(line: 148, column: 27, scope: !16848)
!16931 = !DILocation(line: 148, column: 30, scope: !16848)
!16932 = !DILocation(line: 0, scope: !16848)
!16933 = !DILocation(line: 150, column: 11, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 149, column: 9)
!16935 = !DILocation(line: 151, column: 21, scope: !16934)
!16936 = !DILocation(line: 151, column: 20, scope: !16934)
!16937 = !DILocation(line: 151, column: 18, scope: !16934)
!16938 = !DILocation(line: 151, column: 13, scope: !16934)
!16939 = !DILocation(line: 152, column: 18, scope: !16934)
!16940 = !DILocation(line: 152, column: 26, scope: !16934)
!16941 = !DILocation(line: 152, column: 23, scope: !16934)
!16942 = distinct !{!16942, !16933, !16943}
!16943 = !DILocation(line: 152, column: 39, scope: !16934)
!16944 = !DILocation(line: 153, column: 11, scope: !16934)
!16945 = !DILocation(line: 154, column: 21, scope: !16934)
!16946 = !DILocation(line: 154, column: 20, scope: !16934)
!16947 = !DILocation(line: 154, column: 18, scope: !16934)
!16948 = !DILocation(line: 154, column: 13, scope: !16934)
!16949 = !DILocation(line: 155, column: 18, scope: !16934)
!16950 = !DILocation(line: 155, column: 26, scope: !16934)
!16951 = !DILocation(line: 155, column: 23, scope: !16934)
!16952 = distinct !{!16952, !16944, !16953}
!16953 = !DILocation(line: 155, column: 39, scope: !16934)
!16954 = distinct !{!16954, !16926, !16955}
!16955 = !DILocation(line: 156, column: 9, scope: !16848)
!16956 = !DILocation(line: 158, column: 12, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 158, column: 11)
!16958 = !DILocation(line: 158, column: 20, scope: !16957)
!16959 = !DILocation(line: 158, column: 17, scope: !16957)
!16960 = !DILocation(line: 158, column: 34, scope: !16957)
!16961 = !DILocation(line: 158, column: 38, scope: !16957)
!16962 = !DILocation(line: 159, column: 11, scope: !16957)
!16963 = !DILocation(line: 159, column: 15, scope: !16957)
!16964 = !DILocation(line: 159, column: 23, scope: !16957)
!16965 = !DILocation(line: 159, column: 20, scope: !16957)
!16966 = !DILocation(line: 159, column: 37, scope: !16957)
!16967 = !DILocation(line: 159, column: 41, scope: !16957)
!16968 = !DILocation(line: 158, column: 11, scope: !16848)
!16969 = !DILocation(line: 160, column: 29, scope: !16957)
!16970 = !DILocation(line: 160, column: 32, scope: !16957)
!16971 = !DILocation(line: 160, column: 35, scope: !16957)
!16972 = !DILocation(line: 160, column: 16, scope: !16957)
!16973 = !DILocation(line: 160, column: 9, scope: !16957)
!16974 = !DILocation(line: 162, column: 13, scope: !16848)
!16975 = !DILocation(line: 162, column: 20, scope: !16848)
!16976 = !DILocation(line: 162, column: 18, scope: !16848)
!16977 = !DILocation(line: 162, column: 11, scope: !16848)
!16978 = !DILocation(line: 164, column: 18, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 164, column: 7)
!16980 = !DILocation(line: 164, column: 12, scope: !16979)
!16981 = !DILocation(line: 164, column: 23, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16979, file: !16820, line: 164, column: 7)
!16983 = !DILocation(line: 164, column: 7, scope: !16979)
!16984 = !DILocation(line: 165, column: 9, scope: !16982)
!16985 = !DILocation(line: 166, column: 19, scope: !16982)
!16986 = !DILocation(line: 166, column: 18, scope: !16982)
!16987 = !DILocation(line: 166, column: 16, scope: !16982)
!16988 = !DILocation(line: 166, column: 11, scope: !16982)
!16989 = !DILocation(line: 167, column: 16, scope: !16982)
!16990 = !DILocation(line: 167, column: 24, scope: !16982)
!16991 = !DILocation(line: 167, column: 21, scope: !16982)
!16992 = distinct !{!16992, !16984, !16993}
!16993 = !DILocation(line: 167, column: 37, scope: !16982)
!16994 = !DILocation(line: 164, column: 39, scope: !16982)
!16995 = !DILocation(line: 164, column: 7, scope: !16982)
!16996 = distinct !{!16996, !16983, !16997}
!16997 = !DILocation(line: 167, column: 37, scope: !16979)
!16998 = !DILocation(line: 169, column: 18, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 169, column: 7)
!17000 = !DILocation(line: 169, column: 12, scope: !16999)
!17001 = !DILocation(line: 169, column: 23, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16999, file: !16820, line: 169, column: 7)
!17003 = !DILocation(line: 169, column: 7, scope: !16999)
!17004 = !DILocation(line: 170, column: 9, scope: !17002)
!17005 = !DILocation(line: 171, column: 19, scope: !17002)
!17006 = !DILocation(line: 171, column: 18, scope: !17002)
!17007 = !DILocation(line: 171, column: 16, scope: !17002)
!17008 = !DILocation(line: 171, column: 11, scope: !17002)
!17009 = !DILocation(line: 172, column: 16, scope: !17002)
!17010 = !DILocation(line: 172, column: 24, scope: !17002)
!17011 = !DILocation(line: 172, column: 21, scope: !17002)
!17012 = distinct !{!17012, !17004, !17013}
!17013 = !DILocation(line: 172, column: 37, scope: !17002)
!17014 = !DILocation(line: 169, column: 39, scope: !17002)
!17015 = !DILocation(line: 169, column: 7, scope: !17002)
!17016 = distinct !{!17016, !17003, !17017}
!17017 = !DILocation(line: 172, column: 37, scope: !16999)
!17018 = !DILocation(line: 174, column: 11, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 174, column: 11)
!17020 = !DILocation(line: 174, column: 20, scope: !17019)
!17021 = !DILocation(line: 174, column: 17, scope: !17019)
!17022 = !DILocation(line: 174, column: 11, scope: !16848)
!17023 = !DILocation(line: 175, column: 16, scope: !17019)
!17024 = !DILocation(line: 175, column: 24, scope: !17019)
!17025 = !DILocation(line: 175, column: 22, scope: !17019)
!17026 = !DILocation(line: 175, column: 9, scope: !17019)
!17027 = !DILocation(line: 177, column: 12, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !16848, file: !16820, line: 177, column: 11)
!17029 = !DILocation(line: 177, column: 11, scope: !16848)
!17030 = !DILocation(line: 178, column: 9, scope: !17028)
!17031 = !DILocation(line: 180, column: 14, scope: !16848)
!17032 = !DILocation(line: 180, column: 7, scope: !16848)
!17033 = !DILocation(line: 182, column: 12, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !16844, file: !16820, line: 182, column: 12)
!17035 = !DILocation(line: 182, column: 17, scope: !17034)
!17036 = !DILocation(line: 182, column: 12, scope: !16844)
!17037 = !DILocation(line: 184, column: 7, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17034, file: !16820, line: 183, column: 5)
!17039 = !DILocation(line: 185, column: 17, scope: !17038)
!17040 = !DILocation(line: 185, column: 16, scope: !17038)
!17041 = !DILocation(line: 185, column: 14, scope: !17038)
!17042 = !DILocation(line: 185, column: 9, scope: !17038)
!17043 = !DILocation(line: 186, column: 14, scope: !17038)
!17044 = !DILocation(line: 186, column: 19, scope: !17038)
!17045 = !DILocation(line: 186, column: 35, scope: !17038)
!17046 = !DILocation(line: 186, column: 38, scope: !17038)
!17047 = !DILocation(line: 186, column: 46, scope: !17038)
!17048 = !DILocation(line: 186, column: 43, scope: !17038)
!17049 = distinct !{!17049, !17037, !17050}
!17050 = !DILocation(line: 186, column: 59, scope: !17038)
!17051 = !DILocation(line: 187, column: 11, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17038, file: !16820, line: 187, column: 11)
!17053 = !DILocation(line: 187, column: 19, scope: !17052)
!17054 = !DILocation(line: 187, column: 16, scope: !17052)
!17055 = !DILocation(line: 187, column: 11, scope: !17038)
!17056 = !DILocation(line: 188, column: 9, scope: !17052)
!17057 = !DILocation(line: 189, column: 19, scope: !17052)
!17058 = !DILocation(line: 189, column: 18, scope: !17052)
!17059 = !DILocation(line: 189, column: 16, scope: !17052)
!17060 = !DILocation(line: 189, column: 11, scope: !17052)
!17061 = !DILocation(line: 190, column: 16, scope: !17052)
!17062 = !DILocation(line: 190, column: 21, scope: !17052)
!17063 = distinct !{!17063, !17056, !17064}
!17064 = !DILocation(line: 190, column: 36, scope: !17052)
!17065 = !DILocation(line: 191, column: 11, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17038, file: !16820, line: 191, column: 11)
!17067 = !DILocation(line: 191, column: 11, scope: !17038)
!17068 = !DILocation(line: 192, column: 9, scope: !17066)
!17069 = !DILocation(line: 193, column: 7, scope: !17038)
!17070 = !DILocation(line: 193, column: 14, scope: !17038)
!17071 = !DILocation(line: 193, column: 19, scope: !17038)
!17072 = !DILocation(line: 193, column: 35, scope: !17038)
!17073 = !DILocation(line: 193, column: 38, scope: !17038)
!17074 = !DILocation(line: 193, column: 46, scope: !17038)
!17075 = !DILocation(line: 193, column: 43, scope: !17038)
!17076 = !DILocation(line: 194, column: 17, scope: !17038)
!17077 = !DILocation(line: 194, column: 16, scope: !17038)
!17078 = !DILocation(line: 194, column: 14, scope: !17038)
!17079 = distinct !{!17079, !17069, !17080}
!17080 = !DILocation(line: 194, column: 19, scope: !17038)
!17081 = !DILocation(line: 195, column: 11, scope: !17082)
!17082 = distinct !DILexicalBlock(scope: !17038, file: !16820, line: 195, column: 11)
!17083 = !DILocation(line: 195, column: 19, scope: !17082)
!17084 = !DILocation(line: 195, column: 16, scope: !17082)
!17085 = !DILocation(line: 195, column: 11, scope: !17038)
!17086 = !DILocation(line: 196, column: 9, scope: !17082)
!17087 = !DILocation(line: 197, column: 19, scope: !17082)
!17088 = !DILocation(line: 197, column: 18, scope: !17082)
!17089 = !DILocation(line: 197, column: 16, scope: !17082)
!17090 = !DILocation(line: 197, column: 11, scope: !17082)
!17091 = !DILocation(line: 198, column: 16, scope: !17082)
!17092 = !DILocation(line: 198, column: 21, scope: !17082)
!17093 = distinct !{!17093, !17086, !17094}
!17094 = !DILocation(line: 198, column: 36, scope: !17082)
!17095 = !DILocation(line: 199, column: 14, scope: !17038)
!17096 = !DILocation(line: 199, column: 7, scope: !17038)
!17097 = !DILocation(line: 203, column: 7, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17034, file: !16820, line: 202, column: 5)
!17099 = !DILocation(line: 203, column: 14, scope: !17098)
!17100 = !DILocation(line: 203, column: 19, scope: !17098)
!17101 = !DILocation(line: 203, column: 35, scope: !17098)
!17102 = !DILocation(line: 203, column: 38, scope: !17098)
!17103 = !DILocation(line: 203, column: 46, scope: !17098)
!17104 = !DILocation(line: 203, column: 43, scope: !17098)
!17105 = !DILocation(line: 204, column: 17, scope: !17098)
!17106 = !DILocation(line: 204, column: 16, scope: !17098)
!17107 = !DILocation(line: 204, column: 14, scope: !17098)
!17108 = distinct !{!17108, !17097, !17109}
!17109 = !DILocation(line: 204, column: 19, scope: !17098)
!17110 = !DILocation(line: 205, column: 7, scope: !17098)
!17111 = !DILocation(line: 205, column: 14, scope: !17098)
!17112 = !DILocation(line: 205, column: 19, scope: !17098)
!17113 = !DILocation(line: 205, column: 35, scope: !17098)
!17114 = !DILocation(line: 205, column: 38, scope: !17098)
!17115 = !DILocation(line: 205, column: 46, scope: !17098)
!17116 = !DILocation(line: 205, column: 43, scope: !17098)
!17117 = !DILocation(line: 206, column: 17, scope: !17098)
!17118 = !DILocation(line: 206, column: 16, scope: !17098)
!17119 = !DILocation(line: 206, column: 14, scope: !17098)
!17120 = distinct !{!17120, !17110, !17121}
!17121 = !DILocation(line: 206, column: 19, scope: !17098)
!17122 = !DILocation(line: 208, column: 7, scope: !17098)
!17123 = !DILocation(line: 208, column: 14, scope: !17098)
!17124 = !DILocation(line: 208, column: 22, scope: !17098)
!17125 = !DILocation(line: 208, column: 19, scope: !17098)
!17126 = !DILocation(line: 208, column: 27, scope: !17098)
!17127 = !DILocation(line: 208, column: 30, scope: !17098)
!17128 = !DILocation(line: 0, scope: !17098)
!17129 = !DILocation(line: 210, column: 11, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17098, file: !16820, line: 209, column: 9)
!17131 = !DILocation(line: 211, column: 21, scope: !17130)
!17132 = !DILocation(line: 211, column: 20, scope: !17130)
!17133 = !DILocation(line: 211, column: 18, scope: !17130)
!17134 = !DILocation(line: 211, column: 13, scope: !17130)
!17135 = !DILocation(line: 212, column: 18, scope: !17130)
!17136 = !DILocation(line: 212, column: 26, scope: !17130)
!17137 = !DILocation(line: 212, column: 23, scope: !17130)
!17138 = distinct !{!17138, !17129, !17139}
!17139 = !DILocation(line: 212, column: 39, scope: !17130)
!17140 = !DILocation(line: 213, column: 11, scope: !17130)
!17141 = !DILocation(line: 214, column: 21, scope: !17130)
!17142 = !DILocation(line: 214, column: 20, scope: !17130)
!17143 = !DILocation(line: 214, column: 18, scope: !17130)
!17144 = !DILocation(line: 214, column: 13, scope: !17130)
!17145 = !DILocation(line: 215, column: 18, scope: !17130)
!17146 = !DILocation(line: 215, column: 26, scope: !17130)
!17147 = !DILocation(line: 215, column: 23, scope: !17130)
!17148 = distinct !{!17148, !17140, !17149}
!17149 = !DILocation(line: 215, column: 39, scope: !17130)
!17150 = distinct !{!17150, !17122, !17151}
!17151 = !DILocation(line: 216, column: 9, scope: !17098)
!17152 = !DILocation(line: 218, column: 12, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17098, file: !16820, line: 218, column: 11)
!17154 = !DILocation(line: 218, column: 20, scope: !17153)
!17155 = !DILocation(line: 218, column: 17, scope: !17153)
!17156 = !DILocation(line: 218, column: 34, scope: !17153)
!17157 = !DILocation(line: 218, column: 38, scope: !17153)
!17158 = !DILocation(line: 219, column: 11, scope: !17153)
!17159 = !DILocation(line: 219, column: 15, scope: !17153)
!17160 = !DILocation(line: 219, column: 23, scope: !17153)
!17161 = !DILocation(line: 219, column: 20, scope: !17153)
!17162 = !DILocation(line: 219, column: 37, scope: !17153)
!17163 = !DILocation(line: 219, column: 41, scope: !17153)
!17164 = !DILocation(line: 218, column: 11, scope: !17098)
!17165 = !DILocation(line: 220, column: 29, scope: !17153)
!17166 = !DILocation(line: 220, column: 32, scope: !17153)
!17167 = !DILocation(line: 220, column: 35, scope: !17153)
!17168 = !DILocation(line: 220, column: 16, scope: !17153)
!17169 = !DILocation(line: 220, column: 9, scope: !17153)
!17170 = !DILocation(line: 222, column: 13, scope: !17098)
!17171 = !DILocation(line: 222, column: 20, scope: !17098)
!17172 = !DILocation(line: 222, column: 18, scope: !17098)
!17173 = !DILocation(line: 222, column: 11, scope: !17098)
!17174 = !DILocation(line: 224, column: 18, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17098, file: !16820, line: 224, column: 7)
!17176 = !DILocation(line: 224, column: 12, scope: !17175)
!17177 = !DILocation(line: 224, column: 23, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17175, file: !16820, line: 224, column: 7)
!17179 = !DILocation(line: 224, column: 7, scope: !17175)
!17180 = !DILocation(line: 225, column: 9, scope: !17178)
!17181 = !DILocation(line: 226, column: 19, scope: !17178)
!17182 = !DILocation(line: 226, column: 18, scope: !17178)
!17183 = !DILocation(line: 226, column: 16, scope: !17178)
!17184 = !DILocation(line: 226, column: 11, scope: !17178)
!17185 = !DILocation(line: 227, column: 16, scope: !17178)
!17186 = !DILocation(line: 227, column: 24, scope: !17178)
!17187 = !DILocation(line: 227, column: 21, scope: !17178)
!17188 = distinct !{!17188, !17180, !17189}
!17189 = !DILocation(line: 227, column: 37, scope: !17178)
!17190 = !DILocation(line: 224, column: 39, scope: !17178)
!17191 = !DILocation(line: 224, column: 7, scope: !17178)
!17192 = distinct !{!17192, !17179, !17193}
!17193 = !DILocation(line: 227, column: 37, scope: !17175)
!17194 = !DILocation(line: 229, column: 18, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17098, file: !16820, line: 229, column: 7)
!17196 = !DILocation(line: 229, column: 12, scope: !17195)
!17197 = !DILocation(line: 229, column: 23, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17195, file: !16820, line: 229, column: 7)
!17199 = !DILocation(line: 229, column: 7, scope: !17195)
!17200 = !DILocation(line: 230, column: 9, scope: !17198)
!17201 = !DILocation(line: 231, column: 19, scope: !17198)
!17202 = !DILocation(line: 231, column: 18, scope: !17198)
!17203 = !DILocation(line: 231, column: 16, scope: !17198)
!17204 = !DILocation(line: 231, column: 11, scope: !17198)
!17205 = !DILocation(line: 232, column: 16, scope: !17198)
!17206 = !DILocation(line: 232, column: 24, scope: !17198)
!17207 = !DILocation(line: 232, column: 21, scope: !17198)
!17208 = distinct !{!17208, !17200, !17209}
!17209 = !DILocation(line: 232, column: 37, scope: !17198)
!17210 = !DILocation(line: 229, column: 39, scope: !17198)
!17211 = !DILocation(line: 229, column: 7, scope: !17198)
!17212 = distinct !{!17212, !17199, !17213}
!17213 = !DILocation(line: 232, column: 37, scope: !17195)
!17214 = !DILocation(line: 234, column: 11, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17098, file: !16820, line: 234, column: 11)
!17216 = !DILocation(line: 234, column: 20, scope: !17215)
!17217 = !DILocation(line: 234, column: 17, scope: !17215)
!17218 = !DILocation(line: 234, column: 11, scope: !17098)
!17219 = !DILocation(line: 235, column: 16, scope: !17215)
!17220 = !DILocation(line: 235, column: 24, scope: !17215)
!17221 = !DILocation(line: 235, column: 22, scope: !17215)
!17222 = !DILocation(line: 235, column: 9, scope: !17215)
!17223 = !DILocation(line: 237, column: 12, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17098, file: !16820, line: 237, column: 11)
!17225 = !DILocation(line: 237, column: 11, scope: !17098)
!17226 = !DILocation(line: 238, column: 9, scope: !17224)
!17227 = !DILocation(line: 240, column: 14, scope: !17098)
!17228 = !DILocation(line: 240, column: 7, scope: !17098)
!17229 = !DILocation(line: 242, column: 1, scope: !16819)
!17230 = distinct !DISubprogram(name: "fraccompare", scope: !16820, file: !16820, line: 74, type: !1841, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1836, retainedNodes: !313)
!17231 = !DILocalVariable(name: "a", arg: 1, scope: !17230, file: !16820, line: 74, type: !88)
!17232 = !DILocation(line: 74, column: 26, scope: !17230)
!17233 = !DILocalVariable(name: "b", arg: 2, scope: !17230, file: !16820, line: 74, type: !88)
!17234 = !DILocation(line: 74, column: 41, scope: !17230)
!17235 = !DILocalVariable(name: "decimal_point", arg: 3, scope: !17230, file: !16820, line: 74, type: !10)
!17236 = !DILocation(line: 74, column: 49, scope: !17230)
!17237 = !DILocation(line: 76, column: 8, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17230, file: !16820, line: 76, column: 7)
!17239 = !DILocation(line: 76, column: 7, scope: !17238)
!17240 = !DILocation(line: 76, column: 13, scope: !17238)
!17241 = !DILocation(line: 76, column: 10, scope: !17238)
!17242 = !DILocation(line: 76, column: 27, scope: !17238)
!17243 = !DILocation(line: 76, column: 31, scope: !17238)
!17244 = !DILocation(line: 76, column: 30, scope: !17238)
!17245 = !DILocation(line: 76, column: 36, scope: !17238)
!17246 = !DILocation(line: 76, column: 33, scope: !17238)
!17247 = !DILocation(line: 76, column: 7, scope: !17230)
!17248 = !DILocation(line: 78, column: 7, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17238, file: !16820, line: 77, column: 5)
!17250 = !DILocation(line: 78, column: 15, scope: !17249)
!17251 = !DILocation(line: 78, column: 14, scope: !17249)
!17252 = !DILocation(line: 78, column: 23, scope: !17249)
!17253 = !DILocation(line: 78, column: 22, scope: !17249)
!17254 = !DILocation(line: 78, column: 19, scope: !17249)
!17255 = !DILocation(line: 79, column: 15, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17249, file: !16820, line: 79, column: 13)
!17257 = !DILocation(line: 79, column: 13, scope: !17249)
!17258 = !DILocation(line: 80, column: 11, scope: !17256)
!17259 = distinct !{!17259, !17248, !17260}
!17260 = !DILocation(line: 80, column: 18, scope: !17249)
!17261 = !DILocation(line: 81, column: 11, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17249, file: !16820, line: 81, column: 11)
!17263 = !DILocation(line: 81, column: 24, scope: !17262)
!17264 = !DILocation(line: 81, column: 27, scope: !17262)
!17265 = !DILocation(line: 81, column: 11, scope: !17249)
!17266 = !DILocation(line: 82, column: 17, scope: !17262)
!17267 = !DILocation(line: 82, column: 16, scope: !17262)
!17268 = !DILocation(line: 82, column: 22, scope: !17262)
!17269 = !DILocation(line: 82, column: 21, scope: !17262)
!17270 = !DILocation(line: 82, column: 19, scope: !17262)
!17271 = !DILocation(line: 82, column: 9, scope: !17262)
!17272 = !DILocation(line: 83, column: 11, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17249, file: !16820, line: 83, column: 11)
!17274 = !DILocation(line: 83, column: 11, scope: !17249)
!17275 = !DILocation(line: 84, column: 9, scope: !17273)
!17276 = !DILocation(line: 85, column: 11, scope: !17277)
!17277 = distinct !DILexicalBlock(scope: !17249, file: !16820, line: 85, column: 11)
!17278 = !DILocation(line: 85, column: 11, scope: !17249)
!17279 = !DILocation(line: 86, column: 9, scope: !17277)
!17280 = !DILocation(line: 87, column: 7, scope: !17249)
!17281 = !DILocation(line: 89, column: 14, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17238, file: !16820, line: 89, column: 12)
!17283 = !DILocation(line: 89, column: 12, scope: !17282)
!17284 = !DILocation(line: 89, column: 20, scope: !17282)
!17285 = !DILocation(line: 89, column: 17, scope: !17282)
!17286 = !DILocation(line: 89, column: 12, scope: !17238)
!17287 = !DILocation(line: 90, column: 5, scope: !17282)
!17288 = !DILabel(scope: !17289, name: "a_trailing_nonzero", file: !16820, line: 91)
!17289 = distinct !DILexicalBlock(scope: !17282, file: !16820, line: 90, column: 5)
!17290 = !DILocation(line: 91, column: 5, scope: !17289)
!17291 = !DILocation(line: 92, column: 7, scope: !17289)
!17292 = !DILocation(line: 92, column: 15, scope: !17289)
!17293 = !DILocation(line: 92, column: 14, scope: !17289)
!17294 = !DILocation(line: 92, column: 17, scope: !17289)
!17295 = !DILocation(line: 93, column: 10, scope: !17289)
!17296 = distinct !{!17296, !17291, !17295}
!17297 = !DILocation(line: 94, column: 14, scope: !17289)
!17298 = !DILocation(line: 94, column: 7, scope: !17289)
!17299 = !DILocation(line: 96, column: 14, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17282, file: !16820, line: 96, column: 12)
!17301 = !DILocation(line: 96, column: 12, scope: !17300)
!17302 = !DILocation(line: 96, column: 20, scope: !17300)
!17303 = !DILocation(line: 96, column: 17, scope: !17300)
!17304 = !DILocation(line: 96, column: 12, scope: !17282)
!17305 = !DILocation(line: 97, column: 5, scope: !17300)
!17306 = !DILabel(scope: !17307, name: "b_trailing_nonzero", file: !16820, line: 98)
!17307 = distinct !DILexicalBlock(scope: !17300, file: !16820, line: 97, column: 5)
!17308 = !DILocation(line: 98, column: 5, scope: !17307)
!17309 = !DILocation(line: 99, column: 7, scope: !17307)
!17310 = !DILocation(line: 99, column: 15, scope: !17307)
!17311 = !DILocation(line: 99, column: 14, scope: !17307)
!17312 = !DILocation(line: 99, column: 17, scope: !17307)
!17313 = !DILocation(line: 100, column: 10, scope: !17307)
!17314 = distinct !{!17314, !17309, !17313}
!17315 = !DILocation(line: 101, column: 16, scope: !17307)
!17316 = !DILocation(line: 101, column: 14, scope: !17307)
!17317 = !DILocation(line: 101, column: 7, scope: !17307)
!17318 = !DILocation(line: 103, column: 3, scope: !17230)
!17319 = !DILocation(line: 104, column: 1, scope: !17230)
!17320 = distinct !DISubprogram(name: "fd_safer", scope: !17321, file: !17321, line: 37, type: !1846, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !313)
!17321 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17322 = !DILocalVariable(name: "fd", arg: 1, scope: !17320, file: !17321, line: 37, type: !7)
!17323 = !DILocation(line: 37, column: 15, scope: !17320)
!17324 = !DILocation(line: 39, column: 23, scope: !17325)
!17325 = distinct !DILexicalBlock(scope: !17320, file: !17321, line: 39, column: 7)
!17326 = !DILocation(line: 39, column: 20, scope: !17325)
!17327 = !DILocation(line: 39, column: 26, scope: !17325)
!17328 = !DILocation(line: 39, column: 29, scope: !17325)
!17329 = !DILocation(line: 39, column: 32, scope: !17325)
!17330 = !DILocation(line: 39, column: 7, scope: !17320)
!17331 = !DILocalVariable(name: "f", scope: !17332, file: !17321, line: 41, type: !7)
!17332 = distinct !DILexicalBlock(scope: !17325, file: !17321, line: 40, column: 5)
!17333 = !DILocation(line: 41, column: 11, scope: !17332)
!17334 = !DILocation(line: 41, column: 26, scope: !17332)
!17335 = !DILocation(line: 41, column: 15, scope: !17332)
!17336 = !DILocalVariable(name: "e", scope: !17332, file: !17321, line: 42, type: !7)
!17337 = !DILocation(line: 42, column: 11, scope: !17332)
!17338 = !DILocation(line: 42, column: 15, scope: !17332)
!17339 = !DILocation(line: 43, column: 14, scope: !17332)
!17340 = !DILocation(line: 43, column: 7, scope: !17332)
!17341 = !DILocation(line: 44, column: 15, scope: !17332)
!17342 = !DILocation(line: 44, column: 7, scope: !17332)
!17343 = !DILocation(line: 44, column: 13, scope: !17332)
!17344 = !DILocation(line: 45, column: 12, scope: !17332)
!17345 = !DILocation(line: 45, column: 10, scope: !17332)
!17346 = !DILocation(line: 46, column: 5, scope: !17332)
!17347 = !DILocation(line: 48, column: 10, scope: !17320)
!17348 = !DILocation(line: 48, column: 3, scope: !17320)
!17349 = distinct !DISubprogram(name: "version_etc_arn", scope: !17350, file: !17350, line: 61, type: !1851, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !313)
!17350 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17351 = !DILocalVariable(name: "stream", arg: 1, scope: !17349, file: !17350, line: 61, type: !1853)
!17352 = !DILocation(line: 61, column: 24, scope: !17349)
!17353 = !DILocalVariable(name: "command_name", arg: 2, scope: !17349, file: !17350, line: 62, type: !88)
!17354 = !DILocation(line: 62, column: 30, scope: !17349)
!17355 = !DILocalVariable(name: "package", arg: 3, scope: !17349, file: !17350, line: 62, type: !88)
!17356 = !DILocation(line: 62, column: 56, scope: !17349)
!17357 = !DILocalVariable(name: "version", arg: 4, scope: !17349, file: !17350, line: 63, type: !88)
!17358 = !DILocation(line: 63, column: 30, scope: !17349)
!17359 = !DILocalVariable(name: "authors", arg: 5, scope: !17349, file: !17350, line: 64, type: !828)
!17360 = !DILocation(line: 64, column: 39, scope: !17349)
!17361 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17349, file: !17350, line: 64, type: !55)
!17362 = !DILocation(line: 64, column: 55, scope: !17349)
!17363 = !DILocation(line: 66, column: 7, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17349, file: !17350, line: 66, column: 7)
!17365 = !DILocation(line: 66, column: 7, scope: !17349)
!17366 = !DILocation(line: 67, column: 14, scope: !17364)
!17367 = !DILocation(line: 67, column: 38, scope: !17364)
!17368 = !DILocation(line: 67, column: 52, scope: !17364)
!17369 = !DILocation(line: 67, column: 61, scope: !17364)
!17370 = !DILocation(line: 67, column: 5, scope: !17364)
!17371 = !DILocation(line: 69, column: 14, scope: !17364)
!17372 = !DILocation(line: 69, column: 33, scope: !17364)
!17373 = !DILocation(line: 69, column: 42, scope: !17364)
!17374 = !DILocation(line: 69, column: 5, scope: !17364)
!17375 = !DILocation(line: 83, column: 12, scope: !17349)
!17376 = !DILocation(line: 83, column: 43, scope: !17349)
!17377 = !DILocation(line: 83, column: 3, scope: !17349)
!17378 = !DILocation(line: 85, column: 3, scope: !17349)
!17379 = !DILocation(line: 94, column: 11, scope: !17349)
!17380 = !DILocation(line: 94, column: 3, scope: !17349)
!17381 = !DILocation(line: 99, column: 7, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17349, file: !17350, line: 95, column: 5)
!17383 = !DILocation(line: 102, column: 16, scope: !17382)
!17384 = !DILocation(line: 102, column: 24, scope: !17382)
!17385 = !DILocation(line: 102, column: 47, scope: !17382)
!17386 = !DILocation(line: 102, column: 7, scope: !17382)
!17387 = !DILocation(line: 103, column: 7, scope: !17382)
!17388 = !DILocation(line: 106, column: 16, scope: !17382)
!17389 = !DILocation(line: 106, column: 24, scope: !17382)
!17390 = !DILocation(line: 106, column: 54, scope: !17382)
!17391 = !DILocation(line: 106, column: 66, scope: !17382)
!17392 = !DILocation(line: 106, column: 7, scope: !17382)
!17393 = !DILocation(line: 107, column: 7, scope: !17382)
!17394 = !DILocation(line: 110, column: 16, scope: !17382)
!17395 = !DILocation(line: 110, column: 24, scope: !17382)
!17396 = !DILocation(line: 111, column: 16, scope: !17382)
!17397 = !DILocation(line: 111, column: 28, scope: !17382)
!17398 = !DILocation(line: 111, column: 40, scope: !17382)
!17399 = !DILocation(line: 110, column: 7, scope: !17382)
!17400 = !DILocation(line: 112, column: 7, scope: !17382)
!17401 = !DILocation(line: 117, column: 16, scope: !17382)
!17402 = !DILocation(line: 117, column: 24, scope: !17382)
!17403 = !DILocation(line: 118, column: 16, scope: !17382)
!17404 = !DILocation(line: 118, column: 28, scope: !17382)
!17405 = !DILocation(line: 118, column: 40, scope: !17382)
!17406 = !DILocation(line: 118, column: 52, scope: !17382)
!17407 = !DILocation(line: 117, column: 7, scope: !17382)
!17408 = !DILocation(line: 119, column: 7, scope: !17382)
!17409 = !DILocation(line: 124, column: 16, scope: !17382)
!17410 = !DILocation(line: 124, column: 24, scope: !17382)
!17411 = !DILocation(line: 125, column: 16, scope: !17382)
!17412 = !DILocation(line: 125, column: 28, scope: !17382)
!17413 = !DILocation(line: 125, column: 40, scope: !17382)
!17414 = !DILocation(line: 125, column: 52, scope: !17382)
!17415 = !DILocation(line: 125, column: 64, scope: !17382)
!17416 = !DILocation(line: 124, column: 7, scope: !17382)
!17417 = !DILocation(line: 126, column: 7, scope: !17382)
!17418 = !DILocation(line: 131, column: 16, scope: !17382)
!17419 = !DILocation(line: 131, column: 24, scope: !17382)
!17420 = !DILocation(line: 132, column: 16, scope: !17382)
!17421 = !DILocation(line: 132, column: 28, scope: !17382)
!17422 = !DILocation(line: 132, column: 40, scope: !17382)
!17423 = !DILocation(line: 132, column: 52, scope: !17382)
!17424 = !DILocation(line: 132, column: 64, scope: !17382)
!17425 = !DILocation(line: 133, column: 16, scope: !17382)
!17426 = !DILocation(line: 131, column: 7, scope: !17382)
!17427 = !DILocation(line: 134, column: 7, scope: !17382)
!17428 = !DILocation(line: 139, column: 16, scope: !17382)
!17429 = !DILocation(line: 139, column: 24, scope: !17382)
!17430 = !DILocation(line: 140, column: 16, scope: !17382)
!17431 = !DILocation(line: 140, column: 28, scope: !17382)
!17432 = !DILocation(line: 140, column: 40, scope: !17382)
!17433 = !DILocation(line: 140, column: 52, scope: !17382)
!17434 = !DILocation(line: 140, column: 64, scope: !17382)
!17435 = !DILocation(line: 141, column: 16, scope: !17382)
!17436 = !DILocation(line: 141, column: 28, scope: !17382)
!17437 = !DILocation(line: 139, column: 7, scope: !17382)
!17438 = !DILocation(line: 142, column: 7, scope: !17382)
!17439 = !DILocation(line: 147, column: 16, scope: !17382)
!17440 = !DILocation(line: 147, column: 24, scope: !17382)
!17441 = !DILocation(line: 149, column: 17, scope: !17382)
!17442 = !DILocation(line: 149, column: 29, scope: !17382)
!17443 = !DILocation(line: 149, column: 41, scope: !17382)
!17444 = !DILocation(line: 149, column: 53, scope: !17382)
!17445 = !DILocation(line: 149, column: 65, scope: !17382)
!17446 = !DILocation(line: 150, column: 17, scope: !17382)
!17447 = !DILocation(line: 150, column: 29, scope: !17382)
!17448 = !DILocation(line: 150, column: 41, scope: !17382)
!17449 = !DILocation(line: 147, column: 7, scope: !17382)
!17450 = !DILocation(line: 151, column: 7, scope: !17382)
!17451 = !DILocation(line: 156, column: 16, scope: !17382)
!17452 = !DILocation(line: 156, column: 24, scope: !17382)
!17453 = !DILocation(line: 158, column: 16, scope: !17382)
!17454 = !DILocation(line: 158, column: 28, scope: !17382)
!17455 = !DILocation(line: 158, column: 40, scope: !17382)
!17456 = !DILocation(line: 158, column: 52, scope: !17382)
!17457 = !DILocation(line: 158, column: 64, scope: !17382)
!17458 = !DILocation(line: 159, column: 16, scope: !17382)
!17459 = !DILocation(line: 159, column: 28, scope: !17382)
!17460 = !DILocation(line: 159, column: 40, scope: !17382)
!17461 = !DILocation(line: 159, column: 52, scope: !17382)
!17462 = !DILocation(line: 156, column: 7, scope: !17382)
!17463 = !DILocation(line: 160, column: 7, scope: !17382)
!17464 = !DILocation(line: 167, column: 16, scope: !17382)
!17465 = !DILocation(line: 167, column: 24, scope: !17382)
!17466 = !DILocation(line: 169, column: 17, scope: !17382)
!17467 = !DILocation(line: 169, column: 29, scope: !17382)
!17468 = !DILocation(line: 169, column: 41, scope: !17382)
!17469 = !DILocation(line: 169, column: 53, scope: !17382)
!17470 = !DILocation(line: 169, column: 65, scope: !17382)
!17471 = !DILocation(line: 170, column: 17, scope: !17382)
!17472 = !DILocation(line: 170, column: 29, scope: !17382)
!17473 = !DILocation(line: 170, column: 41, scope: !17382)
!17474 = !DILocation(line: 170, column: 53, scope: !17382)
!17475 = !DILocation(line: 167, column: 7, scope: !17382)
!17476 = !DILocation(line: 171, column: 7, scope: !17382)
!17477 = !DILocation(line: 173, column: 1, scope: !17349)
!17478 = distinct !DISubprogram(name: "version_etc_ar", scope: !17350, file: !17350, line: 180, type: !1888, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !313)
!17479 = !DILocalVariable(name: "stream", arg: 1, scope: !17478, file: !17350, line: 180, type: !1853)
!17480 = !DILocation(line: 180, column: 23, scope: !17478)
!17481 = !DILocalVariable(name: "command_name", arg: 2, scope: !17478, file: !17350, line: 181, type: !88)
!17482 = !DILocation(line: 181, column: 29, scope: !17478)
!17483 = !DILocalVariable(name: "package", arg: 3, scope: !17478, file: !17350, line: 181, type: !88)
!17484 = !DILocation(line: 181, column: 55, scope: !17478)
!17485 = !DILocalVariable(name: "version", arg: 4, scope: !17478, file: !17350, line: 182, type: !88)
!17486 = !DILocation(line: 182, column: 29, scope: !17478)
!17487 = !DILocalVariable(name: "authors", arg: 5, scope: !17478, file: !17350, line: 182, type: !828)
!17488 = !DILocation(line: 182, column: 59, scope: !17478)
!17489 = !DILocalVariable(name: "n_authors", scope: !17478, file: !17350, line: 184, type: !55)
!17490 = !DILocation(line: 184, column: 10, scope: !17478)
!17491 = !DILocation(line: 186, column: 18, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17478, file: !17350, line: 186, column: 3)
!17493 = !DILocation(line: 186, column: 8, scope: !17492)
!17494 = !DILocation(line: 186, column: 23, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17492, file: !17350, line: 186, column: 3)
!17496 = !DILocation(line: 186, column: 31, scope: !17495)
!17497 = !DILocation(line: 186, column: 3, scope: !17492)
!17498 = !DILocation(line: 186, column: 52, scope: !17495)
!17499 = !DILocation(line: 186, column: 3, scope: !17495)
!17500 = distinct !{!17500, !17497, !17501}
!17501 = !DILocation(line: 187, column: 5, scope: !17492)
!17502 = !DILocation(line: 188, column: 20, scope: !17478)
!17503 = !DILocation(line: 188, column: 28, scope: !17478)
!17504 = !DILocation(line: 188, column: 42, scope: !17478)
!17505 = !DILocation(line: 188, column: 51, scope: !17478)
!17506 = !DILocation(line: 188, column: 60, scope: !17478)
!17507 = !DILocation(line: 188, column: 69, scope: !17478)
!17508 = !DILocation(line: 188, column: 3, scope: !17478)
!17509 = !DILocation(line: 189, column: 1, scope: !17478)
!17510 = distinct !DISubprogram(name: "version_etc_va", scope: !17350, file: !17350, line: 196, type: !1890, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !313)
!17511 = !DILocalVariable(name: "stream", arg: 1, scope: !17510, file: !17350, line: 196, type: !1853)
!17512 = !DILocation(line: 196, column: 23, scope: !17510)
!17513 = !DILocalVariable(name: "command_name", arg: 2, scope: !17510, file: !17350, line: 197, type: !88)
!17514 = !DILocation(line: 197, column: 29, scope: !17510)
!17515 = !DILocalVariable(name: "package", arg: 3, scope: !17510, file: !17350, line: 197, type: !88)
!17516 = !DILocation(line: 197, column: 55, scope: !17510)
!17517 = !DILocalVariable(name: "version", arg: 4, scope: !17510, file: !17350, line: 198, type: !88)
!17518 = !DILocation(line: 198, column: 29, scope: !17510)
!17519 = !DILocalVariable(name: "authors", arg: 5, scope: !17510, file: !17350, line: 198, type: !1892)
!17520 = !DILocation(line: 198, column: 46, scope: !17510)
!17521 = !DILocalVariable(name: "n_authors", scope: !17510, file: !17350, line: 200, type: !55)
!17522 = !DILocation(line: 200, column: 10, scope: !17510)
!17523 = !DILocalVariable(name: "authtab", scope: !17510, file: !17350, line: 201, type: !1899)
!17524 = !DILocation(line: 201, column: 15, scope: !17510)
!17525 = !DILocation(line: 203, column: 18, scope: !17526)
!17526 = distinct !DILexicalBlock(scope: !17510, file: !17350, line: 203, column: 3)
!17527 = !DILocation(line: 203, column: 8, scope: !17526)
!17528 = !DILocation(line: 204, column: 8, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17526, file: !17350, line: 203, column: 3)
!17530 = !DILocation(line: 204, column: 18, scope: !17529)
!17531 = !DILocation(line: 205, column: 10, scope: !17529)
!17532 = !DILocation(line: 205, column: 35, scope: !17529)
!17533 = !DILocation(line: 205, column: 22, scope: !17529)
!17534 = !DILocation(line: 205, column: 14, scope: !17529)
!17535 = !DILocation(line: 205, column: 33, scope: !17529)
!17536 = !DILocation(line: 205, column: 67, scope: !17529)
!17537 = !DILocation(line: 0, scope: !17529)
!17538 = !DILocation(line: 203, column: 3, scope: !17526)
!17539 = !DILocation(line: 206, column: 17, scope: !17529)
!17540 = !DILocation(line: 203, column: 3, scope: !17529)
!17541 = distinct !{!17541, !17538, !17542}
!17542 = !DILocation(line: 207, column: 5, scope: !17526)
!17543 = !DILocation(line: 208, column: 20, scope: !17510)
!17544 = !DILocation(line: 208, column: 28, scope: !17510)
!17545 = !DILocation(line: 208, column: 42, scope: !17510)
!17546 = !DILocation(line: 208, column: 51, scope: !17510)
!17547 = !DILocation(line: 209, column: 20, scope: !17510)
!17548 = !DILocation(line: 209, column: 29, scope: !17510)
!17549 = !DILocation(line: 208, column: 3, scope: !17510)
!17550 = !DILocation(line: 210, column: 1, scope: !17510)
!17551 = distinct !DISubprogram(name: "version_etc", scope: !17350, file: !17350, line: 227, type: !17552, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !313)
!17552 = !DISubroutineType(types: !17553)
!17553 = !{null, !1853, !88, !88, !88, null}
!17554 = !DILocalVariable(name: "stream", arg: 1, scope: !17551, file: !17350, line: 227, type: !1853)
!17555 = !DILocation(line: 227, column: 20, scope: !17551)
!17556 = !DILocalVariable(name: "command_name", arg: 2, scope: !17551, file: !17350, line: 228, type: !88)
!17557 = !DILocation(line: 228, column: 26, scope: !17551)
!17558 = !DILocalVariable(name: "package", arg: 3, scope: !17551, file: !17350, line: 228, type: !88)
!17559 = !DILocation(line: 228, column: 52, scope: !17551)
!17560 = !DILocalVariable(name: "version", arg: 4, scope: !17551, file: !17350, line: 229, type: !88)
!17561 = !DILocation(line: 229, column: 26, scope: !17551)
!17562 = !DILocalVariable(name: "authors", scope: !17551, file: !17350, line: 231, type: !1902)
!17563 = !DILocation(line: 231, column: 11, scope: !17551)
!17564 = !DILocation(line: 233, column: 3, scope: !17551)
!17565 = !DILocation(line: 234, column: 19, scope: !17551)
!17566 = !DILocation(line: 234, column: 27, scope: !17551)
!17567 = !DILocation(line: 234, column: 41, scope: !17551)
!17568 = !DILocation(line: 234, column: 50, scope: !17551)
!17569 = !DILocation(line: 234, column: 59, scope: !17551)
!17570 = !DILocation(line: 234, column: 3, scope: !17551)
!17571 = !DILocation(line: 235, column: 3, scope: !17551)
!17572 = !DILocation(line: 236, column: 1, scope: !17551)
!17573 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17350, file: !17350, line: 239, type: !168, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !313)
!17574 = !DILocation(line: 245, column: 11, scope: !17573)
!17575 = !DILocation(line: 245, column: 3, scope: !17573)
!17576 = !DILocation(line: 251, column: 11, scope: !17573)
!17577 = !DILocation(line: 251, column: 3, scope: !17573)
!17578 = !DILocation(line: 256, column: 3, scope: !17573)
!17579 = !DILocation(line: 258, column: 1, scope: !17573)
!17580 = distinct !DISubprogram(name: "xnmalloc", scope: !17581, file: !17581, line: 99, type: !1909, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17581 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!17582 = !DILocalVariable(name: "n", arg: 1, scope: !17580, file: !17581, line: 99, type: !55)
!17583 = !DILocation(line: 99, column: 18, scope: !17580)
!17584 = !DILocalVariable(name: "s", arg: 2, scope: !17580, file: !17581, line: 99, type: !55)
!17585 = !DILocation(line: 99, column: 28, scope: !17580)
!17586 = !DILocation(line: 101, column: 7, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17580, file: !17581, line: 101, column: 7)
!17588 = !DILocation(line: 101, column: 7, scope: !17580)
!17589 = !DILocation(line: 102, column: 5, scope: !17587)
!17590 = !DILocation(line: 103, column: 19, scope: !17580)
!17591 = !DILocation(line: 103, column: 23, scope: !17580)
!17592 = !DILocation(line: 103, column: 21, scope: !17580)
!17593 = !DILocation(line: 103, column: 10, scope: !17580)
!17594 = !DILocation(line: 103, column: 3, scope: !17580)
!17595 = distinct !DISubprogram(name: "xmalloc", scope: !17596, file: !17596, line: 39, type: !1391, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17596 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17597 = !DILocalVariable(name: "n", arg: 1, scope: !17595, file: !17596, line: 39, type: !55)
!17598 = !DILocation(line: 39, column: 17, scope: !17595)
!17599 = !DILocalVariable(name: "p", scope: !17595, file: !17596, line: 41, type: !53)
!17600 = !DILocation(line: 41, column: 9, scope: !17595)
!17601 = !DILocation(line: 41, column: 21, scope: !17595)
!17602 = !DILocation(line: 41, column: 13, scope: !17595)
!17603 = !DILocation(line: 42, column: 8, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17595, file: !17596, line: 42, column: 7)
!17605 = !DILocation(line: 42, column: 10, scope: !17604)
!17606 = !DILocation(line: 42, column: 13, scope: !17604)
!17607 = !DILocation(line: 42, column: 15, scope: !17604)
!17608 = !DILocation(line: 42, column: 7, scope: !17595)
!17609 = !DILocation(line: 43, column: 5, scope: !17604)
!17610 = !DILocation(line: 44, column: 10, scope: !17595)
!17611 = !DILocation(line: 44, column: 3, scope: !17595)
!17612 = distinct !DISubprogram(name: "xnrealloc", scope: !17581, file: !17581, line: 112, type: !1911, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17613 = !DILocalVariable(name: "p", arg: 1, scope: !17612, file: !17581, line: 112, type: !53)
!17614 = !DILocation(line: 112, column: 18, scope: !17612)
!17615 = !DILocalVariable(name: "n", arg: 2, scope: !17612, file: !17581, line: 112, type: !55)
!17616 = !DILocation(line: 112, column: 28, scope: !17612)
!17617 = !DILocalVariable(name: "s", arg: 3, scope: !17612, file: !17581, line: 112, type: !55)
!17618 = !DILocation(line: 112, column: 38, scope: !17612)
!17619 = !DILocation(line: 114, column: 7, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17612, file: !17581, line: 114, column: 7)
!17621 = !DILocation(line: 114, column: 7, scope: !17612)
!17622 = !DILocation(line: 115, column: 5, scope: !17620)
!17623 = !DILocation(line: 116, column: 20, scope: !17612)
!17624 = !DILocation(line: 116, column: 23, scope: !17612)
!17625 = !DILocation(line: 116, column: 27, scope: !17612)
!17626 = !DILocation(line: 116, column: 25, scope: !17612)
!17627 = !DILocation(line: 116, column: 10, scope: !17612)
!17628 = !DILocation(line: 116, column: 3, scope: !17612)
!17629 = distinct !DISubprogram(name: "xrealloc", scope: !17596, file: !17596, line: 51, type: !1395, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17630 = !DILocalVariable(name: "p", arg: 1, scope: !17629, file: !17596, line: 51, type: !53)
!17631 = !DILocation(line: 51, column: 17, scope: !17629)
!17632 = !DILocalVariable(name: "n", arg: 2, scope: !17629, file: !17596, line: 51, type: !55)
!17633 = !DILocation(line: 51, column: 27, scope: !17629)
!17634 = !DILocation(line: 53, column: 8, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17629, file: !17596, line: 53, column: 7)
!17636 = !DILocation(line: 53, column: 10, scope: !17635)
!17637 = !DILocation(line: 53, column: 13, scope: !17635)
!17638 = !DILocation(line: 53, column: 7, scope: !17629)
!17639 = !DILocation(line: 57, column: 13, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17635, file: !17596, line: 54, column: 5)
!17641 = !DILocation(line: 57, column: 7, scope: !17640)
!17642 = !DILocation(line: 58, column: 7, scope: !17640)
!17643 = !DILocation(line: 61, column: 16, scope: !17629)
!17644 = !DILocation(line: 61, column: 19, scope: !17629)
!17645 = !DILocation(line: 61, column: 7, scope: !17629)
!17646 = !DILocation(line: 61, column: 5, scope: !17629)
!17647 = !DILocation(line: 62, column: 8, scope: !17648)
!17648 = distinct !DILexicalBlock(scope: !17629, file: !17596, line: 62, column: 7)
!17649 = !DILocation(line: 62, column: 10, scope: !17648)
!17650 = !DILocation(line: 62, column: 13, scope: !17648)
!17651 = !DILocation(line: 62, column: 7, scope: !17629)
!17652 = !DILocation(line: 63, column: 5, scope: !17648)
!17653 = !DILocation(line: 64, column: 10, scope: !17629)
!17654 = !DILocation(line: 64, column: 3, scope: !17629)
!17655 = !DILocation(line: 65, column: 1, scope: !17629)
!17656 = distinct !DISubprogram(name: "x2nrealloc", scope: !17581, file: !17581, line: 174, type: !1913, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17657 = !DILocalVariable(name: "p", arg: 1, scope: !17656, file: !17581, line: 174, type: !53)
!17658 = !DILocation(line: 174, column: 19, scope: !17656)
!17659 = !DILocalVariable(name: "pn", arg: 2, scope: !17656, file: !17581, line: 174, type: !360)
!17660 = !DILocation(line: 174, column: 30, scope: !17656)
!17661 = !DILocalVariable(name: "s", arg: 3, scope: !17656, file: !17581, line: 174, type: !55)
!17662 = !DILocation(line: 174, column: 41, scope: !17656)
!17663 = !DILocalVariable(name: "n", scope: !17656, file: !17581, line: 176, type: !55)
!17664 = !DILocation(line: 176, column: 10, scope: !17656)
!17665 = !DILocation(line: 176, column: 15, scope: !17656)
!17666 = !DILocation(line: 176, column: 14, scope: !17656)
!17667 = !DILocation(line: 178, column: 9, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17656, file: !17581, line: 178, column: 7)
!17669 = !DILocation(line: 178, column: 7, scope: !17656)
!17670 = !DILocation(line: 180, column: 13, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17672, file: !17581, line: 180, column: 11)
!17672 = distinct !DILexicalBlock(scope: !17668, file: !17581, line: 179, column: 5)
!17673 = !DILocation(line: 180, column: 11, scope: !17672)
!17674 = !DILocation(line: 188, column: 32, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17671, file: !17581, line: 181, column: 9)
!17676 = !DILocation(line: 188, column: 30, scope: !17675)
!17677 = !DILocation(line: 188, column: 13, scope: !17675)
!17678 = !DILocation(line: 189, column: 17, scope: !17675)
!17679 = !DILocation(line: 189, column: 16, scope: !17675)
!17680 = !DILocation(line: 189, column: 13, scope: !17675)
!17681 = !DILocation(line: 190, column: 9, scope: !17675)
!17682 = !DILocation(line: 191, column: 11, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17672, file: !17581, line: 191, column: 11)
!17684 = !DILocation(line: 191, column: 11, scope: !17672)
!17685 = !DILocation(line: 192, column: 9, scope: !17683)
!17686 = !DILocation(line: 193, column: 5, scope: !17672)
!17687 = !DILocation(line: 200, column: 71, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17689, file: !17581, line: 200, column: 11)
!17689 = distinct !DILexicalBlock(scope: !17668, file: !17581, line: 195, column: 5)
!17690 = !DILocation(line: 200, column: 69, scope: !17688)
!17691 = !DILocation(line: 201, column: 14, scope: !17688)
!17692 = !DILocation(line: 201, column: 11, scope: !17688)
!17693 = !DILocation(line: 200, column: 11, scope: !17689)
!17694 = !DILocation(line: 202, column: 9, scope: !17688)
!17695 = !DILocation(line: 203, column: 12, scope: !17689)
!17696 = !DILocation(line: 203, column: 14, scope: !17689)
!17697 = !DILocation(line: 203, column: 18, scope: !17689)
!17698 = !DILocation(line: 203, column: 9, scope: !17689)
!17699 = !DILocation(line: 206, column: 9, scope: !17656)
!17700 = !DILocation(line: 206, column: 4, scope: !17656)
!17701 = !DILocation(line: 206, column: 7, scope: !17656)
!17702 = !DILocation(line: 207, column: 20, scope: !17656)
!17703 = !DILocation(line: 207, column: 23, scope: !17656)
!17704 = !DILocation(line: 207, column: 27, scope: !17656)
!17705 = !DILocation(line: 207, column: 25, scope: !17656)
!17706 = !DILocation(line: 207, column: 10, scope: !17656)
!17707 = !DILocation(line: 207, column: 3, scope: !17656)
!17708 = distinct !DISubprogram(name: "xcharalloc", scope: !17581, file: !17581, line: 216, type: !1915, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17709 = !DILocalVariable(name: "n", arg: 1, scope: !17708, file: !17581, line: 216, type: !55)
!17710 = !DILocation(line: 216, column: 20, scope: !17708)
!17711 = !DILocation(line: 218, column: 10, scope: !17708)
!17712 = !DILocation(line: 218, column: 3, scope: !17708)
!17713 = distinct !DISubprogram(name: "x2realloc", scope: !17596, file: !17596, line: 74, type: !1917, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17714 = !DILocalVariable(name: "p", arg: 1, scope: !17713, file: !17596, line: 74, type: !53)
!17715 = !DILocation(line: 74, column: 18, scope: !17713)
!17716 = !DILocalVariable(name: "pn", arg: 2, scope: !17713, file: !17596, line: 74, type: !360)
!17717 = !DILocation(line: 74, column: 29, scope: !17713)
!17718 = !DILocation(line: 76, column: 22, scope: !17713)
!17719 = !DILocation(line: 76, column: 25, scope: !17713)
!17720 = !DILocation(line: 76, column: 10, scope: !17713)
!17721 = !DILocation(line: 76, column: 3, scope: !17713)
!17722 = distinct !DISubprogram(name: "xzalloc", scope: !17596, file: !17596, line: 84, type: !1391, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17723 = !DILocalVariable(name: "s", arg: 1, scope: !17722, file: !17596, line: 84, type: !55)
!17724 = !DILocation(line: 84, column: 17, scope: !17722)
!17725 = !DILocation(line: 86, column: 27, scope: !17722)
!17726 = !DILocation(line: 86, column: 18, scope: !17722)
!17727 = !DILocation(line: 86, column: 34, scope: !17722)
!17728 = !DILocation(line: 86, column: 10, scope: !17722)
!17729 = !DILocation(line: 86, column: 3, scope: !17722)
!17730 = distinct !DISubprogram(name: "xcalloc", scope: !17596, file: !17596, line: 93, type: !1909, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17731 = !DILocalVariable(name: "n", arg: 1, scope: !17730, file: !17596, line: 93, type: !55)
!17732 = !DILocation(line: 93, column: 17, scope: !17730)
!17733 = !DILocalVariable(name: "s", arg: 2, scope: !17730, file: !17596, line: 93, type: !55)
!17734 = !DILocation(line: 93, column: 27, scope: !17730)
!17735 = !DILocalVariable(name: "p", scope: !17730, file: !17596, line: 95, type: !53)
!17736 = !DILocation(line: 95, column: 9, scope: !17730)
!17737 = !DILocation(line: 100, column: 7, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17730, file: !17596, line: 100, column: 7)
!17739 = !DILocation(line: 101, column: 7, scope: !17738)
!17740 = !DILocation(line: 101, column: 26, scope: !17738)
!17741 = !DILocation(line: 101, column: 29, scope: !17738)
!17742 = !DILocation(line: 101, column: 18, scope: !17738)
!17743 = !DILocation(line: 101, column: 16, scope: !17738)
!17744 = !DILocation(line: 100, column: 7, scope: !17730)
!17745 = !DILocation(line: 102, column: 5, scope: !17738)
!17746 = !DILocation(line: 103, column: 10, scope: !17730)
!17747 = !DILocation(line: 103, column: 3, scope: !17730)
!17748 = distinct !DISubprogram(name: "xmemdup", scope: !17596, file: !17596, line: 111, type: !1919, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17749 = !DILocalVariable(name: "p", arg: 1, scope: !17748, file: !17596, line: 111, type: !339)
!17750 = !DILocation(line: 111, column: 22, scope: !17748)
!17751 = !DILocalVariable(name: "s", arg: 2, scope: !17748, file: !17596, line: 111, type: !55)
!17752 = !DILocation(line: 111, column: 32, scope: !17748)
!17753 = !DILocation(line: 113, column: 27, scope: !17748)
!17754 = !DILocation(line: 113, column: 18, scope: !17748)
!17755 = !DILocation(line: 113, column: 31, scope: !17748)
!17756 = !DILocation(line: 113, column: 34, scope: !17748)
!17757 = !DILocation(line: 113, column: 10, scope: !17748)
!17758 = !DILocation(line: 113, column: 3, scope: !17748)
!17759 = distinct !DISubprogram(name: "xstrdup", scope: !17596, file: !17596, line: 119, type: !1259, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1906, retainedNodes: !313)
!17760 = !DILocalVariable(name: "string", arg: 1, scope: !17759, file: !17596, line: 119, type: !88)
!17761 = !DILocation(line: 119, column: 22, scope: !17759)
!17762 = !DILocation(line: 121, column: 19, scope: !17759)
!17763 = !DILocation(line: 121, column: 35, scope: !17759)
!17764 = !DILocation(line: 121, column: 27, scope: !17759)
!17765 = !DILocation(line: 121, column: 43, scope: !17759)
!17766 = !DILocation(line: 121, column: 10, scope: !17759)
!17767 = !DILocation(line: 121, column: 3, scope: !17759)
!17768 = distinct !DISubprogram(name: "xalloc_die", scope: !17769, file: !17769, line: 32, type: !168, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1921, retainedNodes: !313)
!17769 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17770 = !DILocation(line: 34, column: 10, scope: !17768)
!17771 = !DILocation(line: 34, column: 33, scope: !17768)
!17772 = !DILocation(line: 34, column: 3, scope: !17768)
!17773 = !DILocation(line: 40, column: 3, scope: !17768)
!17774 = distinct !DISubprogram(name: "xmemcoll", scope: !17775, file: !17775, line: 54, type: !1927, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1924, retainedNodes: !313)
!17775 = !DIFile(filename: "lib/xmemcoll.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17776 = !DILocalVariable(name: "s1", arg: 1, scope: !17774, file: !17775, line: 54, type: !9)
!17777 = !DILocation(line: 54, column: 17, scope: !17774)
!17778 = !DILocalVariable(name: "s1len", arg: 2, scope: !17774, file: !17775, line: 54, type: !55)
!17779 = !DILocation(line: 54, column: 28, scope: !17774)
!17780 = !DILocalVariable(name: "s2", arg: 3, scope: !17774, file: !17775, line: 54, type: !9)
!17781 = !DILocation(line: 54, column: 41, scope: !17774)
!17782 = !DILocalVariable(name: "s2len", arg: 4, scope: !17774, file: !17775, line: 54, type: !55)
!17783 = !DILocation(line: 54, column: 52, scope: !17774)
!17784 = !DILocalVariable(name: "diff", scope: !17774, file: !17775, line: 56, type: !7)
!17785 = !DILocation(line: 56, column: 7, scope: !17774)
!17786 = !DILocation(line: 56, column: 23, scope: !17774)
!17787 = !DILocation(line: 56, column: 27, scope: !17774)
!17788 = !DILocation(line: 56, column: 34, scope: !17774)
!17789 = !DILocation(line: 56, column: 38, scope: !17774)
!17790 = !DILocation(line: 56, column: 14, scope: !17774)
!17791 = !DILocalVariable(name: "collation_errno", scope: !17774, file: !17775, line: 57, type: !7)
!17792 = !DILocation(line: 57, column: 7, scope: !17774)
!17793 = !DILocation(line: 57, column: 25, scope: !17774)
!17794 = !DILocation(line: 58, column: 7, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17774, file: !17775, line: 58, column: 7)
!17796 = !DILocation(line: 58, column: 7, scope: !17774)
!17797 = !DILocation(line: 59, column: 20, scope: !17795)
!17798 = !DILocation(line: 59, column: 37, scope: !17795)
!17799 = !DILocation(line: 59, column: 41, scope: !17795)
!17800 = !DILocation(line: 59, column: 48, scope: !17795)
!17801 = !DILocation(line: 59, column: 52, scope: !17795)
!17802 = !DILocation(line: 59, column: 5, scope: !17795)
!17803 = !DILocation(line: 60, column: 10, scope: !17774)
!17804 = !DILocation(line: 60, column: 3, scope: !17774)
!17805 = distinct !DISubprogram(name: "collate_error", scope: !17775, file: !17775, line: 35, type: !1929, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1924, retainedNodes: !313)
!17806 = !DILocalVariable(name: "collation_errno", arg: 1, scope: !17805, file: !17775, line: 35, type: !7)
!17807 = !DILocation(line: 35, column: 20, scope: !17805)
!17808 = !DILocalVariable(name: "s1", arg: 2, scope: !17805, file: !17775, line: 36, type: !88)
!17809 = !DILocation(line: 36, column: 28, scope: !17805)
!17810 = !DILocalVariable(name: "s1len", arg: 3, scope: !17805, file: !17775, line: 36, type: !55)
!17811 = !DILocation(line: 36, column: 39, scope: !17805)
!17812 = !DILocalVariable(name: "s2", arg: 4, scope: !17805, file: !17775, line: 37, type: !88)
!17813 = !DILocation(line: 37, column: 28, scope: !17805)
!17814 = !DILocalVariable(name: "s2len", arg: 5, scope: !17805, file: !17775, line: 37, type: !55)
!17815 = !DILocation(line: 37, column: 39, scope: !17805)
!17816 = !DILocation(line: 39, column: 13, scope: !17805)
!17817 = !DILocation(line: 39, column: 30, scope: !17805)
!17818 = !DILocation(line: 39, column: 3, scope: !17805)
!17819 = !DILocation(line: 40, column: 16, scope: !17805)
!17820 = !DILocation(line: 40, column: 3, scope: !17805)
!17821 = !DILocation(line: 41, column: 10, scope: !17805)
!17822 = !DILocation(line: 42, column: 10, scope: !17805)
!17823 = !DILocation(line: 43, column: 57, scope: !17805)
!17824 = !DILocation(line: 43, column: 61, scope: !17805)
!17825 = !DILocation(line: 43, column: 10, scope: !17805)
!17826 = !DILocation(line: 44, column: 57, scope: !17805)
!17827 = !DILocation(line: 44, column: 61, scope: !17805)
!17828 = !DILocation(line: 44, column: 10, scope: !17805)
!17829 = !DILocation(line: 41, column: 3, scope: !17805)
!17830 = !DILocation(line: 45, column: 1, scope: !17805)
!17831 = distinct !DISubprogram(name: "xmemcoll0", scope: !17775, file: !17775, line: 69, type: !1517, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1924, retainedNodes: !313)
!17832 = !DILocalVariable(name: "s1", arg: 1, scope: !17831, file: !17775, line: 69, type: !88)
!17833 = !DILocation(line: 69, column: 24, scope: !17831)
!17834 = !DILocalVariable(name: "s1size", arg: 2, scope: !17831, file: !17775, line: 69, type: !55)
!17835 = !DILocation(line: 69, column: 35, scope: !17831)
!17836 = !DILocalVariable(name: "s2", arg: 3, scope: !17831, file: !17775, line: 69, type: !88)
!17837 = !DILocation(line: 69, column: 55, scope: !17831)
!17838 = !DILocalVariable(name: "s2size", arg: 4, scope: !17831, file: !17775, line: 69, type: !55)
!17839 = !DILocation(line: 69, column: 66, scope: !17831)
!17840 = !DILocalVariable(name: "diff", scope: !17831, file: !17775, line: 71, type: !7)
!17841 = !DILocation(line: 71, column: 7, scope: !17831)
!17842 = !DILocation(line: 71, column: 24, scope: !17831)
!17843 = !DILocation(line: 71, column: 28, scope: !17831)
!17844 = !DILocation(line: 71, column: 36, scope: !17831)
!17845 = !DILocation(line: 71, column: 40, scope: !17831)
!17846 = !DILocation(line: 71, column: 14, scope: !17831)
!17847 = !DILocalVariable(name: "collation_errno", scope: !17831, file: !17775, line: 72, type: !7)
!17848 = !DILocation(line: 72, column: 7, scope: !17831)
!17849 = !DILocation(line: 72, column: 25, scope: !17831)
!17850 = !DILocation(line: 73, column: 7, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17831, file: !17775, line: 73, column: 7)
!17852 = !DILocation(line: 73, column: 7, scope: !17831)
!17853 = !DILocation(line: 74, column: 20, scope: !17851)
!17854 = !DILocation(line: 74, column: 37, scope: !17851)
!17855 = !DILocation(line: 74, column: 41, scope: !17851)
!17856 = !DILocation(line: 74, column: 48, scope: !17851)
!17857 = !DILocation(line: 74, column: 53, scope: !17851)
!17858 = !DILocation(line: 74, column: 57, scope: !17851)
!17859 = !DILocation(line: 74, column: 64, scope: !17851)
!17860 = !DILocation(line: 74, column: 5, scope: !17851)
!17861 = !DILocation(line: 75, column: 10, scope: !17831)
!17862 = !DILocation(line: 75, column: 3, scope: !17831)
!17863 = distinct !DISubprogram(name: "xnanosleep", scope: !17864, file: !17864, line: 38, type: !1934, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1931, retainedNodes: !313)
!17864 = !DIFile(filename: "lib/xnanosleep.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !407, line: 9, size: 128, elements: !17866)
!17866 = !{!17867, !17868}
!17867 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17865, file: !407, line: 11, baseType: !410, size: 64)
!17868 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17865, file: !407, line: 12, baseType: !412, size: 64, offset: 64)
!17869 = !DILocalVariable(name: "seconds", arg: 1, scope: !17863, file: !17864, line: 38, type: !377)
!17870 = !DILocation(line: 38, column: 20, scope: !17863)
!17871 = !DILocalVariable(name: "ts_sleep", scope: !17863, file: !17864, line: 40, type: !17865)
!17872 = !DILocation(line: 40, column: 19, scope: !17863)
!17873 = !DILocation(line: 40, column: 43, scope: !17863)
!17874 = !DILocation(line: 40, column: 30, scope: !17863)
!17875 = !DILocation(line: 42, column: 3, scope: !17863)
!17876 = !DILocation(line: 50, column: 7, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17878, file: !17864, line: 43, column: 5)
!17878 = distinct !DILexicalBlock(scope: !17879, file: !17864, line: 42, column: 3)
!17879 = distinct !DILexicalBlock(scope: !17863, file: !17864, line: 42, column: 3)
!17880 = !DILocation(line: 50, column: 13, scope: !17877)
!17881 = !DILocation(line: 51, column: 11, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17877, file: !17864, line: 51, column: 11)
!17883 = !DILocation(line: 51, column: 39, scope: !17882)
!17884 = !DILocation(line: 51, column: 11, scope: !17877)
!17885 = !DILocation(line: 52, column: 9, scope: !17882)
!17886 = !DILocation(line: 53, column: 11, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17877, file: !17864, line: 53, column: 11)
!17888 = !DILocation(line: 53, column: 17, scope: !17887)
!17889 = !DILocation(line: 53, column: 26, scope: !17887)
!17890 = !DILocation(line: 53, column: 29, scope: !17887)
!17891 = !DILocation(line: 53, column: 35, scope: !17887)
!17892 = !DILocation(line: 53, column: 11, scope: !17877)
!17893 = !DILocation(line: 54, column: 9, scope: !17887)
!17894 = !DILocation(line: 42, column: 3, scope: !17878)
!17895 = distinct !{!17895, !17896, !17897}
!17896 = !DILocation(line: 42, column: 3, scope: !17879)
!17897 = !DILocation(line: 55, column: 5, scope: !17879)
!17898 = !DILocation(line: 57, column: 3, scope: !17863)
!17899 = !DILocation(line: 58, column: 1, scope: !17863)
!17900 = distinct !DISubprogram(name: "xstrtoul", scope: !17901, file: !17901, line: 76, type: !1940, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !313)
!17901 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17902 = !DILocalVariable(name: "s", arg: 1, scope: !17900, file: !17901, line: 76, type: !88)
!17903 = !DILocation(line: 76, column: 24, scope: !17900)
!17904 = !DILocalVariable(name: "ptr", arg: 2, scope: !17900, file: !17901, line: 76, type: !92)
!17905 = !DILocation(line: 76, column: 34, scope: !17900)
!17906 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !17900, file: !17901, line: 76, type: !7)
!17907 = !DILocation(line: 76, column: 43, scope: !17900)
!17908 = !DILocalVariable(name: "val", arg: 4, scope: !17900, file: !17901, line: 77, type: !1943)
!17909 = !DILocation(line: 77, column: 24, scope: !17900)
!17910 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !17900, file: !17901, line: 77, type: !88)
!17911 = !DILocation(line: 77, column: 41, scope: !17900)
!17912 = !DILocalVariable(name: "t_ptr", scope: !17900, file: !17901, line: 79, type: !9)
!17913 = !DILocation(line: 79, column: 9, scope: !17900)
!17914 = !DILocalVariable(name: "p", scope: !17900, file: !17901, line: 80, type: !92)
!17915 = !DILocation(line: 80, column: 10, scope: !17900)
!17916 = !DILocalVariable(name: "tmp", scope: !17900, file: !17901, line: 81, type: !57)
!17917 = !DILocation(line: 81, column: 14, scope: !17900)
!17918 = !DILocalVariable(name: "err", scope: !17900, file: !17901, line: 82, type: !1942)
!17919 = !DILocation(line: 82, column: 16, scope: !17900)
!17920 = !DILocation(line: 84, column: 3, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17922, file: !17901, line: 84, column: 3)
!17922 = distinct !DILexicalBlock(scope: !17900, file: !17901, line: 84, column: 3)
!17923 = !DILocation(line: 84, column: 3, scope: !17922)
!17924 = !DILocation(line: 86, column: 8, scope: !17900)
!17925 = !DILocation(line: 86, column: 14, scope: !17900)
!17926 = !DILocation(line: 86, column: 5, scope: !17900)
!17927 = !DILocation(line: 88, column: 3, scope: !17900)
!17928 = !DILocation(line: 88, column: 9, scope: !17900)
!17929 = !DILocalVariable(name: "q", scope: !17930, file: !17901, line: 92, type: !88)
!17930 = distinct !DILexicalBlock(scope: !17931, file: !17901, line: 91, column: 5)
!17931 = distinct !DILexicalBlock(scope: !17900, file: !17901, line: 90, column: 7)
!17932 = !DILocation(line: 92, column: 19, scope: !17930)
!17933 = !DILocation(line: 92, column: 23, scope: !17930)
!17934 = !DILocalVariable(name: "ch", scope: !17930, file: !17901, line: 93, type: !321)
!17935 = !DILocation(line: 93, column: 21, scope: !17930)
!17936 = !DILocation(line: 93, column: 27, scope: !17930)
!17937 = !DILocation(line: 93, column: 26, scope: !17930)
!17938 = !DILocation(line: 94, column: 7, scope: !17930)
!17939 = !DILocation(line: 94, column: 14, scope: !17930)
!17940 = !DILocation(line: 95, column: 15, scope: !17930)
!17941 = !DILocation(line: 95, column: 14, scope: !17930)
!17942 = !DILocation(line: 95, column: 12, scope: !17930)
!17943 = distinct !{!17943, !17938, !17944}
!17944 = !DILocation(line: 95, column: 17, scope: !17930)
!17945 = !DILocation(line: 96, column: 11, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17930, file: !17901, line: 96, column: 11)
!17947 = !DILocation(line: 96, column: 14, scope: !17946)
!17948 = !DILocation(line: 96, column: 11, scope: !17930)
!17949 = !DILocation(line: 97, column: 9, scope: !17946)
!17950 = !DILocation(line: 100, column: 19, scope: !17900)
!17951 = !DILocation(line: 100, column: 22, scope: !17900)
!17952 = !DILocation(line: 100, column: 25, scope: !17900)
!17953 = !DILocation(line: 100, column: 9, scope: !17900)
!17954 = !DILocation(line: 100, column: 7, scope: !17900)
!17955 = !DILocation(line: 102, column: 8, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17900, file: !17901, line: 102, column: 7)
!17957 = !DILocation(line: 102, column: 7, scope: !17956)
!17958 = !DILocation(line: 102, column: 13, scope: !17956)
!17959 = !DILocation(line: 102, column: 10, scope: !17956)
!17960 = !DILocation(line: 102, column: 7, scope: !17900)
!17961 = !DILocation(line: 106, column: 11, scope: !17962)
!17962 = distinct !DILexicalBlock(scope: !17963, file: !17901, line: 106, column: 11)
!17963 = distinct !DILexicalBlock(scope: !17956, file: !17901, line: 103, column: 5)
!17964 = !DILocation(line: 106, column: 26, scope: !17962)
!17965 = !DILocation(line: 106, column: 31, scope: !17962)
!17966 = !DILocation(line: 106, column: 30, scope: !17962)
!17967 = !DILocation(line: 106, column: 29, scope: !17962)
!17968 = !DILocation(line: 106, column: 33, scope: !17962)
!17969 = !DILocation(line: 106, column: 44, scope: !17962)
!17970 = !DILocation(line: 106, column: 62, scope: !17962)
!17971 = !DILocation(line: 106, column: 61, scope: !17962)
!17972 = !DILocation(line: 106, column: 60, scope: !17962)
!17973 = !DILocation(line: 106, column: 36, scope: !17962)
!17974 = !DILocation(line: 106, column: 11, scope: !17963)
!17975 = !DILocation(line: 107, column: 13, scope: !17962)
!17976 = !DILocation(line: 107, column: 9, scope: !17962)
!17977 = !DILocation(line: 109, column: 9, scope: !17962)
!17978 = !DILocation(line: 110, column: 5, scope: !17963)
!17979 = !DILocation(line: 111, column: 12, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17956, file: !17901, line: 111, column: 12)
!17981 = !DILocation(line: 111, column: 18, scope: !17980)
!17982 = !DILocation(line: 111, column: 12, scope: !17956)
!17983 = !DILocation(line: 113, column: 11, scope: !17984)
!17984 = distinct !DILexicalBlock(scope: !17985, file: !17901, line: 113, column: 11)
!17985 = distinct !DILexicalBlock(scope: !17980, file: !17901, line: 112, column: 5)
!17986 = !DILocation(line: 113, column: 17, scope: !17984)
!17987 = !DILocation(line: 113, column: 11, scope: !17985)
!17988 = !DILocation(line: 114, column: 9, scope: !17984)
!17989 = !DILocation(line: 115, column: 11, scope: !17985)
!17990 = !DILocation(line: 116, column: 5, scope: !17985)
!17991 = !DILocation(line: 121, column: 8, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17900, file: !17901, line: 121, column: 7)
!17993 = !DILocation(line: 121, column: 7, scope: !17900)
!17994 = !DILocation(line: 123, column: 14, scope: !17995)
!17995 = distinct !DILexicalBlock(scope: !17992, file: !17901, line: 122, column: 5)
!17996 = !DILocation(line: 123, column: 8, scope: !17995)
!17997 = !DILocation(line: 123, column: 12, scope: !17995)
!17998 = !DILocation(line: 124, column: 14, scope: !17995)
!17999 = !DILocation(line: 124, column: 7, scope: !17995)
!18000 = !DILocation(line: 127, column: 9, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17900, file: !17901, line: 127, column: 7)
!18002 = !DILocation(line: 127, column: 8, scope: !18001)
!18003 = !DILocation(line: 127, column: 7, scope: !18001)
!18004 = !DILocation(line: 127, column: 11, scope: !18001)
!18005 = !DILocation(line: 127, column: 7, scope: !17900)
!18006 = !DILocalVariable(name: "base", scope: !18007, file: !17901, line: 129, type: !7)
!18007 = distinct !DILexicalBlock(scope: !18001, file: !17901, line: 128, column: 5)
!18008 = !DILocation(line: 129, column: 11, scope: !18007)
!18009 = !DILocalVariable(name: "suffixes", scope: !18007, file: !17901, line: 130, type: !7)
!18010 = !DILocation(line: 130, column: 11, scope: !18007)
!18011 = !DILocalVariable(name: "overflow", scope: !18007, file: !17901, line: 131, type: !1942)
!18012 = !DILocation(line: 131, column: 20, scope: !18007)
!18013 = !DILocation(line: 133, column: 20, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18007, file: !17901, line: 133, column: 11)
!18015 = !DILocation(line: 133, column: 38, scope: !18014)
!18016 = !DILocation(line: 133, column: 37, scope: !18014)
!18017 = !DILocation(line: 133, column: 36, scope: !18014)
!18018 = !DILocation(line: 133, column: 12, scope: !18014)
!18019 = !DILocation(line: 133, column: 11, scope: !18007)
!18020 = !DILocation(line: 135, column: 18, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !18014, file: !17901, line: 134, column: 9)
!18022 = !DILocation(line: 135, column: 12, scope: !18021)
!18023 = !DILocation(line: 135, column: 16, scope: !18021)
!18024 = !DILocation(line: 136, column: 18, scope: !18021)
!18025 = !DILocation(line: 136, column: 22, scope: !18021)
!18026 = !DILocation(line: 136, column: 11, scope: !18021)
!18027 = !DILocation(line: 139, column: 17, scope: !18007)
!18028 = !DILocation(line: 139, column: 16, scope: !18007)
!18029 = !DILocation(line: 139, column: 15, scope: !18007)
!18030 = !DILocation(line: 139, column: 7, scope: !18007)
!18031 = !DILocation(line: 151, column: 23, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !18033, file: !17901, line: 151, column: 15)
!18033 = distinct !DILexicalBlock(scope: !18007, file: !17901, line: 140, column: 9)
!18034 = !DILocation(line: 151, column: 15, scope: !18032)
!18035 = !DILocation(line: 151, column: 15, scope: !18033)
!18036 = !DILocation(line: 152, column: 21, scope: !18032)
!18037 = !DILocation(line: 152, column: 13, scope: !18032)
!18038 = !DILocation(line: 155, column: 21, scope: !18039)
!18039 = distinct !DILexicalBlock(scope: !18040, file: !17901, line: 155, column: 21)
!18040 = distinct !DILexicalBlock(scope: !18032, file: !17901, line: 153, column: 15)
!18041 = !DILocation(line: 155, column: 29, scope: !18039)
!18042 = !DILocation(line: 155, column: 21, scope: !18040)
!18043 = !DILocation(line: 156, column: 28, scope: !18039)
!18044 = !DILocation(line: 156, column: 19, scope: !18039)
!18045 = !DILocation(line: 157, column: 17, scope: !18040)
!18046 = !DILocation(line: 161, column: 22, scope: !18040)
!18047 = !DILocation(line: 162, column: 25, scope: !18040)
!18048 = !DILocation(line: 163, column: 17, scope: !18040)
!18049 = !DILocation(line: 164, column: 15, scope: !18040)
!18050 = !DILocation(line: 165, column: 9, scope: !18033)
!18051 = !DILocation(line: 167, column: 17, scope: !18007)
!18052 = !DILocation(line: 167, column: 16, scope: !18007)
!18053 = !DILocation(line: 167, column: 15, scope: !18007)
!18054 = !DILocation(line: 167, column: 7, scope: !18007)
!18055 = !DILocation(line: 170, column: 22, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18007, file: !17901, line: 168, column: 9)
!18057 = !DILocation(line: 170, column: 20, scope: !18056)
!18058 = !DILocation(line: 171, column: 11, scope: !18056)
!18059 = !DILocation(line: 177, column: 22, scope: !18056)
!18060 = !DILocation(line: 177, column: 20, scope: !18056)
!18061 = !DILocation(line: 178, column: 11, scope: !18056)
!18062 = !DILocation(line: 181, column: 20, scope: !18056)
!18063 = !DILocation(line: 182, column: 11, scope: !18056)
!18064 = !DILocation(line: 185, column: 48, scope: !18056)
!18065 = !DILocation(line: 185, column: 22, scope: !18056)
!18066 = !DILocation(line: 185, column: 20, scope: !18056)
!18067 = !DILocation(line: 186, column: 11, scope: !18056)
!18068 = !DILocation(line: 190, column: 48, scope: !18056)
!18069 = !DILocation(line: 190, column: 22, scope: !18056)
!18070 = !DILocation(line: 190, column: 20, scope: !18056)
!18071 = !DILocation(line: 191, column: 11, scope: !18056)
!18072 = !DILocation(line: 195, column: 48, scope: !18056)
!18073 = !DILocation(line: 195, column: 22, scope: !18056)
!18074 = !DILocation(line: 195, column: 20, scope: !18056)
!18075 = !DILocation(line: 196, column: 11, scope: !18056)
!18076 = !DILocation(line: 200, column: 48, scope: !18056)
!18077 = !DILocation(line: 200, column: 22, scope: !18056)
!18078 = !DILocation(line: 200, column: 20, scope: !18056)
!18079 = !DILocation(line: 201, column: 11, scope: !18056)
!18080 = !DILocation(line: 204, column: 48, scope: !18056)
!18081 = !DILocation(line: 204, column: 22, scope: !18056)
!18082 = !DILocation(line: 204, column: 20, scope: !18056)
!18083 = !DILocation(line: 205, column: 11, scope: !18056)
!18084 = !DILocation(line: 209, column: 48, scope: !18056)
!18085 = !DILocation(line: 209, column: 22, scope: !18056)
!18086 = !DILocation(line: 209, column: 20, scope: !18056)
!18087 = !DILocation(line: 210, column: 11, scope: !18056)
!18088 = !DILocation(line: 213, column: 22, scope: !18056)
!18089 = !DILocation(line: 213, column: 20, scope: !18056)
!18090 = !DILocation(line: 214, column: 11, scope: !18056)
!18091 = !DILocation(line: 217, column: 48, scope: !18056)
!18092 = !DILocation(line: 217, column: 22, scope: !18056)
!18093 = !DILocation(line: 217, column: 20, scope: !18056)
!18094 = !DILocation(line: 218, column: 11, scope: !18056)
!18095 = !DILocation(line: 221, column: 48, scope: !18056)
!18096 = !DILocation(line: 221, column: 22, scope: !18056)
!18097 = !DILocation(line: 221, column: 20, scope: !18056)
!18098 = !DILocation(line: 222, column: 11, scope: !18056)
!18099 = !DILocation(line: 225, column: 18, scope: !18056)
!18100 = !DILocation(line: 225, column: 12, scope: !18056)
!18101 = !DILocation(line: 225, column: 16, scope: !18056)
!18102 = !DILocation(line: 226, column: 18, scope: !18056)
!18103 = !DILocation(line: 226, column: 22, scope: !18056)
!18104 = !DILocation(line: 226, column: 11, scope: !18056)
!18105 = !DILocation(line: 229, column: 14, scope: !18007)
!18106 = !DILocation(line: 229, column: 11, scope: !18007)
!18107 = !DILocation(line: 230, column: 13, scope: !18007)
!18108 = !DILocation(line: 230, column: 8, scope: !18007)
!18109 = !DILocation(line: 230, column: 10, scope: !18007)
!18110 = !DILocation(line: 231, column: 13, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18007, file: !17901, line: 231, column: 11)
!18112 = !DILocation(line: 231, column: 12, scope: !18111)
!18113 = !DILocation(line: 231, column: 11, scope: !18111)
!18114 = !DILocation(line: 231, column: 11, scope: !18007)
!18115 = !DILocation(line: 232, column: 13, scope: !18111)
!18116 = !DILocation(line: 232, column: 9, scope: !18111)
!18117 = !DILocation(line: 233, column: 5, scope: !18007)
!18118 = !DILocation(line: 235, column: 10, scope: !17900)
!18119 = !DILocation(line: 235, column: 4, scope: !17900)
!18120 = !DILocation(line: 235, column: 8, scope: !17900)
!18121 = !DILocation(line: 236, column: 10, scope: !17900)
!18122 = !DILocation(line: 236, column: 3, scope: !17900)
!18123 = !DILocation(line: 237, column: 1, scope: !17900)
!18124 = distinct !DISubprogram(name: "bkm_scale", scope: !17901, file: !17901, line: 48, type: !1944, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !313)
!18125 = !DILocalVariable(name: "x", arg: 1, scope: !18124, file: !17901, line: 48, type: !1943)
!18126 = !DILocation(line: 48, column: 24, scope: !18124)
!18127 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !18124, file: !17901, line: 48, type: !7)
!18128 = !DILocation(line: 48, column: 31, scope: !18124)
!18129 = !DILocation(line: 55, column: 26, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18124, file: !17901, line: 55, column: 7)
!18131 = !DILocation(line: 55, column: 24, scope: !18130)
!18132 = !DILocation(line: 55, column: 42, scope: !18130)
!18133 = !DILocation(line: 55, column: 41, scope: !18130)
!18134 = !DILocation(line: 55, column: 39, scope: !18130)
!18135 = !DILocation(line: 55, column: 7, scope: !18124)
!18136 = !DILocation(line: 57, column: 8, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18130, file: !17901, line: 56, column: 5)
!18138 = !DILocation(line: 57, column: 10, scope: !18137)
!18139 = !DILocation(line: 58, column: 7, scope: !18137)
!18140 = !DILocation(line: 60, column: 9, scope: !18124)
!18141 = !DILocation(line: 60, column: 4, scope: !18124)
!18142 = !DILocation(line: 60, column: 6, scope: !18124)
!18143 = !DILocation(line: 61, column: 3, scope: !18124)
!18144 = !DILocation(line: 62, column: 1, scope: !18124)
!18145 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !17901, file: !17901, line: 65, type: !1946, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !313)
!18146 = !DILocalVariable(name: "x", arg: 1, scope: !18145, file: !17901, line: 65, type: !1943)
!18147 = !DILocation(line: 65, column: 33, scope: !18145)
!18148 = !DILocalVariable(name: "base", arg: 2, scope: !18145, file: !17901, line: 65, type: !7)
!18149 = !DILocation(line: 65, column: 40, scope: !18145)
!18150 = !DILocalVariable(name: "power", arg: 3, scope: !18145, file: !17901, line: 65, type: !7)
!18151 = !DILocation(line: 65, column: 50, scope: !18145)
!18152 = !DILocalVariable(name: "err", scope: !18145, file: !17901, line: 67, type: !1942)
!18153 = !DILocation(line: 67, column: 16, scope: !18145)
!18154 = !DILocation(line: 68, column: 3, scope: !18145)
!18155 = !DILocation(line: 68, column: 15, scope: !18145)
!18156 = !DILocation(line: 69, column: 23, scope: !18145)
!18157 = !DILocation(line: 69, column: 26, scope: !18145)
!18158 = !DILocation(line: 69, column: 12, scope: !18145)
!18159 = !DILocation(line: 69, column: 9, scope: !18145)
!18160 = distinct !{!18160, !18154, !18161}
!18161 = !DILocation(line: 69, column: 30, scope: !18145)
!18162 = !DILocation(line: 70, column: 10, scope: !18145)
!18163 = !DILocation(line: 70, column: 3, scope: !18145)
!18164 = distinct !DISubprogram(name: "xstrtol_fatal", scope: !18165, file: !18165, line: 92, type: !1951, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1948, retainedNodes: !313)
!18165 = !DIFile(filename: "lib/xstrtol-error.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18166 = !DILocalVariable(name: "err", arg: 1, scope: !18164, file: !18165, line: 92, type: !74)
!18167 = !DILocation(line: 92, column: 34, scope: !18164)
!18168 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !18164, file: !18165, line: 93, type: !7)
!18169 = !DILocation(line: 93, column: 20, scope: !18164)
!18170 = !DILocalVariable(name: "c", arg: 3, scope: !18164, file: !18165, line: 93, type: !10)
!18171 = !DILocation(line: 93, column: 34, scope: !18164)
!18172 = !DILocalVariable(name: "long_options", arg: 4, scope: !18164, file: !18165, line: 93, type: !1953)
!18173 = !DILocation(line: 93, column: 58, scope: !18164)
!18174 = !DILocalVariable(name: "arg", arg: 5, scope: !18164, file: !18165, line: 94, type: !88)
!18175 = !DILocation(line: 94, column: 28, scope: !18164)
!18176 = !DILocation(line: 96, column: 18, scope: !18164)
!18177 = !DILocation(line: 96, column: 23, scope: !18164)
!18178 = !DILocation(line: 96, column: 32, scope: !18164)
!18179 = !DILocation(line: 96, column: 35, scope: !18164)
!18180 = !DILocation(line: 96, column: 49, scope: !18164)
!18181 = !DILocation(line: 96, column: 54, scope: !18164)
!18182 = !DILocation(line: 96, column: 3, scope: !18164)
!18183 = !DILocation(line: 97, column: 3, scope: !18164)
!18184 = distinct !DISubprogram(name: "xstrtol_error", scope: !18165, file: !18165, line: 47, type: !1961, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1948, retainedNodes: !313)
!18185 = !DILocalVariable(name: "err", arg: 1, scope: !18184, file: !18165, line: 47, type: !74)
!18186 = !DILocation(line: 47, column: 34, scope: !18184)
!18187 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !18184, file: !18165, line: 48, type: !7)
!18188 = !DILocation(line: 48, column: 20, scope: !18184)
!18189 = !DILocalVariable(name: "c", arg: 3, scope: !18184, file: !18165, line: 48, type: !10)
!18190 = !DILocation(line: 48, column: 34, scope: !18184)
!18191 = !DILocalVariable(name: "long_options", arg: 4, scope: !18184, file: !18165, line: 48, type: !1953)
!18192 = !DILocation(line: 48, column: 58, scope: !18184)
!18193 = !DILocalVariable(name: "arg", arg: 5, scope: !18184, file: !18165, line: 49, type: !88)
!18194 = !DILocation(line: 49, column: 28, scope: !18184)
!18195 = !DILocalVariable(name: "exit_status", arg: 6, scope: !18184, file: !18165, line: 50, type: !7)
!18196 = !DILocation(line: 50, column: 20, scope: !18184)
!18197 = !DILocalVariable(name: "hyphens", scope: !18184, file: !18165, line: 52, type: !88)
!18198 = !DILocation(line: 52, column: 15, scope: !18184)
!18199 = !DILocalVariable(name: "msgid", scope: !18184, file: !18165, line: 53, type: !88)
!18200 = !DILocation(line: 53, column: 15, scope: !18184)
!18201 = !DILocalVariable(name: "option", scope: !18184, file: !18165, line: 54, type: !88)
!18202 = !DILocation(line: 54, column: 15, scope: !18184)
!18203 = !DILocalVariable(name: "option_buffer", scope: !18184, file: !18165, line: 55, type: !275)
!18204 = !DILocation(line: 55, column: 8, scope: !18184)
!18205 = !DILocation(line: 57, column: 11, scope: !18184)
!18206 = !DILocation(line: 57, column: 3, scope: !18184)
!18207 = !DILocation(line: 60, column: 7, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18184, file: !18165, line: 58, column: 5)
!18209 = !DILocation(line: 63, column: 13, scope: !18208)
!18210 = !DILocation(line: 64, column: 7, scope: !18208)
!18211 = !DILocation(line: 68, column: 13, scope: !18208)
!18212 = !DILocation(line: 69, column: 7, scope: !18208)
!18213 = !DILocation(line: 72, column: 13, scope: !18208)
!18214 = !DILocation(line: 73, column: 7, scope: !18208)
!18215 = !DILocation(line: 76, column: 7, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18184, file: !18165, line: 76, column: 7)
!18217 = !DILocation(line: 76, column: 15, scope: !18216)
!18218 = !DILocation(line: 76, column: 7, scope: !18184)
!18219 = !DILocation(line: 78, column: 18, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18216, file: !18165, line: 77, column: 5)
!18221 = !DILocation(line: 78, column: 15, scope: !18220)
!18222 = !DILocation(line: 79, column: 26, scope: !18220)
!18223 = !DILocation(line: 79, column: 7, scope: !18220)
!18224 = !DILocation(line: 79, column: 24, scope: !18220)
!18225 = !DILocation(line: 80, column: 7, scope: !18220)
!18226 = !DILocation(line: 80, column: 24, scope: !18220)
!18227 = !DILocation(line: 81, column: 16, scope: !18220)
!18228 = !DILocation(line: 81, column: 14, scope: !18220)
!18229 = !DILocation(line: 82, column: 5, scope: !18220)
!18230 = !DILocation(line: 84, column: 14, scope: !18216)
!18231 = !DILocation(line: 84, column: 27, scope: !18216)
!18232 = !DILocation(line: 84, column: 36, scope: !18216)
!18233 = !DILocation(line: 84, column: 12, scope: !18216)
!18234 = !DILocation(line: 86, column: 10, scope: !18184)
!18235 = !DILocation(line: 86, column: 35, scope: !18184)
!18236 = !DILocation(line: 86, column: 26, scope: !18184)
!18237 = !DILocation(line: 86, column: 43, scope: !18184)
!18238 = !DILocation(line: 86, column: 52, scope: !18184)
!18239 = !DILocation(line: 86, column: 60, scope: !18184)
!18240 = !DILocation(line: 86, column: 3, scope: !18184)
!18241 = !DILocation(line: 87, column: 1, scope: !18184)
!18242 = distinct !DISubprogram(name: "xstrtoumax", scope: !17901, file: !17901, line: 76, type: !1966, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1963, retainedNodes: !313)
!18243 = !DILocalVariable(name: "s", arg: 1, scope: !18242, file: !17901, line: 76, type: !88)
!18244 = !DILocation(line: 76, column: 24, scope: !18242)
!18245 = !DILocalVariable(name: "ptr", arg: 2, scope: !18242, file: !17901, line: 76, type: !92)
!18246 = !DILocation(line: 76, column: 34, scope: !18242)
!18247 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !18242, file: !17901, line: 76, type: !7)
!18248 = !DILocation(line: 76, column: 43, scope: !18242)
!18249 = !DILocalVariable(name: "val", arg: 4, scope: !18242, file: !17901, line: 77, type: !1968)
!18250 = !DILocation(line: 77, column: 24, scope: !18242)
!18251 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !18242, file: !17901, line: 77, type: !88)
!18252 = !DILocation(line: 77, column: 41, scope: !18242)
!18253 = !DILocalVariable(name: "t_ptr", scope: !18242, file: !17901, line: 79, type: !9)
!18254 = !DILocation(line: 79, column: 9, scope: !18242)
!18255 = !DILocalVariable(name: "p", scope: !18242, file: !17901, line: 80, type: !92)
!18256 = !DILocation(line: 80, column: 10, scope: !18242)
!18257 = !DILocalVariable(name: "tmp", scope: !18242, file: !17901, line: 81, type: !361)
!18258 = !DILocation(line: 81, column: 14, scope: !18242)
!18259 = !DILocalVariable(name: "err", scope: !18242, file: !17901, line: 82, type: !1942)
!18260 = !DILocation(line: 82, column: 16, scope: !18242)
!18261 = !DILocation(line: 84, column: 3, scope: !18262)
!18262 = distinct !DILexicalBlock(scope: !18263, file: !17901, line: 84, column: 3)
!18263 = distinct !DILexicalBlock(scope: !18242, file: !17901, line: 84, column: 3)
!18264 = !DILocation(line: 84, column: 3, scope: !18263)
!18265 = !DILocation(line: 86, column: 8, scope: !18242)
!18266 = !DILocation(line: 86, column: 14, scope: !18242)
!18267 = !DILocation(line: 86, column: 5, scope: !18242)
!18268 = !DILocation(line: 88, column: 3, scope: !18242)
!18269 = !DILocation(line: 88, column: 9, scope: !18242)
!18270 = !DILocalVariable(name: "q", scope: !18271, file: !17901, line: 92, type: !88)
!18271 = distinct !DILexicalBlock(scope: !18272, file: !17901, line: 91, column: 5)
!18272 = distinct !DILexicalBlock(scope: !18242, file: !17901, line: 90, column: 7)
!18273 = !DILocation(line: 92, column: 19, scope: !18271)
!18274 = !DILocation(line: 92, column: 23, scope: !18271)
!18275 = !DILocalVariable(name: "ch", scope: !18271, file: !17901, line: 93, type: !321)
!18276 = !DILocation(line: 93, column: 21, scope: !18271)
!18277 = !DILocation(line: 93, column: 27, scope: !18271)
!18278 = !DILocation(line: 93, column: 26, scope: !18271)
!18279 = !DILocation(line: 94, column: 7, scope: !18271)
!18280 = !DILocation(line: 94, column: 14, scope: !18271)
!18281 = !DILocation(line: 95, column: 15, scope: !18271)
!18282 = !DILocation(line: 95, column: 14, scope: !18271)
!18283 = !DILocation(line: 95, column: 12, scope: !18271)
!18284 = distinct !{!18284, !18279, !18285}
!18285 = !DILocation(line: 95, column: 17, scope: !18271)
!18286 = !DILocation(line: 96, column: 11, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18271, file: !17901, line: 96, column: 11)
!18288 = !DILocation(line: 96, column: 14, scope: !18287)
!18289 = !DILocation(line: 96, column: 11, scope: !18271)
!18290 = !DILocation(line: 97, column: 9, scope: !18287)
!18291 = !DILocation(line: 100, column: 19, scope: !18242)
!18292 = !DILocation(line: 100, column: 22, scope: !18242)
!18293 = !DILocation(line: 100, column: 25, scope: !18242)
!18294 = !DILocation(line: 100, column: 9, scope: !18242)
!18295 = !DILocation(line: 100, column: 7, scope: !18242)
!18296 = !DILocation(line: 102, column: 8, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18242, file: !17901, line: 102, column: 7)
!18298 = !DILocation(line: 102, column: 7, scope: !18297)
!18299 = !DILocation(line: 102, column: 13, scope: !18297)
!18300 = !DILocation(line: 102, column: 10, scope: !18297)
!18301 = !DILocation(line: 102, column: 7, scope: !18242)
!18302 = !DILocation(line: 106, column: 11, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18304, file: !17901, line: 106, column: 11)
!18304 = distinct !DILexicalBlock(scope: !18297, file: !17901, line: 103, column: 5)
!18305 = !DILocation(line: 106, column: 26, scope: !18303)
!18306 = !DILocation(line: 106, column: 31, scope: !18303)
!18307 = !DILocation(line: 106, column: 30, scope: !18303)
!18308 = !DILocation(line: 106, column: 29, scope: !18303)
!18309 = !DILocation(line: 106, column: 33, scope: !18303)
!18310 = !DILocation(line: 106, column: 44, scope: !18303)
!18311 = !DILocation(line: 106, column: 62, scope: !18303)
!18312 = !DILocation(line: 106, column: 61, scope: !18303)
!18313 = !DILocation(line: 106, column: 60, scope: !18303)
!18314 = !DILocation(line: 106, column: 36, scope: !18303)
!18315 = !DILocation(line: 106, column: 11, scope: !18304)
!18316 = !DILocation(line: 107, column: 13, scope: !18303)
!18317 = !DILocation(line: 107, column: 9, scope: !18303)
!18318 = !DILocation(line: 109, column: 9, scope: !18303)
!18319 = !DILocation(line: 110, column: 5, scope: !18304)
!18320 = !DILocation(line: 111, column: 12, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18297, file: !17901, line: 111, column: 12)
!18322 = !DILocation(line: 111, column: 18, scope: !18321)
!18323 = !DILocation(line: 111, column: 12, scope: !18297)
!18324 = !DILocation(line: 113, column: 11, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18326, file: !17901, line: 113, column: 11)
!18326 = distinct !DILexicalBlock(scope: !18321, file: !17901, line: 112, column: 5)
!18327 = !DILocation(line: 113, column: 17, scope: !18325)
!18328 = !DILocation(line: 113, column: 11, scope: !18326)
!18329 = !DILocation(line: 114, column: 9, scope: !18325)
!18330 = !DILocation(line: 115, column: 11, scope: !18326)
!18331 = !DILocation(line: 116, column: 5, scope: !18326)
!18332 = !DILocation(line: 121, column: 8, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18242, file: !17901, line: 121, column: 7)
!18334 = !DILocation(line: 121, column: 7, scope: !18242)
!18335 = !DILocation(line: 123, column: 14, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18333, file: !17901, line: 122, column: 5)
!18337 = !DILocation(line: 123, column: 8, scope: !18336)
!18338 = !DILocation(line: 123, column: 12, scope: !18336)
!18339 = !DILocation(line: 124, column: 14, scope: !18336)
!18340 = !DILocation(line: 124, column: 7, scope: !18336)
!18341 = !DILocation(line: 127, column: 9, scope: !18342)
!18342 = distinct !DILexicalBlock(scope: !18242, file: !17901, line: 127, column: 7)
!18343 = !DILocation(line: 127, column: 8, scope: !18342)
!18344 = !DILocation(line: 127, column: 7, scope: !18342)
!18345 = !DILocation(line: 127, column: 11, scope: !18342)
!18346 = !DILocation(line: 127, column: 7, scope: !18242)
!18347 = !DILocalVariable(name: "base", scope: !18348, file: !17901, line: 129, type: !7)
!18348 = distinct !DILexicalBlock(scope: !18342, file: !17901, line: 128, column: 5)
!18349 = !DILocation(line: 129, column: 11, scope: !18348)
!18350 = !DILocalVariable(name: "suffixes", scope: !18348, file: !17901, line: 130, type: !7)
!18351 = !DILocation(line: 130, column: 11, scope: !18348)
!18352 = !DILocalVariable(name: "overflow", scope: !18348, file: !17901, line: 131, type: !1942)
!18353 = !DILocation(line: 131, column: 20, scope: !18348)
!18354 = !DILocation(line: 133, column: 20, scope: !18355)
!18355 = distinct !DILexicalBlock(scope: !18348, file: !17901, line: 133, column: 11)
!18356 = !DILocation(line: 133, column: 38, scope: !18355)
!18357 = !DILocation(line: 133, column: 37, scope: !18355)
!18358 = !DILocation(line: 133, column: 36, scope: !18355)
!18359 = !DILocation(line: 133, column: 12, scope: !18355)
!18360 = !DILocation(line: 133, column: 11, scope: !18348)
!18361 = !DILocation(line: 135, column: 18, scope: !18362)
!18362 = distinct !DILexicalBlock(scope: !18355, file: !17901, line: 134, column: 9)
!18363 = !DILocation(line: 135, column: 12, scope: !18362)
!18364 = !DILocation(line: 135, column: 16, scope: !18362)
!18365 = !DILocation(line: 136, column: 18, scope: !18362)
!18366 = !DILocation(line: 136, column: 22, scope: !18362)
!18367 = !DILocation(line: 136, column: 11, scope: !18362)
!18368 = !DILocation(line: 139, column: 17, scope: !18348)
!18369 = !DILocation(line: 139, column: 16, scope: !18348)
!18370 = !DILocation(line: 139, column: 15, scope: !18348)
!18371 = !DILocation(line: 139, column: 7, scope: !18348)
!18372 = !DILocation(line: 151, column: 23, scope: !18373)
!18373 = distinct !DILexicalBlock(scope: !18374, file: !17901, line: 151, column: 15)
!18374 = distinct !DILexicalBlock(scope: !18348, file: !17901, line: 140, column: 9)
!18375 = !DILocation(line: 151, column: 15, scope: !18373)
!18376 = !DILocation(line: 151, column: 15, scope: !18374)
!18377 = !DILocation(line: 152, column: 21, scope: !18373)
!18378 = !DILocation(line: 152, column: 13, scope: !18373)
!18379 = !DILocation(line: 155, column: 21, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18381, file: !17901, line: 155, column: 21)
!18381 = distinct !DILexicalBlock(scope: !18373, file: !17901, line: 153, column: 15)
!18382 = !DILocation(line: 155, column: 29, scope: !18380)
!18383 = !DILocation(line: 155, column: 21, scope: !18381)
!18384 = !DILocation(line: 156, column: 28, scope: !18380)
!18385 = !DILocation(line: 156, column: 19, scope: !18380)
!18386 = !DILocation(line: 157, column: 17, scope: !18381)
!18387 = !DILocation(line: 161, column: 22, scope: !18381)
!18388 = !DILocation(line: 162, column: 25, scope: !18381)
!18389 = !DILocation(line: 163, column: 17, scope: !18381)
!18390 = !DILocation(line: 164, column: 15, scope: !18381)
!18391 = !DILocation(line: 165, column: 9, scope: !18374)
!18392 = !DILocation(line: 167, column: 17, scope: !18348)
!18393 = !DILocation(line: 167, column: 16, scope: !18348)
!18394 = !DILocation(line: 167, column: 15, scope: !18348)
!18395 = !DILocation(line: 167, column: 7, scope: !18348)
!18396 = !DILocation(line: 170, column: 22, scope: !18397)
!18397 = distinct !DILexicalBlock(scope: !18348, file: !17901, line: 168, column: 9)
!18398 = !DILocation(line: 170, column: 20, scope: !18397)
!18399 = !DILocation(line: 171, column: 11, scope: !18397)
!18400 = !DILocation(line: 177, column: 22, scope: !18397)
!18401 = !DILocation(line: 177, column: 20, scope: !18397)
!18402 = !DILocation(line: 178, column: 11, scope: !18397)
!18403 = !DILocation(line: 181, column: 20, scope: !18397)
!18404 = !DILocation(line: 182, column: 11, scope: !18397)
!18405 = !DILocation(line: 185, column: 48, scope: !18397)
!18406 = !DILocation(line: 185, column: 22, scope: !18397)
!18407 = !DILocation(line: 185, column: 20, scope: !18397)
!18408 = !DILocation(line: 186, column: 11, scope: !18397)
!18409 = !DILocation(line: 190, column: 48, scope: !18397)
!18410 = !DILocation(line: 190, column: 22, scope: !18397)
!18411 = !DILocation(line: 190, column: 20, scope: !18397)
!18412 = !DILocation(line: 191, column: 11, scope: !18397)
!18413 = !DILocation(line: 195, column: 48, scope: !18397)
!18414 = !DILocation(line: 195, column: 22, scope: !18397)
!18415 = !DILocation(line: 195, column: 20, scope: !18397)
!18416 = !DILocation(line: 196, column: 11, scope: !18397)
!18417 = !DILocation(line: 200, column: 48, scope: !18397)
!18418 = !DILocation(line: 200, column: 22, scope: !18397)
!18419 = !DILocation(line: 200, column: 20, scope: !18397)
!18420 = !DILocation(line: 201, column: 11, scope: !18397)
!18421 = !DILocation(line: 204, column: 48, scope: !18397)
!18422 = !DILocation(line: 204, column: 22, scope: !18397)
!18423 = !DILocation(line: 204, column: 20, scope: !18397)
!18424 = !DILocation(line: 205, column: 11, scope: !18397)
!18425 = !DILocation(line: 209, column: 48, scope: !18397)
!18426 = !DILocation(line: 209, column: 22, scope: !18397)
!18427 = !DILocation(line: 209, column: 20, scope: !18397)
!18428 = !DILocation(line: 210, column: 11, scope: !18397)
!18429 = !DILocation(line: 213, column: 22, scope: !18397)
!18430 = !DILocation(line: 213, column: 20, scope: !18397)
!18431 = !DILocation(line: 214, column: 11, scope: !18397)
!18432 = !DILocation(line: 217, column: 48, scope: !18397)
!18433 = !DILocation(line: 217, column: 22, scope: !18397)
!18434 = !DILocation(line: 217, column: 20, scope: !18397)
!18435 = !DILocation(line: 218, column: 11, scope: !18397)
!18436 = !DILocation(line: 221, column: 48, scope: !18397)
!18437 = !DILocation(line: 221, column: 22, scope: !18397)
!18438 = !DILocation(line: 221, column: 20, scope: !18397)
!18439 = !DILocation(line: 222, column: 11, scope: !18397)
!18440 = !DILocation(line: 225, column: 18, scope: !18397)
!18441 = !DILocation(line: 225, column: 12, scope: !18397)
!18442 = !DILocation(line: 225, column: 16, scope: !18397)
!18443 = !DILocation(line: 226, column: 18, scope: !18397)
!18444 = !DILocation(line: 226, column: 22, scope: !18397)
!18445 = !DILocation(line: 226, column: 11, scope: !18397)
!18446 = !DILocation(line: 229, column: 14, scope: !18348)
!18447 = !DILocation(line: 229, column: 11, scope: !18348)
!18448 = !DILocation(line: 230, column: 13, scope: !18348)
!18449 = !DILocation(line: 230, column: 8, scope: !18348)
!18450 = !DILocation(line: 230, column: 10, scope: !18348)
!18451 = !DILocation(line: 231, column: 13, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !18348, file: !17901, line: 231, column: 11)
!18453 = !DILocation(line: 231, column: 12, scope: !18452)
!18454 = !DILocation(line: 231, column: 11, scope: !18452)
!18455 = !DILocation(line: 231, column: 11, scope: !18348)
!18456 = !DILocation(line: 232, column: 13, scope: !18452)
!18457 = !DILocation(line: 232, column: 9, scope: !18452)
!18458 = !DILocation(line: 233, column: 5, scope: !18348)
!18459 = !DILocation(line: 235, column: 10, scope: !18242)
!18460 = !DILocation(line: 235, column: 4, scope: !18242)
!18461 = !DILocation(line: 235, column: 8, scope: !18242)
!18462 = !DILocation(line: 236, column: 10, scope: !18242)
!18463 = !DILocation(line: 236, column: 3, scope: !18242)
!18464 = !DILocation(line: 237, column: 1, scope: !18242)
!18465 = distinct !DISubprogram(name: "bkm_scale", scope: !17901, file: !17901, line: 48, type: !1969, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1963, retainedNodes: !313)
!18466 = !DILocalVariable(name: "x", arg: 1, scope: !18465, file: !17901, line: 48, type: !1968)
!18467 = !DILocation(line: 48, column: 24, scope: !18465)
!18468 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !18465, file: !17901, line: 48, type: !7)
!18469 = !DILocation(line: 48, column: 31, scope: !18465)
!18470 = !DILocation(line: 55, column: 26, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18465, file: !17901, line: 55, column: 7)
!18472 = !DILocation(line: 55, column: 24, scope: !18471)
!18473 = !DILocation(line: 55, column: 42, scope: !18471)
!18474 = !DILocation(line: 55, column: 41, scope: !18471)
!18475 = !DILocation(line: 55, column: 39, scope: !18471)
!18476 = !DILocation(line: 55, column: 7, scope: !18465)
!18477 = !DILocation(line: 57, column: 8, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18471, file: !17901, line: 56, column: 5)
!18479 = !DILocation(line: 57, column: 10, scope: !18478)
!18480 = !DILocation(line: 58, column: 7, scope: !18478)
!18481 = !DILocation(line: 60, column: 9, scope: !18465)
!18482 = !DILocation(line: 60, column: 4, scope: !18465)
!18483 = !DILocation(line: 60, column: 6, scope: !18465)
!18484 = !DILocation(line: 61, column: 3, scope: !18465)
!18485 = !DILocation(line: 62, column: 1, scope: !18465)
!18486 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !17901, file: !17901, line: 65, type: !1971, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1963, retainedNodes: !313)
!18487 = !DILocalVariable(name: "x", arg: 1, scope: !18486, file: !17901, line: 65, type: !1968)
!18488 = !DILocation(line: 65, column: 33, scope: !18486)
!18489 = !DILocalVariable(name: "base", arg: 2, scope: !18486, file: !17901, line: 65, type: !7)
!18490 = !DILocation(line: 65, column: 40, scope: !18486)
!18491 = !DILocalVariable(name: "power", arg: 3, scope: !18486, file: !17901, line: 65, type: !7)
!18492 = !DILocation(line: 65, column: 50, scope: !18486)
!18493 = !DILocalVariable(name: "err", scope: !18486, file: !17901, line: 67, type: !1942)
!18494 = !DILocation(line: 67, column: 16, scope: !18486)
!18495 = !DILocation(line: 68, column: 3, scope: !18486)
!18496 = !DILocation(line: 68, column: 15, scope: !18486)
!18497 = !DILocation(line: 69, column: 23, scope: !18486)
!18498 = !DILocation(line: 69, column: 26, scope: !18486)
!18499 = !DILocation(line: 69, column: 12, scope: !18486)
!18500 = !DILocation(line: 69, column: 9, scope: !18486)
!18501 = distinct !{!18501, !18495, !18502}
!18502 = !DILocation(line: 69, column: 30, scope: !18486)
!18503 = !DILocation(line: 70, column: 10, scope: !18486)
!18504 = !DILocation(line: 70, column: 3, scope: !18486)
!18505 = distinct !DISubprogram(name: "rpl_fclose", scope: !18506, file: !18506, line: 58, type: !1976, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1973, retainedNodes: !313)
!18506 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18507 = !DILocalVariable(name: "fp", arg: 1, scope: !18505, file: !18506, line: 58, type: !1978)
!18508 = !DILocation(line: 58, column: 19, scope: !18505)
!18509 = !DILocalVariable(name: "saved_errno", scope: !18505, file: !18506, line: 60, type: !7)
!18510 = !DILocation(line: 60, column: 7, scope: !18505)
!18511 = !DILocalVariable(name: "fd", scope: !18505, file: !18506, line: 61, type: !7)
!18512 = !DILocation(line: 61, column: 7, scope: !18505)
!18513 = !DILocalVariable(name: "result", scope: !18505, file: !18506, line: 62, type: !7)
!18514 = !DILocation(line: 62, column: 7, scope: !18505)
!18515 = !DILocation(line: 65, column: 16, scope: !18505)
!18516 = !DILocation(line: 65, column: 8, scope: !18505)
!18517 = !DILocation(line: 65, column: 6, scope: !18505)
!18518 = !DILocation(line: 66, column: 7, scope: !18519)
!18519 = distinct !DILexicalBlock(scope: !18505, file: !18506, line: 66, column: 7)
!18520 = !DILocation(line: 66, column: 10, scope: !18519)
!18521 = !DILocation(line: 66, column: 7, scope: !18505)
!18522 = !DILocation(line: 67, column: 28, scope: !18519)
!18523 = !DILocation(line: 67, column: 12, scope: !18519)
!18524 = !DILocation(line: 67, column: 5, scope: !18519)
!18525 = !DILocation(line: 72, column: 9, scope: !18526)
!18526 = distinct !DILexicalBlock(scope: !18505, file: !18506, line: 72, column: 7)
!18527 = !DILocation(line: 72, column: 23, scope: !18526)
!18528 = !DILocation(line: 72, column: 41, scope: !18526)
!18529 = !DILocation(line: 72, column: 33, scope: !18526)
!18530 = !DILocation(line: 72, column: 26, scope: !18526)
!18531 = !DILocation(line: 72, column: 59, scope: !18526)
!18532 = !DILocation(line: 73, column: 7, scope: !18526)
!18533 = !DILocation(line: 73, column: 18, scope: !18526)
!18534 = !DILocation(line: 73, column: 10, scope: !18526)
!18535 = !DILocation(line: 72, column: 7, scope: !18505)
!18536 = !DILocation(line: 74, column: 19, scope: !18526)
!18537 = !DILocation(line: 74, column: 17, scope: !18526)
!18538 = !DILocation(line: 74, column: 5, scope: !18526)
!18539 = !DILocation(line: 100, column: 28, scope: !18505)
!18540 = !DILocation(line: 100, column: 12, scope: !18505)
!18541 = !DILocation(line: 100, column: 10, scope: !18505)
!18542 = !DILocation(line: 105, column: 7, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18505, file: !18506, line: 105, column: 7)
!18544 = !DILocation(line: 105, column: 19, scope: !18543)
!18545 = !DILocation(line: 105, column: 7, scope: !18505)
!18546 = !DILocation(line: 107, column: 15, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18543, file: !18506, line: 106, column: 5)
!18548 = !DILocation(line: 107, column: 7, scope: !18547)
!18549 = !DILocation(line: 107, column: 13, scope: !18547)
!18550 = !DILocation(line: 108, column: 14, scope: !18547)
!18551 = !DILocation(line: 109, column: 5, scope: !18547)
!18552 = !DILocation(line: 111, column: 10, scope: !18505)
!18553 = !DILocation(line: 111, column: 3, scope: !18505)
!18554 = !DILocation(line: 112, column: 1, scope: !18505)
!18555 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1341, file: !1341, line: 201, type: !18556, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !313)
!18556 = !DISubroutineType(types: !18557)
!18557 = !{!7, !7, !7, null}
!18558 = !DILocalVariable(name: "fd", arg: 1, scope: !18555, file: !1341, line: 201, type: !7)
!18559 = !DILocation(line: 201, column: 12, scope: !18555)
!18560 = !DILocalVariable(name: "action", arg: 2, scope: !18555, file: !1341, line: 201, type: !7)
!18561 = !DILocation(line: 201, column: 20, scope: !18555)
!18562 = !DILocalVariable(name: "arg", scope: !18555, file: !1341, line: 207, type: !1347)
!18563 = !DILocation(line: 207, column: 11, scope: !18555)
!18564 = !DILocalVariable(name: "result", scope: !18555, file: !1341, line: 208, type: !7)
!18565 = !DILocation(line: 208, column: 7, scope: !18555)
!18566 = !DILocation(line: 209, column: 3, scope: !18555)
!18567 = !DILocation(line: 210, column: 11, scope: !18555)
!18568 = !DILocation(line: 210, column: 3, scope: !18555)
!18569 = !DILocalVariable(name: "target", scope: !18570, file: !1341, line: 214, type: !7)
!18570 = distinct !DILexicalBlock(scope: !18571, file: !1341, line: 213, column: 7)
!18571 = distinct !DILexicalBlock(scope: !18555, file: !1341, line: 211, column: 5)
!18572 = !DILocation(line: 214, column: 13, scope: !18570)
!18573 = !DILocation(line: 214, column: 22, scope: !18570)
!18574 = !DILocation(line: 215, column: 35, scope: !18570)
!18575 = !DILocation(line: 215, column: 39, scope: !18570)
!18576 = !DILocation(line: 215, column: 18, scope: !18570)
!18577 = !DILocation(line: 215, column: 16, scope: !18570)
!18578 = !DILocation(line: 216, column: 9, scope: !18570)
!18579 = !DILocalVariable(name: "target", scope: !18580, file: !1341, line: 221, type: !7)
!18580 = distinct !DILexicalBlock(scope: !18571, file: !1341, line: 220, column: 7)
!18581 = !DILocation(line: 221, column: 13, scope: !18580)
!18582 = !DILocation(line: 221, column: 22, scope: !18580)
!18583 = !DILocation(line: 222, column: 43, scope: !18580)
!18584 = !DILocation(line: 222, column: 47, scope: !18580)
!18585 = !DILocation(line: 222, column: 18, scope: !18580)
!18586 = !DILocation(line: 222, column: 16, scope: !18580)
!18587 = !DILocation(line: 223, column: 9, scope: !18580)
!18588 = !DILocation(line: 258, column: 17, scope: !18589)
!18589 = distinct !DILexicalBlock(scope: !18571, file: !1341, line: 256, column: 7)
!18590 = !DILocation(line: 258, column: 9, scope: !18589)
!18591 = !DILocation(line: 327, column: 29, scope: !18592)
!18592 = distinct !DILexicalBlock(scope: !18589, file: !1341, line: 259, column: 11)
!18593 = !DILocation(line: 327, column: 33, scope: !18592)
!18594 = !DILocation(line: 327, column: 22, scope: !18592)
!18595 = !DILocation(line: 327, column: 20, scope: !18592)
!18596 = !DILocation(line: 328, column: 13, scope: !18592)
!18597 = !DILocalVariable(name: "x", scope: !18598, file: !1341, line: 422, type: !7)
!18598 = distinct !DILexicalBlock(scope: !18592, file: !1341, line: 421, column: 13)
!18599 = !DILocation(line: 422, column: 19, scope: !18598)
!18600 = !DILocation(line: 422, column: 23, scope: !18598)
!18601 = !DILocation(line: 423, column: 31, scope: !18598)
!18602 = !DILocation(line: 423, column: 35, scope: !18598)
!18603 = !DILocation(line: 423, column: 43, scope: !18598)
!18604 = !DILocation(line: 423, column: 24, scope: !18598)
!18605 = !DILocation(line: 423, column: 22, scope: !18598)
!18606 = !DILocation(line: 425, column: 13, scope: !18592)
!18607 = !DILocalVariable(name: "p", scope: !18608, file: !1341, line: 430, type: !53)
!18608 = distinct !DILexicalBlock(scope: !18592, file: !1341, line: 429, column: 13)
!18609 = !DILocation(line: 430, column: 21, scope: !18608)
!18610 = !DILocation(line: 430, column: 25, scope: !18608)
!18611 = !DILocation(line: 431, column: 31, scope: !18608)
!18612 = !DILocation(line: 431, column: 35, scope: !18608)
!18613 = !DILocation(line: 431, column: 43, scope: !18608)
!18614 = !DILocation(line: 431, column: 24, scope: !18608)
!18615 = !DILocation(line: 431, column: 22, scope: !18608)
!18616 = !DILocation(line: 433, column: 13, scope: !18592)
!18617 = !DILocation(line: 438, column: 9, scope: !18589)
!18618 = !DILocation(line: 441, column: 3, scope: !18555)
!18619 = !DILocation(line: 442, column: 10, scope: !18555)
!18620 = !DILocation(line: 442, column: 3, scope: !18555)
!18621 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1341, file: !1341, line: 446, type: !1342, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1344, retainedNodes: !313)
!18622 = !DILocalVariable(name: "fd", arg: 1, scope: !18621, file: !1341, line: 446, type: !7)
!18623 = !DILocation(line: 446, column: 22, scope: !18621)
!18624 = !DILocalVariable(name: "target", arg: 2, scope: !18621, file: !1341, line: 446, type: !7)
!18625 = !DILocation(line: 446, column: 30, scope: !18621)
!18626 = !DILocalVariable(name: "result", scope: !18621, file: !1341, line: 448, type: !7)
!18627 = !DILocation(line: 448, column: 7, scope: !18621)
!18628 = !DILocation(line: 481, column: 19, scope: !18621)
!18629 = !DILocation(line: 481, column: 32, scope: !18621)
!18630 = !DILocation(line: 481, column: 12, scope: !18621)
!18631 = !DILocation(line: 481, column: 10, scope: !18621)
!18632 = !DILocation(line: 483, column: 10, scope: !18621)
!18633 = !DILocation(line: 483, column: 3, scope: !18621)
!18634 = !DILocalVariable(name: "fd", arg: 1, scope: !1340, file: !1341, line: 487, type: !7)
!18635 = !DILocation(line: 487, column: 30, scope: !1340)
!18636 = !DILocalVariable(name: "target", arg: 2, scope: !1340, file: !1341, line: 487, type: !7)
!18637 = !DILocation(line: 487, column: 38, scope: !1340)
!18638 = !DILocalVariable(name: "result", scope: !1340, file: !1341, line: 489, type: !7)
!18639 = !DILocation(line: 489, column: 7, scope: !1340)
!18640 = !DILocation(line: 507, column: 12, scope: !18641)
!18641 = distinct !DILexicalBlock(scope: !1340, file: !1341, line: 507, column: 7)
!18642 = !DILocation(line: 507, column: 9, scope: !18641)
!18643 = !DILocation(line: 507, column: 7, scope: !1340)
!18644 = !DILocation(line: 509, column: 23, scope: !18645)
!18645 = distinct !DILexicalBlock(scope: !18641, file: !1341, line: 508, column: 5)
!18646 = !DILocation(line: 509, column: 44, scope: !18645)
!18647 = !DILocation(line: 509, column: 16, scope: !18645)
!18648 = !DILocation(line: 509, column: 14, scope: !18645)
!18649 = !DILocation(line: 510, column: 16, scope: !18650)
!18650 = distinct !DILexicalBlock(scope: !18645, file: !1341, line: 510, column: 11)
!18651 = !DILocation(line: 510, column: 13, scope: !18650)
!18652 = !DILocation(line: 510, column: 23, scope: !18650)
!18653 = !DILocation(line: 510, column: 26, scope: !18650)
!18654 = !DILocation(line: 510, column: 32, scope: !18650)
!18655 = !DILocation(line: 510, column: 11, scope: !18645)
!18656 = !DILocation(line: 512, column: 30, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18650, file: !1341, line: 511, column: 9)
!18658 = !DILocation(line: 517, column: 9, scope: !18657)
!18659 = !DILocation(line: 520, column: 37, scope: !18660)
!18660 = distinct !DILexicalBlock(scope: !18650, file: !1341, line: 519, column: 9)
!18661 = !DILocation(line: 520, column: 41, scope: !18660)
!18662 = !DILocation(line: 520, column: 20, scope: !18660)
!18663 = !DILocation(line: 520, column: 18, scope: !18660)
!18664 = !DILocation(line: 521, column: 15, scope: !18665)
!18665 = distinct !DILexicalBlock(scope: !18660, file: !1341, line: 521, column: 15)
!18666 = !DILocation(line: 521, column: 22, scope: !18665)
!18667 = !DILocation(line: 521, column: 15, scope: !18660)
!18668 = !DILocation(line: 522, column: 32, scope: !18665)
!18669 = !DILocation(line: 522, column: 13, scope: !18665)
!18670 = !DILocation(line: 524, column: 5, scope: !18645)
!18671 = !DILocation(line: 527, column: 31, scope: !18641)
!18672 = !DILocation(line: 527, column: 35, scope: !18641)
!18673 = !DILocation(line: 527, column: 14, scope: !18641)
!18674 = !DILocation(line: 527, column: 12, scope: !18641)
!18675 = !DILocation(line: 528, column: 12, scope: !18676)
!18676 = distinct !DILexicalBlock(scope: !1340, file: !1341, line: 528, column: 7)
!18677 = !DILocation(line: 528, column: 9, scope: !18676)
!18678 = !DILocation(line: 528, column: 19, scope: !18676)
!18679 = !DILocation(line: 528, column: 22, scope: !18676)
!18680 = !DILocation(line: 528, column: 41, scope: !18676)
!18681 = !DILocation(line: 528, column: 7, scope: !1340)
!18682 = !DILocalVariable(name: "flags", scope: !18683, file: !1341, line: 530, type: !7)
!18683 = distinct !DILexicalBlock(scope: !18676, file: !1341, line: 529, column: 5)
!18684 = !DILocation(line: 530, column: 11, scope: !18683)
!18685 = !DILocation(line: 530, column: 26, scope: !18683)
!18686 = !DILocation(line: 530, column: 19, scope: !18683)
!18687 = !DILocation(line: 531, column: 11, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18683, file: !1341, line: 531, column: 11)
!18689 = !DILocation(line: 531, column: 17, scope: !18688)
!18690 = !DILocation(line: 531, column: 21, scope: !18688)
!18691 = !DILocation(line: 531, column: 31, scope: !18688)
!18692 = !DILocation(line: 531, column: 48, scope: !18688)
!18693 = !DILocation(line: 531, column: 54, scope: !18688)
!18694 = !DILocation(line: 531, column: 24, scope: !18688)
!18695 = !DILocation(line: 531, column: 68, scope: !18688)
!18696 = !DILocation(line: 531, column: 11, scope: !18683)
!18697 = !DILocalVariable(name: "saved_errno", scope: !18698, file: !1341, line: 533, type: !7)
!18698 = distinct !DILexicalBlock(scope: !18688, file: !1341, line: 532, column: 9)
!18699 = !DILocation(line: 533, column: 15, scope: !18698)
!18700 = !DILocation(line: 533, column: 29, scope: !18698)
!18701 = !DILocation(line: 534, column: 18, scope: !18698)
!18702 = !DILocation(line: 534, column: 11, scope: !18698)
!18703 = !DILocation(line: 535, column: 19, scope: !18698)
!18704 = !DILocation(line: 535, column: 11, scope: !18698)
!18705 = !DILocation(line: 535, column: 17, scope: !18698)
!18706 = !DILocation(line: 536, column: 18, scope: !18698)
!18707 = !DILocation(line: 537, column: 9, scope: !18698)
!18708 = !DILocation(line: 538, column: 5, scope: !18683)
!18709 = !DILocation(line: 540, column: 10, scope: !1340)
!18710 = !DILocation(line: 540, column: 3, scope: !1340)
!18711 = distinct !DISubprogram(name: "rpl_fflush", scope: !18712, file: !18712, line: 129, type: !2015, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2012, retainedNodes: !313)
!18712 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18713 = !DILocalVariable(name: "stream", arg: 1, scope: !18711, file: !18712, line: 129, type: !2017)
!18714 = !DILocation(line: 129, column: 19, scope: !18711)
!18715 = !DILocation(line: 150, column: 7, scope: !18716)
!18716 = distinct !DILexicalBlock(scope: !18711, file: !18712, line: 150, column: 7)
!18717 = !DILocation(line: 150, column: 14, scope: !18716)
!18718 = !DILocation(line: 150, column: 22, scope: !18716)
!18719 = !DILocation(line: 150, column: 27, scope: !18716)
!18720 = !DILocation(line: 150, column: 7, scope: !18711)
!18721 = !DILocation(line: 151, column: 20, scope: !18716)
!18722 = !DILocation(line: 151, column: 12, scope: !18716)
!18723 = !DILocation(line: 151, column: 5, scope: !18716)
!18724 = !DILocation(line: 156, column: 44, scope: !18711)
!18725 = !DILocation(line: 156, column: 3, scope: !18711)
!18726 = !DILocation(line: 158, column: 18, scope: !18711)
!18727 = !DILocation(line: 158, column: 10, scope: !18711)
!18728 = !DILocation(line: 158, column: 3, scope: !18711)
!18729 = !DILocation(line: 232, column: 1, scope: !18711)
!18730 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !18712, file: !18712, line: 41, type: !2051, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2012, retainedNodes: !313)
!18731 = !DILocalVariable(name: "fp", arg: 1, scope: !18730, file: !18712, line: 41, type: !2017)
!18732 = !DILocation(line: 41, column: 48, scope: !18730)
!18733 = !DILocation(line: 43, column: 7, scope: !18734)
!18734 = distinct !DILexicalBlock(scope: !18730, file: !18712, line: 43, column: 7)
!18735 = !DILocation(line: 43, column: 11, scope: !18734)
!18736 = !{!18737, !2274, i64 0}
!18737 = !{!"_IO_FILE", !2274, i64 0, !2287, i64 8, !2287, i64 16, !2287, i64 24, !2287, i64 32, !2287, i64 40, !2287, i64 48, !2287, i64 56, !2287, i64 64, !2287, i64 72, !2287, i64 80, !2287, i64 88, !2287, i64 96, !2287, i64 104, !2274, i64 112, !2274, i64 116, !2448, i64 120, !3424, i64 128, !2275, i64 130, !2275, i64 131, !2287, i64 136, !2448, i64 144, !2287, i64 152, !2287, i64 160, !2287, i64 168, !2287, i64 176, !2448, i64 184, !2274, i64 192, !2275, i64 196}
!18738 = !DILocation(line: 43, column: 18, scope: !18734)
!18739 = !DILocation(line: 43, column: 7, scope: !18730)
!18740 = !DILocation(line: 45, column: 13, scope: !18734)
!18741 = !DILocation(line: 45, column: 5, scope: !18734)
!18742 = !DILocation(line: 46, column: 1, scope: !18730)
!18743 = distinct !DISubprogram(name: "rpl_fseeko", scope: !18744, file: !18744, line: 28, type: !2056, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2053, retainedNodes: !313)
!18744 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18745 = !DILocalVariable(name: "fp", arg: 1, scope: !18743, file: !18744, line: 28, type: !2058)
!18746 = !DILocation(line: 28, column: 15, scope: !18743)
!18747 = !DILocalVariable(name: "offset", arg: 2, scope: !18743, file: !18744, line: 28, type: !1474)
!18748 = !DILocation(line: 28, column: 25, scope: !18743)
!18749 = !DILocalVariable(name: "whence", arg: 3, scope: !18743, file: !18744, line: 28, type: !7)
!18750 = !DILocation(line: 28, column: 37, scope: !18743)
!18751 = !DILocation(line: 52, column: 7, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18743, file: !18744, line: 52, column: 7)
!18753 = !DILocation(line: 52, column: 11, scope: !18752)
!18754 = !{!18737, !2287, i64 16}
!18755 = !DILocation(line: 52, column: 27, scope: !18752)
!18756 = !DILocation(line: 52, column: 31, scope: !18752)
!18757 = !{!18737, !2287, i64 8}
!18758 = !DILocation(line: 52, column: 24, scope: !18752)
!18759 = !DILocation(line: 53, column: 7, scope: !18752)
!18760 = !DILocation(line: 53, column: 10, scope: !18752)
!18761 = !DILocation(line: 53, column: 14, scope: !18752)
!18762 = !{!18737, !2287, i64 40}
!18763 = !DILocation(line: 53, column: 31, scope: !18752)
!18764 = !DILocation(line: 53, column: 35, scope: !18752)
!18765 = !{!18737, !2287, i64 32}
!18766 = !DILocation(line: 53, column: 28, scope: !18752)
!18767 = !DILocation(line: 54, column: 7, scope: !18752)
!18768 = !DILocation(line: 54, column: 10, scope: !18752)
!18769 = !DILocation(line: 54, column: 14, scope: !18752)
!18770 = !{!18737, !2287, i64 72}
!18771 = !DILocation(line: 54, column: 28, scope: !18752)
!18772 = !DILocation(line: 52, column: 7, scope: !18743)
!18773 = !DILocalVariable(name: "pos", scope: !18774, file: !18744, line: 117, type: !1474)
!18774 = distinct !DILexicalBlock(scope: !18752, file: !18744, line: 113, column: 5)
!18775 = !DILocation(line: 117, column: 13, scope: !18774)
!18776 = !DILocation(line: 117, column: 34, scope: !18774)
!18777 = !DILocation(line: 117, column: 26, scope: !18774)
!18778 = !DILocation(line: 117, column: 39, scope: !18774)
!18779 = !DILocation(line: 117, column: 47, scope: !18774)
!18780 = !DILocation(line: 117, column: 19, scope: !18774)
!18781 = !DILocation(line: 118, column: 11, scope: !18782)
!18782 = distinct !DILexicalBlock(scope: !18774, file: !18744, line: 118, column: 11)
!18783 = !DILocation(line: 118, column: 15, scope: !18782)
!18784 = !DILocation(line: 118, column: 11, scope: !18774)
!18785 = !DILocation(line: 124, column: 11, scope: !18786)
!18786 = distinct !DILexicalBlock(scope: !18782, file: !18744, line: 119, column: 9)
!18787 = !DILocation(line: 129, column: 7, scope: !18774)
!18788 = !DILocation(line: 129, column: 11, scope: !18774)
!18789 = !DILocation(line: 129, column: 18, scope: !18774)
!18790 = !DILocation(line: 130, column: 21, scope: !18774)
!18791 = !DILocation(line: 130, column: 7, scope: !18774)
!18792 = !DILocation(line: 130, column: 11, scope: !18774)
!18793 = !DILocation(line: 130, column: 19, scope: !18774)
!18794 = !{!18737, !2448, i64 144}
!18795 = !DILocation(line: 161, column: 7, scope: !18774)
!18796 = !DILocation(line: 163, column: 18, scope: !18743)
!18797 = !DILocation(line: 163, column: 22, scope: !18743)
!18798 = !DILocation(line: 163, column: 30, scope: !18743)
!18799 = !DILocation(line: 163, column: 10, scope: !18743)
!18800 = !DILocation(line: 163, column: 3, scope: !18743)
!18801 = !DILocation(line: 164, column: 1, scope: !18743)
!18802 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !18803, file: !18803, line: 385, type: !2095, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2092, retainedNodes: !313)
!18803 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18804 = !DILocalVariable(name: "pwc", arg: 1, scope: !18802, file: !18803, line: 385, type: !2097)
!18805 = !DILocation(line: 385, column: 23, scope: !18802)
!18806 = !DILocalVariable(name: "s", arg: 2, scope: !18802, file: !18803, line: 385, type: !88)
!18807 = !DILocation(line: 385, column: 40, scope: !18802)
!18808 = !DILocalVariable(name: "n", arg: 3, scope: !18802, file: !18803, line: 385, type: !55)
!18809 = !DILocation(line: 385, column: 50, scope: !18802)
!18810 = !DILocalVariable(name: "ps", arg: 4, scope: !18802, file: !18803, line: 385, type: !2098)
!18811 = !DILocation(line: 385, column: 64, scope: !18802)
!18812 = !DILocalVariable(name: "ret", scope: !18802, file: !18803, line: 387, type: !55)
!18813 = !DILocation(line: 387, column: 10, scope: !18802)
!18814 = !DILocalVariable(name: "wc", scope: !18802, file: !18803, line: 388, type: !1308)
!18815 = !DILocation(line: 388, column: 11, scope: !18802)
!18816 = !DILocation(line: 404, column: 9, scope: !18817)
!18817 = distinct !DILexicalBlock(scope: !18802, file: !18803, line: 404, column: 7)
!18818 = !DILocation(line: 404, column: 7, scope: !18802)
!18819 = !DILocation(line: 405, column: 9, scope: !18817)
!18820 = !DILocation(line: 405, column: 5, scope: !18817)
!18821 = !DILocation(line: 439, column: 18, scope: !18802)
!18822 = !DILocation(line: 439, column: 23, scope: !18802)
!18823 = !DILocation(line: 439, column: 26, scope: !18802)
!18824 = !DILocation(line: 439, column: 29, scope: !18802)
!18825 = !DILocation(line: 439, column: 9, scope: !18802)
!18826 = !DILocation(line: 439, column: 7, scope: !18802)
!18827 = !DILocation(line: 447, column: 22, scope: !18828)
!18828 = distinct !DILexicalBlock(scope: !18802, file: !18803, line: 447, column: 7)
!18829 = !DILocation(line: 447, column: 19, scope: !18828)
!18830 = !DILocation(line: 447, column: 26, scope: !18828)
!18831 = !DILocation(line: 447, column: 29, scope: !18828)
!18832 = !DILocation(line: 447, column: 31, scope: !18828)
!18833 = !DILocation(line: 447, column: 36, scope: !18828)
!18834 = !DILocation(line: 447, column: 41, scope: !18828)
!18835 = !DILocation(line: 447, column: 7, scope: !18802)
!18836 = !DILocalVariable(name: "uc", scope: !18837, file: !18803, line: 449, type: !321)
!18837 = distinct !DILexicalBlock(scope: !18828, file: !18803, line: 448, column: 5)
!18838 = !DILocation(line: 449, column: 21, scope: !18837)
!18839 = !DILocation(line: 449, column: 27, scope: !18837)
!18840 = !DILocation(line: 449, column: 26, scope: !18837)
!18841 = !DILocation(line: 450, column: 14, scope: !18837)
!18842 = !DILocation(line: 450, column: 8, scope: !18837)
!18843 = !DILocation(line: 450, column: 12, scope: !18837)
!18844 = !DILocation(line: 451, column: 7, scope: !18837)
!18845 = !DILocation(line: 455, column: 10, scope: !18802)
!18846 = !DILocation(line: 455, column: 3, scope: !18802)
!18847 = !DILocation(line: 456, column: 1, scope: !18802)
!18848 = distinct !DISubprogram(name: "rpl_nanosleep", scope: !18849, file: !18849, line: 46, type: !2112, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2109, retainedNodes: !313)
!18849 = !DIFile(filename: "lib/nanosleep.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18850 = !DILocalVariable(name: "requested_delay", arg: 1, scope: !18848, file: !18849, line: 46, type: !2114)
!18851 = !DILocation(line: 46, column: 35, scope: !18848)
!18852 = !DILocalVariable(name: "remaining_delay", arg: 2, scope: !18848, file: !18849, line: 47, type: !2120)
!18853 = !DILocation(line: 47, column: 29, scope: !18848)
!18854 = !DILocation(line: 56, column: 7, scope: !18855)
!18855 = distinct !DILexicalBlock(scope: !18848, file: !18849, line: 56, column: 7)
!18856 = !DILocation(line: 56, column: 24, scope: !18855)
!18857 = !{!5252, !2448, i64 8}
!18858 = !DILocation(line: 56, column: 32, scope: !18855)
!18859 = !DILocation(line: 56, column: 36, scope: !18855)
!18860 = !DILocation(line: 56, column: 50, scope: !18855)
!18861 = !DILocation(line: 56, column: 67, scope: !18855)
!18862 = !DILocation(line: 56, column: 47, scope: !18855)
!18863 = !DILocation(line: 56, column: 7, scope: !18848)
!18864 = !DILocation(line: 58, column: 7, scope: !18865)
!18865 = distinct !DILexicalBlock(scope: !18855, file: !18849, line: 57, column: 5)
!18866 = !DILocation(line: 58, column: 13, scope: !18865)
!18867 = !DILocation(line: 59, column: 7, scope: !18865)
!18868 = !DILocalVariable(name: "limit", scope: !18869, file: !18849, line: 65, type: !2121)
!18869 = distinct !DILexicalBlock(scope: !18848, file: !18849, line: 62, column: 3)
!18870 = !DILocation(line: 65, column: 18, scope: !18869)
!18871 = !DILocalVariable(name: "seconds", scope: !18869, file: !18849, line: 66, type: !2122)
!18872 = !DILocation(line: 66, column: 12, scope: !18869)
!18873 = !DILocation(line: 66, column: 22, scope: !18869)
!18874 = !DILocation(line: 66, column: 39, scope: !18869)
!18875 = !{!5252, !2448, i64 0}
!18876 = !DILocalVariable(name: "intermediate", scope: !18869, file: !18849, line: 67, type: !2116)
!18877 = !DILocation(line: 67, column: 21, scope: !18869)
!18878 = !DILocation(line: 68, column: 28, scope: !18869)
!18879 = !DILocation(line: 68, column: 45, scope: !18869)
!18880 = !DILocation(line: 68, column: 18, scope: !18869)
!18881 = !DILocation(line: 68, column: 26, scope: !18869)
!18882 = !DILocation(line: 70, column: 5, scope: !18869)
!18883 = !DILocation(line: 70, column: 20, scope: !18869)
!18884 = !DILocation(line: 70, column: 18, scope: !18869)
!18885 = !DILocalVariable(name: "result", scope: !18886, file: !18849, line: 72, type: !7)
!18886 = distinct !DILexicalBlock(scope: !18869, file: !18849, line: 71, column: 7)
!18887 = !DILocation(line: 72, column: 13, scope: !18886)
!18888 = !DILocation(line: 73, column: 22, scope: !18886)
!18889 = !DILocation(line: 73, column: 29, scope: !18886)
!18890 = !DILocation(line: 74, column: 44, scope: !18886)
!18891 = !DILocation(line: 74, column: 18, scope: !18886)
!18892 = !DILocation(line: 74, column: 16, scope: !18886)
!18893 = !DILocation(line: 75, column: 17, scope: !18886)
!18894 = !DILocation(line: 76, column: 13, scope: !18895)
!18895 = distinct !DILexicalBlock(scope: !18886, file: !18849, line: 76, column: 13)
!18896 = !DILocation(line: 76, column: 13, scope: !18886)
!18897 = !DILocation(line: 78, column: 17, scope: !18898)
!18898 = distinct !DILexicalBlock(scope: !18899, file: !18849, line: 78, column: 17)
!18899 = distinct !DILexicalBlock(scope: !18895, file: !18849, line: 77, column: 11)
!18900 = !DILocation(line: 78, column: 17, scope: !18899)
!18901 = !DILocation(line: 79, column: 42, scope: !18898)
!18902 = !DILocation(line: 79, column: 15, scope: !18898)
!18903 = !DILocation(line: 79, column: 32, scope: !18898)
!18904 = !DILocation(line: 79, column: 39, scope: !18898)
!18905 = !DILocation(line: 80, column: 20, scope: !18899)
!18906 = !DILocation(line: 80, column: 13, scope: !18899)
!18907 = !DILocation(line: 82, column: 22, scope: !18886)
!18908 = !DILocation(line: 82, column: 30, scope: !18886)
!18909 = distinct !{!18909, !18882, !18910}
!18910 = !DILocation(line: 83, column: 7, scope: !18869)
!18911 = !DILocation(line: 84, column: 27, scope: !18869)
!18912 = !DILocation(line: 84, column: 18, scope: !18869)
!18913 = !DILocation(line: 84, column: 25, scope: !18869)
!18914 = !DILocation(line: 85, column: 38, scope: !18869)
!18915 = !DILocation(line: 85, column: 12, scope: !18869)
!18916 = !DILocation(line: 85, column: 5, scope: !18869)
!18917 = !DILocation(line: 87, column: 1, scope: !18848)
!18918 = distinct !DISubprogram(name: "print_and_abort", scope: !1458, file: !1458, line: 330, type: !168, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!18919 = !DILocation(line: 340, column: 12, scope: !18918)
!18920 = !DILocation(line: 340, column: 28, scope: !18918)
!18921 = !DILocation(line: 340, column: 3, scope: !18918)
!18922 = !DILocation(line: 342, column: 9, scope: !18918)
!18923 = !DILocation(line: 342, column: 3, scope: !18918)
!18924 = distinct !DISubprogram(name: "_obstack_begin", scope: !1458, file: !1458, line: 150, type: !1363, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!18925 = !DILocalVariable(name: "h", arg: 1, scope: !18924, file: !1458, line: 150, type: !1365)
!18926 = !DILocation(line: 150, column: 33, scope: !18924)
!18927 = !DILocalVariable(name: "size", arg: 2, scope: !18924, file: !1458, line: 151, type: !55)
!18928 = !DILocation(line: 151, column: 33, scope: !18924)
!18929 = !DILocalVariable(name: "alignment", arg: 3, scope: !18924, file: !1458, line: 151, type: !55)
!18930 = !DILocation(line: 151, column: 55, scope: !18924)
!18931 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !18924, file: !1458, line: 152, type: !1390)
!18932 = !DILocation(line: 152, column: 25, scope: !18924)
!18933 = !DILocalVariable(name: "freefun", arg: 5, scope: !18924, file: !1458, line: 153, type: !1051)
!18934 = !DILocation(line: 153, column: 24, scope: !18924)
!18935 = !DILocation(line: 155, column: 23, scope: !18924)
!18936 = !DILocation(line: 155, column: 3, scope: !18924)
!18937 = !DILocation(line: 155, column: 6, scope: !18924)
!18938 = !DILocation(line: 155, column: 15, scope: !18924)
!18939 = !DILocation(line: 155, column: 21, scope: !18924)
!18940 = !DILocation(line: 156, column: 22, scope: !18924)
!18941 = !DILocation(line: 156, column: 3, scope: !18924)
!18942 = !DILocation(line: 156, column: 6, scope: !18924)
!18943 = !DILocation(line: 156, column: 14, scope: !18924)
!18944 = !DILocation(line: 156, column: 20, scope: !18924)
!18945 = !DILocation(line: 157, column: 3, scope: !18924)
!18946 = !DILocation(line: 157, column: 6, scope: !18924)
!18947 = !DILocation(line: 157, column: 20, scope: !18924)
!18948 = !DILocation(line: 158, column: 33, scope: !18924)
!18949 = !DILocation(line: 158, column: 36, scope: !18924)
!18950 = !DILocation(line: 158, column: 42, scope: !18924)
!18951 = !DILocation(line: 158, column: 10, scope: !18924)
!18952 = !DILocation(line: 158, column: 3, scope: !18924)
!18953 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !1458, file: !1458, line: 109, type: !1419, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!18954 = !DILocalVariable(name: "h", arg: 1, scope: !18953, file: !1458, line: 109, type: !1365)
!18955 = !DILocation(line: 109, column: 40, scope: !18953)
!18956 = !DILocalVariable(name: "size", arg: 2, scope: !18953, file: !1458, line: 110, type: !55)
!18957 = !DILocation(line: 110, column: 40, scope: !18953)
!18958 = !DILocalVariable(name: "alignment", arg: 3, scope: !18953, file: !1458, line: 110, type: !55)
!18959 = !DILocation(line: 110, column: 62, scope: !18953)
!18960 = !DILocalVariable(name: "chunk", scope: !18953, file: !1458, line: 112, type: !1371)
!18961 = !DILocation(line: 112, column: 26, scope: !18953)
!18962 = !DILocation(line: 114, column: 7, scope: !18963)
!18963 = distinct !DILexicalBlock(scope: !18953, file: !1458, line: 114, column: 7)
!18964 = !DILocation(line: 114, column: 17, scope: !18963)
!18965 = !DILocation(line: 114, column: 7, scope: !18953)
!18966 = !DILocation(line: 115, column: 15, scope: !18963)
!18967 = !DILocation(line: 115, column: 5, scope: !18963)
!18968 = !DILocation(line: 116, column: 7, scope: !18969)
!18969 = distinct !DILexicalBlock(scope: !18953, file: !1458, line: 116, column: 7)
!18970 = !DILocation(line: 116, column: 12, scope: !18969)
!18971 = !DILocation(line: 116, column: 7, scope: !18953)
!18972 = !DILocalVariable(name: "extra", scope: !18973, file: !1458, line: 127, type: !7)
!18973 = distinct !DILexicalBlock(scope: !18969, file: !1458, line: 118, column: 5)
!18974 = !DILocation(line: 127, column: 11, scope: !18973)
!18975 = !DILocation(line: 130, column: 21, scope: !18973)
!18976 = !DILocation(line: 130, column: 19, scope: !18973)
!18977 = !DILocation(line: 130, column: 14, scope: !18973)
!18978 = !DILocation(line: 130, column: 12, scope: !18973)
!18979 = !DILocation(line: 131, column: 5, scope: !18973)
!18980 = !DILocation(line: 133, column: 19, scope: !18953)
!18981 = !DILocation(line: 133, column: 3, scope: !18953)
!18982 = !DILocation(line: 133, column: 6, scope: !18953)
!18983 = !DILocation(line: 133, column: 17, scope: !18953)
!18984 = !{!3081, !2448, i64 0}
!18985 = !DILocation(line: 134, column: 23, scope: !18953)
!18986 = !DILocation(line: 134, column: 33, scope: !18953)
!18987 = !DILocation(line: 134, column: 3, scope: !18953)
!18988 = !DILocation(line: 134, column: 6, scope: !18953)
!18989 = !DILocation(line: 134, column: 21, scope: !18953)
!18990 = !DILocation(line: 136, column: 37, scope: !18953)
!18991 = !DILocation(line: 136, column: 40, scope: !18953)
!18992 = !DILocation(line: 136, column: 43, scope: !18953)
!18993 = !DILocation(line: 136, column: 22, scope: !18953)
!18994 = !DILocation(line: 136, column: 11, scope: !18953)
!18995 = !DILocation(line: 136, column: 14, scope: !18953)
!18996 = !DILocation(line: 136, column: 20, scope: !18953)
!18997 = !DILocation(line: 136, column: 9, scope: !18953)
!18998 = !DILocation(line: 137, column: 8, scope: !18999)
!18999 = distinct !DILexicalBlock(scope: !18953, file: !1458, line: 137, column: 7)
!19000 = !DILocation(line: 137, column: 7, scope: !18953)
!19001 = !DILocation(line: 138, column: 7, scope: !18999)
!19002 = !DILocation(line: 138, column: 5, scope: !18999)
!19003 = !DILocation(line: 139, column: 35, scope: !18953)
!19004 = !DILocation(line: 139, column: 18, scope: !18953)
!19005 = !DILocation(line: 139, column: 21, scope: !18953)
!19006 = !DILocation(line: 139, column: 33, scope: !18953)
!19007 = !DILocation(line: 139, column: 3, scope: !18953)
!19008 = !DILocation(line: 139, column: 6, scope: !18953)
!19009 = !DILocation(line: 139, column: 16, scope: !18953)
!19010 = !DILocation(line: 141, column: 44, scope: !18953)
!19011 = !DILocation(line: 141, column: 35, scope: !18953)
!19012 = !DILocation(line: 141, column: 52, scope: !18953)
!19013 = !DILocation(line: 141, column: 55, scope: !18953)
!19014 = !DILocation(line: 141, column: 50, scope: !18953)
!19015 = !DILocation(line: 141, column: 20, scope: !18953)
!19016 = !DILocation(line: 141, column: 27, scope: !18953)
!19017 = !DILocation(line: 141, column: 33, scope: !18953)
!19018 = !DILocation(line: 141, column: 3, scope: !18953)
!19019 = !DILocation(line: 141, column: 6, scope: !18953)
!19020 = !DILocation(line: 141, column: 18, scope: !18953)
!19021 = !DILocation(line: 142, column: 3, scope: !18953)
!19022 = !DILocation(line: 142, column: 10, scope: !18953)
!19023 = !DILocation(line: 142, column: 15, scope: !18953)
!19024 = !DILocation(line: 144, column: 3, scope: !18953)
!19025 = !DILocation(line: 144, column: 6, scope: !18953)
!19026 = !DILocation(line: 144, column: 25, scope: !18953)
!19027 = !DILocation(line: 145, column: 3, scope: !18953)
!19028 = !DILocation(line: 145, column: 6, scope: !18953)
!19029 = !DILocation(line: 145, column: 19, scope: !18953)
!19030 = !DILocation(line: 146, column: 3, scope: !18953)
!19031 = distinct !DISubprogram(name: "call_chunkfun", scope: !1458, file: !1458, line: 84, type: !1421, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19032 = !DILocalVariable(name: "h", arg: 1, scope: !19031, file: !1458, line: 84, type: !1365)
!19033 = !DILocation(line: 84, column: 32, scope: !19031)
!19034 = !DILocalVariable(name: "size", arg: 2, scope: !19031, file: !1458, line: 84, type: !55)
!19035 = !DILocation(line: 84, column: 42, scope: !19031)
!19036 = !DILocation(line: 86, column: 7, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !19031, file: !1458, line: 86, column: 7)
!19038 = !DILocation(line: 86, column: 10, scope: !19037)
!19039 = !DILocation(line: 86, column: 7, scope: !19031)
!19040 = !DILocation(line: 87, column: 12, scope: !19037)
!19041 = !DILocation(line: 87, column: 15, scope: !19037)
!19042 = !DILocation(line: 87, column: 24, scope: !19037)
!19043 = !DILocation(line: 87, column: 31, scope: !19037)
!19044 = !DILocation(line: 87, column: 34, scope: !19037)
!19045 = !{!3081, !2287, i64 72}
!19046 = !DILocation(line: 87, column: 45, scope: !19037)
!19047 = !DILocation(line: 87, column: 5, scope: !19037)
!19048 = !DILocation(line: 89, column: 12, scope: !19037)
!19049 = !DILocation(line: 89, column: 15, scope: !19037)
!19050 = !DILocation(line: 89, column: 24, scope: !19037)
!19051 = !DILocation(line: 89, column: 31, scope: !19037)
!19052 = !DILocation(line: 89, column: 5, scope: !19037)
!19053 = !DILocation(line: 90, column: 1, scope: !19031)
!19054 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !1458, file: !1458, line: 162, type: !1409, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19055 = !DILocalVariable(name: "h", arg: 1, scope: !19054, file: !1458, line: 162, type: !1365)
!19056 = !DILocation(line: 162, column: 35, scope: !19054)
!19057 = !DILocalVariable(name: "size", arg: 2, scope: !19054, file: !1458, line: 163, type: !55)
!19058 = !DILocation(line: 163, column: 35, scope: !19054)
!19059 = !DILocalVariable(name: "alignment", arg: 3, scope: !19054, file: !1458, line: 163, type: !55)
!19060 = !DILocation(line: 163, column: 57, scope: !19054)
!19061 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !19054, file: !1458, line: 164, type: !1394)
!19062 = !DILocation(line: 164, column: 27, scope: !19054)
!19063 = !DILocalVariable(name: "freefun", arg: 5, scope: !19054, file: !1458, line: 165, type: !1402)
!19064 = !DILocation(line: 165, column: 26, scope: !19054)
!19065 = !DILocalVariable(name: "arg", arg: 6, scope: !19054, file: !1458, line: 166, type: !53)
!19066 = !DILocation(line: 166, column: 25, scope: !19054)
!19067 = !DILocation(line: 168, column: 23, scope: !19054)
!19068 = !DILocation(line: 168, column: 3, scope: !19054)
!19069 = !DILocation(line: 168, column: 6, scope: !19054)
!19070 = !DILocation(line: 168, column: 15, scope: !19054)
!19071 = !DILocation(line: 168, column: 21, scope: !19054)
!19072 = !DILocation(line: 169, column: 22, scope: !19054)
!19073 = !DILocation(line: 169, column: 3, scope: !19054)
!19074 = !DILocation(line: 169, column: 6, scope: !19054)
!19075 = !DILocation(line: 169, column: 14, scope: !19054)
!19076 = !DILocation(line: 169, column: 20, scope: !19054)
!19077 = !DILocation(line: 170, column: 18, scope: !19054)
!19078 = !DILocation(line: 170, column: 3, scope: !19054)
!19079 = !DILocation(line: 170, column: 6, scope: !19054)
!19080 = !DILocation(line: 170, column: 16, scope: !19054)
!19081 = !DILocation(line: 171, column: 3, scope: !19054)
!19082 = !DILocation(line: 171, column: 6, scope: !19054)
!19083 = !DILocation(line: 171, column: 20, scope: !19054)
!19084 = !DILocation(line: 172, column: 33, scope: !19054)
!19085 = !DILocation(line: 172, column: 36, scope: !19054)
!19086 = !DILocation(line: 172, column: 42, scope: !19054)
!19087 = !DILocation(line: 172, column: 10, scope: !19054)
!19088 = !DILocation(line: 172, column: 3, scope: !19054)
!19089 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !1458, file: !1458, line: 182, type: !1411, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19090 = !DILocalVariable(name: "h", arg: 1, scope: !19089, file: !1458, line: 182, type: !1365)
!19091 = !DILocation(line: 182, column: 36, scope: !19089)
!19092 = !DILocalVariable(name: "length", arg: 2, scope: !19089, file: !1458, line: 182, type: !55)
!19093 = !DILocation(line: 182, column: 55, scope: !19089)
!19094 = !DILocalVariable(name: "old_chunk", scope: !19089, file: !1458, line: 184, type: !1371)
!19095 = !DILocation(line: 184, column: 26, scope: !19089)
!19096 = !DILocation(line: 184, column: 38, scope: !19089)
!19097 = !DILocation(line: 184, column: 41, scope: !19089)
!19098 = !DILocalVariable(name: "new_chunk", scope: !19089, file: !1458, line: 185, type: !1371)
!19099 = !DILocation(line: 185, column: 26, scope: !19089)
!19100 = !DILocalVariable(name: "obj_size", scope: !19089, file: !1458, line: 186, type: !55)
!19101 = !DILocation(line: 186, column: 10, scope: !19089)
!19102 = !DILocation(line: 186, column: 21, scope: !19089)
!19103 = !DILocation(line: 186, column: 24, scope: !19089)
!19104 = !DILocation(line: 186, column: 36, scope: !19089)
!19105 = !DILocation(line: 186, column: 39, scope: !19089)
!19106 = !DILocation(line: 186, column: 34, scope: !19089)
!19107 = !DILocalVariable(name: "object_base", scope: !19089, file: !1458, line: 187, type: !9)
!19108 = !DILocation(line: 187, column: 9, scope: !19089)
!19109 = !DILocalVariable(name: "sum1", scope: !19089, file: !1458, line: 190, type: !55)
!19110 = !DILocation(line: 190, column: 10, scope: !19089)
!19111 = !DILocation(line: 190, column: 17, scope: !19089)
!19112 = !DILocation(line: 190, column: 28, scope: !19089)
!19113 = !DILocation(line: 190, column: 26, scope: !19089)
!19114 = !DILocalVariable(name: "sum2", scope: !19089, file: !1458, line: 191, type: !55)
!19115 = !DILocation(line: 191, column: 10, scope: !19089)
!19116 = !DILocation(line: 191, column: 17, scope: !19089)
!19117 = !DILocation(line: 191, column: 24, scope: !19089)
!19118 = !DILocation(line: 191, column: 27, scope: !19089)
!19119 = !DILocation(line: 191, column: 22, scope: !19089)
!19120 = !DILocalVariable(name: "new_size", scope: !19089, file: !1458, line: 192, type: !55)
!19121 = !DILocation(line: 192, column: 10, scope: !19089)
!19122 = !DILocation(line: 192, column: 21, scope: !19089)
!19123 = !DILocation(line: 192, column: 29, scope: !19089)
!19124 = !DILocation(line: 192, column: 38, scope: !19089)
!19125 = !DILocation(line: 192, column: 26, scope: !19089)
!19126 = !DILocation(line: 192, column: 44, scope: !19089)
!19127 = !DILocation(line: 193, column: 7, scope: !19128)
!19128 = distinct !DILexicalBlock(scope: !19089, file: !1458, line: 193, column: 7)
!19129 = !DILocation(line: 193, column: 18, scope: !19128)
!19130 = !DILocation(line: 193, column: 16, scope: !19128)
!19131 = !DILocation(line: 193, column: 7, scope: !19089)
!19132 = !DILocation(line: 194, column: 16, scope: !19128)
!19133 = !DILocation(line: 194, column: 14, scope: !19128)
!19134 = !DILocation(line: 194, column: 5, scope: !19128)
!19135 = !DILocation(line: 195, column: 7, scope: !19136)
!19136 = distinct !DILexicalBlock(scope: !19089, file: !1458, line: 195, column: 7)
!19137 = !DILocation(line: 195, column: 18, scope: !19136)
!19138 = !DILocation(line: 195, column: 21, scope: !19136)
!19139 = !DILocation(line: 195, column: 16, scope: !19136)
!19140 = !DILocation(line: 195, column: 7, scope: !19089)
!19141 = !DILocation(line: 196, column: 16, scope: !19136)
!19142 = !DILocation(line: 196, column: 19, scope: !19136)
!19143 = !DILocation(line: 196, column: 14, scope: !19136)
!19144 = !DILocation(line: 196, column: 5, scope: !19136)
!19145 = !DILocation(line: 199, column: 7, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19089, file: !1458, line: 199, column: 7)
!19147 = !DILocation(line: 199, column: 19, scope: !19146)
!19148 = !DILocation(line: 199, column: 16, scope: !19146)
!19149 = !DILocation(line: 199, column: 24, scope: !19146)
!19150 = !DILocation(line: 199, column: 27, scope: !19146)
!19151 = !DILocation(line: 199, column: 35, scope: !19146)
!19152 = !DILocation(line: 199, column: 32, scope: !19146)
!19153 = !DILocation(line: 199, column: 7, scope: !19089)
!19154 = !DILocation(line: 200, column: 32, scope: !19146)
!19155 = !DILocation(line: 200, column: 35, scope: !19146)
!19156 = !DILocation(line: 200, column: 17, scope: !19146)
!19157 = !DILocation(line: 200, column: 15, scope: !19146)
!19158 = !DILocation(line: 200, column: 5, scope: !19146)
!19159 = !DILocation(line: 201, column: 8, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19089, file: !1458, line: 201, column: 7)
!19161 = !DILocation(line: 201, column: 7, scope: !19089)
!19162 = !DILocation(line: 202, column: 7, scope: !19160)
!19163 = !DILocation(line: 202, column: 5, scope: !19160)
!19164 = !DILocation(line: 203, column: 14, scope: !19089)
!19165 = !DILocation(line: 203, column: 3, scope: !19089)
!19166 = !DILocation(line: 203, column: 6, scope: !19089)
!19167 = !DILocation(line: 203, column: 12, scope: !19089)
!19168 = !DILocation(line: 204, column: 21, scope: !19089)
!19169 = !DILocation(line: 204, column: 3, scope: !19089)
!19170 = !DILocation(line: 204, column: 14, scope: !19089)
!19171 = !DILocation(line: 204, column: 19, scope: !19089)
!19172 = !DILocation(line: 205, column: 48, scope: !19089)
!19173 = !DILocation(line: 205, column: 39, scope: !19089)
!19174 = !DILocation(line: 205, column: 60, scope: !19089)
!19175 = !DILocation(line: 205, column: 58, scope: !19089)
!19176 = !DILocation(line: 205, column: 22, scope: !19089)
!19177 = !DILocation(line: 205, column: 25, scope: !19089)
!19178 = !DILocation(line: 205, column: 37, scope: !19089)
!19179 = !DILocation(line: 205, column: 3, scope: !19089)
!19180 = !DILocation(line: 205, column: 14, scope: !19089)
!19181 = !DILocation(line: 205, column: 20, scope: !19089)
!19182 = !DILocation(line: 209, column: 5, scope: !19089)
!19183 = !DILocation(line: 208, column: 15, scope: !19089)
!19184 = !DILocation(line: 212, column: 11, scope: !19089)
!19185 = !DILocation(line: 212, column: 24, scope: !19089)
!19186 = !DILocation(line: 212, column: 27, scope: !19089)
!19187 = !DILocation(line: 212, column: 40, scope: !19089)
!19188 = !DILocation(line: 212, column: 3, scope: !19089)
!19189 = !DILocation(line: 217, column: 8, scope: !19190)
!19190 = distinct !DILexicalBlock(scope: !19089, file: !1458, line: 217, column: 7)
!19191 = !DILocation(line: 217, column: 11, scope: !19190)
!19192 = !DILocation(line: 218, column: 7, scope: !19190)
!19193 = !DILocation(line: 218, column: 11, scope: !19190)
!19194 = !DILocation(line: 218, column: 14, scope: !19190)
!19195 = !DILocation(line: 219, column: 14, scope: !19190)
!19196 = !DILocation(line: 219, column: 11, scope: !19190)
!19197 = !DILocation(line: 217, column: 7, scope: !19089)
!19198 = !DILocation(line: 222, column: 25, scope: !19199)
!19199 = distinct !DILexicalBlock(scope: !19190, file: !1458, line: 221, column: 5)
!19200 = !DILocation(line: 222, column: 36, scope: !19199)
!19201 = !DILocation(line: 222, column: 7, scope: !19199)
!19202 = !DILocation(line: 222, column: 18, scope: !19199)
!19203 = !DILocation(line: 222, column: 23, scope: !19199)
!19204 = !DILocation(line: 223, column: 21, scope: !19199)
!19205 = !DILocation(line: 223, column: 24, scope: !19199)
!19206 = !DILocation(line: 223, column: 7, scope: !19199)
!19207 = !DILocation(line: 224, column: 5, scope: !19199)
!19208 = !DILocation(line: 226, column: 20, scope: !19089)
!19209 = !DILocation(line: 226, column: 3, scope: !19089)
!19210 = !DILocation(line: 226, column: 6, scope: !19089)
!19211 = !DILocation(line: 226, column: 18, scope: !19089)
!19212 = !DILocation(line: 227, column: 18, scope: !19089)
!19213 = !DILocation(line: 227, column: 21, scope: !19089)
!19214 = !DILocation(line: 227, column: 35, scope: !19089)
!19215 = !DILocation(line: 227, column: 33, scope: !19089)
!19216 = !DILocation(line: 227, column: 3, scope: !19089)
!19217 = !DILocation(line: 227, column: 6, scope: !19089)
!19218 = !DILocation(line: 227, column: 16, scope: !19089)
!19219 = !DILocation(line: 229, column: 3, scope: !19089)
!19220 = !DILocation(line: 229, column: 6, scope: !19089)
!19221 = !DILocation(line: 229, column: 25, scope: !19089)
!19222 = !DILocation(line: 230, column: 1, scope: !19089)
!19223 = distinct !DISubprogram(name: "call_freefun", scope: !1458, file: !1458, line: 93, type: !1415, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19224 = !DILocalVariable(name: "h", arg: 1, scope: !19223, file: !1458, line: 93, type: !1365)
!19225 = !DILocation(line: 93, column: 31, scope: !19223)
!19226 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !19223, file: !1458, line: 93, type: !53)
!19227 = !DILocation(line: 93, column: 40, scope: !19223)
!19228 = !DILocation(line: 95, column: 7, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19223, file: !1458, line: 95, column: 7)
!19230 = !DILocation(line: 95, column: 10, scope: !19229)
!19231 = !DILocation(line: 95, column: 7, scope: !19223)
!19232 = !DILocation(line: 96, column: 5, scope: !19229)
!19233 = !DILocation(line: 96, column: 8, scope: !19229)
!19234 = !DILocation(line: 96, column: 16, scope: !19229)
!19235 = !DILocation(line: 96, column: 23, scope: !19229)
!19236 = !DILocation(line: 96, column: 26, scope: !19229)
!19237 = !DILocation(line: 96, column: 37, scope: !19229)
!19238 = !DILocation(line: 98, column: 5, scope: !19229)
!19239 = !DILocation(line: 98, column: 8, scope: !19229)
!19240 = !DILocation(line: 98, column: 16, scope: !19229)
!19241 = !DILocation(line: 98, column: 23, scope: !19229)
!19242 = !DILocation(line: 99, column: 1, scope: !19223)
!19243 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !1458, file: !1458, line: 241, type: !1413, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19244 = !DILocalVariable(name: "h", arg: 1, scope: !19243, file: !1458, line: 241, type: !1365)
!19245 = !DILocation(line: 241, column: 39, scope: !19243)
!19246 = !DILocalVariable(name: "obj", arg: 2, scope: !19243, file: !1458, line: 241, type: !53)
!19247 = !DILocation(line: 241, column: 48, scope: !19243)
!19248 = !DILocalVariable(name: "lp", scope: !19243, file: !1458, line: 243, type: !1371)
!19249 = !DILocation(line: 243, column: 26, scope: !19243)
!19250 = !DILocalVariable(name: "plp", scope: !19243, file: !1458, line: 244, type: !1371)
!19251 = !DILocation(line: 244, column: 26, scope: !19243)
!19252 = !DILocation(line: 246, column: 9, scope: !19243)
!19253 = !DILocation(line: 246, column: 13, scope: !19243)
!19254 = !DILocation(line: 246, column: 6, scope: !19243)
!19255 = !DILocation(line: 250, column: 3, scope: !19243)
!19256 = !DILocation(line: 250, column: 10, scope: !19243)
!19257 = !DILocation(line: 250, column: 13, scope: !19243)
!19258 = !DILocation(line: 250, column: 18, scope: !19243)
!19259 = !DILocation(line: 250, column: 31, scope: !19243)
!19260 = !DILocation(line: 250, column: 22, scope: !19243)
!19261 = !DILocation(line: 250, column: 37, scope: !19243)
!19262 = !DILocation(line: 250, column: 34, scope: !19243)
!19263 = !DILocation(line: 250, column: 41, scope: !19243)
!19264 = !DILocation(line: 250, column: 54, scope: !19243)
!19265 = !DILocation(line: 250, column: 59, scope: !19243)
!19266 = !DILocation(line: 250, column: 67, scope: !19243)
!19267 = !DILocation(line: 250, column: 65, scope: !19243)
!19268 = !DILocation(line: 0, scope: !19243)
!19269 = !DILocation(line: 252, column: 13, scope: !19270)
!19270 = distinct !DILexicalBlock(scope: !19243, file: !1458, line: 251, column: 5)
!19271 = !DILocation(line: 252, column: 17, scope: !19270)
!19272 = !DILocation(line: 252, column: 11, scope: !19270)
!19273 = !DILocation(line: 253, column: 12, scope: !19270)
!19274 = !DILocation(line: 253, column: 10, scope: !19270)
!19275 = distinct !{!19275, !19255, !19276}
!19276 = !DILocation(line: 254, column: 5, scope: !19243)
!19277 = !DILocation(line: 255, column: 10, scope: !19243)
!19278 = !DILocation(line: 255, column: 13, scope: !19243)
!19279 = !DILocation(line: 255, column: 3, scope: !19243)
!19280 = distinct !DISubprogram(name: "_obstack_free", scope: !1458, file: !1458, line: 262, type: !1415, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19281 = !DILocalVariable(name: "h", arg: 1, scope: !19280, file: !1458, line: 262, type: !1365)
!19282 = !DILocation(line: 262, column: 32, scope: !19280)
!19283 = !DILocalVariable(name: "obj", arg: 2, scope: !19280, file: !1458, line: 262, type: !53)
!19284 = !DILocation(line: 262, column: 41, scope: !19280)
!19285 = !DILocalVariable(name: "lp", scope: !19280, file: !1458, line: 264, type: !1371)
!19286 = !DILocation(line: 264, column: 26, scope: !19280)
!19287 = !DILocalVariable(name: "plp", scope: !19280, file: !1458, line: 265, type: !1371)
!19288 = !DILocation(line: 265, column: 26, scope: !19280)
!19289 = !DILocation(line: 267, column: 8, scope: !19280)
!19290 = !DILocation(line: 267, column: 11, scope: !19280)
!19291 = !DILocation(line: 267, column: 6, scope: !19280)
!19292 = !DILocation(line: 271, column: 3, scope: !19280)
!19293 = !DILocation(line: 271, column: 10, scope: !19280)
!19294 = !DILocation(line: 271, column: 13, scope: !19280)
!19295 = !DILocation(line: 271, column: 18, scope: !19280)
!19296 = !DILocation(line: 271, column: 31, scope: !19280)
!19297 = !DILocation(line: 271, column: 22, scope: !19280)
!19298 = !DILocation(line: 271, column: 37, scope: !19280)
!19299 = !DILocation(line: 271, column: 34, scope: !19280)
!19300 = !DILocation(line: 271, column: 41, scope: !19280)
!19301 = !DILocation(line: 271, column: 54, scope: !19280)
!19302 = !DILocation(line: 271, column: 59, scope: !19280)
!19303 = !DILocation(line: 271, column: 67, scope: !19280)
!19304 = !DILocation(line: 271, column: 65, scope: !19280)
!19305 = !DILocation(line: 0, scope: !19280)
!19306 = !DILocation(line: 273, column: 13, scope: !19307)
!19307 = distinct !DILexicalBlock(scope: !19280, file: !1458, line: 272, column: 5)
!19308 = !DILocation(line: 273, column: 17, scope: !19307)
!19309 = !DILocation(line: 273, column: 11, scope: !19307)
!19310 = !DILocation(line: 274, column: 21, scope: !19307)
!19311 = !DILocation(line: 274, column: 24, scope: !19307)
!19312 = !DILocation(line: 274, column: 7, scope: !19307)
!19313 = !DILocation(line: 275, column: 12, scope: !19307)
!19314 = !DILocation(line: 275, column: 10, scope: !19307)
!19315 = !DILocation(line: 278, column: 7, scope: !19307)
!19316 = !DILocation(line: 278, column: 10, scope: !19307)
!19317 = !DILocation(line: 278, column: 29, scope: !19307)
!19318 = distinct !{!19318, !19292, !19319}
!19319 = !DILocation(line: 279, column: 5, scope: !19280)
!19320 = !DILocation(line: 280, column: 7, scope: !19321)
!19321 = distinct !DILexicalBlock(scope: !19280, file: !1458, line: 280, column: 7)
!19322 = !DILocation(line: 280, column: 7, scope: !19280)
!19323 = !DILocation(line: 282, column: 49, scope: !19324)
!19324 = distinct !DILexicalBlock(scope: !19321, file: !1458, line: 281, column: 5)
!19325 = !DILocation(line: 282, column: 24, scope: !19324)
!19326 = !DILocation(line: 282, column: 27, scope: !19324)
!19327 = !DILocation(line: 282, column: 37, scope: !19324)
!19328 = !DILocation(line: 282, column: 7, scope: !19324)
!19329 = !DILocation(line: 282, column: 10, scope: !19324)
!19330 = !DILocation(line: 282, column: 22, scope: !19324)
!19331 = !DILocation(line: 283, column: 24, scope: !19324)
!19332 = !DILocation(line: 283, column: 28, scope: !19324)
!19333 = !DILocation(line: 283, column: 7, scope: !19324)
!19334 = !DILocation(line: 283, column: 10, scope: !19324)
!19335 = !DILocation(line: 283, column: 22, scope: !19324)
!19336 = !DILocation(line: 284, column: 18, scope: !19324)
!19337 = !DILocation(line: 284, column: 7, scope: !19324)
!19338 = !DILocation(line: 284, column: 10, scope: !19324)
!19339 = !DILocation(line: 284, column: 16, scope: !19324)
!19340 = !DILocation(line: 285, column: 5, scope: !19324)
!19341 = !DILocation(line: 286, column: 12, scope: !19342)
!19342 = distinct !DILexicalBlock(scope: !19321, file: !1458, line: 286, column: 12)
!19343 = !DILocation(line: 286, column: 16, scope: !19342)
!19344 = !DILocation(line: 286, column: 12, scope: !19321)
!19345 = !DILocation(line: 288, column: 5, scope: !19342)
!19346 = !DILocation(line: 289, column: 1, scope: !19280)
!19347 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !1458, file: !1458, line: 292, type: !1417, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !313)
!19348 = !DILocalVariable(name: "h", arg: 1, scope: !19347, file: !1458, line: 292, type: !1365)
!19349 = !DILocation(line: 292, column: 39, scope: !19347)
!19350 = !DILocalVariable(name: "lp", scope: !19347, file: !1458, line: 294, type: !1371)
!19351 = !DILocation(line: 294, column: 26, scope: !19347)
!19352 = !DILocalVariable(name: "nbytes", scope: !19347, file: !1458, line: 295, type: !55)
!19353 = !DILocation(line: 295, column: 19, scope: !19347)
!19354 = !DILocation(line: 297, column: 13, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !19347, file: !1458, line: 297, column: 3)
!19356 = !DILocation(line: 297, column: 16, scope: !19355)
!19357 = !DILocation(line: 297, column: 11, scope: !19355)
!19358 = !DILocation(line: 297, column: 8, scope: !19355)
!19359 = !DILocation(line: 297, column: 23, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19355, file: !1458, line: 297, column: 3)
!19361 = !DILocation(line: 297, column: 26, scope: !19360)
!19362 = !DILocation(line: 297, column: 3, scope: !19355)
!19363 = !DILocation(line: 299, column: 17, scope: !19364)
!19364 = distinct !DILexicalBlock(scope: !19360, file: !1458, line: 298, column: 5)
!19365 = !DILocation(line: 299, column: 21, scope: !19364)
!19366 = !DILocation(line: 299, column: 38, scope: !19364)
!19367 = !DILocation(line: 299, column: 29, scope: !19364)
!19368 = !DILocation(line: 299, column: 27, scope: !19364)
!19369 = !DILocation(line: 299, column: 14, scope: !19364)
!19370 = !DILocation(line: 300, column: 5, scope: !19364)
!19371 = !DILocation(line: 297, column: 37, scope: !19360)
!19372 = !DILocation(line: 297, column: 41, scope: !19360)
!19373 = !DILocation(line: 297, column: 35, scope: !19360)
!19374 = !DILocation(line: 297, column: 3, scope: !19360)
!19375 = distinct !{!19375, !19362, !19376}
!19376 = !DILocation(line: 300, column: 5, scope: !19355)
!19377 = !DILocation(line: 301, column: 10, scope: !19347)
!19378 = !DILocation(line: 301, column: 3, scope: !19347)
!19379 = distinct !DISubprogram(name: "rotl64", scope: !19380, file: !19380, line: 39, type: !2127, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19380 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/software/coreutils-8.31")
!19381 = !DILocalVariable(name: "x", arg: 1, scope: !19379, file: !19380, line: 39, type: !2129)
!19382 = !DILocation(line: 39, column: 18, scope: !19379)
!19383 = !DILocalVariable(name: "n", arg: 2, scope: !19379, file: !19380, line: 39, type: !7)
!19384 = !DILocation(line: 39, column: 25, scope: !19379)
!19385 = !DILocation(line: 41, column: 12, scope: !19379)
!19386 = !DILocation(line: 41, column: 17, scope: !19379)
!19387 = !DILocation(line: 41, column: 14, scope: !19379)
!19388 = !DILocation(line: 41, column: 23, scope: !19379)
!19389 = !DILocation(line: 41, column: 34, scope: !19379)
!19390 = !DILocation(line: 41, column: 32, scope: !19379)
!19391 = !DILocation(line: 41, column: 25, scope: !19379)
!19392 = !DILocation(line: 41, column: 20, scope: !19379)
!19393 = !DILocation(line: 41, column: 3, scope: !19379)
!19394 = distinct !DISubprogram(name: "rotr64", scope: !19380, file: !19380, line: 48, type: !2127, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19395 = !DILocalVariable(name: "x", arg: 1, scope: !19394, file: !19380, line: 48, type: !2129)
!19396 = !DILocation(line: 48, column: 18, scope: !19394)
!19397 = !DILocalVariable(name: "n", arg: 2, scope: !19394, file: !19380, line: 48, type: !7)
!19398 = !DILocation(line: 48, column: 25, scope: !19394)
!19399 = !DILocation(line: 50, column: 12, scope: !19394)
!19400 = !DILocation(line: 50, column: 17, scope: !19394)
!19401 = !DILocation(line: 50, column: 14, scope: !19394)
!19402 = !DILocation(line: 50, column: 23, scope: !19394)
!19403 = !DILocation(line: 50, column: 34, scope: !19394)
!19404 = !DILocation(line: 50, column: 32, scope: !19394)
!19405 = !DILocation(line: 50, column: 25, scope: !19394)
!19406 = !DILocation(line: 50, column: 20, scope: !19394)
!19407 = !DILocation(line: 50, column: 3, scope: !19394)
!19408 = distinct !DISubprogram(name: "rotl32", scope: !19380, file: !19380, line: 58, type: !2130, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19409 = !DILocalVariable(name: "x", arg: 1, scope: !19408, file: !19380, line: 58, type: !495)
!19410 = !DILocation(line: 58, column: 18, scope: !19408)
!19411 = !DILocalVariable(name: "n", arg: 2, scope: !19408, file: !19380, line: 58, type: !7)
!19412 = !DILocation(line: 58, column: 25, scope: !19408)
!19413 = !DILocation(line: 60, column: 12, scope: !19408)
!19414 = !DILocation(line: 60, column: 17, scope: !19408)
!19415 = !DILocation(line: 60, column: 14, scope: !19408)
!19416 = !DILocation(line: 60, column: 23, scope: !19408)
!19417 = !DILocation(line: 60, column: 34, scope: !19408)
!19418 = !DILocation(line: 60, column: 32, scope: !19408)
!19419 = !DILocation(line: 60, column: 25, scope: !19408)
!19420 = !DILocation(line: 60, column: 20, scope: !19408)
!19421 = !DILocation(line: 60, column: 3, scope: !19408)
!19422 = distinct !DISubprogram(name: "rotr32", scope: !19380, file: !19380, line: 67, type: !2130, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19423 = !DILocalVariable(name: "x", arg: 1, scope: !19422, file: !19380, line: 67, type: !495)
!19424 = !DILocation(line: 67, column: 18, scope: !19422)
!19425 = !DILocalVariable(name: "n", arg: 2, scope: !19422, file: !19380, line: 67, type: !7)
!19426 = !DILocation(line: 67, column: 25, scope: !19422)
!19427 = !DILocation(line: 69, column: 12, scope: !19422)
!19428 = !DILocation(line: 69, column: 17, scope: !19422)
!19429 = !DILocation(line: 69, column: 14, scope: !19422)
!19430 = !DILocation(line: 69, column: 23, scope: !19422)
!19431 = !DILocation(line: 69, column: 34, scope: !19422)
!19432 = !DILocation(line: 69, column: 32, scope: !19422)
!19433 = !DILocation(line: 69, column: 25, scope: !19422)
!19434 = !DILocation(line: 69, column: 20, scope: !19422)
!19435 = !DILocation(line: 69, column: 3, scope: !19422)
!19436 = distinct !DISubprogram(name: "rotl_sz", scope: !19380, file: !19380, line: 76, type: !2132, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19437 = !DILocalVariable(name: "x", arg: 1, scope: !19436, file: !19380, line: 76, type: !55)
!19438 = !DILocation(line: 76, column: 17, scope: !19436)
!19439 = !DILocalVariable(name: "n", arg: 2, scope: !19436, file: !19380, line: 76, type: !7)
!19440 = !DILocation(line: 76, column: 24, scope: !19436)
!19441 = !DILocation(line: 78, column: 12, scope: !19436)
!19442 = !DILocation(line: 78, column: 17, scope: !19436)
!19443 = !DILocation(line: 78, column: 14, scope: !19436)
!19444 = !DILocation(line: 78, column: 23, scope: !19436)
!19445 = !DILocation(line: 78, column: 53, scope: !19436)
!19446 = !DILocation(line: 78, column: 51, scope: !19436)
!19447 = !DILocation(line: 78, column: 25, scope: !19436)
!19448 = !DILocation(line: 78, column: 20, scope: !19436)
!19449 = !DILocation(line: 78, column: 3, scope: !19436)
!19450 = distinct !DISubprogram(name: "rotr_sz", scope: !19380, file: !19380, line: 85, type: !2132, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19451 = !DILocalVariable(name: "x", arg: 1, scope: !19450, file: !19380, line: 85, type: !55)
!19452 = !DILocation(line: 85, column: 17, scope: !19450)
!19453 = !DILocalVariable(name: "n", arg: 2, scope: !19450, file: !19380, line: 85, type: !7)
!19454 = !DILocation(line: 85, column: 24, scope: !19450)
!19455 = !DILocation(line: 87, column: 12, scope: !19450)
!19456 = !DILocation(line: 87, column: 17, scope: !19450)
!19457 = !DILocation(line: 87, column: 14, scope: !19450)
!19458 = !DILocation(line: 87, column: 23, scope: !19450)
!19459 = !DILocation(line: 87, column: 53, scope: !19450)
!19460 = !DILocation(line: 87, column: 51, scope: !19450)
!19461 = !DILocation(line: 87, column: 25, scope: !19450)
!19462 = !DILocation(line: 87, column: 20, scope: !19450)
!19463 = !DILocation(line: 87, column: 3, scope: !19450)
!19464 = distinct !DISubprogram(name: "rotl16", scope: !19380, file: !19380, line: 96, type: !2134, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19465 = !DILocalVariable(name: "x", arg: 1, scope: !19464, file: !19380, line: 96, type: !2136)
!19466 = !DILocation(line: 96, column: 18, scope: !19464)
!19467 = !DILocalVariable(name: "n", arg: 2, scope: !19464, file: !19380, line: 96, type: !7)
!19468 = !DILocation(line: 96, column: 25, scope: !19464)
!19469 = !DILocation(line: 98, column: 12, scope: !19464)
!19470 = !DILocation(line: 98, column: 17, scope: !19464)
!19471 = !DILocation(line: 98, column: 14, scope: !19464)
!19472 = !DILocation(line: 98, column: 23, scope: !19464)
!19473 = !DILocation(line: 98, column: 34, scope: !19464)
!19474 = !DILocation(line: 98, column: 32, scope: !19464)
!19475 = !DILocation(line: 98, column: 25, scope: !19464)
!19476 = !DILocation(line: 98, column: 20, scope: !19464)
!19477 = !DILocation(line: 98, column: 39, scope: !19464)
!19478 = !DILocation(line: 98, column: 10, scope: !19464)
!19479 = !DILocation(line: 98, column: 3, scope: !19464)
!19480 = distinct !DISubprogram(name: "rotr16", scope: !19380, file: !19380, line: 107, type: !2134, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19481 = !DILocalVariable(name: "x", arg: 1, scope: !19480, file: !19380, line: 107, type: !2136)
!19482 = !DILocation(line: 107, column: 18, scope: !19480)
!19483 = !DILocalVariable(name: "n", arg: 2, scope: !19480, file: !19380, line: 107, type: !7)
!19484 = !DILocation(line: 107, column: 25, scope: !19480)
!19485 = !DILocation(line: 109, column: 12, scope: !19480)
!19486 = !DILocation(line: 109, column: 17, scope: !19480)
!19487 = !DILocation(line: 109, column: 14, scope: !19480)
!19488 = !DILocation(line: 109, column: 23, scope: !19480)
!19489 = !DILocation(line: 109, column: 34, scope: !19480)
!19490 = !DILocation(line: 109, column: 32, scope: !19480)
!19491 = !DILocation(line: 109, column: 25, scope: !19480)
!19492 = !DILocation(line: 109, column: 20, scope: !19480)
!19493 = !DILocation(line: 109, column: 39, scope: !19480)
!19494 = !DILocation(line: 109, column: 10, scope: !19480)
!19495 = !DILocation(line: 109, column: 3, scope: !19480)
!19496 = distinct !DISubprogram(name: "rotl8", scope: !19380, file: !19380, line: 118, type: !2138, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19497 = !DILocalVariable(name: "x", arg: 1, scope: !19496, file: !19380, line: 118, type: !2140)
!19498 = !DILocation(line: 118, column: 16, scope: !19496)
!19499 = !DILocalVariable(name: "n", arg: 2, scope: !19496, file: !19380, line: 118, type: !7)
!19500 = !DILocation(line: 118, column: 23, scope: !19496)
!19501 = !DILocation(line: 120, column: 12, scope: !19496)
!19502 = !DILocation(line: 120, column: 17, scope: !19496)
!19503 = !DILocation(line: 120, column: 14, scope: !19496)
!19504 = !DILocation(line: 120, column: 23, scope: !19496)
!19505 = !DILocation(line: 120, column: 33, scope: !19496)
!19506 = !DILocation(line: 120, column: 31, scope: !19496)
!19507 = !DILocation(line: 120, column: 25, scope: !19496)
!19508 = !DILocation(line: 120, column: 20, scope: !19496)
!19509 = !DILocation(line: 120, column: 38, scope: !19496)
!19510 = !DILocation(line: 120, column: 10, scope: !19496)
!19511 = !DILocation(line: 120, column: 3, scope: !19496)
!19512 = distinct !DISubprogram(name: "rotr8", scope: !19380, file: !19380, line: 129, type: !2138, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !313)
!19513 = !DILocalVariable(name: "x", arg: 1, scope: !19512, file: !19380, line: 129, type: !2140)
!19514 = !DILocation(line: 129, column: 16, scope: !19512)
!19515 = !DILocalVariable(name: "n", arg: 2, scope: !19512, file: !19380, line: 129, type: !7)
!19516 = !DILocation(line: 129, column: 23, scope: !19512)
!19517 = !DILocation(line: 131, column: 12, scope: !19512)
!19518 = !DILocation(line: 131, column: 17, scope: !19512)
!19519 = !DILocation(line: 131, column: 14, scope: !19512)
!19520 = !DILocation(line: 131, column: 23, scope: !19512)
!19521 = !DILocation(line: 131, column: 33, scope: !19512)
!19522 = !DILocation(line: 131, column: 31, scope: !19512)
!19523 = !DILocation(line: 131, column: 25, scope: !19512)
!19524 = !DILocation(line: 131, column: 20, scope: !19512)
!19525 = !DILocation(line: 131, column: 38, scope: !19512)
!19526 = !DILocation(line: 131, column: 10, scope: !19512)
!19527 = !DILocation(line: 131, column: 3, scope: !19512)
!19528 = distinct !DISubprogram(name: "c_isalnum", scope: !19529, file: !19529, line: 169, type: !1524, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19529 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/software/coreutils-8.31")
!19530 = !DILocalVariable(name: "c", arg: 1, scope: !19528, file: !19529, line: 169, type: !7)
!19531 = !DILocation(line: 169, column: 16, scope: !19528)
!19532 = !DILocation(line: 171, column: 11, scope: !19528)
!19533 = !DILocation(line: 171, column: 3, scope: !19528)
!19534 = !DILocation(line: 176, column: 7, scope: !19535)
!19535 = distinct !DILexicalBlock(scope: !19528, file: !19529, line: 172, column: 5)
!19536 = !DILocation(line: 178, column: 7, scope: !19535)
!19537 = !DILocation(line: 180, column: 1, scope: !19528)
!19538 = distinct !DISubprogram(name: "c_isalpha", scope: !19529, file: !19529, line: 183, type: !1524, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19539 = !DILocalVariable(name: "c", arg: 1, scope: !19538, file: !19529, line: 183, type: !7)
!19540 = !DILocation(line: 183, column: 16, scope: !19538)
!19541 = !DILocation(line: 185, column: 11, scope: !19538)
!19542 = !DILocation(line: 185, column: 3, scope: !19538)
!19543 = !DILocation(line: 189, column: 7, scope: !19544)
!19544 = distinct !DILexicalBlock(scope: !19538, file: !19529, line: 186, column: 5)
!19545 = !DILocation(line: 191, column: 7, scope: !19544)
!19546 = !DILocation(line: 193, column: 1, scope: !19538)
!19547 = distinct !DISubprogram(name: "c_isascii", scope: !19529, file: !19529, line: 198, type: !1524, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19548 = !DILocalVariable(name: "c", arg: 1, scope: !19547, file: !19529, line: 198, type: !7)
!19549 = !DILocation(line: 198, column: 16, scope: !19547)
!19550 = !DILocation(line: 200, column: 11, scope: !19547)
!19551 = !DILocation(line: 200, column: 3, scope: !19547)
!19552 = !DILocation(line: 208, column: 7, scope: !19553)
!19553 = distinct !DILexicalBlock(scope: !19547, file: !19529, line: 201, column: 5)
!19554 = !DILocation(line: 210, column: 7, scope: !19553)
!19555 = !DILocation(line: 212, column: 1, scope: !19547)
!19556 = distinct !DISubprogram(name: "c_isblank", scope: !19529, file: !19529, line: 215, type: !1524, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19557 = !DILocalVariable(name: "c", arg: 1, scope: !19556, file: !19529, line: 215, type: !7)
!19558 = !DILocation(line: 215, column: 16, scope: !19556)
!19559 = !DILocation(line: 217, column: 10, scope: !19556)
!19560 = !DILocation(line: 217, column: 12, scope: !19556)
!19561 = !DILocation(line: 217, column: 19, scope: !19556)
!19562 = !DILocation(line: 217, column: 22, scope: !19556)
!19563 = !DILocation(line: 217, column: 24, scope: !19556)
!19564 = !DILocation(line: 217, column: 3, scope: !19556)
!19565 = distinct !DISubprogram(name: "c_iscntrl", scope: !19529, file: !19529, line: 221, type: !1524, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19566 = !DILocalVariable(name: "c", arg: 1, scope: !19565, file: !19529, line: 221, type: !7)
!19567 = !DILocation(line: 221, column: 16, scope: !19565)
!19568 = !DILocation(line: 223, column: 11, scope: !19565)
!19569 = !DILocation(line: 223, column: 3, scope: !19565)
!19570 = !DILocation(line: 226, column: 7, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19565, file: !19529, line: 224, column: 5)
!19572 = !DILocation(line: 228, column: 7, scope: !19571)
!19573 = !DILocation(line: 230, column: 1, scope: !19565)
!19574 = distinct !DISubprogram(name: "c_isdigit", scope: !19529, file: !19529, line: 233, type: !1524, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19575 = !DILocalVariable(name: "c", arg: 1, scope: !19574, file: !19529, line: 233, type: !7)
!19576 = !DILocation(line: 233, column: 16, scope: !19574)
!19577 = !DILocation(line: 235, column: 11, scope: !19574)
!19578 = !DILocation(line: 235, column: 3, scope: !19574)
!19579 = !DILocation(line: 238, column: 7, scope: !19580)
!19580 = distinct !DILexicalBlock(scope: !19574, file: !19529, line: 236, column: 5)
!19581 = !DILocation(line: 240, column: 7, scope: !19580)
!19582 = !DILocation(line: 242, column: 1, scope: !19574)
!19583 = distinct !DISubprogram(name: "c_isgraph", scope: !19529, file: !19529, line: 245, type: !1524, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19584 = !DILocalVariable(name: "c", arg: 1, scope: !19583, file: !19529, line: 245, type: !7)
!19585 = !DILocation(line: 245, column: 16, scope: !19583)
!19586 = !DILocation(line: 247, column: 11, scope: !19583)
!19587 = !DILocation(line: 247, column: 3, scope: !19583)
!19588 = !DILocation(line: 253, column: 7, scope: !19589)
!19589 = distinct !DILexicalBlock(scope: !19583, file: !19529, line: 248, column: 5)
!19590 = !DILocation(line: 255, column: 7, scope: !19589)
!19591 = !DILocation(line: 257, column: 1, scope: !19583)
!19592 = distinct !DISubprogram(name: "c_islower", scope: !19529, file: !19529, line: 260, type: !1524, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19593 = !DILocalVariable(name: "c", arg: 1, scope: !19592, file: !19529, line: 260, type: !7)
!19594 = !DILocation(line: 260, column: 16, scope: !19592)
!19595 = !DILocation(line: 262, column: 11, scope: !19592)
!19596 = !DILocation(line: 262, column: 3, scope: !19592)
!19597 = !DILocation(line: 265, column: 7, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19592, file: !19529, line: 263, column: 5)
!19599 = !DILocation(line: 267, column: 7, scope: !19598)
!19600 = !DILocation(line: 269, column: 1, scope: !19592)
!19601 = distinct !DISubprogram(name: "c_isprint", scope: !19529, file: !19529, line: 272, type: !1524, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19602 = !DILocalVariable(name: "c", arg: 1, scope: !19601, file: !19529, line: 272, type: !7)
!19603 = !DILocation(line: 272, column: 16, scope: !19601)
!19604 = !DILocation(line: 274, column: 11, scope: !19601)
!19605 = !DILocation(line: 274, column: 3, scope: !19601)
!19606 = !DILocation(line: 281, column: 7, scope: !19607)
!19607 = distinct !DILexicalBlock(scope: !19601, file: !19529, line: 275, column: 5)
!19608 = !DILocation(line: 283, column: 7, scope: !19607)
!19609 = !DILocation(line: 285, column: 1, scope: !19601)
!19610 = distinct !DISubprogram(name: "c_ispunct", scope: !19529, file: !19529, line: 288, type: !1524, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19611 = !DILocalVariable(name: "c", arg: 1, scope: !19610, file: !19529, line: 288, type: !7)
!19612 = !DILocation(line: 288, column: 16, scope: !19610)
!19613 = !DILocation(line: 290, column: 11, scope: !19610)
!19614 = !DILocation(line: 290, column: 3, scope: !19610)
!19615 = !DILocation(line: 293, column: 7, scope: !19616)
!19616 = distinct !DILexicalBlock(scope: !19610, file: !19529, line: 291, column: 5)
!19617 = !DILocation(line: 295, column: 7, scope: !19616)
!19618 = !DILocation(line: 297, column: 1, scope: !19610)
!19619 = distinct !DISubprogram(name: "c_isspace", scope: !19529, file: !19529, line: 300, type: !1524, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19620 = !DILocalVariable(name: "c", arg: 1, scope: !19619, file: !19529, line: 300, type: !7)
!19621 = !DILocation(line: 300, column: 16, scope: !19619)
!19622 = !DILocation(line: 302, column: 11, scope: !19619)
!19623 = !DILocation(line: 302, column: 3, scope: !19619)
!19624 = !DILocation(line: 305, column: 7, scope: !19625)
!19625 = distinct !DILexicalBlock(scope: !19619, file: !19529, line: 303, column: 5)
!19626 = !DILocation(line: 307, column: 7, scope: !19625)
!19627 = !DILocation(line: 309, column: 1, scope: !19619)
!19628 = distinct !DISubprogram(name: "c_isupper", scope: !19529, file: !19529, line: 312, type: !1524, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19629 = !DILocalVariable(name: "c", arg: 1, scope: !19628, file: !19529, line: 312, type: !7)
!19630 = !DILocation(line: 312, column: 16, scope: !19628)
!19631 = !DILocation(line: 314, column: 11, scope: !19628)
!19632 = !DILocation(line: 314, column: 3, scope: !19628)
!19633 = !DILocation(line: 317, column: 7, scope: !19634)
!19634 = distinct !DILexicalBlock(scope: !19628, file: !19529, line: 315, column: 5)
!19635 = !DILocation(line: 319, column: 7, scope: !19634)
!19636 = !DILocation(line: 321, column: 1, scope: !19628)
!19637 = distinct !DISubprogram(name: "c_isxdigit", scope: !19529, file: !19529, line: 324, type: !1524, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19638 = !DILocalVariable(name: "c", arg: 1, scope: !19637, file: !19529, line: 324, type: !7)
!19639 = !DILocation(line: 324, column: 17, scope: !19637)
!19640 = !DILocation(line: 326, column: 11, scope: !19637)
!19641 = !DILocation(line: 326, column: 3, scope: !19637)
!19642 = !DILocation(line: 330, column: 7, scope: !19643)
!19643 = distinct !DILexicalBlock(scope: !19637, file: !19529, line: 327, column: 5)
!19644 = !DILocation(line: 332, column: 7, scope: !19643)
!19645 = !DILocation(line: 334, column: 1, scope: !19637)
!19646 = distinct !DISubprogram(name: "c_tolower", scope: !19529, file: !19529, line: 337, type: !1846, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19647 = !DILocalVariable(name: "c", arg: 1, scope: !19646, file: !19529, line: 337, type: !7)
!19648 = !DILocation(line: 337, column: 16, scope: !19646)
!19649 = !DILocation(line: 339, column: 11, scope: !19646)
!19650 = !DILocation(line: 339, column: 3, scope: !19646)
!19651 = !DILocation(line: 342, column: 14, scope: !19652)
!19652 = distinct !DILexicalBlock(scope: !19646, file: !19529, line: 340, column: 5)
!19653 = !DILocation(line: 342, column: 16, scope: !19652)
!19654 = !DILocation(line: 342, column: 22, scope: !19652)
!19655 = !DILocation(line: 342, column: 7, scope: !19652)
!19656 = !DILocation(line: 344, column: 14, scope: !19652)
!19657 = !DILocation(line: 344, column: 7, scope: !19652)
!19658 = !DILocation(line: 346, column: 1, scope: !19646)
!19659 = distinct !DISubprogram(name: "c_toupper", scope: !19529, file: !19529, line: 349, type: !1846, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2142, retainedNodes: !313)
!19660 = !DILocalVariable(name: "c", arg: 1, scope: !19659, file: !19529, line: 349, type: !7)
!19661 = !DILocation(line: 349, column: 16, scope: !19659)
!19662 = !DILocation(line: 351, column: 11, scope: !19659)
!19663 = !DILocation(line: 351, column: 3, scope: !19659)
!19664 = !DILocation(line: 354, column: 14, scope: !19665)
!19665 = distinct !DILexicalBlock(scope: !19659, file: !19529, line: 352, column: 5)
!19666 = !DILocation(line: 354, column: 16, scope: !19665)
!19667 = !DILocation(line: 354, column: 22, scope: !19665)
!19668 = !DILocation(line: 354, column: 7, scope: !19665)
!19669 = !DILocation(line: 356, column: 14, scope: !19665)
!19670 = !DILocation(line: 356, column: 7, scope: !19665)
!19671 = !DILocation(line: 358, column: 1, scope: !19659)
!19672 = distinct !DISubprogram(name: "c_strcasecmp", scope: !19673, file: !19673, line: 27, type: !481, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2145, retainedNodes: !313)
!19673 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19674 = !DILocalVariable(name: "s1", arg: 1, scope: !19672, file: !19673, line: 27, type: !88)
!19675 = !DILocation(line: 27, column: 27, scope: !19672)
!19676 = !DILocalVariable(name: "s2", arg: 2, scope: !19672, file: !19673, line: 27, type: !88)
!19677 = !DILocation(line: 27, column: 43, scope: !19672)
!19678 = !DILocalVariable(name: "p1", scope: !19672, file: !19673, line: 29, type: !2148)
!19679 = !DILocation(line: 29, column: 33, scope: !19672)
!19680 = !DILocation(line: 29, column: 62, scope: !19672)
!19681 = !DILocalVariable(name: "p2", scope: !19672, file: !19673, line: 30, type: !2148)
!19682 = !DILocation(line: 30, column: 33, scope: !19672)
!19683 = !DILocation(line: 30, column: 62, scope: !19672)
!19684 = !DILocalVariable(name: "c1", scope: !19672, file: !19673, line: 31, type: !321)
!19685 = !DILocation(line: 31, column: 17, scope: !19672)
!19686 = !DILocalVariable(name: "c2", scope: !19672, file: !19673, line: 31, type: !321)
!19687 = !DILocation(line: 31, column: 21, scope: !19672)
!19688 = !DILocation(line: 33, column: 7, scope: !19689)
!19689 = distinct !DILexicalBlock(scope: !19672, file: !19673, line: 33, column: 7)
!19690 = !DILocation(line: 33, column: 13, scope: !19689)
!19691 = !DILocation(line: 33, column: 10, scope: !19689)
!19692 = !DILocation(line: 33, column: 7, scope: !19672)
!19693 = !DILocation(line: 34, column: 5, scope: !19689)
!19694 = !DILocation(line: 36, column: 3, scope: !19672)
!19695 = !DILocation(line: 38, column: 24, scope: !19696)
!19696 = distinct !DILexicalBlock(scope: !19672, file: !19673, line: 37, column: 5)
!19697 = !DILocation(line: 38, column: 23, scope: !19696)
!19698 = !DILocation(line: 38, column: 12, scope: !19696)
!19699 = !DILocation(line: 38, column: 10, scope: !19696)
!19700 = !DILocation(line: 39, column: 24, scope: !19696)
!19701 = !DILocation(line: 39, column: 23, scope: !19696)
!19702 = !DILocation(line: 39, column: 12, scope: !19696)
!19703 = !DILocation(line: 39, column: 10, scope: !19696)
!19704 = !DILocation(line: 41, column: 11, scope: !19705)
!19705 = distinct !DILexicalBlock(scope: !19696, file: !19673, line: 41, column: 11)
!19706 = !DILocation(line: 41, column: 14, scope: !19705)
!19707 = !DILocation(line: 41, column: 11, scope: !19696)
!19708 = !DILocation(line: 42, column: 9, scope: !19705)
!19709 = !DILocation(line: 44, column: 7, scope: !19696)
!19710 = !DILocation(line: 45, column: 7, scope: !19696)
!19711 = !DILocation(line: 46, column: 5, scope: !19696)
!19712 = !DILocation(line: 47, column: 10, scope: !19672)
!19713 = !DILocation(line: 47, column: 16, scope: !19672)
!19714 = !DILocation(line: 47, column: 13, scope: !19672)
!19715 = distinct !{!19715, !19694, !19716}
!19716 = !DILocation(line: 47, column: 18, scope: !19672)
!19717 = !DILocation(line: 50, column: 12, scope: !19718)
!19718 = distinct !DILexicalBlock(scope: !19672, file: !19673, line: 49, column: 7)
!19719 = !DILocation(line: 50, column: 17, scope: !19718)
!19720 = !DILocation(line: 50, column: 15, scope: !19718)
!19721 = !DILocation(line: 50, column: 5, scope: !19718)
!19722 = !DILocation(line: 56, column: 1, scope: !19672)
!19723 = distinct !DISubprogram(name: "close_stream", scope: !19724, file: !19724, line: 56, type: !2152, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2149, retainedNodes: !313)
!19724 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19725 = !DILocalVariable(name: "stream", arg: 1, scope: !19723, file: !19724, line: 56, type: !2154)
!19726 = !DILocation(line: 56, column: 21, scope: !19723)
!19727 = !DILocalVariable(name: "some_pending", scope: !19723, file: !19724, line: 58, type: !102)
!19728 = !DILocation(line: 58, column: 14, scope: !19723)
!19729 = !DILocation(line: 58, column: 42, scope: !19723)
!19730 = !DILocation(line: 58, column: 30, scope: !19723)
!19731 = !DILocation(line: 58, column: 50, scope: !19723)
!19732 = !DILocalVariable(name: "prev_fail", scope: !19723, file: !19724, line: 59, type: !102)
!19733 = !DILocation(line: 59, column: 14, scope: !19723)
!19734 = !DILocation(line: 59, column: 27, scope: !19723)
!19735 = !DILocation(line: 59, column: 43, scope: !19723)
!19736 = !DILocalVariable(name: "fclose_fail", scope: !19723, file: !19724, line: 60, type: !102)
!19737 = !DILocation(line: 60, column: 14, scope: !19723)
!19738 = !DILocation(line: 60, column: 37, scope: !19723)
!19739 = !DILocation(line: 60, column: 29, scope: !19723)
!19740 = !DILocation(line: 60, column: 45, scope: !19723)
!19741 = !DILocation(line: 70, column: 7, scope: !19742)
!19742 = distinct !DILexicalBlock(scope: !19723, file: !19724, line: 70, column: 7)
!19743 = !DILocation(line: 70, column: 17, scope: !19742)
!19744 = !DILocation(line: 70, column: 21, scope: !19742)
!19745 = !DILocation(line: 70, column: 33, scope: !19742)
!19746 = !DILocation(line: 70, column: 37, scope: !19742)
!19747 = !DILocation(line: 70, column: 50, scope: !19742)
!19748 = !DILocation(line: 70, column: 53, scope: !19742)
!19749 = !DILocation(line: 70, column: 59, scope: !19742)
!19750 = !DILocation(line: 70, column: 7, scope: !19723)
!19751 = !DILocation(line: 72, column: 13, scope: !19752)
!19752 = distinct !DILexicalBlock(scope: !19753, file: !19724, line: 72, column: 11)
!19753 = distinct !DILexicalBlock(scope: !19742, file: !19724, line: 71, column: 5)
!19754 = !DILocation(line: 72, column: 11, scope: !19753)
!19755 = !DILocation(line: 73, column: 9, scope: !19752)
!19756 = !DILocation(line: 73, column: 15, scope: !19752)
!19757 = !DILocation(line: 74, column: 7, scope: !19753)
!19758 = !DILocation(line: 77, column: 3, scope: !19723)
!19759 = !DILocation(line: 78, column: 1, scope: !19723)
!19760 = distinct !DISubprogram(name: "dtotimespec", scope: !19761, file: !19761, line: 30, type: !2191, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2188, retainedNodes: !313)
!19761 = !DIFile(filename: "lib/dtotimespec.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19762 = !DILocalVariable(name: "sec", arg: 1, scope: !19760, file: !19761, line: 30, type: !377)
!19763 = !DILocation(line: 30, column: 21, scope: !19760)
!19764 = !DILocation(line: 32, column: 34, scope: !19765)
!19765 = distinct !DILexicalBlock(scope: !19760, file: !19761, line: 32, column: 7)
!19766 = !DILocation(line: 32, column: 32, scope: !19765)
!19767 = !DILocation(line: 32, column: 7, scope: !19760)
!19768 = !DILocation(line: 33, column: 12, scope: !19765)
!19769 = !DILocation(line: 33, column: 5, scope: !19765)
!19770 = !DILocation(line: 34, column: 15, scope: !19771)
!19771 = distinct !DILexicalBlock(scope: !19765, file: !19761, line: 34, column: 12)
!19772 = !DILocation(line: 34, column: 19, scope: !19771)
!19773 = !DILocation(line: 34, column: 12, scope: !19765)
!19774 = !DILocation(line: 35, column: 12, scope: !19771)
!19775 = !DILocation(line: 35, column: 5, scope: !19771)
!19776 = !DILocalVariable(name: "s", scope: !19777, file: !19761, line: 38, type: !2122)
!19777 = distinct !DILexicalBlock(scope: !19771, file: !19761, line: 37, column: 5)
!19778 = !DILocation(line: 38, column: 14, scope: !19777)
!19779 = !DILocation(line: 38, column: 18, scope: !19777)
!19780 = !DILocalVariable(name: "frac", scope: !19777, file: !19761, line: 39, type: !377)
!19781 = !DILocation(line: 39, column: 14, scope: !19777)
!19782 = !DILocation(line: 39, column: 36, scope: !19777)
!19783 = !DILocation(line: 39, column: 42, scope: !19777)
!19784 = !DILocation(line: 39, column: 40, scope: !19777)
!19785 = !DILocation(line: 39, column: 33, scope: !19777)
!19786 = !DILocalVariable(name: "ns", scope: !19777, file: !19761, line: 40, type: !31)
!19787 = !DILocation(line: 40, column: 12, scope: !19777)
!19788 = !DILocation(line: 40, column: 17, scope: !19777)
!19789 = !DILocation(line: 41, column: 13, scope: !19777)
!19790 = !DILocation(line: 41, column: 18, scope: !19777)
!19791 = !DILocation(line: 41, column: 16, scope: !19777)
!19792 = !DILocation(line: 41, column: 10, scope: !19777)
!19793 = !DILocation(line: 42, column: 12, scope: !19777)
!19794 = !DILocation(line: 42, column: 15, scope: !19777)
!19795 = !DILocation(line: 42, column: 9, scope: !19777)
!19796 = !DILocation(line: 43, column: 10, scope: !19777)
!19797 = !DILocation(line: 45, column: 11, scope: !19798)
!19798 = distinct !DILexicalBlock(scope: !19777, file: !19761, line: 45, column: 11)
!19799 = !DILocation(line: 45, column: 14, scope: !19798)
!19800 = !DILocation(line: 45, column: 11, scope: !19777)
!19801 = !DILocation(line: 47, column: 12, scope: !19802)
!19802 = distinct !DILexicalBlock(scope: !19798, file: !19761, line: 46, column: 9)
!19803 = !DILocation(line: 48, column: 14, scope: !19802)
!19804 = !DILocation(line: 49, column: 9, scope: !19802)
!19805 = !DILocation(line: 51, column: 29, scope: !19777)
!19806 = !DILocation(line: 51, column: 32, scope: !19777)
!19807 = !DILocation(line: 51, column: 14, scope: !19777)
!19808 = !DILocation(line: 51, column: 7, scope: !19777)
!19809 = !DILocation(line: 53, column: 1, scope: !19760)
!19810 = distinct !DISubprogram(name: "fd_safer_flag", scope: !19811, file: !19811, line: 40, type: !1342, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2197, retainedNodes: !313)
!19811 = !DIFile(filename: "lib/fd-safer-flag.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19812 = !DILocalVariable(name: "fd", arg: 1, scope: !19810, file: !19811, line: 40, type: !7)
!19813 = !DILocation(line: 40, column: 20, scope: !19810)
!19814 = !DILocalVariable(name: "flag", arg: 2, scope: !19810, file: !19811, line: 40, type: !7)
!19815 = !DILocation(line: 40, column: 28, scope: !19810)
!19816 = !DILocation(line: 42, column: 23, scope: !19817)
!19817 = distinct !DILexicalBlock(scope: !19810, file: !19811, line: 42, column: 7)
!19818 = !DILocation(line: 42, column: 20, scope: !19817)
!19819 = !DILocation(line: 42, column: 26, scope: !19817)
!19820 = !DILocation(line: 42, column: 29, scope: !19817)
!19821 = !DILocation(line: 42, column: 32, scope: !19817)
!19822 = !DILocation(line: 42, column: 7, scope: !19810)
!19823 = !DILocalVariable(name: "f", scope: !19824, file: !19811, line: 44, type: !7)
!19824 = distinct !DILexicalBlock(scope: !19817, file: !19811, line: 43, column: 5)
!19825 = !DILocation(line: 44, column: 11, scope: !19824)
!19826 = !DILocation(line: 44, column: 31, scope: !19824)
!19827 = !DILocation(line: 44, column: 35, scope: !19824)
!19828 = !DILocation(line: 44, column: 15, scope: !19824)
!19829 = !DILocalVariable(name: "e", scope: !19824, file: !19811, line: 45, type: !7)
!19830 = !DILocation(line: 45, column: 11, scope: !19824)
!19831 = !DILocation(line: 45, column: 15, scope: !19824)
!19832 = !DILocation(line: 46, column: 14, scope: !19824)
!19833 = !DILocation(line: 46, column: 7, scope: !19824)
!19834 = !DILocation(line: 47, column: 15, scope: !19824)
!19835 = !DILocation(line: 47, column: 7, scope: !19824)
!19836 = !DILocation(line: 47, column: 13, scope: !19824)
!19837 = !DILocation(line: 48, column: 12, scope: !19824)
!19838 = !DILocation(line: 48, column: 10, scope: !19824)
!19839 = !DILocation(line: 49, column: 5, scope: !19824)
!19840 = !DILocation(line: 51, column: 10, scope: !19810)
!19841 = !DILocation(line: 51, column: 3, scope: !19810)
!19842 = distinct !DISubprogram(name: "dup_safer_flag", scope: !19843, file: !19843, line: 34, type: !1342, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2200, retainedNodes: !313)
!19843 = !DIFile(filename: "lib/dup-safer-flag.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19844 = !DILocalVariable(name: "fd", arg: 1, scope: !19842, file: !19843, line: 34, type: !7)
!19845 = !DILocation(line: 34, column: 21, scope: !19842)
!19846 = !DILocalVariable(name: "flag", arg: 2, scope: !19842, file: !19843, line: 34, type: !7)
!19847 = !DILocation(line: 34, column: 29, scope: !19842)
!19848 = !DILocation(line: 36, column: 17, scope: !19842)
!19849 = !DILocation(line: 36, column: 22, scope: !19842)
!19850 = !DILocation(line: 36, column: 27, scope: !19842)
!19851 = !DILocation(line: 36, column: 21, scope: !19842)
!19852 = !DILocation(line: 36, column: 10, scope: !19842)
!19853 = !DILocation(line: 36, column: 3, scope: !19842)
!19854 = distinct !DISubprogram(name: "fopen_safer", scope: !19855, file: !19855, line: 31, type: !2206, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2203, retainedNodes: !313)
!19855 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19856 = !DILocalVariable(name: "file", arg: 1, scope: !19854, file: !19855, line: 31, type: !88)
!19857 = !DILocation(line: 31, column: 26, scope: !19854)
!19858 = !DILocalVariable(name: "mode", arg: 2, scope: !19854, file: !19855, line: 31, type: !88)
!19859 = !DILocation(line: 31, column: 44, scope: !19854)
!19860 = !DILocalVariable(name: "fp", scope: !19854, file: !19855, line: 33, type: !2208)
!19861 = !DILocation(line: 33, column: 9, scope: !19854)
!19862 = !DILocation(line: 33, column: 21, scope: !19854)
!19863 = !DILocation(line: 33, column: 27, scope: !19854)
!19864 = !DILocation(line: 33, column: 14, scope: !19854)
!19865 = !DILocation(line: 35, column: 7, scope: !19866)
!19866 = distinct !DILexicalBlock(scope: !19854, file: !19855, line: 35, column: 7)
!19867 = !DILocation(line: 35, column: 7, scope: !19854)
!19868 = !DILocalVariable(name: "fd", scope: !19869, file: !19855, line: 37, type: !7)
!19869 = distinct !DILexicalBlock(scope: !19866, file: !19855, line: 36, column: 5)
!19870 = !DILocation(line: 37, column: 11, scope: !19869)
!19871 = !DILocation(line: 37, column: 24, scope: !19869)
!19872 = !DILocation(line: 37, column: 16, scope: !19869)
!19873 = !DILocation(line: 39, column: 16, scope: !19874)
!19874 = distinct !DILexicalBlock(scope: !19869, file: !19855, line: 39, column: 11)
!19875 = !DILocation(line: 39, column: 13, scope: !19874)
!19876 = !DILocation(line: 39, column: 19, scope: !19874)
!19877 = !DILocation(line: 39, column: 22, scope: !19874)
!19878 = !DILocation(line: 39, column: 25, scope: !19874)
!19879 = !DILocation(line: 39, column: 11, scope: !19869)
!19880 = !DILocalVariable(name: "f", scope: !19881, file: !19855, line: 41, type: !7)
!19881 = distinct !DILexicalBlock(scope: !19874, file: !19855, line: 40, column: 9)
!19882 = !DILocation(line: 41, column: 15, scope: !19881)
!19883 = !DILocation(line: 41, column: 30, scope: !19881)
!19884 = !DILocation(line: 41, column: 19, scope: !19881)
!19885 = !DILocation(line: 43, column: 15, scope: !19886)
!19886 = distinct !DILexicalBlock(scope: !19881, file: !19855, line: 43, column: 15)
!19887 = !DILocation(line: 43, column: 17, scope: !19886)
!19888 = !DILocation(line: 43, column: 15, scope: !19881)
!19889 = !DILocalVariable(name: "e", scope: !19890, file: !19855, line: 45, type: !7)
!19890 = distinct !DILexicalBlock(scope: !19886, file: !19855, line: 44, column: 13)
!19891 = !DILocation(line: 45, column: 19, scope: !19890)
!19892 = !DILocation(line: 45, column: 23, scope: !19890)
!19893 = !DILocation(line: 46, column: 23, scope: !19890)
!19894 = !DILocation(line: 46, column: 15, scope: !19890)
!19895 = !DILocation(line: 47, column: 23, scope: !19890)
!19896 = !DILocation(line: 47, column: 15, scope: !19890)
!19897 = !DILocation(line: 47, column: 21, scope: !19890)
!19898 = !DILocation(line: 48, column: 15, scope: !19890)
!19899 = !DILocation(line: 51, column: 23, scope: !19900)
!19900 = distinct !DILexicalBlock(scope: !19881, file: !19855, line: 51, column: 15)
!19901 = !DILocation(line: 51, column: 15, scope: !19900)
!19902 = !DILocation(line: 51, column: 27, scope: !19900)
!19903 = !DILocation(line: 52, column: 15, scope: !19900)
!19904 = !DILocation(line: 52, column: 34, scope: !19900)
!19905 = !DILocation(line: 52, column: 37, scope: !19900)
!19906 = !DILocation(line: 52, column: 26, scope: !19900)
!19907 = !DILocation(line: 52, column: 24, scope: !19900)
!19908 = !DILocation(line: 51, column: 15, scope: !19881)
!19909 = !DILocalVariable(name: "e", scope: !19910, file: !19855, line: 54, type: !7)
!19910 = distinct !DILexicalBlock(scope: !19900, file: !19855, line: 53, column: 13)
!19911 = !DILocation(line: 54, column: 19, scope: !19910)
!19912 = !DILocation(line: 54, column: 23, scope: !19910)
!19913 = !DILocation(line: 55, column: 22, scope: !19910)
!19914 = !DILocation(line: 55, column: 15, scope: !19910)
!19915 = !DILocation(line: 56, column: 23, scope: !19910)
!19916 = !DILocation(line: 56, column: 15, scope: !19910)
!19917 = !DILocation(line: 56, column: 21, scope: !19910)
!19918 = !DILocation(line: 57, column: 15, scope: !19910)
!19919 = !DILocation(line: 59, column: 9, scope: !19881)
!19920 = !DILocation(line: 60, column: 5, scope: !19869)
!19921 = !DILocation(line: 62, column: 10, scope: !19854)
!19922 = !DILocation(line: 62, column: 3, scope: !19854)
!19923 = !DILocation(line: 63, column: 1, scope: !19854)
!19924 = distinct !DISubprogram(name: "locale_charset", scope: !19925, file: !19925, line: 687, type: !2245, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2242, retainedNodes: !313)
!19925 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19926 = !DILocalVariable(name: "codeset", scope: !19924, file: !19925, line: 689, type: !88)
!19927 = !DILocation(line: 689, column: 15, scope: !19924)
!19928 = !DILocation(line: 696, column: 13, scope: !19924)
!19929 = !DILocation(line: 696, column: 11, scope: !19924)
!19930 = !DILocation(line: 754, column: 7, scope: !19931)
!19931 = distinct !DILexicalBlock(scope: !19924, file: !19925, line: 754, column: 7)
!19932 = !DILocation(line: 754, column: 15, scope: !19931)
!19933 = !DILocation(line: 754, column: 7, scope: !19924)
!19934 = !DILocation(line: 756, column: 13, scope: !19931)
!19935 = !DILocation(line: 756, column: 5, scope: !19931)
!19936 = !DILocation(line: 907, column: 13, scope: !19937)
!19937 = distinct !DILexicalBlock(scope: !19938, file: !19925, line: 907, column: 13)
!19938 = distinct !DILexicalBlock(scope: !19939, file: !19925, line: 897, column: 7)
!19939 = distinct !DILexicalBlock(scope: !19924, file: !19925, line: 856, column: 3)
!19940 = !DILocation(line: 907, column: 24, scope: !19937)
!19941 = !DILocation(line: 907, column: 13, scope: !19938)
!19942 = !DILocation(line: 908, column: 19, scope: !19937)
!19943 = !DILocation(line: 908, column: 11, scope: !19937)
!19944 = !DILocation(line: 995, column: 10, scope: !19924)
!19945 = !DILocation(line: 995, column: 3, scope: !19924)
!19946 = distinct !DISubprogram(name: "memcoll", scope: !19947, file: !19947, line: 66, type: !1927, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2246, retainedNodes: !313)
!19947 = !DIFile(filename: "lib/memcoll.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19948 = !DILocalVariable(name: "s1", arg: 1, scope: !19946, file: !19947, line: 66, type: !9)
!19949 = !DILocation(line: 66, column: 16, scope: !19946)
!19950 = !DILocalVariable(name: "s1len", arg: 2, scope: !19946, file: !19947, line: 66, type: !55)
!19951 = !DILocation(line: 66, column: 27, scope: !19946)
!19952 = !DILocalVariable(name: "s2", arg: 3, scope: !19946, file: !19947, line: 66, type: !9)
!19953 = !DILocation(line: 66, column: 40, scope: !19946)
!19954 = !DILocalVariable(name: "s2len", arg: 4, scope: !19946, file: !19947, line: 66, type: !55)
!19955 = !DILocation(line: 66, column: 51, scope: !19946)
!19956 = !DILocalVariable(name: "diff", scope: !19946, file: !19947, line: 68, type: !7)
!19957 = !DILocation(line: 68, column: 7, scope: !19946)
!19958 = !DILocation(line: 74, column: 7, scope: !19959)
!19959 = distinct !DILexicalBlock(scope: !19946, file: !19947, line: 74, column: 7)
!19960 = !DILocation(line: 74, column: 16, scope: !19959)
!19961 = !DILocation(line: 74, column: 13, scope: !19959)
!19962 = !DILocation(line: 74, column: 22, scope: !19959)
!19963 = !DILocation(line: 74, column: 33, scope: !19959)
!19964 = !DILocation(line: 74, column: 37, scope: !19959)
!19965 = !DILocation(line: 74, column: 41, scope: !19959)
!19966 = !DILocation(line: 74, column: 25, scope: !19959)
!19967 = !DILocation(line: 74, column: 48, scope: !19959)
!19968 = !DILocation(line: 74, column: 7, scope: !19946)
!19969 = !DILocation(line: 76, column: 7, scope: !19970)
!19970 = distinct !DILexicalBlock(scope: !19959, file: !19947, line: 75, column: 5)
!19971 = !DILocation(line: 76, column: 13, scope: !19970)
!19972 = !DILocation(line: 77, column: 12, scope: !19970)
!19973 = !DILocation(line: 78, column: 5, scope: !19970)
!19974 = !DILocalVariable(name: "n1", scope: !19975, file: !19947, line: 81, type: !10)
!19975 = distinct !DILexicalBlock(scope: !19959, file: !19947, line: 80, column: 5)
!19976 = !DILocation(line: 81, column: 12, scope: !19975)
!19977 = !DILocation(line: 81, column: 17, scope: !19975)
!19978 = !DILocation(line: 81, column: 20, scope: !19975)
!19979 = !DILocalVariable(name: "n2", scope: !19975, file: !19947, line: 82, type: !10)
!19980 = !DILocation(line: 82, column: 12, scope: !19975)
!19981 = !DILocation(line: 82, column: 17, scope: !19975)
!19982 = !DILocation(line: 82, column: 20, scope: !19975)
!19983 = !DILocation(line: 84, column: 7, scope: !19975)
!19984 = !DILocation(line: 84, column: 10, scope: !19975)
!19985 = !DILocation(line: 84, column: 17, scope: !19975)
!19986 = !DILocation(line: 85, column: 7, scope: !19975)
!19987 = !DILocation(line: 85, column: 10, scope: !19975)
!19988 = !DILocation(line: 85, column: 17, scope: !19975)
!19989 = !DILocation(line: 87, column: 28, scope: !19975)
!19990 = !DILocation(line: 87, column: 32, scope: !19975)
!19991 = !DILocation(line: 87, column: 38, scope: !19975)
!19992 = !DILocation(line: 87, column: 43, scope: !19975)
!19993 = !DILocation(line: 87, column: 47, scope: !19975)
!19994 = !DILocation(line: 87, column: 53, scope: !19975)
!19995 = !DILocation(line: 87, column: 14, scope: !19975)
!19996 = !DILocation(line: 87, column: 12, scope: !19975)
!19997 = !DILocation(line: 89, column: 19, scope: !19975)
!19998 = !DILocation(line: 89, column: 7, scope: !19975)
!19999 = !DILocation(line: 89, column: 10, scope: !19975)
!20000 = !DILocation(line: 89, column: 17, scope: !19975)
!20001 = !DILocation(line: 90, column: 19, scope: !19975)
!20002 = !DILocation(line: 90, column: 7, scope: !19975)
!20003 = !DILocation(line: 90, column: 10, scope: !19975)
!20004 = !DILocation(line: 90, column: 17, scope: !19975)
!20005 = !DILocation(line: 93, column: 10, scope: !19946)
!20006 = !DILocation(line: 93, column: 3, scope: !19946)
!20007 = distinct !DISubprogram(name: "strcoll_loop", scope: !19947, file: !19947, line: 35, type: !1517, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2246, retainedNodes: !313)
!20008 = !DILocalVariable(name: "s1", arg: 1, scope: !20007, file: !19947, line: 35, type: !88)
!20009 = !DILocation(line: 35, column: 27, scope: !20007)
!20010 = !DILocalVariable(name: "s1size", arg: 2, scope: !20007, file: !19947, line: 35, type: !55)
!20011 = !DILocation(line: 35, column: 38, scope: !20007)
!20012 = !DILocalVariable(name: "s2", arg: 3, scope: !20007, file: !19947, line: 35, type: !88)
!20013 = !DILocation(line: 35, column: 58, scope: !20007)
!20014 = !DILocalVariable(name: "s2size", arg: 4, scope: !20007, file: !19947, line: 35, type: !55)
!20015 = !DILocation(line: 35, column: 69, scope: !20007)
!20016 = !DILocalVariable(name: "diff", scope: !20007, file: !19947, line: 37, type: !7)
!20017 = !DILocation(line: 37, column: 7, scope: !20007)
!20018 = !DILocation(line: 39, column: 3, scope: !20007)
!20019 = !DILocation(line: 39, column: 13, scope: !20007)
!20020 = !DILocation(line: 39, column: 19, scope: !20007)
!20021 = !DILocation(line: 39, column: 41, scope: !20007)
!20022 = !DILocation(line: 39, column: 45, scope: !20007)
!20023 = !DILocation(line: 39, column: 32, scope: !20007)
!20024 = !DILocation(line: 39, column: 30, scope: !20007)
!20025 = !DILocation(line: 39, column: 50, scope: !20007)
!20026 = !DILocation(line: 39, column: 53, scope: !20007)
!20027 = !DILocation(line: 39, column: 10, scope: !20007)
!20028 = !DILocalVariable(name: "size1", scope: !20029, file: !19947, line: 44, type: !55)
!20029 = distinct !DILexicalBlock(scope: !20007, file: !19947, line: 40, column: 5)
!20030 = !DILocation(line: 44, column: 14, scope: !20029)
!20031 = !DILocation(line: 44, column: 30, scope: !20029)
!20032 = !DILocation(line: 44, column: 22, scope: !20029)
!20033 = !DILocation(line: 44, column: 34, scope: !20029)
!20034 = !DILocalVariable(name: "size2", scope: !20029, file: !19947, line: 45, type: !55)
!20035 = !DILocation(line: 45, column: 14, scope: !20029)
!20036 = !DILocation(line: 45, column: 30, scope: !20029)
!20037 = !DILocation(line: 45, column: 22, scope: !20029)
!20038 = !DILocation(line: 45, column: 34, scope: !20029)
!20039 = !DILocation(line: 46, column: 13, scope: !20029)
!20040 = !DILocation(line: 46, column: 10, scope: !20029)
!20041 = !DILocation(line: 47, column: 13, scope: !20029)
!20042 = !DILocation(line: 47, column: 10, scope: !20029)
!20043 = !DILocation(line: 48, column: 17, scope: !20029)
!20044 = !DILocation(line: 48, column: 14, scope: !20029)
!20045 = !DILocation(line: 49, column: 17, scope: !20029)
!20046 = !DILocation(line: 49, column: 14, scope: !20029)
!20047 = !DILocation(line: 51, column: 11, scope: !20048)
!20048 = distinct !DILexicalBlock(scope: !20029, file: !19947, line: 51, column: 11)
!20049 = !DILocation(line: 51, column: 18, scope: !20048)
!20050 = !DILocation(line: 51, column: 11, scope: !20029)
!20051 = !DILocation(line: 52, column: 19, scope: !20048)
!20052 = !DILocation(line: 52, column: 26, scope: !20048)
!20053 = !DILocation(line: 52, column: 16, scope: !20048)
!20054 = !DILocation(line: 52, column: 9, scope: !20048)
!20055 = !DILocation(line: 53, column: 11, scope: !20056)
!20056 = distinct !DILexicalBlock(scope: !20029, file: !19947, line: 53, column: 11)
!20057 = !DILocation(line: 53, column: 18, scope: !20056)
!20058 = !DILocation(line: 53, column: 11, scope: !20029)
!20059 = !DILocation(line: 54, column: 9, scope: !20056)
!20060 = distinct !{!20060, !20018, !20061}
!20061 = !DILocation(line: 55, column: 5, scope: !20007)
!20062 = !DILocation(line: 57, column: 10, scope: !20007)
!20063 = !DILocation(line: 57, column: 3, scope: !20007)
!20064 = !DILocation(line: 58, column: 1, scope: !20007)
!20065 = distinct !DISubprogram(name: "memcoll0", scope: !19947, file: !19947, line: 102, type: !1517, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2246, retainedNodes: !313)
!20066 = !DILocalVariable(name: "s1", arg: 1, scope: !20065, file: !19947, line: 102, type: !88)
!20067 = !DILocation(line: 102, column: 23, scope: !20065)
!20068 = !DILocalVariable(name: "s1size", arg: 2, scope: !20065, file: !19947, line: 102, type: !55)
!20069 = !DILocation(line: 102, column: 34, scope: !20065)
!20070 = !DILocalVariable(name: "s2", arg: 3, scope: !20065, file: !19947, line: 102, type: !88)
!20071 = !DILocation(line: 102, column: 54, scope: !20065)
!20072 = !DILocalVariable(name: "s2size", arg: 4, scope: !20065, file: !19947, line: 102, type: !55)
!20073 = !DILocation(line: 102, column: 65, scope: !20065)
!20074 = !DILocation(line: 104, column: 7, scope: !20075)
!20075 = distinct !DILexicalBlock(scope: !20065, file: !19947, line: 104, column: 7)
!20076 = !DILocation(line: 104, column: 17, scope: !20075)
!20077 = !DILocation(line: 104, column: 14, scope: !20075)
!20078 = !DILocation(line: 104, column: 24, scope: !20075)
!20079 = !DILocation(line: 104, column: 35, scope: !20075)
!20080 = !DILocation(line: 104, column: 39, scope: !20075)
!20081 = !DILocation(line: 104, column: 43, scope: !20075)
!20082 = !DILocation(line: 104, column: 27, scope: !20075)
!20083 = !DILocation(line: 104, column: 51, scope: !20075)
!20084 = !DILocation(line: 104, column: 7, scope: !20065)
!20085 = !DILocation(line: 106, column: 7, scope: !20086)
!20086 = distinct !DILexicalBlock(scope: !20075, file: !19947, line: 105, column: 5)
!20087 = !DILocation(line: 106, column: 13, scope: !20086)
!20088 = !DILocation(line: 107, column: 7, scope: !20086)
!20089 = !DILocation(line: 110, column: 26, scope: !20075)
!20090 = !DILocation(line: 110, column: 30, scope: !20075)
!20091 = !DILocation(line: 110, column: 38, scope: !20075)
!20092 = !DILocation(line: 110, column: 42, scope: !20075)
!20093 = !DILocation(line: 110, column: 12, scope: !20075)
!20094 = !DILocation(line: 110, column: 5, scope: !20075)
!20095 = !DILocation(line: 111, column: 1, scope: !20065)
!20096 = distinct !DISubprogram(name: "make_timespec", scope: !20097, file: !20097, line: 54, type: !2252, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2249, retainedNodes: !313)
!20097 = !DIFile(filename: "./lib/timespec.h", directory: "/home/mbarbar/software/coreutils-8.31")
!20098 = !DILocalVariable(name: "s", arg: 1, scope: !20096, file: !20097, line: 54, type: !2122)
!20099 = !DILocation(line: 54, column: 23, scope: !20096)
!20100 = !DILocalVariable(name: "ns", arg: 2, scope: !20096, file: !20097, line: 54, type: !31)
!20101 = !DILocation(line: 54, column: 35, scope: !20096)
!20102 = !DILocalVariable(name: "r", scope: !20096, file: !20097, line: 56, type: !2254)
!20103 = !DILocation(line: 56, column: 19, scope: !20096)
!20104 = !DILocation(line: 57, column: 14, scope: !20096)
!20105 = !DILocation(line: 57, column: 5, scope: !20096)
!20106 = !DILocation(line: 57, column: 12, scope: !20096)
!20107 = !DILocation(line: 58, column: 15, scope: !20096)
!20108 = !DILocation(line: 58, column: 5, scope: !20096)
!20109 = !DILocation(line: 58, column: 13, scope: !20096)
!20110 = !DILocation(line: 59, column: 3, scope: !20096)
!20111 = distinct !DISubprogram(name: "timespec_cmp", scope: !20097, file: !20097, line: 89, type: !2258, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2249, retainedNodes: !313)
!20112 = !DILocalVariable(name: "a", arg: 1, scope: !20111, file: !20097, line: 89, type: !2254)
!20113 = !DILocation(line: 89, column: 31, scope: !20111)
!20114 = !DILocalVariable(name: "b", arg: 2, scope: !20111, file: !20097, line: 89, type: !2254)
!20115 = !DILocation(line: 89, column: 50, scope: !20111)
!20116 = !DILocation(line: 91, column: 9, scope: !20117)
!20117 = distinct !DILexicalBlock(scope: !20111, file: !20097, line: 91, column: 7)
!20118 = !DILocation(line: 91, column: 20, scope: !20117)
!20119 = !DILocation(line: 91, column: 16, scope: !20117)
!20120 = !DILocation(line: 91, column: 7, scope: !20111)
!20121 = !DILocation(line: 92, column: 5, scope: !20117)
!20122 = !DILocation(line: 93, column: 9, scope: !20123)
!20123 = distinct !DILexicalBlock(scope: !20111, file: !20097, line: 93, column: 7)
!20124 = !DILocation(line: 93, column: 20, scope: !20123)
!20125 = !DILocation(line: 93, column: 16, scope: !20123)
!20126 = !DILocation(line: 93, column: 7, scope: !20111)
!20127 = !DILocation(line: 94, column: 5, scope: !20123)
!20128 = !DILocation(line: 98, column: 3, scope: !20111)
!20129 = !DILocation(line: 99, column: 3, scope: !20111)
!20130 = !DILocation(line: 101, column: 12, scope: !20111)
!20131 = !DILocation(line: 101, column: 24, scope: !20111)
!20132 = !DILocation(line: 101, column: 20, scope: !20111)
!20133 = !DILocation(line: 101, column: 10, scope: !20111)
!20134 = !DILocation(line: 101, column: 3, scope: !20111)
!20135 = !DILocation(line: 102, column: 1, scope: !20111)
!20136 = distinct !DISubprogram(name: "timespec_sign", scope: !20097, file: !20097, line: 107, type: !2260, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2249, retainedNodes: !313)
!20137 = !DILocalVariable(name: "a", arg: 1, scope: !20136, file: !20097, line: 107, type: !2254)
!20138 = !DILocation(line: 107, column: 32, scope: !20136)
!20139 = !DILocation(line: 109, column: 12, scope: !20136)
!20140 = !DILocation(line: 109, column: 19, scope: !20136)
!20141 = !DILocation(line: 109, column: 10, scope: !20136)
!20142 = !DILocation(line: 109, column: 32, scope: !20136)
!20143 = !DILocation(line: 109, column: 30, scope: !20136)
!20144 = !DILocation(line: 109, column: 39, scope: !20136)
!20145 = !DILocation(line: 109, column: 44, scope: !20136)
!20146 = !DILocation(line: 109, column: 3, scope: !20136)
!20147 = distinct !DISubprogram(name: "timespectod", scope: !20097, file: !20097, line: 121, type: !2262, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2249, retainedNodes: !313)
!20148 = !DILocalVariable(name: "a", arg: 1, scope: !20147, file: !20097, line: 121, type: !2254)
!20149 = !DILocation(line: 121, column: 30, scope: !20147)
!20150 = !DILocation(line: 123, column: 12, scope: !20147)
!20151 = !DILocation(line: 123, column: 10, scope: !20147)
!20152 = !DILocation(line: 123, column: 23, scope: !20147)
!20153 = !DILocation(line: 123, column: 21, scope: !20147)
!20154 = !DILocation(line: 123, column: 31, scope: !20147)
!20155 = !DILocation(line: 123, column: 19, scope: !20147)
!20156 = !DILocation(line: 123, column: 3, scope: !20147)
!20157 = distinct !DISubprogram(name: "dup_safer", scope: !20158, file: !20158, line: 31, type: !1846, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2264, retainedNodes: !313)
!20158 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20159 = !DILocalVariable(name: "fd", arg: 1, scope: !20157, file: !20158, line: 31, type: !7)
!20160 = !DILocation(line: 31, column: 16, scope: !20157)
!20161 = !DILocation(line: 33, column: 17, scope: !20157)
!20162 = !DILocation(line: 33, column: 10, scope: !20157)
!20163 = !DILocation(line: 33, column: 3, scope: !20157)
